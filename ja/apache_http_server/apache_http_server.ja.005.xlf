<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="apache_http_server">
    <body>
      <group id="apache_http_server">
        <trans-unit id="bb6cac41d52cbd8ee69c1cfb5a085a41e48f65e0" translate="yes" xml:space="preserve">
          <source>HTTP/2 server pushes are always related to a client request. Each such request/response pairs, or &lt;em&gt;streams&lt;/em&gt; have a dependency and a weight, together defining the &lt;em&gt;priority&lt;/em&gt; of a stream.</source>
          <target state="translated">HTTP / 2サーバープッシュは常にクライアント要求に関連しています。 このような各要求/応答ペア、つまり&lt;em&gt;ストリーム&lt;/em&gt;には依存関係と重みがあり、ストリームの&lt;em&gt;優先順位&lt;/em&gt;を一緒に定義します。</target>
        </trans-unit>
        <trans-unit id="60ab758619ec5d5ac4d3b99027e865699f7300bc" translate="yes" xml:space="preserve">
          <source>HTTP/2 server pushes are enabled by default. This directive allows it to be switch off on all resources of this server/virtual host.</source>
          <target state="translated">HTTP2 サーバプッシュはデフォルトで有効になっています。このディレクティブは、このサーババーチャルホストのすべてのリソースでスイッチオフにすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="06a23857342c9f3982518206da0e3f66d15b69bb" translate="yes" xml:space="preserve">
          <source>HTTP/2 stream number of this request.</source>
          <target state="translated">このリクエストの HTTP2 ストリーム番号。</target>
        </trans-unit>
        <trans-unit id="ff726c8d441d9bbc944b742d1859ec35ecdcf043" translate="yes" xml:space="preserve">
          <source>HTTP/2 stream number that triggered the push of this request.</source>
          <target state="translated">このリクエストのプッシュのトリガーとなった HTTP2 ストリーム番号。</target>
        </trans-unit>
        <trans-unit id="1c91b43fb3839e1fec2d2afc5fc8b125868eab02" translate="yes" xml:space="preserve">
          <source>HTTP/2 support module for &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; の HTTP / 2サポートモジュール</target>
        </trans-unit>
        <trans-unit id="f52698c28f0d2036450e02a85451ee4f5be02442" translate="yes" xml:space="preserve">
          <source>HTTPS</source>
          <target state="translated">HTTPS</target>
        </trans-unit>
        <trans-unit id="d675d242173bc8904643389b63bd9a1f8d917947" translate="yes" xml:space="preserve">
          <source>HTTPS is being used.</source>
          <target state="translated">HTTPSを使用しています。</target>
        </trans-unit>
        <trans-unit id="6731e1bf7c1be4f32f70d3fa00945801bb384421" translate="yes" xml:space="preserve">
          <source>HTTP_ACCEPT</source>
          <target state="translated">HTTP_ACCEPT</target>
        </trans-unit>
        <trans-unit id="0dba9dd62e8de10148bd0d4a5232cd0b8e4c5769" translate="yes" xml:space="preserve">
          <source>HTTP_COOKIE</source>
          <target state="translated">HTTP_COOKIE</target>
        </trans-unit>
        <trans-unit id="f4ed377c2080bcfd90adad1bbfe710b89a218d5b" translate="yes" xml:space="preserve">
          <source>HTTP_FORWARDED</source>
          <target state="translated">HTTP_FORWARDED</target>
        </trans-unit>
        <trans-unit id="5602439cd9887bd232d98c6582bea73536d9ce34" translate="yes" xml:space="preserve">
          <source>HTTP_HOST</source>
          <target state="translated">HTTP_HOST</target>
        </trans-unit>
        <trans-unit id="a7b9357a2dd69d44d624b0e1bc6a1e955ed072f7" translate="yes" xml:space="preserve">
          <source>HTTP_PROXY_CONNECTION</source>
          <target state="translated">HTTP_PROXY_CONNECTION</target>
        </trans-unit>
        <trans-unit id="152d307df2e629814d925e0d13d7a9337802aafd" translate="yes" xml:space="preserve">
          <source>HTTP_REFERER</source>
          <target state="translated">HTTP_REFERER</target>
        </trans-unit>
        <trans-unit id="14bcb7db42bfb9266aa21941303cc0cd6ca135ca" translate="yes" xml:space="preserve">
          <source>HTTP_USER_AGENT</source>
          <target state="translated">HTTP_USER_AGENT</target>
        </trans-unit>
        <trans-unit id="cf4c2dd5b8098515b79eab53b65cd22379bf6672" translate="yes" xml:space="preserve">
          <source>Had severe limitations before being moved to &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; in version 2.3.7</source>
          <target state="translated">バージョン2.3.7で &lt;code&gt;&lt;a href=&quot;mod_filter&quot;&gt;mod_filter&lt;/a&gt;&lt;/code&gt; に移動する前に重大な制限がありました</target>
        </trans-unit>
        <trans-unit id="362f233bfd36bbe9ffba21ece507104cececa24e" translate="yes" xml:space="preserve">
          <source>Handlers</source>
          <target state="translated">Handlers</target>
        </trans-unit>
        <trans-unit id="4c163dd50c47c48934daf52cc526413bb8e493cf" translate="yes" xml:space="preserve">
          <source>Handlers can either be built into the server or included in a module, or they can be added with the &lt;code&gt;&lt;a href=&quot;mod/mod_actions#action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; directive. The built-in handlers in the standard distribution are as follows:</source>
          <target state="translated">ハンドラーは、サーバーに組み込むか、モジュールに含めるか、または &lt;code&gt;&lt;a href=&quot;mod/mod_actions#action&quot;&gt;Action&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して追加できます。 標準ディストリビューションの組み込みハンドラーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6ce71b1ebbf6d24a2a7f1d0b79dd38f930b29a50" translate="yes" xml:space="preserve">
          <source>Handlers may also be configured explicitly, based on either filename extensions or on location, without relation to file type. This is advantageous both because it is a more elegant solution, and because it also allows for both a type &lt;strong&gt;and&lt;/strong&gt; a handler to be associated with a file. (See also &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;Files with Multiple Extensions&lt;/a&gt;.)</source>
          <target state="translated">ハンドラーは、ファイルの種類に関係なく、ファイル名の拡張子または場所に基づいて明示的に構成することもできます。 これは、より洗練されたソリューションであることと、タイプ&lt;strong&gt;と&lt;/strong&gt;ハンドラーの両方をファイルに関連付けることができるため、有利です。 （ &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;複数の拡張子を持つファイル&lt;/a&gt;も参照してください。）</target>
        </trans-unit>
        <trans-unit id="9ae5aaa9d233f0ff958c4e17c37701d0a3441e63" translate="yes" xml:space="preserve">
          <source>Handler|H=&lt;em&gt;Content-handler&lt;/em&gt;</source>
          <target state="translated">Handler|H=&lt;em&gt;Content-handler&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="421501075ec8b6ee0031a94b7a9628f7721d85fa" translate="yes" xml:space="preserve">
          <source>Handshake Sequence Protocol</source>
          <target state="translated">ハンドシェイクシーケンスプロトコル</target>
        </trans-unit>
        <trans-unit id="d997669d03ea82d03236a2995da89d1be2664c1a" translate="yes" xml:space="preserve">
          <source>Hardware and Operating System Issues</source>
          <target state="translated">ハードウェアとオペレーティングシステムの問題</target>
        </trans-unit>
        <trans-unit id="ab764962089f32b0125a0fb7a8725880e562b950" translate="yes" xml:space="preserve">
          <source>Has e&lt;strong&gt;x&lt;/strong&gt;ecutable permissions.</source>
          <target state="translated">e &lt;strong&gt;x&lt;/strong&gt;実行可能な権限があります。</target>
        </trans-unit>
        <trans-unit id="8336462af6a84411ec1bd42847ff1b1608ad98c4" translate="yes" xml:space="preserve">
          <source>Has the effect of &lt;code&gt;&amp;lt;base href=&quot;value&quot;&amp;gt;&lt;/code&gt;. The non-absolute URLs of the map-file are taken relative to this value. The &lt;code&gt;base&lt;/code&gt; directive overrides &lt;code&gt;&lt;a href=&quot;#imapbase&quot;&gt;ImapBase&lt;/a&gt;&lt;/code&gt; as set in a &lt;code&gt;.htaccess&lt;/code&gt; file or in the server configuration files. In the absence of an &lt;code&gt;ImapBase&lt;/code&gt; configuration directive, &lt;code&gt;base&lt;/code&gt; defaults to &lt;code&gt;http://server_name/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;base href=&quot;value&quot;&amp;gt;&lt;/code&gt; の効果があります。 map-fileの非絶対URLは、この値を基準にして取得されます。 &lt;code&gt;base&lt;/code&gt; ディレクティブは、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルまたはサーバー構成ファイルで設定された &lt;code&gt;&lt;a href=&quot;#imapbase&quot;&gt;ImapBase&lt;/a&gt;&lt;/code&gt; をオーバーライドします。 &lt;code&gt;ImapBase&lt;/code&gt; 構成ディレクティブがない場合、 &lt;code&gt;base&lt;/code&gt; はデフォルトで &lt;code&gt;http://server_name/&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="ef7fba929c6c1b70ba4125218083ce43879c2d4d" translate="yes" xml:space="preserve">
          <source>Has the exact same behavior as:</source>
          <target state="translated">挙動が全く同じだ</target>
        </trans-unit>
        <trans-unit id="75dac585e8c1175f8d5fedc0e0fdd511453d3690" translate="yes" xml:space="preserve">
          <source>Hash the string using MD5, then encode the hash with hexadecimal encoding</source>
          <target state="translated">MD5 を使って文字列をハッシュ化し、16 進数エンコーディングでハッシュをエンコードします。</target>
        </trans-unit>
        <trans-unit id="b75971ea62319f935f0ca9cf56cdca93bed5a70e" translate="yes" xml:space="preserve">
          <source>Hash the string using SHA1, then encode the hash with hexadecimal encoding</source>
          <target state="translated">SHA1 を使用して文字列をハッシュ化し、16 進数エンコーディングでハッシュをエンコードします。</target>
        </trans-unit>
        <trans-unit id="364e4a3bbab57ccf5bff27c0970f25d30f22f504" translate="yes" xml:space="preserve">
          <source>Have a look at the Apache manual under &lt;code&gt;&lt;em&gt;PREFIX&lt;/em&gt;/docs/manual/&lt;/code&gt; or consult &lt;a href=&quot;http://httpd.apache.org/docs/2.4/&quot;&gt;http://httpd.apache.org/docs/2.4/&lt;/a&gt; for the most recent version of this manual and a complete reference of available &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/mod/directives.html&quot;&gt;configuration directives&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;PREFIX&lt;/em&gt;/docs/manual/&lt;/code&gt; にあるApacheマニュアルを参照するか、このマニュアルの最新バージョンと使用可能な&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/mod/directives.html&quot;&gt;構成ディレクティブの&lt;/a&gt;完全なリファレンスについては、 &lt;a href=&quot;http://httpd.apache.org/docs/2.4/&quot;&gt;http：//httpd.apache.org/docs/2.4/&lt;/a&gt;を参照してください 。</target>
        </trans-unit>
        <trans-unit id="e80fa5501887d15a0a538cb41220d4c5aade6032" translate="yes" xml:space="preserve">
          <source>Having said that, if you still think you need to use a &lt;code&gt;.htaccess&lt;/code&gt; file, you may find that a configuration such as what follows may work for you.</source>
          <target state="translated">それでも、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルを使用する必要があると思われる場合は、次のような構成が役立つことがあります。</target>
        </trans-unit>
        <trans-unit id="287753f565c03d60052581a820ad1ddc72ba21ea" translate="yes" xml:space="preserve">
          <source>Having to manually enter the passphrase when starting the server can be problematic - for example, when starting the server from the system boot scripts. In this case, you can follow the steps &lt;a href=&quot;#removepassphrase&quot;&gt;below&lt;/a&gt; to remove the passphrase from your private key. Bear in mind that doing so brings additional security risks - proceed with caution!</source>
          <target state="translated">サーバーの起動時にパスフレーズを手動で入力する必要がある場合、たとえば、システムの起動スクリプトからサーバーを起動する場合に問題が発生する可能性があります。 この場合、 &lt;a href=&quot;#removepassphrase&quot;&gt;以下&lt;/a&gt;の手順に従って、秘密鍵からパスフレーズを削除できます。 そうすることは追加のセキュリティリスクをもたらすことを覚えておいてください-注意して進めてください！</target>
        </trans-unit>
        <trans-unit id="31341c6f0c7af677ffb8fadcb92038e8ac2b6193" translate="yes" xml:space="preserve">
          <source>Header</source>
          <target state="translated">Header</target>
        </trans-unit>
        <trans-unit id="658c7a9e4f33b9362e6674ac3321d56900178e9c" translate="yes" xml:space="preserve">
          <source>Header Directive</source>
          <target state="translated">ヘッダー指令</target>
        </trans-unit>
        <trans-unit id="e659043e4449bc20f205a984b25ce70cff5951c5" translate="yes" xml:space="preserve">
          <source>Header row of listing</source>
          <target state="translated">リストのヘッダー行</target>
        </trans-unit>
        <trans-unit id="87a9f1c73fedae1d0d31f13194adecb5376a93c6" translate="yes" xml:space="preserve">
          <source>HeaderName</source>
          <target state="translated">HeaderName</target>
        </trans-unit>
        <trans-unit id="ccf31eb8470e5b9f2f076fa843601f2e05f5dcd8" translate="yes" xml:space="preserve">
          <source>HeaderName Directive</source>
          <target state="translated">HeaderName ディレクティブ</target>
        </trans-unit>
        <trans-unit id="520de7443d00d6ff4dc3ababbbf6cfbe0b74f4ec" translate="yes" xml:space="preserve">
          <source>Headers</source>
          <target state="translated">Headers</target>
        </trans-unit>
        <trans-unit id="c4ed55702fd20e907bd74b90713e2d299da0f2be" translate="yes" xml:space="preserve">
          <source>Headers and development files for the server.</source>
          <target state="translated">サーバーのヘッダと開発ファイル。</target>
        </trans-unit>
        <trans-unit id="9521df02c85dd51ae7493164f1a455f31e005564" translate="yes" xml:space="preserve">
          <source>Heartbeat Traffic Counting load balancer scheduler algorithm for &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; のハートビートトラフィックカウントロードバランサースケジューラアルゴリズム</target>
        </trans-unit>
        <trans-unit id="d46d102ab191ba394652055e389424998dfd9f3c" translate="yes" xml:space="preserve">
          <source>HeartbeatAddress Directive</source>
          <target state="translated">ハートビートアドレス指令</target>
        </trans-unit>
        <trans-unit id="a6d9b9624fbf0d2fced32c2916374eacd9c35c9f" translate="yes" xml:space="preserve">
          <source>HeartbeatListen Directive</source>
          <target state="translated">ハートビートリスン指令</target>
        </trans-unit>
        <trans-unit id="9b726dd1d54cfbd36b781a162d6d97522bf638ac" translate="yes" xml:space="preserve">
          <source>HeartbeatMaxServers Directive</source>
          <target state="translated">HeartbeatMaxServers ディレクティブ</target>
        </trans-unit>
        <trans-unit id="2e6205162f65726312f1a8ff4f5431dd6b752b35" translate="yes" xml:space="preserve">
          <source>HeartbeatStorage Directive</source>
          <target state="translated">ハートビート保存指令</target>
        </trans-unit>
        <trans-unit id="776742f407ff5071e73d918004abf0f79ae962fe" translate="yes" xml:space="preserve">
          <source>Helping with the documentation</source>
          <target state="translated">ドキュメンテーションのお手伝いをする</target>
        </trans-unit>
        <trans-unit id="e6d6adda270dbc8e999aabcd9e8cc8b12f5fe448" translate="yes" xml:space="preserve">
          <source>Here an external program is configured which is called at startup for each encrypted Private Key file. It is called with two arguments (the first is of the form ``&lt;code&gt;servername:portnumber&lt;/code&gt;'', the second is either ``&lt;code&gt;RSA&lt;/code&gt;'', ``&lt;code&gt;DSA&lt;/code&gt;'', ``&lt;code&gt;ECC&lt;/code&gt;'' or an integer index starting at 3 if more than three keys are configured), which indicate for which server and algorithm it has to print the corresponding Pass Phrase to &lt;code&gt;stdout&lt;/code&gt;. In versions 2.4.8 (unreleased) and 2.4.9, it is called with one argument, a string of the form ``&lt;code&gt;servername:portnumber:index&lt;/code&gt;'' (with &lt;code&gt;index&lt;/code&gt; being a zero-based integer number), which indicate the server, TCP port and certificate number. The intent is that this external program first runs security checks to make sure that the system is not compromised by an attacker, and only when these checks were passed successfully it provides the Pass Phrase.</source>
          <target state="translated">ここでは、暗号化された秘密鍵ファイルごとに起動時に呼び出される外部プログラムが設定されています。 これは2つの引数で呼び出されます（最初の形式は「 &lt;code&gt;servername:portnumber&lt;/code&gt; 」、2番目は「 &lt;code&gt;RSA&lt;/code&gt; 」、「 &lt;code&gt;DSA&lt;/code&gt; 」、「 &lt;code&gt;ECC&lt;/code&gt; 」、または3から始まる整数インデックスです。 4つ以上のキーが構成されている）。対応するパスフレーズを &lt;code&gt;stdout&lt;/code&gt; に出力する必要があるサーバーとアルゴリズムを示します。 バージョン2.4.8（未リリース）および2.4.9では、 &lt;code&gt;servername:portnumber:index&lt;/code&gt; 「 servername：portnumber：index 」という形式の文字列（ &lt;code&gt;index&lt;/code&gt; はゼロから始まる整数）の1つの引数で呼び出されます、TCPポートおよび証明書番号。 その意図は、この外部プログラムが最初にセキュリティチェックを実行して、システムが攻撃者によって危険にさらされていないことを確認し、これらのチェックに成功した場合にのみパスフレーズを提供することです。</target>
        </trans-unit>
        <trans-unit id="c5e202fea1dd094f66daaedceabf4e9f2743b350" translate="yes" xml:space="preserve">
          <source>Here are all possible substitution combinations and their meanings:</source>
          <target state="translated">ここでは、すべての可能な置換の組み合わせとその意味を示しています。</target>
        </trans-unit>
        <trans-unit id="2f3462965fa6182abab720e49f6d67b801a17ee2" translate="yes" xml:space="preserve">
          <source>Here is a snippet that avoids both of these problems:</source>
          <target state="translated">この両方の問題を回避したスニペットをご紹介します。</target>
        </trans-unit>
        <trans-unit id="9424c413d4c6c4dffe950a04608d109984fc6437" translate="yes" xml:space="preserve">
          <source>Here is a step-by-step description:</source>
          <target state="translated">ここでは、段階的に説明していきます。</target>
        </trans-unit>
        <trans-unit id="bb357664ec6ac11aa9e4f756a85e79233ec1dece" translate="yes" xml:space="preserve">
          <source>Here is a system call trace of Apache 2.0.38 with the worker MPM on Solaris 8. This trace was collected using:</source>
          <target state="translated">これは、Solaris 8 上のワーカー MPM を使用した Apache 2.0.38 のシステムコールトレースです。 このトレースは、以下を使用して収集されました。</target>
        </trans-unit>
        <trans-unit id="dfd48a1c181391f323b71ef42633c528ab7f8433" translate="yes" xml:space="preserve">
          <source>Here is the filter which traces the data:</source>
          <target state="translated">ここにデータをトレースするフィルターがあります。</target>
        </trans-unit>
        <trans-unit id="359343f34093411d151ba6058ce9c464d8b1087a" translate="yes" xml:space="preserve">
          <source>Here is where suEXEC ends and the target CGI/SSI program begins.</source>
          <target state="translated">ここで suEXEC が終了し、対象の CGISSI プログラムが開始されます。</target>
        </trans-unit>
        <trans-unit id="a8fa8212a7f2d763fa2ec4642a71e1dd135bb766" translate="yes" xml:space="preserve">
          <source>Here is where the program becomes the target user and group via setuid and setgid calls. The group access list is also initialized with all of the groups of which the user is a member.</source>
          <target state="translated">ここでは、setuid と setgid の呼び出しにより、プログラムが対象のユーザとグループになります。グループアクセスリストも、そのユーザが所属するすべてのグループで初期化されます。</target>
        </trans-unit>
        <trans-unit id="b2255a5e5410152775607a633c9a1cbe438345aa" translate="yes" xml:space="preserve">
          <source>Here some more examples of filenames together with valid and invalid hyperlinks:</source>
          <target state="translated">ここでは、有効なハイパーリンクと無効なハイパーリンクを含むファイル名の例をいくつか挙げています。</target>
        </trans-unit>
        <trans-unit id="56d564aefb7892f347028d4391988afd4a93c634" translate="yes" xml:space="preserve">
          <source>Here's an example of a file whose contents are sent &lt;em&gt;as is&lt;/em&gt; so as to tell the client that a file has redirected.</source>
          <target state="translated">ファイルがリダイレクトされたことをクライアントに通知するために、コンテンツが&lt;em&gt;そのまま&lt;/em&gt;送信さ&lt;em&gt;れる&lt;/em&gt;ファイルの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="7a66443452c08fe1457b3fa44a2ed515dc2724bd" translate="yes" xml:space="preserve">
          <source>Here's something else that you can do with the &lt;code&gt;exec&lt;/code&gt; function. You can actually have SSI execute a command using the shell (&lt;code&gt;/bin/sh&lt;/code&gt;, to be precise - or the DOS shell, if you're on Win32). The following, for example, will give you a directory listing.</source>
          <target state="translated">&lt;code&gt;exec&lt;/code&gt; 関数を使用して実行できる別の方法を次に示します。 実際には、シェル（正確には &lt;code&gt;/bin/sh&lt;/code&gt; 、またはWin32を使用している場合はDOSシェル）を使用してSSIにコマンドを実行させることができます。 たとえば、次の例では、ディレクトリリストが表示されます。</target>
        </trans-unit>
        <trans-unit id="2b48e4f298102a103a3f2cc0bce5b3e27001c939" translate="yes" xml:space="preserve">
          <source>Here's the basics of password protecting a directory on your server.</source>
          <target state="translated">ここでは、サーバー上のディレクトリをパスワードで保護するための基本的なことを説明します。</target>
        </trans-unit>
        <trans-unit id="fcb63b05da17099ea103dacda6cf946f7ca68f85" translate="yes" xml:space="preserve">
          <source>Here's where we begin the fun.</source>
          <target state="translated">ここからが楽しみの始まりです。</target>
        </trans-unit>
        <trans-unit id="edc0b9df416b9dc92b149104dd481b9874894483" translate="yes" xml:space="preserve">
          <source>Here, 'Unix' is used to mean Unix-like operating systems, such as Linux, BSD, Solaris, Mac OS X, etc.</source>
          <target state="translated">ここでは、「Unix」は、Linux、BSD、Solaris、Mac OS XなどのUnix系OSの意味で使われています。</target>
        </trans-unit>
        <trans-unit id="c01916b5c732a63f7576fd9c45f629fdbfdcb6a1" translate="yes" xml:space="preserve">
          <source>Hierarchy limitations</source>
          <target state="translated">階層制限</target>
        </trans-unit>
        <trans-unit id="5286bdb1658c80dbb084ac2e0ede1b1a597239b1" translate="yes" xml:space="preserve">
          <source>Historical note: The Linux port of Apache didn't start to use shared memory until version 1.2 of Apache. This oversight resulted in really poor and unreliable behavior of earlier versions of Apache on Linux.</source>
          <target state="translated">歴史的な注意:Apache の Linux 移植版では、Apache のバージョン 1.2 まで共有メモリの使用を開始しませんでした。この見落としが原因で、以前のバージョンの Apache の Linux 上での動作が本当に貧弱で信頼性が低いものになってしまいました。</target>
        </trans-unit>
        <trans-unit id="0faca42ef676d80c7e6b6a8f5cdf3222563c5efd" translate="yes" xml:space="preserve">
          <source>Historically, each filter is responsible for ensuring that whatever changes it makes are correctly represented in the HTTP response headers, and that it does not run when it would make an illegal change. This imposes a burden on filter authors to re-implement some common functionality in every filter:</source>
          <target state="translated">歴史的には、各フィルタは自分が行う変更が HTTP レスポンスヘッダで正しく表現されていることを保証し、 不正な変更を行うような場合にはフィルタを実行しないようにする責任があります。このため、すべてのフィルタに共通の機能を再実装する必要があり、 フィルタの作者に負担を強いることになります。</target>
        </trans-unit>
        <trans-unit id="36938e9f37fd7b443d03060d5f3b7177aa8e0043" translate="yes" xml:space="preserve">
          <source>Historically, there are several syntax variants for expressions used to express a condition in the different modules of the Apache HTTP Server. There is some ongoing effort to only use a single variant, called &lt;em&gt;ap_expr&lt;/em&gt;, for all configuration directives. This document describes the &lt;em&gt;ap_expr&lt;/em&gt; expression parser.</source>
          <target state="translated">歴史的に、Apache HTTPサーバーのさまざまなモジュールで条件を表すために使用される式には、いくつかの構文バリアントがあります。 すべての構成ディレクティブに対して、 &lt;em&gt;ap_expr&lt;/em&gt;と呼ばれる単一のバリアントのみを使用するための継続的な取り組みがあります。 このドキュメントでは、 &lt;em&gt;ap_expr&lt;/em&gt;式パーサーについて説明します。</target>
        </trans-unit>
        <trans-unit id="abcf7e70171472138bc3cb35b8e7cc94a592f771" translate="yes" xml:space="preserve">
          <source>Hook functions are how modules (and Lua scripts) participate in the processing of requests. Each type of hook exposed by the server exists for a specific purpose, such as mapping requests to the file system, performing access control, or setting mime types:</source>
          <target state="translated">フック機能とは、モジュール(とLuaスクリプト)がリクエストの処理に参加する方法のことです。サーバーが公開するフックは、リクエストをファイルシステムにマッピングしたり、アクセス制御を行ったり、マイムタイプを設定したりするなど、特定の目的のために存在します。</target>
        </trans-unit>
        <trans-unit id="b1607bcf3c2cdc3d29ef0df28d6b2d83a605e676" translate="yes" xml:space="preserve">
          <source>Hook functions are passed the request object as their only argument (except for LuaAuthzProvider, which also gets passed the arguments from the Require directive). They can return any value, depending on the hook, but most commonly they'll return OK, DONE, or DECLINED, which you can write in Lua as &lt;code&gt;apache2.OK&lt;/code&gt;, &lt;code&gt;apache2.DONE&lt;/code&gt;, or &lt;code&gt;apache2.DECLINED&lt;/code&gt;, or else an HTTP status code.</source>
          <target state="translated">フック関数には、リクエストオブジェクトが唯一の引数として渡されます（LuaAuthzProviderは例外であり、これもRequireディレクティブから引数が渡されます）。 フックに応じて任意の値を返すことができますが、通常はOK、DONE、またはDECLINEDを返します。これらはLuaに &lt;code&gt;apache2.OK&lt;/code&gt; 、 &lt;code&gt;apache2.DONE&lt;/code&gt; 、または &lt;code&gt;apache2.DECLINED&lt;/code&gt; 、またはHTTPステータスとして書き込むことができます。コード。</target>
        </trans-unit>
        <trans-unit id="45da0ac20c0f97123992cb5c7685f5ba1c4f14ea" translate="yes" xml:space="preserve">
          <source>Hook phase</source>
          <target state="translated">フック位相</target>
        </trans-unit>
        <trans-unit id="37dd35afe0de9b3584142b970f248216171d7e8c" translate="yes" xml:space="preserve">
          <source>Hopefully, end users will never see this message, because you will have resolved all the problems with your SSI directives before your site goes live. (Right?)</source>
          <target state="translated">うまくいけば、エンドユーザーがこのメッセージを見ることはないでしょう。(でしょうか?)</target>
        </trans-unit>
        <trans-unit id="f8a7ea3224d0208f6f8539cb5224ef442ee33b8d" translate="yes" xml:space="preserve">
          <source>Horizontal rule at the bottom of the table</source>
          <target state="translated">テーブルの下の方にある横罫</target>
        </trans-unit>
        <trans-unit id="c983a1551dcbdb6f0ce43637e89a8726577d4f4b" translate="yes" xml:space="preserve">
          <source>Hostname</source>
          <target state="translated">Hostname</target>
        </trans-unit>
        <trans-unit id="f05cc26ad3091649eb2c3e5fd29c6babe627198e" translate="yes" xml:space="preserve">
          <source>Hostname and port that the server uses to identify itself</source>
          <target state="translated">サーバが自身を識別するために使用するホスト名とポート</target>
        </trans-unit>
        <trans-unit id="c70741f6b554163b239584c9f0e03fa9a7b79ffd" translate="yes" xml:space="preserve">
          <source>HostnameLookups Directive</source>
          <target state="translated">HostnameLookups ディレクティブ</target>
        </trans-unit>
        <trans-unit id="03655fcfe63ec850a0ed71f0d9044dc3b4470ed0" translate="yes" xml:space="preserve">
          <source>HostnameLookups and other DNS considerations</source>
          <target state="translated">ホスト名のルックアップとその他の DNS の考慮事項</target>
        </trans-unit>
        <trans-unit id="3ecc096bfd2902732b2768db68a0879b1604b558" translate="yes" xml:space="preserve">
          <source>Hostnames and DNS</source>
          <target state="translated">ホスト名とDNS</target>
        </trans-unit>
        <trans-unit id="c5c357aae5ef12449343429f0a5c58bcf3ab5912" translate="yes" xml:space="preserve">
          <source>Hostnames can be used in place of IP addresses in a virtual host definition, but they are resolved at startup and if any name resolutions fail, those virtual host definitions are ignored. This is, therefore, not recommended.</source>
          <target state="translated">ホスト名はバーチャルホスト定義で IP アドレスの代わりに使用することができますが、起動時に解決され、名前の解決に失敗した場合、それらのバーチャルホスト定義は無視されます。したがって、これは推奨されません。</target>
        </trans-unit>
        <trans-unit id="6c9dd4734a6ab2c2ae72781229350a77656ba861" translate="yes" xml:space="preserve">
          <source>Hosts whose names match, or end in, this string are allowed access. Only complete components are matched, so the above example will match &lt;code&gt;foo.example.org&lt;/code&gt; but it will not match &lt;code&gt;fooexample.org&lt;/code&gt;. This configuration will cause Apache httpd to perform a double DNS lookup on the client IP address, regardless of the setting of the &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; directive. It will do a reverse DNS lookup on the IP address to find the associated hostname, and then do a forward lookup on the hostname to assure that it matches the original IP address. Only if the forward and reverse DNS are consistent and the hostname matches will access be allowed.</source>
          <target state="translated">名前がこの文字列と一致するか、この文字列で終わるホストは、アクセスを許可されます。 完全なコンポーネントのみが一致するため、上記の例は &lt;code&gt;foo.example.org&lt;/code&gt; と一致しますが、 fooexample.orgとは一致しません。 この構成により、Apache httpdは、 &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; ディレクティブの設定に関係なく、クライアントのIPアドレスで二重DNSルックアップを実行します。 IPアドレスに対して逆DNSルックアップを実行して関連するホスト名を見つけ、次にホスト名に対してフォワードルックアップを実行して元のIPアドレスと一致することを確認します。 フォワードDNSとリバースDNSに一貫性があり、ホスト名が一致する場合にのみ、アクセスが許可されます。</target>
        </trans-unit>
        <trans-unit id="1cee4c898eb23ba9a57a69bb07db64d1e15715af" translate="yes" xml:space="preserve">
          <source>Hosts whose names match, or end in, this string are allowed access. Only complete components are matched, so the above example will match &lt;code&gt;foo.example.org&lt;/code&gt; but it will not match &lt;code&gt;fooexample.org&lt;/code&gt;. This configuration will cause Apache to perform a double reverse DNS lookup on the client IP address, regardless of the setting of the &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; directive. It will do a reverse DNS lookup on the IP address to find the associated hostname, and then do a forward lookup on the hostname to assure that it matches the original IP address. Only if the forward and reverse DNS are consistent and the hostname matches will access be allowed.</source>
          <target state="translated">名前がこの文字列と一致するか、この文字列で終わるホストは、アクセスを許可されます。 完全なコンポーネントのみが一致するため、上記の例は &lt;code&gt;foo.example.org&lt;/code&gt; と一致しますが、 fooexample.orgとは一致しません。 この設定により、Apacheは &lt;code&gt;&lt;a href=&quot;core#hostnamelookups&quot;&gt;HostnameLookups&lt;/a&gt;&lt;/code&gt; ディレクティブの設定に関係なく、クライアントのIPアドレスで二重逆DNSルックアップを実行します。 IPアドレスに対して逆DNSルックアップを実行して関連するホスト名を見つけ、次にホスト名に対してフォワードルックアップを実行して元のIPアドレスと一致することを確認します。 フォワードDNSとリバースDNSに一貫性があり、ホスト名が一致する場合にのみ、アクセスが許可されます。</target>
        </trans-unit>
        <trans-unit id="ed391e754f3620e7fa9a48796c00b6f8356c467d" translate="yes" xml:space="preserve">
          <source>Hosts would also be matched if referenced by IP address.</source>
          <target state="translated">IP アドレスで参照されている場合は、ホストもマッチします。</target>
        </trans-unit>
        <trans-unit id="21d33c8d4b756edc8e52d95f7583ff35317d4c5f" translate="yes" xml:space="preserve">
          <source>Hosts, domains, or networks that will be connected to directly</source>
          <target state="translated">直接接続されるホスト、ドメイン、またはネットワーク</target>
        </trans-unit>
        <trans-unit id="ed21dedc084881ae99ff34bc2273237131ae6536" translate="yes" xml:space="preserve">
          <source>How Apache Starts</source>
          <target state="translated">Apache の起動方法</target>
        </trans-unit>
        <trans-unit id="8cecc82d72d68f9151cb0901cfe40eeac15bfca6" translate="yes" xml:space="preserve">
          <source>How It Works</source>
          <target state="translated">どのように機能するか</target>
        </trans-unit>
        <trans-unit id="e38d6bf5e3b2625202888dcad5eeaa48a65b3ea6" translate="yes" xml:space="preserve">
          <source>How This Works With Virtual Hosts</source>
          <target state="translated">バーチャルホストではどのように機能するか</target>
        </trans-unit>
        <trans-unit id="e7a28de39137fd676e3c6f7262d554d23c5491dc" translate="yes" xml:space="preserve">
          <source>How can I access FTP files outside of my home directory?</source>
          <target state="translated">ホームディレクトリ以外のFTPファイルにアクセスするには?</target>
        </trans-unit>
        <trans-unit id="6c0ab157b7dcc1cb92685ef6079e96faa73af9ff" translate="yes" xml:space="preserve">
          <source>How can I allow only clients who have certificates to access a particular URL, but allow all clients to access the rest of the server?</source>
          <target state="translated">証明書を持っているクライアントだけが特定のURLにアクセスできるようにして、すべてのクライアントがサーバーの残りの部分にアクセスできるようにするにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="d061550ec76262c4be6725a955cc7b2375884691" translate="yes" xml:space="preserve">
          <source>How can I change the pass-phrase on my private key file?</source>
          <target state="translated">秘密鍵ファイルのパスフレーズを変更するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="68c739ba68134ba93961d018a96acaf51a5e9a53" translate="yes" xml:space="preserve">
          <source>How can I convert a certificate from PEM to DER format?</source>
          <target state="translated">証明書をPEMからDER形式に変換するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="7fd5bdd57e5b69823c44a9a16710536fc15f5edc" translate="yes" xml:space="preserve">
          <source>How can I create an SSL server which accepts all types of ciphers in general, but requires a strong cipher for access to a particular URL?</source>
          <target state="translated">一般的にはすべての種類の暗号を受け入れますが、特定のURLへのアクセスには強力な暗号を必要とするSSLサーバーを作成するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="fa448de5edf6433216d41143fe27226fbc1d2e71" translate="yes" xml:space="preserve">
          <source>How can I create an SSL server which accepts all types of ciphers in general, but requires a strong ciphers for access to a particular URL?</source>
          <target state="translated">一般的にはすべての種類の暗号を受け入れますが、特定のURLへのアクセスには強力な暗号を必要とするSSLサーバーを作成するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="a0335639a4838b14c3e3122b29c12b1f71c80784" translate="yes" xml:space="preserve">
          <source>How can I create an SSL server which accepts strong encryption only?</source>
          <target state="translated">強力な暗号化のみを受け付けるSSLサーバーを作成するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="5fcd626df27d9109437478fd7d13c8a0d6fb9f70" translate="yes" xml:space="preserve">
          <source>How can I do FTP upload?</source>
          <target state="translated">FTPアップロードをするにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="29349891b7b058fd45ec51a5ce0d8b49fba082fd" translate="yes" xml:space="preserve">
          <source>How can I force an FTP ASCII download of file &lt;var&gt;xxx&lt;/var&gt;?</source>
          <target state="translated">ファイル &lt;var&gt;xxx&lt;/var&gt; の FTP ASCIIダウンロードを強制するにはどうすればよいですか？</target>
        </trans-unit>
        <trans-unit id="d35e2506e5f56d8193dcd7e72e7eec70e7864b6b" translate="yes" xml:space="preserve">
          <source>How can I force clients to authenticate using certificates for a particular URL, but still allow arbitrary clients to access the rest of the server?</source>
          <target state="translated">特定の URL の証明書を使用してクライアントを強制的に認証させても、任意のクライアントがサーバの残りの部分にアクセスできるようにするにはどうすればよいですか?</target>
        </trans-unit>
        <trans-unit id="4c674bd4359074dee2d85331edb26dcb7b35a5db" translate="yes" xml:space="preserve">
          <source>How can I force clients to authenticate using certificates?</source>
          <target state="translated">証明書を使ってクライアントに強制的に認証させるにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="d56e0172c99212893249b77342dc9f25f20bdd70" translate="yes" xml:space="preserve">
          <source>How can I get rid of the pass-phrase dialog at Apache startup time?</source>
          <target state="translated">Apacheの起動時にパスフレーズダイアログを消すにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="2e453b3d283074b230fa653f97c6319e9fc552cb" translate="yes" xml:space="preserve">
          <source>How can I hide the FTP cleartext password in my browser's URL line?</source>
          <target state="translated">ブラウザのURL行でFTPクリアテキストパスワードを非表示にするにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="ab9c17849e4c9d2bf2e9584a014ec1f9a3132832" translate="yes" xml:space="preserve">
          <source>How can I require HTTPS with strong ciphers, and either basic authentication or client certificates, for access to part of the Intranet website, for clients coming from the Internet?</source>
          <target state="translated">イントラネットのウェブサイトの一部にアクセスするために、インターネットからのクライアントに対して、強力な暗号を使用したHTTPSと、基本的な認証またはクライアント証明書のいずれかを要求するにはどうすればよいでしょうか?</target>
        </trans-unit>
        <trans-unit id="19f0cd8eedb4d895b4221f13c0f14b134afed827" translate="yes" xml:space="preserve">
          <source>How can I require HTTPS with strong ciphers, and either basic authentication or client certificates, for access to part of the Intranet website, for clients coming from the Internet? I still want to allow plain HTTP access for clients on the Intranet.</source>
          <target state="translated">インターネットからのクライアントがイントラネットのウェブサイトの一部にアクセスするために、強力な暗号を使用した HTTPS と、基本的な認証またはクライアント証明書のいずれかを要求するにはどうすればよいでしょうか?イントラネット上のクライアントには、やはりプレーンな HTTP アクセスを許可したいです。</target>
        </trans-unit>
        <trans-unit id="d942162429cc95babcf74e5c8f74505219af733e" translate="yes" xml:space="preserve">
          <source>How can I switch between HTTP and HTTPS in relative hyperlinks?</source>
          <target state="translated">相対的なハイパーリンクでHTTPとHTTPSを切り替えるにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="fe660f8a77cb0a937a9e4e662d67edbf6758f64e" translate="yes" xml:space="preserve">
          <source>How can we make URLs backward compatible (still existing virtually) after migrating &lt;code&gt;document.YYYY&lt;/code&gt; to &lt;code&gt;document.XXXX&lt;/code&gt;, e.g. after translating a bunch of &lt;code&gt;.html&lt;/code&gt; files to &lt;code&gt;.php&lt;/code&gt;?</source>
          <target state="translated">&lt;code&gt;.php&lt;/code&gt; の &lt;code&gt;.html&lt;/code&gt; ファイルを.phpに変換した後など、 &lt;code&gt;document.YYYY&lt;/code&gt; を &lt;code&gt;document.XXXX&lt;/code&gt; に移行した後、どのようにしてURLに下位互換性（まだ仮想的に存在する）を作成できますか？</target>
        </trans-unit>
        <trans-unit id="64823e869ecb72c64fddbf22f408bc0a7c5c1a9c" translate="yes" xml:space="preserve">
          <source>How can we transform a static page &lt;code&gt;foo.html&lt;/code&gt; into a dynamic variant &lt;code&gt;foo.cgi&lt;/code&gt; in a seamless way, i.e. without notice by the browser/user.</source>
          <target state="translated">どうすれば、静的なページ &lt;code&gt;foo.html&lt;/code&gt; をシームレスな方法で、つまりブラウザ/ユーザーに気づかれずに動的なバリアント &lt;code&gt;foo.cgi&lt;/code&gt; に変換できますか。</target>
        </trans-unit>
        <trans-unit id="e3b016cf1a56925920b70cfc504809aaf08024c3" translate="yes" xml:space="preserve">
          <source>How directives are applied</source>
          <target state="translated">ディレクティブの適用方法</target>
        </trans-unit>
        <trans-unit id="7913791fa2e74c59586251f428368626489df128" translate="yes" xml:space="preserve">
          <source>How do I create a real SSL Certificate?</source>
          <target state="translated">本物のSSL証明書を作成するには?</target>
        </trans-unit>
        <trans-unit id="7187576be7d67705ff6dc872e4648398270ceb90" translate="yes" xml:space="preserve">
          <source>How do I create a self-signed SSL Certificate for testing purposes?</source>
          <target state="translated">テスト用に自己署名付きSSL証明書を作成するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="fea1aac19c01648275cdc985756d77766dce20f3" translate="yes" xml:space="preserve">
          <source>How do I create and use my own Certificate Authority (CA)?</source>
          <target state="translated">自分で認証局(CA)を作成して使用するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="0cb0b8095505f4e97848a8bff152f4f459c2e383" translate="yes" xml:space="preserve">
          <source>How do I enable TLS-SRP?</source>
          <target state="translated">TLS-SRPを有効にするには?</target>
        </trans-unit>
        <trans-unit id="36094ed3826d2b9ae08440a058db59008cd75855" translate="yes" xml:space="preserve">
          <source>How do I get SSL compression working?</source>
          <target state="translated">SSL圧縮を動作させるにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="6c5a8a265aec10661da63225f51291c9b6af6f45" translate="yes" xml:space="preserve">
          <source>How do I get a backtrace, to help find the reason for my core dump?</source>
          <target state="translated">コアダンプの理由を見つけるために、バックトレースを取得するにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="c19f94dc5499461cff772bad098e7c5ae1a41738" translate="yes" xml:space="preserve">
          <source>How do I speak HTTPS manually for testing purposes?</source>
          <target state="translated">テストのために手動でHTTPSを話すにはどうすればいいですか?</target>
        </trans-unit>
        <trans-unit id="33aa156e5a3201a44c4215f8965c045665c1229c" translate="yes" xml:space="preserve">
          <source>How do I verify that a private key matches its Certificate?</source>
          <target state="translated">秘密鍵が証明書と一致していることを確認するにはどうすればよいですか?</target>
        </trans-unit>
        <trans-unit id="7763e193f28c2223b59285f49652db917844096d" translate="yes" xml:space="preserve">
          <source>How good a defense is it? Suppose that one of your machines serves at most 500 requests per second (which is a very reasonable upper bound at this writing, because systems generally do more than just shovel out static files). To do that it will require a number of children which depends on how many concurrent clients you have. But we'll be pessimistic and suppose that a single child is able to serve 500 requests per second. There are 1000 possible starting counter values such that two sequences of 500 requests overlap. So there is a 1.5% chance that if time (at one second resolution) repeats itself this child will repeat a counter value, and uniqueness will be broken. This was a very pessimistic example, and with real world values it's even less likely to occur. If your system is such that it's still likely to occur, then perhaps you should make the counter 32 bits (by editing the code).</source>
          <target state="translated">どのくらいの防御力があるのでしょうか?あなたのマシンの一つが毎秒最大500リクエストを処理しているとしましょう(これは、この記事を書いている時点では非常に合理的な上限値です。)これを行うためには、同時接続クライアントの数に応じて子プロセスの数が必要になります。しかし、ここでは悲観的になってしまいますが、1つの子プロセスが毎秒500リクエストを処理できると仮定します。500リクエストの2つのシーケンスが重なるような、1000の開始カウンタの値があります。つまり、時間が(1秒の分解能で)繰り返されると、この子はカウンタ値を繰り返し、一意性が破られてしまう可能性が1.5%あるということです。これは非常に悲観的な例であり、現実世界の値では発生する可能性はさらに低くなります。それでも発生する可能性があるようなシステムであれば、(コードを編集して)カウンタを32ビットにした方がいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="100cb0b9b76cf128bd36c57de623e9519f3f1a9c" translate="yes" xml:space="preserve">
          <source>How it Works</source>
          <target state="translated">どのように機能するか</target>
        </trans-unit>
        <trans-unit id="1dd6a17cb4033f4f74df1bb6912b8a28a8074084" translate="yes" xml:space="preserve">
          <source>How it works</source>
          <target state="translated">どのように動作するか</target>
        </trans-unit>
        <trans-unit id="acd5d406df5b7b7adeb222552008161a38545212" translate="yes" xml:space="preserve">
          <source>How long the server nonce is valid</source>
          <target state="translated">サーバのノンセンスが有効な期間</target>
        </trans-unit>
        <trans-unit id="da14aa670e31d3c56492056dc4f7c973fac7d2a0" translate="yes" xml:space="preserve">
          <source>How much compression do we apply to the output</source>
          <target state="translated">出力にどの程度の圧縮を適用するか</target>
        </trans-unit>
        <trans-unit id="3a35338f8974882a72d47a3276db8dec78b8f327" translate="yes" xml:space="preserve">
          <source>How much memory should be used by zlib for compression</source>
          <target state="translated">zlib が圧縮のために使用するメモリ量</target>
        </trans-unit>
        <trans-unit id="7c4a71a5adcfa94ba1681e26b6584ba313fc68bb" translate="yes" xml:space="preserve">
          <source>How the method, mimetype and body of the original request are embedded within the login form will depend on the platform and technology being used within the website.</source>
          <target state="translated">オリジナルのリクエストの方法、mimetype、本文がログインフォーム内にどのように埋め込まれているかは、ウェブサイト内で使用されているプラットフォームと技術によって異なります。</target>
        </trans-unit>
        <trans-unit id="1c09a07afdaca487f2ff7567ab6920adea05fdb4" translate="yes" xml:space="preserve">
          <source>How the outgoing ETag header should be modified during compression</source>
          <target state="translated">圧縮中にどのようにして送信ETagヘッダを修正すべきか</target>
        </trans-unit>
        <trans-unit id="211123c5915f65ba7826cf7650d82154415c5436" translate="yes" xml:space="preserve">
          <source>How the sections are merged</source>
          <target state="translated">セクションのマージ方法</target>
        </trans-unit>
        <trans-unit id="fe2981f70909e0220e6e4a37e06a03e2a185faec" translate="yes" xml:space="preserve">
          <source>How the server selects the proper name-based virtual host</source>
          <target state="translated">サーバが適切な名前ベースのバーチャルホストを選択する方法</target>
        </trans-unit>
        <trans-unit id="42a9a80b7f8be980c32025942bfd3ef59a346caf" translate="yes" xml:space="preserve">
          <source>How to set up Apache</source>
          <target state="translated">Apacheの設定方法</target>
        </trans-unit>
        <trans-unit id="ff04180eb3f0ac11071a732a70950e138895e22d" translate="yes" xml:space="preserve">
          <source>How-To / Tutorials</source>
          <target state="translated">ハウツーチュートリアル</target>
        </trans-unit>
        <trans-unit id="5bb60b6d7f22dd5bd6e37a21940c24ed046246cf" translate="yes" xml:space="preserve">
          <source>However if you have some fancy port forwarding in place, your server may be reachable from the Internet on port 443, but the local port that httpd uses is another one. Your server might only listen on ports 5001 and 5002, but be reached on ports 443 and 80. How should &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; figure that one out?</source>
          <target state="translated">ただし、適切なポート転送を使用している場合、サーバーはインターネットからポート443で到達可能ですが、httpdが使用するローカルポートは別のものです。 サーバーはポート5001と5002でのみリッスンし、ポート443と80でリッスンする可能性があります &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; はそれをどのように把握する必要がありますか？</target>
        </trans-unit>
        <trans-unit id="1c4aa8e85ec3825bf59d7259f21a340038240ad0" translate="yes" xml:space="preserve">
          <source>However, an effort was made to improve the performance of the original &lt;code&gt;file(1)&lt;/code&gt; code to make it fit in a busy web server. It was designed for a server where there are thousands of users who publish their own documents. This is probably very common on intranets. Many times, it's helpful if the server can make more intelligent decisions about a file's contents than the file name allows ...even if just to reduce the &quot;why doesn't my page work&quot; calls when users improperly name their own files. You have to decide if the extra work suits your environment.</source>
          <target state="translated">ただし、元の &lt;code&gt;file(1)&lt;/code&gt; コードのパフォーマンスを改善して、ビジーなWebサーバーに適合するように努力しました。 独自のドキュメントを公開する何千人ものユーザーがいるサーバー用に設計されました。 これはおそらくイントラネットでは非常に一般的です。 多くの場合、ユーザーが自分のファイルに不適切な名前を付けたときに「ページが機能しない理由」の呼び出しを減らすだけでも、サーバーがファイルの内容についてファイルの内容についてよりインテリジェントな決定を下せると便利です。 追加の作業が環境に適しているかどうかを判断する必要があります。</target>
        </trans-unit>
        <trans-unit id="e63d0e2dcb94761a10c7b6bad1ccbba58e20088b" translate="yes" xml:space="preserve">
          <source>However, if the redirection is to a page that uses a different character set, some broken browser versions will try to use the character set from the redirection text rather than the actual page. This can result in Greek, for instance, being incorrectly rendered.</source>
          <target state="translated">しかし、リダイレクト先が異なる文字セットを使用しているページである場合、一部の壊れたブラウザのバージョンでは、実際のページではなく、リダイレクト先のテキストの文字セットを使用しようとします。その結果、例えばギリシャ語が正しく表示されなくなることがあります。</target>
        </trans-unit>
        <trans-unit id="96e083fe364ab17304ed6cac4c247786e813b11e" translate="yes" xml:space="preserve">
          <source>However, in earlier versions of Apache, or if your needs are more complicated than this, you can use a variation of the following rewrite set to accomplish the same thing:</source>
          <target state="translated">しかし、以前のバージョンの Apache や、必要性がこれよりも複雑な場合は、以下のリライトセットのバリエーションを使って同じことを行うことができます。</target>
        </trans-unit>
        <trans-unit id="35a61d53134b005e46c37f882f4b995dd76bacab" translate="yes" xml:space="preserve">
          <source>However, in general, use of &lt;code&gt;.htaccess&lt;/code&gt; files should be avoided when possible. Any configuration that you would consider putting in a &lt;code&gt;.htaccess&lt;/code&gt; file, can just as effectively be made in a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section in your main server configuration file.</source>
          <target state="translated">ただし、一般的には、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルの使用はできるだけ避けてください。 &lt;code&gt;.htaccess&lt;/code&gt; ファイルに含めることを検討する構成は、メインサーバー構成ファイルの &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションで同様に効率的に作成できます。</target>
        </trans-unit>
        <trans-unit id="74c6927804909de7c4ad3248fadd460a78c4fc69" translate="yes" xml:space="preserve">
          <source>However, in many cases, when there is no actual pattern matching needed, as in the example shown above, the &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive is a better choice. The example here could be rendered as:</source>
          <target state="translated">ただし、多くの場合、上記の例のように実際のパターンマッチングが必要ない場合は、 &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; ディレクティブの方が適しています。 この例は次のようにレンダリングできます。</target>
        </trans-unit>
        <trans-unit id="116ccccf878fdcfc1fb5476c364790c00faee7fc" translate="yes" xml:space="preserve">
          <source>However, it is additionally useful to use &lt;code&gt;*&lt;/code&gt; on systems where the IP address is not predictable - for example if you have a dynamic IP address with your ISP, and you are using some variety of dynamic DNS solution. Since &lt;code&gt;*&lt;/code&gt; matches any IP address, this configuration would work without changes whenever your IP address changes.</source>
          <target state="translated">ただし、IPアドレスが予測できないシステムで &lt;code&gt;*&lt;/code&gt; を使用するとさらに便利です。たとえば、ISPに動的IPアドレスがあり、さまざまな動的DNSソリューションを使用している場合などです。 &lt;code&gt;*&lt;/code&gt; は任意のIPアドレスに一致するため、IPアドレスが変更されても、この構成は変更なしで機能します。</target>
        </trans-unit>
        <trans-unit id="aca9857c1433eaf79fe37ffe588b442ce7a5e7bf" translate="yes" xml:space="preserve">
          <source>However, it is usually better to deploy the application on the backend server at the same path as the proxy rather than to take this approach.</source>
          <target state="translated">しかし、このアプローチをとるよりも、バックエンドサーバ上のアプリケーションをプロキシと同じパスでデプロイする方が通常は良いでしょう。</target>
        </trans-unit>
        <trans-unit id="59011f4ad5625e79c6bfaf4f58cb768e12773bb6" translate="yes" xml:space="preserve">
          <source>However, putting this configuration in your server configuration file will result in less of a performance hit, as the configuration is loaded once when httpd starts, rather than every time a file is requested.</source>
          <target state="translated">しかし、この設定をサーバの設定ファイルに入れておけば、ファイルがリクエストされるたびに設定が読み込まれるのではなく、 httpd が起動したときに一度だけ読み込まれるので、パフォーマンスの低下が少なくなります。</target>
        </trans-unit>
        <trans-unit id="b7dffd5e239258b817838af0ca2cd9cf9f02e518" translate="yes" xml:space="preserve">
          <source>However, the &lt;var&gt;FreeTDS&lt;/var&gt; driver is inherently &lt;strong&gt;unsafe&lt;/strong&gt;. The underlying library doesn't support prepared statements, so the driver emulates them, and the untrusted input is merged into the SQL statement.</source>
          <target state="translated">ただし、 &lt;var&gt;FreeTDS&lt;/var&gt; ドライバーは本質的に&lt;strong&gt;安全で&lt;/strong&gt;はあり&lt;strong&gt;ません&lt;/strong&gt; 。 基になるライブラリは準備されたステートメントをサポートしていないため、ドライバーはそれらをエミュレートし、信頼できない入力はSQLステートメントにマージされます。</target>
        </trans-unit>
        <trans-unit id="505f2c2cd5239abe07497d238517b902866b0a18" translate="yes" xml:space="preserve">
          <source>However, there may be circumstances in which it is desirable for a configuration section's authorization to be combined with that of its predecessor while configuration sections are being merged. Two options are available for this case, &lt;code&gt;And&lt;/code&gt; and &lt;code&gt;Or&lt;/code&gt;.</source>
          <target state="translated">ただし、構成セクションのマージ中に、構成セクションの許可をその前の許可と組み合わせることが望ましい場合があります。 この場合、 &lt;code&gt;And&lt;/code&gt; および &lt;code&gt;Or&lt;/code&gt; の 2つのオプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="8daa2fa1a36a4b0c56deff423538686b65dcbb39" translate="yes" xml:space="preserve">
          <source>However, we are trying to phase out &quot;magic MIME types&quot; so we are deprecating this method.</source>
          <target state="translated">しかし、私たちは「マジック MIME タイプ」を段階的に廃止しようとしているので、この方法は非推奨としています。</target>
        </trans-unit>
        <trans-unit id="2ebf5747393f3f1a607dd9b49cb22f6ccb12da98" translate="yes" xml:space="preserve">
          <source>HttpProtocolOptions Directive</source>
          <target state="translated">HttpProtocolOptions ディレクティブ</target>
        </trans-unit>
        <trans-unit id="11de99a00506b19b7a198eee53076973ce18ee27" translate="yes" xml:space="preserve">
          <source>Hybrid multi-process, multi-threaded MPM for OS/2</source>
          <target state="translated">OS2用のハイブリッドマルチプロセス、マルチスレッドMPM</target>
        </trans-unit>
        <trans-unit id="cd085e06634b0b8e342ea0543ecda3bd2872d2f7" translate="yes" xml:space="preserve">
          <source>H|handler</source>
          <target state="translated">H|handler</target>
        </trans-unit>
        <trans-unit id="cf4f387bf3f43d96bbd0dcc07638443fca5267ef" translate="yes" xml:space="preserve">
          <source>I had a core dump, can you help me?</source>
          <target state="translated">コアダンプしたんですが、助けてもらえますか?</target>
        </trans-unit>
        <trans-unit id="7a7090737033addaf423c3bb5d913ccdcd164688" translate="yes" xml:space="preserve">
          <source>I'll frequently combine the last two things, putting a &lt;code&gt;LAST_MODIFIED&lt;/code&gt; directive inside a footer file to be included. SSI directives can be contained in the included file, and includes can be nested - that is, the included file can include another file, and so on.</source>
          <target state="translated">最後の2つを頻繁に組み合わせて、含まれるフッターファイル内に &lt;code&gt;LAST_MODIFIED&lt;/code&gt; ディレクティブを配置します。 SSIディレクティブはインクルードファイルに含めることができ、インクルードはネストできます。つまり、インクルードファイルには別のファイルを含めることができます。</target>
        </trans-unit>
        <trans-unit id="0eb5eb267e9cbbee32ad5724a57e4425f566526d" translate="yes" xml:space="preserve">
          <source>I: Worker is in ignore-errors mode and will always be considered available.</source>
          <target state="translated">I:作業者は無知エラーモードになっており、常に利用可能とみなされます。</target>
        </trans-unit>
        <trans-unit id="d0ef5ce80d893590b1e4a0077d7dfe619d11a899" translate="yes" xml:space="preserve">
          <source>IDEA encryption</source>
          <target state="translated">アイディーエー暗号化</target>
        </trans-unit>
        <trans-unit id="61482e2d19a66418c54e8d7b27bbb96cfe4a0d24" translate="yes" xml:space="preserve">
          <source>IDEA(128)</source>
          <target state="translated">IDEA(128)</target>
        </trans-unit>
        <trans-unit id="db12b238fec3c6832ae409cfb5989ac34ea29bd9" translate="yes" xml:space="preserve">
          <source>IP address lookup</source>
          <target state="translated">アイピーアドレスルックアップ</target>
        </trans-unit>
        <trans-unit id="2af7a9c4dfd3704b9712d4cf41f066eb92d8a01f" translate="yes" xml:space="preserve">
          <source>IP address matches address/netmask</source>
          <target state="translated">IPアドレスはアドレスネットマスクと一致します。</target>
        </trans-unit>
        <trans-unit id="361c5cb4f3aa622149f61164df41d98c8910d37c" translate="yes" xml:space="preserve">
          <source>IP addresses and ports that the server listens to</source>
          <target state="translated">サーバがリッスンするIPアドレスとポート</target>
        </trans-unit>
        <trans-unit id="1636445d2e409274b42d81d69260e3995aaaf548" translate="yes" xml:space="preserve">
          <source>IP-based</source>
          <target state="translated">IP-based</target>
        </trans-unit>
        <trans-unit id="aef9908ce9c7f4cb6c8dfa07a00bf05a249ee1bf" translate="yes" xml:space="preserve">
          <source>IP-based Virtual Host</source>
          <target state="translated">IPベースバーチャルホスト</target>
        </trans-unit>
        <trans-unit id="3020d9efa7a0d08dafe0becde3c189a30923a974" translate="yes" xml:space="preserve">
          <source>IP-based vhost</source>
          <target state="translated">アイピーベースのホスト</target>
        </trans-unit>
        <trans-unit id="fef6655fa2dd5a61ae819302c769f184bf820b20" translate="yes" xml:space="preserve">
          <source>IP-based virtual hosting</source>
          <target state="translated">IPベースの仮想ホスティング</target>
        </trans-unit>
        <trans-unit id="d865a249da311b61029204e3dfd1183b7e06fb76" translate="yes" xml:space="preserve">
          <source>IP-based virtual hosting is a method to apply different directives based on the IP address and port a request is received on. Most commonly, this is used to serve different websites on different ports or interfaces.</source>
          <target state="translated">IPベースの仮想ホスティングは、IPアドレスとポートに基づいて異なるディレクティブを適用する方法です。最も一般的には、これは異なるポートまたはインターフェイス上の異なるウェブサイトを提供するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a4e70467b63d139c6d6b6dea22930185c7391a0f" translate="yes" xml:space="preserve">
          <source>IPAddr</source>
          <target state="translated">IPAddr</target>
        </trans-unit>
        <trans-unit id="759f1c1a036684d03fe174d3c3eeb3bbc6dee65c" translate="yes" xml:space="preserve">
          <source>IPV6</source>
          <target state="translated">IPV6</target>
        </trans-unit>
        <trans-unit id="f0233b2e64376dbba5ec4e5f43b81d901151f610" translate="yes" xml:space="preserve">
          <source>IPv6 addresses and IPv6 subnets can be specified as shown below:</source>
          <target state="translated">IPv6アドレスとIPv6サブネットは、以下のように指定することができます。</target>
        </trans-unit>
        <trans-unit id="93fcee9c975ff3e25ca812d82c4d7137202e7f95" translate="yes" xml:space="preserve">
          <source>IPv6 addresses must be enclosed in square brackets, as in the following example:</source>
          <target state="translated">IPv6アドレスは、以下の例のように角括弧で囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="c9f0c6bceeccb5131651c4a8cc3c0eda0ad10478" translate="yes" xml:space="preserve">
          <source>IPv6 addresses must be specified in square brackets because the optional port number could not be determined otherwise. An IPv6 example is shown below:</source>
          <target state="translated">オプションのポート番号は、他の方法では判断できなかったため、IPv6アドレスは角括弧で指定する必要があります。IPv6の例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="f83fced5a3e5b6ef88f8a9e11a4a5a67296692c1" translate="yes" xml:space="preserve">
          <source>IPv6 addresses must be surrounded in square brackets, as in the following example:</source>
          <target state="translated">IPv6 アドレスは、以下の例のように角括弧で囲む必要があります。</target>
        </trans-unit>
        <trans-unit id="e5bd21208a7fda43f182ad5e2045b09332242eac" translate="yes" xml:space="preserve">
          <source>ISAPI .dll files to be loaded at startup</source>
          <target state="translated">起動時に読み込まれる ISAPI .dll ファイル</target>
        </trans-unit>
        <trans-unit id="4c65d7906b892163e13f44b40d7f78e4f789c4d7" translate="yes" xml:space="preserve">
          <source>ISAPI Extensions within Apache for Windows</source>
          <target state="translated">Apache for Windows 内の ISAPI 拡張機能</target>
        </trans-unit>
        <trans-unit id="9cf3573b45f0cf76b402cf66420a25c12e6cec53" translate="yes" xml:space="preserve">
          <source>ISAPI extension modules (.dll files) are written by third parties. The Apache Group does not author these modules, so we provide no support for them. Please contact the ISAPI's author directly if you are experiencing problems running their ISAPI extension. &lt;strong&gt;Please &lt;em&gt;do not&lt;/em&gt; post such problems to Apache's lists or bug reporting pages.&lt;/strong&gt;</source>
          <target state="translated">ISAPI拡張モジュール（.dllファイル）はサードパーティによって作成されています。 Apache Groupはこれらのモジュールを作成しないため、サポートは提供していません。 ISAPI拡張の実行中に問題が発生した場合は、ISAPIの作成者に直接連絡してください。 &lt;strong&gt;そのような問題をApacheのリストやバグ報告ページに投稿&lt;em&gt;しないで&lt;/em&gt;ください。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="70851441b88d722ab8f3d4fe736fa90b10fe54c5" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToErrors</source>
          <target state="translated">ISAPIAppendLogToErrors</target>
        </trans-unit>
        <trans-unit id="c160450dd210fbf021ca024713beb4a0ff81aa22" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToErrors Directive</source>
          <target state="translated">ISAPIAppendLogToErrors ディレクティブ</target>
        </trans-unit>
        <trans-unit id="b208a0a052d6ff08e2b778507fbcb962f6463358" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToQuery</source>
          <target state="translated">ISAPIAppendLogToQuery</target>
        </trans-unit>
        <trans-unit id="20912b5e1a71e96d37ba5d9ae9ba2e1e45385760" translate="yes" xml:space="preserve">
          <source>ISAPIAppendLogToQuery Directive</source>
          <target state="translated">ISAPIAppendLogToQuery ディレクティブ</target>
        </trans-unit>
        <trans-unit id="cb065b192ad06dd66fcf7ba7c8d2953ecd5ef35f" translate="yes" xml:space="preserve">
          <source>ISAPICacheFile Directive</source>
          <target state="translated">ISAPICacheFile ディレクティブ</target>
        </trans-unit>
        <trans-unit id="dfd3d29399835ebb981e98d2955916d341bce2ff" translate="yes" xml:space="preserve">
          <source>ISAPIFakeAsync</source>
          <target state="translated">ISAPIFakeAsync</target>
        </trans-unit>
        <trans-unit id="6987d320cb5e4265db78eab1b0fa743a444989bd" translate="yes" xml:space="preserve">
          <source>ISAPIFakeAsync Directive</source>
          <target state="translated">ISAPIFakeAsync ディレクティブ</target>
        </trans-unit>
        <trans-unit id="be060818cac54bd2b080dc60a4ee3e3acfebacd2" translate="yes" xml:space="preserve">
          <source>ISAPILogNotSupported</source>
          <target state="translated">ISAPILogNotSupported</target>
        </trans-unit>
        <trans-unit id="9bd7d28ee8027d7463175ea3b927f384401e35e1" translate="yes" xml:space="preserve">
          <source>ISAPILogNotSupported Directive</source>
          <target state="translated">ISAPILogNotSupported ディレクティブ</target>
        </trans-unit>
        <trans-unit id="a6ebfe2579cdc7042c4c41a1d24f9b72345ed9f5" translate="yes" xml:space="preserve">
          <source>ISAPIReadAheadBuffer</source>
          <target state="translated">ISAPIReadAheadBuffer</target>
        </trans-unit>
        <trans-unit id="fe04528cf9c78a8395dba35b556c85241df0855d" translate="yes" xml:space="preserve">
          <source>ISAPIReadAheadBuffer Directive</source>
          <target state="translated">ISAPIReadAheadBuffer ディレクティブ</target>
        </trans-unit>
        <trans-unit id="5cd3d42d50a3817bacd89159bab6a571fc550df8" translate="yes" xml:space="preserve">
          <source>ISO 3166-1</source>
          <target state="translated">ISO3166-1</target>
        </trans-unit>
        <trans-unit id="938ba86ead48ad6e2182a67bcbd7441d89b4862e" translate="yes" xml:space="preserve">
          <source>ISO 639 provides two sets of language codes, one as a two-letter code set (639-1) and another as a three-letter code set (this part of ISO 639) for the representation of names of languages.</source>
          <target state="translated">ISO 639は、言語の名前を表現するために、2文字コードセット(639-1)と3文字コードセット(ISO 639のこの部分)の2つの言語コードセットを提供しています。</target>
        </trans-unit>
        <trans-unit id="f964a9af0bf547fd0c82b12999e735fff35c0d5c" translate="yes" xml:space="preserve">
          <source>ISO 639-2</source>
          <target state="translated">ISO639-2</target>
        </trans-unit>
        <trans-unit id="ae3adfe79ceb586dd65d13f01dbd970007013a2b" translate="yes" xml:space="preserve">
          <source>IS_SUBREQ</source>
          <target state="translated">IS_SUBREQ</target>
        </trans-unit>
        <trans-unit id="eef0d51554e011f10acd38733c098bb9252a233c" translate="yes" xml:space="preserve">
          <source>ITU-T Recommendation X.208, &lt;q&gt;Specification of Abstract Syntax Notation One (ASN.1)&lt;/q&gt;, last updated 2008. See &lt;a href=&quot;http://www.itu.int/ITU-T/asn1/&quot;&gt;http://www.itu.int/ITU-T/asn1/&lt;/a&gt;.</source>
          <target state="translated">ITU-T勧告X.208、 &lt;q&gt;「Abstract Syntax Notation One（ASN.1）の仕様」、&lt;/q&gt; 2008年最終更新&lt;a href=&quot;http://www.itu.int/ITU-T/asn1/&quot;&gt;。http：&lt;/a&gt; //www.itu.int/ITU-T/asn1/を参照してください 。</target>
        </trans-unit>
        <trans-unit id="2d832f46d999602423e59bcd40cbf2940bee3608" translate="yes" xml:space="preserve">
          <source>ITU-T Recommendation X.509, &lt;q&gt;The Directory - Authentication Framework&lt;/q&gt;. For references, see &lt;a href=&quot;http://en.wikipedia.org/wiki/X.509&quot;&gt;http://en.wikipedia.org/wiki/X.509&lt;/a&gt;.</source>
          <target state="translated">ITU-T勧告X.509、 &lt;q&gt;ディレクトリ-認証フレームワーク&lt;/q&gt; 。 参照については、 &lt;a href=&quot;http://en.wikipedia.org/wiki/X.509&quot;&gt;http://en.wikipedia.org/wiki/X.509を&lt;/a&gt;参照してください 。</target>
        </trans-unit>
        <trans-unit id="96398505567aa96f2078fbe2c58e6ad76452f3aa" translate="yes" xml:space="preserve">
          <source>Icon column</source>
          <target state="translated">アイコン欄</target>
        </trans-unit>
        <trans-unit id="55424e2909aec885d15462a27f621d6d07d3ce5f" translate="yes" xml:space="preserve">
          <source>Icon to display for a file selected by name</source>
          <target state="translated">名前で選択したファイルの表示アイコン</target>
        </trans-unit>
        <trans-unit id="f5dbb7eea4a912d531e3af6a0677e0ccb06482ae" translate="yes" xml:space="preserve">
          <source>Icon to display for files when no specific icon is configured</source>
          <target state="translated">特定のアイコンが設定されていない場合にファイルに表示するアイコン</target>
        </trans-unit>
        <trans-unit id="3fc9d2ddcf2257f526bc840553452c87244be8d5" translate="yes" xml:space="preserve">
          <source>Icon to display next to files selected by MIME content-encoding</source>
          <target state="translated">MIME コンテントエンコードで選択されたファイルの横に表示されるアイコン</target>
        </trans-unit>
        <trans-unit id="0b3045cc0979639080d73fcea07fa8f457446bdc" translate="yes" xml:space="preserve">
          <source>Icon to display next to files selected by MIME content-type</source>
          <target state="translated">MIME content-type で選択されたファイルの横に表示するアイコン</target>
        </trans-unit>
        <trans-unit id="c4ed42ba53dbc34641007a2878cdf81abe9928d9" translate="yes" xml:space="preserve">
          <source>IconHeight[=&lt;var&gt;pixels&lt;/var&gt;]</source>
          <target state="translated">IconHeight[=&lt;var&gt;pixels&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="8267b83f97dcb10df8e1bfd997d1d26e0500f972" translate="yes" xml:space="preserve">
          <source>IconWidth[=&lt;var&gt;pixels&lt;/var&gt;]</source>
          <target state="translated">IconWidth[=&lt;var&gt;pixels&lt;/var&gt;]</target>
        </trans-unit>
        <trans-unit id="8a57faaf30ba2a475cec8a69294c0f2c85f47ad7" translate="yes" xml:space="preserve">
          <source>IconsAreLinks</source>
          <target state="translated">IconsAreLinks</target>
        </trans-unit>
        <trans-unit id="0601828d5f9b4b9fb066fedf054c2b8777cb3f7e" translate="yes" xml:space="preserve">
          <source>Idea (128 bit key)</source>
          <target state="translated">アイデア(128ビットキー</target>
        </trans-unit>
        <trans-unit id="7d367f0be6acd2a3951ad8f4ec0fc19478b3809a" translate="yes" xml:space="preserve">
          <source>Ideally you should run servers without multiple &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; statements if you want the highest performance. But read on.</source>
          <target state="translated">最高のパフォーマンスが必要な場合は、理想的には複数の &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; ステートメントなしでサーバーを実行する必要があります。 しかし、読み続けてください。</target>
        </trans-unit>
        <trans-unit id="9a076076483b413eb53b4d3db1e3e8e306ffc0cc" translate="yes" xml:space="preserve">
          <source>IdentityCheck Directive</source>
          <target state="translated">アイデンティティチェック指令</target>
        </trans-unit>
        <trans-unit id="d20614693d0bb52bf8a7a7b4b62487724d60884e" translate="yes" xml:space="preserve">
          <source>IdentityCheckTimeout Directive</source>
          <target state="translated">IdentityCheckTimeout ディレクティブ</target>
        </trans-unit>
        <trans-unit id="cc1ebdd04e76a4b8baffb29a22fa00446d382b18" translate="yes" xml:space="preserve">
          <source>Idle</source>
          <target state="translated">Idle</target>
        </trans-unit>
        <trans-unit id="8509cb26c8ebea3f7a3c13c835da9ed36251de78" translate="yes" xml:space="preserve">
          <source>If 0, no body is stored with this request, 1 otherwise.</source>
          <target state="translated">0の場合、このリクエストではボディは保存されず、そうでない場合は1である。</target>
        </trans-unit>
        <trans-unit id="6d087a6b60a00d35ea21cbbd29bb9f74360914ae" translate="yes" xml:space="preserve">
          <source>If 1, the entry contains a cached HEAD request with no body, 0 otherwise.</source>
          <target state="translated">1の場合、エントリはボディのないキャッシュされたHEADリクエストを含み、そうでない場合は0です。</target>
        </trans-unit>
        <trans-unit id="16268ba95f56dac4aee3daaee4b3d2ef774861bb" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;#authldapinitialbindasuser&quot;&gt;AuthLDAPInitialBindAsUser&lt;/a&gt;&lt;/code&gt; is set to &lt;em&gt;ON&lt;/em&gt;, the basic authentication username will be transformed according to the regular expression and substitution arguments.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#authldapinitialbindasuser&quot;&gt;AuthLDAPInitialBindAsUser&lt;/a&gt;&lt;/code&gt; が&lt;em&gt;ON&lt;/em&gt;に設定されている場合、基本認証のユーザー名は、正規表現と置換引数に従って変換されます。</target>
        </trans-unit>
        <trans-unit id="76e896bbaf61d41998c7adf49c5748dbcf8fc265" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; is set to &lt;code&gt;/usr/local/apache2/htdocs&lt;/code&gt;, then this directive would map requests for &lt;code&gt;http://example.com/foo&lt;/code&gt; to the path &lt;code&gt;/usr/local/apache2/htdocs/bar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;/usr/local/apache2/htdocs&lt;/code&gt; に設定されている場合、このディレクティブは &lt;code&gt;http://example.com/foo&lt;/code&gt; へのリクエストをパス &lt;code&gt;/usr/local/apache2/htdocs/bar&lt;/code&gt; にマッピングします 。</target>
        </trans-unit>
        <trans-unit id="cb44751fcf64024654927a593ec0d0a1bfe6bc74" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; is enabled, this will also start the PUSH right after the 103 response. If &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; is disabled however, the 103 response will be send nevertheless to the client.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; が有効になっている場合は、103応答の直後にPUSHも開始されます。 ただし、 &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2push&quot;&gt;H2Push&lt;/a&gt;&lt;/code&gt; が無効になっている場合でも 、103応答はクライアントに送信されます。</target>
        </trans-unit>
        <trans-unit id="549c5283ae64bd5b6be59c82ac1915c7d6e59660" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; has been enabled &lt;code&gt;configure&lt;/code&gt; searches for an installed OpenSSL. You can set the directory path to the SSL/TLS toolkit instead.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; が有効になっている場合、 &lt;code&gt;configure&lt;/code&gt; されているOpenSSLを検索します。 代わりに、SSL / TLSツールキットへのディレクトリパスを設定できます。</target>
        </trans-unit>
        <trans-unit id="79448b559326597ec511a08d4e8c8ecebeb7e4ca" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;../programs/htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt; is not in your path, of course you'll have to type the full path to the file to get it to run. With a default installation, it's located at &lt;code&gt;/usr/local/apache2/bin/htpasswd&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../programs/htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt; がパスに含まれていない場合は、ファイルを実行するために、ファイルへのフルパスを入力する必要があります。 デフォルトのインストールでは、 &lt;code&gt;/usr/local/apache2/bin/htpasswd&lt;/code&gt; にあります</target>
        </trans-unit>
        <trans-unit id="ccb74ca23c369247d30a1af0c6c087347d520a3a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; directives are placed inside a &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; section, all requests or errors for that virtual host will be logged only to the specified file. Any virtual host which does not have logging directives will still have its requests sent to the main server logs. This technique is very useful for a small number of virtual hosts, but if the number of hosts is very large, it can be complicated to manage. In addition, it can often create problems with &lt;a href=&quot;vhosts/fd-limits&quot;&gt;insufficient file descriptors&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod/mod_log_config#customlog&quot;&gt;CustomLog&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; ディレクティブが &lt;code&gt;&lt;a href=&quot;mod/core#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; セクション内に配置されている場合、その仮想ホストのすべての要求またはエラーは、指定されたファイルにのみ記録されます。 ロギングディレクティブのない仮想ホストでも、メインサーバーのログにリクエストが送信されます。 この手法は、少数の仮想ホストに非常に役立ちますが、ホストの数が非常に多い場合、管理が複雑になる可能性があります。 さらに、 &lt;a href=&quot;vhosts/fd-limits&quot;&gt;ファイル記述子&lt;/a&gt;が不十分であるという問題がよく発生します 。</target>
        </trans-unit>
        <trans-unit id="cf3457c8911bb4d9cd82b6f8d114248e68c37db0" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_userdir&quot;&gt;mod_userdir&lt;/a&gt;&lt;/code&gt; are used for translating URIs to filenames, they will override the directives of &lt;code&gt;&lt;a href=&quot;mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; described below. For example, the following configuration will map &lt;code&gt;/cgi-bin/script.pl&lt;/code&gt; to &lt;code&gt;/usr/local/apache2/cgi-bin/script.pl&lt;/code&gt; in all cases:</source>
          <target state="translated">URIをファイル名に変換するために &lt;code&gt;&lt;a href=&quot;mod_alias&quot;&gt;mod_alias&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;mod_userdir&quot;&gt;mod_userdir&lt;/a&gt;&lt;/code&gt; が使用されている場合、これらは以下に説明する &lt;code&gt;&lt;a href=&quot;mod_vhost_alias&quot;&gt;mod_vhost_alias&lt;/a&gt;&lt;/code&gt; のディレクティブをオーバーライドします。 たとえば、次の構成では、 &lt;code&gt;/cgi-bin/script.pl&lt;/code&gt; をすべての場合に &lt;code&gt;/usr/local/apache2/cgi-bin/script.pl&lt;/code&gt; にマップします。</target>
        </trans-unit>
        <trans-unit id="f044f4f6464d0ce4f1d3250b31a9a0744f49b213" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod_authz_owner&quot;&gt;mod_authz_owner&lt;/a&gt;&lt;/code&gt; is used in order to authorize a resource that is not actually present in the filesystem (&lt;em&gt;i.e.&lt;/em&gt; a virtual resource), it will deny the access.</source>
          <target state="translated">ファイルシステムに実際に存在しないリソース（ &lt;em&gt;つまり&lt;/em&gt; 、仮想リソース）を承認するために &lt;code&gt;&lt;a href=&quot;mod_authz_owner&quot;&gt;mod_authz_owner&lt;/a&gt;&lt;/code&gt; が使用されている場合、アクセスが拒否されます。</target>
        </trans-unit>
        <trans-unit id="5216d8aa78d86bf087962fe215ede849d8342fe1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is built against a version of OpenSSL which supports the secure renegotiation extension, this note is set to the value &lt;code&gt;1&lt;/code&gt; if SSL is in used for the current connection, and the client also supports the secure renegotiation extension. If the client does not support the secure renegotiation extension, the note is set to the value &lt;code&gt;0&lt;/code&gt;. If &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is not built against a version of OpenSSL which supports secure renegotiation, or if SSL is not in use for the current connection, the note is not set.</source>
          <target state="translated">セキュアな再ネゴシエーション拡張をサポートするOpenSSLのバージョンに対して &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; がビルドされている場合、現在の接続にSSLが使用されていると、この注記は値 &lt;code&gt;1&lt;/code&gt; に設定され、クライアントはセキュアな再ネゴシエーション拡張もサポートします。 クライアントがセキュアな再ネゴシエーション拡張をサポートしていない場合、メモは値 &lt;code&gt;0&lt;/code&gt; に設定されます。 セキュアな再ネゴシエーションをサポートするバージョンのOpenSSLに対して &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; がビルドされていない場合、または現在の接続でSSLが使用されていない場合、メモは設定されません。</target>
        </trans-unit>
        <trans-unit id="3d29064040bdab194f4c3a50defa94191debcd62" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; is linked against OpenSSL version 0.9.8m or later, by default renegotiation is only supported with clients supporting the new protocol extension. If this directive is enabled, renegotiation will be allowed with old (unpatched) clients, albeit insecurely.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; がOpenSSLバージョン0.9.8m以降に対してリンクされている場合、デフォルトでは再ネゴシエーションは新しいプロトコル拡張をサポートするクライアントでのみサポートされます。 このディレクティブを有効にすると、安全ではありませんが、古い（パッチが適用されていない）クライアントとの再ネゴシエーションが許可されます。</target>
        </trans-unit>
        <trans-unit id="8dcc0cb20f5fb406a771525acef685f343bae8d9" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;KeepAliveTimeout&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; set for a name-based virtual host, the value of the first defined virtual host best matching the local IP and port will be used.</source>
          <target state="translated">名前ベースの仮想ホストに &lt;code&gt;KeepAliveTimeout&lt;/code&gt; が設定されて&lt;strong&gt;いない&lt;/strong&gt;場合、ローカルIPとポートに最も一致する最初に定義された仮想ホストの値が使用されます。</target>
        </trans-unit>
        <trans-unit id="938c0402960ac831fa427eb67d96edf5594b4289" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LDAPRetryDelay&lt;/code&gt; is set to a non-zero value, the server will delay retrying an LDAP request for the specified amount of time. Setting this directive to 0 will result in any retry to occur without delay.</source>
          <target state="translated">&lt;code&gt;LDAPRetryDelay&lt;/code&gt; がゼロ以外の値に設定されている場合、サーバーは指定された時間LDAP要求の再試行を遅らせます。 このディレクティブを0に設定すると、遅延なしで再試行が行われます。</target>
        </trans-unit>
        <trans-unit id="9a99f260037f8378f4686ce5077000a7033b6fb1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;LegacyDNStringFormat&lt;/code&gt; is set, the old format will be used which sorts the &quot;C&quot; attribute first, uses slashes as separators, and does not handle non-ASCII and special characters in any consistent way.</source>
          <target state="translated">&lt;code&gt;LegacyDNStringFormat&lt;/code&gt; が設定されている場合、「C」属性を最初にソートし、区切り文字としてスラッシュを使用し、ASCII以外の文字や特殊文字を一貫した方法で処理しない古い形式が使用されます。</target>
        </trans-unit>
        <trans-unit id="6d0e84697fa05616b782c377072f2808b24e68d1" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;Multiviews&lt;/code&gt; is enabled, and &lt;code&gt;&lt;a href=&quot;mod_mime#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; is set to &quot;handlers&quot; or &quot;any&quot;, a request to &lt;code&gt;document.html&lt;/code&gt; will discover &lt;code&gt;document.html.var&lt;/code&gt; and continue negotiating with the explicit type map.</source>
          <target state="translated">&lt;code&gt;Multiviews&lt;/code&gt; が有効で、 &lt;code&gt;&lt;a href=&quot;mod_mime#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; が「handlers」または「any」に設定されている場合、 &lt;code&gt;document.html&lt;/code&gt; へのリクエストはdocument.html.varを検出し、明示的な型マップとの交渉を続行します。</target>
        </trans-unit>
        <trans-unit id="ee65f679d7435f936e8903b81faf628e3b23bc23" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;N&lt;/code&gt; or &lt;code&gt;M&lt;/code&gt; is greater than the number of parts available a single underscore is interpolated.</source>
          <target state="translated">&lt;code&gt;N&lt;/code&gt; または &lt;code&gt;M&lt;/code&gt; が使用可能なパーツの数より大きい場合、1つのアンダースコアが補間されます。</target>
        </trans-unit>
        <trans-unit id="dbee81340fa3b62dfa94c2be0cd2122eb32fac30" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;VHostSecure&lt;/code&gt; prevents an application running, this may be a warning sign that the application should be reviewed for security.</source>
          <target state="translated">&lt;code&gt;VHostSecure&lt;/code&gt; がアプリケーションの実行を妨げる場合、これはアプリケーションのセキュリティを確認する必要があることを示す警告サインである可能性があります。</target>
        </trans-unit>
        <trans-unit id="736609d15d1de0258845d81721d629609c59859d" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;append&lt;/code&gt; was used instead of &lt;code&gt;merge&lt;/code&gt;, then the response would contain the following header:</source>
          <target state="translated">&lt;code&gt;merge&lt;/code&gt; の代わりに &lt;code&gt;append&lt;/code&gt; が使用された場合、応答には次のヘッダーが含まれます。</target>
        </trans-unit>
        <trans-unit id="e14663c5737b59276d026778d1d337762098640a" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;htcacheclean&lt;/code&gt; is passed one or more URLs, each URL will be deleted from the cache. If multiple variants of an URL exists, all variants would be deleted.</source>
          <target state="translated">&lt;code&gt;htcacheclean&lt;/code&gt; に 1つ以上のURLが渡されると、各URLはキャッシュから削除されます。 URLの複数のバリアントが存在する場合、すべてのバリアントが削除されます。</target>
        </trans-unit>
        <trans-unit id="369e9caf51156b2d29b557803b8409d06bc70ce0" translate="yes" xml:space="preserve">
          <source>If &lt;var&gt;file-path&lt;/var&gt; is not an absolute path, the location specified will be relative to the value of &lt;code&gt;&lt;a href=&quot;core#defaultruntimedir&quot;&gt;DefaultRuntimeDir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;file-path&lt;/var&gt; が絶対パスでない場合、指定された場所は &lt;code&gt;&lt;a href=&quot;core#defaultruntimedir&quot;&gt;DefaultRuntimeDir&lt;/a&gt;&lt;/code&gt; の値からの相対になります。</target>
        </trans-unit>
        <trans-unit id="2762a1f700620ca1d4b18515b7aa54c8f6aca24c" translate="yes" xml:space="preserve">
          <source>If Apache httpd and APR are built with thread support, the health check module will offload the work of the actual checking to a threadpool associated with the Watchdog process, allowing for parallel checks. The &lt;code&gt;ProxyHCTPsize&lt;/code&gt; directive determines the size of this threadpool. If set to &lt;code&gt;0&lt;/code&gt;, no threadpool is used at all, resulting in serialized health checks.</source>
          <target state="translated">Apache httpdおよびAPRがスレッドサポートで構築されている場合、ヘルスチェックモジュールは、実際のチェックの作業をWatchdogプロセスに関連付けられたスレッドプールにオフロードし、並列チェックを可能にします。 &lt;code&gt;ProxyHCTPsize&lt;/code&gt; ディレクティブは、このスレッドプールのサイズを決定します。 &lt;code&gt;0&lt;/code&gt; に設定すると、スレッドプールはまったく使用されないため、ヘルスチェックがシリアル化されます。</target>
        </trans-unit>
        <trans-unit id="a304c64061c90077e2b0848f9bedf1cf50305f12" translate="yes" xml:space="preserve">
          <source>If Apache httpd is handling &lt;code&gt;GET /disk1/storage/apache/htdocs/images/imagestore1/food/apples.jpg HTTP/1.1&lt;/code&gt; mod_status displays as follows:</source>
          <target state="translated">Apache httpdが &lt;code&gt;GET /disk1/storage/apache/htdocs/images/imagestore1/food/apples.jpg HTTP/1.1&lt;/code&gt; mod_statusを処理している場合、次のように表示されます。</target>
        </trans-unit>
        <trans-unit id="8475f1ab5d5d0c1db70dbe356d0ccf4e71961e18" translate="yes" xml:space="preserve">
          <source>If Apache httpd starts as root and switches to another user, the Linux kernel &lt;em&gt;disables&lt;/em&gt; core dumps even if the directory is writable for the process. Apache httpd (2.0.46 and later) reenables core dumps on Linux 2.4 and beyond, but only if you explicitly configure a &lt;code&gt;CoreDumpDirectory&lt;/code&gt;.</source>
          <target state="translated">Apache httpdがrootとして起動し、別のユーザーに切り替えると、ディレクトリがプロセスに対して書き込み可能であっても、Linuxカーネル&lt;em&gt;は&lt;/em&gt;コアダンプを&lt;em&gt;無効&lt;/em&gt;にします。 Apache httpd（2.0.46以降）は、Linux 2.4以降でコアダンプを再度有効にしますが、明示的に &lt;code&gt;CoreDumpDirectory&lt;/code&gt; を構成した場合のみです。</target>
        </trans-unit>
        <trans-unit id="bc67c706ff2240ad302bc969d452feb985c2fb75" translate="yes" xml:space="preserve">
          <source>If Apache is running as a service, you can tell it to stop by opening another console window and entering:</source>
          <target state="translated">Apache がサービスとして動作している場合は、別のコンソールウィンドウを開いて以下のように入力することで停止するように指示することができます。</target>
        </trans-unit>
        <trans-unit id="429b1b8fdf8dee5069ddf9a0d119469b25568622" translate="yes" xml:space="preserve">
          <source>If Apache suffers a fatal problem during startup, it will write a message describing the problem either to the console or to the &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; before exiting. One of the most common error messages is &quot;&lt;code&gt;Unable to bind to Port ...&lt;/code&gt;&quot;. This message is usually caused by either:</source>
          <target state="translated">起動中にApacheに致命的な問題が発生すると、終了する前に、問題を説明するメッセージがコンソールまたは &lt;code&gt;&lt;a href=&quot;mod/core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; に書き込まれます。 最も一般的なエラーメッセージの1つは、「 &lt;code&gt;Unable to bind to Port ...&lt;/code&gt; 」です。 このメッセージは通常、次のいずれかが原因で発生します。</target>
        </trans-unit>
        <trans-unit id="b4e1ff30661373f8f27ac6cbf1fd18f3b5a66997" translate="yes" xml:space="preserve">
          <source>If CGI processes are &lt;strong&gt;not&lt;/strong&gt; running under user ids other than the web server user id, this directive will limit the number of processes that the server itself can create. Evidence of this situation will be indicated by &lt;strong&gt;&lt;code&gt;cannot fork&lt;/code&gt;&lt;/strong&gt; messages in the &lt;code&gt;error_log&lt;/code&gt;.</source>
          <target state="translated">CGIプロセスがWebサーバーのユーザーID以外のユーザーIDで実行されて&lt;strong&gt;いない&lt;/strong&gt;場合、このディレクティブはサーバー自体が作成できるプロセスの数を制限します。 この状況の証拠は、 &lt;code&gt;error_log&lt;/code&gt; のメッセージを&lt;strong&gt; &lt;code&gt;cannot fork&lt;/code&gt; &lt;/strong&gt;ことで示されます。</target>
        </trans-unit>
        <trans-unit id="672bf0a83cf5078496008055b9c7a56edc40fe0d" translate="yes" xml:space="preserve">
          <source>If CGIs make assumptions about the values of &lt;code&gt;SERVER_NAME&lt;/code&gt;, they may be broken by this option. The client is essentially free to give whatever value they want as a hostname. But if the CGI is only using &lt;code&gt;SERVER_NAME&lt;/code&gt; to construct self-referential URLs, then it should be just fine.</source>
          <target state="translated">CGIが &lt;code&gt;SERVER_NAME&lt;/code&gt; の値を想定している場合、このオプションによってCGIが壊れる可能性があります。 クライアントは基本的に、ホスト名として必要な値を自由に与えることができます。 ただし、CGIが &lt;code&gt;SERVER_NAME&lt;/code&gt; のみを使用して自己参照URLを構築している場合は、問題ありません。</target>
        </trans-unit>
        <trans-unit id="345125dd19087cda5d224e52b51a7c244e0331ac" translate="yes" xml:space="preserve">
          <source>If ImapMenu is &lt;code&gt;none&lt;/code&gt;, no menu is generated, and the &lt;code&gt;default&lt;/code&gt; action is performed.</source>
          <target state="translated">ImapMenuが &lt;code&gt;none&lt;/code&gt; の場合、メニューは生成されず、 &lt;code&gt;default&lt;/code&gt; アクションが実行されます。</target>
        </trans-unit>
        <trans-unit id="ed08d6b3237e1eabad39ce76c6471c3d75cf8795" translate="yes" xml:space="preserve">
          <source>If R is not set, it will use string-literal search-and-replace. The logic is &lt;em&gt;starts-with&lt;/em&gt; in HTML links, but &lt;em&gt;contains&lt;/em&gt; in scripting events and embedded script and style sections.</source>
          <target state="translated">Rが設定されていない場合は、文字列リテラルの検索と置換を使用します。 ロジックはHTMLリンクで&lt;em&gt;始まり&lt;/em&gt;ますが、スクリプトイベントと埋め込みスクリプトおよびスタイルセクションに&lt;em&gt;含ま&lt;/em&gt;れます。</target>
        </trans-unit>
        <trans-unit id="949cb3c521436cbd7d047ad7c36f85bd0dbc66d6" translate="yes" xml:space="preserve">
          <source>If The answer to #1 is 'yes', but the answer to #2 is 'no', the default will be &lt;code&gt;&lt;a href=&quot;mod/worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">＃1の答えが「はい」で、＃2の答えが「いいえ」の場合、デフォルトは &lt;code&gt;&lt;a href=&quot;mod/worker&quot;&gt;worker&lt;/a&gt;&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="bbbd95e96583b57813b9707d11b0564af3b43247" translate="yes" xml:space="preserve">
          <source>If a &lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; doesn't specify a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt;, a server name will be inherited from the base server configuration. If no server name was specified globally, one is detected at startup through reverse DNS resolution of the first listening address. In either case, this inherited server name will influence name-based virtual host resolution, so it is best to always explicitly list a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; in every name-based virtual host.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; を指定しない場合、サーバー名は基本サーバー構成から継承されます。 サーバー名がグローバルに指定されていない場合、最初のリスニングアドレスの逆DNS解決を通じて起動時に検出されます。 どちらの場合でも、この継承されたサーバー名は名前ベースの仮想ホストの解決に影響を与えるため、すべての名前ベースの仮想ホストで常に &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; を明示的にリストすることが最善です。</target>
        </trans-unit>
        <trans-unit id="917eec6f8c882fed572340cacc2c10e2048cf944" translate="yes" xml:space="preserve">
          <source>If a HTTP header is used in a condition this header is added to the Vary header of the response in case the condition evaluates to true for the request. It is &lt;strong&gt;not&lt;/strong&gt; added if the condition evaluates to false for the request. Adding the HTTP header to the Vary header of the response is needed for proper caching.</source>
          <target state="translated">HTTPヘッダーが条件で使用されている場合、このヘッダーは、条件が要求に対してtrueと評価された場合に備えて、応答のVaryヘッダーに追加されます。 リクエストに対して条件がfalseと評価された場合は追加され&lt;strong&gt;ません&lt;/strong&gt; 。 適切にキャッシュするには、応答のVaryヘッダーにHTTPヘッダーを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="7b477d456d642922aa60002a8100ed8aaf42b6a9" translate="yes" xml:space="preserve">
          <source>If a HTTP header is used in the condition, this flag prevents this header from being added to the Vary header of the response.</source>
          <target state="translated">条件でHTTPヘッダが使用されている場合、このフラグは、このヘッダがレスポンスのVaryヘッダに追加されるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="85e8dd834665fd5fa165982711a2a47498914e71" translate="yes" xml:space="preserve">
          <source>If a URL which maps to a directory is requested and there is no &lt;code&gt;&lt;a href=&quot;mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;index.html&lt;/code&gt;) in that directory, then &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; will return a formatted listing of the directory.</source>
          <target state="translated">ディレクトリにマップするURLがリクエストされ、そのディレクトリに &lt;code&gt;&lt;a href=&quot;mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; （ &lt;em&gt;たとえば&lt;/em&gt; 、 &lt;code&gt;index.html&lt;/code&gt; ）がない場合、 &lt;code&gt;&lt;a href=&quot;mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; はディレクトリのフォーマットされたリストを返します。</target>
        </trans-unit>
        <trans-unit id="64ed0f861e1195f9a4855224cbfcaa437b4bcf0d" translate="yes" xml:space="preserve">
          <source>If a balancer is configured as follows:</source>
          <target state="translated">バランサーが以下のように設定されている場合</target>
        </trans-unit>
        <trans-unit id="7b1d874f8e8b93f22defa4b3fa7a2dd73c60ed48" translate="yes" xml:space="preserve">
          <source>If a connection is not successful with the timeout period, either an error will be returned or the LDAP client library will attempt to connect to a secondary LDAP server if one is specified (via a space-separated list of hostnames in the &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">タイムアウト期間で接続が成功しない場合、エラーが返されるか、LDAPクライアントライブラリが指定されている場合（ &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap#authldapurl&quot;&gt;AuthLDAPURL&lt;/a&gt;&lt;/code&gt; のホスト名のスペース区切りリストを介して）セカンダリLDAPサーバーへの接続を試みます。</target>
        </trans-unit>
        <trans-unit id="65d155ebd489faf81886eaca4f98a81d75d17b94" translate="yes" xml:space="preserve">
          <source>If a database query for example returned the username, full name and telephone number of a user, a CGI program will have access to this information without the need to make a second independent database query to gather this additional information.</source>
          <target state="translated">例えば、データベースの問い合わせがユーザのユーザ名、フルネーム、電話番号を返した場合、CGI プログラムはこの追加情報を収集するために 2 番目の独立したデータベースの問い合わせをする必要なく、この情報にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="7aae1cf2d4a2fe9a1cb2154b01edde88e2ac9640" translate="yes" xml:space="preserve">
          <source>If a directory is requested (i.e. a path ending with &lt;code&gt;/&lt;/code&gt;), the file served from that directory is defined by the &lt;code&gt;&lt;a href=&quot;mod/mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; directive. For example, if &lt;code&gt;DocumentRoot&lt;/code&gt; were set as above, and you were to set:</source>
          <target state="translated">ディレクトリが要求された場合（つまり、 &lt;code&gt;/&lt;/code&gt; で終わるパス）、そのディレクトリから提供されるファイルは &lt;code&gt;&lt;a href=&quot;mod/mod_dir#directoryindex&quot;&gt;DirectoryIndex&lt;/a&gt;&lt;/code&gt; ディレクティブによって定義されます。 たとえば、 &lt;code&gt;DocumentRoot&lt;/code&gt; が上記のように設定されていて、次のように設定するとします。</target>
        </trans-unit>
        <trans-unit id="9b53b2c37995328f1879038eb55d8975e93de74d" translate="yes" xml:space="preserve">
          <source>If a directory's configuration includes &lt;code&gt;FileETag INode MTime Size&lt;/code&gt;, and a subdirectory's includes &lt;code&gt;FileETag -INode&lt;/code&gt;, the setting for that subdirectory (which will be inherited by any sub-subdirectories that don't override it) will be equivalent to &lt;code&gt;FileETag MTime Size&lt;/code&gt;.</source>
          <target state="translated">ディレクトリの構成に &lt;code&gt;FileETag INode MTime Size&lt;/code&gt; が含まれ、サブディレクトリの構成にFileETag -INodeが含まれている場合、そのサブディレクトリの設定（それをオーバーライドしないサブサブディレクトリによって継承されます）は &lt;code&gt;FileETag MTime Size&lt;/code&gt; と同等になります。</target>
        </trans-unit>
        <trans-unit id="e083cb05dcf8afd3125a0cb4133d8effef507e3f" translate="yes" xml:space="preserve">
          <source>If a document is file-based, no &lt;code&gt;ETag&lt;/code&gt; field will be included in the response</source>
          <target state="translated">ドキュメントがファイルベースの場合、 &lt;code&gt;ETag&lt;/code&gt; フィールドは応答に含まれません</target>
        </trans-unit>
        <trans-unit id="02e6a0e551db5f6faf0ce2fc7eb42b9da6a7a1e0" translate="yes" xml:space="preserve">
          <source>If a literal ':' character is needed in any of the cookie fields, an alternate syntax is available. To opt-in to the alternate syntax, the cookie &quot;Name&quot; should be preceded with a ';' character, and field separators should be specified as ';'.</source>
          <target state="translated">クッキー・フィールドのいずれかでリテラル ':' 文字が必要な場合、代替構文が利用可能です。代替構文を選択するには、クッキー &quot;Name &quot;の前に';'文字を付け、フィールドの区切りは';'と指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="6ec7abe740c409098e5112e5f25fad65a6a83703" translate="yes" xml:space="preserve">
          <source>If a login request arrives that exceeds this size, the whole request will be aborted with the HTTP response code &lt;code&gt;HTTP_REQUEST_TOO_LARGE&lt;/code&gt;.</source>
          <target state="translated">このサイズを超えるログイン要求が到着すると、要求全体がHTTP応答コード &lt;code&gt;HTTP_REQUEST_TOO_LARGE&lt;/code&gt; で中止されます。</target>
        </trans-unit>
        <trans-unit id="263471172738fbf06f6b27c907df465dc53aa033" translate="yes" xml:space="preserve">
          <source>If a non-authenticated user attempts to access a page protected by &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; that isn't configured with a &lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; directive, a &lt;var&gt;HTTP_UNAUTHORIZED&lt;/var&gt; status code is returned to the browser indicating to the user that they are not authorized to view the page.</source>
          <target state="translated">認証され &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; いないユーザーが、 &lt;code&gt;&lt;a href=&quot;#authformloginrequiredlocation&quot;&gt;AuthFormLoginRequiredLocation&lt;/a&gt;&lt;/code&gt; ディレクティブで構成されていないmod_auth_formで保護されたページにアクセスしようとすると、 &lt;var&gt;HTTP_UNAUTHORIZED&lt;/var&gt; ステータスコードがブラウザーに返され、ユーザーにページの表示が許可されていないことを示します。</target>
        </trans-unit>
        <trans-unit id="2f19834f47ac49a738c74c701253ff2bced07d49" translate="yes" xml:space="preserve">
          <source>If a path is given starting with a slash, a directory path will be constructed using that path, plus the username specified. Given this configuration:</source>
          <target state="translated">スラッシュで始まるパスが指定された場合、そのパスと指定されたユーザ名を使ってディレクトリパスが作成されます。このように設定すると</target>
        </trans-unit>
        <trans-unit id="028413e6dc59d36e753df023d4d63980467c1615" translate="yes" xml:space="preserve">
          <source>If a path is given which does not start with a leading slash, it is assumed to be a directory path relative to the home directory of the specified user. Given this configuration:</source>
          <target state="translated">先頭のスラッシュで始まらないパスを指定した場合は、指定されたユーザのホームディレクトリからの相対的なディレクトリパスと見なされます。このような設定があるとします。</target>
        </trans-unit>
        <trans-unit id="eea094b700bc76d3091a34ea6b0e2bd8fccbe3dd" translate="yes" xml:space="preserve">
          <source>If a path is provided which contains an asterisk (*), a path is used in which the asterisk is replaced with the username. Given this configuration:</source>
          <target state="translated">アスタリスク (*)を含むパスが指定された場合、アスタリスクをユーザ名に置き換えたパスが使用されます。このように設定すると</target>
        </trans-unit>
        <trans-unit id="5267c2d57a455a82c88e6f627f93e6544def7433" translate="yes" xml:space="preserve">
          <source>If a program is used, then it will be run as the user who started &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. This will be root if the server was started by root; be sure that the program is secure or switches to a less privileged user.</source>
          <target state="translated">プログラムを使用する場合、プログラムは &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; を起動したユーザーとして実行されます。 サーバーがルートによって起動された場合、これはルートになります。 プログラムが安全であるか、特権の少ないユーザーに切り替えられていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="bb02c3b2024b05c224d137bfcdc3115d4050f1a3" translate="yes" xml:space="preserve">
          <source>If a program is used, then it will be run as the user who started &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. This will be root if the server was started by root; be sure that the program is secure.</source>
          <target state="translated">プログラムを使用する場合、プログラムは &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; を起動したユーザーとして実行されます。 サーバーがルートによって起動された場合、これはルートになります。 プログラムが安全であることを確認してください。</target>
        </trans-unit>
        <trans-unit id="175027cd60fe1ebb90e0313a7db1805b3a116910" translate="yes" xml:space="preserve">
          <source>If a query returns more than one row, a random row from the result set is used.</source>
          <target state="translated">クエリが複数の行を返す場合は、結果セットの中からランダムな行が使用されます。</target>
        </trans-unit>
        <trans-unit id="959267d5cc10975d72f42db5913758627c67dc18" translate="yes" xml:space="preserve">
          <source>If a query string is present in the request for the active SSI document, this variable contains the (%-decoded) query string, which is &lt;em&gt;escaped&lt;/em&gt; for shell usage (special characters like &lt;code&gt;&amp;amp;&lt;/code&gt; etc. are preceded by backslashes). It is not set if a query string is not present. Use &lt;code&gt;DOCUMENT_ARGS&lt;/code&gt; if shell escaping is not desired.</source>
          <target state="translated">クエリ文字列がアクティブなSSIドキュメントのリクエストに存在する場合、この変数には（％デコードされた）クエリ文字列が含まれ、シェルで使用するために&lt;em&gt;エスケープさ&lt;/em&gt;れます（ &lt;code&gt;&amp;amp;&lt;/code&gt; などの特殊文字の前にはバックスラッシュが付いています）。 クエリ文字列が存在しない場合は設定されません。 シェルのエスケープが &lt;code&gt;DOCUMENT_ARGS&lt;/code&gt; 場合は、 DOCUMENT_ARGSを使用します。</target>
        </trans-unit>
        <trans-unit id="b3818773cb256ea94dffe57f892f13e3f047af93" translate="yes" xml:space="preserve">
          <source>If a relative &lt;var&gt;filename&lt;/var&gt; is supplied, the check is &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; relative. In the case where this directive occurs before the &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt;, the path will be checked relative to the compiled-in server root or the server root passed in on the command line via the &lt;code&gt;-d&lt;/code&gt; parameter.</source>
          <target state="translated">相対 &lt;var&gt;filename&lt;/var&gt; が指定されている場合、チェックは &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; 相対です。 このディレクティブが &lt;code&gt;&lt;a href=&quot;#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; の前にある場合 、パスは、コンパイルされたサーバールートまたはコマンドラインで &lt;code&gt;-d&lt;/code&gt; パラメーターを介して渡されたサーバールートを基準にしてチェックされます。</target>
        </trans-unit>
        <trans-unit id="49062e603d05cafd9fde8478a29fb852cdc8fe83" translate="yes" xml:space="preserve">
          <source>If a resource has moved to another server, you may wish to have URLs continue to work for a time on the old server while people update their bookmarks.</source>
          <target state="translated">リソースが別のサーバーに移動した場合、人々がブックマークを更新している間、古いサーバー上でURLがしばらく動作し続けるようにしたい場合があります。</target>
        </trans-unit>
        <trans-unit id="43562cc934e0df99de4f6090e4feca95b57e4710" translate="yes" xml:space="preserve">
          <source>If a response does not include an &lt;code&gt;Expires&lt;/code&gt; header but does include a &lt;code&gt;Last-Modified&lt;/code&gt; header, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; can infer a freshness lifetime based on a heuristic, which can be controlled through the use of the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachelastmodifiedfactor&quot;&gt;CacheLastModifiedFactor&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">応答に &lt;code&gt;Expires&lt;/code&gt; ヘッダーは含まれていないが、 &lt;code&gt;Last-Modified&lt;/code&gt; ヘッダーは含まれている場合、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachelastmodifiedfactor&quot;&gt;CacheLastModifiedFactor&lt;/a&gt;&lt;/code&gt; は、 CacheLastModifiedFactorディレクティブを使用して制御できるヒューリスティックに基づいて鮮度の有効期間を推測できます。</target>
        </trans-unit>
        <trans-unit id="0d71234740e45443b2bb69ffaa1187a8dc3f6dd1" translate="yes" xml:space="preserve">
          <source>If a substitution is made in per-directory context, a new internal subrequest is issued with the new URL, which restarts processing of the request phases. If the substitution is a relative path, the &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritebase&quot;&gt;RewriteBase&lt;/a&gt;&lt;/code&gt; directive determines the URL-path prefix prepended to the substitution. In per-directory context, care must be taken to create rules which will eventually (in some future &quot;round&quot; of per-directory rewrite processing) not perform a substitution to avoid looping. (See &lt;a href=&quot;http://wiki.apache.org/httpd/RewriteLooping&quot;&gt;RewriteLooping&lt;/a&gt; for further discussion of this problem.)</source>
          <target state="translated">ディレクトリごとのコンテキストで置換が行われると、新しい内部サブリクエストが新しいURLで発行され、リクエストフェーズの処理が再開されます。 置換が相対パスの場合、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritebase&quot;&gt;RewriteBase&lt;/a&gt;&lt;/code&gt; ディレクティブは、置換の前に付加されるURLパスの接頭辞を決定します。 ディレクトリごとのコンテキストでは、ループを回避するために最終的に（ディレクトリごとの書き換え処理の将来の「ラウンド」で）置換を実行しないルールを作成するように注意する必要があります。 （この問題の詳細については、 &lt;a href=&quot;http://wiki.apache.org/httpd/RewriteLooping&quot;&gt;RewriteLooping&lt;/a&gt;を参照してください。）</target>
        </trans-unit>
        <trans-unit id="b39e5af7d41f7d0b14a4cc4c978f694750441deb" translate="yes" xml:space="preserve">
          <source>If a substitution occurred and the rewriting continues, the value of both variables will be updated accordingly.</source>
          <target state="translated">置換が発生して書き換えが継続している場合は、それに応じて両方の変数の値が更新されます。</target>
        </trans-unit>
        <trans-unit id="835ba3c2558fd7f0a09cd539b5892b8dea75bd58" translate="yes" xml:space="preserve">
          <source>If a variable reference needs to be substituted in the middle of a character sequence that might otherwise be considered a valid identifier in its own right, it can be disambiguated by enclosing the reference in braces, &lt;em&gt;a la&lt;/em&gt; shell substitution:</source>
          <target state="translated">変数参照をそれ自体が有効な識別子と見なされる可能性のある文字シーケンスの途中で置換する必要がある場合は、参照を中括弧で囲むことで曖昧さをなくすことができます。</target>
        </trans-unit>
        <trans-unit id="9b7e7959a08cd7a4e5876c2c63ccd40010a400d5" translate="yes" xml:space="preserve">
          <source>If a vhost has no &lt;code&gt;&lt;a href=&quot;../mod/core#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#timeout&quot;&gt;Timeout&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#keepalivetimeout&quot;&gt;KeepAliveTimeout&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#keepalive&quot;&gt;KeepAlive&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/core#maxkeepaliverequests&quot;&gt;MaxKeepAliveRequests&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#receivebuffersize&quot;&gt;ReceiveBufferSize&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#sendbuffersize&quot;&gt;SendBufferSize&lt;/a&gt;&lt;/code&gt; directive then the respective value is inherited from the main server. (That is, inherited from whatever the final setting of that value is in the main server.)</source>
          <target state="translated">vhostに &lt;code&gt;&lt;a href=&quot;../mod/core#serveradmin&quot;&gt;ServerAdmin&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/core#timeout&quot;&gt;Timeout&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/core#keepalivetimeout&quot;&gt;KeepAliveTimeout&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/core#keepalive&quot;&gt;KeepAlive&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/core#maxkeepaliverequests&quot;&gt;MaxKeepAliveRequests&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#receivebuffersize&quot;&gt;ReceiveBufferSize&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#sendbuffersize&quot;&gt;SendBufferSize&lt;/a&gt;&lt;/code&gt; ディレクティブがない場合、それぞれの値はメインサーバーから継承されます。 （つまり、その値の最終設定がメインサーバーにあるものから継承されます。）</target>
        </trans-unit>
        <trans-unit id="d6ed485c507caa9e706e8823aa4e980867ed25c7" translate="yes" xml:space="preserve">
          <source>If all attempts to locate the content fail, httpd returns an error page with HTTP status code 404 (file not found). The appearance of this page is controlled with the &lt;code&gt;&lt;a href=&quot;mod/core#errordocument&quot;&gt;ErrorDocument&lt;/a&gt;&lt;/code&gt; directive and can be customized in a flexible manner as discussed in the &lt;a href=&quot;custom-error&quot;&gt;Custom error responses&lt;/a&gt; document.</source>
          <target state="translated">コンテンツの検索がすべて失敗した場合、httpdはHTTPステータスコード404（ファイルが見つかりません）のエラーページを返します。 このページの外観は &lt;code&gt;&lt;a href=&quot;mod/core#errordocument&quot;&gt;ErrorDocument&lt;/a&gt;&lt;/code&gt; ディレクティブで制御され、 &lt;a href=&quot;custom-error&quot;&gt;カスタムエラー応答&lt;/a&gt;ドキュメントで説明されているように柔軟な方法でカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="147a831be04322b14f95aa0760293812d6de6047" translate="yes" xml:space="preserve">
          <source>If all goes well during startup, the server will detach from the terminal and the command prompt will return almost immediately. This indicates that the server is up and running. You can then use your browser to connect to the server and view the test page in the &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; directory.</source>
          <target state="translated">起動時にすべてがうまくいくと、サーバーはターミナルから切り離され、コマンドプロンプトはほとんどすぐに戻ります。 これは、サーバーが稼働中であることを示しています。 その後、ブラウザを使用してサーバーに接続し、 &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; ディレクトリのテストページを表示できます。</target>
        </trans-unit>
        <trans-unit id="518b0f7253629879fa550c74e30b4b574a8108ed" translate="yes" xml:space="preserve">
          <source>If all load balancer set &lt;code&gt;0&lt;/code&gt; workers, spares, and the standby are unavailable, only then will the &lt;code&gt;http://bkup1.example.com:8080&lt;/code&gt; and &lt;code&gt;http://bkup2.example.com:8080&lt;/code&gt; workers from balancer set &lt;code&gt;1&lt;/code&gt; be brought into rotation.</source>
          <target state="translated">すべてのロードバランサーセット &lt;code&gt;0&lt;/code&gt; ワーカー、スペア、スタンバイが利用できない場合のみ、バランサーセット &lt;code&gt;1&lt;/code&gt; の &lt;code&gt;http://bkup1.example.com:8080&lt;/code&gt; および &lt;code&gt;http://bkup2.example.com:8080&lt;/code&gt; ワーカーが提供されます。回転に。</target>
        </trans-unit>
        <trans-unit id="40f6ebed2ea9a304ed8ef9cf6f83c10e56c13f49" translate="yes" xml:space="preserve">
          <source>If all the processes have all threads idle then:</source>
          <target state="translated">すべてのプロセスがすべてのスレッドをアイドル状態にしている場合。</target>
        </trans-unit>
        <trans-unit id="3637a20cfea1a331ba498717f7bf10c7ed5eea3c" translate="yes" xml:space="preserve">
          <source>If all you wish to do is deny access to the resource, rather than redirecting that request elsewhere, this can be accomplished without the use of mod_rewrite:</source>
          <target state="translated">リクエストを他の場所にリダイレクトするのではなく、 リソースへのアクセスを拒否したいだけなら、mod_rewrite を使わなくても実現できます。</target>
        </trans-unit>
        <trans-unit id="46bd5fbbc42f8a3f5b9d8bf29ca38ddb91b6cc82" translate="yes" xml:space="preserve">
          <source>If an SSL renegotiation is required in per-location context, for example, any use of &lt;code&gt;&lt;a href=&quot;#sslverifyclient&quot;&gt;SSLVerifyClient&lt;/a&gt;&lt;/code&gt; in a Directory or Location block, then &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; must buffer any HTTP request body into memory until the new SSL handshake can be performed. This directive can be used to set the amount of memory that will be used for this buffer.</source>
          <target state="translated">ロケーションごとのコンテキストでSSL再ネゴシエーションが必要な場合（たとえば、DirectoryまたはLocationブロックで &lt;code&gt;&lt;a href=&quot;#sslverifyclient&quot;&gt;SSLVerifyClient&lt;/a&gt;&lt;/code&gt; を使用する場合）、新しいSSLハンドシェイクを実行できるようになるまで、 &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; はHTTPリクエストボディをメモリにバッファーする必要があります。 このディレクティブを使用して、このバッファーに使用されるメモリーの量を設定できます。</target>
        </trans-unit>
        <trans-unit id="b5b44f7c11e8e27b4374414ac701207d90e8f0aa" translate="yes" xml:space="preserve">
          <source>If an absolute URL is specified, &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; checks to see whether the hostname matches the current host. If it does, the scheme and hostname are stripped out and the resulting path is treated as a URL-path. Otherwise, an external redirect is performed for the given URL. To force an external redirect back to the current host, see the &lt;code&gt;[R]&lt;/code&gt; flag below.</source>
          <target state="translated">絶対URLが指定されている場合、 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; はホスト名が現在のホストと一致するかどうかを確認します。 含まれている場合、スキームとホスト名は削除され、結果のパスはURLパスとして扱われます。 それ以外の場合、指定されたURLに対して外部リダイレクトが実行されます。 外部リダイレクトを現在のホストに強制的に戻すには、以下の &lt;code&gt;[R]&lt;/code&gt; フラグを参照してください。</target>
        </trans-unit>
        <trans-unit id="62c656cf12e4b981be66febc5d4cb839cb1e5860" translate="yes" xml:space="preserve">
          <source>If an attempt to update the session affects no rows, the insert query will be called to insert the session into the database. If the database supports InsertOrUpdate, override this query to perform the update in one query instead of two.</source>
          <target state="translated">セッションを更新しようとしても行に影響がない場合、データベースにセッションを挿入するためにInsertクエリが呼び出されます。データベースがInsertOrUpdateをサポートしている場合、このクエリをオーバーライドして、2つのクエリではなく1つのクエリで更新を実行します。</target>
        </trans-unit>
        <trans-unit id="964968ee5a04d4a24330755167a82b6b1deb1170" translate="yes" xml:space="preserve">
          <source>If an attempt to update the session affects no rows, this query will be called to insert the session into the database.</source>
          <target state="translated">セッションを更新しようとしても行がない場合、このクエリが呼び出され、データベースにセッションを挿入します。</target>
        </trans-unit>
        <trans-unit id="25a80c0a1f1ebbaf8d89be268772e0a2dcea61b1" translate="yes" xml:space="preserve">
          <source>If an authentication check has been made, this is set to the name of the authenticated user.</source>
          <target state="translated">認証チェックが行われている場合は、認証されたユーザの名前が設定されます。</target>
        </trans-unit>
        <trans-unit id="ebceca98835ea4465f5e63ab46f15c9d2fd86924" translate="yes" xml:space="preserve">
          <source>If an authentication check was made, this is set to the type of authentication (f.x. &lt;code&gt;basic&lt;/code&gt;)</source>
          <target state="translated">認証チェックが行われた場合、これは認証のタイプに設定されます（fx &lt;code&gt;basic&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="bd1539ad4a0063718fdfa5336feb70d63fe87ac8" translate="yes" xml:space="preserve">
          <source>If an encoding is declared in an HTML &lt;code&gt;&amp;lt;META&amp;gt;&lt;/code&gt; element, that is used.</source>
          <target state="translated">エンコーディングがHTMLの &lt;code&gt;&amp;lt;META&amp;gt;&lt;/code&gt; 要素で宣言されている場合は、それが使用されます。</target>
        </trans-unit>
        <trans-unit id="0dc8fa7317fa3f9e7035bc4fde7700aaeb86859d" translate="yes" xml:space="preserve">
          <source>If an error can be detected within the configuration, this directive can be used to generate a custom error message, and halt configuration parsing. The typical use is for reporting required modules which are missing from the configuration.</source>
          <target state="translated">設定の中でエラーが検出された場合、 このディレクティブを使ってカスタムエラーメッセージを生成したり、 設定の解析を停止したりすることができます。典型的な使用法は、設定にない必要なモジュールを報告することです。</target>
        </trans-unit>
        <trans-unit id="7cf2ad2ce57944b9c32aa3708dbc36b672c60b08" translate="yes" xml:space="preserve">
          <source>If an ldaps:// URL is specified, the mode becomes SSL and the setting of LDAPTrustedMode is ignored.</source>
          <target state="translated">ldaps:/URLを指定した場合はSSLとなり、LDAPTrustedModeの設定は無視されます。</target>
        </trans-unit>
        <trans-unit id="2ac1fb0ef2ad6db9709f8075f688cf1262a63b5c" translate="yes" xml:space="preserve">
          <source>If apache is running in a protected address space specify the address space in the unload statement:</source>
          <target state="translated">apache が保護されたアドレス空間で動作している場合は、 unload 文でアドレス空間を指定してください。</target>
        </trans-unit>
        <trans-unit id="123f8497de7f9539f9218e5e627fcc61c494ad37" translate="yes" xml:space="preserve">
          <source>If at all possible, avoid content negotiation if you're really interested in every last ounce of performance. In practice the benefits of negotiation outweigh the performance penalties. There's one case where you can speed up the server. Instead of using a wildcard such as:</source>
          <target state="translated">可能であれば、本当に最後の一滴までパフォーマンスに興味があるのであれば、コンテン ツ・ネゴシエーションは避けてください。実際には、ネゴシエーションの利点はパフォーマンスのペナルティを上回ります。サーバーを高速化できるケースがあります。のようなワイルドカードを使う代わりに</target>
        </trans-unit>
        <trans-unit id="659d76c805ba67f560c91d9b3040ccd01b26e1d6" translate="yes" xml:space="preserve">
          <source>If authentication succeeds but authorization fails, Apache HTTPD will respond with an HTTP response code of '401 UNAUTHORIZED' by default. This usually causes browsers to display the password dialogue to the user again, which is not wanted in all situations. &lt;code&gt;AuthzSendForbiddenOnFailure&lt;/code&gt; allows to change the response code to '403 FORBIDDEN'.</source>
          <target state="translated">認証は成功したが承認が失敗した場合、Apache HTTPDはデフォルトで「401 UNAUTHORIZED」のHTTP応答コードで応答します。 これにより、通常、ブラウザは再度ユーザーにパスワードダイアログを表示しますが、これはすべての状況で必要なわけではありません。 &lt;code&gt;AuthzSendForbiddenOnFailure&lt;/code&gt; では、応答コードを「403 FORBIDDEN」に変更できます。</target>
        </trans-unit>
        <trans-unit id="ee59536cf35e4291f76185245b4174851904ef62" translate="yes" xml:space="preserve">
          <source>If awk.exe is not found, Makefile.win's install target will not perform substitutions in the installed .conf files. You must manually modify the installed .conf files to allow the server to start. Search and replace all &quot;@token@&quot; tags as appropriate.</source>
          <target state="translated">awk.exeが見つからない場合、Makefile.winのインストールターゲットはインストールされた.confファイルの置換を行いません。サーバーを起動できるように、インストールされた.confファイルを手動で修正する必要があります。すべての&quot;@token@&quot;タグを検索し、必要に応じて置換します。</target>
        </trans-unit>
        <trans-unit id="449e86fd999468b4e3c4c87795dc5ced0351482a" translate="yes" xml:space="preserve">
          <source>If backreferences are being escaped, spaces should be escaped to %20 instead of +. Useful when the backreference will be used in the path component rather than the query string.&lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_bnp&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">後方参照がエスケープされている場合、スペースは+ではなく％20にエスケープする必要があります。 クエリ文字列ではなくパスコンポーネントで後方参照が使用される場合に役立ちます。 &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_bnp&quot;&gt;詳細...&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f859fa5bfd6a3f254f1845343a9a04b1db03b946" translate="yes" xml:space="preserve">
          <source>If configured Off, the client supplied list order of protocols has precedence over the order in the server configuration.</source>
          <target state="translated">Off を構成した場合、クライアントが提供するプロトコルのリストの順序は、サーバ構成の順序よりも優先されます。</target>
        </trans-unit>
        <trans-unit id="4d064f03e29955bb235e12e66fe757aaccef6cb1" translate="yes" xml:space="preserve">
          <source>If configured to send data as part of the test, this is the total number of bytes sent during the tests. This field is omitted if the test did not include a body to send.</source>
          <target state="translated">テストの一部としてデータを送信するように構成されている場合、テスト中に送信されたバイト数の合計です。テストに送信するボディが含まれていない場合、このフィールドは省略されます。</target>
        </trans-unit>
        <trans-unit id="8d8f83ab363fb8508b614ca73bd6931af59f8bf2" translate="yes" xml:space="preserve">
          <source>If configured, sessions are tracked through the use of a session ID that is stored inside a cookie, or extracted from the parameters embedded within the URL query string, as found in a typical GET request.</source>
          <target state="translated">設定されている場合、セッションはクッキー内に保存されているセッションIDを使用して追跡されるか、URLのクエリ文字列に埋め込まれたパラメータから抽出されます。</target>
        </trans-unit>
        <trans-unit id="bb156c741759994b77e65ae9c522a3647c3fbfab" translate="yes" xml:space="preserve">
          <source>If configured, the session can be read back from the HTTP_SESSION environment variable. By default, the session is kept private, so this has to be explicitly turned on with the &lt;code&gt;&lt;a href=&quot;#sessionenv&quot;&gt;SessionEnv&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">構成されている場合、セッションはHTTP_SESSION環境変数から読み戻すことができます。 デフォルトでは、セッションはプライベートに保たれるため、 &lt;code&gt;&lt;a href=&quot;#sessionenv&quot;&gt;SessionEnv&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して明示的にオンにする必要があります。</target>
        </trans-unit>
        <trans-unit id="04fff39f793a051fafc3eddd6fdbeb6afa2245ee" translate="yes" xml:space="preserve">
          <source>If content changes often, expressed by a freshness lifetime of minutes or seconds, the content can still be cached, however it is highly desirable that the origin server supports &lt;strong&gt;conditional requests&lt;/strong&gt; correctly to ensure that full responses do not have to be generated on a regular basis.</source>
          <target state="translated">コンテンツが頻繁に変化し、数分または数秒のフレッシュネスライフタイムで表される場合でも、コンテンツをキャッシュできますが、オリジンサーバーが&lt;strong&gt;条件付きリクエストを&lt;/strong&gt;正しくサポートして、完全な応答が定期的に生成される必要がないようにすることが非常に望ましいです。</target>
        </trans-unit>
        <trans-unit id="6b9c4381d6230812286b3ef487578325a727958b" translate="yes" xml:space="preserve">
          <source>If each party has a certificate which validates the other's identity, confirms the public key and is signed by a trusted agency, then both can be assured that they are communicating with whom they think they are. Such a trusted agency is called a &lt;em&gt;Certificate Authority&lt;/em&gt; and certificates are used for authentication.</source>
          <target state="translated">各当事者が互いの身元を検証し、公開鍵を確認し、信頼できる機関によって署名された証明書を持っている場合、両者は、彼らが本人だと思っている相手と通信していることを保証できます。 このような信頼できる機関は&lt;em&gt;認証局&lt;/em&gt;と呼ばれ、 &lt;em&gt;証明&lt;/em&gt;書は認証に使用されます。</target>
        </trans-unit>
        <trans-unit id="6f9ec5b83bb8d6c2b1a9df0a3cc5ca736cadf8a4" translate="yes" xml:space="preserve">
          <source>If either the pattern or the substitution contain a slash character then an alternative delimiter may be used to make the directive more readable:</source>
          <target state="translated">パターンや置換のどちらかにスラッシュ文字が含まれている場合は、 ディレクティブをより読みやすくするために別の区切り文字を使うことができます。</target>
        </trans-unit>
        <trans-unit id="36a62deaadc595248aea81100d9c653cf431562a" translate="yes" xml:space="preserve">
          <source>If enabled, the Global Catalog is an independent directory server that runs on port 3268 (3269 for SSL). To search for a user, do a subtree search for the attribute &lt;em&gt;userPrincipalName&lt;/em&gt;, with an empty search root, like so:</source>
          <target state="translated">有効な場合、グローバルカタログは、ポート3268（SSLの場合は3269）で実行される独立したディレクトリサーバーです。 ユーザーを検索するには、次のように、空の検索ルートを使用して、属性&lt;em&gt;userPrincipalNameの&lt;/em&gt;サブツリー検索を実行します。</target>
        </trans-unit>
        <trans-unit id="5d2ce63ca762e2fec964df0886bed9fccdb80069" translate="yes" xml:space="preserve">
          <source>If encoded slashes are needed in path info, use of &lt;code&gt;NoDecode&lt;/code&gt; is strongly recommended as a security measure. Allowing slashes to be decoded could potentially allow unsafe paths.</source>
          <target state="translated">パス情報でエンコードされたスラッシュが必要な場合は、セキュリティ対策として &lt;code&gt;NoDecode&lt;/code&gt; の使用を強くお勧めします。 スラッシュのデコードを許可すると、安全でないパスが許可される可能性があります。</target>
        </trans-unit>
        <trans-unit id="965c48d9e24b144a472c5500b3e967b1828a6cfa" translate="yes" xml:space="preserve">
          <source>If even more flexible matching is required, each container has a regular expression (regex) counterpart &lt;code&gt;&lt;a href=&quot;mod/core#directorymatch&quot;&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod/core#filesmatch&quot;&gt;&amp;lt;FilesMatch&amp;gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod/core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; that allow perl-compatible &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expressions&lt;/a&gt; to be used in choosing the matches. But see the section below on configuration merging to find out how using regex sections will change how directives are applied.</source>
          <target state="translated">さらに柔軟なマッチングが必要な場合、各コンテナには正規表現（regex）の対応する &lt;code&gt;&lt;a href=&quot;mod/core#directorymatch&quot;&gt;&amp;lt;DirectoryMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod/core#filesmatch&quot;&gt;&amp;lt;FilesMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;mod/core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; があり、Perl互換の&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;正規表現&lt;/a&gt;を使用して一致を選択できます。 ただし、以下の設定のマージに関するセクションを参照して、regexセクションを使用するとディレクティブの適用方法がどのように変わるかを確認してください。</target>
        </trans-unit>
        <trans-unit id="3cff94e726613ec82b0d149d73860e96b77d85a7" translate="yes" xml:space="preserve">
          <source>If for example, a response is received with a vary header such as;</source>
          <target state="translated">例えば、応答が以下のような vary ヘッダーで受信された場合。</target>
        </trans-unit>
        <trans-unit id="5e8c3e9042f0b2f0b8634b0ff3a1fad5e4a056a1" translate="yes" xml:space="preserve">
          <source>If for example, your web server is configured to run as:</source>
          <target state="translated">例えば、あなたのWebサーバが、以下のように動作するように設定されているとします。</target>
        </trans-unit>
        <trans-unit id="d031b4078a918cde7cbaa955c17ca5307754ce11" translate="yes" xml:space="preserve">
          <source>If given, &lt;code&gt;rotatelogs&lt;/code&gt; will execute the specified program every time a new log file is opened. The filename of the newly opened file is passed as the first argument to the program. If executing after a rotation, the old log file is passed as the second argument. &lt;code&gt;rotatelogs&lt;/code&gt; does not wait for the specified program to terminate before continuing to operate, and will not log any error code returned on termination. The spawned program uses the same stdin, stdout, and stderr as rotatelogs itself, and also inherits the environment.</source>
          <target state="translated">指定した場合、 &lt;code&gt;rotatelogs&lt;/code&gt; は、新しいログファイルが開かれるたびに、指定されたプログラムを実行します。 新しく開いたファイルのファイル名は、プログラムの最初の引数として渡されます。 ローテーション後に実行する場合、古いログファイルが2番目の引数として渡されます。 &lt;code&gt;rotatelogs&lt;/code&gt; は、指定されたプログラムが終了するのを待たずに操作を続行し、終了時に返されるエラーコードをログに記録しません。 生成されたプログラムは、rotatelogs自体と同じstdin、stdout、およびstderrを使用し、環境も継承します。</target>
        </trans-unit>
        <trans-unit id="751bb3d8dc2b8b188ffd3c519bfd3a7dc19afd5a" translate="yes" xml:space="preserve">
          <source>If headers like &lt;code&gt;Expires&lt;/code&gt; which are needed for proper cache management are not stored due to a &lt;code&gt;CacheIgnoreHeaders&lt;/code&gt; setting, the behaviour of mod_cache is undefined.</source>
          <target state="translated">適切なキャッシュ管理に必要な &lt;code&gt;Expires&lt;/code&gt; などのヘッダーが &lt;code&gt;CacheIgnoreHeaders&lt;/code&gt; 設定のために保存されていない場合、 mod_cacheの動作は未定義です。</target>
        </trans-unit>
        <trans-unit id="52036b9e9d6f3ec9e88aea1fb78ae6c79b191dec" translate="yes" xml:space="preserve">
          <source>If httpd was built against &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; version 1.3.0 or higher, any additional column values in the first row returned by the query statement will be stored as environment variables with names of the form &lt;code&gt;AUTHENTICATE_COLUMN&lt;/code&gt;.</source>
          <target state="translated">httpdが&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt;バージョン1.3.0以降に対してビルドされた場合、クエリステートメントによって返される最初の行の追加の列値は、 &lt;code&gt;AUTHENTICATE_COLUMN&lt;/code&gt; という形式の名前の環境変数として格納されます。</target>
        </trans-unit>
        <trans-unit id="286e09d9594b85b2fdc8dd862f4abe68b1ccc468" translate="yes" xml:space="preserve">
          <source>If httpd was built against &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt; version 1.3.0 or higher, then whenever a query is made to the database server, all column values in the first row returned by the query are placed in the environment, using environment variables with the prefix &quot;AUTHENTICATE_&quot;.</source>
          <target state="translated">httpdが&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#apr&quot;&gt;APR&lt;/a&gt;バージョン1.3.0以降に対してビルドされた場合、データベースサーバーに対してクエリが実行されると、クエリによって返された最初の行のすべての列値が、環境変数に接頭辞「AUTHENTICATE_」を付けた環境変数を使用して配置されます。 。</target>
        </trans-unit>
        <trans-unit id="47b1fe27760cf8fcf92e4363bd3650b16df870d1" translate="yes" xml:space="preserve">
          <source>If httpd was compiled against an SSL library which did not support the FIPS_mode flag, &lt;code&gt;SSLFIPS on&lt;/code&gt; will fail. Refer to the FIPS 140-2 Security Policy document of the SSL provider library for specific requirements to use mod_ssl in a FIPS 140-2 approved mode of operation; note that mod_ssl itself is not validated, but may be described as using FIPS 140-2 validated cryptographic module, when all components are assembled and operated under the guidelines imposed by the applicable Security Policy.</source>
          <target state="translated">FIPS_modeフラグをサポートしていないSSLライブラリに対してhttpdがコンパイルされた場合、 &lt;code&gt;SSLFIPS on&lt;/code&gt; は失敗します。 FIPS 140-2承認済みの動作モードでmod_sslを使用するための特定の要件については、SSLプロバイダーライブラリのFIPS 140-2セキュリティポリシードキュメントを参照してください。 mod_ssl自体は検証されていませんが、該当するセキュリティポリシーによって課されたガイドラインに基づいてすべてのコンポーネントが組み立てられ、操作されている場合、FIPS 140-2検証済み暗号モジュールを使用していると説明される場合があります。</target>
        </trans-unit>
        <trans-unit id="555d025e37cdd1997d1c0abe18c36990e61a909c" translate="yes" xml:space="preserve">
          <source>If interpolation is not enabled, all rules are pre-compiled at startup. With interpolation, they must be re-compiled for every request, which implies an extra processing overhead. It should therefore be enabled only when necessary.</source>
          <target state="translated">補間が有効でない場合、すべてのルールは起動時にプリコンパイルされます。補間では、それらはリクエストごとに再コンパイルされなければならず、余分な処理オーバ ヘッドが発生することを意味する。したがって、必要な場合にのみ有効にすべきである。</target>
        </trans-unit>
        <trans-unit id="7ea358f5a77421472cb766fa6a7f119214881ea2" translate="yes" xml:space="preserve">
          <source>If it cannot write its data, the child process exits immediately and may dump core (depending on your &lt;code&gt;&lt;a href=&quot;mpm_common#coredumpdirectory&quot;&gt;CoreDumpDirectory&lt;/a&gt;&lt;/code&gt; configuration).</source>
          <target state="translated">データを書き込めない場合、子プロセスはすぐに終了し、コアをダンプすることがあります（ &lt;code&gt;&lt;a href=&quot;mpm_common#coredumpdirectory&quot;&gt;CoreDumpDirectory&lt;/a&gt;&lt;/code&gt; 構成によって異なります）。</target>
        </trans-unit>
        <trans-unit id="a1d50d18aedaf910c967269b3f4c991f7506c5c8" translate="yes" xml:space="preserve">
          <source>If it doesn't exist, it can't very well contain files. If we can't change directory to it, it might as well not exist.</source>
          <target state="translated">もし存在しないのであれば、そのディレクトリにファイルを格納することはできません。ディレクトリを変更できないのであれば、存在していないのと同じかもしれません。</target>
        </trans-unit>
        <trans-unit id="fea0851c412528381fd5288923c2f693f5bf6112" translate="yes" xml:space="preserve">
          <source>If it doesn't exists, it can't very well be executed.</source>
          <target state="translated">存在しなければ、非常にうまく実行できません。</target>
        </trans-unit>
        <trans-unit id="5d2c0fec54cd078e4b4b410f16fcc6d6f456324c" translate="yes" xml:space="preserve">
          <source>If mod_authnz_fcgi runs in an EBCDIC compilation environment, all FastCGI protocol data is written in EBCDIC and expected to be received in EBCDIC.</source>
          <target state="translated">mod_authnz_fcgi が EBCDIC コンパイル環境で動作する場合、FastCGI プロトコルのデータはすべて EBCDIC で書き込まれ、 EBCDIC で受信することが期待されます。</target>
        </trans-unit>
        <trans-unit id="3426a4d4d9247ba6889274944a77bafb31804139" translate="yes" xml:space="preserve">
          <source>If mod_ssl logs error AH02217</source>
          <target state="translated">mod_ssl が AH02217 エラーをログに記録する場合</target>
        </trans-unit>
        <trans-unit id="187e8611c2c347114c69ede50940676b6ada0ece" translate="yes" xml:space="preserve">
          <source>If more than a few SSL certificates are used for the server</source>
          <target state="translated">サーバーに複数のSSL証明書を使用している場合</target>
        </trans-unit>
        <trans-unit id="826566f78d16ee315591712d8b150b933bdf5e12" translate="yes" xml:space="preserve">
          <source>If more than a few dozen piped loggers are used on an operating system instance, scaling up the &quot;desktop heap&quot; is often necessary. For more detailed information, refer to the &lt;a href=&quot;../logs#piped&quot;&gt;piped logging&lt;/a&gt; documentation.</source>
          <target state="translated">数十を超えるパイプされたロガーがオペレーティングシステムインスタンスで使用される場合、「デスクトップヒープ」のスケールアップが必要になることがよくあります。 詳細については、 &lt;a href=&quot;../logs#piped&quot;&gt;パイプによるロギングの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="ddb206953830064f50466c6cdfba161af883c2ff" translate="yes" xml:space="preserve">
          <source>If more than one &lt;var&gt;filter&lt;/var&gt; is specified, they must be separated by semicolons in the order in which they should process the content. The &lt;var&gt;filter&lt;/var&gt; is case-insensitive.</source>
          <target state="translated">複数の &lt;var&gt;filter&lt;/var&gt; を指定する場合は、コンテンツを処理する順序でセミコロンで区切る必要があります。 &lt;var&gt;filter&lt;/var&gt; は大文字と小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="f181dafefb33f55161e307ca0cedb2e428be8ca2" translate="yes" xml:space="preserve">
          <source>If more than one filter is specified, they must be separated by semicolons in the order in which they should process the content.</source>
          <target state="translated">複数のフィルタを指定した場合は、それらをセミコロンで区切る必要があります。</target>
        </trans-unit>
        <trans-unit id="ff4988ab71750e2cf944b889996d799bcd663856" translate="yes" xml:space="preserve">
          <source>If more than one filter is specified, they must be separated by semicolons in the order in which they should process the content. The &lt;var&gt;filter&lt;/var&gt; argument is case-insensitive.</source>
          <target state="translated">複数のフィルターを指定する場合は、コンテンツを処理する順序でセミコロンで区切る必要があります。 &lt;var&gt;filter&lt;/var&gt; 引数は大文字と小文字を区別しません。</target>
        </trans-unit>
        <trans-unit id="dc258ddd66e6cc7cb70bba045a34410c9e10b01f" translate="yes" xml:space="preserve">
          <source>If multiple (non-regular expression) &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; sections match the directory (or one of its parents) containing a document, then the directives are applied in the order of shortest match first, interspersed with the directives from the &lt;a href=&quot;#accessfilename&quot;&gt;.htaccess&lt;/a&gt; files. For example, with</source>
          <target state="translated">複数の（非正規表現） &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; セクションがドキュメントを含むディレクトリ（またはその親の1つ）と一致する場合、ディレクティブは最初に最短一致の順に適用され、 &lt;a href=&quot;#accessfilename&quot;&gt;.htaccess&lt;/a&gt;ファイルからのディレクティブが散在します。 たとえば、</target>
        </trans-unit>
        <trans-unit id="70c09c4fa66484fd83e878165c0ebd9e1b52be60" translate="yes" xml:space="preserve">
          <source>If multiple &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections apply to the same directory they are processed in the configuration file order.</source>
          <target state="translated">複数の &lt;code&gt;&lt;a href=&quot;mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションが同じディレクトリに適用される場合、それらは構成ファイルの順序で処理されます。</target>
        </trans-unit>
        <trans-unit id="9a920797bf973a544f7722b160d7af82458c5002" translate="yes" xml:space="preserve">
          <source>If multiple SSL-enabled virtual hosts are configured and OCSP Stapling should be disabled for some</source>
          <target state="translated">複数のSSL対応バーチャルホストが設定されていて、OCSPステープリングが一部のホストで無効になっている場合</target>
        </trans-unit>
        <trans-unit id="12a8cf64c9e8327f60bc74c2c2cdcd59ceece965" translate="yes" xml:space="preserve">
          <source>If multiple language assignments are made for the same extension, the last one encountered is the one that is used. That is, for the case of:</source>
          <target state="translated">同じ拡張モジュールに対して複数の言語が割り当てられている場合、最後に遭遇したものが使用されます。つまり、この場合は</target>
        </trans-unit>
        <trans-unit id="d8331037b733855a9a3cf241d755201a0c056ca2" translate="yes" xml:space="preserve">
          <source>If multiple virtual hosts contain the best matching IP address and port, the server selects from these virtual hosts the best match based on the requested hostname. If no matching name-based virtual host is found, then the first listed virtual host that matched the IP address will be used. As a consequence, the first listed virtual host for a given IP address and port combination is the default virtual host for that IP and port combination.</source>
          <target state="translated">複数のバーチャルホストの中に IP アドレスとポートが最もよく一致するものがある場合、 サーバはこれらのバーチャルホストの中から要求されたホスト名に基づいて 最もよく一致するものを選択します。名前ベースのバーチャルホストが見つからない場合は、 IP アドレスにマッチした最初にリストアップされたバーチャルホストが使用されます。結果として、指定された IP アドレスとポートの組み合わせの最初にリストアップされたバーチャルホストがその IP とポートの組み合わせのデフォルトのバーチャルホストとなります。</target>
        </trans-unit>
        <trans-unit id="0d1d97a1e1fd7efa47e840a97d43594eadd31775" translate="yes" xml:space="preserve">
          <source>If necessary, you can also create a decrypted PEM version (not recommended) of this RSA private key with:</source>
          <target state="translated">必要に応じて、このRSA秘密鍵の復号化されたPEM版(推奨されていません)を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="28dc1e39d530b2691af661d90ee7156cac4a6c15" translate="yes" xml:space="preserve">
          <source>If neither of the directives &lt;code&gt;&lt;a href=&quot;#sslcadnrequestpath&quot;&gt;SSLCADNRequestPath&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;#sslcadnrequestfile&quot;&gt;SSLCADNRequestFile&lt;/a&gt;&lt;/code&gt; are given, then the set of acceptable CA names sent to the client is the names of all the CA certificates given by the &lt;code&gt;&lt;a href=&quot;#sslcacertificatefile&quot;&gt;SSLCACertificateFile&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#sslcacertificatepath&quot;&gt;SSLCACertificatePath&lt;/a&gt;&lt;/code&gt; directives; in other words, the names of the CAs which will actually be used to verify the client certificate.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#sslcadnrequestpath&quot;&gt;SSLCADNRequestPath&lt;/a&gt;&lt;/code&gt; とSSLCADNRequestFileのどちらのディレクティブも指定されていない場合、クライアントに送信される受け入れ可能なCA名のセットは、 &lt;code&gt;&lt;a href=&quot;#sslcacertificatefile&quot;&gt;SSLCACertificateFile&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#sslcacertificatepath&quot;&gt;SSLCACertificatePath&lt;/a&gt;&lt;/code&gt; ディレクティブで指定されたすべてのCA証明書の名前です。 つまり、クライアント証明書の検証に実際に使用されるCAの名前です。</target>
        </trans-unit>
        <trans-unit id="f5ea380f1388db5ae37484391546831f23b33865" translate="yes" xml:space="preserve">
          <source>If neither of these files existed, the next step is to attempt to provide a directory index, if &lt;code&gt;&lt;a href=&quot;mod/mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; is loaded and configured to permit that.</source>
          <target state="translated">これらのファイルのどちらも存在しない場合、 &lt;code&gt;&lt;a href=&quot;mod/mod_autoindex&quot;&gt;mod_autoindex&lt;/a&gt;&lt;/code&gt; がロードされ、それを許可するように構成されている場合、次のステップは、ディレクトリインデックスの提供を試みることです。</target>
        </trans-unit>
        <trans-unit id="11e38a88168944e3489369b9585928d6014e90f6" translate="yes" xml:space="preserve">
          <source>If neither the &lt;code&gt;enabled&lt;/code&gt; nor the &lt;code&gt;disabled&lt;/code&gt; keywords appear in the &lt;code&gt;Userdir&lt;/code&gt; directive, the argument is treated as a filename pattern, and is used to turn the name into a directory specification. A request for &lt;code&gt;http://www.example.com/~bob/one/two.html&lt;/code&gt; will be translated to:</source>
          <target state="translated">&lt;code&gt;Userdir&lt;/code&gt; ディレクティブにenabledキーワードも &lt;code&gt;disabled&lt;/code&gt; キーワードもない場合、引数はファイル名パターンとして扱われ、名前をディレクトリ指定に変換するために使用されます。 &lt;code&gt;http://www.example.com/~bob/one/two.html&lt;/code&gt; へのリクエストは次のように変換されます。</target>
        </trans-unit>
        <trans-unit id="ae0103d53cb38101a5b1a8f5c1c05f63182ec084" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;DefaultLanguage&lt;/code&gt; directive is in force and a file does not have any language extensions as configured by &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt;, then no Content-Language header field will be generated.</source>
          <target state="translated">&lt;code&gt;DefaultLanguage&lt;/code&gt; ディレクティブが有効でなく、ファイルに &lt;code&gt;&lt;a href=&quot;#addlanguage&quot;&gt;AddLanguage&lt;/a&gt;&lt;/code&gt; で設定された言語拡張がない場合、Content-Languageヘッダーフィールドは生成されません。</target>
        </trans-unit>
        <trans-unit id="06957e4ac117f84c506cb12762a02e08b9224f5e" translate="yes" xml:space="preserve">
          <source>If no &lt;code&gt;ServerName&lt;/code&gt; is specified, the server attempts to deduce the client visible hostname by first asking the operating system for the system hostname, and if that fails, performing a reverse lookup on an IP address present on the system.</source>
          <target state="translated">&lt;code&gt;ServerName&lt;/code&gt; が指定されていない場合、サーバーは、最初にオペレーティングシステムにシステムホスト名を要求することにより、クライアントが表示できるホスト名を推測し、失敗した場合は、システムに存在するIPアドレスで逆引きを実行します。</target>
        </trans-unit>
        <trans-unit id="7ef272a3608868290e867aad151eba9e7f9b451e" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;path&lt;/var&gt; is specified, &lt;code&gt;configure&lt;/code&gt; will search for the include files and libraries of a GNU DBM installation in the usual search paths. An explicit &lt;var&gt;path&lt;/var&gt; will cause &lt;code&gt;configure&lt;/code&gt; to look in &lt;code&gt;path/lib&lt;/code&gt; and &lt;code&gt;path/include&lt;/code&gt; for the relevant files. Finally, the &lt;var&gt;path&lt;/var&gt; may specify specific include and library paths separated by a colon.</source>
          <target state="translated">&lt;var&gt;path&lt;/var&gt; が指定されていない場合、 &lt;code&gt;configure&lt;/code&gt; は、通常の検索パスでGNU DBMインストールのインクルードファイルとライブラリを検索します。 明示的な &lt;var&gt;path&lt;/var&gt; を指定すると、関連するファイルの &lt;code&gt;path/lib&lt;/code&gt; と &lt;code&gt;path/include&lt;/code&gt; が検索されます。 最後に、 &lt;var&gt;path&lt;/var&gt; は、コロンで区切られた特定のインクルードおよびライブラリパスを指定できます。</target>
        </trans-unit>
        <trans-unit id="513eb45254c4bd78e8a395027760f220a039472c" translate="yes" xml:space="preserve">
          <source>If no &lt;var&gt;status&lt;/var&gt; argument is given, the redirect will be &quot;temporary&quot; (HTTP status 302). This indicates to the client that the resource has moved temporarily. The &lt;var&gt;status&lt;/var&gt; argument can be used to return other HTTP status codes:</source>
          <target state="translated">&lt;var&gt;status&lt;/var&gt; 引数が指定されていない場合、リダイレクトは「一時的」になります（HTTPステータス302）。 これは、リソースが一時的に移動したことをクライアントに示します。 &lt;var&gt;status&lt;/var&gt; 引数を使用して、他のHTTPステータスコードを返すことができます。</target>
        </trans-unit>
        <trans-unit id="d825e98065c87df90bbb4cfa5333a16553538172" translate="yes" xml:space="preserve">
          <source>If no OCSP URI is provided, contact your Certificate Authority to determine if one is available; if so, configure it with &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslstaplingforceurl&quot;&gt;SSLStaplingForceURL&lt;/a&gt;&lt;/code&gt; in the virtual host that uses the certificate.</source>
          <target state="translated">OCSP URIが提供されていない場合は、認証局に連絡して、使用可能かどうかを確認してください。 その場合は、証明書を使用する仮想ホストで &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslstaplingforceurl&quot;&gt;SSLStaplingForceURL&lt;/a&gt;&lt;/code&gt; を使用して構成します。</target>
        </trans-unit>
        <trans-unit id="f6c9367079b7f29bb513ad5878dd073facd6567f" translate="yes" xml:space="preserve">
          <source>If no handler is explicitly set for a request, the specified content type will also be used as the handler name.</source>
          <target state="translated">リクエストに対して明示的にハンドラが設定されていない場合、指定されたコンテンツタイプもハンドラ名として使用されます。</target>
        </trans-unit>
        <trans-unit id="590f391a46775a0b2279533e3c407ffc8e03daa0" translate="yes" xml:space="preserve">
          <source>If no matches are found, the request is served by the main server.</source>
          <target state="translated">一致するものが見つからない場合は、リクエストはメインサーバで処理されます。</target>
        </trans-unit>
        <trans-unit id="cd6431af37ab282133e8e8d00c38dcb0a8ea5b60" translate="yes" xml:space="preserve">
          <source>If no matching ServerName or ServerAlias is found in the set of virtual hosts containing the most specific matching IP address and port combination, then &lt;strong&gt;the first listed virtual host&lt;/strong&gt; that matches that will be used.</source>
          <target state="translated">一致するServerNameまたはServerAliasが、最も具体的な一致するIPアドレスとポートの組み合わせを含む仮想ホストのセットで見つからない場合&lt;strong&gt;、最初にリストされた&lt;/strong&gt; 、一致する&lt;strong&gt;仮想ホスト&lt;/strong&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="e7c4817085a47f2e73701377dc46c733dfbcf0f5" translate="yes" xml:space="preserve">
          <source>If no port is specified in the &lt;code&gt;ServerName&lt;/code&gt;, then the server will use the port from the incoming request. For optimal reliability and predictability, you should specify an explicit hostname and port using the &lt;code&gt;ServerName&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;ServerName&lt;/code&gt; でポートが指定されていない場合、サーバーは着信要求からのポートを使用します。 最適な信頼性と予測可能性のために、 &lt;code&gt;ServerName&lt;/code&gt; ディレクティブを使用して明示的なホスト名とポートを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ecdb8233398cd674ea8ef9b98b61c389a6d2d163" translate="yes" xml:space="preserve">
          <source>If no quoted text is present, the name of the link will be used as the text:</source>
          <target state="translated">引用文がない場合は、リンク先の名前がテキストとして使用されます。</target>
        </trans-unit>
        <trans-unit id="2fe71c59c5575af3c4c113f27054c2fad8cd115e" translate="yes" xml:space="preserve">
          <source>If none of the above match, the default value set by &lt;code&gt;xml2EncDefault&lt;/code&gt; is used.</source>
          <target state="translated">上記のいずれも一致しない場合、 &lt;code&gt;xml2EncDefault&lt;/code&gt; によって設定されたデフォルト値が使用されます。</target>
        </trans-unit>
        <trans-unit id="e92370cc2c774d07d929615014d5d6d5bddcd2d4" translate="yes" xml:space="preserve">
          <source>If none of the directives contained within the &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; directive fails, and at least one succeeds, then the &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; directive succeeds. If none succeed and none fail, then it returns a neutral result. In all other cases, it fails.</source>
          <target state="translated">&lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; ディレクティブに含まれるディレクティブのいずれも失敗せず、少なくとも1つが成功した場合、 &lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt; ディレクティブは成功します。 成功も失敗もない場合は、中立的な結果が返されます。 それ以外の場合はすべて失敗します。</target>
        </trans-unit>
        <trans-unit id="a82c26248f00cc0d3477452d26740e283348aa83" translate="yes" xml:space="preserve">
          <source>If not required, turning ProxyHTMLMeta Off will give a small performance boost by skipping this parse step. However, it is sometimes necessary for internationalisation to work correctly.</source>
          <target state="translated">必要がなければ、ProxyHTMLMeta を Off にすると、このパースステップをスキップしてパフォーマンスを少し向上させることができます。しかし、国際化が正しく動作するためには必要な場合もあります。</target>
        </trans-unit>
        <trans-unit id="92912bb1ccecfb524dde0b80d7baf6ccbef9a859" translate="yes" xml:space="preserve">
          <source>If one of the files found when reading the directory does not have an extension recognized by &lt;code&gt;mod_mime&lt;/code&gt; to designate its Charset, Content-Type, Language, or Encoding, then the result depends on the setting of the &lt;code&gt;&lt;a href=&quot;mod/mod_mime#multiviewsmatch&quot;&gt;MultiViewsMatch&lt;/a&gt;&lt;/code&gt; directive. This directive determines whether handlers, filters, and other extension types can participate in MultiViews negotiation.</source>
          <target state="translated">ディレクトリの読み取り時に見つかったファイルの1つに、char_set、Content-Type、Language、またはEncodingを指定する &lt;code&gt;mod_mime&lt;/code&gt; によって認識される拡張子がない場合、結果は &lt;code&gt;&lt;a href=&quot;mod/mod_mime#multiviewsmatch&quot;&gt;MultiViewsMatch&lt;/a&gt;&lt;/code&gt; ディレクティブの設定によって異なります。 このディレクティブは、ハンドラー、フィルター、およびその他の拡張タイプがMultiViewsネゴシエーションに参加できるかどうかを決定します。</target>
        </trans-unit>
        <trans-unit id="9e4a4ca075b232c3b5ee06481e6e3c7db1a59a26" translate="yes" xml:space="preserve">
          <source>If one or more of the directives contained within the &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; directive succeed, then the &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; directive succeeds. If none succeed and none fail, then it returns a neutral result. In all other cases, it fails.</source>
          <target state="translated">&lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; ディレクティブに含まれる1つ以上のディレクティブが成功した場合、 &lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt; ディレクティブは成功します。 成功も失敗もない場合は、中立的な結果が返されます。 それ以外の場合はすべて失敗します。</target>
        </trans-unit>
        <trans-unit id="6266111d84e09bc50f1f16ee87de824252b0bd71" translate="yes" xml:space="preserve">
          <source>If one or more of the directives contained within the &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; directive succeed, then the &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; directive fails. In all other cases, it returns a neutral result. Thus as with the other negated authorization directive &lt;code&gt;Require not&lt;/code&gt;, it can never independently authorize a request because it can never return a successful result. It can be used, however, to restrict the set of users who are authorized to access a resource.</source>
          <target state="translated">&lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; ディレクティブに含まれる1つ以上のディレクティブが成功すると、 &lt;code&gt;&amp;lt;RequireNone&amp;gt;&lt;/code&gt; ディレクティブは失敗します。 他のすべてのケースでは、ニュートラルな結果を返します。 したがって、他の否定された承認ディレクティブ &lt;code&gt;Require not&lt;/code&gt; と同様に、成功した結果を返すことができないため、独立してリクエストを承認することはできません。 ただし、リソースへのアクセスが許可されているユーザーのセットを制限するために使用できます。</target>
        </trans-unit>
        <trans-unit id="f9cc5c3ce8e9cb5b1f29ccaa8aa97006111b5ad6" translate="yes" xml:space="preserve">
          <source>If session privacy is required, the &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; module can be used to encrypt the contents of the session before writing the session to the client.</source>
          <target state="translated">セッションのプライバシーが必要な場合は、 &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; モジュールを使用して、セッションをクライアントに書き込む前にセッションの内容を暗号化できます。</target>
        </trans-unit>
        <trans-unit id="22d8642851ae05b2c65fbff50be401380272bafb" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;Block&lt;/code&gt;, every proxy request will have all its &lt;code&gt;Via:&lt;/code&gt; header lines removed. No new &lt;code&gt;Via:&lt;/code&gt; header will be generated.</source>
          <target state="translated">&lt;code&gt;Block&lt;/code&gt; に設定すると、すべてのプロキシリクエストの &lt;code&gt;Via:&lt;/code&gt; ヘッダー行がすべて削除されます。 新しい &lt;code&gt;Via:&lt;/code&gt; ヘッダーは生成されません。</target>
        </trans-unit>
        <trans-unit id="6c9e0e72129bdae754c00c793d38aebb8ab85e48" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;Full&lt;/code&gt;, each generated &lt;code&gt;Via:&lt;/code&gt; header line will additionally have the Apache httpd server version shown as a &lt;code&gt;Via:&lt;/code&gt; comment field.</source>
          <target state="translated">&lt;code&gt;Full&lt;/code&gt; に設定すると、生成された各 &lt;code&gt;Via:&lt;/code&gt; ヘッダー行に、Apache httpdサーバーのバージョンが &lt;code&gt;Via:&lt;/code&gt; コメントフィールドとして表示されます。</target>
        </trans-unit>
        <trans-unit id="4b650bd62cfdfc8796166a2ddf023833d40a02f0" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;HttpOnly&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the cookie will have the &lt;code&gt;HttpOnly&lt;/code&gt; flag set, which means that the cookie is inaccessible to JavaScript code on browsers that support this feature.</source>
          <target state="translated">&lt;code&gt;HttpOnly&lt;/code&gt; 、 &lt;code&gt;true&lt;/code&gt; 、または &lt;code&gt;1&lt;/code&gt; に設定すると、Cookieに &lt;code&gt;HttpOnly&lt;/code&gt; フラグが設定されます。これは、この機能をサポートするブラウザーのJavaScriptコードからCookieにアクセスできないことを意味します。</target>
        </trans-unit>
        <trans-unit id="f495a57a6a4ae536e095fc42ae44b801ab722aa1" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;Off&lt;/code&gt;, which is the default, no special processing is performed. If a request or reply contains a &lt;code&gt;Via:&lt;/code&gt; header, it is passed through unchanged.</source>
          <target state="translated">デフォルトの &lt;code&gt;Off&lt;/code&gt; に設定すると、特別な処理は行われません。 要求または応答に &lt;code&gt;Via:&lt;/code&gt; ヘッダーが含まれている場合、それはそのままパススルーされます。</target>
        </trans-unit>
        <trans-unit id="9a515c9e176d220cbf1a9f23c950fab97bfcb657" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;On&lt;/code&gt;, each request and reply will get a &lt;code&gt;Via:&lt;/code&gt; header line added for the current host.</source>
          <target state="translated">&lt;code&gt;On&lt;/code&gt; に設定すると、各リクエストとリプライは現在のホストに追加された &lt;code&gt;Via:&lt;/code&gt; ヘッダー行を取得します。</target>
        </trans-unit>
        <trans-unit id="6a21035a1c9e7f2cbd5e13f264a13b11a4787391" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;On&lt;/code&gt;, the semi-colon character ';' will be used as an additional sticky session path delimiter/separator. This is mainly used to emulate mod_jk's behavior when dealing with paths such as &lt;code&gt;JSESSIONID=6736bcf34;foo=aabfa&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;On&lt;/code&gt; に設定すると、セミコロン文字「;」 追加のスティッキーセッションパス区切り文字/セパレーターとして使用されます。 これは主に、 &lt;code&gt;JSESSIONID=6736bcf34;foo=aabfa&lt;/code&gt; などのパスを処理するときのmod_jkの動作をエミュレートするために使用されます</target>
        </trans-unit>
        <trans-unit id="be98e7c089bd3988ebc643e21d8134a1ab91fb63" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;On&lt;/code&gt;, the session will break if the worker is in error state or disabled. Set this value to &lt;code&gt;On&lt;/code&gt; if backend servers do not support session replication.</source>
          <target state="translated">&lt;code&gt;On&lt;/code&gt; に設定した場合、ワーカーがエラー状態にあるか無効になっているとセッションが中断します。 バックエンドサーバーがセッションレプリケーションをサポートしていない場合は、この値を &lt;code&gt;On&lt;/code&gt; に設定します。</target>
        </trans-unit>
        <trans-unit id="99e59c1251cf9d211675a8a8e14fe4e6f4380c37" translate="yes" xml:space="preserve">
          <source>If set to &lt;code&gt;secure&lt;/code&gt;, &lt;code&gt;true&lt;/code&gt;, or &lt;code&gt;1&lt;/code&gt;, the cookie will only be permitted to be translated via secure (https) connections.</source>
          <target state="translated">&lt;code&gt;secure&lt;/code&gt; 、 &lt;code&gt;true&lt;/code&gt; 、または &lt;code&gt;1&lt;/code&gt; に設定されている場合、Cookieはセキュア（https）接続経由でのみ変換が許可されます。</target>
        </trans-unit>
        <trans-unit id="6ab87ef8c4a92aa9c3284b6d7dbeabf5f16e8dcb" translate="yes" xml:space="preserve">
          <source>If set to &lt;var&gt;On&lt;/var&gt; or &lt;var&gt;Secure&lt;/var&gt;, the virtual host is permitted to run external programs and scripts as above. Setting &lt;code&gt;VHostCGIMode&lt;/code&gt;&lt;var&gt;Secure&lt;/var&gt; has the effect of denying privileges to the subprocesses, as described for &lt;code&gt;VHostSecure&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;On&lt;/var&gt; または &lt;var&gt;Secure&lt;/var&gt; に設定すると、仮想ホストは上記のように外部プログラムおよびスクリプトを実行できます。 &lt;code&gt;VHostCGIMode&lt;/code&gt; &lt;var&gt;Secure&lt;/var&gt; を設定すると、 &lt;code&gt;VHostSecure&lt;/code&gt; で説明したように、サブプロセスへの特権を拒否する効果があります。</target>
        </trans-unit>
        <trans-unit id="b71a5ce8ed0210dd2ea8b8d1bee520b910b9abb3" translate="yes" xml:space="preserve">
          <source>If set to &lt;var&gt;On&lt;/var&gt;, the &lt;code&gt;SessionEnv&lt;/code&gt; directive causes the contents of the session to be written to a CGI environment variable called &lt;var&gt;HTTP_SESSION&lt;/var&gt;.</source>
          <target state="translated">&lt;var&gt;On&lt;/var&gt; に設定すると、 &lt;code&gt;SessionEnv&lt;/code&gt; ディレクティブにより、セッションの内容が &lt;var&gt;HTTP_SESSION&lt;/var&gt; と呼ばれるCGI環境変数に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="3a90c2e3f96332233d531f64ae7da5128ad5a030" translate="yes" xml:space="preserve">
          <source>If set to Off, persistent and pooled connections are disabled. A new database connection is opened when requested by a client, and closed immediately on release. This option is for debugging and low-usage servers.</source>
          <target state="translated">Off に設定すると、永続的な接続とプールされた接続は無効になります。新しいデータベース接続は、クライアントから要求されたときにオープンされ、リリース時には直ちにクローズされます。このオプションは、デバッグや使用量の少ないサーバー向けです。</target>
        </trans-unit>
        <trans-unit id="6898850c966fc996ff4920d9ac163b7c13bbafe3" translate="yes" xml:space="preserve">
          <source>If set to the value of &lt;code&gt;0&lt;/code&gt;, the server will use the OS default.</source>
          <target state="translated">値 &lt;code&gt;0&lt;/code&gt; に設定すると、サーバーはOSのデフォルトを使用します。</target>
        </trans-unit>
        <trans-unit id="290e22ccb405dbdb8dc6c69eb42d351ab66ab224" translate="yes" xml:space="preserve">
          <source>If set to the value of &lt;code&gt;0&lt;/code&gt;, the server will use the default value provided by your OS.</source>
          <target state="translated">値 &lt;code&gt;0&lt;/code&gt; に設定すると、サーバーはOSによって提供されるデフォルト値を使用します。</target>
        </trans-unit>
        <trans-unit id="54a82d7fec56a5e60d8fe1b702d19e72660fb344" translate="yes" xml:space="preserve">
          <source>If set, an IO read timeout after a request is sent to the backend will force the worker into error state. Worker recovery behaves the same as other worker errors.</source>
          <target state="translated">設定されている場合、バックエンドにリクエストが送信された後に IO リードタイムアウトが発生すると、ワーカーは強制的にエラー状態になります。ワーカーの回復は、他のワーカーエラーと同じように動作します。</target>
        </trans-unit>
        <trans-unit id="9863ed6c47e1c96860a5fc4a1b1fed7e4099367d" translate="yes" xml:space="preserve">
          <source>If set, this directive allows content-negotiated documents to be cached by proxy servers. This could mean that clients behind those proxys could retrieve versions of the documents that are not the best match for their abilities, but it will make caching more efficient.</source>
          <target state="translated">設定されている場合、このディレクティブはコンテントネゴシエーションされたドキュメントを プロキシサーバでキャッシュすることを許可します。これは、プロキシの背後にいるクライアントが自分の能力にベストマッチしない ドキュメントのバージョンを取得してしまうことを意味しますが、キャッシュをより効率的にすることができます。</target>
        </trans-unit>
        <trans-unit id="5817877629cfc71c1cf872651de853016a545f75" translate="yes" xml:space="preserve">
          <source>If set, this will be the maximum time to wait for a free connection in the connection pool, in milliseconds. If there are no free connections in the pool, the Apache httpd will return &lt;code&gt;SERVER_BUSY&lt;/code&gt; status to the client.</source>
          <target state="translated">設定されている場合、これは接続プール内の空き接続を待機する最大時間（ミリ秒単位）です。 プールに空き接続がない場合、Apache httpdは &lt;code&gt;SERVER_BUSY&lt;/code&gt; ステータスをクライアントに返します。</target>
        </trans-unit>
        <trans-unit id="59bad35f2ba55f5509fb534a335b0a85257b4673" translate="yes" xml:space="preserve">
          <source>If several parameters are needed in &lt;var&gt;Require-Parameters&lt;/var&gt;, they must be enclosed in quotation marks. Otherwise, only the first one is taken into account.</source>
          <target state="translated">&lt;var&gt;Require-Parameters&lt;/var&gt; で複数のパラメーターが必要な場合は、それらを引用符で囲む必要があります。 それ以外の場合は、最初の1つだけが考慮されます。</target>
        </trans-unit>
        <trans-unit id="8f3475024ea3d62ec86bf18cae7664a82b30f7bf" translate="yes" xml:space="preserve">
          <source>If some workers are disabled, the others will still be scheduled correctly.</source>
          <target state="translated">一部の作業員が障害を持っていても、他の作業員は正しくスケジュールが組まれます。</target>
        </trans-unit>
        <trans-unit id="ae9fe5d859b228e3baaab3adba9a6d4d38a32da6" translate="yes" xml:space="preserve">
          <source>If specified, Apache httpd will not make the column headings in a FancyIndexed directory listing into links for sorting. The default behavior is for them to be links; selecting the column heading will sort the directory listing by the values in that column. However, query string arguments which are appended to the URL will still be honored. That behavior is controlled by &lt;a href=&quot;#indexoptions.ignoreclient&quot;&gt;&lt;code&gt;IndexOptions IgnoreClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">指定した場合、Apache httpdは、FancyIndexedディレクトリリストの列見出しをソート用のリンクに変換しません。 デフォルトの動作では、それらはリンクになります。 列見出しを選択すると、その列の値でディレクトリリストがソートされます。 ただし、URLに追加されるクエリ文字列引数は引き続き有効です。 その動作は&lt;a href=&quot;#indexoptions.ignoreclient&quot;&gt; &lt;code&gt;IndexOptions IgnoreClient&lt;/code&gt; &lt;/a&gt;によって制御されます 。</target>
        </trans-unit>
        <trans-unit id="0e436c8bfe805ac9d6e412d6ccdc8e895ee727aa" translate="yes" xml:space="preserve">
          <source>If specified, Apache httpd will show files normally hidden because the subrequest returned &lt;code&gt;HTTP_UNAUTHORIZED&lt;/code&gt; or &lt;code&gt;HTTP_FORBIDDEN&lt;/code&gt;</source>
          <target state="translated">指定すると、サブリクエストが &lt;code&gt;HTTP_UNAUTHORIZED&lt;/code&gt; または &lt;code&gt;HTTP_FORBIDDEN&lt;/code&gt; を返したため、Apache httpdは通常非表示のファイルを表示します</target>
        </trans-unit>
        <trans-unit id="a7d7fbb581b9e0ce27cd82884405360e9083aff1" translate="yes" xml:space="preserve">
          <source>If successful, the following RPMs will be created:</source>
          <target state="translated">成功すると、以下のRPMが作成されます。</target>
        </trans-unit>
        <trans-unit id="aa4a50a8270934cd12bc7da1b6c8fae734a41e4a" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt; option is given with the &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; directive, the column headers are links that control the order of the display. If you select a header link, the listing will be regenerated, sorted by the values in that column. Selecting the same header repeatedly toggles between ascending and descending order. These column header links are suppressed with the &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; directive's &lt;code&gt;&lt;a href=&quot;#indexoptions.suppresscolumnsorting&quot;&gt;SuppressColumnSorting&lt;/a&gt;&lt;/code&gt; option.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;FancyIndexing&lt;/a&gt;&lt;/code&gt; オプションが &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; ディレクティブで指定されている場合、列ヘッダーは表示の順序を制御するリンクです。 ヘッダーリンクを選択すると、リストが再生成され、その列の値でソートされます。 同じヘッダーを繰り返し選択すると、昇順と降順が切り替わります。 これらの列ヘッダーリンクは、 &lt;code&gt;&lt;a href=&quot;#indexoptions&quot;&gt;IndexOptions&lt;/a&gt;&lt;/code&gt; ディレクティブの &lt;code&gt;&lt;a href=&quot;#indexoptions.suppresscolumnsorting&quot;&gt;SuppressColumnSorting&lt;/a&gt;&lt;/code&gt; オプションで抑制されます。</target>
        </trans-unit>
        <trans-unit id="80aaf098d4f0b644566bb737affc4f1bd485bce0" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;#sessionheader&quot;&gt;SessionHeader&lt;/a&gt;&lt;/code&gt; directive is used to define an HTTP request header, the session, encoded as a &lt;strong&gt;application/x-www-form-urlencoded&lt;/strong&gt; string, will be made available to the application. If the same header is provided in the response, the value of this response header will be used to replace the session. As above, any encryption or decryption, and the reading the session from or writing the session to the chosen storage mechanism is handled by the &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt; modules and corresponding configuration.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#sessionheader&quot;&gt;SessionHeader&lt;/a&gt;&lt;/code&gt; ディレクティブを使用してHTTPリクエストヘッダーを定義すると、 &lt;strong&gt;application / x-www-form-urlencoded&lt;/strong&gt;文字列としてエンコードされたセッションがアプリケーションで利用できるようになります。 同じヘッダーが応答で提供される場合、この応答ヘッダーの値はセッションを置き換えるために使用されます。 上記のように、暗号化または復号化、および選択したストレージメカニズムからのセッションの読み取りまたはセッションへの書き込みは、 &lt;code&gt;&lt;a href=&quot;mod_session&quot;&gt;mod_session&lt;/a&gt;&lt;/code&gt; モジュールおよび対応する構成によって処理されます。</target>
        </trans-unit>
        <trans-unit id="187a2fe037e023ef190f5f02e979a7d2fa95cc57" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; specified in the configuration file is default of 80 (or any other port below 1024), then it is necessary to have root privileges in order to start apache, so that it can bind to this privileged port. Once the server has started and performed a few preliminary activities such as opening its log files, it will launch several &lt;em&gt;child&lt;/em&gt; processes which do the work of listening for and answering requests from clients. The main &lt;code&gt;httpd&lt;/code&gt; process continues to run as the root user, but the child processes run as a less privileged user. This is controlled by the selected &lt;a href=&quot;mpm&quot;&gt;Multi-Processing Module&lt;/a&gt;.</source>
          <target state="translated">構成ファイルで指定された &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; がデフォルトの80（または1024未満の他のポート）である場合、Apacheを起動するには、この特権ポートにバインドできるようにroot特権が必要です。 サーバーが起動し、ログファイルを開くなどのいくつかの予備アクティビティを実行すると、クライアントからの要求をリッスンして応答する作業を行ういくつかの&lt;em&gt;子&lt;/em&gt;プロセスが起動します。 メインの &lt;code&gt;httpd&lt;/code&gt; プロセスは引き続きrootユーザーとして実行されますが、子プロセスはより低い特権のユーザーとして実行されます。 これは、選択した&lt;a href=&quot;mpm&quot;&gt;マルチプロセッシングモジュール&lt;/a&gt;によって制御されます。</target>
        </trans-unit>
        <trans-unit id="26b8c9102d77c7d55ca41887662cb5776eaccb8e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; directive is correctly configured and valid for this included file, attempts to POST requests to the enclosing HTML document will be passed through to subrequests as POST requests as well. Without the directive, all subrequests are processed as GET requests.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; ディレクティブが正しく設定され、このインクルードファイルに対して有効である場合、囲んでいるHTMLドキュメントへのPOSTリクエストの試行は、POSTリクエストとしてサブリクエストにも渡されます。 ディレクティブがない場合、すべてのサブリクエストはGETリクエストとして処理されます。</target>
        </trans-unit>
        <trans-unit id="ca4ba4453b4f97065207066c52f04a72403d976e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Accept:&lt;/code&gt; header contains &lt;em&gt;no&lt;/em&gt; q factors at all, httpd sets the q value of &quot;*/*&quot;, if present, to 0.01 to emulate the desired behavior. It also sets the q value of wildcards of the format &quot;type/*&quot; to 0.02 (so these are preferred over matches against &quot;*/*&quot;. If any media type on the &lt;code&gt;Accept:&lt;/code&gt; header contains a q factor, these special values are &lt;em&gt;not&lt;/em&gt; applied, so requests from browsers which send the explicit information to start with work as expected.</source>
          <target state="translated">&lt;code&gt;Accept:&lt;/code&gt; ヘッダーにqファクターが&lt;em&gt;まったく&lt;/em&gt;含まれてい&lt;em&gt;ない&lt;/em&gt;場合、httpdは「* / *」のq値を、存在する場合は0.01に設定して、望ましい動作をエミュレートします。 また、「type / *」形式のワイルドカードのq値を0.02に設定します（したがって、「* / *」に対する一致よりも優先されます。Accept &lt;code&gt;Accept:&lt;/code&gt; ヘッダーのメディアタイプにq係数が含まれている場合、これらの特別な値は適用されたため、明示的な情報を送信するブラウザからのリクエストは、期待どおりに作業を開始します。</target>
        </trans-unit>
        <trans-unit id="584fb91ce6324deb929eb384947711096d64889e" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Alias&lt;/code&gt; directive is used within a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section the URL-path is omitted, and the file-path is interpreted using &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; セクション内で &lt;code&gt;Alias&lt;/code&gt; ディレクティブが使用されている場合、URLパスは省略され、ファイルパスは&lt;a href=&quot;../expr&quot;&gt;式の構文&lt;/a&gt;を使用して解釈されます 。</target>
        </trans-unit>
        <trans-unit id="c3f975a6c70a8a40418bb630fa25ab501c05d63f" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;Redirect&lt;/code&gt; directive is used within a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section with the &lt;var&gt;URL-path&lt;/var&gt; omitted, then the &lt;var&gt;URL&lt;/var&gt; parameter will be interpreted using &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Redirect&lt;/code&gt; ディレクティブが &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; セクション内で使用され、 &lt;var&gt;URL-path&lt;/var&gt; 省略されている場合、 &lt;var&gt;URL&lt;/var&gt; パラメータは&lt;a href=&quot;../expr&quot;&gt;式の構文&lt;/a&gt;を使用して解釈されます 。</target>
        </trans-unit>
        <trans-unit id="8d3c028b26b0a98efeb2c7ceeb6a06d6f6f90df3" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;ScriptAlias&lt;/code&gt; directive is used within a &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; section with the URL-path omitted, then the URL parameter will be interpreted using &lt;a href=&quot;../expr&quot;&gt;expression syntax&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptAlias&lt;/code&gt; ディレクティブが &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;core#locationmatch&quot;&gt;&amp;lt;LocationMatch&amp;gt;&lt;/a&gt;&lt;/code&gt; セクション内で使用され、URLパスが省略されている場合、URLパラメータは&lt;a href=&quot;../expr&quot;&gt;式の構文&lt;/a&gt;を使用して解釈されます 。</target>
        </trans-unit>
        <trans-unit id="af236c4126475898a1387b24b79386162c46b241" translate="yes" xml:space="preserve">
          <source>If the &lt;code&gt;uid&lt;/code&gt; attribute was used instead of the &lt;code&gt;cn&lt;/code&gt; attribute in the URL above, the above three lines could be condensed to</source>
          <target state="translated">上記のURLで &lt;code&gt;cn&lt;/code&gt; 属性の代わりに &lt;code&gt;uid&lt;/code&gt; 属性が使用された場合、上記の3行を次のように圧縮できます。</target>
        </trans-unit>
        <trans-unit id="ad841171b3ab57cbcca6acc1ad24337d36372b92" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;TestString&lt;/em&gt; has the special value &lt;code&gt;expr&lt;/code&gt;, the &lt;em&gt;CondPattern&lt;/em&gt; will be treated as an &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;TestString&lt;/em&gt;に特別な値 &lt;code&gt;expr&lt;/code&gt; がある場合、 &lt;em&gt;CondPattern&lt;/em&gt;は&lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt;として扱われ&lt;em&gt;ます&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit id="c35fccc2c1d91aa8b5ce5c9e8f7dff0972997a33" translate="yes" xml:space="preserve">
          <source>If the &lt;em&gt;TestString&lt;/em&gt; has the special value &lt;code&gt;expr&lt;/code&gt;, the &lt;em&gt;CondPattern&lt;/em&gt; will be treated as an &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt;. HTTP headers referenced in the expression will be added to the Vary header if the &lt;code&gt;novary&lt;/code&gt; flag is not given.</source>
          <target state="translated">&lt;em&gt;TestString&lt;/em&gt;に特別な値 &lt;code&gt;expr&lt;/code&gt; がある場合、 &lt;em&gt;CondPattern&lt;/em&gt;は&lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt;として扱われ&lt;em&gt;ます&lt;/em&gt; 。 式で参照されるHTTPヘッダーは、 &lt;code&gt;novary&lt;/code&gt; フラグが指定されていない場合、Varyヘッダーに追加されます。</target>
        </trans-unit>
        <trans-unit id="0a335426bb1bc53928ea1adcbf27925c85c60b49" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;file-path&lt;/var&gt; begins with a pipe character &quot;&lt;code&gt;|&lt;/code&gt;&quot; then it is assumed to be a command to spawn to handle the error log.</source>
          <target state="translated">&lt;var&gt;file-path&lt;/var&gt; がパイプ文字「 &lt;code&gt;|&lt;/code&gt; 」で始まる場合は、エラーログを処理するために生成されるコマンドと見なされます。</target>
        </trans-unit>
        <trans-unit id="8aea7a8101ad8caf85dbeadd7053f103c8a1b1a3" translate="yes" xml:space="preserve">
          <source>If the &lt;var&gt;operator&lt;/var&gt; is omitted, it is assumed to be &lt;code&gt;=&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;operator&lt;/var&gt; を省略すると、 &lt;code&gt;=&lt;/code&gt; と見なされます。</target>
        </trans-unit>
        <trans-unit id="60dff75a0118e7de10f2411b976389d9d83be1e5" translate="yes" xml:space="preserve">
          <source>If the Apache console window closes immediately or unexpectedly after startup, open the Command Prompt from the Start Menu --&amp;gt; Programs. Change to the folder to which you installed Apache, type the command &lt;code&gt;httpd.exe&lt;/code&gt;, and read the error message. Then change to the logs folder, and review the &lt;code&gt;error.log&lt;/code&gt; file for configuration mistakes. Assuming httpd was installed into &lt;code&gt;C:\Program Files\Apache Software Foundation\Apache2.4\&lt;/code&gt;, you can do the following:</source>
          <target state="translated">起動後すぐに、または予期せずにApacheコンソールウィンドウが閉じる場合は、[スタート]メニュー-&amp;gt; [プログラム]からコマンドプロンプトを開きます。 Apacheをインストールしたフォルダーに &lt;code&gt;httpd.exe&lt;/code&gt; 、コマンドhttpd.exeを入力して、エラーメッセージを読みます。 次に、logsフォルダーに移動し、 &lt;code&gt;error.log&lt;/code&gt; ファイルで設定の間違いを確認します。 httpdが &lt;code&gt;C:\Program Files\Apache Software Foundation\Apache2.4\&lt;/code&gt; にインストールされているとすると、次のことが可能です。</target>
        </trans-unit>
        <trans-unit id="d747714645d22056e6436f1d9ea1e98dce4b2458" translate="yes" xml:space="preserve">
          <source>If the Apache user is compromised, for example through a flaw in a CGI process, it is possible that the cache may be targeted. When using &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt;, it is relatively easy to insert or modify a cached entity.</source>
          <target state="translated">CGIプロセスの欠陥などにより、Apacheユーザーが侵害された場合、キャッシュが標的にされる可能性があります。 &lt;code&gt;&lt;a href=&quot;mod/mod_cache_disk&quot;&gt;mod_cache_disk&lt;/a&gt;&lt;/code&gt; を使用する場合、キャッシュされたエンティティの挿入または変更は比較的簡単です。</target>
        </trans-unit>
        <trans-unit id="b2fa946abfb1a911ca46a05e531a9450d015a14a" translate="yes" xml:space="preserve">
          <source>If the CACHE filter is specified more than once, the last instance will apply.</source>
          <target state="translated">CACHE フィルタが複数回指定された場合、最後のインスタンスが適用されます。</target>
        </trans-unit>
        <trans-unit id="3e244716d2bf3f55686b6a2b2063aa2db0f8c86b" translate="yes" xml:space="preserve">
          <source>If the ErrorDocument specifies a local redirect to a CGI script, the script should include a &quot;&lt;code&gt;Status:&lt;/code&gt;&quot; header field in its output in order to ensure the propagation all the way back to the client of the error condition that caused it to be invoked. For instance, a Perl ErrorDocument script might include the following:</source>
          <target state="translated">ErrorDocumentがCGIスクリプトへのローカルリダイレクトを指定している場合、スクリプトが呼び出される原因となったエラー状態のクライアントへの伝播が確実に行われるように、スクリプトはその出力に &quot; &lt;code&gt;Status:&lt;/code&gt; &quot;ヘッダーフィールドを含める必要があります。 たとえば、Perl ErrorDocumentスクリプトには次のものが含まれます。</target>
        </trans-unit>
        <trans-unit id="439e79618992a5d79f16ae74abbe297577c114b3" translate="yes" xml:space="preserve">
          <source>If the FTP server asks for a password when given this username (which it should), then Apache will reply with a &lt;code&gt;401&lt;/code&gt; (Authorization required) response, which causes the Browser to pop up the username/password dialog. Upon entering the password, the connection attempt is retried, and if successful, the requested resource is presented. The advantage of this procedure is that your browser does not display the password in cleartext (which it would if you had used</source>
          <target state="translated">このユーザー名を指定するときにFTPサーバーがパスワードを要求する場合（必要です）、Apacheは &lt;code&gt;401&lt;/code&gt; （認証が必要）応答で応答し、ブラウザーがユーザー名/パスワードダイアログをポップアップします。 パスワードを入力すると、接続の試行が再試行され、成功すると、要求されたリソースが提示されます。 この手順の利点は、ブラウザにパスワードを平文で表示しないことです（これは、</target>
        </trans-unit>
        <trans-unit id="3420055936258920b9fb577c970017f0ee0c3068" translate="yes" xml:space="preserve">
          <source>If the HTTP &lt;var&gt;Content-Type&lt;/var&gt; header includes a &lt;var&gt;charset&lt;/var&gt; parameter, that is used.</source>
          <target state="translated">HTTP &lt;var&gt;Content-Type&lt;/var&gt; ヘッダーに &lt;var&gt;charset&lt;/var&gt; パラメータが含まれている場合、それが使用されます。</target>
        </trans-unit>
        <trans-unit id="c14626595bac93bb3a579a09abbe840c5085eb5f" translate="yes" xml:space="preserve">
          <source>If the LDAP server goes down and breaks an existing connection, &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; will attempt to re-connect, starting with the primary server, and trying each redundant server in turn. Note that this is different than a true round-robin search.</source>
          <target state="translated">LDAPサーバーがダウンして既存の接続が切断されると、 &lt;code&gt;&lt;a href=&quot;mod_authnz_ldap&quot;&gt;mod_authnz_ldap&lt;/a&gt;&lt;/code&gt; は、プライマリサーバーから始めて、各冗長サーバーを順番に試し、再接続を試みます。 これは、真のラウンドロビン検索とは異なることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8368fd63defc7a67273cad6fb714f7faae47403c" translate="yes" xml:space="preserve">
          <source>If the OCSP URI is provided and the web server can communicate to it directly without using a proxy, no configuration is required. Note that firewall rules that control outbound connections from the web server may need to be adjusted.</source>
          <target state="translated">OCSP URIが提供され、Webサーバがプロキシを使用せずに直接通信できる場合は、設定は必要ありません。ウェブサーバーからのアウトバウンド接続を制御するファイアウォールのルールを調整する必要があるかもしれないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="b455f0e95cff3035376482a1dfdf01ff203b58db" translate="yes" xml:space="preserve">
          <source>If the OCSP responder is slow or unreliable</source>
          <target state="translated">OCSP レスポンダが遅い、または信頼性が低い場合</target>
        </trans-unit>
        <trans-unit id="eeea036e9d16e4349ed3b9262315603b3c2aa630" translate="yes" xml:space="preserve">
          <source>If the Proxy directive scheme starts with the &lt;code&gt;balancer://&lt;/code&gt; (eg: &lt;code&gt;balancer://cluster&lt;/code&gt;, any path information is ignored), then a virtual worker that does not really communicate with the backend server will be created. Instead, it is responsible for the management of several &quot;real&quot; workers. In that case, the special set of parameters can be added to this virtual worker. See &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; for more information about how the balancer works.</source>
          <target state="translated">Proxyディレクティブスキームが &lt;code&gt;balancer://&lt;/code&gt; で始まる場合（例： &lt;code&gt;balancer://cluster&lt;/code&gt; 、パス情報はすべて無視されます）、バックエンドサーバーと実際には通信しない仮想ワーカーが作成されます。 代わりに、いくつかの「実際の」労働者の管理を担当します。 その場合、特別なパラメーターのセットをこの仮想ワーカーに追加できます。 バランサーの動作の詳細については、 &lt;code&gt;&lt;a href=&quot;mod_proxy_balancer&quot;&gt;mod_proxy_balancer&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="3788102fb775723595d585b9f2d18a371ddd8386" translate="yes" xml:space="preserve">
          <source>If the SSL library supports TLSv1.3 (OpenSSL 1.1.1 and later), the protocol specifier &quot;TLSv1.3&quot; can be used to configure the cipher suites for that protocol. Since TLSv1.3 does not offer renegotiations, specifying ciphers for it in a directory context is not allowed.</source>
          <target state="translated">SSL ライブラリが TLSv1.3 (OpenSSL 1.1.1.1 以降)をサポートしている場合、プロトコル指定子 &quot;TLSv1.3&quot; を使ってそのプロトコルの暗号スイートを設定することができます。TLSv1.3 は再ネゴシエーションを提供しないので、ディレクトリコンテキストで暗号を指定することはできません。</target>
        </trans-unit>
        <trans-unit id="59e824ccee6ddf0c861325d1b7ebed2b9622db50" translate="yes" xml:space="preserve">
          <source>If the URI from the request is an absolute URI, and its hostname and port match the main server or one of the configured virtual hosts &lt;em&gt;and&lt;/em&gt; match the address and port to which the client sent the request, then the scheme/hostname/port prefix is stripped off and the remaining relative URI is served by the corresponding main server or virtual host. If it does not match, then the URI remains untouched and the request is taken to be a proxy request.</source>
          <target state="translated">リクエストのURIが絶対URIであり、そのホスト名とポートがメインサーバーまたは構成済みの仮想ホストの1つと一致し、クライアントがリクエストを送信したアドレスとポート&lt;em&gt;と&lt;/em&gt;一致する場合、scheme / hostname / portプレフィックスは取り除かれ、残りの相対URIは対応するメインサーバーまたは仮想ホストによって処理されます。 一致しない場合、URIはそのまま残り、リクエストはプロキシリクエストと見なされます。</target>
        </trans-unit>
        <trans-unit id="5e9e7d61ae559148802142fd994f42db401bac23" translate="yes" xml:space="preserve">
          <source>If the URL included a query string (e.g. from a HTML form GET method) it will not be cached unless the response specifies an explicit expiration by including an &quot;Expires:&quot; header or the max-age or s-maxage directive of the &quot;Cache-Control:&quot; header, as per RFC2616 sections 13.9 and 13.2.1.</source>
          <target state="translated">URLにクエリ文字列(HTMLフォームのGETメソッドなど)が含まれていた場合、「Expires:」ヘッダーを含むか、RFC2616セクション13.9および13.2.1に従って、「Cache-Control:」ヘッダーのmax-ageまたはs-maxageディレクティブを含むことで、応答が明示的な期限切れを指定しない限り、キャッシュされません。</target>
        </trans-unit>
        <trans-unit id="76db290ed92b1865df4ac49a69a06843ffacd710" translate="yes" xml:space="preserve">
          <source>If the URL is not found within the cache, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; will add a &lt;a href=&quot;filter&quot;&gt;filter&lt;/a&gt; to the filter stack in order to record the response to the cache, and then stand down, allowing normal request processing to continue. If the content is determined to be cacheable, the content will be saved to the cache for future serving, otherwise the content will be ignored.</source>
          <target state="translated">キャッシュ内でURLが見つからない場合、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; はキャッシュへの応答を記録するためにフィルタースタックに&lt;a href=&quot;filter&quot;&gt;フィルター&lt;/a&gt;を追加し、停止して、通常のリクエスト処理を続行できるようにします。 コンテンツがキャッシュ可能であると判断された場合、コンテンツは将来の提供のためにキャッシュに保存されます。それ以外の場合、コンテンツは無視されます。</target>
        </trans-unit>
        <trans-unit id="d5cf1845a6e293dd51ef8ab58d8b5f77b1ab3ae0" translate="yes" xml:space="preserve">
          <source>If the answer to both questions is 'no', then the default MPM will be &lt;code&gt;&lt;a href=&quot;mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">両方の質問に対する答えが「いいえ」の場合、デフォルトのMPMは &lt;code&gt;&lt;a href=&quot;mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; になります 。</target>
        </trans-unit>
        <trans-unit id="0c5c832af2d1e97f75a3a747661ebdd5b87837df" translate="yes" xml:space="preserve">
          <source>If the answer to both questions is 'yes', the default MPM is &lt;code&gt;&lt;a href=&quot;mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">両方の質問に対する答えが「はい」の場合、デフォルトのMPMは &lt;code&gt;&lt;a href=&quot;mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="81ccedf3c1fd071fa61236861e014b40a67e34b9" translate="yes" xml:space="preserve">
          <source>If the attribute field contains the username, common name and telephone number of a user, a CGI program will have access to this information without the need to make a second independent LDAP query to gather this additional information.</source>
          <target state="translated">属性フィールドにユーザのユーザ名、共通名、電話番号が含まれている場合、CGI プログラムはこの追加情報を収集するために 2 番目の独立した LDAP クエリを作成する必要なく、この情報にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="5dbcf7205890b5518b70bb67b290f76b50d0107a" translate="yes" xml:space="preserve">
          <source>If the cache gets full, it reserves the option to delete content from the cache to make space. Content can be deleted at any time, and can be stale or fresh. The &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; tool can be run on a once off basis, or deployed as a daemon to keep the size of the cache within the given size, or the given number of inodes. The tool attempts to delete stale content before attempting to delete fresh content.</source>
          <target state="translated">キャッシュがいっぱいになると、コンテンツをキャッシュから削除してスペースを確保するオプションが予約されます。 コンテンツはいつでも削除でき、古くなったり新鮮になったりする可能性があります。 &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt;ツールは、1回限り実行するか、キャッシュとして指定されたサイズまたは指定された数のiノード内にキャッシュのサイズを維持するデーモンとしてデプロイできます。 このツールは、新しいコンテンツを削除する前に、古いコンテンツを削除しようとします。</target>
        </trans-unit>
        <trans-unit id="c1e1191526272d37ceba137a730d8b0179c4ff46" translate="yes" xml:space="preserve">
          <source>If the certificate does not point to an OCSP responder, or if a different address must be used</source>
          <target state="translated">証明書が OCSP レスポンダを指していない場合や、別のアドレスを使用する必要がある場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="d7c1c17c837245aee22a0ca6abd74c0d81f01754" translate="yes" xml:space="preserve">
          <source>If the client requests &lt;code&gt;http://example.com/service/foo.txt&lt;/code&gt;, it will be told to access &lt;code&gt;http://foo2.example.com/service/foo.txt&lt;/code&gt; instead. This includes requests with &lt;code&gt;GET&lt;/code&gt; parameters, such as &lt;code&gt;http://example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt;, it will be redirected to &lt;code&gt;http://foo2.example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt;. Note that &lt;code&gt;POST&lt;/code&gt;s will be discarded.</source>
          <target state="translated">クライアントが &lt;code&gt;http://example.com/service/foo.txt&lt;/code&gt; をリクエストすると、代わりに &lt;code&gt;http://foo2.example.com/service/foo.txt&lt;/code&gt; にアクセスするように指示されます。 これには、 &lt;code&gt;http://example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt; &lt;code&gt;http://foo2.example.com/service/foo.pl?q=23&amp;amp;a=42&lt;/code&gt; などの &lt;code&gt;GET&lt;/code&gt; パラメータを含むリクエストが含まれ、 http： //foo2.example.com/service/foo.pl？にリダイレクトされます。 q = 23＆a = 42 。 &lt;code&gt;POST&lt;/code&gt; は破棄されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="5dec122707f5e194cdac5a7a70c1fe2d618dd879" translate="yes" xml:space="preserve">
          <source>If the config define &lt;code&gt;-DDUMP_CONFIG&lt;/code&gt; is set, &lt;code&gt;&lt;a href=&quot;mod_info&quot;&gt;mod_info&lt;/a&gt;&lt;/code&gt; will dump the pre-parsed configuration to &lt;code&gt;stdout&lt;/code&gt; during server startup.</source>
          <target state="translated">config define &lt;code&gt;-DDUMP_CONFIG&lt;/code&gt; が設定されている場合、 mod_infoはサーバーの起動時に事前解析された設定を &lt;code&gt;stdout&lt;/code&gt; にダンプします。</target>
        </trans-unit>
        <trans-unit id="55526160eba92ffedf8c47d082e95548331ff375" translate="yes" xml:space="preserve">
          <source>If the connection is using SSL, the server supports &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#servernameindication&quot;&gt;Server Name Indication&lt;/a&gt;, and the SSL client handshake includes the TLS extension with the requested hostname, then that hostname is used below just like the &lt;code&gt;Host:&lt;/code&gt; header would be used on a non-SSL connection. Otherwise, the first name-based vhost whose address matched is used for SSL connections. This is significant because the vhost determines which certificate the server will use for the connection.</source>
          <target state="translated">接続がSSLを使用している場合、サーバーは&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#servernameindication&quot;&gt;サーバー名表示を&lt;/a&gt;サポートし、SSLクライアントハンドシェイクには要求されたホスト名を含むTLS拡張が含まれます。そのホスト名は、非SSL接続で &lt;code&gt;Host:&lt;/code&gt; ヘッダーが使用されるのと同じように以下で使用されます。 それ以外の場合は、アドレスが一致した最初の名前ベースの仮想ホストがSSL接続に使用されます。 vhostは、サーバーが接続に使用する証明書を決定するため、これは重要です。</target>
        </trans-unit>
        <trans-unit id="a601cb22559a2eb8a51c32babb677e8e2dfb053c" translate="yes" xml:space="preserve">
          <source>If the connection supports PUSH, these two resources will be sent to the client. As a web developer, you may set these headers either directly in your application response or you configure the server via</source>
          <target state="translated">接続が PUSH をサポートしている場合、これら 2 つのリソースがクライアントに送信されます。ウェブ開発者として、これらのヘッダを設定するには、アプリケーションのレスポンスで直接設定するか、あるいは</target>
        </trans-unit>
        <trans-unit id="f66c6eab68db705bb8f07e1084159ad0d4f547cd" translate="yes" xml:space="preserve">
          <source>If the content found within the cache is stale, the &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; module converts the request into a &lt;strong&gt;conditional request&lt;/strong&gt;. If the origin server responds with a normal response, the normal response is cached, replacing the content already cached. If the origin server responds with a 304 Not Modified response, the content is marked as fresh again, and the cached content is served by the filter instead of saving it.</source>
          <target state="translated">キャッシュ内で見つかったコンテンツが古い場合、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; モジュールはリクエストを&lt;strong&gt;条件付きリクエストに&lt;/strong&gt;変換します。 オリジンサーバーが通常の応答で応答すると、通常の応答がキャッシュされ、すでにキャッシュされているコンテンツが置き換えられます。 オリジンサーバーが304 Not Modifiedレスポンスで応答した場合、コンテンツは再びフレッシュとしてマークされ、キャッシュされたコンテンツは保存する代わりにフィルターによって提供されます。</target>
        </trans-unit>
        <trans-unit id="aed470f34eb69884e4bce98c0bb64d4b74826057" translate="yes" xml:space="preserve">
          <source>If the content has changed, then the content is served as if the request were not conditional to begin with.</source>
          <target state="translated">コンテンツが変更された場合、リクエストが最初から条件付きではなかったかのようにコンテンツが提供されます。</target>
        </trans-unit>
        <trans-unit id="82c42b25fe793bdfccdd6c21e189074681acaf84" translate="yes" xml:space="preserve">
          <source>If the content is new enough (younger than its &lt;strong&gt;freshness lifetime&lt;/strong&gt;), it is considered &lt;strong&gt;fresh&lt;/strong&gt;. An HTTP cache is free to serve fresh content without making any calls to the origin server at all.</source>
          <target state="translated">コンテンツが十分に新しい（ &lt;strong&gt;鮮度の有効期間&lt;/strong&gt;よりも新しい）場合、そのコンテンツは&lt;strong&gt;新鮮&lt;/strong&gt;であると見なされます。 HTTPキャッシュは、元のサーバーをまったく呼び出さなくても、無料で新鮮なコンテンツを提供できます。</target>
        </trans-unit>
        <trans-unit id="c2499f7db11188367f2690abefd5033229cf2f58" translate="yes" xml:space="preserve">
          <source>If the content is too old (older than its &lt;strong&gt;freshness lifetime&lt;/strong&gt;), it is considered &lt;strong&gt;stale&lt;/strong&gt;. An HTTP cache should contact the origin server and check whether the content is still fresh before serving stale content to a client. The origin server will either respond with replacement content if not still valid, or ideally, the origin server will respond with a code to tell the cache the content is still fresh, without the need to generate or send the content again. The content becomes fresh again and the cycle continues.</source>
          <target state="translated">コンテンツが古すぎる（ &lt;strong&gt;鮮度の有効期間&lt;/strong&gt;よりも古い）場合は、 &lt;strong&gt;古く&lt;/strong&gt;なったと見なされます。 HTTPキャッシュは、古いコンテンツをクライアントに提供する前に、オリジンサーバーに接続し、コンテンツがまだ新しいかどうかを確認する必要があります。 オリジンサーバーは、まだ有効でない場合は置換コンテンツで応答するか、理想的には、オリジンサーバーがコードを応答して、コンテンツをまだ生成または送信しなくても、コンテンツがまだ新しいことをキャッシュに通知します。 コンテンツが再び新鮮になり、サイクルが継続します。</target>
        </trans-unit>
        <trans-unit id="d1bd8748f84f89f5114ec4e5335c0513bcb3a95f" translate="yes" xml:space="preserve">
          <source>If the cookie and the request parameter both provide routing information for the same request, the information from the request parameter is used.</source>
          <target state="translated">クッキーとリクエストパラメータの両方が同じリクエストのルーティング情報を 提供する場合、リクエストパラメータの情報が使われる。</target>
        </trans-unit>
        <trans-unit id="06f85e767a2cab89b294f0e0c048ab6b68f4c484" translate="yes" xml:space="preserve">
          <source>If the data start with an XML Byte Order Mark (BOM) or an XML encoding declaration, that is used.</source>
          <target state="translated">データの先頭がXMLバイトオーダーマーク(BOM)またはXMLエンコーディング宣言である場合、それが使用されます。</target>
        </trans-unit>
        <trans-unit id="52739adf786064186985f91946f14f8d25580ed1" translate="yes" xml:space="preserve">
          <source>If the directory actually contains a file specified by the &lt;code&gt;&lt;a href=&quot;#headername&quot;&gt;HeaderName&lt;/a&gt;&lt;/code&gt; directive, the module usually includes the contents of the file after a standard HTML preamble (&lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, &lt;em&gt;et cetera&lt;/em&gt;). The &lt;code&gt;SuppressHTMLPreamble&lt;/code&gt; option disables this behaviour, causing the module to start the display with the header file contents. The header file must contain appropriate HTML instructions in this case. If there is no header file, the preamble is generated as usual. If you also specify a &lt;code&gt;&lt;a href=&quot;#readmename&quot;&gt;ReadmeName&lt;/a&gt;&lt;/code&gt;, and if that file exists, The closing &amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt; tags are also ommitted from the output, under the assumption that you'll likely put those closing tags in that file.</source>
          <target state="translated">ディレクトリに実際に &lt;code&gt;&lt;a href=&quot;#headername&quot;&gt;HeaderName&lt;/a&gt;&lt;/code&gt; ディレクティブで指定されたファイルが含まれている場合、モジュールは通常、標準のHTMLプリアンブル（ &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; &lt;em&gt;など&lt;/em&gt; ）の後にファイルのコンテンツを含めます。 &lt;code&gt;SuppressHTMLPreamble&lt;/code&gt; オプションはこの動作を無効にし、モジュールがヘッダーファイルの内容で表示を開始するようにします。 この場合、ヘッダーファイルには適切なHTML命令が含まれている必要があります。 ヘッダーファイルがない場合、プリアンブルは通常どおりに生成されます。 また、 &lt;code&gt;&lt;a href=&quot;#readmename&quot;&gt;ReadmeName&lt;/a&gt;&lt;/code&gt; を指定し、そのファイルが存在する場合は、終了タグ&amp;lt;/ body&amp;gt; &amp;lt;/ html&amp;gt;も出力から省略されます。これらの終了タグをそのファイルに配置する可能性が高いと想定しています。</target>
        </trans-unit>
        <trans-unit id="d3159a8a27a9e54c47448c742cdd0c77d3db9a7e" translate="yes" xml:space="preserve">
          <source>If the encryption key is changed, sessions will be invalidated automatically.</source>
          <target state="translated">暗号化キーが変更された場合、セッションは自動的に無効になります。</target>
        </trans-unit>
        <trans-unit id="b8cb75cb3649dd76791190854db4b0924be4485e" translate="yes" xml:space="preserve">
          <source>If the error is that CGI script cannot be run, the log file will contain an extra two lines:</source>
          <target state="translated">CGI スクリプトが実行できないというエラーの場合、ログファイルには余分な2行が含まれます。</target>
        </trans-unit>
        <trans-unit id="73134ca5731abf97fff43e59ac4f3eceef967f3b" translate="yes" xml:space="preserve">
          <source>If the expressions become more complex and slow down processing significantly, you can try to optimize them according to the evaluation rules:</source>
          <target state="translated">式が複雑になって処理が大幅に遅くなる場合は、評価ルールに沿って最適化してみると良いでしょう。</target>
        </trans-unit>
        <trans-unit id="e6f8dd9a02b417354b090fff2a419d17c121e66c" translate="yes" xml:space="preserve">
          <source>If the file is removed while httpd is running, it will continue to maintain an open file descriptor and serve the file as it was when httpd was started. This usually also means that although the file will have been deleted, and not show up on the filesystem, extra free space will not be recovered until httpd is stopped and the file descriptor closed.</source>
          <target state="translated">httpd の実行中にファイルが削除された場合、ファイルディスクリプタを開いたまま維持し、 httpd が起動したときと同じようにファイルを提供します。これは通常、ファイルは削除されてファイルシステム上には表示されませんが、 httpd が停止してファイルディスクリプタが閉じられるまでは、 余分な空き領域は回復されないということを意味します。</target>
        </trans-unit>
        <trans-unit id="a9063c78d878f65d8791b1290b5a29a159b5ba4f" translate="yes" xml:space="preserve">
          <source>If the file specified by &lt;code&gt;HeaderName&lt;/code&gt; contains the beginnings of an HTML document (&amp;lt;html&amp;gt;, &amp;lt;head&amp;gt;, etc.) then you will probably want to set &lt;a href=&quot;#indexoptions.suppresshtmlpreamble&quot;&gt;&lt;code&gt;IndexOptions +SuppressHTMLPreamble&lt;/code&gt;&lt;/a&gt;, so that these tags are not repeated.</source>
          <target state="translated">&lt;code&gt;HeaderName&lt;/code&gt; で指定されたファイルにHTMLドキュメントの先頭（&amp;lt;html&amp;gt;、&amp;lt;head&amp;gt;など）が含まれている場合、これらのタグが繰り返されないように、おそらく&lt;a href=&quot;#indexoptions.suppresshtmlpreamble&quot;&gt; &lt;code&gt;IndexOptions +SuppressHTMLPreamble&lt;/code&gt; &lt;/a&gt;を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="def10040600772a4417a584cc076801bf4a5d2fb" translate="yes" xml:space="preserve">
          <source>If the first VirtualHost block does &lt;em&gt;not&lt;/em&gt; include a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive, the reverse DNS of the relevant IP will be used instead. If this is not the server name you wish to use, a bogus entry (eg. &lt;code&gt;ServerName none.example.com&lt;/code&gt;) can be added to get around this behaviour.</source>
          <target state="translated">最初のVirtualHostブロックに &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; ディレクティブが含まれてい&lt;em&gt;ない場合&lt;/em&gt;は、代わりに関連IPの逆DNSが使用されます。 これが使用したいサーバー名でない場合は、この動作を回避するために偽のエントリ（例： &lt;code&gt;ServerName none.example.com&lt;/code&gt; ）を追加できます。</target>
        </trans-unit>
        <trans-unit id="dfabf5f56ac130e6465fad0ac1d89657095bcc85" translate="yes" xml:space="preserve">
          <source>If the first argument ends with a trailing &lt;strong&gt;/&lt;/strong&gt;, the second argument should also end with a trailing &lt;strong&gt;/&lt;/strong&gt;, and vice versa. Otherwise, the resulting requests to the backend may miss some needed slashes and do not deliver the expected results.</source>
          <target state="translated">最初の引数が末尾の&lt;strong&gt;/&lt;/strong&gt;で終わる場合、2番目の引数も末尾の&lt;strong&gt;/&lt;/strong&gt;で終わる必要があり、その逆も同様です。 そうしないと、バックエンドへのリクエストの結果、必要なスラッシュが不足し、期待した結果が得られない場合があります。</target>
        </trans-unit>
        <trans-unit id="bdbfec130cda2680411dd99e514216da2cdc94eb" translate="yes" xml:space="preserve">
          <source>If the first form is used, mod_proxy_html will also clean up the HTML to the specified standard. It cannot fix every error, but it will strip out bogus elements and attributes. It will also optionally log other errors at &lt;code&gt;&lt;a href=&quot;core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; Debug.</source>
          <target state="translated">最初のフォームが使用されている場合、mod_proxy_htmlはHTMLを指定された標準にクリーンアップします。 すべてのエラーを修正できるわけではありませんが、偽の要素と属性は削除されます。 また、オプションで、 &lt;code&gt;&lt;a href=&quot;core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; Debugで他のエラーを記録します。</target>
        </trans-unit>
        <trans-unit id="4b1141389e34a73988fa4efa3526efe349c5b626" translate="yes" xml:space="preserve">
          <source>If the header &lt;code&gt;MyRequestHeader: myvalue&lt;/code&gt; is present on the HTTP request, the response will contain the following header:</source>
          <target state="translated">ヘッダー &lt;code&gt;MyRequestHeader: myvalue&lt;/code&gt; がHTTPリクエストに存在する場合、応答には次のヘッダーが含まれます。</target>
        </trans-unit>
        <trans-unit id="e1aeab101372413c90795e3ad26c8064808e3f98" translate="yes" xml:space="preserve">
          <source>If the intent is that a URL &lt;strong&gt;starts with&lt;/strong&gt;&lt;code&gt;/extra/data&lt;/code&gt;, rather than merely &lt;strong&gt;contains&lt;/strong&gt;&lt;code&gt;/extra/data&lt;/code&gt;, prefix the regular expression with a &lt;code&gt;^&lt;/code&gt; to require this.</source>
          <target state="translated">URL &lt;strong&gt;が&lt;/strong&gt;単に &lt;code&gt;/extra/data&lt;/code&gt; を &lt;strong&gt;含むの&lt;/strong&gt;ではなく、 &lt;code&gt;/extra/data&lt;/code&gt; で&lt;strong&gt;始まる&lt;/strong&gt;ことを意図している場合、これを要求するには、正規表現の前に &lt;code&gt;^&lt;/code&gt; を付けます。</target>
        </trans-unit>
        <trans-unit id="9b6b98ddc783417c4e73044387a1bcddaf1030e2" translate="yes" xml:space="preserve">
          <source>If the location of the &lt;strong&gt;CACHE&lt;/strong&gt; filter in the filter chain is changed for any reason, you may need to &lt;strong&gt;flush your cache&lt;/strong&gt; to ensure that your data served remains consistent. &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; is not in a position to enforce this for you.</source>
          <target state="translated">何らかの理由でフィルターチェーン内の&lt;strong&gt;CACHE&lt;/strong&gt;フィルターの場所が変更された場合は&lt;strong&gt;、キャッシュ&lt;/strong&gt;を&lt;strong&gt;フラッシュし&lt;/strong&gt;て、提供されるデータの整合性を維持する必要がある場合があり&lt;strong&gt;ます&lt;/strong&gt; 。 &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; はこれを強制する立場にはありません。</target>
        </trans-unit>
        <trans-unit id="204e7159d642671cded6231264ff758d54c06cae" translate="yes" xml:space="preserve">
          <source>If the main server has no &lt;code&gt;ServerName&lt;/code&gt; at this point, then the hostname of the machine that &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; is running on is used instead. We will call the &lt;em&gt;main server address set&lt;/em&gt; those IP addresses returned by a DNS lookup on the &lt;code&gt;ServerName&lt;/code&gt; of the main server.</source>
          <target state="translated">この時点でメインサーバーに &lt;code&gt;ServerName&lt;/code&gt; がない場合は、代わりに &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; が実行されているマシンのホスト名が使用されます。 &lt;em&gt;メインサーバー&lt;/em&gt;の &lt;code&gt;ServerName&lt;/code&gt; でDNSルックアップによって返されたIPアドレスを&lt;em&gt;メインサーバーアドレスセット&lt;/em&gt;と呼びます。</target>
        </trans-unit>
        <trans-unit id="c5318e67e53f912c3d08c5343a86071ff114c17f" translate="yes" xml:space="preserve">
          <source>If the maximum size is reached, newer entries replace the oldest ones. A diary entry uses 8 bytes, letting a default diary with 256 entries consume around 2 KB of memory.</source>
          <target state="translated">最大サイズに達すると、新しいエントリが古いエントリに置き換わります。日記エントリは 8 バイトを使用し、256 エントリのデフォルトの日記は約 2 KB のメモリを消費します。</target>
        </trans-unit>
        <trans-unit id="02fa93a5e61a593529b530eb5e7d389bf021892d" translate="yes" xml:space="preserve">
          <source>If the memory needs to be shared between threads and processes, a better provider would be &lt;code&gt;&lt;a href=&quot;mod_slotmem_shm&quot;&gt;mod_slotmem_shm&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">スレッドとプロセス間でメモリを共有する必要がある場合、より優れたプロバイダーは &lt;code&gt;&lt;a href=&quot;mod_slotmem_shm&quot;&gt;mod_slotmem_shm&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2378e9a19eb3d676b6275d1d8efdf4e5e0dc71d8" translate="yes" xml:space="preserve">
          <source>If the normal handler is used, this directive may appear within a &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; directive. If the quick handler is used, this directive must appear within a server or virtual host context, otherwise the setting will be ignored.</source>
          <target state="translated">通常のハンドラーが使用されている場合、このディレクティブは &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; ディレクティブ内に現れることがあります。 クイックハンドラーを使用する場合、このディレクティブはサーバーまたは仮想ホストコンテキスト内に表示する必要があります。それ以外の場合、設定は無視されます。</target>
        </trans-unit>
        <trans-unit id="1f07eafe59fbdc0940794e56b839ba9010d75187" translate="yes" xml:space="preserve">
          <source>If the number starts with a zero, then it is considered to be a fraction:</source>
          <target state="translated">数字が0から始まる場合は、分数とみなされます。</target>
        </trans-unit>
        <trans-unit id="ec173c3ab88518374b658a2119efc94130fbd308" translate="yes" xml:space="preserve">
          <source>If the output file already exists, it will not be truncated. New keys will be added and existing keys will be updated.</source>
          <target state="translated">出力ファイルが既に存在する場合は、そのファイルは切り捨てられません。新しいキーが追加され、既存のキーが更新されます。</target>
        </trans-unit>
        <trans-unit id="c84755a1984cfd6108e365883bda1852dfc68ea0" translate="yes" xml:space="preserve">
          <source>If the password is not specified, the default value &quot;password&quot; will be used. To disable fake basic authentication for an URL space, specify &quot;AuthBasicFake off&quot;.</source>
          <target state="translated">パスワードを指定しない場合は、デフォルト値の「password」が使用されます。URL空間の偽基本認証を無効にするには、「AuthBasicFake off」を指定します。</target>
        </trans-unit>
        <trans-unit id="e7a771ea8642819bbb66b30b1c55053ff357ee80" translate="yes" xml:space="preserve">
          <source>If the proxy requires authentication, it will read and consume the proxy authentication credentials sent by the client. With &lt;var&gt;proxy-chain-auth&lt;/var&gt; it will &lt;em&gt;also&lt;/em&gt; forward the credentials to the next proxy in the chain. This may be necessary if you have a chain of proxies that share authentication information. &lt;strong&gt;Security Warning:&lt;/strong&gt; Do not set this unless you know you need it, as it forwards sensitive information!</source>
          <target state="translated">プロキシが認証を必要とする場合、クライアントから送信されたプロキシ認証資格情報を読み取って使用します。 &lt;var&gt;proxy-chain-auth&lt;/var&gt; を使用すると、資格をチェーン内の次のプロキシに転送します。 これは、認証情報を共有するプロキシのチェーンがある場合に必要になることがあります。 &lt;strong&gt;セキュリティ警告：&lt;/strong&gt;機密情報を転送するため、必要な場合以外は設定しないでください。</target>
        </trans-unit>
        <trans-unit id="97f4645e78f7f07d333e1967391be467542e57ca" translate="yes" xml:space="preserve">
          <source>If the request contains a &lt;code&gt;Host:&lt;/code&gt; header field, the list is searched for the first vhost with a matching &lt;code&gt;ServerName&lt;/code&gt; or &lt;code&gt;ServerAlias&lt;/code&gt;, and the request is served from that vhost. A &lt;code&gt;Host:&lt;/code&gt; header field can contain a port number, but Apache always ignores it and matches against the real port to which the client sent the request.</source>
          <target state="translated">リクエストに &lt;code&gt;Host:&lt;/code&gt; ヘッダーフィールドが含まれている場合、リストで &lt;code&gt;ServerName&lt;/code&gt; または &lt;code&gt;ServerAlias&lt;/code&gt; が一致する最初の仮想ホストが検索され、その仮想ホストからリクエストが処理されます。 &lt;code&gt;Host:&lt;/code&gt; ヘッダーフィールドにはポート番号を含めることができますが、Apacheは常にそれを無視し、クライアントがリクエストを送信した実際のポートと照合します。</target>
        </trans-unit>
        <trans-unit id="cd96f1bd475c92db4f020e0efa5af0092b5726d7" translate="yes" xml:space="preserve">
          <source>If the request is for a regular portion of the server, is the requested directory within suEXEC's document root? If the request is for a &lt;code&gt;&lt;a href=&quot;mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt;, is the requested directory within the directory configured as suEXEC's userdir (see &lt;a href=&quot;#install&quot;&gt;suEXEC's configuration options&lt;/a&gt;)?</source>
          <target state="translated">リクエストがサーバーの通常の部分に対するものである場合、リクエストされたディレクトリはsuEXECのドキュメントルート内にありますか？ リクエストが &lt;code&gt;&lt;a href=&quot;mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; に対するものである場合、ディレクトリ内のリクエストされたディレクトリはsuEXECのuserdirとして設定されてい&lt;a href=&quot;#install&quot;&gt;ます&lt;/a&gt;か（ suEXECの設定オプションを参照）？</target>
        </trans-unit>
        <trans-unit id="370927cb685999b1054898d67d65be756fbc1e4d" translate="yes" xml:space="preserve">
          <source>If the request size sent by the client exceeds the maximum size allocated by this directive, the server will return &lt;code&gt;413 Request Entity Too Large&lt;/code&gt;.</source>
          <target state="translated">クライアントから送信されたリクエストサイズがこのディレクティブによって割り当てられた最大サイズを超えると、サーバーは &lt;code&gt;413 Request Entity Too Large&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="594fa54600741a37a595b272fd3af1157be198f5" translate="yes" xml:space="preserve">
          <source>If the request was for &lt;code&gt;http://example.com/foo/bar&lt;/code&gt;, then &lt;code&gt;%1&lt;/code&gt; would contain &lt;code&gt;example.com&lt;/code&gt; and &lt;code&gt;$1&lt;/code&gt; would contain &lt;code&gt;foo/bar&lt;/code&gt;.</source>
          <target state="translated">リクエストが &lt;code&gt;http://example.com/foo/bar&lt;/code&gt; に対するものである場合、 &lt;code&gt;%1&lt;/code&gt; には &lt;code&gt;example.com&lt;/code&gt; が含まれ、 &lt;code&gt;$1&lt;/code&gt; には &lt;code&gt;foo/bar&lt;/code&gt; が含まれます 。</target>
        </trans-unit>
        <trans-unit id="c640e1665672a7fa3f9517adf962c5b81edecd4a" translate="yes" xml:space="preserve">
          <source>If the response contains an &quot;Authorization:&quot; header, it must also contain an &quot;s-maxage&quot;, &quot;must-revalidate&quot; or &quot;public&quot; option in the &quot;Cache-Control:&quot; header, or it won't be cached.</source>
          <target state="translated">応答に &quot;Authorization:&quot; ヘッダが含まれている場合、&quot;Cache-Control:&quot; ヘッダに &quot;s-maxage&quot;、&quot;must-revalidate&quot;、または &quot;public&quot; オプションも含まれている必要があります。</target>
        </trans-unit>
        <trans-unit id="706df99cb2c56d2c63c2f8efc66297ed941eca4b" translate="yes" xml:space="preserve">
          <source>If the response has a status of 200 (OK), the response must also include at least one of the &quot;Etag&quot;, &quot;Last-Modified&quot; or the &quot;Expires&quot; headers, or the max-age or s-maxage directive of the &quot;Cache-Control:&quot; header, unless the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignorenolastmod&quot;&gt;CacheIgnoreNoLastMod&lt;/a&gt;&lt;/code&gt; directive has been used to require otherwise.</source>
          <target state="translated">応答のステータスが200（OK）の場合、応答には、「Etag」、「Last-Modified」、または「Expires」ヘッダーの少なくとも1つ、またはのmax-ageまたはs-maxageディレクティブも含まれている必要があります。 &quot;Cache-Control：&quot;ヘッダー。ただし、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignorenolastmod&quot;&gt;CacheIgnoreNoLastMod&lt;/a&gt;&lt;/code&gt; ディレクティブが使用されていない場合は必要ありません。</target>
        </trans-unit>
        <trans-unit id="72a8d58c20b1c4b360ea39282aeafffb41fb7e20" translate="yes" xml:space="preserve">
          <source>If the response has an HTTP status code other than 200, 203, 300, 301 or 410 it must also specify an &quot;Expires&quot; or &quot;Cache-Control&quot; header.</source>
          <target state="translated">レスポンスに 200、203、300、301、410 以外の HTTP ステータスコードがある場合は、「Expires」または「Cache-Control」ヘッダーも指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="5ba83588c2432820ca57ea387c715ffce12784cf" translate="yes" xml:space="preserve">
          <source>If the response includes the &quot;private&quot; option in a &quot;Cache-Control:&quot; header, it will not be stored unless the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachestoreprivate&quot;&gt;CacheStorePrivate&lt;/a&gt;&lt;/code&gt; has been used to require otherwise.</source>
          <target state="translated">応答の &quot;Cache-Control：&quot;ヘッダーに &quot;private&quot;オプションが含まれている場合は、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachestoreprivate&quot;&gt;CacheStorePrivate&lt;/a&gt;&lt;/code&gt; を使用して別の方法で要求しない限り、応答は格納されません。</target>
        </trans-unit>
        <trans-unit id="162685f4ec4bcb8d01298d0120d067be48714869" translate="yes" xml:space="preserve">
          <source>If the scoreboard is full, prevent more processes to finish gracefully due to reduced load until old processes have terminated (otherwise the situation would get worse once the load increases again).</source>
          <target state="translated">スコアボードが満杯の場合は、古いプロセスが終了するまで、負荷が低下しているために猶予なく終了するプロセスが増えるのを防ぎます(そうでなければ、負荷が再び増加すると状況は悪化します)。</target>
        </trans-unit>
        <trans-unit id="e16972bb9ba45170ae305399d61a1e385a5e9755" translate="yes" xml:space="preserve">
          <source>If the script is dedicated to handling a particular error condition, such as &lt;code&gt;404 Not Found&lt;/code&gt;, it can use the specific code and error text instead.</source>
          <target state="translated">スクリプトが &lt;code&gt;404 Not Found&lt;/code&gt; などの特定のエラー条件の処理専用である場合、代わりに特定のコードとエラーテキストを使用できます。</target>
        </trans-unit>
        <trans-unit id="abd3bfaec1c6f4bad43cd5abcb893ba70078d58a" translate="yes" xml:space="preserve">
          <source>If the script returns a &lt;code&gt;Location:&lt;/code&gt; header instead of output, then this will be translated into an HTML anchor.</source>
          <target state="translated">スクリプトが出力ではなく &lt;code&gt;Location:&lt;/code&gt; ヘッダーを返す場合、これはHTMLアンカーに変換されます。</target>
        </trans-unit>
        <trans-unit id="c5382bea9cf441853416a79e3b53ffadf10b7397" translate="yes" xml:space="preserve">
          <source>If the session is exposed to the user through the use of &lt;code&gt;&lt;a href=&quot;mod_session_cookie&quot;&gt;mod_session_cookie&lt;/a&gt;&lt;/code&gt;, and the session is not protected with &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt;, the passphrase is open to potential exposure through a dictionary attack. Regardless of how the session is configured, ensure that this directive is not used within URL spaces where private user data could be exposed, or sensitive transactions can be conducted. Use at own risk.</source>
          <target state="translated">セッションが &lt;code&gt;&lt;a href=&quot;mod_session_cookie&quot;&gt;mod_session_cookie&lt;/a&gt;&lt;/code&gt; を使用してユーザーに公開されており、セッションが &lt;code&gt;&lt;a href=&quot;mod_session_crypto&quot;&gt;mod_session_crypto&lt;/a&gt;&lt;/code&gt; で保護されていない場合、パスフレーズは辞書攻撃によって公開される可能性があります。 セッションの構成方法に関係なく、プライベートユーザーデータが公開される可能性のあるURLスペース内でこのディレクティブを使用しないようにしてください。 自己責任で使用してください。</target>
        </trans-unit>
        <trans-unit id="fdb3bed9ed12d01fc8cbfbd986ed216f5caec218" translate="yes" xml:space="preserve">
          <source>If the specified URL is a CGI program, the program will be executed and its output inserted in place of the directive in the parsed file. You may include a query string in a CGI url:</source>
          <target state="translated">指定された URL が CGI プログラムの場合、そのプログラムは実行され、その出力は解析されたファイルのディレクティブの代わりに挿入されます。CGI の URL にクエリ文字列を含めることができます。</target>
        </trans-unit>
        <trans-unit id="8ad992dc89b071dda8f6d7c2de3bdbc1726aee5e" translate="yes" xml:space="preserve">
          <source>If the target URI has a query string, the default behavior will be observed - that is, the original query string will be discarded and replaced with the query string in the &lt;code&gt;RewriteRule&lt;/code&gt; target URI.</source>
          <target state="translated">ターゲットURIにクエリ文字列がある場合、デフォルトの動作が実行されます。つまり、元のクエリ文字列は破棄され、 &lt;code&gt;RewriteRule&lt;/code&gt; ターゲットURIのクエリ文字列に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="c98cce125c24bc7b455d828b4ba8d2086995268e" translate="yes" xml:space="preserve">
          <source>If the timeout expires, httpd will retry in case an existing connection has been silently dropped by a firewall. However, performance will be much better if the firewall is configured to send TCP RST packets instead of silently dropping packets.</source>
          <target state="translated">タイムアウトが切れた場合、既存の接続がファイアウォールによって黙って落とされた場合には、 httpd は再試行します。しかし、ファイアウォールがパケットを黙って削除する代わりに TCP RST パケットを送信するように設定されていれば、パフォーマンスはずっと良くなります。</target>
        </trans-unit>
        <trans-unit id="2dc73e5cc1796fcd82c741307d1aed5aa44e9cf6" translate="yes" xml:space="preserve">
          <source>If the translation rules don't make sense for the content, translation can fail in various ways, including:</source>
          <target state="translated">翻訳のルールが内容に合っていないと、以下のように様々な意味で翻訳が失敗します。</target>
        </trans-unit>
        <trans-unit id="0bef265198a19dbae8fbbb70b09b1aa9cfe33029" translate="yes" xml:space="preserve">
          <source>If the validity of the certificate falls below duration, &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will get a new signed certificate.</source>
          <target state="translated">証明書の有効期間が期間を &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; と、 mod_mdは新しい署名付き証明書を取得します。</target>
        </trans-unit>
        <trans-unit id="9716de436583dfe8712587916f936e9ce8c8ac4a" translate="yes" xml:space="preserve">
          <source>If the value begins with exec: the resulting command will be executed and the first line returned to standard output by the program will be used as the password.</source>
          <target state="translated">値がexecで始まる場合は、結果のコマンドが実行され、プログラムが標準出力に返す最初の行がパスワードとして使用されます。</target>
        </trans-unit>
        <trans-unit id="62ea7aea4a9e2e299a1cd5c0217ea808e14767ff" translate="yes" xml:space="preserve">
          <source>If the value specified for &lt;code&gt;rate-limit&lt;/code&gt; causes integer overflow, the rate-limited will be disabled. If the value specified for &lt;code&gt;rate-limit-burst&lt;/code&gt; causes integer overflow, the burst will be disabled.</source>
          <target state="translated">&lt;code&gt;rate-limit&lt;/code&gt; に指定された値が整数のオーバーフローを引き起こす場合、rate-limitedは無効になります。 &lt;code&gt;rate-limit-burst&lt;/code&gt; に指定された値が整数のオーバーフローを引き起こす場合、バーストは無効になります。</target>
        </trans-unit>
        <trans-unit id="5786d632a1e2c3dbb2dd9320bcc60e7434e927b9" translate="yes" xml:space="preserve">
          <source>If the verbatim username can't directly bind, but needs some cosmetic transformation, see &lt;code&gt;&lt;a href=&quot;#authldapinitialbindpattern&quot;&gt; AuthLDAPInitialBindPattern&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">そのままのユーザー名は直接バインドできませんが、 &lt;code&gt;&lt;a href=&quot;#authldapinitialbindpattern&quot;&gt; AuthLDAPInitialBindPattern&lt;/a&gt;&lt;/code&gt; 変換が必要な場合は、 AuthLDAPInitialBindPatternを参照してください。</target>
        </trans-unit>
        <trans-unit id="13682077a43e8a926eb0174cdb395b9a4b2e273c" translate="yes" xml:space="preserve">
          <source>If there are &lt;code&gt;VirtualHost&lt;/code&gt; definitions for the IP address, the next step is to decide if we have to deal with an IP-based or a name-based vhost.</source>
          <target state="translated">IPアドレスの &lt;code&gt;VirtualHost&lt;/code&gt; 定義がある場合、次のステップは、IPベースまたは名前ベースのvhostを処理する必要があるかどうかを決定することです。</target>
        </trans-unit>
        <trans-unit id="beff8d8865b14d793c0389cee29b3cd02015d925" translate="yes" xml:space="preserve">
          <source>If there are multiple &lt;code&gt;VirtualHost&lt;/code&gt; directives listing the IP address and port combination that was determined to be the best match, the &quot;list&quot; in the remaining steps refers to the list of vhosts that matched, in the order they were in the configuration file.</source>
          <target state="translated">最も一致すると判断されたIPアドレスとポートの組み合わせをリストする &lt;code&gt;VirtualHost&lt;/code&gt; ディレクティブが複数ある場合、残りの手順の「リスト」は、構成ファイル内での順序で、一致したvhostのリストを指します。</target>
        </trans-unit>
        <trans-unit id="0e265b8bcb339630988f0f791c958475b9f66983" translate="yes" xml:space="preserve">
          <source>If there are no exact matches for the address and port, then wildcard (&lt;code&gt;*&lt;/code&gt;) matches are considered.</source>
          <target state="translated">アドレスとポートが完全に一致しない場合、ワイルドカード（ &lt;code&gt;*&lt;/code&gt; ）の一致が考慮されます。</target>
        </trans-unit>
        <trans-unit id="79f1deaf85803ea8159c912edc94773b174555b1" translate="yes" xml:space="preserve">
          <source>If there is exactly one &lt;code&gt;VirtualHost&lt;/code&gt; directive listing the IP address and port combination that was determined to be the best match, no further actions are performed and the request is served from the matching vhost.</source>
          <target state="translated">最も一致すると判断されたIPアドレスとポートの組み合わせをリストする &lt;code&gt;VirtualHost&lt;/code&gt; ディレクティブが1つだけある場合、それ以上のアクションは実行されず、一致するvhostからリクエストが処理されます。</target>
        </trans-unit>
        <trans-unit id="721e1f57554b60f73a156baa9315eb38c4af0405" translate="yes" xml:space="preserve">
          <source>If there is more than one expression in parenthesis, they are available in order in the variables &lt;code&gt;$1&lt;/code&gt;, &lt;code&gt;$2&lt;/code&gt;, &lt;code&gt;$3&lt;/code&gt;, and so on.</source>
          <target state="translated">括弧内に複数の式がある場合、それらは変数 &lt;code&gt;$1&lt;/code&gt; 、 &lt;code&gt;$2&lt;/code&gt; 、 &lt;code&gt;$3&lt;/code&gt; などで順番に使用できます。</target>
        </trans-unit>
        <trans-unit id="a94aceae7ac5e69071e36da5a6c4e04ac4411f1c" translate="yes" xml:space="preserve">
          <source>If there is no more data in the body (i.e. the servlet container is trying to read past the end of the body), the server will send back an &lt;em&gt;empty&lt;/em&gt; packet, which is a body packet with a payload length of 0. &lt;code&gt;(0x12,0x34,0x00,0x00)&lt;/code&gt;</source>
          <target state="translated">本文にこれ以上データがない場合（つまり、サーブレットコンテナーが本文の終わりを超えて読み取ろうとしている場合）、サーバーは&lt;em&gt;空の&lt;/em&gt;パケット &lt;code&gt;(0x12,0x34,0x00,0x00)&lt;/code&gt; ペイロード長が0の本文パケット）を送り返します（0x12、 0x34,0x00,0x00）</target>
        </trans-unit>
        <trans-unit id="55e218a82ff6cc0bf17bbf493040f04c075e85bb" translate="yes" xml:space="preserve">
          <source>If this directive is enabled, SSL connections will be vulnerable to the Man-in-the-Middle prefix attack as described in &lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2009-3555&quot;&gt;CVE-2009-3555&lt;/a&gt;.</source>
          <target state="translated">このディレクティブが有効な場合、 &lt;a href=&quot;http://cve.mitre.org/cgi-bin/cvename.cgi?name=CAN-2009-3555&quot;&gt;CVE-2009-3555で&lt;/a&gt;説明されているように、SSL接続は中間者接頭辞攻撃に対して脆弱になります。</target>
        </trans-unit>
        <trans-unit id="784ed500610949ff4546defd5bc71e3d3d287cb0" translate="yes" xml:space="preserve">
          <source>If this directive is enabled, all of the certificates in the file will be trusted as if they were also in &lt;code&gt;&lt;a href=&quot;#sslproxycacertificatefile&quot;&gt; SSLProxyCACertificateFile&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">このディレクティブが有効になっている場合、ファイル内のすべての証明書は、 &lt;code&gt;&lt;a href=&quot;#sslproxycacertificatefile&quot;&gt; SSLProxyCACertificateFile&lt;/a&gt;&lt;/code&gt; にもあるかのように信頼されます。</target>
        </trans-unit>
        <trans-unit id="25098e295a886a228021905282cb0d48109f53f3" translate="yes" xml:space="preserve">
          <source>If this directive is not used, cookies last only for the current browser session.</source>
          <target state="translated">このディレクティブが使用されない場合、クッキーは現在のブラウザセッションでのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="997810c53554fdfd14ef47fd1648efc833831b70" translate="yes" xml:space="preserve">
          <source>If this directive is set to on, the value of the &lt;code&gt;REMOTE_USER&lt;/code&gt; environment variable will be set to the full distinguished name of the authenticated user, rather than just the username that was passed by the client. It is turned off by default.</source>
          <target state="translated">このディレクティブがonに設定されている場合、 &lt;code&gt;REMOTE_USER&lt;/code&gt; 環境変数の値は、クライアントから渡されたユーザー名だけでなく、認証されたユーザーの完全な識別名に設定されます。 デフォルトではオフになっています。</target>
        </trans-unit>
        <trans-unit id="e67f44a3236c50797da6e500bbaf8a41f24e0ddb" translate="yes" xml:space="preserve">
          <source>If this directive is set, the value of the &lt;code&gt;REMOTE_USER&lt;/code&gt; environment variable will be set to the value of the attribute specified. Make sure that this attribute is included in the list of attributes in the AuthLDAPUrl definition, otherwise this directive will have no effect. This directive, if present, takes precedence over &lt;code&gt;&lt;a href=&quot;#authldapremoteuserisdn&quot;&gt;AuthLDAPRemoteUserIsDN&lt;/a&gt;&lt;/code&gt;. This directive is useful should you want people to log into a website using an email address, but a backend application expects the username as a userid.</source>
          <target state="translated">このディレクティブが設定されている場合、 &lt;code&gt;REMOTE_USER&lt;/code&gt; 環境変数の値は、指定された属性の値に設定されます。 この属性がAuthLDAPUrl定義の属性リストに含まれていることを確認してください。そうでない場合、このディレクティブは効果がありません。 このディレクティブが存在する場合は、 &lt;code&gt;&lt;a href=&quot;#authldapremoteuserisdn&quot;&gt;AuthLDAPRemoteUserIsDN&lt;/a&gt;&lt;/code&gt; よりも優先されます 。 このディレクティブは、電子メールアドレスを使用してWebサイトにログインする必要がある場合に役立ちますが、バックエンドアプリケーションはユーザー名としてユーザー名を想定しています。</target>
        </trans-unit>
        <trans-unit id="fe08203b1292b2678ad231f8591fd6238e2dbf1a" translate="yes" xml:space="preserve">
          <source>If this feature is on, you can use the directive &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2pushresource&quot;&gt;H2PushResource&lt;/a&gt;&lt;/code&gt; to trigger early hints and resource PUSHes:</source>
          <target state="translated">この機能がオンの場合、ディレクティブ &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2pushresource&quot;&gt;H2PushResource&lt;/a&gt;&lt;/code&gt; を使用して、初期のヒントとリソースプッシュをトリガーできます。</target>
        </trans-unit>
        <trans-unit id="78425fe9e59e6b6ed2b5a337bdc9d1407ad1bbc5" translate="yes" xml:space="preserve">
          <source>If this option is enabled, all child configurations will inherit the configuration of the current configuration. It is equivalent to specifying &lt;code&gt;RewriteOptions Inherit&lt;/code&gt; in all child configurations. See the &lt;code&gt;Inherit&lt;/code&gt; option for more details on how the parent-child relationships are handled.</source>
          <target state="translated">このオプションを有効にすると、すべての子構成が現在の構成の構成を継承します。 これは、すべての子構成で &lt;code&gt;RewriteOptions Inherit&lt;/code&gt; を指定することと同等です。 親子関係の処理方法の詳細については、 &lt;code&gt;Inherit&lt;/code&gt; オプションを参照してください。</target>
        </trans-unit>
        <trans-unit id="88ca4c5dcf539e61c44922ff45b72d48f5635f0b" translate="yes" xml:space="preserve">
          <source>If this option is enabled, names are sorted in a case-insensitive manner. For instance, if the sort order is ascending by name, and &lt;code&gt;IgnoreCase&lt;/code&gt; is enabled, file Zeta will be listed after file alfa (Note: file GAMMA will always be listed before file gamma).</source>
          <target state="translated">このオプションを有効にすると、名前は大文字と小文字を区別しない方法でソートされます。 たとえば、並べ替え順序が名前の昇順で、 &lt;code&gt;IgnoreCase&lt;/code&gt; が有効になっている場合、ファイルZetaはファイルalfaの後にリストされます（注：ファイルGAMMAは常にファイルガンマの前にリストされます）。</target>
        </trans-unit>
        <trans-unit id="8fbdfad6d15f59b959976155fd269c4c557798ff" translate="yes" xml:space="preserve">
          <source>If this option is enabled, subdirectory listings will &lt;em&gt;always&lt;/em&gt; appear first, followed by normal files in the directory. The listing is basically broken into two components, the files and the subdirectories, and each is sorted separately and then displayed subdirectories-first. For instance, if the sort order is descending by name, and &lt;code&gt;FoldersFirst&lt;/code&gt; is enabled, subdirectory &lt;code&gt;Zed&lt;/code&gt; will be listed before subdirectory &lt;code&gt;Beta&lt;/code&gt;, which will be listed before normal files &lt;code&gt;Gamma&lt;/code&gt; and &lt;code&gt;Alpha&lt;/code&gt;. &lt;strong&gt;This option only has an effect if &lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt;&lt;code&gt;FancyIndexing&lt;/code&gt;&lt;/a&gt; is also enabled.&lt;/strong&gt;</source>
          <target state="translated">このオプションを有効にすると、サブディレクトリのリストが&lt;em&gt;常に&lt;/em&gt;最初に表示され、その後にディレクトリ内の通常のファイルが表示されます。 リストは基本的に、ファイルとサブディレクトリの2つのコンポーネントに分かれており、それぞれが個別にソートされてから、サブディレクトリが最初に表示されます。 たとえば、並べ替え順が名前の降順で、 &lt;code&gt;FoldersFirst&lt;/code&gt; が有効になっている場合、サブディレクトリ &lt;code&gt;Zed&lt;/code&gt; はサブディレクトリ &lt;code&gt;Beta&lt;/code&gt; の前にリストされ、通常のファイル &lt;code&gt;Gamma&lt;/code&gt; と &lt;code&gt;Alpha&lt;/code&gt; の前にリストされます。 &lt;strong&gt;このオプションは、 &lt;a href=&quot;#indexoptions.fancyindexing&quot;&gt; &lt;code&gt;FancyIndexing&lt;/code&gt; &lt;/a&gt;も有効になっている場合にのみ効果があります。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="6be1435dabd736bad285acc5efd9bde99e325725" translate="yes" xml:space="preserve">
          <source>If this option is omitted, the &lt;a href=&quot;../mpm#defaults&quot;&gt;default MPM&lt;/a&gt; for your operating system will be used.</source>
          <target state="translated">このオプションを省略すると、オペレーティングシステムの&lt;a href=&quot;../mpm#defaults&quot;&gt;デフォルトのMPM&lt;/a&gt;が使用されます。</target>
        </trans-unit>
        <trans-unit id="31aab77489282d730dcc11feb22c8ebbc40518e6" translate="yes" xml:space="preserve">
          <source>If this request header exists, its value is transformed according to a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; search-and-replace. The &lt;var&gt;value&lt;/var&gt; argument is a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt;, and the &lt;var&gt;replacement&lt;/var&gt; is a replacement string, which may contain backreferences or format specifiers. The &lt;code&gt;edit&lt;/code&gt; form will match and replace exactly once in a header value, whereas the &lt;code&gt;edit*&lt;/code&gt; form will replace &lt;em&gt;every&lt;/em&gt; instance of the search pattern if it appears more than once.</source>
          <target state="translated">この要求ヘッダーが存在する場合、その値は&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;正規表現の&lt;/a&gt;検索および置換に従って変換されます。 &lt;var&gt;value&lt;/var&gt; 引数は&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;正規表現&lt;/a&gt;であり、 &lt;var&gt;replacement&lt;/var&gt; は置換文字列であり、後方参照またはフォーマット指定子を含む場合があります。 &lt;code&gt;edit&lt;/code&gt; フォームは、ヘッダー値内で1回だけ一致して置換されますが、 &lt;code&gt;edit*&lt;/code&gt; フォームは、検索パターンが複数回出現する場合、 &lt;em&gt;すべての&lt;/em&gt;インスタンスを置換します。</target>
        </trans-unit>
        <trans-unit id="9eb7121ee4261fb74251fa5d73929edd8999fd74" translate="yes" xml:space="preserve">
          <source>If this response header exists, its value is transformed according to a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt; search-and-replace. The &lt;var&gt;value&lt;/var&gt; argument is a &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;regular expression&lt;/a&gt;, and the &lt;var&gt;replacement&lt;/var&gt; is a replacement string, which may contain backreferences or format specifiers. The &lt;code&gt;edit&lt;/code&gt; form will match and replace exactly once in a header value, whereas the &lt;code&gt;edit*&lt;/code&gt; form will replace &lt;em&gt;every&lt;/em&gt; instance of the search pattern if it appears more than once.</source>
          <target state="translated">この応答ヘッダーが存在する場合、その値は&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;正規表現の&lt;/a&gt;検索と置換に従って変換されます。 &lt;var&gt;value&lt;/var&gt; 引数は&lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/glossary.html#regex&quot;&gt;正規表現&lt;/a&gt;であり、 &lt;var&gt;replacement&lt;/var&gt; は置換文字列であり、後方参照またはフォーマット指定子を含む場合があります。 &lt;code&gt;edit&lt;/code&gt; フォームは、ヘッダー値内で1回だけ一致して置換されますが、 &lt;code&gt;edit*&lt;/code&gt; フォームは、検索パターンが複数回出現する場合、 &lt;em&gt;すべての&lt;/em&gt;インスタンスを置換します。</target>
        </trans-unit>
        <trans-unit id="84e0c31cfed012fa351572a573540e93d61e3813" translate="yes" xml:space="preserve">
          <source>If this variable is set, no pooled connection will be reused if the client request is the initial request on the frontend connection. This avoids the &quot;proxy: error reading status line from remote server&quot; error message caused by the race condition that the backend server closed the pooled connection after the connection check by the proxy and before data sent by the proxy reached the backend. It has to be kept in mind that setting this variable downgrades performance, especially with HTTP/1.0 clients.</source>
          <target state="translated">この変数が設定されている場合、クライアントのリクエストがフロントエンド接続の最初のリクエストである場合、プールされた接続は再利用されません。これにより、バックエンドサーバがプロキシによる接続チェックの後、プロキシによって送られたデータがバックエンドに到達する前にプールされた接続を閉じたという競合状態によって引き起こされる &quot;proxy:error reading status line from remote server&quot; というエラーメッセージを回避することができます。この変数を設定すると、特に HTTP1.0 クライアントではパフォーマンスが低下することを覚えておかなければなりません。</target>
        </trans-unit>
        <trans-unit id="6246476f098b3f7e8a4cacb4452232bad3d8c59c" translate="yes" xml:space="preserve">
          <source>If two vhosts have an address in common, those common addresses act as name-based virtual hosts implicitly. This is new behavior as of 2.3.11.</source>
          <target state="translated">2 つの vhost が共通のアドレスを持っている場合、その共通のアドレスは暗黙のうちに名前ベースのバーチャルホストとして動作します。これは 2.3.11 からの新しい動作です。</target>
        </trans-unit>
        <trans-unit id="400149d4017eec9958b169e3bfbd9b9ea787b9a5" translate="yes" xml:space="preserve">
          <source>If used in a &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; directive, the path needs to be specified below the Location, or if the word &quot;on&quot; is used, caching for the whole location will be disabled.</source>
          <target state="translated">&lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; ディレクティブで使用する場合は、パスをLocationの下に指定する必要があります。または、「on」という単語を使用する場合は、場所全体のキャッシュが無効になります。</target>
        </trans-unit>
        <trans-unit id="e06ba102bde75d6c2458a3c27f070d7a54193eea" translate="yes" xml:space="preserve">
          <source>If used in per-directory context, use only &lt;code&gt;-&lt;/code&gt; (dash) as the substitution &lt;em&gt;for the entire round of mod_rewrite processing&lt;/em&gt;, otherwise the MIME-type set with this flag is lost due to an internal re-processing (including subsequent rounds of mod_rewrite processing). The &lt;code&gt;L&lt;/code&gt; flag can be useful in this context to end the &lt;em&gt;current&lt;/em&gt; round of mod_rewrite processing.</source>
          <target state="translated">ディレクトリごとのコンテキストで使用する場合は、 &lt;code&gt;-&lt;/code&gt; （ダッシュ）のみ&lt;em&gt;をmod_rewrite処理のラウンド全体&lt;/em&gt;の代用として使用し&lt;em&gt;ます&lt;/em&gt; 。それ以外の場合、このフラグで設定されたMIMEタイプは、内部の再処理（後続のmod_rewrite処理を含む）により失われます。 ）。 &lt;code&gt;L&lt;/code&gt; フラグは、このコンテキストでmod_rewrite処理の&lt;em&gt;現在の&lt;/em&gt;ラウンドを終了するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="55dcab36fe91530f2f13756f85cdb06db94754fe" translate="yes" xml:space="preserve">
          <source>If used in per-server context (&lt;em&gt;i.e.&lt;/em&gt;, before the request is mapped to the filesystem) SCRIPT_FILENAME and REQUEST_FILENAME cannot contain the full local filesystem path since the path is unknown at this stage of processing. Both variables will initially contain the value of REQUEST_URI in that case. In order to obtain the full local filesystem path of the request in per-server context, use an URL-based look-ahead &lt;code&gt;%{LA-U:REQUEST_FILENAME}&lt;/code&gt; to determine the final value of REQUEST_FILENAME.</source>
          <target state="translated">サーバーごとのコンテキストで使用される場合（ &lt;em&gt;つまり&lt;/em&gt; 、要求がファイルシステムにマップされる前）、SCRIPT_FILENAMEおよびREQUEST_FILENAMEには、処理のこの段階ではパスが不明であるため、完全なローカルファイルシステムパスを含めることはできません。 その場合、両方の変数には最初にREQUEST_URIの値が含まれます。 サーバーごとのコンテキストで要求の完全なローカルファイルシステムパスを取得するには、URLベースの先読み &lt;code&gt;%{LA-U:REQUEST_FILENAME}&lt;/code&gt; を使用して、REQUEST_FILENAMEの最終的な値を決定します。</target>
        </trans-unit>
        <trans-unit id="3330080d34be361ef164d57bd0f2463ce1f3e362" translate="yes" xml:space="preserve">
          <source>If used with AJP, this directive sets the maximum AJP packet size in bytes. Values larger than 65536 are set to 65536. If you change it from the default, you must also change the &lt;code&gt;packetSize&lt;/code&gt; attribute of your AJP connector on the Tomcat side! The attribute &lt;code&gt;packetSize&lt;/code&gt; is only available in Tomcat &lt;code&gt;5.5.20+&lt;/code&gt; and &lt;code&gt;6.0.2+&lt;/code&gt;</source>
          <target state="translated">AJPと共に使用する場合、このディレクティブはAJPパケットの最大サイズをバイト単位で設定します。 65536より大きい値は65536に設定されます。デフォルトから変更する場合は、Tomcat側のAJPコネクタの &lt;code&gt;packetSize&lt;/code&gt; 属性も変更する必要があります。 &lt;code&gt;packetSize&lt;/code&gt; 属性は、Tomcat &lt;code&gt;5.5.20+&lt;/code&gt; および &lt;code&gt;6.0.2+&lt;/code&gt; でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="39244197652c81363ec5dbf37d50951612d089fd" translate="yes" xml:space="preserve">
          <source>If using a health check method (eg: &lt;code&gt;GET&lt;/code&gt;) which results in a response body, that body itself can be checked via &lt;code&gt;ap_expr&lt;/code&gt; using the &lt;code&gt;hc()&lt;/code&gt; expression function, which is unique to this module.</source>
          <target state="translated">応答本文を生成するヘルスチェックメソッド（例： &lt;code&gt;GET&lt;/code&gt; ）を使用している場合、その本体自体は、このモジュールに固有の &lt;code&gt;hc()&lt;/code&gt; 式関数を使用して &lt;code&gt;ap_expr&lt;/code&gt; で確認できます。</target>
        </trans-unit>
        <trans-unit id="f0fdb288a2aa9c3fa1de83a138fccd9ba3006ff0" translate="yes" xml:space="preserve">
          <source>If you add a redirect, it must be the last alternative in the list. Apache httpd cannot determine if the redirect succeeded or not, so if you have the redirect earlier in the list, that will always be the alternative that is used.</source>
          <target state="translated">リダイレクトを追加した場合、それはリストの最後の選択肢でなければなりません。Apache httpd はリダイレクトが成功したかどうかを判断することができませんので、 リダイレクトがリストの前の方にある場合は、常にそれが使われます。</target>
        </trans-unit>
        <trans-unit id="a3974bcf02073e9bd452d2abec2fb6b8c669fd65" translate="yes" xml:space="preserve">
          <source>If you allow non-root users to modify any files that root either executes or writes on then you open your system to root compromises. For example, someone could replace the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; binary so that the next time you start it, it will execute some arbitrary code. If the logs directory is writeable (by a non-root user), someone could replace a log file with a symlink to some other system file, and then root might overwrite that file with arbitrary data. If the log files themselves are writeable (by a non-root user), then someone may be able to overwrite the log itself with bogus data.</source>
          <target state="translated">root以外のユーザーに、rootが実行または書き込むファイルの変更を許可する場合は、システムを開いてrootの侵害を行います。 たとえば、誰かが &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; バイナリを置き換えて、次回起動したときに任意のコードが実行されるようにすることができます。 （非ルートユーザーが）ログディレクトリが書き込み可能である場合、誰かがログファイルを他のシステムファイルへのシンボリックリンクに置き換え、ルートがそのファイルを任意のデータで上書きする可能性があります。 ログファイル自体が（非rootユーザーによって）書き込み可能である場合、誰かがログ自体を偽のデータで上書きできる可能性があります。</target>
        </trans-unit>
        <trans-unit id="6b79f6a75e22eded68b5a83c1dd288161de5798c" translate="yes" xml:space="preserve">
          <source>If you allow the account to log in as a user and as a service, then you can log on with that account and test that the account has the privileges to execute the scripts, read the web pages, and that you can start Apache in a console window. If this works, and you have followed the steps above, Apache should execute as a service with no problems.</source>
          <target state="translated">アカウントにユーザとして、サービスとしてのログインを許可している場合は、 そのアカウントでログインして、そのアカウントがスクリプトを実行したり、 ウェブページを読んだり、コンソールウィンドウで Apache を起動できる権限を持っているかどうかをテストしてください。これがうまくいき、上記の手順を踏めば、Apache は問題なくサービスとして実行されるはずです。</target>
        </trans-unit>
        <trans-unit id="a4376b1525efb77494b9dfd55e5df909261c4f0b" translate="yes" xml:space="preserve">
          <source>If you are &lt;code&gt;root&lt;/code&gt;, this option displays the compile options of &lt;code&gt;suexec&lt;/code&gt;. For security reasons all configuration options are changeable only at compile time.</source>
          <target state="translated">&lt;code&gt;root&lt;/code&gt; の場合、このオプションは &lt;code&gt;suexec&lt;/code&gt; のコンパイルオプションを表示します。 セキュリティ上の理由から、すべての構成オプションはコンパイル時にのみ変更できます。</target>
        </trans-unit>
        <trans-unit id="620302d1d107eb54e9915bef46f3e6e8d9cc3e78" translate="yes" xml:space="preserve">
          <source>If you are having problems with the service, it is suggested you follow the instructions below to try starting httpd.exe from a console window, and work out the errors before struggling to start it as a service again.</source>
          <target state="translated">もしサービスに問題がある場合、以下の指示に従い、コンソールウィンドウからhttpd.exeを起動してみてください。</target>
        </trans-unit>
        <trans-unit id="fd654d76188f199920d718b61293ebd6596a3eee" translate="yes" xml:space="preserve">
          <source>If you are managing any site that is more than a few pages, you may find that making changes to all those pages can be a real pain, particularly if you are trying to maintain some kind of standard look across all those pages.</source>
          <target state="translated">数ページ以上のサイトを管理している場合、それらすべてのページに変更を加えるのは本当に面倒な作業になるかもしれません。</target>
        </trans-unit>
        <trans-unit id="55655a8dcd8075b7231661ac57903cc83d0aa90a" translate="yes" xml:space="preserve">
          <source>If you are matching positive (&lt;code&gt;=&lt;/code&gt; or &lt;code&gt;==&lt;/code&gt;), you can capture grouped parts of the regular expression. The captured parts are stored in the special variables &lt;code&gt;$1&lt;/code&gt; .. &lt;code&gt;$9&lt;/code&gt;. The whole string matched by the regular expression is stored in the special variable &lt;code&gt;$0&lt;/code&gt;</source>
          <target state="translated">正（ &lt;code&gt;=&lt;/code&gt; または &lt;code&gt;==&lt;/code&gt; ）と一致する場合は、正規表現のグループ化された部分をキャプチャできます。 キャプチャされたパーツは、特殊変数 &lt;code&gt;$1&lt;/code&gt; .. &lt;code&gt;$9&lt;/code&gt; 格納されます。 正規表現に一致する文字列全体が特殊変数 &lt;code&gt;$0&lt;/code&gt; 格納されます</target>
        </trans-unit>
        <trans-unit id="8d6206cf8b27b055dffd11a5c363fa95e4a4c741" translate="yes" xml:space="preserve">
          <source>If you are processing data with known encoding but no encoding information, you can set this default to help mod_xml2enc process the data correctly. For example, to work with the default value of Latin1 (&lt;var&gt;iso-8859-1&lt;/var&gt; specified in HTTP/1.0, use</source>
          <target state="translated">既知のエンコードでデータを処理していて、エンコード情報がない場合は、このデフォルトを設定して、mod_xml2encがデータを正しく処理できるようにすることができます。 たとえば、Latin1のデフォルト値（HTTP / 1.0で指定された &lt;var&gt;iso-8859-1&lt;/var&gt; ）を使用するには、次のコマンドを使用します。</target>
        </trans-unit>
        <trans-unit id="27dde7e4bcf5b53971ae08d41ad374987d3386cf" translate="yes" xml:space="preserve">
          <source>If you are programming Apache 2.0 &lt;code&gt;&lt;a href=&quot;mod_isapi&quot;&gt;mod_isapi&lt;/a&gt;&lt;/code&gt; modules, you must limit your calls to &lt;code&gt;ServerSupportFunction&lt;/code&gt; to the following directives:</source>
          <target state="translated">Apache 2.0 &lt;code&gt;&lt;a href=&quot;mod_isapi&quot;&gt;mod_isapi&lt;/a&gt;&lt;/code&gt; モジュールをプログラミングしている場合は、 &lt;code&gt;ServerSupportFunction&lt;/code&gt; への呼び出しを次のディレクティブに制限する必要があります。</target>
        </trans-unit>
        <trans-unit id="e4d54f0d893f59771db7008978d580d1de25f1e8" translate="yes" xml:space="preserve">
          <source>If you are proxying content to your server, you need to be aware that the client address will be the address of your proxy server, not the address of the client, and so using the &lt;code&gt;Require&lt;/code&gt; directive in this context may not do what you mean. See &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; for one possible solution to this problem.</source>
          <target state="translated">コンテンツをサーバーにプロキシする場合は、クライアントアドレスがクライアントのアドレスではなくプロキシサーバーのアドレスになることに注意する必要があるため、このコンテキストで &lt;code&gt;Require&lt;/code&gt; ディレクティブを使用しても、 意図したとおりに動作しない場合があります。 この問題の1つの可能な解決策については、 &lt;code&gt;&lt;a href=&quot;mod_remoteip&quot;&gt;mod_remoteip&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="81069bf1271973c7e91a896aa740574930b7b28d" translate="yes" xml:space="preserve">
          <source>If you are really stuck with &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; and want multiple requests, you can tweak the &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; to make that possible. If it breaks, however, you own both parts.</source>
          <target state="translated">本当に &lt;code&gt;&lt;a href=&quot;../mod/mod_http2#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; 、複数のリクエストが必要な場合は、 H2MinWorkersを微調整してそれを可能にすることができます。 ただし、壊れた場合は、両方の部分を所有します。</target>
        </trans-unit>
        <trans-unit id="ebdbfbfaffa36267b0cde70d16a7c04e02d0f36e" translate="yes" xml:space="preserve">
          <source>If you are testing a server that is not Internet-accessible, you can put host names in your hosts file in order to do local resolution. For example, you might want to put a record in your hosts file to map a request for &lt;code&gt;www.example.com&lt;/code&gt; to your local system, for testing purposes. This entry would look like:</source>
          <target state="translated">インターネットにアクセスできないサーバーをテストする場合は、ローカル解決を行うためにホスト名をhostsファイルに入れることができます。 たとえば、テストの目的で、 &lt;code&gt;www.example.com&lt;/code&gt; へのリクエストをローカルシステムにマップするために、hostsファイルにレコードを置くことができます。 このエントリは次のようになります。</target>
        </trans-unit>
        <trans-unit id="08b79107313d93324ba9c49ed2fe15276fcdf987" translate="yes" xml:space="preserve">
          <source>If you are trying to debug your virtual host configuration, you may find the &lt;code&gt;-S&lt;/code&gt; command line switch useful.</source>
          <target state="translated">仮想ホスト構成をデバッグしようとしている場合は、 &lt;code&gt;-S&lt;/code&gt; コマンドラインスイッチが役立つことがあります。</target>
        </trans-unit>
        <trans-unit id="c980d16248819c4e18d45e759b7355e200aaa778" translate="yes" xml:space="preserve">
          <source>If you are unsure whether a particular directive is permitted in a &lt;code&gt;.htaccess&lt;/code&gt; file, look at the documentation for that directive, and check the Context line for &quot;.htaccess&quot;.</source>
          <target state="translated">特定のディレクティブが &lt;code&gt;.htaccess&lt;/code&gt; ファイルで許可されているかどうか不明な場合は、そのディレクティブのドキュメントを参照し、Context行で「.htaccess」を確認してください。</target>
        </trans-unit>
        <trans-unit id="e40669ef956ac9d27b0fa09b8c04f35043177d12" translate="yes" xml:space="preserve">
          <source>If you are upgrading from one minor version to the next (for example, 2.4.9 to 2.4.10), please skip down to the &lt;a href=&quot;#upgrading&quot;&gt;upgrading&lt;/a&gt; section.</source>
          <target state="translated">1つのマイナーバージョンから次のマイナーバージョンにアップグレードする場合（たとえば、2.4.9から2.4.10へ）は、 &lt;a href=&quot;#upgrading&quot;&gt;アップグレード&lt;/a&gt;セクションまでスキップしてください。</target>
        </trans-unit>
        <trans-unit id="794058e8ad218b25b3122b7f4e1407e9a615b80d" translate="yes" xml:space="preserve">
          <source>If you are upgrading, the installation will not overwrite your configuration files or documents.</source>
          <target state="translated">アップグレードする場合、インストールによって設定ファイルやドキュメントが上書きされることはありません。</target>
        </trans-unit>
        <trans-unit id="020cf8f3252135d43d1095a4d53ada0d3f78c418" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;../vhosts/name-based&quot;&gt;name-based virtual hosts&lt;/a&gt;, the &lt;code&gt;ServerName&lt;/code&gt; inside a &lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; section specifies what hostname must appear in the request's &lt;code&gt;Host:&lt;/code&gt; header to match this virtual host.</source>
          <target state="translated">&lt;a href=&quot;../vhosts/name-based&quot;&gt;名前ベースの仮想ホスト&lt;/a&gt;を使用している場合、 &lt;code&gt;&lt;a href=&quot;#virtualhost&quot;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/a&gt;&lt;/code&gt; セクション内の &lt;code&gt;ServerName&lt;/code&gt; は、この仮想ホストに一致するために要求の &lt;code&gt;Host:&lt;/code&gt; ヘッダーに表示する必要があるホスト名を指定します。</target>
        </trans-unit>
        <trans-unit id="d4a033642a8f865f9e86a5ed2402ef4305e2c4ad" translate="yes" xml:space="preserve">
          <source>If you are using &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; in either &lt;code&gt;.htaccess&lt;/code&gt; files or in &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; sections, it is important to have some understanding of how the rules are processed. The simplified form of this is that once the rules have been processed, the rewritten request is handed back to the URL parsing engine to do what it may with it. It is possible that as the rewritten request is handled, the &lt;code&gt;.htaccess&lt;/code&gt; file or &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section may be encountered again, and thus the ruleset may be run again from the start. Most commonly this will happen if one of the rules causes a redirect - either internal or external - causing the request process to start over.</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; ファイルまたは &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションで &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; を使用している場合は、ルールの処理方法をある程度理解しておくことが重要です。 この単純化された形式は、ルールが処理されると、書き換えられた要求がURL解析エンジンに戻され、それを使用して何ができるかを示します。 書き換えられた要求が処理されると、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルまたは &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションが再び発生する可能性があり、そのためルールセットが最初から再度実行される可能性があります。 最も一般的には、これは、ルールの1つがリダイレクト（内部または外部）を引き起こし、要求プロセスが最初からやり直した場合に発生します。</target>
        </trans-unit>
        <trans-unit id="96380335ff61e26dbf750b21b120c5fc3accd47b" translate="yes" xml:space="preserve">
          <source>If you are using a version of the web server and OpenSSL that support SNI, though, and the client's browser also supports SNI, then the hostname is included in the original SSL request, and the web server can select the correct SSL virtual host.</source>
          <target state="translated">しかし、SNIをサポートするバージョンのウェブサーバとOpenSSLを使用していて、クライアントのブラウザもSNIをサポートしている場合は、元のSSLリクエストにホスト名が含まれており、ウェブサーバは正しいSSLバーチャルホストを選択することができます。</target>
        </trans-unit>
        <trans-unit id="131d2e35e21825a8b23c08b844d01f00b0fb06f6" translate="yes" xml:space="preserve">
          <source>If you are using language negotiation you can choose between different naming conventions, because files can have more than one extension, and the order of the extensions is normally irrelevant (see the &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;mod_mime&lt;/a&gt; documentation for details).</source>
          <target state="translated">言語ネゴシエーションを使用している場合は、ファイルに複数の拡張子を付けることができ、拡張子の順序は通常関係がないため、さまざまな命名規則から選択できます（詳細については、 &lt;a href=&quot;mod/mod_mime#multipleext&quot;&gt;mod_mimeの&lt;/a&gt;ドキュメントを参照してください）。</target>
        </trans-unit>
        <trans-unit id="5c548c1d1f2e583cdcffc8a0991961d75aa4393b" translate="yes" xml:space="preserve">
          <source>If you are using mod_proxy, you may wish to enable &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyerroroverride&quot;&gt;ProxyErrorOverride&lt;/a&gt;&lt;/code&gt; so that you can provide custom error messages on behalf of your Origin servers. If you don't enable ProxyErrorOverride, Apache httpd will not generate custom error documents for proxied content.</source>
          <target state="translated">mod_proxyを使用している場合は、 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxyerroroverride&quot;&gt;ProxyErrorOverride&lt;/a&gt;&lt;/code&gt; を有効にして、オリジンサーバーに代わってカスタムエラーメッセージを提供できるようにすることができます。 ProxyErrorOverrideを有効にしない場合、Apache httpdはプロキシされたコンテンツのカスタムエラードキュメントを生成しません。</target>
        </trans-unit>
        <trans-unit id="babd2ac9249d0946c7749b0b95b0b216017d3f3a" translate="yes" xml:space="preserve">
          <source>If you are working with encodings that are not supported by any of the conversion methods available on your platform, you can still alias them to a supported encoding using &lt;code&gt;xml2EncAlias&lt;/code&gt;.</source>
          <target state="translated">プラットフォームで使用可能な変換メソッドのいずれかでサポートされていないエンコードを使用している場合でも、 &lt;code&gt;xml2EncAlias&lt;/code&gt; を使用して、サポートされているエンコードにエイリアスを付けることができます。</target>
        </trans-unit>
        <trans-unit id="75b0ea6845c771afaedb78c73a291d8668387f8e" translate="yes" xml:space="preserve">
          <source>If you are, perhaps, thinking that none of this applies to you because you use a case-sensitive filesystem, remember that there are many other ways to map multiple webspace locations to the same filesystem location. Therefore you should always use the filesystem containers when you can. There is, however, one exception to this rule. Putting configuration restrictions in a &lt;code&gt;&amp;lt;Location &quot;/&quot;&amp;gt;&lt;/code&gt; section is perfectly safe because this section will apply to all requests regardless of the specific URL.</source>
          <target state="translated">大文字と小文字を区別するファイルシステムを使用しているためにこれに該当しないと考える場合は、複数のウェブスペースの場所を同じファイルシステムの場所にマッピングする方法が他にもたくさんあることに注意してください。 したがって、可能な場合は常にファイルシステムコンテナを使用する必要があります。 ただし、このルールには例外が1つあります。 &lt;code&gt;&amp;lt;Location &quot;/&quot;&amp;gt;&lt;/code&gt; セクションに設定制限を置くことは、このセクションが特定のURLに関係なくすべてのリクエストに適用されるため、完全に安全です。</target>
        </trans-unit>
        <trans-unit id="8982944d90d911882936ddb6344a9f3d9f0d801e" translate="yes" xml:space="preserve">
          <source>If you cannot compile the Apache HTTP Server yourself, you can obtain a binary package from numerous binary distributions available on the Internet.</source>
          <target state="translated">Apache HTTP サーバを自分でコンパイルできない場合は、インターネット上の多数のバイナリ配布物からバイナリパッケージを入手することができます。</target>
        </trans-unit>
        <trans-unit id="e7b0e83185b3a8c6c47325527e80932a74eeabab" translate="yes" xml:space="preserve">
          <source>If you check the &lt;a href=&quot;#errorlogs&quot;&gt;Apache error log&lt;/a&gt;, you will probably find that it says &quot;Premature end of script headers&quot;, possibly along with an error message generated by your CGI program. In this case, you will want to check each of the below sections to see what might be preventing your CGI program from emitting the proper HTTP headers.</source>
          <target state="translated">&lt;a href=&quot;#errorlogs&quot;&gt;Apacheエラーログ&lt;/a&gt;を確認すると、CGIプログラムによって生成されたエラーメッセージとともに、「スクリプトヘッダーの途中で終了」と表示されていることに気付くでしょう。 この場合、以下の各セクションをチェックして、CGIプログラムが適切なHTTPヘッダーを送信できない原因を確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="7b06bf5f73f4ea8a4583030868b2f538cbdc1880" translate="yes" xml:space="preserve">
          <source>If you contribute back a patch that revises project files, we must commit project files in Visual Studio 6.0 format. Changes should be simple, with minimal compilation and linkage flags that can be recognized by all Visual Studio environments.</source>
          <target state="translated">プロジェクトファイルを修正するパッチを提供する場合は、プロジェクトファイルを Visual Studio 6.0 形式でコミットしなければなりません。変更はシンプルで、すべての Visual Studio 環境で認識できる最小限のコンパイルフラグとリンケージフラグを持つものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="8b2ab327d311e7d501e725aae1d2894f87d61eba" translate="yes" xml:space="preserve">
          <source>If you did not do a binary install, Apache will in some scenarios complain about the missing registry key. This warning can be ignored if the server was otherwise able to find its configuration file.</source>
          <target state="translated">バイナリインストールをしていない場合、Apache はいくつかのシナリオでレジストリキーが 見つからないと警告します。この警告は、サーバが設定ファイルを見つけることができれば無視できます。</target>
        </trans-unit>
        <trans-unit id="cd65b1b17cb73502299d059b48aa4d3fd6c7e259" translate="yes" xml:space="preserve">
          <source>If you do not want to offer any sites on port 80 any more, you may leave it open and redirect all requests to your https: sites instead. Use the &lt;code&gt;&lt;a href=&quot;#mdrequirehttps&quot;&gt;MDRequireHttps&lt;/a&gt;&lt;/code&gt; described below to do that in a convenient fashion. This will continue to answer http: challenges from Let's Encrypt.</source>
          <target state="translated">今後ポート80でサイトを提供したくない場合は、サイトを開いたままにして、代わりにすべてのリクエストをhttps：サイトにリダイレクトできます。 以下で説明する &lt;code&gt;&lt;a href=&quot;#mdrequirehttps&quot;&gt;MDRequireHttps&lt;/a&gt;&lt;/code&gt; を使用して、便利な方法でそれを行います。 これは、引き続きhttp：Let's Encryptの課題に答えます。</target>
        </trans-unit>
        <trans-unit id="cee57615c3a7751be38d9d8c0547b40eb8789884" translate="yes" xml:space="preserve">
          <source>If you don't care what IP address the client has connected to, use a &quot;*&quot; as the address of every virtual host, and name-based virtual hosting is applied across all configured virtual hosts.</source>
          <target state="translated">クライアントが接続しているIPアドレスを気にしない場合は、すべてのバーチャルホストのアドレスとして「*」を使用し、名前ベースのバーチャルホストは、設定されたすべてのバーチャルホストに渡って適用されます。</target>
        </trans-unit>
        <trans-unit id="ec871089d2e00ae31fe59c3c9ac3a990f586c2fb" translate="yes" xml:space="preserve">
          <source>If you don't know how to do this, you'll need to contact your network administrator, or Internet service provider, to perform this step for you.</source>
          <target state="translated">この方法がわからない場合は、ネットワーク管理者またはインターネットサービスプロバイダに連絡して、この手順を実行してもらう必要があります。</target>
        </trans-unit>
        <trans-unit id="dceef3c83131052ceaf4fc6132047827e720b21a" translate="yes" xml:space="preserve">
          <source>If you don't like the format in which the date gets printed, you can use the &lt;code&gt;config&lt;/code&gt; function, with a &lt;code&gt;timefmt&lt;/code&gt; attribute, to modify that formatting.</source>
          <target state="translated">日付が出力される形式が気に入らない場合は、 &lt;code&gt;config&lt;/code&gt; 関数を &lt;code&gt;timefmt&lt;/code&gt; 属性とともに使用して、その形式を変更できます。</target>
        </trans-unit>
        <trans-unit id="80537836fb1b76e3d7ac46217962f4af9b03294d" translate="yes" xml:space="preserve">
          <source>If you don't see this message at server startup, the server is most likely not finding the wrapper program where it expects it, or the executable is not installed &lt;em&gt;setuid root&lt;/em&gt;.</source>
          <target state="translated">サーバーの起動時にこのメッセージが表示されない場合は、サーバーが期待する場所にラッパープログラムを見つけていないか、実行可能ファイルが&lt;em&gt;setuid rootに&lt;/em&gt;インストールされていません。</target>
        </trans-unit>
        <trans-unit id="6001260e8531e38ae83348c7929ed210dffd8f3c" translate="yes" xml:space="preserve">
          <source>If you don't specify a configuration file name with &lt;code&gt;-f&lt;/code&gt;, Apache will use the file name compiled into the server, usually &lt;code&gt;conf/httpd.conf&lt;/code&gt;. Invoking Apache with the &lt;code&gt;-V&lt;/code&gt; switch will display this value labeled as &lt;code&gt;SERVER_CONFIG_FILE&lt;/code&gt;. Apache will then determine its &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; by trying the following, in this order:</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; で構成ファイル名を指定しない場合、Apacheはサーバーにコンパイルされたファイル名（通常は &lt;code&gt;conf/httpd.conf&lt;/code&gt; )を使用します。 &lt;code&gt;-V&lt;/code&gt; スイッチを使用してApacheを呼び出すと、 &lt;code&gt;SERVER_CONFIG_FILE&lt;/code&gt; のラベルが付いたこの値が表示されます。 次に、Apacheは次の順序で &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; を決定します。</target>
        </trans-unit>
        <trans-unit id="c08a3a90ac2cc6ed47ef002eca6dd1f7edab398d" translate="yes" xml:space="preserve">
          <source>If you don't specify a configuration file with &lt;code&gt;-f&lt;/code&gt; or &lt;code&gt;-n&lt;/code&gt;, Apache will use the file name compiled into the server, such as &lt;code&gt;conf\httpd.conf&lt;/code&gt;. This built-in path is relative to the installation directory. You can verify the compiled file name from a value labelled as &lt;code&gt;SERVER_CONFIG_FILE&lt;/code&gt; when invoking Apache with the &lt;code&gt;-V&lt;/code&gt; switch, like this:</source>
          <target state="translated">&lt;code&gt;-f&lt;/code&gt; または &lt;code&gt;-n&lt;/code&gt; で構成ファイルを指定しない場合、Apacheは &lt;code&gt;conf\httpd.conf&lt;/code&gt; などのサーバーにコンパイルされたファイル名を使用します。 この組み込みパスは、インストールディレクトリからの相対パスです。 次のように、 &lt;code&gt;-V&lt;/code&gt; スイッチを使用してApacheを呼び出すときに、 &lt;code&gt;SERVER_CONFIG_FILE&lt;/code&gt; というラベルの付いた値からコンパイル済みファイルの名前を確認できます。</target>
        </trans-unit>
        <trans-unit id="387e2d6f3259230a8f27c1af948a400edd1b551a" translate="yes" xml:space="preserve">
          <source>If you don't want this effect &lt;em&gt;and&lt;/em&gt; the reasons above don't apply to you, you can turn off the redirect as shown below. However, be aware that there are possible security implications to doing this.</source>
          <target state="translated">この効果が望ましくなく、上記の理由が当てはまらない場合は、以下に示すようにリダイレクトをオフにすることができます。 ただし、これを行うと、セキュリティに影響する可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="a7418a21a9e97b7b660f0dc1055007b90df85021" translate="yes" xml:space="preserve">
          <source>If you evaluate the request body yourself, &lt;em&gt;don't trust the &lt;code&gt;Content-Length&lt;/code&gt; header!&lt;/em&gt; The Content-Length header reflects the length of the incoming data from the client and &lt;em&gt;not&lt;/em&gt; the byte count of the decompressed data stream.</source>
          <target state="translated">リクエストの本文を自分で評価する場合は&lt;em&gt;、 &lt;code&gt;Content-Length&lt;/code&gt; ヘッダーを信頼しない&lt;/em&gt;で&lt;em&gt;ください。&lt;/em&gt; Content-Lengthヘッダーは、解凍されたデータストリームのバイト数では&lt;em&gt;なく&lt;/em&gt; 、クライアントからの受信データの長さを反映します。</target>
        </trans-unit>
        <trans-unit id="fcb405d07d1ae0ed46000d7975fca2ea48bdc993" translate="yes" xml:space="preserve">
          <source>If you experience stickyness errors, e.g. users lose their application sessions and need to login again, you first want to check whether this is because the back-ends are sometimes unavailable or whether your configuration is wrong. To find out about possible stability problems with the back-ends, check your Apache error log for proxy error messages.</source>
          <target state="translated">スティッキネスエラーが発生した場合、例えばユーザがアプリケーションのセッションを失って再度ログインする必要がある場合、 バックエンドが利用できないことがあるために発生しているのか、設定が間違っているのかを まず確認してください。バックエンドの安定性の問題の可能性を調べるには、Apache のエラーログにプロキシのエラーメッセージがないかチェックしてください。</target>
        </trans-unit>
        <trans-unit id="a2e3dffbaa89311ca312b6ca34804b7288b8bf97" translate="yes" xml:space="preserve">
          <source>If you fear that this lookup might fail because your DNS server is down then you can insert the hostname in &lt;code&gt;/etc/hosts&lt;/code&gt; (where you probably already have it so that the machine can boot properly). Then ensure that your machine is configured to use &lt;code&gt;/etc/hosts&lt;/code&gt; in the event that DNS fails. Depending on what OS you are using this might be accomplished by editing &lt;code&gt;/etc/resolv.conf&lt;/code&gt;, or maybe &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt;.</source>
          <target state="translated">DNSサーバーがダウンしているためにこの検索が失敗するのではないかと心配な場合は、 &lt;code&gt;/etc/hosts&lt;/code&gt; にホスト名を挿入できます （マシンが適切に起動するように、すでにホスト名を持っている可能性があります）。 次に、DNSが失敗した場合にマシンが &lt;code&gt;/etc/hosts&lt;/code&gt; を使用するように構成されていることを確認します。 使用しているOSに応じて、これは &lt;code&gt;/etc/resolv.conf&lt;/code&gt; または多分 &lt;code&gt;/etc/nsswitch.conf&lt;/code&gt; を編集することで実現できます。</target>
        </trans-unit>
        <trans-unit id="11e7c20cb08e70ba783117aefea7e3bc2c994b1b" translate="yes" xml:space="preserve">
          <source>If you happen to be running Apache on an alternate port, you need to explicitly put that in the URL:</source>
          <target state="translated">別のポートで Apache を実行している場合は、URL に明示的にその旨を記述する必要があります。</target>
        </trans-unit>
        <trans-unit id="8fb52a5219d7a15e7e19373fab723a294995c4ca" translate="yes" xml:space="preserve">
          <source>If you have a request for &lt;code&gt;/index.php/foo.shtml&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; will now treat the incoming request as &lt;code&gt;/index.php/foo.shtml&lt;/code&gt; and directives like &lt;code&gt;AddOutputFilter INCLUDES .shtml&lt;/code&gt; will add the &lt;code&gt;INCLUDES&lt;/code&gt; filter to the request. If &lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; is not set, the &lt;code&gt;INCLUDES&lt;/code&gt; filter will not be added. This will work analogously for virtual paths, such as those defined by &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/index.php/foo.shtml&lt;/code&gt; に対するリクエストがある場合、 &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; は着信リクエストを &lt;code&gt;/index.php/foo.shtml&lt;/code&gt; として扱い、 &lt;code&gt;AddOutputFilter INCLUDES .shtml&lt;/code&gt; のようなディレクティブが &lt;code&gt;INCLUDES&lt;/code&gt; フィルターをリクエストに追加します。 &lt;code&gt;ModMimeUsePathInfo&lt;/code&gt; が設定されていない場合、 &lt;code&gt;INCLUDES&lt;/code&gt; フィルターは追加されません。 これは、 &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; で定義されているような仮想パスでも同様に機能します。</target>
        </trans-unit>
        <trans-unit id="1264ed5af9cce77e6ad835ab1ffafd496f1bba85" translate="yes" xml:space="preserve">
          <source>If you have enabled the suEXEC feature with the &lt;code&gt;--enable-suexec&lt;/code&gt; option the &lt;code&gt;suexec&lt;/code&gt; binary (together with httpd itself) is automatically built if you execute the &lt;code&gt;make&lt;/code&gt; command.</source>
          <target state="translated">&lt;code&gt;--enable-suexec&lt;/code&gt; オプションを使用してsuEXEC機能を有効にした場合、 &lt;code&gt;make&lt;/code&gt; コマンドを実行すると、 &lt;code&gt;suexec&lt;/code&gt; バイナリー（httpd自体と共に）が自動的にビルドされます。</target>
        </trans-unit>
        <trans-unit id="4a230c668553a335789926a50af5e4a7e3588699" translate="yes" xml:space="preserve">
          <source>If you have information on your web site that is sensitive or intended for only a small group of people, the techniques in this article will help you make sure that the people that see those pages are the people that you wanted to see them.</source>
          <target state="translated">もしあなたのウェブサイトに機密性の高い情報があったり、少数の人々だけを対象とした情報がある場合、この記事のテクニックを使えば、それらのページを見た人々があなたが見たかった人々であることを確認するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="b62338e0c4c35275d3737e32bfb5890fb7574393" translate="yes" xml:space="preserve">
          <source>If you have no intention of using dynamically loaded modules (you probably don't if you're reading this and tuning your server for every last ounce of performance), then you should add &lt;code&gt;-DDYNAMIC_MODULE_LIMIT=0&lt;/code&gt; when building your server. This will save RAM that's allocated only for supporting dynamically loaded modules.</source>
          <target state="translated">動的に読み込まれるモジュールを使用するつもりがない場合（おそらく、これを読んでサーバーを最後の1オンスのパフォーマンスに合わせて調整しているのではない場合）、サーバーを構築するときに &lt;code&gt;-DDYNAMIC_MODULE_LIMIT=0&lt;/code&gt; を追加する必要があります。 これにより、動的にロードされるモジュールをサポートするためにのみ割り当てられるRAMが節約されます。</target>
        </trans-unit>
        <trans-unit id="11400b36d543d0c5b3c5222dfc9889591f05ef0a" translate="yes" xml:space="preserve">
          <source>If you have populated the form with fields described by &lt;code&gt;&lt;a href=&quot;#authformmethod&quot;&gt;AuthFormMethod&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#authformmimetype&quot;&gt;AuthFormMimetype&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#authformbody&quot;&gt;AuthFormBody&lt;/a&gt;&lt;/code&gt;, you probably want to set this field to a similar size as the &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#authformmethod&quot;&gt;AuthFormMethod&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#authformmimetype&quot;&gt;AuthFormMimetype&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#authformbody&quot;&gt;AuthFormBody&lt;/a&gt;&lt;/code&gt; で記述されたフィールドをフォームに入力した場合は、このフィールドを &lt;code&gt;&lt;a href=&quot;mod_request#keptbodysize&quot;&gt;KeptBodySize&lt;/a&gt;&lt;/code&gt; ディレクティブと同じサイズに設定することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7026827403076bef16a2b49f7a38f1d1c416115d" translate="yes" xml:space="preserve">
          <source>If you have the &lt;code&gt;DEFLATE&lt;/code&gt; filter activated, this environment variable will ignore the accept-encoding setting of your browser and will send compressed output unconditionally.</source>
          <target state="translated">&lt;code&gt;DEFLATE&lt;/code&gt; フィルターをアクティブにしている場合、この環境変数はブラウザーの受け入れエンコード設定を無視し、無条件に圧縮出力を送信します。</target>
        </trans-unit>
        <trans-unit id="698371c9888b3fb35c08929dccc845d3a052dfcd" translate="yes" xml:space="preserve">
          <source>If you have to support a client which sends broken headers and which can't be fixed, a simple workaround involving &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif&quot;&gt;mod_setenvif &lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; allows you to still accept these headers:</source>
          <target state="translated">壊れたヘッダーを送信し、修正できないクライアントをサポートする必要がある場合、 &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif&quot;&gt;mod_setenvif &lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;mod/mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; を含む簡単な回避策を使用すると、これらのヘッダーを引き続き受け入れることができます。</target>
        </trans-unit>
        <trans-unit id="46187745e56b44b5f602c37d51cffa3399339811" translate="yes" xml:space="preserve">
          <source>If you have virtual hosts with a different &lt;code&gt;&lt;a href=&quot;mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; for each, you will need to define them to all reside in one parent directory; then name that parent directory here. &lt;strong&gt;If this is not defined properly, &quot;~userdir&quot; cgi requests will not work!&lt;/strong&gt;</source>
          <target state="translated">それぞれに異なる &lt;code&gt;&lt;a href=&quot;mod/mod_userdir#userdir&quot;&gt;UserDir&lt;/a&gt;&lt;/code&gt; を持つ仮想ホストがある場合、それらをすべて1つの親ディレクトリに存在するように定義する必要があります。 次に、その親ディレクトリに名前を付けます。 &lt;strong&gt;これが適切に定義されていないと、「〜userdir」cgiリクエストは機能しません。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="af3f946a4c60d7988037dfddb3913030d8db1cda" translate="yes" xml:space="preserve">
          <source>If you include &lt;code&gt;&lt;a href=&quot;../mod/mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; and you also set &lt;code&gt;ExtendedStatus On&lt;/code&gt; when building and running Apache, then on every request Apache will perform two calls to &lt;code&gt;gettimeofday(2)&lt;/code&gt; (or &lt;code&gt;times(2)&lt;/code&gt; depending on your operating system), and (pre-1.3) several extra calls to &lt;code&gt;time(2)&lt;/code&gt;. This is all done so that the status report contains timing indications. For highest performance, set &lt;code&gt;ExtendedStatus off&lt;/code&gt; (which is the default).</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; を含め、Apacheのビルドおよび実行時に &lt;code&gt;ExtendedStatus On&lt;/code&gt; も設定した場合、リクエストごとに、Apacheは &lt;code&gt;gettimeofday(2)&lt;/code&gt; （またはオペレーティングシステムに応じて &lt;code&gt;times(2)&lt;/code&gt; )への2回の呼び出し、および（1.3より前の）複数回の呼び出しを実行します。 &lt;code&gt;time(2)&lt;/code&gt; への追加の呼び出し。 これはすべて、ステータスレポートにタイミング表示が含まれるように行われます。 最高のパフォーマンスを得るには、 &lt;code&gt;ExtendedStatus off&lt;/code&gt; に設定します （これがデフォルトです）。</target>
        </trans-unit>
        <trans-unit id="9ce9d8708a113a6be59ac7c14ab7f22a223cb00f" translate="yes" xml:space="preserve">
          <source>If you installed to the default location &lt;code&gt;C:\Program Files\Metrowerks\CodeWarrior&lt;/code&gt;, you don't need to set this.</source>
          <target state="translated">デフォルトの場所 &lt;code&gt;C:\Program Files\Metrowerks\CodeWarrior&lt;/code&gt; にインストールした場合は、これを設定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="1b0123d84955c58dce22153fc6c63330775aced7" translate="yes" xml:space="preserve">
          <source>If you intend to cache a large number of files in this manner, you must ensure that your operating system's limit for the number of open files is set appropriately.</source>
          <target state="translated">この方法で大量のファイルをキャッシュする場合は、オペレーティングシステムの開いているファイルの数の制限が適切に設定されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="1886459373c12ab4a9f86a13a9cd65ae7fbb2ff2" translate="yes" xml:space="preserve">
          <source>If you intend to use SSL or TLS, read this section CAREFULLY so as to understand the differences between configurations on the different LDAP toolkits supported.</source>
          <target state="translated">SSLやTLSを使用する場合は、サポートされているLDAPツールキットの設定の違いを理解するために、このセクションを注意深く読んでください。</target>
        </trans-unit>
        <trans-unit id="bb558a506d8517858f268daa518def264177d717" translate="yes" xml:space="preserve">
          <source>If you jumped directly to this part of the document to find out how to do authentication, it is important to note one thing. There is a common misconception that you are required to use &lt;code&gt;.htaccess&lt;/code&gt; files in order to implement password authentication. This is not the case. Putting authentication directives in a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; section, in your main server configuration file, is the preferred way to implement this, and &lt;code&gt;.htaccess&lt;/code&gt; files should be used only if you don't have access to the main server configuration file. See &lt;a href=&quot;#when&quot;&gt;above&lt;/a&gt; for a discussion of when you should and should not use &lt;code&gt;.htaccess&lt;/code&gt; files.</source>
          <target state="translated">文書のこの部分に直接ジャンプして認証の方法を見つけた場合は、1つのことに注意することが重要です。 パスワード認証を実装するには &lt;code&gt;.htaccess&lt;/code&gt; ファイルを使用する必要があるという一般的な誤解があります。 これはそうではありません。 これを実装するには、メインサーバー構成ファイルの &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションに認証ディレクティブを配置することをお勧めします &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、メインサーバー構成ファイルにアクセスできない場合にのみ使用してください。 &lt;code&gt;.htaccess&lt;/code&gt; ファイルを使用する必要がある場合と使用しない場合の説明については、 &lt;a href=&quot;#when&quot;&gt;上記&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="a71d0e83be0177b0962f4417ba4b89fb5ffdd554" translate="yes" xml:space="preserve">
          <source>If you memory-map a file located on an NFS-mounted filesystem and a process on another NFS client machine deletes or truncates the file, your process may get a bus error the next time it tries to access the mapped file content.</source>
          <target state="translated">NFS マウントされたファイルシステム上にあるファイルをメモリマップしたときに、別の NFS クライアントマシン上のプロセスがファイルを削除したり、切り捨てたりすると、次にマップされたファイルの内容にアクセスしようとしたときにバスエラーが発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="88c9f742e5508d9db4a3a2a0854ab6eca5162744" translate="yes" xml:space="preserve">
          <source>If you mix things, Apache httpd will detect it and return a special response code, 421 Misdirected Request, to the client.</source>
          <target state="translated">もし混ざっていると、Apache httpd はそれを検出して、特別なレスポンスコード 421 Misdirected Request をクライアントに返します。</target>
        </trans-unit>
        <trans-unit id="5e7981d4c6f2bf9eb0af251a79d071ee55e8dddb" translate="yes" xml:space="preserve">
          <source>If you move this and have already data, be sure to move/copy the data first to the new location, reconfigure and then restart the server. If you reconfigure and restart first, the server will try to get new certificates that it thinks are missing.</source>
          <target state="translated">これを移動して既にデータがある場合は、必ず先に新しい場所にデータを移動して、再設定をしてからサーバーを再起動するようにしてください。先に再設定してから再起動すると、サーバは不足していると思われる新しい証明書を取得しようとします。</target>
        </trans-unit>
        <trans-unit id="e3abf23622dc262e3707f674b79544fc49802b40" translate="yes" xml:space="preserve">
          <source>If you need to have specifically named configuration files for different services, you must use this:</source>
          <target state="translated">異なるサービスのために特別な名前の設定ファイルを用意する必要がある場合は、これを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="51a8e49b5fc4ce486d61a1fb63e599e4b7f85d34" translate="yes" xml:space="preserve">
          <source>If you need to specify the name of the service you want to install, use the following command. You have to do this if you have several different service installations of Apache on your computer. If you specify a name during the install, you have to also specify it during any other -k operation.</source>
          <target state="translated">インストールするサービスの名前を指定する必要がある場合は、以下のコマンドを使用します。コンピュータに複数の異なるサービスがインストールされている場合には、これを行う必要があります。インストール時に名前を指定した場合は、他の -k 操作時にも指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="6be0b93d563a9ebbed751f0da0563d8fda4603dc" translate="yes" xml:space="preserve">
          <source>If you omit the &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive from any name-based virtual host, the server will default to a fully qualified domain name (FQDN) derived from the system hostname. This implicitly set server name can lead to counter-intuitive virtual host matching and is discouraged.</source>
          <target state="translated">名前ベースの仮想ホストから &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; ディレクティブを省略すると、サーバーはデフォルトでシステムのホスト名から派生した完全修飾ドメイン名（FQDN）になります。 この暗黙的に設定されたサーバー名は、直感に反する仮想ホストマッチングにつながる可能性があるため、お勧めしません。</target>
        </trans-unit>
        <trans-unit id="cf041f937decaa6ffa02929217cc3df9b46d0d7a" translate="yes" xml:space="preserve">
          <source>If you omit the &lt;var&gt;value&lt;/var&gt; argument, the variable is set to an empty string.</source>
          <target state="translated">&lt;var&gt;value&lt;/var&gt; 引数を省略すると、変数は空の文字列に設定されます。</target>
        </trans-unit>
        <trans-unit id="146b6aa1011c7657b77e70d5ff1dd5ee9d1a1a47" translate="yes" xml:space="preserve">
          <source>If you open your favorite browser and tell it to get the address</source>
          <target state="translated">お気に入りのブラウザを開いてアドレスを取得するように言うと</target>
        </trans-unit>
        <trans-unit id="2dcde7e0bec98fc56c4a05c62b0f5a818b053ad7" translate="yes" xml:space="preserve">
          <source>If you plan to use &lt;code&gt;.htaccess&lt;/code&gt; files, you will need to have a server configuration that permits putting authentication directives in these files. This is done with the &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; directive, which specifies which directives, if any, may be put in per-directory configuration files.</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; ファイルを使用する場合は、これらのファイルに認証ディレクティブを配置できるようにするサーバー構成が必要です。 これは、 &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して行われます。AllowOverrideディレクティブは、存在する場合、ディレクトリごとの構成ファイルに含めることができるディレクティブを指定します。</target>
        </trans-unit>
        <trans-unit id="a1ffd4b41ada6e8b8abc35bd12683a16f166d12b" translate="yes" xml:space="preserve">
          <source>If you point your &lt;code&gt;ErrorDocument&lt;/code&gt; to some variety of dynamic handler such as a server-side include document, CGI script, or some variety of other handler, you may wish to use the available custom environment variables to customize this response.</source>
          <target state="translated">&lt;code&gt;ErrorDocument&lt;/code&gt; に、サーバー側インクルードドキュメント、CGIスクリプト、またはその他のさまざまなハンドラーなどのさまざまな動的ハンドラーを指定する場合、使用可能なカスタム環境変数を使用して、この応答をカスタマイズできます。</target>
        </trans-unit>
        <trans-unit id="78ebaa24887f29cc5edffd1c23654b8f4a4009e7" translate="yes" xml:space="preserve">
          <source>If you prefer to explicitly declare all the domain names, use 'manual' mode. An error will be logged if the names do not match with the expected ones.</source>
          <target state="translated">すべてのドメイン名を明示的に宣言したい場合は、'manual'モードを使用してください。名前が期待したものと一致しない場合、エラーがログに記録されます。</target>
        </trans-unit>
        <trans-unit id="c60331a6b59fb2c05e3985e3512e18a6da90b720" translate="yes" xml:space="preserve">
          <source>If you require a more flexible reverse-proxy configuration, see the &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directive with the &lt;code&gt;[P]&lt;/code&gt; flag.</source>
          <target state="translated">より柔軟なリバースプロキシ構成が必要な場合は、 &lt;code&gt;[P]&lt;/code&gt; フラグを指定した &lt;code&gt;&lt;a href=&quot;mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; ディレクティブを参照してください。</target>
        </trans-unit>
        <trans-unit id="e513da335c0408a371870dfe212d7526e308e738" translate="yes" xml:space="preserve">
          <source>If you set this globally, it applies to all managed domains. If you want it for a specific domain only, use:</source>
          <target state="translated">これをグローバルに設定すると、管理されているすべてのドメインに適用されます。特定のドメインのみに設定したい場合は、以下を使用します。</target>
        </trans-unit>
        <trans-unit id="714ef7344ba3e84267ad3195c52e376f51867ecf" translate="yes" xml:space="preserve">
          <source>If you system falls into 1 or 2 (above), then increase the file descriptor limit before starting Apache, using a script like</source>
          <target state="translated">もしあなたのシステムが 1 または 2 (上記)に該当する場合は、Apache を起動する前に、以下のようなスクリプトを使ってファイル記述子の制限を増やしてください。</target>
        </trans-unit>
        <trans-unit id="d3a38a2fe785e745efbd8645b0cdf1d8e55efb4c" translate="yes" xml:space="preserve">
          <source>If you use a &lt;code&gt;ScoreBoardFile&lt;/code&gt; then you may see improved speed by placing it on a RAM disk. But be careful that you heed the same warnings about log file placement and &lt;a href=&quot;../misc/security_tips&quot;&gt;security&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ScoreBoardFile&lt;/code&gt; を使用する場合は、RAMディスクに配置すると速度が向上する場合があります。 ただし、ログファイルの配置と&lt;a href=&quot;../misc/security_tips&quot;&gt;セキュリティ&lt;/a&gt;について同じ警告に注意してください。</target>
        </trans-unit>
        <trans-unit id="1b92967028f03d88d5fd035eb8a4e4bceee40645" translate="yes" xml:space="preserve">
          <source>If you use a Certificate Authority that browsers are not configured to trust by default, it is necessary to load the Certificate Authority certificate into the browser, enabling the browser to validate server certificates signed by that Certificate Authority. Doing so may be dangerous, since once loaded, the browser will accept all certificates signed by that Certificate Authority.</source>
          <target state="translated">ブラウザがデフォルトで信頼できるように設定されていない認証局を使っている場合は、 ブラウザに認証局の証明書を読み込ませて、 その認証局が署名したサーバ証明書を検証できるようにする必要があります。一度読み込まれると、ブラウザはその認証局が署名したすべての証明書を受け入れることになるので、 これは危険です。</target>
        </trans-unit>
        <trans-unit id="fd513d98e0ed784abfe3b9e27df96c04c1f9e912" translate="yes" xml:space="preserve">
          <source>If you use any &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; directives (i.e., using a hostname, or a domain name, rather than an IP address) then you will pay for two DNS lookups (a reverse, followed by a forward lookup to make sure that the reverse is not being spoofed). For best performance, therefore, use IP addresses, rather than names, when using these directives, if possible.</source>
          <target state="translated">&lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#allow&quot;&gt;Allow&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; または &lt;code&gt;&lt;code&gt;&lt;a href=&quot;../mod/mod_access_compat#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; from domain&lt;/code&gt; ディレクティブを使用する場合（つまり、IPアドレスではなく、ホスト名またはドメイン名を使用する場合）、2つのDNSルックアップ（逆の順、次に順方向のルックアップ）に対して料金がかかります。その逆はなりすましではないということです）。 したがって、最高のパフォーマンスを得るには、可能であれば、これらのディレクティブを使用するときに名前ではなくIPアドレスを使用してください。</target>
        </trans-unit>
        <trans-unit id="7a74196109337c98e4ee1572a14caa5fab551d08" translate="yes" xml:space="preserve">
          <source>If you use it in the global context, outside a specific MD, you can only specify one value, 'auto' or 'manual' as the default for all other MDs. See &lt;code&gt;&lt;a href=&quot;#mdomain&quot;&gt;MDomain&lt;/a&gt;&lt;/code&gt; for a description of these special values.</source>
          <target state="translated">特定のMD以外のグローバルコンテキストで使用する場合、他のすべてのMDのデフォルトとして指定できる値は、「auto」または「manual」の1つだけです。 これらの特別な値の説明については、 &lt;code&gt;&lt;a href=&quot;#mdomain&quot;&gt;MDomain&lt;/a&gt;&lt;/code&gt; を参照してください。</target>
        </trans-unit>
        <trans-unit id="88c025b6231497e4932fd9f7b420856fe29dd195" translate="yes" xml:space="preserve">
          <source>If you use some special exclusions dependent on, for example, the &lt;code&gt;User-Agent&lt;/code&gt; header, you must manually configure an addition to the &lt;code&gt;Vary&lt;/code&gt; header to alert proxies of the additional restrictions. For example, in a typical configuration where the addition of the &lt;code&gt;BROTLI_COMPRESS&lt;/code&gt; filter depends on the &lt;code&gt;User-Agent&lt;/code&gt;, you should add:</source>
          <target state="translated">たとえば、 &lt;code&gt;User-Agent&lt;/code&gt; ヘッダーに依存する特別な除外を使用する場合は、追加の制限をプロキシに通知するために、 &lt;code&gt;Vary&lt;/code&gt; ヘッダーへの追加を手動で構成する必要があります。 たとえば、 &lt;code&gt;BROTLI_COMPRESS&lt;/code&gt; フィルターの追加が &lt;code&gt;User-Agent&lt;/code&gt; に依存する一般的な構成では、 以下を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="2562309644518451fb4d2cb3ddef3e9f99813d79" translate="yes" xml:space="preserve">
          <source>If you use some special exclusions dependent on, for example, the &lt;code&gt;User-Agent&lt;/code&gt; header, you must manually configure an addition to the &lt;code&gt;Vary&lt;/code&gt; header to alert proxies of the additional restrictions. For example, in a typical configuration where the addition of the &lt;code&gt;DEFLATE&lt;/code&gt; filter depends on the &lt;code&gt;User-Agent&lt;/code&gt;, you should add:</source>
          <target state="translated">たとえば、 &lt;code&gt;User-Agent&lt;/code&gt; ヘッダーに依存する特別な除外を使用する場合は、追加の制限をプロキシに通知するために、 &lt;code&gt;Vary&lt;/code&gt; ヘッダーへの追加を手動で構成する必要があります。 たとえば、 &lt;code&gt;DEFLATE&lt;/code&gt; フィルターの追加が &lt;code&gt;User-Agent&lt;/code&gt; に依存する一般的な構成では、以下を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="4394d67d7bf0a4067d27578b2f0e2a09effcdaf3" translate="yes" xml:space="preserve">
          <source>If you use the first command without any special parameters except &lt;code&gt;-k install&lt;/code&gt;, the service will be called &lt;code&gt;Apache2.4&lt;/code&gt; and the configuration will be assumed to be &lt;code&gt;conf\httpd.conf&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;-k install&lt;/code&gt; 以外の特別なパラメーターなしで最初のコマンドを使用すると、サービスは &lt;code&gt;Apache2.4&lt;/code&gt; と呼ばれ、構成は &lt;code&gt;conf\httpd.conf&lt;/code&gt; あると想定されます。</target>
        </trans-unit>
        <trans-unit id="31159d323102ff98708bd6b179557a1171552651" translate="yes" xml:space="preserve">
          <source>If you want a core dump for debugging, you can use this directive to place it in a different location. This directive has no effect if your operating system is not configured to write core files to the working directory of the crashing processes.</source>
          <target state="translated">デバッグ用のコアダンプが必要な場合は、このディレクティブを使って別の場所に置くことができます。オペレーティングシステムがクラッシュしたプロセスの作業ディレクトリにコアファイルを 書き込むように設定されていない場合、このディレクティブは何の効果もありません。</target>
        </trans-unit>
        <trans-unit id="c4d9c3685d19deec3a67a5fb3baabaed53ce32f5" translate="yes" xml:space="preserve">
          <source>If you want httpd to handle IPv4 connections only, regardless of what your platform and APR will support, specify an IPv4 address on all &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directives, as in the following examples:</source>
          <target state="translated">プラットフォームとAPRが何をサポートするかに関係なく、httpdでIPv4接続のみを処理する場合は、次の例のように、すべての &lt;code&gt;&lt;a href=&quot;mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; ディレクティブにIPv4アドレスを指定します。</target>
        </trans-unit>
        <trans-unit id="7b849a94628d3b93f59f4b3abb13178f7f0f8e0b" translate="yes" xml:space="preserve">
          <source>If you want one particular server to get more of the load than the others, add it more times to the list.</source>
          <target state="translated">ある特定のサーバーに他のサーバーよりも多くの負荷がかかるようにしたい場合は、リストに追加する回数を増やしてください。</target>
        </trans-unit>
        <trans-unit id="376c39f06112d7ee94df440aa45a7ff0d4ce2088" translate="yes" xml:space="preserve">
          <source>If you want the content to be processed by more than one filter, their names have to be separated by semicolons. It's also possible to use one &lt;code&gt;AddOutputFilterByType&lt;/code&gt; directive for each of these filters.</source>
          <target state="translated">コンテンツを複数のフィルターで処理する場合は、それらの名前をセミコロンで区切る必要があります。 これらの各フィルターに対して1つの &lt;code&gt;AddOutputFilterByType&lt;/code&gt; ディレクティブを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="90fae2c31a2c6af13baad1f6a771e1e8a77fc9f2" translate="yes" xml:space="preserve">
          <source>If you want to allows users to modify the server configuration in their web space, they will need to use &lt;code&gt;.htaccess&lt;/code&gt; files to make these changes. Ensure that you have set &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; to a value sufficient for the directives that you want to permit the users to modify. See the &lt;a href=&quot;htaccess&quot;&gt;.htaccess tutorial&lt;/a&gt; for additional details on how this works.</source>
          <target state="translated">ユーザーがWebスペースでサーバー構成を変更できるようにする場合は、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルを使用してこれらの変更を行う必要があります。 &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; が、ユーザーに変更を許可するディレクティブに十分な値に設定されていることを確認してください。 これがどのように機能するかの詳細については、 &lt;a href=&quot;htaccess&quot;&gt;.htaccessチュートリアル&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="38eee170ed7bedbbb95b17d03b0875e3532f5feb" translate="yes" xml:space="preserve">
          <source>If you want to avoid worker sharing, sort your worker definitions by URL length, starting with the longest worker URLs. If you want to maximize worker sharing, use the reverse sort order. See also the related warning about ordering &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directives.</source>
          <target state="translated">ワーカーの共有を回避する場合は、ワーカー定義をURLの長さで並べ替えます。 ワーカーの共有を最大化する場合は、逆の並べ替え順序を使用します。 &lt;code&gt;&lt;a href=&quot;#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; ディレクティブの順序に関する関連警告も参照してください。</target>
        </trans-unit>
        <trans-unit id="e0548898c66646fbf53300f16c84bb32f90c9d78" translate="yes" xml:space="preserve">
          <source>If you want to build a DSO module instead of a statically linked use &lt;code&gt;&lt;a href=&quot;apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">静的にリンクする代わりにDSOモジュールを構築したい場合は、 &lt;code&gt;&lt;a href=&quot;apxs&quot;&gt;apxs&lt;/a&gt;&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="6202e10e1fe603fb30396cce85838fccd4eb4ecf" translate="yes" xml:space="preserve">
          <source>If you want to call your &lt;code&gt;.htaccess&lt;/code&gt; file something else, you can change the name of the file using the &lt;code&gt;&lt;a href=&quot;../mod/core#accessfilename&quot;&gt;AccessFileName&lt;/a&gt;&lt;/code&gt; directive. For example, if you would rather call the file &lt;code&gt;.config&lt;/code&gt; then you can put the following in your server configuration file:</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; ファイルを別の名前で呼び出したい場合は、 &lt;code&gt;&lt;a href=&quot;../mod/core#accessfilename&quot;&gt;AccessFileName&lt;/a&gt;&lt;/code&gt; ディレクティブを使用してファイルの名前を変更できます。 たとえば、ファイル &lt;code&gt;.config&lt;/code&gt; を呼び出す場合は、サーバー構成ファイルに次のように記述できます。</target>
        </trans-unit>
        <trans-unit id="362143d3336485f578cadc7533842c13c08a1b27" translate="yes" xml:space="preserve">
          <source>If you want to change that message to something else, you can do so with the &lt;code&gt;errmsg&lt;/code&gt; attribute to the &lt;code&gt;config&lt;/code&gt; function:</source>
          <target state="translated">そのメッセージを別のメッセージに変更したい場合は、 &lt;code&gt;config&lt;/code&gt; 関数の &lt;code&gt;errmsg&lt;/code&gt; 属性を使用して変更できます。</target>
        </trans-unit>
        <trans-unit id="e3bce406ccd1e0ba41281395763054ecab03d5a9" translate="yes" xml:space="preserve">
          <source>If you want to continue to use a MIME-type in your hyperlinks (&lt;em&gt;e.g.&lt;/em&gt;&lt;code&gt;foo.html&lt;/code&gt;) the language extension (including an encoding extension if there is one) must be on the right hand side of the MIME-type extension (&lt;em&gt;e.g.&lt;/em&gt;, &lt;code&gt;foo.html.en&lt;/code&gt;).</source>
          <target state="translated">ハイパーリンクでMIMEタイプを引き続き使用する場合（ &lt;em&gt;例：&lt;/em&gt; &lt;code&gt;foo.html&lt;/code&gt; ）、言語拡張機能（エンコーディング拡張機能がある場合はそれを含む）はMIMEタイプ拡張機能の右側にある必要があります（ &lt;em&gt;たとえば&lt;/em&gt; 、 &lt;code&gt;foo.html.en&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="aef1949a4d382ed389f32eac9b908a0901478d18" translate="yes" xml:space="preserve">
          <source>If you want to disable suEXEC you should kill and restart httpd after you have removed the &lt;code&gt;&lt;a href=&quot;programs/suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt; file.</source>
          <target state="translated">suEXECを無効にしたい場合は、 &lt;code&gt;&lt;a href=&quot;programs/suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt; ファイルを削除した後にhttpdを終了して再起動する必要があります。</target>
        </trans-unit>
        <trans-unit id="6b2744594692ae1b0eaf53baae07b998f544dba0" translate="yes" xml:space="preserve">
          <source>If you want to enable the suEXEC mechanism for the first time and an Apache HTTP Server is already running you must kill and restart httpd. Restarting it with a simple HUP or USR1 signal will not be enough.</source>
          <target state="translated">suEXEC 機構を初めて有効にしたい場合で、Apache HTTP サーバが既に動いている場合は、httpd を kill して再起動しなければなりません。単純な HUP や USR1 シグナルで再起動するだけでは十分ではありません。</target>
        </trans-unit>
        <trans-unit id="e215f195fc8209164557e75ed19f0d13418b9146" translate="yes" xml:space="preserve">
          <source>If you want to extract more accurate values from your logs, you can use the &lt;var&gt;type&lt;/var&gt; argument to specify the type of data left as a note for logging. &lt;var&gt;type&lt;/var&gt; can be one of:</source>
          <target state="translated">ログからより正確な値を抽出する場合は、 &lt;var&gt;type&lt;/var&gt; 引数を使用して、ログ記録のメモとして残すデータのタイプを指定できます。 &lt;var&gt;type&lt;/var&gt; は次のいずれかです。</target>
        </trans-unit>
        <trans-unit id="dfa89017607dc6e0675e22fd702f73f667c4d2e4" translate="yes" xml:space="preserve">
          <source>If you want to include the &lt;code&gt;.&lt;/code&gt; character in a &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; directive, but it clashes with a &lt;code&gt;%&lt;/code&gt; directive, you can work around the problem in the following way:</source>
          <target state="translated">を含める場合 &lt;code&gt;.&lt;/code&gt; &lt;code&gt;VirtualDocumentRoot&lt;/code&gt; ディレクティブの文字ですが、 &lt;code&gt;%&lt;/code&gt; ディレクティブと競合します。次の方法で問題を回避できます。</target>
        </trans-unit>
        <trans-unit id="73e81ab13718913b917a615a4c5cd9f796a30b3e" translate="yes" xml:space="preserve">
          <source>If you want to let more than one person in, you'll need to create a group file that associates group names with a list of users in that group. The format of this file is pretty simple, and you can create it with your favorite editor. The contents of the file will look like this:</source>
          <target state="translated">複数の人を入れたい場合は、グループ名とグループ内のユーザーのリストを関連付けたグループファイルを作成する必要があります。このファイルの形式は非常にシンプルで、お気に入りのエディタで作成することができます。ファイルの内容は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="34056a9490183471e5da919834f4e2a82689e62d" translate="yes" xml:space="preserve">
          <source>If you want to log multiple virtual hosts to the same log file, you may want to split up the log files afterwards in order to run statistical analysis of the various virtual hosts. This can be accomplished in the following manner.</source>
          <target state="translated">複数のバーチャルホストを同じログファイルに記録する場合、さまざまなバーチャルホストの統計分析を実行するために、後からログファイルを分割したい場合があります。これは以下の方法で実現できます。</target>
        </trans-unit>
        <trans-unit id="9f3a270222f1f7bc3459028ca1c3b1399b4127b8" translate="yes" xml:space="preserve">
          <source>If you want to look how a particular expression is handled, you can recompile &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;-DDEBUG_INCLUDE&lt;/code&gt; compiler option. This inserts for every parsed expression tokenizer information, the parse tree and how it is evaluated into the output sent to the client.</source>
          <target state="translated">特定の式の処理方法を確認する場合は、 &lt;code&gt;-DDEBUG_INCLUDE&lt;/code&gt; コンパイラオプションを使用して &lt;code&gt;&lt;a href=&quot;mod_include&quot;&gt;mod_include&lt;/a&gt;&lt;/code&gt; を再コンパイルできます。 これは、解析されたすべての式トークナイザー情報、解析ツリー、およびそれがクライアントに送信される出力にどのように評価されるかを挿入します。</target>
        </trans-unit>
        <trans-unit id="20157084947f731db2ee1b452f73294c013b14e2" translate="yes" xml:space="preserve">
          <source>If you want to restrict the compression to particular MIME types in general, you may use the &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; directive. Here is an example of enabling compression only for the html files of the Apache documentation:</source>
          <target state="translated">一般に特定のMIMEタイプに圧縮を制限したい場合は、 &lt;code&gt;&lt;a href=&quot;mod_filter#addoutputfilterbytype&quot;&gt;AddOutputFilterByType&lt;/a&gt;&lt;/code&gt; ディレクティブを使用できます。 Apacheドキュメントのhtmlファイルに対してのみ圧縮を有効にする例を次に示します。</target>
        </trans-unit>
        <trans-unit id="9087584288dd582cb9a8fb0426892004b016a6e6" translate="yes" xml:space="preserve">
          <source>If you want to specify more than one LDAP URL that Apache should try in turn, the syntax is:</source>
          <target state="translated">Apache が順番に試みるべき複数の LDAP URL を指定したい場合は、構文は次のようになります。</target>
        </trans-unit>
        <trans-unit id="3bde7f7c2478beff1c60fd4be4b4be351b78231f" translate="yes" xml:space="preserve">
          <source>If you want to understand all the details, then you can come back to this page.</source>
          <target state="translated">全ての詳細を理解したいのであれば、このページに戻ってきてください。</target>
        </trans-unit>
        <trans-unit id="e3957a75f21d2a62ec387710a1ab29f1908fc34e" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;code&gt;preload&lt;/code&gt; links without triggering a PUSH, you can use the &lt;code&gt;nopush&lt;/code&gt; parameter, as in</source>
          <target state="translated">PUSHをトリガーせずに &lt;code&gt;preload&lt;/code&gt; リンクを使用する場合は、次のように &lt;code&gt;nopush&lt;/code&gt; パラメータを使用できます。</target>
        </trans-unit>
        <trans-unit id="45e151d666e97d53d0bebd328e3e4927f33dd2e4" translate="yes" xml:space="preserve">
          <source>If you want to use a value within another string, it is useful to surround the parameter in braces, to avoid confusion:</source>
          <target state="translated">別の文字列の中で値を使用したい場合は、混乱を避けるためにパラメータを中括弧で囲むと便利です。</target>
        </trans-unit>
        <trans-unit id="ce442c59e0e711d95feac5edeb432920d4440fc5" translate="yes" xml:space="preserve">
          <source>If you want to use double quotes within this text, you have to write them as &lt;code&gt;&amp;amp;quot;&lt;/code&gt;.</source>
          <target state="translated">このテキスト内で二重引用符を使用する場合は、 &lt;code&gt;&amp;amp;quot;&lt;/code&gt; のように記述する必要があります。 。</target>
        </trans-unit>
        <trans-unit id="347d7f495fadd4c5ece7b26429346a74dfb59a8b" translate="yes" xml:space="preserve">
          <source>If you want your server to continue running after a system reboot, you should add a call to &lt;code&gt;&lt;a href=&quot;programs/apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; to your system startup files (typically &lt;code&gt;rc.local&lt;/code&gt; or a file in an &lt;code&gt;rc.N&lt;/code&gt; directory). This will start Apache as root. Before doing this ensure that your server is properly configured for security and access restrictions.</source>
          <target state="translated">システムの再起動後もサーバーを稼働させたい場合は、 &lt;code&gt;&lt;a href=&quot;programs/apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; の呼び出しをシステムの起動ファイル（通常は &lt;code&gt;rc.local&lt;/code&gt; または &lt;code&gt;rc.N&lt;/code&gt; ディレクトリ内のファイル）に追加する必要があります。 これにより、Apacheがrootとして起動します。 これを行う前に、サーバーがセキュリティとアクセス制限に対して適切に構成されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="996a5fd09cde124f505165296338153a631e9c5b" translate="yes" xml:space="preserve">
          <source>If you wanted to do this generically for all domain names - that is, if you want to redirect &lt;strong&gt;example.com&lt;/strong&gt; to &lt;strong&gt;www.example.com&lt;/strong&gt; for all possible values of &lt;strong&gt;example.com&lt;/strong&gt;, you could use the following recipe:</source>
          <target state="translated">これをすべてのドメイン名に対して一般的に行いたい場合、つまり、 &lt;strong&gt;example.comの&lt;/strong&gt;すべての可能な値について&lt;strong&gt;example.com&lt;/strong&gt;を&lt;strong&gt;www.example.com&lt;/strong&gt;にリダイレクトする場合は、次のレシピを使用できます。</target>
        </trans-unit>
        <trans-unit id="260a4a8a4a69e9a3d7f1617bde97927eabc82594" translate="yes" xml:space="preserve">
          <source>If you wanted to have one of the servers more likely to be chosen (for example, if one of the server has more memory than the others, and so can handle more requests) simply list it more times in the map file.</source>
          <target state="translated">より多くのサーバを選択したい場合 (例えば、サーバの 1 つが他のサーバよりもメモリが多く、より多くのリクエストを処理できる場合)は、マップファイルにそのサーバをより多くリストアップするだけです。</target>
        </trans-unit>
        <trans-unit id="fbebe90b78fb22d5372ab5a373a80418254917a8" translate="yes" xml:space="preserve">
          <source>If you wish designate a &lt;code&gt;cgi-bin&lt;/code&gt; subdirectory of a user's directory where everything will be treated as a CGI program, you can use the following.</source>
          <target state="translated">すべてがCGIプログラムとして扱われるユーザーのディレクトリの &lt;code&gt;cgi-bin&lt;/code&gt; サブディレクトリを指定したい場合は、以下を使用できます。</target>
        </trans-unit>
        <trans-unit id="d2d546bf2b02aaaf69651784b7692dab740a37c6" translate="yes" xml:space="preserve">
          <source>If you wish to have your module engage a handler, you need only to set &lt;code&gt;r-&amp;gt;handler&lt;/code&gt; to the name of the handler at any time prior to the &lt;code&gt;invoke_handler&lt;/code&gt; stage of the request. Handlers are implemented as they were before, albeit using the handler name instead of a content type. While it is not necessary, the naming convention for handlers is to use a dash-separated word, with no slashes, so as to not invade the media type name-space.</source>
          <target state="translated">モジュールでハンドラーを使用する場合は、リクエストの &lt;code&gt;invoke_handler&lt;/code&gt; ステージの前に、 &lt;code&gt;r-&amp;gt;handler&lt;/code&gt; をハンドラーの名前に設定するだけで済みます。 ハンドラーは、コンテンツタイプの代わりにハンドラー名を使用しますが、以前と同じように実装されます。 必須ではありませんが、ハンドラーの命名規則では、メディアタイプの名前空間に侵入しないように、スラッシュなしのダッシュで区切られた単語を使用します。</target>
        </trans-unit>
        <trans-unit id="bd813810359a54b7b3085b40db04ee40bbb65f48" translate="yes" xml:space="preserve">
          <source>If you wish to match against the full URL-path in a per-directory (htaccess) RewriteRule, use the &lt;code&gt;%{REQUEST_URI}&lt;/code&gt; variable in a &lt;code&gt;&lt;a href=&quot;#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ディレクトリごとの（htaccess）RewriteRuleの完全なURLパスと照合する場合は、RewriteCondで &lt;code&gt;%{REQUEST_URI}&lt;/code&gt; 変数を使用し &lt;code&gt;&lt;a href=&quot;#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b71b092b4dc15b4895fbce619b07b0b924ce8ac8" translate="yes" xml:space="preserve">
          <source>If you wish to match against the hostname, port, or query string, use a &lt;code&gt;&lt;a href=&quot;#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; with the &lt;code&gt;%{HTTP_HOST}&lt;/code&gt;, &lt;code&gt;%{SERVER_PORT}&lt;/code&gt;, or &lt;code&gt;%{QUERY_STRING}&lt;/code&gt; variables respectively.</source>
          <target state="translated">ホスト名、ポート、またはクエリ文字列と &lt;code&gt;&lt;a href=&quot;#rewritecond&quot;&gt;RewriteCond&lt;/a&gt;&lt;/code&gt; する場合は、 RewriteCondをそれぞれ &lt;code&gt;%{HTTP_HOST}&lt;/code&gt; 、 &lt;code&gt;%{SERVER_PORT}&lt;/code&gt; 、または &lt;code&gt;%{QUERY_STRING}&lt;/code&gt; 変数とともに使用します。</target>
        </trans-unit>
        <trans-unit id="2711c7664e764e449edc8dadc43cc042148cab44" translate="yes" xml:space="preserve">
          <source>If you wish to restrict access to portions of your site based on the host address of your visitors, this is most easily done using &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">訪問者のホストアドレスに基づいてサイトの一部へのアクセスを制限したい場合、これは &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_host&quot;&gt;mod_authz_host&lt;/a&gt;&lt;/code&gt; を使用して最も簡単に実行できます 。</target>
        </trans-unit>
        <trans-unit id="73a9259b2ae0161f8cc7d662b6fe892abbe8e862" translate="yes" xml:space="preserve">
          <source>If you would prefer only the last dot-separated part of the filename to be mapped to a particular piece of meta-data, then do not use the &lt;code&gt;Add*&lt;/code&gt; directives. For example, if you wish to have the file &lt;code&gt;foo.html.cgi&lt;/code&gt; processed as a CGI script, but not the file &lt;code&gt;bar.cgi.html&lt;/code&gt;, then instead of using &lt;code&gt;AddHandler cgi-script .cgi&lt;/code&gt;, use</source>
          <target state="translated">ファイル名の最後のドットで区切られた部分のみを特定のメタデータにマッピングする場合は、 &lt;code&gt;Add*&lt;/code&gt; ディレクティブを使用しないでください 。 たとえば、ファイル &lt;code&gt;foo.html.cgi&lt;/code&gt; を CGIスクリプトとして処理し、ファイルbar.cgi.htmlとしては処理しない場合は、 &lt;code&gt;AddHandler cgi-script .cgi&lt;/code&gt; を使用する代わりに 、</target>
        </trans-unit>
        <trans-unit id="fc46b7a58b277c6e4b60d9ba448686ebaa7bfa79" translate="yes" xml:space="preserve">
          <source>If you're completely new to the Apache HTTP Server, or even to running a website at all, you might not know where to start, or what questions to ask. This document walks you through the basics.</source>
          <target state="translated">Apache HTTP サーバに全く慣れていない場合、あるいはウェブサイトの運用に全く慣れていない場合、 どこから始めればいいのか、何を質問すればいいのかわからないかもしれません。このドキュメントでは、基本的なことを説明します。</target>
        </trans-unit>
        <trans-unit id="b206cf96ccf5c8d21c9160fc80cbacb1adb92f56" translate="yes" xml:space="preserve">
          <source>If you're using the &lt;code&gt;&lt;a href=&quot;#proxyblock&quot;&gt;ProxyBlock&lt;/a&gt;&lt;/code&gt; directive, hostnames' IP addresses are looked up and cached during startup for later match test. This may take a few seconds (or more) depending on the speed with which the hostname lookups occur.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#proxyblock&quot;&gt;ProxyBlock&lt;/a&gt;&lt;/code&gt; ディレクティブを使用している場合、ホスト名のIPアドレスは、後で一致テストのために起動時に検索およびキャッシュされます。 ホスト名の検索が行われる速度によっては、これに数秒（またはそれ以上）かかる場合があります。</target>
        </trans-unit>
        <trans-unit id="a811b167e821c5b82064a100351e498b62d16fa0" translate="yes" xml:space="preserve">
          <source>If you're writing CGI programs in C, there are a variety of options. One of these is the &lt;code&gt;CGIC&lt;/code&gt; library, from &lt;a href=&quot;http://www.boutell.com/cgic/&quot;&gt;http://www.boutell.com/cgic/&lt;/a&gt;.</source>
          <target state="translated">CでCGIプログラムを作成している場合は、さまざまなオプションがあります。 これらの1つは、 &lt;a href=&quot;http://www.boutell.com/cgic/&quot;&gt;http:&lt;/a&gt; &lt;code&gt;CGIC&lt;/code&gt; ライブラリです。</target>
        </trans-unit>
        <trans-unit id="00f89c9018d1ff69f800d63b79201169e2e77a49" translate="yes" xml:space="preserve">
          <source>If you're writing CGI programs in Perl, modules are available on &lt;a href=&quot;http://www.cpan.org/&quot;&gt;CPAN&lt;/a&gt;. The most popular module for this purpose is &lt;code&gt;CGI.pm&lt;/code&gt;. You might also consider &lt;code&gt;CGI::Lite&lt;/code&gt;, which implements a minimal set of functionality, which is all you need in most programs.</source>
          <target state="translated">PerlでCGIプログラムを作成している場合、モジュールは&lt;a href=&quot;http://www.cpan.org/&quot;&gt;CPANで&lt;/a&gt;入手できます。 この目的で最も人気のあるモジュールは &lt;code&gt;CGI.pm&lt;/code&gt; です。 また、ほとんどのプログラムで必要な最小限の機能セットを実装する &lt;code&gt;CGI::Lite&lt;/code&gt; 検討することもできます。</target>
        </trans-unit>
        <trans-unit id="24269a61c4de8d7176ff17ba02a584802c7ddc84" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;AllowOverride&lt;/code&gt; setting is &lt;code&gt;All&lt;/code&gt;, add every directive listed on this page to the list.</source>
          <target state="translated">&lt;code&gt;AllowOverride&lt;/code&gt; 設定が &lt;code&gt;All&lt;/code&gt; の場合、このページにリストされているすべてのディレクティブをリストに追加します。</target>
        </trans-unit>
        <trans-unit id="2d615ff2bc521afcc7573cbc7d8da54f87f73b96" translate="yes" xml:space="preserve">
          <source>If your &lt;code&gt;AllowOverride&lt;/code&gt; setting is &lt;code&gt;None&lt;/code&gt;, you're done. Only the directives in the &lt;code&gt;AllowOverrideList&lt;/code&gt; (if any) will be allowed.</source>
          <target state="translated">&lt;code&gt;AllowOverride&lt;/code&gt; 設定が &lt;code&gt;None&lt;/code&gt; の場合、これで完了です。 &lt;code&gt;AllowOverrideList&lt;/code&gt; （存在する場合）のディレクティブのみが許可されます。</target>
        </trans-unit>
        <trans-unit id="7e68a8943758db523a9a22b55295484148f43c0a" translate="yes" xml:space="preserve">
          <source>If your Apache httpd dumps its core, please attach a stack-frame ``backtrace'' (see &lt;a href=&quot;#backtrace&quot;&gt;below&lt;/a&gt; for information on how to get this). This information is required in order to find a reason for your core dump.</source>
          <target state="translated">Apache httpdがコアをダンプする場合は、スタックフレームの「バックトレース」をアタッチしてください（これを取得する方法については、 &lt;a href=&quot;#backtrace&quot;&gt;以下&lt;/a&gt;を参照してください）。 この情報は、コアダンプの理由を見つけるために必要です。</target>
        </trans-unit>
        <trans-unit id="53b86e00d02a2e114080a2830f8d4e34b349a143" translate="yes" xml:space="preserve">
          <source>If your Apache installation uses non-standard paths, you will need to edit the &lt;code&gt;apachectl&lt;/code&gt; script to set the appropriate paths to the &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; binary. You can also specify any necessary &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; command line arguments. See the comments in the script for details.</source>
          <target state="translated">Apacheのインストールで非標準のパスを使用している場合は、 &lt;code&gt;apachectl&lt;/code&gt; スクリプトを編集して、 &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; バイナリへの適切なパスを設定する必要があります。 必要な &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; コマンドライン引数を指定することもできます。 詳細については、スクリプト内のコメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="1f1347626dd04a93ba22e8078997b0f3ff6e6484" translate="yes" xml:space="preserve">
          <source>If your CGI program depends on non-standard &lt;a href=&quot;#env&quot;&gt;environment variables&lt;/a&gt;, you will need to assure that those variables are passed by Apache.</source>
          <target state="translated">CGIプログラムが非標準の&lt;a href=&quot;#env&quot;&gt;環境変数&lt;/a&gt;に依存している場合は、それらの変数がApacheによって渡されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="97f0d022a88fa305704e2f36824ae8980380e55d" translate="yes" xml:space="preserve">
          <source>If your Java-based client aborts with exceptions such as &lt;code&gt;java.lang.RuntimeException: Could not generate DH keypair&lt;/code&gt; and &lt;code&gt;java.security.InvalidAlgorithmParameterException: Prime size must be multiple of 64, and can only range from 512 to 1024 (inclusive)&lt;/code&gt;, and httpd logs &lt;code&gt;tlsv1 alert internal error (SSL alert number 80)&lt;/code&gt; (at &lt;code&gt;&lt;a href=&quot;../mod/core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt;&lt;code&gt;info&lt;/code&gt; or higher), you can either rearrange mod_ssl's cipher list with &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt; (possibly in conjunction with &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslhonorcipherorder&quot;&gt;SSLHonorCipherOrder&lt;/a&gt;&lt;/code&gt;), or you can use custom DH parameters with a 1024-bit prime, which will always have precedence over any of the built-in DH parameters.</source>
          <target state="translated">Javaベースのクライアントが &lt;code&gt;java.lang.RuntimeException: Could not generate DH keypair&lt;/code&gt; などの例外で異常終了した場合：DHキーペアと &lt;code&gt;java.security.InvalidAlgorithmParameterException: Prime size must be multiple of 64, and can only range from 512 to 1024 (inclusive)&lt;/code&gt; 生成できませんでした ：素数サイズは64の倍数である必要があり、512から1024（両端を含む）までの範囲である必要があります。 httpdは &lt;code&gt;tlsv1 alert internal error (SSL alert number 80)&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;../mod/core#loglevel&quot;&gt;LogLevel&lt;/a&gt;&lt;/code&gt; &lt;code&gt;info&lt;/code&gt; 以上）をログに記録します。mod_sslの暗号リストを &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt; で （場合によっては &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslhonorcipherorder&quot;&gt;SSLHonorCipherOrder&lt;/a&gt;&lt;/code&gt; と組み合わせて）再配置するか、1024ビットプライムでカスタムDHパラメータを使用できます。常に組み込みのDHパラメータよりも優先されます。</target>
        </trans-unit>
        <trans-unit id="fc4c34a6fd2e24211e653bafb627e0042a913b77" translate="yes" xml:space="preserve">
          <source>If your OS supports a &lt;code&gt;sendfile(2)&lt;/code&gt; system call, make sure you install the release and/or patches needed to enable it. (With Linux, for example, this means using Linux 2.4 or later. For early releases of Solaris 8, you may need to apply a patch.) On systems where it is available, &lt;code&gt;sendfile&lt;/code&gt; enables Apache 2 to deliver static content faster and with lower CPU utilization.</source>
          <target state="translated">OSが &lt;code&gt;sendfile(2)&lt;/code&gt; システムコールをサポートしている場合は、それを有効にするために必要なリリースやパッチをインストールしてください。 （たとえば、Linuxでは、これはLinux 2.4以降を使用することを意味します。Solaris8の初期のリリースでは、パッチを適用する必要がある場合があります。）使用可能なシステムでは、 &lt;code&gt;sendfile&lt;/code&gt; を使用すると、Apache 2が静的コンテンツをより高速かつ低CPU使用率。</target>
        </trans-unit>
        <trans-unit id="53b0a4b5ebe8c36d6e0c7a8bd8ec503cf72ea771" translate="yes" xml:space="preserve">
          <source>If your application supports the generic &lt;code&gt;AUTHORIZER&lt;/code&gt; role (authentication and authorizer in one invocation), define a single provider as follows:</source>
          <target state="translated">アプリケーションが一般的な &lt;code&gt;AUTHORIZER&lt;/code&gt; ロール（1回の呼び出しでの認証と承認者）をサポートしている場合は、次のように単一のプロバイダーを定義します。</target>
        </trans-unit>
        <trans-unit id="4fc3e8e936ab86983908b760ff3feaf69fbc1469" translate="yes" xml:space="preserve">
          <source>If your application supports the separate authentication and authorization roles (&lt;code&gt;AUTHENTICATOR&lt;/code&gt; and &lt;code&gt;AUTHORIZER&lt;/code&gt;), define separate providers as follows, even if they map to the same application:</source>
          <target state="translated">アプリケーションが個別の認証と承認の役割（ &lt;code&gt;AUTHENTICATOR&lt;/code&gt; と &lt;code&gt;AUTHORIZER&lt;/code&gt; ）をサポートしている場合は、同じアプリケーションにマップされている場合でも、次のように個別のプロバイダーを定義します。</target>
        </trans-unit>
        <trans-unit id="58a7afef16c44016ebf135d588e800bf80f4388a" translate="yes" xml:space="preserve">
          <source>If your data really needs to be secure, consider using &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; in addition to any authentication.</source>
          <target state="translated">データを本当に安全にする必要がある場合は、認証に加えて &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; の使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="f016fb1534dd33b0141c3239104e98c15274e871" translate="yes" xml:space="preserve">
          <source>If your decision about compression depends on other information than request headers (&lt;em&gt;e.g.&lt;/em&gt; HTTP version), you have to set the &lt;code&gt;Vary&lt;/code&gt; header to the value &lt;code&gt;*&lt;/code&gt;. This prevents compliant proxies from caching entirely.</source>
          <target state="translated">圧縮に関する決定が要求ヘッダー以外の情報（HTTPバージョンなど）に依存している場合は、 &lt;code&gt;Vary&lt;/code&gt; ヘッダーを値 &lt;code&gt;*&lt;/code&gt; に設定する必要があります。 これにより、準拠プロキシが完全にキャッシュされるのを防ぎます。</target>
        </trans-unit>
        <trans-unit id="3c667f75d9ac1b0501b1065ff426aa86350a6071" translate="yes" xml:space="preserve">
          <source>If your module needs additional C compiler flags, linker flags or libraries, add them to CFLAGS, LDFLAGS and LIBS accordingly. See other &lt;code&gt;config.m4&lt;/code&gt; files in modules directory for examples.</source>
          <target state="translated">モジュールに追加のCコンパイラフラグ、リンカーフラグ、またはライブラリが必要な場合は、それらをCFLAGS、LDFLAGS、およびLIBSに適宜追加します。 例については、モジュールディレクトリ内の他の &lt;code&gt;config.m4&lt;/code&gt; ファイルを参照してください。</target>
        </trans-unit>
        <trans-unit id="7fad64125f88d128c97c214309d49f0610ad568f" translate="yes" xml:space="preserve">
          <source>If your platform supports it and you want httpd to handle IPv4 and IPv6 connections on separate sockets (i.e., to disable IPv4-mapped addresses), specify the &lt;code&gt;--disable-v4-mapped&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; option. &lt;code&gt;--disable-v4-mapped&lt;/code&gt; is the default on FreeBSD, NetBSD, and OpenBSD.</source>
          <target state="translated">プラットフォームがそれをサポートしていて、httpdが別々のソケットでIPv4およびIPv6接続を処理する（つまり、IPv4マッピングアドレスを無効にする）場合は、 &lt;code&gt;--disable-v4-mapped&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; オプションを指定します 。 &lt;code&gt;--disable-v4-mapped&lt;/code&gt; は、FreeBSD、NetBSD、およびOpenBSDのデフォルトです。</target>
        </trans-unit>
        <trans-unit id="7fe354e7f422b3332f9cc0c8aa6badc84e51bc71" translate="yes" xml:space="preserve">
          <source>If your server doesn't have to perform DNS for any other reason then you might be able to get away with running httpd with the &lt;code&gt;HOSTRESORDER&lt;/code&gt; environment variable set to &quot;local&quot;. This all depends on what OS and resolver libraries you are using. It also affects CGIs unless you use &lt;code&gt;&lt;a href=&quot;mod/mod_env&quot;&gt;mod_env&lt;/a&gt;&lt;/code&gt; to control the environment. It's best to consult the man pages or FAQs for your OS.</source>
          <target state="translated">サーバーが他の理由でDNSを実行する必要がない場合は、 &lt;code&gt;HOSTRESORDER&lt;/code&gt; 環境変数を「ローカル」に設定してhttpdを実行することで問題を回避できる可能性があります。 これはすべて、使用しているOSとリゾルバライブラリに依存します。 &lt;code&gt;&lt;a href=&quot;mod/mod_env&quot;&gt;mod_env&lt;/a&gt;&lt;/code&gt; を使用して環境を制御しない限り、CGIにも影響します。 OSのマニュアルページまたはFAQを参照することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="7903af2a1cd91ecfd86cd07130149bf010d52d32" translate="yes" xml:space="preserve">
          <source>If your setup can handle it, configuring &lt;code&gt;&lt;a href=&quot;../mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; mpm is nowadays the best one (if supported on your platform).</source>
          <target state="translated">セットアップがそれを処理できる場合、 &lt;code&gt;&lt;a href=&quot;../mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; mpmを構成することが今日では最良の方法です（プラットフォームでサポートされている場合）。</target>
        </trans-unit>
        <trans-unit id="80ea3b68208be9cbe3afd4e10f55d23bb793fe5a" translate="yes" xml:space="preserve">
          <source>If your site needs content negotiation, consider using &lt;code&gt;type-map&lt;/code&gt; files, rather than the &lt;code&gt;Options MultiViews&lt;/code&gt; directive to accomplish the negotiation. See the &lt;a href=&quot;../content-negotiation&quot;&gt;Content Negotiation&lt;/a&gt; documentation for a full discussion of the methods of negotiation, and instructions for creating &lt;code&gt;type-map&lt;/code&gt; files.</source>
          <target state="translated">サイトでコンテンツのネゴシエーションが必要な場合は、 &lt;code&gt;Options MultiViews&lt;/code&gt; ディレクティブではなく、 &lt;code&gt;type-map&lt;/code&gt; ファイルを使用してネゴシエーションを行うことを検討してください。 &lt;a href=&quot;../content-negotiation&quot;&gt;ネゴシエーション&lt;/a&gt;の方法と &lt;code&gt;type-map&lt;/code&gt; ファイルの作成手順の詳細については、 コンテンツネゴシエーションのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="6bc36d332c17c745054778c304a873983d341a79" translate="yes" xml:space="preserve">
          <source>If your system is POSIX compliant or if it implements the &lt;code&gt;pthread_mutexattr_setrobust_np()&lt;/code&gt; function, you may be able to use the &lt;code&gt;pthread&lt;/code&gt; option safely.</source>
          <target state="translated">システムがPOSIX準拠であるか、または &lt;code&gt;pthread_mutexattr_setrobust_np()&lt;/code&gt; 関数を実装している場合は、 &lt;code&gt;pthread&lt;/code&gt; オプションを安全に使用できる場合があります。</target>
        </trans-unit>
        <trans-unit id="272a7d775c43eea6bab32e724579041769798406" translate="yes" xml:space="preserve">
          <source>If, after scanning the directory,</source>
          <target state="translated">もし、ディレクトリをスキャンした後に</target>
        </trans-unit>
        <trans-unit id="c4d8b51bc5831e957dd3678966f1abc5661de3d1" translate="yes" xml:space="preserve">
          <source>If, for example, you are permitting file upload to a particular location and wish to limit the size of the uploaded file to 100K, you might use the following directive:</source>
          <target state="translated">例えば、特定の場所へのファイルアップロードを許可していて、アップロードされるファイルのサイズを 100K までに制限したい場合は、以下のようなディレクティブを使うことができます。</target>
        </trans-unit>
        <trans-unit id="740f777c11f223037c39b8f8896ad5803747da3f" translate="yes" xml:space="preserve">
          <source>If, for example, you have an &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; for /icons, and have a &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; pointing there, you should use the [PT] flag to ensure that the &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; is evaluated.</source>
          <target state="translated">たとえば、/ iconsの &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; があり、そこに &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; が指定されている場合は、[PT]フラグを使用して、 &lt;code&gt;&lt;a href=&quot;../mod/mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; が確実に評価されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="f27fe1c360a69d371ba22dbd88b4718c27dbf38f" translate="yes" xml:space="preserve">
          <source>If, for example, your configuration permits access to a resource by IP address you should ensure that this content is not cached. You can do this by using the &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachedisable&quot;&gt;CacheDisable&lt;/a&gt;&lt;/code&gt; directive, or &lt;code&gt;&lt;a href=&quot;mod/mod_expires&quot;&gt;mod_expires&lt;/a&gt;&lt;/code&gt;. Left unchecked, &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; - very much like a reverse proxy - would cache the content when served and then serve it to any client, on any IP address.</source>
          <target state="translated">たとえば、構成でIPアドレスによるリソースへのアクセスが許可されている場合は、このコンテンツがキャッシュされないようにする必要があります。 これを行うには、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cachedisable&quot;&gt;CacheDisable&lt;/a&gt;&lt;/code&gt; ディレクティブ、または &lt;code&gt;&lt;a href=&quot;mod/mod_expires&quot;&gt;mod_expires&lt;/a&gt;&lt;/code&gt; を使用します。 オフのままにすると、 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; はリバースプロキシと非常によく似ています。コンテンツが提供されるとキャッシュされ、任意のクライアントの任意のIPアドレスに提供されます。</target>
        </trans-unit>
        <trans-unit id="da1954b377b095cbe47b9127714200ae264dfdea" translate="yes" xml:space="preserve">
          <source>If, for whatever reason, you still want to use &lt;code&gt;mod_rewrite&lt;/code&gt; - if, for example, you need this to work with a larger set of RewriteRules - you might use one of the recipes below.</source>
          <target state="translated">何らかの理由で &lt;code&gt;mod_rewrite&lt;/code&gt; を使用したい場合-たとえば、RewriteRulesのより大きなセットを操作するためにこれが必要な場合-以下のレシピのいずれかを使用できます。</target>
        </trans-unit>
        <trans-unit id="594e3b4d5d088cfa164a276546997bbe62a44b43" translate="yes" xml:space="preserve">
          <source>If, on the other hand, you are getting server errors when trying to access documents, check your httpd error log. It will likely tell you that the directive used in your &lt;code&gt;.htaccess&lt;/code&gt; file is not permitted.</source>
          <target state="translated">一方、ドキュメントにアクセスしようとしたときにサーバーエラーが発生する場合は、httpdエラーログを確認してください。 &lt;code&gt;.htaccess&lt;/code&gt; ファイルで使用されているディレクティブが許可されていないことを示している可能性があります。</target>
        </trans-unit>
        <trans-unit id="4c079cb294b28ae3d6521df9d0afca15dc4194e6" translate="yes" xml:space="preserve">
          <source>If, on the other hand, you have modules statically linked into your Apache binary, you will need to recompile Apache in order to remove unwanted modules.</source>
          <target state="translated">一方、Apache のバイナリに静的にリンクされたモジュールがある場合は、 不要なモジュールを削除するために Apache を再コンパイルする必要があります。</target>
        </trans-unit>
        <trans-unit id="bc757319fe7516e179e46b1bf6a424f52effeb7f" translate="yes" xml:space="preserve">
          <source>If, on the other hand, you wish to pass the requested URI as a query string argument to index.php, you can replace that RewriteRule with:</source>
          <target state="translated">一方、要求された URI をクエリ文字列の引数として index.php に渡したい場合は、その RewriteRule を次のように置き換えます。</target>
        </trans-unit>
        <trans-unit id="e7019a5d19f2e3544475f5a6ba0308a3520b4ab7" translate="yes" xml:space="preserve">
          <source>Ignore HTML links (pass through unchanged)</source>
          <target state="translated">HTMLリンクを無視する(変更せずに通過する)</target>
        </trans-unit>
        <trans-unit id="4018ed5bbb53942b79e93f12905678f54417f934" translate="yes" xml:space="preserve">
          <source>Ignore defined session identifiers encoded in the URL when caching</source>
          <target state="translated">キャッシング時にURLでエンコードされた定義されたセッション識別子を無視する</target>
        </trans-unit>
        <trans-unit id="0e5b4946ddc33923edcd604c412398c40477edf6" translate="yes" xml:space="preserve">
          <source>Ignore query string when caching</source>
          <target state="translated">キャッシュ時にクエリ文字列を無視する</target>
        </trans-unit>
        <trans-unit id="b7ee52b078bceeb16f6400461ba53be634829765" translate="yes" xml:space="preserve">
          <source>Ignore request to not serve cached content to client</source>
          <target state="translated">クライアントにキャッシュされたコンテンツを提供しないようにするリクエストを無視する</target>
        </trans-unit>
        <trans-unit id="61c76f80d83d7ee5aac9d19ba5bfec5adf0b7342" translate="yes" xml:space="preserve">
          <source>Ignore scripting events (pass through unchanged)</source>
          <target state="translated">スクリプトイベントを無視する(変更せずに通過)</target>
        </trans-unit>
        <trans-unit id="a2691f1c22d27202887f403c05b14027b9490d2f" translate="yes" xml:space="preserve">
          <source>Ignore the fact that a response has no Last Modified header.</source>
          <target state="translated">レスポンスに Last Modified ヘッダがないという事実を無視します。</target>
        </trans-unit>
        <trans-unit id="36099609b63a93090d2faa1dbdb6a9d2ed799b28" translate="yes" xml:space="preserve">
          <source>IgnoreCase</source>
          <target state="translated">IgnoreCase</target>
        </trans-unit>
        <trans-unit id="c297c37a6db3c996a6588a64e3680ee260005e3f" translate="yes" xml:space="preserve">
          <source>IgnoreClient</source>
          <target state="translated">IgnoreClient</target>
        </trans-unit>
        <trans-unit id="f52483c8aa11d319d29e4cde2e137487fe62a4df" translate="yes" xml:space="preserve">
          <source>Illustrates the Apache module API</source>
          <target state="translated">Apache モジュール API の説明</target>
        </trans-unit>
        <trans-unit id="39f0fa8b43b020120d0cde0bca2a60bb843701fc" translate="yes" xml:space="preserve">
          <source>Image Downsampling</source>
          <target state="translated">画像のダウンサンプリング</target>
        </trans-unit>
        <trans-unit id="e82b84fd40366936ed8c8771058ebcfef3dfa07f" translate="yes" xml:space="preserve">
          <source>Image downsampling service</source>
          <target state="translated">画像ダウンサンプリングサービス</target>
        </trans-unit>
        <trans-unit id="5bb3ad26e2fda3cd343bd1dc49196d9e2b80c785" translate="yes" xml:space="preserve">
          <source>Image processing</source>
          <target state="translated">画像処理</target>
        </trans-unit>
        <trans-unit id="5b446f7b3ec681a9ba666f496199a1e963931d3c" translate="yes" xml:space="preserve">
          <source>Imagemap File</source>
          <target state="translated">イメージマップファイル</target>
        </trans-unit>
        <trans-unit id="0f11976cd1f2b519c8e2ce09fed0fc85ed95e846" translate="yes" xml:space="preserve">
          <source>Imagemap File Directives</source>
          <target state="translated">イメージマップファイルの指示</target>
        </trans-unit>
        <trans-unit id="2f00845912bc2b2c06fd713b1987191b2fef9faf" translate="yes" xml:space="preserve">
          <source>Images, javascript files, or css files, loaded as part of an HTML page, are not subrequests - the browser requests them as separate HTTP requests.</source>
          <target state="translated">HTML ページの一部として読み込まれた画像、javascript ファイル、または css ファイルは、サブリクエストではありません。</target>
        </trans-unit>
        <trans-unit id="1e779f4d1d49f3aefa4130ab50ea8ef7c0e83b64" translate="yes" xml:space="preserve">
          <source>ImapBase</source>
          <target state="translated">ImapBase</target>
        </trans-unit>
        <trans-unit id="7163a14ad5db3e2b9b1815fa834af259db06d47b" translate="yes" xml:space="preserve">
          <source>ImapBase Directive</source>
          <target state="translated">ImapBase ディレクティブ</target>
        </trans-unit>
        <trans-unit id="cb565e85a9270e1a9a8a524123502f44667c0173" translate="yes" xml:space="preserve">
          <source>ImapDefault</source>
          <target state="translated">ImapDefault</target>
        </trans-unit>
        <trans-unit id="9fa0ac8209f07212b6e6efa4c923d8e63f1bdb30" translate="yes" xml:space="preserve">
          <source>ImapDefault Directive</source>
          <target state="translated">ImapDefault ディレクティブ</target>
        </trans-unit>
        <trans-unit id="2822ac4db76affec3d35d1c949eff618911e11cf" translate="yes" xml:space="preserve">
          <source>ImapMenu</source>
          <target state="translated">ImapMenu</target>
        </trans-unit>
        <trans-unit id="2f78ece8669356fdf1974db95c201d0068cfb450" translate="yes" xml:space="preserve">
          <source>ImapMenu Directive</source>
          <target state="translated">ImapMenu ディレクティブ</target>
        </trans-unit>
        <trans-unit id="8781d615fd77be9578225c40ac67b9471394cced" translate="yes" xml:space="preserve">
          <source>Implementation</source>
          <target state="translated">Implementation</target>
        </trans-unit>
        <trans-unit id="d3fe1353eac3c0b1d213bbc487299b0cc6d80d70" translate="yes" xml:space="preserve">
          <source>Implementation Choices</source>
          <target state="translated">実装の選択肢</target>
        </trans-unit>
        <trans-unit id="eef725bb17c4ef924087c55d09a53cbfecb3e7d5" translate="yes" xml:space="preserve">
          <source>Implementing a content encoding filter</source>
          <target state="translated">コンテンツエンコーディングフィルタの実装</target>
        </trans-unit>
        <trans-unit id="8878faf9f60187f368966ab642c1424ca7df8a43" translate="yes" xml:space="preserve">
          <source>Implements a disk based storage manager. Headers and bodies are stored separately on disk, in a directory structure derived from the md5 hash of the cached URL. Multiple content negotiated responses can be stored concurrently, however the caching of partial content is not supported by this module. The &lt;code&gt;&lt;a href=&quot;../programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt;&lt;/code&gt; tool is provided to list cached URLs, remove cached URLs, or to maintain the size of the disk cache within size and inode limits.</source>
          <target state="translated">ディスクベースのストレージマネージャーを実装します。 ヘッダーと本文は、キャッシュされたURLのmd5ハッシュから派生したディレクトリ構造で、ディスクに個別に格納されます。 複数のコンテンツネゴシエートされた応答を同時に保存できますが、部分的なコンテンツのキャッシュはこのモジュールではサポートされていません。 &lt;code&gt;&lt;a href=&quot;../programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt;&lt;/code&gt; ツールは、キャッシュされたURLの一覧表示、キャッシュされたURLの削除、またはディスクキャッシュのサイズをサイズとiノードの制限内に維持するために提供されています。</target>
        </trans-unit>
        <trans-unit id="b432dac2775cfe23e8649bf9d6614dfd0a5dd9d0" translate="yes" xml:space="preserve">
          <source>Implements a non-threaded, pre-forking web server</source>
          <target state="translated">スレッド化されていない、事前にフォークされているウェブサーバをインプリメントします。</target>
        </trans-unit>
        <trans-unit id="748c9ae5120ad4da24698370850fc2a6d7d34c76" translate="yes" xml:space="preserve">
          <source>Implements a shared object cache based storage manager. Headers and bodies are stored together beneath a single key based on the URL of the response being cached. Multiple content negotiated responses can be stored concurrently, however the caching of partial content is not supported by this module.</source>
          <target state="translated">共有オブジェクトキャッシュベースのストレージマネージャを実装します。ヘッダとボディは、キャッシュされるレスポンスの URL に基づいた単一のキーの下に一緒に保存されます。複数のコンテンツネゴシエートされたレスポンスを同時に保存することができますが、 部分的なコンテンツのキャッシュはこのモジュールではサポートされていません。</target>
        </trans-unit>
        <trans-unit id="073804cc477294ea6900be7f38afe2334c4ee4f5" translate="yes" xml:space="preserve">
          <source>Import session updates from a given HTTP response header</source>
          <target state="translated">与えられた HTTP レスポンスヘッダからセッションの更新をインポートする</target>
        </trans-unit>
        <trans-unit id="d6e2df3a72f01923d5f141c193c7b348a84af734" translate="yes" xml:space="preserve">
          <source>Important compatibility note: The implementation of &lt;code&gt;dbmopen&lt;/code&gt; in the Apache modules reads the string length of the hashed values from the DBM data structures, rather than relying upon the string being NULL-appended. Some applications, such as the Netscape web server, rely upon the string being NULL-appended, so if you are having trouble using DBM files interchangeably between applications this may be a part of the problem.</source>
          <target state="translated">重要な互換性メモ：Apacheモジュールの &lt;code&gt;dbmopen&lt;/code&gt; の実装は、ハッシュされた値の文字列長を、NULLが付加された文字列に依存するのではなく、DBMデータ構造から読み取ります。 Netscape Webサーバーなどの一部のアプリケーションは、NULLが付加された文字列に依存しているため、アプリケーション間でDBMファイルを交互に使用できない場合は、これが問題の一部である可能性があります。</target>
        </trans-unit>
        <trans-unit id="5accdf9c2e442f1bd44af23f40fb1df697964bcb" translate="yes" xml:space="preserve">
          <source>Importantly, as the cached files are locally stored, operating system in-memory caching will typically be applied to their access also. So although the files are stored on disk, if they are frequently accessed it is likely the operating system will ensure that they are actually served from memory.</source>
          <target state="translated">重要なことは、キャッシュされたファイルはローカルに保存されているので、通常はオペレーティングシステムのインメモリキャッシングがそのアクセスにも適用されます。そのため、ファイルはディスクに保存されていますが、頻繁にアクセスされる場合は、オペレーティング・システムが実際にメモリから提供されることを保証している可能性が高いです。</target>
        </trans-unit>
        <trans-unit id="5581c31adb95b00fbd43bea4b5a838d47e136af2" translate="yes" xml:space="preserve">
          <source>Improving Cache Hits</source>
          <target state="translated">キャッシュヒット数の改善</target>
        </trans-unit>
        <trans-unit id="0b4cfb74250825e25c41687e223ced16286839a1" translate="yes" xml:space="preserve">
          <source>In 'auto' mode, &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; will &lt;em&gt;drive&lt;/em&gt; a Managed Domain's properties (e.g. certificate management) whenever necessary. When a MD is not used in any virtual host, the module will do nothing. When a certificate is missing, it will try to get one. When a certificate expires soon (see &lt;code&gt;&lt;a href=&quot;#mdrenewwindow&quot;&gt;MDRenewWindow&lt;/a&gt;&lt;/code&gt;), it will renew it.</source>
          <target state="translated">「自動」モードでは、 &lt;code&gt;&lt;a href=&quot;mod_md&quot;&gt;mod_md&lt;/a&gt;&lt;/code&gt; は必要に応じて管理対象ドメインのプロパティ（証明書管理など）を実行します。 MDが仮想ホストで使用されていない場合、モジュールは何もしません。 証明書がない場合は、取得しようとします。 証明書が間もなく期限切れになると（ &lt;code&gt;&lt;a href=&quot;#mdrenewwindow&quot;&gt;MDRenewWindow&lt;/a&gt;&lt;/code&gt; を参照）、証明書が更新されます。</target>
        </trans-unit>
        <trans-unit id="7d5c9f83c0652943ebd31ba64437ee4ebf827468" translate="yes" xml:space="preserve">
          <source>In 'manual' mode, it is your duty to do all this. The module will provide the existing certificate to &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt;, if available. But it will not contact the CA for signup/renewal. This can be useful in clustered setups where you want just one node to perform the driving.</source>
          <target state="translated">「手動」モードでは、これをすべて行うのはあなたの義務です。 モジュールは、存在する場合、既存の証明書を &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; に提供します。 ただし、サインアップ/更新のためにCAに連絡することはありません。 これは、1つのノードだけが駆動を実行する必要があるクラスター化されたセットアップで役立ちます。</target>
        </trans-unit>
        <trans-unit id="69454853a33c06cac79061762fd1752b93ab7c93" translate="yes" xml:space="preserve">
          <source>In 2.4.26 and later, the &quot;no-proxy&quot; environment variable can be set to disable &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; processing the current request. This variable should be set with &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt;, as &lt;code&gt;&lt;a href=&quot;mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; is not evaluated early enough.</source>
          <target state="translated">2.4.26以降では、「no-proxy」環境変数を設定して、現在のリクエストの &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 処理を無効にすることができます。 &lt;code&gt;&lt;a href=&quot;mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; は十分に早く評価されないため、この変数は &lt;code&gt;&lt;a href=&quot;mod_setenvif#setenvif&quot;&gt;SetEnvIf&lt;/a&gt;&lt;/code&gt; で設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f7dc22e9cd21bd36370cf6584133031526d39c00" translate="yes" xml:space="preserve">
          <source>In 2.4.26 and later, you can limit the escaping to specific characters in backreferences by listing them: &lt;code&gt;[B=#?;]&lt;/code&gt;. Note: The space character can be used in the list of characters to escape, but it cannot be the last character in the list.</source>
          <target state="translated">2.4.26以降では、 &lt;code&gt;[B=#?;]&lt;/code&gt; リストすることで、エスケープを後方参照の特定の文字に制限できます。 注：スペース文字は、エスケープする文字のリストで使用できますが、リストの最後の文字にすることはできません。</target>
        </trans-unit>
        <trans-unit id="3fa49fbee76b53638de2e9d907c747ef3b686e74" translate="yes" xml:space="preserve">
          <source>In 2.4.7 and later, support for using a Unix Domain Socket is available by using a target which prepends &lt;code&gt;unix:/path/lis.sock|&lt;/code&gt;. For example, to proxy HTTP and target the UDS at /home/www/socket, you would use &lt;code&gt;unix:/home/www.socket|http://localhost/whatever/&lt;/code&gt;.</source>
          <target state="translated">2.4.7以降では、 &lt;code&gt;unix:/path/lis.sock|&lt;/code&gt; を先頭に付加するターゲットを使用することにより、Unixドメインソケットの使用がサポートされます。 。 たとえば、HTTPをプロキシしてUDSを/ home / www / socketにターゲット設定するには、 &lt;code&gt;unix:/home/www.socket|http://localhost/whatever/&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="c47e49c411e76576572f050d2228e85f4c9a152c" translate="yes" xml:space="preserve">
          <source>In 2.4.8 and later, this module returns an error after 32,000 iterations to protect against unintended looping. An alternative maximum number of iterations can be specified by adding to the N flag.</source>
          <target state="translated">2.4.8以降では、このモジュールは意図しないループから保護するために32,000回の繰り返しの後にエラーを返します。N フラグに追加することで、別の最大反復回数を指定することができます。</target>
        </trans-unit>
        <trans-unit id="25484da34acf6c9118d5b07cc5f4e9eec701cdf4" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; the &lt;code&gt;!&lt;/code&gt; character can be used before a regular expression to negate it. This is, a string will be considered to have matched only if it does not match the rest of the expression.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; では &lt;code&gt;!&lt;/code&gt; 文字を正規表現の前に使用して、それを否定することができます。 つまり、文字列は、式の残りの部分と一致しない場合にのみ一致したと見なされます。</target>
        </trans-unit>
        <trans-unit id="5eccca75d5daae389d2af447f6be28fb2894ad9d" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; will only process one request at at time per connection. But clients, such as browsers, will send many requests at the same time. If one of these takes long to process (or is a long polling one), the other requests will stall.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/prefork&quot;&gt;prefork&lt;/a&gt;&lt;/code&gt; では、 &lt;code&gt;&lt;a href=&quot;../mod/mod_http2&quot;&gt;mod_http2&lt;/a&gt;&lt;/code&gt; は接続ごとに一度に1つの要求のみを処理します。 ただし、ブラウザなどのクライアントは、同時に多くのリクエストを送信します。 これらの1つが処理に時間がかかる（またはポーリングが長い）場合、他の要求は停止します。</target>
        </trans-unit>
        <trans-unit id="1a8b28fa5f3cc09154560994fad7eacca10a5f83" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; context, The &lt;em&gt;Pattern&lt;/em&gt; will initially be matched against the part of the URL after the hostname and port, and before the query string (e.g. &quot;/app1/index.html&quot;). This is the (%-decoded) URL-path.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;core#virtualhost&quot;&gt;VirtualHost&lt;/a&gt;&lt;/code&gt; コンテキストでは、 &lt;em&gt;パターン&lt;/em&gt;は最初にホスト名とポートの後、クエリ文字列の前にURLの一部と照合されます（例： &quot;/app1/index.html&quot;）。 これは（％デコードされた）URLパスです。</target>
        </trans-unit>
        <trans-unit id="5a0541f0147ebef7897569877b8648b8b2326175" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_cgid&quot;&gt;mod_cgid&lt;/a&gt;&lt;/code&gt;, the length of time to wait for any individual block of output from a CGI script.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;mod_cgid&quot;&gt;mod_cgid&lt;/a&gt;&lt;/code&gt; で、CGIスクリプトからの出力の個々のブロックを待機する時間の長さ。</target>
        </trans-unit>
        <trans-unit id="6e7e1635e2542c3ec872a4ad432a25dbbab202e9" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_ext_filter&quot;&gt;mod_ext_filter&lt;/a&gt;&lt;/code&gt;, the length of time to wait for output from a filtering process.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_ext_filter&quot;&gt;mod_ext_filter&lt;/a&gt;&lt;/code&gt; で、フィルタリングプロセスからの出力を待機する時間の長さ。</target>
        </trans-unit>
        <trans-unit id="d1acfc33ead488ca01a11e818a774c79cdbd5dc9" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, the default timeout value if &lt;code&gt;&lt;a href=&quot;mod_proxy#proxytimeout&quot;&gt;ProxyTimeout&lt;/a&gt;&lt;/code&gt; is not configured.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; で、 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxytimeout&quot;&gt;ProxyTimeout&lt;/a&gt;&lt;/code&gt; が構成されていない場合のデフォルトのタイムアウト値。</target>
        </trans-unit>
        <trans-unit id="eca5ea1921722a1a67056643167ce1bbc4ebdb83" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;, the NOT character ('&lt;code&gt;!&lt;/code&gt;') is also available as a possible pattern prefix. This enables you to negate a pattern; to say, for instance: ``&lt;em&gt;if the current URL does &lt;strong&gt;NOT&lt;/strong&gt; match this pattern&lt;/em&gt;''. This can be used for exceptional cases, where it is easier to match the negative pattern, or as a last default rule.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; では、NOT文字（ ' &lt;code&gt;!&lt;/code&gt; '）も可能なパターンプレフィックスとして使用できます。 これにより、パターンを無効にすることができます。 たとえば、「 &lt;em&gt;現在のURLがこのパターンに一致し&lt;strong&gt;ない&lt;/strong&gt;場合&lt;/em&gt; 」などです。 これは、否定的なパターンに一致させるのが簡単な例外的なケースに、または最後のデフォルトルールとして使用できます。</target>
        </trans-unit>
        <trans-unit id="de3e9fb31cefa2a5531e6fc75bd29dfdb2cdfd4a" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;SSLRequire&lt;/code&gt;, the comparison operators &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, ... are completely equivalent to the operators &lt;code&gt;lt&lt;/code&gt;, &lt;code&gt;le&lt;/code&gt;, ... and work in a somewhat peculiar way that first compares the length of two strings and then the lexical order. On the other hand, &lt;a href=&quot;../expr&quot;&gt;ap_expr&lt;/a&gt; has two sets of comparison operators: The operators &lt;code&gt;&amp;lt;&lt;/code&gt;, &lt;code&gt;&amp;lt;=&lt;/code&gt;, ... do lexical string comparison, while the operators &lt;code&gt;-lt&lt;/code&gt;, &lt;code&gt;-le&lt;/code&gt;, ... do integer comparison. For the latter, there are also aliases without the leading dashes: &lt;code&gt;lt&lt;/code&gt;, &lt;code&gt;le&lt;/code&gt;, ...</source>
          <target state="translated">&lt;code&gt;SSLRequire&lt;/code&gt; では、比較演算子 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、...は、演算子 &lt;code&gt;lt&lt;/code&gt; 、 &lt;code&gt;le&lt;/code&gt; 、...と完全に同等で、最初は2つの文字列の長さを比較し、次に字句の順序を比較するという少し変わった方法で機能します。 一方、 &lt;a href=&quot;../expr&quot;&gt;ap_exprに&lt;/a&gt;は2組の比較演算子があります。演算子 &lt;code&gt;&amp;lt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;=&lt;/code&gt; 、...は字句文字列比較を行い、演算子 &lt;code&gt;-lt&lt;/code&gt; 、 &lt;code&gt;-le&lt;/code&gt; 、...は整数比較を行います。 後者の場合、先頭にダッシュがないエイリアスもあります： &lt;code&gt;lt&lt;/code&gt; 、 &lt;code&gt;le&lt;/code&gt; 、...</target>
        </trans-unit>
        <trans-unit id="ba34b0cea9de8bcf46a8c32e12904eb3386f0901" translate="yes" xml:space="preserve">
          <source>In &lt;var&gt;FAST&lt;/var&gt; mode, requests are run in-process with the selected uid/gid and privileges, so the overhead is negligible. This is suitable for benign situations, but is not secure against an attacker escalating privileges with an in-process module or script.</source>
          <target state="translated">&lt;var&gt;FAST&lt;/var&gt; モードでは、リクエストは選択されたuid / gidと権限を使用してインプロセスで実行されるため、オーバーヘッドは無視できます。 これは害のない状況に適していますが、インプロセスモジュールまたはスクリプトを使用して特権を昇格させる攻撃者に対して安全ではありません。</target>
        </trans-unit>
        <trans-unit id="73b6aaaaee62e590694f5115b4728303accadcc7" translate="yes" xml:space="preserve">
          <source>In Apache 2.1 and later, &lt;code&gt;SSLEngine&lt;/code&gt; can be set to &lt;code&gt;optional&lt;/code&gt;. This enables support for &lt;a href=&quot;http://www.ietf.org/rfc/rfc2817.txt&quot;&gt;RFC 2817&lt;/a&gt;, Upgrading to TLS Within HTTP/1.1. At this time no web browsers support RFC 2817.</source>
          <target state="translated">Apache 2.1以降では、 &lt;code&gt;SSLEngine&lt;/code&gt; を &lt;code&gt;optional&lt;/code&gt; に設定できます 。 これにより、 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2817.txt&quot;&gt;RFC 2817の&lt;/a&gt;サポート、HTTP / 1.1内のTLSへのアップグレードが可能になります。 現時点では、RFC 2817をサポートするWebブラウザーはありません。</target>
        </trans-unit>
        <trans-unit id="fd7c7c204292b66440643f0c4f54a7de8ebb915a" translate="yes" xml:space="preserve">
          <source>In Apache HTTP Server 2.1 and later, mod_proxy supports pooled connections to a backend server. Connections created on demand can be retained in a pool for future use. Limits on the pool size and other settings can be coded on the &lt;code&gt;ProxyPass&lt;/code&gt; directive using &lt;code&gt;key=value&lt;/code&gt; parameters, described in the tables below.</source>
          <target state="translated">Apache HTTPサーバー2.1以降では、mod_proxyはバックエンドサーバーへのプールされた接続をサポートします。 オンデマンドで作成された接続は、将来使用するためにプールに保持できます。 プールサイズおよびその他の設定の制限は、次の表に示すように、 &lt;code&gt;key=value&lt;/code&gt; パラメーターを使用して &lt;code&gt;ProxyPass&lt;/code&gt; ディレクティブでコーディングできます。</target>
        </trans-unit>
        <trans-unit id="40d0948002d293493888965897eb86db764d3c42" translate="yes" xml:space="preserve">
          <source>In Apache HTTP Server 2.4.16 and later, this directive may be omitted when the request is mapped via &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_userdir&quot;&gt;mod_userdir&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Apache HTTP Server 2.4.16以降では、要求が &lt;code&gt;&lt;a href=&quot;mod_alias#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;mod_userdir&quot;&gt;mod_userdir&lt;/a&gt;&lt;/code&gt; を介してマップされる場合、このディレクティブは省略される場合があります。</target>
        </trans-unit>
        <trans-unit id="63a5475966b91ce96af1f67737b6f6a067a9b9ca" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; context, it is applicable only where SELECTIVE mode was set for the VirtualHost. Only FAST or SECURE can be set in this context (SELECTIVE would be meaningless).</source>
          <target state="translated">&lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt; コンテキストでは、VirtualHostにSELECTIVEモードが設定されている場合にのみ適用されます。 このコンテキストで設定できるのはFASTまたはSECUREのみです（SELECTIVEは無意味です）。</target>
        </trans-unit>
        <trans-unit id="efefb2680323da6d465046e862d6ceae09ccc1d6" translate="yes" xml:space="preserve">
          <source>In a &lt;code&gt;.htaccess&lt;/code&gt; in your document directory, the leading slash is removed from the value supplied to &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;, and in the &lt;code&gt;images&lt;/code&gt; subdirectory, &lt;code&gt;/images/&lt;/code&gt; is removed from it. Thus, your regular expression needs to omit that portion as well.</source>
          <target state="translated">ドキュメントディレクトリの &lt;code&gt;.htaccess&lt;/code&gt; では、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; に指定された値から先頭のスラッシュが削除され、 &lt;code&gt;images&lt;/code&gt; サブディレクトリでは &lt;code&gt;/images/&lt;/code&gt; が削除されます。 したがって、正規表現ではその部分も省略する必要があります。</target>
        </trans-unit>
        <trans-unit id="144a35c98d4aaaae099e47af57d1a4c194f9c5f8" translate="yes" xml:space="preserve">
          <source>In a caching scenario one would want to know about the efficiency of the cache. A very simple method to find this out would be:</source>
          <target state="translated">キャッシングのシナリオでは、キャッシュの効率について知りたいと思うでしょう。これを知るための非常に簡単な方法は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d92b41759dc342f326d3bbd659ef971af3fd9b9e" translate="yes" xml:space="preserve">
          <source>In a minimal configuration the following directive is all that is needed to enable the thundering herd lock in the default system temp directory.</source>
          <target state="translated">最小限の設定では、デフォルトのシステムの temp ディレクトリで thundering herd ロックを有効にするために必要なのは以下のディレクティブだけです。</target>
        </trans-unit>
        <trans-unit id="69125138ca48649d57390493bd18790464f079ad" translate="yes" xml:space="preserve">
          <source>In a reverse proxy situation where the Apache server acts as a server frontend for a backend origin server, revealing the contents of the session ID cookie to the backend could be a potential privacy violation. When set to on, the session ID cookie will be removed from the incoming HTTP headers.</source>
          <target state="translated">Apache サーバがバックエンドのオリジンサーバのサーバフロントエンドとして動作するリバースプロキシの状況では、 セッション ID クッキーの内容をバックエンドに公開することは潜在的なプライバシー侵害になる可能性があります。on に設定すると、セッション ID クッキーは受信 HTTP ヘッダから削除されます。</target>
        </trans-unit>
        <trans-unit id="b5302145ff11aee97647a879a7e2511e216b96ff" translate="yes" xml:space="preserve">
          <source>In a reverse proxy situation where the Apache server acts as a server frontend for a backend origin server, revealing the contents of the session cookie to the backend could be a potential privacy violation. When set to on, the session cookie will be removed from the incoming HTTP headers.</source>
          <target state="translated">Apache サーバがバックエンドのオリジンサーバのフロントエンドとして動作するリバースプロキシの状況では、 セッションクッキーの内容をバックエンドに公開することはプライバシー侵害の可能性があります。on に設定すると、セッションクッキーは HTTP ヘッダから削除されます。</target>
        </trans-unit>
        <trans-unit id="50fbaffc70b58ed46e336d81f69a6df922300d29" translate="yes" xml:space="preserve">
          <source>In a sub-URI, such as &lt;em&gt;http://example.com/blog/&lt;/em&gt; this &lt;em&gt;sub-URI&lt;/em&gt; has to be supplied as &lt;var&gt;local-url&lt;/var&gt;:</source>
          <target state="translated">&lt;em&gt;http://example.com/blog/&lt;/em&gt;などのサブURIでは、この&lt;em&gt;サブURI&lt;/em&gt;を &lt;var&gt;local-url&lt;/var&gt; として指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="4379cb695625a89e635fb355acdef94fcf0770ca" translate="yes" xml:space="preserve">
          <source>In a typical reverse proxy or gateway configuration, this option should be set to &lt;code&gt;Off&lt;/code&gt;.</source>
          <target state="translated">一般的なリバースプロキシまたはゲートウェイ構成では、このオプションを &lt;code&gt;Off&lt;/code&gt; に設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="1790a32c23df18875ed46bd42bc7d11320d6c9be" translate="yes" xml:space="preserve">
          <source>In addition to all environment variables set within the Apache configuration and passed from the shell, CGI scripts and SSI pages are provided with a set of environment variables containing meta-information about the request as required by the &lt;a href=&quot;http://www.ietf.org/rfc/rfc3875&quot;&gt;CGI specification&lt;/a&gt;.</source>
          <target state="translated">Apache構成内で設定され、シェルから渡されるすべての環境変数に加えて、CGIスクリプトとSSIページには、 &lt;a href=&quot;http://www.ietf.org/rfc/rfc3875&quot;&gt;CGI仕様で&lt;/a&gt;要求されている要求に関するメタ情報を含む環境変数のセットが用意されています。</target>
        </trans-unit>
        <trans-unit id="2256a74f9b4c54b5d16149a99d519044f899b56e" translate="yes" xml:space="preserve">
          <source>In addition to being a &quot;basic&quot; web server, and providing static and dynamic content to end-users, Apache httpd (as well as most other web servers) can also act as a reverse proxy server, also-known-as a &quot;gateway&quot; server.</source>
          <target state="translated">基本的な」ウェブサーバであり、エンドユーザに静的・動的コンテンツを提供することに加えて、Apache httpd (他のほとんどのウェブサーバと同様に)はリバースプロキシサーバ、別名「ゲートウェイ」サーバとしても動作することができます。</target>
        </trans-unit>
        <trans-unit id="71b1b3cbd0d3cafba17aee90d0dad5b530bd9496" translate="yes" xml:space="preserve">
          <source>In addition to being able to &lt;code&gt;config&lt;/code&gt; the time format, you can also &lt;code&gt;config&lt;/code&gt; two other things.</source>
          <target state="translated">時刻形式を構成できることに加えて、他に2つのことを構成できます。</target>
        </trans-unit>
        <trans-unit id="1a15682183ca3b2f8a606a425eaf71d37a27c14d" translate="yes" xml:space="preserve">
          <source>In addition to file type and the file encoding, another important piece of information is what language a particular document is in, and in what character set the file should be displayed. For example, the document might be written in the Vietnamese alphabet, or in Cyrillic, and should be displayed as such. This information, also, is transmitted in HTTP headers.</source>
          <target state="translated">ファイルの種類とファイルのエンコーディングに加えて、もう一つの重要な情報は、特定のドキュメントがどの言語で書かれているか、そしてそのファイルがどのような文字セットで表示されるべきかということです。例えば、ドキュメントはベトナム語のアルファベットで書かれているかもしれませんし、キリル文字で書かれているかもしれないので、そのように表示されるべきです。この情報は、HTTPヘッダでも送信されます。</target>
        </trans-unit>
        <trans-unit id="c2d0e2c4b8b5614dd66728231d57cc0562b89229" translate="yes" xml:space="preserve">
          <source>In addition to merely setting values literally like that, you can use any other variable, including &lt;a href=&quot;../env&quot;&gt;environment variables&lt;/a&gt; or the variables discussed above (like &lt;code&gt;LAST_MODIFIED&lt;/code&gt;, for example) to give values to your variables. You will specify that something is a variable, rather than a literal string, by using the dollar sign ($) before the name of the variable.</source>
          <target state="translated">単に文字通りそのように値を設定するだけでなく、 &lt;a href=&quot;../env&quot;&gt;環境変数&lt;/a&gt;や上で説明した変数（たとえば &lt;code&gt;LAST_MODIFIED&lt;/code&gt; など）を含む他の変数を使用して、変数に値を与えることができます。 変数名の前にドル記号（$）を使用して、何かがリテラル文字列ではなく変数であることを指定します。</target>
        </trans-unit>
        <trans-unit id="88177058ca46393cfbd751e77e798dde1e0f67b6" translate="yes" xml:space="preserve">
          <source>In addition to plain text, the &lt;em&gt;Substitution&lt;/em&gt; string can include</source>
          <target state="translated">プレーンテキストに加えて、 &lt;em&gt;置換&lt;/em&gt;文字列には</target>
        </trans-unit>
        <trans-unit id="3ed8083beafcb8d6bdc2ceaecb5e72a465ac202a" translate="yes" xml:space="preserve">
          <source>In addition to response status codes, you may also specify redirect status using their symbolic names: &lt;code&gt;temp&lt;/code&gt; (default), &lt;code&gt;permanent&lt;/code&gt;, or &lt;code&gt;seeother&lt;/code&gt;.</source>
          <target state="translated">応答ステータスコードに加えて、それらの記号名を使用してリダイレクトステータスを指定することもできます： &lt;code&gt;temp&lt;/code&gt; （デフォルト）、 &lt;code&gt;permanent&lt;/code&gt; 、または &lt;code&gt;seeother&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d9e744a421956e82e65c90cdce96f7e38a5aef25" translate="yes" xml:space="preserve">
          <source>In addition to spitting out content, Apache SSI gives you the option of setting variables, and using those variables in comparisons and conditionals.</source>
          <target state="translated">コンテンツを吐き出すことに加えて、Apache SSI は変数を設定したり、 比較や条件式でそれらの変数を使うことができます。</target>
        </trans-unit>
        <trans-unit id="0752226cc3d489a74f9d8eed99d74e3127027a3f" translate="yes" xml:space="preserve">
          <source>In addition to string-valued functions, there are also list-valued functions which take one string as argument and return a wordlist, i.e. a list of strings. The wordlist can be used with the special &lt;code&gt;-in&lt;/code&gt; operator. Functions names are not case sensitive. Modules may register additional functions.</source>
          <target state="translated">文字列値関数に加えて、引数として1つの文字列を取り、ワードリスト、つまり文字列のリストを返すリスト値関数もあります。 ワードリストは、特殊な &lt;code&gt;-in&lt;/code&gt; 演算子で使用できます。 関数名では大文字と小文字が区別されません。 モジュールは追加の関数を登録できます。</target>
        </trans-unit>
        <trans-unit id="3cb7033bbe4329609e6f8cddeb3fd022bb6c7b41" translate="yes" xml:space="preserve">
          <source>In addition to that, if the second parameter is given, a config variable is set to this value. The variable can be used in the configuration using the &lt;code&gt;${VAR}&lt;/code&gt; syntax. The variable is always globally defined and not limited to the scope of the surrounding config section.</source>
          <target state="translated">さらに、2番目のパラメーターが指定されている場合、構成変数はこの値に設定されます。 変数は、 &lt;code&gt;${VAR}&lt;/code&gt; 構文を使用して構成で使用できます。 変数は常にグローバルに定義され、周囲の構成セクションのスコープに限定されません。</target>
        </trans-unit>
        <trans-unit id="b0c46e40c839fe86859f1dfe393d09f557f5e4c8" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;code&gt;env=&lt;/code&gt; syntax, &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; supports logging values conditional upon the HTTP response code:</source>
          <target state="translated">&lt;code&gt;env=&lt;/code&gt; 構文に加えて、 &lt;code&gt;&lt;a href=&quot;mod/mod_log_config#logformat&quot;&gt;LogFormat&lt;/a&gt;&lt;/code&gt; はHTTP応答コードを条件とするロギング値をサポートします。</target>
        </trans-unit>
        <trans-unit id="746377dcd52ffbe7dd1d785cfaf5a787c96ea4af" translate="yes" xml:space="preserve">
          <source>In addition to the configuration directives that control the behaviour of &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, an</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; の動作を制御する設定ディレクティブに加えて、</target>
        </trans-unit>
        <trans-unit id="06ac83c631aa0bd7c0aa7035a62b5977d01f9662" translate="yes" xml:space="preserve">
          <source>In addition to the configuration directives that control the behaviour of &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, there are a number of</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; の動作を制御する設定ディレクティブに加えて、いくつかの</target>
        </trans-unit>
        <trans-unit id="3a326911b1c9123bec51205f1ee7a264343dea2e" translate="yes" xml:space="preserve">
          <source>In addition to the information listed below, the following resources should be consulted:</source>
          <target state="translated">また、以下の情報に加えて、以下の資料も参考にしてみてください。</target>
        </trans-unit>
        <trans-unit id="414d78a2db1b0425c47101eac2d7cda849d98696" translate="yes" xml:space="preserve">
          <source>In addition to the main configuration files, certain directives may go in &lt;code&gt;.htaccess&lt;/code&gt; files located in the content directories. &lt;code&gt;.htaccess&lt;/code&gt; files are primarily for people who do not have access to the main server configuration file(s). You can read more about &lt;code&gt;.htaccess&lt;/code&gt; files in the &lt;a href=&quot;howto/htaccess&quot;&gt;&lt;code&gt;.htaccess&lt;/code&gt; howto&lt;/a&gt;.</source>
          <target state="translated">メイン設定ファイルに加えて、特定のディレクティブはコンテンツディレクトリにある &lt;code&gt;.htaccess&lt;/code&gt; ファイルに入る場合があります。 &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、主にメインサーバーの設定ファイルにアクセスできない人のためのものです。 &lt;code&gt;.htaccess&lt;/code&gt; ファイルの詳細については、 &lt;a href=&quot;howto/htaccess&quot;&gt; &lt;code&gt;.htaccess&lt;/code&gt; howtoを参照してください&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit id="12b23341717f965472310fd82e5b7694748924e7" translate="yes" xml:space="preserve">
          <source>In addition to the nonce, the &lt;code&gt;balancer-manager&lt;/code&gt; page should be protected via an ACL.</source>
          <target state="translated">nonceに加えて、 &lt;code&gt;balancer-manager&lt;/code&gt; ページをACLで保護する必要があります。</target>
        </trans-unit>
        <trans-unit id="52ec5f91ac0f6313bb627a1082a01e3e4e5383d1" translate="yes" xml:space="preserve">
          <source>In addition to the set of active child processes, there may be additional child processes which are terminating, but where at least one server thread is still handling an existing client connection. Up to &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; terminating processes may be present, though the actual number can be expected to be much smaller. This behavior can be avoided by disabling the termination of individual child processes, which is achieved using the following:</source>
          <target state="translated">アクティブな子プロセスのセットに加えて、終了しているが、少なくとも1つのサーバースレッドが既存のクライアント接続を処理している追加の子プロセスがある場合があります。 &lt;code&gt;&lt;a href=&quot;mpm_common#maxrequestworkers&quot;&gt;MaxRequestWorkers&lt;/a&gt;&lt;/code&gt; までの終了プロセスが存在する可能性がありますが、実際の数ははるかに少ないと予想できます。 この動作は、個々の子プロセスの終了を無効にすることで回避できます。これは、以下を使用して実現されます。</target>
        </trans-unit>
        <trans-unit id="fad1dc77a94c9aeb666fd23e36a71fdb967b3ede" translate="yes" xml:space="preserve">
          <source>In addition to the standard authorization function of checking group membership, this module can also provide server-side user session management via database-backed login/logout capabilities. Specifically, it can update a user's session status in the database whenever the user visits designated URLs (subject of course to users supplying the necessary credentials).</source>
          <target state="translated">グループ・メンバーシップをチェックするという標準的な認証機能に加えて、このモジュールは、データベースをバックにしたloginlogout機能を介して、サーバサイドのユーザ・セッション管理を提供することができます。具体的には、ユーザが指定された URL にアクセスするたびに、データベース内のユーザのセッションステータスを更新することができます(もちろん、ユーザが必要な資格情報を提供することが条件となります)。</target>
        </trans-unit>
        <trans-unit id="730cf2400cc720e8c96ed2e41736e12b5aef2b70" translate="yes" xml:space="preserve">
          <source>In addition to the tips on the &lt;a href=&quot;../dns-caveats#tips&quot;&gt;DNS Issues&lt;/a&gt; page, here are some further tips:</source>
          <target state="translated">&lt;a href=&quot;../dns-caveats#tips&quot;&gt;DNSの問題&lt;/a&gt;ページのヒントに加えて、さらにいくつかのヒントを次に示します 。</target>
        </trans-unit>
        <trans-unit id="d70621f2a9c40ebd42f23eb0f00b7e33037da869" translate="yes" xml:space="preserve">
          <source>In addition to the variables in the standard CGI environment, these are available for the &lt;code&gt;echo&lt;/code&gt; command, for &lt;code&gt;if&lt;/code&gt; and &lt;code&gt;elif&lt;/code&gt;, and to any program invoked by the document.</source>
          <target state="translated">標準CGI環境の変数に加えて、これらは、 &lt;code&gt;echo&lt;/code&gt; コマンド、 &lt;code&gt;if&lt;/code&gt; および &lt;code&gt;elif&lt;/code&gt; 、およびドキュメントによって呼び出されるすべてのプログラムで使用できます。</target>
        </trans-unit>
        <trans-unit id="12a8dbb0670f3c544beefc67560b3d5bcacea1fc" translate="yes" xml:space="preserve">
          <source>In addition to these modules, there are also &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_core&quot;&gt;mod_authn_core&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt;. These modules implement core directives that are core to all auth modules.</source>
          <target state="translated">これらのモジュールに加えて、 &lt;code&gt;&lt;a href=&quot;../mod/mod_authn_core&quot;&gt;mod_authn_core&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;../mod/mod_authz_core&quot;&gt;mod_authz_core&lt;/a&gt;&lt;/code&gt; もあります 。 これらのモジュールは、すべての認証モジュールのコアであるコアディレクティブを実装します。</target>
        </trans-unit>
        <trans-unit id="762fc2ef87c6de53246de828d8191825ddd56726" translate="yes" xml:space="preserve">
          <source>In addition, &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; may define the &lt;a href=&quot;../handler&quot;&gt;handler&lt;/a&gt; and &lt;a href=&quot;../filter&quot;&gt;filters&lt;/a&gt; that originate and process content. The directives &lt;code&gt;&lt;a href=&quot;#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; control the modules or scripts that serve the document. The &lt;code&gt;&lt;a href=&quot;#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; directive allows &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; to consider these file extensions to be included when testing Multiviews matches.</source>
          <target state="translated">さらに、 &lt;code&gt;&lt;a href=&quot;mod_mime&quot;&gt;mod_mime&lt;/a&gt;&lt;/code&gt; は、コンテンツを生成および処理する&lt;a href=&quot;../handler&quot;&gt;ハンドラー&lt;/a&gt;および&lt;a href=&quot;../filter&quot;&gt;フィルター&lt;/a&gt;を定義する場合があります。 &lt;code&gt;&lt;a href=&quot;#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#addinputfilter&quot;&gt;AddInputFilter&lt;/a&gt;&lt;/code&gt; ディレクティブは、ドキュメントを提供するモジュールまたはスクリプトを制御します。 &lt;code&gt;&lt;a href=&quot;#multiviewsmatch&quot;&gt;MultiviewsMatch&lt;/a&gt;&lt;/code&gt; ディレクティブを使用すると、 &lt;code&gt;&lt;a href=&quot;mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; は 、マルチビューの一致をテストするときにこれらのファイル拡張子が含まれていると見なすことができます。</target>
        </trans-unit>
        <trans-unit id="7caa0861de9c26c106a48f54da3bcf02d12fb571" translate="yes" xml:space="preserve">
          <source>In addition, a location for the DAV lock database must be specified in the global section of your &lt;code&gt;httpd.conf&lt;/code&gt; file using the &lt;code&gt;&lt;a href=&quot;mod_dav_fs#davlockdb&quot;&gt;DavLockDB&lt;/a&gt;&lt;/code&gt; directive:</source>
          <target state="translated">さらに、DAVロックデータベースの場所は、 &lt;code&gt;&lt;a href=&quot;mod_dav_fs#davlockdb&quot;&gt;DavLockDB&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して &lt;code&gt;httpd.conf&lt;/code&gt; ファイルのグローバルセクションで指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="8c075fe98352235e9375f7d35f3a63f68a62a042" translate="yes" xml:space="preserve">
          <source>In addition, extended features are provided by other modules. Caching is provided by &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; and related modules. The ability to contact remote servers using the SSL/TLS protocol is provided by the &lt;code&gt;SSLProxy*&lt;/code&gt; directives of &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt;. These additional modules will need to be loaded and configured to take advantage of these features.</source>
          <target state="translated">さらに、拡張機能は他のモジュールによって提供されます。 キャッシュは &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; および関連モジュールによって提供されます。 SSL / TLSプロトコルを使用してリモートサーバーに接続する機能は、 &lt;code&gt;&lt;a href=&quot;mod_ssl&quot;&gt;mod_ssl&lt;/a&gt;&lt;/code&gt; の &lt;code&gt;SSLProxy*&lt;/code&gt; ディレクティブによって提供されます。 これらの追加モジュールは、これらの機能を利用するためにロードおよび構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="45c8a39e70e73eda11cd84da5179abeb87ebc2c8" translate="yes" xml:space="preserve">
          <source>In addition, if you wish to have caching enabled, consult the documentation from &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">さらに、キャッシュを有効にしたい場合は、 &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="bd3bdc77702c03c792ce02afb00b37e2edb88379" translate="yes" xml:space="preserve">
          <source>In addition, it is sometimes necessary to provide the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; script with extra information about the location of your compiler, libraries, or header files. This is done by passing either environment variables or command line options to &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt;. For more information, see the &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; manual page. Or invoke &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; using the &lt;code&gt;--help&lt;/code&gt; option.</source>
          <target state="translated">さらに、コンパイラ、ライブラリ、またはヘッダーファイルの場所に関する追加情報を &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; スクリプトに提供する必要がある場合があります。 これは、環境変数またはコマンドラインオプションを &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; に渡して行います 。 詳細については、 &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; のマニュアルページを参照してください。 または、 &lt;code&gt;--help&lt;/code&gt; オプションを使用して &lt;code&gt;&lt;a href=&quot;programs/configure&quot;&gt;configure&lt;/a&gt;&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="62d9ee3e3c7a45e857d9433f4bb05c25b22ba5a8" translate="yes" xml:space="preserve">
          <source>In addition, log files may contain information supplied directly by the client, without escaping. Therefore, it is possible for malicious clients to insert control-characters in the log files, so care must be taken in dealing with raw logs.</source>
          <target state="translated">さらに、ログファイルには、クライアントから直接提供された情報がエスケープされずに含まれている可能性があります。そのため、悪意のあるクライアントがログファイルに制御文字を挿入する可能性がありますので、生のログを扱う際には注意が必要です。</target>
        </trans-unit>
        <trans-unit id="8787a16f204030029b180f934606df038d8dd09e" translate="yes" xml:space="preserve">
          <source>In addition, on some platforms, like Win32, and on unix when using &lt;a href=&quot;../suexec&quot;&gt;suexec&lt;/a&gt;, you cannot pass arguments to a command in an &lt;code&gt;exec&lt;/code&gt; directive, or otherwise include spaces in the command. Thus, while the following will work under a non-suexec configuration on unix, it will not produce the desired result under Win32, or when running suexec:</source>
          <target state="translated">さらに、Win32などの一部のプラットフォーム、および&lt;a href=&quot;../suexec&quot;&gt;suexec&lt;/a&gt;を使用するUNIXでは、 &lt;code&gt;exec&lt;/code&gt; ディレクティブでコマンドに引数を渡したり、コマンドにスペースを含めたりできません。 したがって、以下はunix上の非suexec構成で機能しますが、Win32で、またはsuexecを実行しているときに、望ましい結果を生成しません。</target>
        </trans-unit>
        <trans-unit id="73340fdad957cfbf97b861b0dedcb9eec3e42317" translate="yes" xml:space="preserve">
          <source>In addition, the administrator may optionally specify the &lt;strong&gt;precise point within the filter chain&lt;/strong&gt; where caching is to take place by adding the &lt;strong&gt;CACHE&lt;/strong&gt; filter to the output filter chain.</source>
          <target state="translated">さらに、管理者はオプションで、出力フィルターチェーンに&lt;strong&gt;CACHE&lt;/strong&gt;フィルターを追加することにより、キャッシュが行われる&lt;strong&gt;フィルターチェーン内&lt;/strong&gt;の&lt;strong&gt;正確なポイントを&lt;/strong&gt;指定できます。</target>
        </trans-unit>
        <trans-unit id="eda3cdf3fe5b5fea6621a5d3b4f2935a1ee95489" translate="yes" xml:space="preserve">
          <source>In all cases, once the shared module is compiled, you must use a &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; directive in &lt;code&gt;httpd.conf&lt;/code&gt; to tell Apache httpd to activate the module.</source>
          <target state="translated">すべての場合において、共有モジュールがコンパイルされたら、 &lt;code&gt;httpd.conf&lt;/code&gt; の &lt;code&gt;&lt;a href=&quot;mod/mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して、Apache httpdにモジュールをアクティブにするように指示する必要があります。</target>
        </trans-unit>
        <trans-unit id="c4558371caf3fed5f9a02531fa25b3ce9ff90dc3" translate="yes" xml:space="preserve">
          <source>In all cases, the user's ID will be passed as a single string parameter when the SQL query is executed. It may be referenced within the query statement using a &lt;code&gt;%s&lt;/code&gt; format specifier.</source>
          <target state="translated">すべての場合において、ユーザーのIDは、SQLクエリが実行されるときに単一の文字列パラメーターとして渡されます。 &lt;code&gt;%s&lt;/code&gt; 形式指定子を使用して、クエリステートメント内で参照できます。</target>
        </trans-unit>
        <trans-unit id="f3c8c99afdd1ebdd3bb3b6d70e030e237dd072e3" translate="yes" xml:space="preserve">
          <source>In all releases 2.4.5 through 2.4.20, setting &lt;code&gt;SSLProxyCheckPeerName off&lt;/code&gt; was sufficient to enable this behavior (as the &lt;code&gt;SSLProxyCheckPeerCN&lt;/code&gt; default was &lt;code&gt;on&lt;/code&gt;.) In these releases, both directives must be set to &lt;code&gt;off&lt;/code&gt; to completely avoid remote server certificate name validation. Many users reported this to be very confusing.</source>
          <target state="translated">すべてのリリース2.4.5から2.4.20では、 &lt;code&gt;SSLProxyCheckPeerName off&lt;/code&gt; に設定するだけでこの動作を有効にできました（ &lt;code&gt;SSLProxyCheckPeerCN&lt;/code&gt; のデフォルトは &lt;code&gt;on&lt;/code&gt; だったため）。これらのリリースでは、リモートサーバーの証明書名の検証を完全に回避するために両方のディレクティブを &lt;code&gt;off&lt;/code&gt; に設定する必要があります。 多くのユーザーがこれは非常に混乱すると報告しました。</target>
        </trans-unit>
        <trans-unit id="e54ca31d828adade36f797fafd7689c311d571c3" translate="yes" xml:space="preserve">
          <source>In almost every case, there's no reason to change that value.</source>
          <target state="translated">ほとんどの場合、その値を変更する理由はありません。</target>
        </trans-unit>
        <trans-unit id="2072696c6d4bfd538c9a5962d695a57da7bd26de" translate="yes" xml:space="preserve">
          <source>In both of these cases, the proper &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; should be set in the configuration file.</source>
          <target state="translated">どちらの場合も、構成ファイルで適切な &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="34c9e6c862046deab37984264be57151e8c57e0a" translate="yes" xml:space="preserve">
          <source>In case of Let's Encrypt, their current &lt;a href=&quot;https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf&quot;&gt;Terms of Service are here&lt;/a&gt;. Those terms might (and probably will) change over time. So, the certificate renewal might require you to update this agreement URL.</source>
          <target state="translated">Let's Encryptの場合、現在の&lt;a href=&quot;https://letsencrypt.org/documents/LE-SA-v1.2-November-15-2017.pdf&quot;&gt;利用規約はこちら&lt;/a&gt;です。 これらの用語は、時間とともに変化する可能性があります（おそらく変化するでしょう）。 そのため、証明書の更新では、この契約URLの更新が必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="7c4c16c291800d89b84d0e825a907201721f1f5b" translate="yes" xml:space="preserve">
          <source>In case of core dumps please include a Backtrace</source>
          <target state="translated">コアダンプの場合は、バックトレースを含めてください。</target>
        </trans-unit>
        <trans-unit id="c27797f6dfb2b1d4d28e3b72e7fc9a3df05e137c" translate="yes" xml:space="preserve">
          <source>In cases where the Apache server forms the frontend for backend origin servers, it is possible to have the session cookies removed from the incoming HTTP headers using the &lt;code&gt;&lt;a href=&quot;mod_session_cookie#sessioncookieremove&quot;&gt;SessionCookieRemove&lt;/a&gt;&lt;/code&gt; directive. This keeps the contents of the session cookies from becoming accessible from the backend server.</source>
          <target state="translated">Apacheサーバーがバックエンドオリジンサーバーのフロントエンドを形成している場合は、 &lt;code&gt;&lt;a href=&quot;mod_session_cookie#sessioncookieremove&quot;&gt;SessionCookieRemove&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して、受信HTTPヘッダーからセッションCookieを削除することができます。 これにより、セッションCookieのコンテンツがバックエンドサーバーからアクセスできなくなります。</target>
        </trans-unit>
        <trans-unit id="091a444a2fd4b2dc0601a1b9e131e1da6296d5b2" translate="yes" xml:space="preserve">
          <source>In conjunction with &lt;code&gt;Require dbd-login&lt;/code&gt; or &lt;code&gt;Require dbd-logout&lt;/code&gt;, this provides the option to redirect the client back to the Referring page (the URL in the &lt;code&gt;Referer&lt;/code&gt; HTTP request header, if present). When there is no &lt;code&gt;Referer&lt;/code&gt; header, &lt;code&gt;AuthzDBDLoginToReferer On&lt;/code&gt; will be ignored.</source>
          <target state="translated">&lt;code&gt;Require dbd-login&lt;/code&gt; または &lt;code&gt;Require dbd-logout&lt;/code&gt; とともに、これはクライアントを参照ページ（存在する場合は、 &lt;code&gt;Referer&lt;/code&gt; HTTPリクエストヘッダー内のURL）にリダイレクトするオプションを提供します。 &lt;code&gt;Referer&lt;/code&gt; ヘッダーがない場合、 &lt;code&gt;AuthzDBDLoginToReferer On&lt;/code&gt; は無視されます。</target>
        </trans-unit>
        <trans-unit id="e00a8dc4bc5e40a835337ada732985caa78e07d0" translate="yes" xml:space="preserve">
          <source>In contrast to setting &lt;code&gt;Link&lt;/code&gt; response headers via &lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt;, this directive will only take effect on HTTP/2 connections.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_headers&quot;&gt;mod_headers&lt;/a&gt;&lt;/code&gt; を介して &lt;code&gt;Link&lt;/code&gt; 応答ヘッダーを設定するのとは対照的に、このディレクティブはHTTP / 2接続でのみ有効になります。</target>
        </trans-unit>
        <trans-unit id="3e58074228e139925c880a677e170c2b74a43579" translate="yes" xml:space="preserve">
          <source>In contrast to the &lt;code&gt;host&lt;/code&gt; provider, this provider does not rely on reverse DNS lookups: it simply queries the DNS for the host name and allows a client if its IP matches. As a consequence, it will only work with host names, not domain names. However, as the reverse DNS is not used, it will work with clients which use a dynamic DNS service.</source>
          <target state="translated">&lt;code&gt;host&lt;/code&gt; プロバイダーとは対照的に、このプロバイダーは逆DNSルックアップに依存しません。単にホスト名をDNSに照会し、IPが一致する場合にクライアントを許可します。 結果として、ドメイン名ではなく、ホスト名でのみ機能します。 ただし、逆引きDNSは使用されないため、動的DNSサービスを使用するクライアントで動作します。</target>
        </trans-unit>
        <trans-unit id="3f6cd3c60ab9ad7539e1e9e79b475037fb500831" translate="yes" xml:space="preserve">
          <source>In contrast, the PATH_INFO that is appended to the URI before each rule reflects only the value of PATH_INFO before this round of mod_rewrite processing. As a consequence, if large portions of the URI are matched and copied into a substitution in multiple &lt;code&gt;RewriteRule&lt;/code&gt; directives, without regard for which parts of the URI came from the current PATH_INFO, the final URI may have multiple copies of PATH_INFO appended to it.</source>
          <target state="translated">対照的に、各ルールの前にURIに追加されるPATH_INFOは、このラウンドのmod_rewrite処理の前のPATH_INFOの値のみを反映します。 その結果、URIの大部分が一致し、複数の &lt;code&gt;RewriteRule&lt;/code&gt; ディレクティブの置換にコピーされた場合、URI のどの部分が現在のPATH_INFOからのものであるかに関係なく、最終的なURIにPATH_INFOの複数のコピーが追加されることがあります。</target>
        </trans-unit>
        <trans-unit id="a3d30b4141f0267015ae6cb56bc946aa2c248a91" translate="yes" xml:space="preserve">
          <source>In deciding what file to serve for a given request, httpd's default behavior is to take the URL-Path for the request (the part of the URL following the hostname and port) and add it to the end of the &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; specified in your configuration files. Therefore, the files and directories underneath the &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; make up the basic document tree which will be visible from the web.</source>
          <target state="translated">特定のリクエストに対応するファイルを決定する際、httpdのデフォルトの動作では、リクエストのURL-Path（ホスト名とポートに続くURLの部分）を取得し、構成ファイルで指定された &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; の最後に追加します。 したがって、 &lt;code&gt;&lt;a href=&quot;mod/core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; の下のファイルとディレクトリは、Webから表示される基本的なドキュメントツリーを構成します。</target>
        </trans-unit>
        <trans-unit id="b630d29aa93b02c4acfd00b229780cda308a7743" translate="yes" xml:space="preserve">
          <source>In deployments where connections can be considered reliable, this timer can be disabled by setting it to 0.</source>
          <target state="translated">接続が信頼できると考えられる配置では、このタイマーを 0 に設定することで無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="abb5d5e385d6976d59560292932121107598ee45" translate="yes" xml:space="preserve">
          <source>In deployments where servers are reached locally or over reliable connections only, the value might be decreased with 0 disabling any warmup phase altogether.</source>
          <target state="translated">サーバがローカルまたは信頼性の高い接続のみで到達する展開では、0でウォームアップフェーズを完全に無効にして値を下げることができます。</target>
        </trans-unit>
        <trans-unit id="c039cce227493be9af1597590f4d029092e16777" translate="yes" xml:space="preserve">
          <source>In each case, we add a &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; directive to ensure that any redirects issued by the backend are correctly passed on to the client.</source>
          <target state="translated">いずれの場合も、 &lt;code&gt;&lt;a href=&quot;../mod/mod_proxy#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; ディレクティブを追加して、バックエンドによって発行されたリダイレクトがクライアントに正しく渡されるようにします。</target>
        </trans-unit>
        <trans-unit id="6f60054e191d45da84dee11196aee6b0336865a0" translate="yes" xml:space="preserve">
          <source>In each of these cases, mod_rewrite rewrites the &lt;code&gt;REQUEST_URI&lt;/code&gt; either to a new URL, or to a filename.</source>
          <target state="translated">これらのいずれの場合でも、mod_rewriteは &lt;code&gt;REQUEST_URI&lt;/code&gt; を新しいURLまたはファイル名に書き換えます。</target>
        </trans-unit>
        <trans-unit id="6ad48c7d42ff39f7a52b20a3be9b2cd523b71dd7" translate="yes" xml:space="preserve">
          <source>In earlier versions of httpd, this effect typically required &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;, and the use of the &lt;code&gt;-f&lt;/code&gt; and &lt;code&gt;-d&lt;/code&gt; tests for file and directory existence. This now requires only one line of configuration.</source>
          <target state="translated">以前のバージョンのhttpdでは、この効果には通常、 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; が必要であり、ファイルとディレクトリの存在について &lt;code&gt;-f&lt;/code&gt; および &lt;code&gt;-d&lt;/code&gt; テストを使用する必要がありました。 これで必要な構成は1行だけです。</target>
        </trans-unit>
        <trans-unit id="00b49972a209cd1a8310d903afdc620bd0954e0f" translate="yes" xml:space="preserve">
          <source>In fact the module can be used to upgrade to other protocols, you can set the &lt;code&gt;upgrade&lt;/code&gt; parameter in the &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive to allow the module to accept other protocol. NONE means you bypass the check for the header but still upgrade to WebSocket. ANY means that &lt;code&gt;Upgrade&lt;/code&gt; will read in the request headers and use in the response &lt;code&gt;Upgrade&lt;/code&gt;</source>
          <target state="translated">実際、モジュールは他のプロトコルへのアップグレードに使用できます。モジュールが他のプロトコルを受け入れることができるように、 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; ディレクティブで &lt;code&gt;upgrade&lt;/code&gt; パラメータを設定できます。 NONEは、ヘッダーのチェックをバイパスしても、WebSocketにアップグレードすることを意味します。 ANYは、 &lt;code&gt;Upgrade&lt;/code&gt; がリクエストヘッダーを読み取り、レスポンス &lt;code&gt;Upgrade&lt;/code&gt; 使用することを意味します</target>
        </trans-unit>
        <trans-unit id="25b945f7818b3e3531664312a4b24710815b4f27" translate="yes" xml:space="preserve">
          <source>In general no, at least not unless you provide more details about the code location where Apache dumped core. What is usually always required in order to help you is a backtrace (see next question). Without this information it is mostly impossible to find the problem and help you in fixing it.</source>
          <target state="translated">一般的には、Apache がコアをダンプしたコードの場所についての詳細な情報を提供しない限り、 少なくともそうではありません。通常、あなたを助けるために必要なのはバックトレースです (次の質問を参照してください)。この情報がなければ、問題を見つけて修正に役立てることはほとんど不可能です。</target>
        </trans-unit>
        <trans-unit id="2baea62b8cb3752d298b9d081e0e7762be54450e" translate="yes" xml:space="preserve">
          <source>In general stat or forever is good for production, and stat or never for development.</source>
          <target state="translated">一般的に、生産にはstat or forever、開発にはstat or neverが良いとされています。</target>
        </trans-unit>
        <trans-unit id="697be94801903173f6c8047e2d77d2aed822d496" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;.htaccess&lt;/code&gt; files use the same syntax as the &lt;a href=&quot;../configuring#syntax&quot;&gt;main configuration files&lt;/a&gt;. What you can put in these files is determined by the &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; directive. This directive specifies, in categories, what directives will be honored if they are found in a &lt;code&gt;.htaccess&lt;/code&gt; file. If a directive is permitted in a &lt;code&gt;.htaccess&lt;/code&gt; file, the documentation for that directive will contain an Override section, specifying what value must be in &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; in order for that directive to be permitted.</source>
          <target state="translated">一般に、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルは&lt;a href=&quot;../configuring#syntax&quot;&gt;メインの構成ファイル&lt;/a&gt;と同じ構文を使用します 。 これらのファイルに何を入れることができるかは、 &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; ディレクティブによって決まります。 このディレクティブは、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルで見つかった場合にどのディレクティブが優先されるかをカテゴリで指定します。 ディレクティブが &lt;code&gt;.htaccess&lt;/code&gt; ファイルで許可されている場合、そのディレクティブのドキュメントにはOverrideセクションが含まれ、そのディレクティブを許可するために &lt;code&gt;&lt;a href=&quot;../mod/core#allowoverride&quot;&gt;AllowOverride&lt;/a&gt;&lt;/code&gt; に必要な値を指定します。</target>
        </trans-unit>
        <trans-unit id="45257c02acdfe1ed2671e10ba4940c09bd058d28" translate="yes" xml:space="preserve">
          <source>In general, &lt;code&gt;httpd&lt;/code&gt; should not be invoked directly, but rather should be invoked via &lt;code&gt;&lt;a href=&quot;apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; on Unix-based systems or &lt;a href=&quot;../platform/windows#winsvc&quot;&gt;as a service on Windows NT, 2000 and XP&lt;/a&gt; and &lt;a href=&quot;../platform/windows#wincons&quot;&gt;as a console application on Windows 9x and ME&lt;/a&gt;.</source>
          <target state="translated">一般に、 &lt;code&gt;httpd&lt;/code&gt; は直接呼び出すべきではなく、Unixベースのシステムでは &lt;code&gt;&lt;a href=&quot;apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; を介し&lt;a href=&quot;../platform/windows#winsvc&quot;&gt;て、&lt;/a&gt;またはWindows NT、2000、XPではサービス &lt;a href=&quot;../platform/windows#wincons&quot;&gt;として、Windows 9xおよびMEではコンソールアプリケーションとして&lt;/a&gt;呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="2e1041061b6ff96149c069d97dc60c9b283319f9" translate="yes" xml:space="preserve">
          <source>In general, access restriction directives apply to all access methods (&lt;code&gt;GET&lt;/code&gt;, &lt;code&gt;PUT&lt;/code&gt;, &lt;code&gt;POST&lt;/code&gt;, etc). This is the desired behavior in most cases. However, it is possible to restrict some methods, while leaving other methods unrestricted, by enclosing the directives in a &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; section.</source>
          <target state="translated">一般に、アクセス制限ディレクティブはすべてのアクセスメソッド（ &lt;code&gt;GET&lt;/code&gt; 、 &lt;code&gt;PUT&lt;/code&gt; 、 &lt;code&gt;POST&lt;/code&gt; など）に適用されます。 これは、ほとんどの場合に望ましい動作です。 ただし、ディレクティブを &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションで囲むことにより、他のメソッドを無制限にしたまま、一部のメソッドを制限することができます。</target>
        </trans-unit>
        <trans-unit id="2e66b2e555f57d87adaa9acc014d311307906125" translate="yes" xml:space="preserve">
          <source>In general, you should only use &lt;code&gt;.htaccess&lt;/code&gt; files when you don't have access to the main server configuration file. There is, for example, a common misconception that user authentication should always be done in &lt;code&gt;.htaccess&lt;/code&gt; files, and, in more recent years, another misconception that &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; directives must go in &lt;code&gt;.htaccess&lt;/code&gt; files. This is simply not the case. You can put user authentication configurations in the main server configuration, and this is, in fact, the preferred way to do things. Likewise, &lt;code&gt;mod_rewrite&lt;/code&gt; directives work better, in many respects, in the main server configuration.</source>
          <target state="translated">一般に、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルは、メインサーバーの設定ファイルにアクセスできない場合にのみ使用してください。 たとえば、ユーザー認証は常に &lt;code&gt;.htaccess&lt;/code&gt; ファイルで実行する必要があるという一般的な誤解があり、近年では、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; ディレクティブを.htaccessファイルに含める必要があるという別の誤解があります。 これは単にそうではありません。 ユーザー認証の設定をメインサーバーの設定に含めることができます。これは、実際には、望ましい方法です。 同様に、 &lt;code&gt;mod_rewrite&lt;/code&gt; ディレクティブは、メインサーバー構成で多くの点でよりよく機能します。</target>
        </trans-unit>
        <trans-unit id="d03cf0fc100b9f700ed211b54f6b37611b00bd75" translate="yes" xml:space="preserve">
          <source>In high traffic environments where keeping track of a session on a server is too resource intensive or inconvenient, the option exists to store the contents of the session within a cookie on the client browser instead.</source>
          <target state="translated">サーバー上のセッションを追跡することがリソースを消費しすぎたり、不便だったりする高トラフィック環境では、代わりにクライアントブラウザ上のクッキーの中にセッションの内容を保存するオプションが存在します。</target>
        </trans-unit>
        <trans-unit id="8a6719d1795c99a2a3bdd7f3da872fc78523b803" translate="yes" xml:space="preserve">
          <source>In httpd 2.4.32 and later, an optional &lt;em&gt;_RAW&lt;/em&gt; suffix may be added to &lt;em&gt;x509&lt;/em&gt; in a DN component, to suppress conversion of the attribute value to UTF-8. This must be placed after the index suffix (if any). For example, &lt;code&gt;SSL_SERVER_S_DN_OU_RAW&lt;/code&gt; or &lt;code&gt;SSL_SERVER_S_DN_OU_0_RAW&lt;/code&gt; could be used.</source>
          <target state="translated">httpd 2.4.32以降では、オプションの&lt;em&gt;_RAW&lt;/em&gt;サフィックスをDNコンポーネントの&lt;em&gt;x509&lt;/em&gt;に追加して、属性値のUTF-8への変換を抑制できます。 これは、インデックスサフィックス（存在する場合）の後に配置する必要があります。 たとえば、 &lt;code&gt;SSL_SERVER_S_DN_OU_RAW&lt;/code&gt; または &lt;code&gt;SSL_SERVER_S_DN_OU_0_RAW&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="33d09c19ef7d2b62797742c9ddba1def96167fc7" translate="yes" xml:space="preserve">
          <source>In its default configuration, Apache does not send the last modified date or content length HTTP headers on SSI pages, because these values are difficult to calculate for dynamic content. This can prevent your document from being cached, and result in slower perceived client performance. There are two ways to solve this:</source>
          <target state="translated">デフォルトの設定では、Apache は最終更新日やコンテンツ長の HTTP ヘッダを SSI ページに送信しません。これは、ドキュメントがキャッシュされないようにしたり、 クライアントのパフォーマンスを低下させたりする可能性があります。これを解決するには二つの方法があります。</target>
        </trans-unit>
        <trans-unit id="09711eb52e967a7ae7963f891033e002895aaedd" translate="yes" xml:space="preserve">
          <source>In its one parameter form, &lt;code&gt;Define&lt;/code&gt; is equivalent to passing the &lt;code&gt;-D&lt;/code&gt; argument to &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;. It can be used to toggle the use of &lt;code&gt;&lt;a href=&quot;#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; sections without needing to alter &lt;code&gt;-D&lt;/code&gt; arguments in any startup scripts.</source>
          <target state="translated">その1つのパラメーター形式では、 &lt;code&gt;Define&lt;/code&gt; は &lt;code&gt;-D&lt;/code&gt; 引数を &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; に渡すことと同等です。 起動スクリプトで &lt;code&gt;-D&lt;/code&gt; 引数を変更する必要なく、 &lt;code&gt;&lt;a href=&quot;#ifdefine&quot;&gt;&amp;lt;IfDefine&amp;gt;&lt;/a&gt;&lt;/code&gt; セクションの使用を切り替えるために使用できます。</target>
        </trans-unit>
        <trans-unit id="e0ef9989c73e0cf62cfbd0a3239c161e88fb7792" translate="yes" xml:space="preserve">
          <source>In many cases, &lt;a href=&quot;name-based&quot;&gt;name-based virtual hosts&lt;/a&gt; are more convenient, because they allow many virtual hosts to share a single address/port. See &lt;a href=&quot;name-based#namevip&quot;&gt;Name-based vs. IP-based Virtual Hosts&lt;/a&gt; to help you decide.</source>
          <target state="translated">多くの場合、 &lt;a href=&quot;name-based&quot;&gt;名前ベースの仮想ホスト&lt;/a&gt;は、多くの仮想ホストが単一のアドレス/ポートを共有できるため、より便利です。 決定に役立つ&lt;a href=&quot;name-based#namevip&quot;&gt;名前ベースの仮想ホスト&lt;/a&gt;とIPベースの仮想ホストを参照してください。</target>
        </trans-unit>
        <trans-unit id="021ee1575b413140effa382cf6666141d79beeb2" translate="yes" xml:space="preserve">
          <source>In many situations Apache httpd must construct a &lt;em&gt;self-referential&lt;/em&gt; URL -- that is, a URL that refers back to the same server. With &lt;code&gt;UseCanonicalName On&lt;/code&gt; Apache httpd will use the hostname and port specified in the &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; directive to construct the canonical name for the server. This name is used in all self-referential URLs, and for the values of &lt;code&gt;SERVER_NAME&lt;/code&gt; and &lt;code&gt;SERVER_PORT&lt;/code&gt; in CGIs.</source>
          <target state="translated">多くの場合、Apache httpdは&lt;em&gt;自己参照&lt;/em&gt; URL、つまり同じサーバーを&lt;em&gt;参照する&lt;/em&gt; URLを作成する必要があります。 Apacheで &lt;code&gt;UseCanonicalName On&lt;/code&gt; を使用すると、httpdは &lt;code&gt;&lt;a href=&quot;#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; ディレクティブで指定されたホスト名とポートを使用して、サーバーの正規名を構築します。 この名前は、すべての自己参照URL、およびCGIの &lt;code&gt;SERVER_NAME&lt;/code&gt; と &lt;code&gt;SERVER_PORT&lt;/code&gt; の値に使用されます。</target>
        </trans-unit>
        <trans-unit id="d99a1dbd5650335a2ecc8cf81593f079fd3971f2" translate="yes" xml:space="preserve">
          <source>In many situations Apache httpd must construct a &lt;em&gt;self-referential&lt;/em&gt; URL -- that is, a URL that refers back to the same server. With &lt;code&gt;UseCanonicalPhysicalPort On&lt;/code&gt;, Apache httpd will, when constructing the canonical port for the server to honor the &lt;code&gt;&lt;a href=&quot;#usecanonicalname&quot;&gt;UseCanonicalName&lt;/a&gt;&lt;/code&gt; directive, provide the actual physical port number being used by this request as a potential port. With &lt;code&gt;UseCanonicalPhysicalPort Off&lt;/code&gt;, Apache httpd will not ever use the actual physical port number, instead relying on all configured information to construct a valid port number.</source>
          <target state="translated">多くの場合、Apache httpdは&lt;em&gt;自己参照&lt;/em&gt; URL、つまり同じサーバーを&lt;em&gt;参照する&lt;/em&gt; URLを作成する必要があります。 &lt;code&gt;UseCanonicalPhysicalPort On&lt;/code&gt; を使用すると 、Apache httpdは、サーバーの正規ポートを構築して &lt;code&gt;&lt;a href=&quot;#usecanonicalname&quot;&gt;UseCanonicalName&lt;/a&gt;&lt;/code&gt; ディレクティブを受け入れるときに 、このリクエストで使用されている実際の物理ポート番号を潜在的なポートとして提供します。 &lt;code&gt;UseCanonicalPhysicalPort Off&lt;/code&gt; を使用すると、Apache httpdは実際の物理ポート番号を使用せず、構成されたすべての情報に基づいて有効なポート番号を構築します。</target>
        </trans-unit>
        <trans-unit id="d4884f4726e3896d0b3d8c930d06cedae1bec9cb" translate="yes" xml:space="preserve">
          <source>In many situations, it is more effective to specify an &lt;var&gt;&lt;a href=&quot;#ipaddr&quot;&gt;IPAddr&lt;/a&gt;&lt;/var&gt; in place of a &lt;var&gt;Hostname&lt;/var&gt; since a DNS lookup can be avoided. Name resolution in Apache httpd can take a remarkable deal of time when the connection to the name server uses a slow PPP link.</source>
          <target state="translated">多くの場合、DNSルックアップを回避できるため、 &lt;var&gt;Hostname&lt;/var&gt; 代わりに &lt;var&gt;&lt;a href=&quot;#ipaddr&quot;&gt;IPAddr&lt;/a&gt;&lt;/var&gt; を指定する方が効果的です。 ネームサーバーへの接続に低速のPPPリンクが使用されている場合、Apache httpdでの名前解決にかなりの時間がかかることがあります。</target>
        </trans-unit>
        <trans-unit id="cc01cd136923aaa99909cd029fa931891435b24b" translate="yes" xml:space="preserve">
          <source>In most cases, for a complete authentication and authorization configuration, &lt;code&gt;Require&lt;/code&gt; must be accompanied by &lt;code&gt;&lt;a href=&quot;mod_authn_core#authname&quot;&gt;AuthName&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_auth_digest#authdigestprovider&quot;&gt;AuthDigestProvider&lt;/a&gt;&lt;/code&gt; directives, and directives such as &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; (to define users and groups) in order to work correctly. Example:</source>
          <target state="translated">ほとんどの場合、完全な認証と承認の構成のために、正しく動作するためには、 &lt;code&gt;&lt;a href=&quot;mod_authn_core#authtype&quot;&gt;AuthType&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;mod_authn_core#authname&quot;&gt;AuthName&lt;/a&gt;&lt;/code&gt; 、 AuthType 、 &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;mod_auth_digest#authdigestprovider&quot;&gt;AuthDigestProvider&lt;/a&gt;&lt;/code&gt; ディレクティブ、および &lt;code&gt;&lt;a href=&quot;mod_authn_file#authuserfile&quot;&gt;AuthUserFile&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&quot;mod_authz_groupfile#authgroupfile&quot;&gt;AuthGroupFile&lt;/a&gt;&lt;/code&gt; などのディレクティブ （ユーザーとグループを定義するため）が必要です。 例：</target>
        </trans-unit>
        <trans-unit id="0bae8c4b2a496b979902faa85351654667f666fd" translate="yes" xml:space="preserve">
          <source>In older versions of the Apache server, &lt;code&gt;isapi-isa&lt;/code&gt; was the proper handler name, rather than &lt;code&gt;isapi-handler&lt;/code&gt;. As of 2.3 development versions of the Apache server, &lt;code&gt;isapi-isa&lt;/code&gt; is no longer valid. You will need to change your configuration to use &lt;code&gt;isapi-handler&lt;/code&gt; instead.</source>
          <target state="translated">古いバージョンのApacheサーバーでは、 &lt;code&gt;isapi-handler&lt;/code&gt; ではなく &lt;code&gt;isapi-isa&lt;/code&gt; が適切なハンドラー名でした。 Apacheサーバーの2.3開発バージョン以降、 &lt;code&gt;isapi-isa&lt;/code&gt; は無効になりました。 代わりに &lt;code&gt;isapi-handler&lt;/code&gt; を使用するように構成を変更する必要があります。</target>
        </trans-unit>
        <trans-unit id="6eda3448b6c380f197d9305938311284df8bbf4e" translate="yes" xml:space="preserve">
          <source>In order for &lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt; to manage files, it must be able to write to the directories and files under its control using the &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; under which Apache is running. New files created will also be owned by this &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt;. For this reason, it is important to control access to this account. The DAV repository is considered private to Apache; modifying files outside of Apache (for example using FTP or filesystem-level tools) should not be allowed.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_dav&quot;&gt;mod_dav&lt;/a&gt;&lt;/code&gt; がファイルを管理するには、Apacheが実行されている &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; を使用して、その制御下にあるディレクトリとファイルに書き込むことができる必要があります。 作成された新しいファイルも、この &lt;code&gt;&lt;a href=&quot;mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;mod_unixd#group&quot;&gt;Group&lt;/a&gt;&lt;/code&gt; が所有します 。 このため、このアカウントへのアクセスを制御することが重要です。 DAVリポジトリはApacheのプライベートと見なされます。 Apacheの外部でファイルを変更する（たとえば、FTPまたはファイルシステムレベルのツールを使用する）ことはできません。</target>
        </trans-unit>
        <trans-unit id="df8d00b49cd514e5113ca05b63db0092f34e3cd7" translate="yes" xml:space="preserve">
          <source>In order for sessions to be useful, it must be possible to share the contents of a session with external applications, and it must be possible for an external application to write a session of its own.</source>
          <target state="translated">セッションが有用であるためには、セッションの内容を外部アプリケーションと共有することが可能でなければならず、外部アプリケーションが独自のセッションを書くことが可能でなければなりません。</target>
        </trans-unit>
        <trans-unit id="8959d8c8ce0108363442113188cea70cb50fde0a" translate="yes" xml:space="preserve">
          <source>In order for the server to function properly, it absolutely needs to have two pieces of information about each virtual host: the &lt;code&gt;&lt;a href=&quot;mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; and at least one IP address that the server will bind and respond to. The above example does not include the IP address, so httpd must use DNS to find the address of &lt;code&gt;www.example.dom&lt;/code&gt;. If for some reason DNS is not available at the time your server is parsing its config file, then this virtual host &lt;strong&gt;will not be configured&lt;/strong&gt;. It won't be able to respond to any hits to this virtual host.</source>
          <target state="translated">サーバーが正しく機能するためには、各仮想ホストに関する2つの情報が絶対に必要です &lt;code&gt;&lt;a href=&quot;mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; と、サーバーがバインドして応答する少なくとも1つのIPアドレスです。 上記の例にはIPアドレスが含まれていないため、httpdはDNSを使用して &lt;code&gt;www.example.dom&lt;/code&gt; のアドレスを見つける必要があります。 何らかの理由でサーバーが&lt;strong&gt;構成&lt;/strong&gt;ファイルを解析しているときにDNSを使用できない場合、この仮想ホスト&lt;strong&gt;は構成されません&lt;/strong&gt; 。 この仮想ホストへのヒットには応答できません。</target>
        </trans-unit>
        <trans-unit id="99a5b6e209654188584fed0cfecd6ee077cef40a" translate="yes" xml:space="preserve">
          <source>In order to aid in debugging, the &lt;code&gt;&lt;a href=&quot;mod/mod_cgi#scriptlog&quot;&gt;ScriptLog&lt;/a&gt;&lt;/code&gt; directive allows you to record the input to and output from CGI scripts. This should only be used in testing - not for live servers. More information is available in the &lt;a href=&quot;mod/mod_cgi&quot;&gt;mod_cgi&lt;/a&gt; documentation.</source>
          <target state="translated">デバッグを支援するために、 &lt;code&gt;&lt;a href=&quot;mod/mod_cgi#scriptlog&quot;&gt;ScriptLog&lt;/a&gt;&lt;/code&gt; ディレクティブを使用すると、CGIスクリプトへの入力とCGIスクリプトからの出力を記録できます。 これはテストでのみ使用し、ライブサーバーでは使用しないでください。 詳細については、 &lt;a href=&quot;mod/mod_cgi&quot;&gt;mod_cgiの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="fde015a0edf7e0bb183372308f55e8ff606478a5" translate="yes" xml:space="preserve">
          <source>In order to allow both browsing the directories on an FTP server and downloading files, Apache looks at the request URL. If it looks like a directory, or contains wildcard characters (&quot;*?[{~&quot;), then it guesses that a listing is wanted instead of a download.</source>
          <target state="translated">FTP サーバ上のディレクトリの閲覧とファイルのダウンロードの両方を可能にするために、 Apache はリクエスト URL を見ます。ディレクトリのように見えたり、ワイルドカード文字 (&quot;*?[{~&quot;)が含まれていたりする場合は、ダウンロードではなくリストが必要だと推測します。</target>
        </trans-unit>
        <trans-unit id="68c7e2aa789d3de1bf13da87cc78db1c073ffc20" translate="yes" xml:space="preserve">
          <source>In order to avoid cross-site scripting issues, you should &lt;em&gt;always&lt;/em&gt; encode user supplied data.</source>
          <target state="translated">クロスサイトスクリプティングの問題を回避するために、 &lt;em&gt;常に&lt;/em&gt;ユーザー指定のデータをエンコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="920b465fa4b2d001ab582722210356eff8b5476c" translate="yes" xml:space="preserve">
          <source>In order to connect to a server, the client will first have to resolve the servername to an IP address - the location on the Internet where the server resides. Thus, in order for your web server to be reachable, it is necessary that the servername be in DNS.</source>
          <target state="translated">サーバーに接続するためには、クライアントはまず、サーバー名を IP アドレス(サーバーが存在するインターネット上の場所)に解決する必要があります。このように、ウェブサーバーが到達可能な状態にするためには、サーバー名がDNSにある必要があります。</target>
        </trans-unit>
        <trans-unit id="a71631f2787d20340427b5c42a6442f160b6516f" translate="yes" xml:space="preserve">
          <source>In order to effectively manage a web server, it is necessary to get feedback about the activity and performance of the server as well as any problems that may be occurring. The Apache HTTP Server provides very comprehensive and flexible logging capabilities. This document describes how to configure its logging capabilities, and how to understand what the logs contain.</source>
          <target state="translated">ウェブサーバを効果的に管理するためには、サーバの活動やパフォーマンス、発生している可能性のある問題についてのフィードバックを得る必要があります。Apache HTTP サーバは非常に包括的で柔軟なロギング機能を提供します。この文書では、ログ機能を設定する方法と、ログに何が含まれているかを理解する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="1f9ba6f7034a518fb9fdd31dbf26518fc96bfbcb" translate="yes" xml:space="preserve">
          <source>In order to get the functionality of (forward) proxying HTTPS sites, you need &lt;code&gt;&lt;a href=&quot;mod_proxy_connect&quot;&gt;mod_proxy_connect&lt;/a&gt;&lt;/code&gt; enabled in the server.</source>
          <target state="translated">（フォワード）プロキシHTTPSサイトの機能を取得するには、サーバーで &lt;code&gt;&lt;a href=&quot;mod_proxy_connect&quot;&gt;mod_proxy_connect&lt;/a&gt;&lt;/code&gt; を有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="5c31b76688f37ba31bf8b02efa8cd141a016af83" translate="yes" xml:space="preserve">
          <source>In order to get the functionality of proxying HTTP or FTP sites, you need also &lt;code&gt;&lt;a href=&quot;mod_proxy_http&quot;&gt;mod_proxy_http&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; (or both) present in the server.</source>
          <target state="translated">HTTPまたはFTPサイトのプロキシ機能を使用するには、サーバーに &lt;code&gt;&lt;a href=&quot;mod_proxy_http&quot;&gt;mod_proxy_http&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;mod_proxy_ftp&quot;&gt;mod_proxy_ftp&lt;/a&gt;&lt;/code&gt; （または両方）が存在する必要もあります。</target>
        </trans-unit>
        <trans-unit id="ad996e64a84829d9edba66cb0c59e49e7f91e980" translate="yes" xml:space="preserve">
          <source>In order to get your CGI programs to work properly, you'll need to have Apache configured to permit CGI execution. There are several ways to do this.</source>
          <target state="translated">CGI プログラムを正しく動作させるためには、CGI の実行を許可するように Apache を設定する必要があります。これにはいくつかの方法があります。</target>
        </trans-unit>
        <trans-unit id="405efbfef10475f0060b251d4913870ad17c2dcc" translate="yes" xml:space="preserve">
          <source>In order to give each user their own cgi-bin directory, you can use a &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; directive to make a particular subdirectory of a user's home directory cgi-enabled.</source>
          <target state="translated">各ユーザーに独自のcgi-binディレクトリを提供するために、 &lt;code&gt;&lt;a href=&quot;../mod/core#directory&quot;&gt;&amp;lt;Directory&amp;gt;&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して、ユーザーのホームディレクトリの特定のサブディレクトリをcgi対応にすることができます。</target>
        </trans-unit>
        <trans-unit id="b7155072499eaf421cc7e15352acfd02c4fc608c" translate="yes" xml:space="preserve">
          <source>In order to have two overlapping URLs one has to consider the order in which certain sections or directives are evaluated. For &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; this would be:</source>
          <target state="translated">2つの重複するURLを使用するには、特定のセクションまたはディレクティブが評価される順序を考慮する必要があります。 &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; の場合、これは次のようになります。</target>
        </trans-unit>
        <trans-unit id="dc43f34c97daaf25c08b57caf0d33e49ee47b551" translate="yes" xml:space="preserve">
          <source>In order to identify each request, a unique request ID is assigned. This forensic ID can be cross logged in the normal transfer log using the &lt;code&gt;%{forensic-id}n&lt;/code&gt; format string. If you're using &lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt;, its generated ID will be used.</source>
          <target state="translated">各リクエストを識別するために、一意のリクエストIDが割り当てられます。 このフォレンジックIDは、 &lt;code&gt;%{forensic-id}n&lt;/code&gt; 形式の文字列を使用して通常の転送ログにクロスログできます。 &lt;code&gt;&lt;a href=&quot;mod_unique_id&quot;&gt;mod_unique_id&lt;/a&gt;&lt;/code&gt; を使用している場合は、生成されたIDが使用されます。</target>
        </trans-unit>
        <trans-unit id="e5d258800d6528d9303221698013103d654592a6" translate="yes" xml:space="preserve">
          <source>In order to implement the handler features, an addition has been made to the &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/developer/API.html&quot;&gt;Apache API&lt;/a&gt; that you may wish to make use of. Specifically, a new record has been added to the &lt;code&gt;request_rec&lt;/code&gt; structure:</source>
          <target state="translated">ハンドラー機能を実装するために、 &lt;a href=&quot;https://httpd.apache.org/docs/2.4/en/developer/API.html&quot;&gt;Apache APIに&lt;/a&gt;追加したい機能が利用できます。 具体的には、新しいレコードが &lt;code&gt;request_rec&lt;/code&gt; 構造に追加されました。</target>
        </trans-unit>
        <trans-unit id="8f6f90f1fc95b8281d85a20118df47c39fbd6037" translate="yes" xml:space="preserve">
          <source>In order to implement virtual hosts, Apache needs to know the local socket address used to accept the connection. It is possible to eliminate this call in many situations (such as when there are no virtual hosts, or when &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; directives are used which do not have wildcard addresses). But no effort has yet been made to do these optimizations.</source>
          <target state="translated">仮想ホストを実装するために、Apacheは接続を受け入れるために使用されるローカルソケットアドレスを知る必要があります。 多くの状況（仮想ホストがない場合、またはワイルドカードアドレスを持たない &lt;code&gt;&lt;a href=&quot;../mod/mpm_common#listen&quot;&gt;Listen&lt;/a&gt;&lt;/code&gt; ディレクティブが使用されている場合など）で、この呼び出しを排除することが可能です。 しかし、これらの最適化を行うための取り組みはまだ行われていません。</target>
        </trans-unit>
        <trans-unit id="42116ec57a79e99e93910f8cc0e34c3252f137e6" translate="yes" xml:space="preserve">
          <source>In order to make &lt;code&gt;&lt;a href=&quot;mod_dav_lock&quot;&gt;mod_dav_lock&lt;/a&gt;&lt;/code&gt; functional, you just have to specify the location of the lock database using the &lt;code&gt;&lt;a href=&quot;#davgenericlockdb&quot;&gt;DavGenericLockDB&lt;/a&gt;&lt;/code&gt; directive described below.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;mod_dav_lock&quot;&gt;mod_dav_lock&lt;/a&gt;&lt;/code&gt; を機能させるには、以下で説明する &lt;code&gt;&lt;a href=&quot;#davgenericlockdb&quot;&gt;DavGenericLockDB&lt;/a&gt;&lt;/code&gt; ディレクティブを使用して、ロックデータベースの場所を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="cc6a6505f0442410da8b7c1e9cc74642f8dad06a" translate="yes" xml:space="preserve">
          <source>In order to negotiate a resource, the server needs to be given information about each of the variants. This is done in one of two ways:</source>
          <target state="translated">リソースをネゴシエートするために、サーバはそれぞれの variant についての情報を与えられる必要があります。これは二つの方法のうちの一つで行われます。</target>
        </trans-unit>
        <trans-unit id="d848212dfd971006c2548b65d9f89645c3f2ed06" translate="yes" xml:space="preserve">
          <source>In order to parse non-HTML content (stylesheets and scripts) embedded in HTML documents, &lt;code&gt;&lt;a href=&quot;mod_proxy_html&quot;&gt;mod_proxy_html&lt;/a&gt;&lt;/code&gt; has to read the entire script or stylesheet into a buffer. This buffer will be expanded as necessary to hold the largest script or stylesheet in a page, in increments of &lt;var&gt;bytes&lt;/var&gt; as set by this directive.</source>
          <target state="translated">HTMLドキュメントに埋め込まれた非HTMLコンテンツ（スタイルシートとスクリプト）を解析するために、 &lt;code&gt;&lt;a href=&quot;mod_proxy_html&quot;&gt;mod_proxy_html&lt;/a&gt;&lt;/code&gt; はスクリプトまたはスタイルシート全体をバッファーに読み込む必要があります。 このバッファは、このディレクティブで設定された &lt;var&gt;bytes&lt;/var&gt; で、ページ内の最大のスクリプトまたはスタイルシートを保持するために必要に応じて拡張されます。</target>
        </trans-unit>
        <trans-unit id="2758e000978706c9ae6bb10f35caec735dca4f3f" translate="yes" xml:space="preserve">
          <source>In order to retrieve the pointer to the locking provider function, you have to use the &lt;code&gt;ap_lookup_provider&lt;/code&gt; API with the arguments &lt;code&gt;dav-lock&lt;/code&gt;, &lt;code&gt;generic&lt;/code&gt;, and &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">ロックプロバイダー関数へのポインターを取得するには、引数 &lt;code&gt;dav-lock&lt;/code&gt; 、 &lt;code&gt;generic&lt;/code&gt; 、および &lt;code&gt;0&lt;/code&gt; を指定した &lt;code&gt;ap_lookup_provider&lt;/code&gt; APIを使用する必要があります 。</target>
        </trans-unit>
        <trans-unit id="4d6e10281641907b294d4b9863a25f9ef777e934" translate="yes" xml:space="preserve">
          <source>In order to reverse the meaning, all operators can be preceded by an exclamation mark (&lt;code&gt;!&lt;/code&gt;):</source>
          <target state="translated">意味を逆にするために、すべての演算子の前に感嘆符（ &lt;code&gt;!&lt;/code&gt; ）を付けることができます。</target>
        </trans-unit>
        <trans-unit id="7842656373114bfa9edd2eabb98289abebbe6fc6" translate="yes" xml:space="preserve">
          <source>In order to stop or restart the Apache HTTP Server, you must send a signal to the running &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; processes. There are two ways to send the signals. First, you can use the unix &lt;code&gt;kill&lt;/code&gt; command to directly send signals to the processes. You will notice many &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; executables running on your system, but you should not send signals to any of them except the parent, whose pid is in the &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt;. That is to say you shouldn't ever need to send signals to any process except the parent. There are four signals that you can send the parent: &lt;code&gt;&lt;a href=&quot;#term&quot;&gt;TERM&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#graceful&quot;&gt;USR1&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;#hup&quot;&gt;HUP&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;#gracefulstop&quot;&gt;WINCH&lt;/a&gt;&lt;/code&gt;, which will be described in a moment.</source>
          <target state="translated">Apache HTTP Serverを停止または再起動するには、実行中の &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; プロセスにシグナルを送信する必要があります。 信号を送信するには2つの方法があります。 まず、unix &lt;code&gt;kill&lt;/code&gt; コマンドを使用して、プロセスにシグナルを直接送信できます。 システム上で実行されている多くの &lt;code&gt;&lt;a href=&quot;programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 実行可能ファイルに気づくでしょうが、pidが &lt;code&gt;&lt;a href=&quot;mod/mpm_common#pidfile&quot;&gt;PidFile&lt;/a&gt;&lt;/code&gt; にある親以外のいずれにもシグナルを送信しないでください。 つまり、親以外のプロセスにシグナルを送信する必要はありません。 親に送信できる信号は4つあります： &lt;code&gt;&lt;a href=&quot;#term&quot;&gt;TERM&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#graceful&quot;&gt;USR1&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;#hup&quot;&gt;HUP&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;#gracefulstop&quot;&gt;WINCH&lt;/a&gt;&lt;/code&gt; です 。これらについては後で説明します。</target>
        </trans-unit>
        <trans-unit id="5c6b68cade8ef08b75d3fc9c2a14a503cef7d76e" translate="yes" xml:space="preserve">
          <source>In order to support OCSP Stapling when a particular server certificate is used, the certificate chain for that certificate must be configured. If it was not configured as part of enabling SSL, the AH02217 error will be issued when stapling is enabled, and an OCSP response will not be provided for clients using the certificate.</source>
          <target state="translated">特定のサーバ証明書が使用されている場合に OCSP Stapling をサポートするためには、その証明書の証明書チェーンを設定する必要があります。SSLの有効化の一部として設定されていない場合、ステープリングが有効化されたときにAH02217エラーが発生し、証明書を使用しているクライアントにはOCSPレスポンスが提供されません。</target>
        </trans-unit>
        <trans-unit id="31b7e0d498825e8db62cdc1d0321e2d580cb1ef3" translate="yes" xml:space="preserve">
          <source>In order to support advanced techniques (such as cookies or special URL-paths) to determine the user's preferred language, since httpd 2.0.47 &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; recognizes the &lt;a href=&quot;env&quot;&gt;environment variable&lt;/a&gt;&lt;code&gt;prefer-language&lt;/code&gt;. If it exists and contains an appropriate language tag, &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; will try to select a matching variant. If there's no such variant, the normal negotiation process applies.</source>
          <target state="translated">httpd 2.0.47 &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; が&lt;a href=&quot;env&quot;&gt;環境変数&lt;/a&gt; &lt;code&gt;prefer-language&lt;/code&gt; を認識するため、高度な手法（Cookieや特別なURLパスなど）をサポートしてユーザーの優先言語を決定するため。 存在し、適切な言語タグが含まれている場合、 &lt;code&gt;&lt;a href=&quot;mod/mod_negotiation&quot;&gt;mod_negotiation&lt;/a&gt;&lt;/code&gt; は一致するバリアントを選択しようとします。 そのようなバリアントがない場合は、通常の交渉プロセスが適用されます。</target>
        </trans-unit>
        <trans-unit id="9dc1f94679bc8b5f3fab996f5b5d3bd6eb411b0e" translate="yes" xml:space="preserve">
          <source>In order to use Anonymous Diffie-Hellman (ADH) ciphers, you must build OpenSSL with ``&lt;code&gt;-DSSL_ALLOW_ADH&lt;/code&gt;'', and then add ``&lt;code&gt;ADH&lt;/code&gt;'' into your &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Anonymous Diffie-Hellman（ADH）暗号を使用するには、「- &lt;code&gt;-DSSL_ALLOW_ADH&lt;/code&gt; 」を使用してOpenSSLを構築し、 &lt;code&gt;&lt;a href=&quot;../mod/mod_ssl#sslciphersuite&quot;&gt;SSLCipherSuite&lt;/a&gt;&lt;/code&gt; に 「 &lt;code&gt;ADH&lt;/code&gt; 」を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="1143ed26a36025fa3a6985b6e30f31874bc69808" translate="yes" xml:space="preserve">
          <source>In order to use another provider, you have to set the &lt;code&gt;flusher&lt;/code&gt; parameter in the &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; directive.</source>
          <target state="translated">別のプロバイダーを使用するには、 &lt;code&gt;&lt;a href=&quot;mod_proxy#proxypass&quot;&gt;ProxyPass&lt;/a&gt;&lt;/code&gt; ディレクティブで &lt;code&gt;flusher&lt;/code&gt; パラメーターを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b23f07135a529cfd84338192975a62591b3f4b26" translate="yes" xml:space="preserve">
          <source>In order to use this, you need to explicitly enable it on the server via</source>
          <target state="translated">これを使用するには、サーバ上で</target>
        </trans-unit>
        <trans-unit id="c81dc4a1976ea75193757dcda0c0751e2aad342b" translate="yes" xml:space="preserve">
          <source>In other cases, there may be a need to change the URL of a particular resource on every request, usually by adding a &quot;cachebuster&quot; string to the URL. If this content is declared cacheable by a server for a significant freshness lifetime, these entries can crowd out legitimate entries in a cache. While &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; provides a &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignoreurlsessionidentifiers&quot;&gt;CacheIgnoreURLSessionIdentifiers&lt;/a&gt;&lt;/code&gt; directive, this directive should be used with care to ensure that downstream proxy or browser caches aren't subjected to the same denial of service issue.</source>
          <target state="translated">他の場合では、通常は「キャッシュ無効化」文字列をURLに追加することにより、リクエストごとに特定のリソースのURLを変更する必要がある場合があります。 このコンテンツがかなりの鮮度存続期間の間サーバーによってキャッシュ可能であると宣言された場合、これらのエントリはキャッシュ内の正当なエントリを混雑させる可能性があります。 &lt;code&gt;&lt;a href=&quot;mod/mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;mod/mod_cache#cacheignoreurlsessionidentifiers&quot;&gt;CacheIgnoreURLSessionIdentifiers&lt;/a&gt;&lt;/code&gt; ディレクティブを提供しますが、このディレクティブは、ダウンストリームプロキシまたはブラウザキャッシュが同じサービス拒否の問題の影響を受けないように注意して使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="b28f34077bfdf358347ec677728e60ed47918395" translate="yes" xml:space="preserve">
          <source>In other words, just changing &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; to &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; will not have the same effect. At a minimum, you need to add &lt;code&gt;^&lt;/code&gt; to the beginning of the regular expression and add &lt;code&gt;(.*)$&lt;/code&gt; to the end, and add &lt;code&gt;$1&lt;/code&gt; to the end of the replacement.</source>
          <target state="translated">つまり、 &lt;code&gt;&lt;a href=&quot;#alias&quot;&gt;Alias&lt;/a&gt;&lt;/code&gt; を &lt;code&gt;&lt;a href=&quot;#aliasmatch&quot;&gt;AliasMatch&lt;/a&gt;&lt;/code&gt; に変更するだけでは同じ効果はありません。 少なくとも、正規表現の先頭に &lt;code&gt;^&lt;/code&gt; を追加し、末尾に &lt;code&gt;(.*)$&lt;/code&gt; を追加し、置換の最後に &lt;code&gt;$1&lt;/code&gt; を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="4221d5ac642b716eab4f5591f5dfd0a5d4759d07" translate="yes" xml:space="preserve">
          <source>In overriding the client IP, the module stores the list of intermediate hosts in a remoteip-proxy-ip-list note, which &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; can record using the &lt;code&gt;%{remoteip-proxy-ip-list}n&lt;/code&gt; format token. If the administrator needs to store this as an additional header, this same value can also be recording as a header using the directive &lt;code&gt;&lt;a href=&quot;#remoteipproxiesheader&quot;&gt;RemoteIPProxiesHeader&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">モジュールはクライアントIPを上書きする際に、 &lt;code&gt;&lt;a href=&quot;mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;%{remoteip-proxy-ip-list}n&lt;/code&gt; 形式のトークンを使用して記録できるremoteip-proxy-ip-listノートに中間ホストのリストを保存します。 管理者がこれを追加のヘッダーとして保存する必要がある場合、ディレクティブ &lt;code&gt;&lt;a href=&quot;#remoteipproxiesheader&quot;&gt;RemoteIPProxiesHeader&lt;/a&gt;&lt;/code&gt; を使用して、この同じ値をヘッダーとして記録することもできます。</target>
        </trans-unit>
        <trans-unit id="c8b1b9cf0952e2f31df101d3ad00ed473710fcc4" translate="yes" xml:space="preserve">
          <source>In particular, if you are creating an &lt;code&gt;Alias&lt;/code&gt; to a directory outside of your &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt;, you may need to explicitly permit access to the target directory.</source>
          <target state="translated">特に、 &lt;code&gt;&lt;a href=&quot;core#documentroot&quot;&gt;DocumentRoot&lt;/a&gt;&lt;/code&gt; の外部のディレクトリに &lt;code&gt;Alias&lt;/code&gt; を作成する場合は、ターゲットディレクトリへのアクセスを明示的に許可する必要がある場合があります。</target>
        </trans-unit>
        <trans-unit id="9733494e0aa979a912c30ffdc44926c4ba56c936" translate="yes" xml:space="preserve">
          <source>In particular, this module can leak sensitive information from the configuration directives of other Apache modules such as system paths, usernames/passwords, database names, etc. Therefore, this module should &lt;strong&gt;only&lt;/strong&gt; be used in a controlled environment and always with caution.</source>
          <target state="translated">特に、このモジュールは、システムパス、ユーザー名/パスワード、データベース名など、他のApacheモジュールの構成ディレクティブから機密情報を漏らす可能性があります。したがって、このモジュールは制御された環境で&lt;strong&gt;のみ&lt;/strong&gt;使用し、常に注意してください。</target>
        </trans-unit>
        <trans-unit id="c50411ba19e4294e2644e803621ac8e05f1c903a" translate="yes" xml:space="preserve">
          <source>In per-directory context (&lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;Directory&lt;/a&gt;&lt;/code&gt; and .htaccess), the &lt;em&gt;Pattern&lt;/em&gt; is matched against only a partial path, for example a request of &quot;/app1/index.html&quot; may result in comparison against &quot;app1/index.html&quot; or &quot;index.html&quot; depending on where the &lt;code&gt;RewriteRule&lt;/code&gt; is defined.</source>
          <target state="translated">ディレクトリごとのコンテキスト（ &lt;code&gt;&lt;a href=&quot;core#directory&quot;&gt;Directory&lt;/a&gt;&lt;/code&gt; および.htaccess）では、 &lt;em&gt;パターン&lt;/em&gt;は部分的なパスのみと照合されます。たとえば、「/ app1 / index.html」のリクエストは「app1 / index.html」または「index .html」は、 &lt;code&gt;RewriteRule&lt;/code&gt; が定義されている場所に応じて異なります。</target>
        </trans-unit>
        <trans-unit id="99717dc2b879de52cbaa60de973d0096aa114202" translate="yes" xml:space="preserve">
          <source>In per-directory context (i.e., within &lt;code&gt;.htaccess&lt;/code&gt; files and &lt;code&gt;Directory&lt;/code&gt; blocks), these rules are being applied after a URL has already been translated to a filename. Because of this, the URL-path that mod_rewrite initially compares &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives against is the full filesystem path to the translated filename with the current directories path (including a trailing slash) removed from the front.</source>
          <target state="translated">ディレクトリごとのコンテキスト（つまり、 &lt;code&gt;.htaccess&lt;/code&gt; ファイルと &lt;code&gt;Directory&lt;/code&gt; ブロック内）では、URLがすでにファイル名に変換された後にこれらのルールが適用されます。 このため、mod_rewriteが &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; ディレクティブを最初に比較するURLパスは、現在のディレクトリパス（末尾のスラッシュを含む）を先頭から削除した、変換されたファイル名への完全なファイルシステムパスです。</target>
        </trans-unit>
        <trans-unit id="98c4aea32efa0511d90c41a623ffa7a05d5540ec" translate="yes" xml:space="preserve">
          <source>In per-directory context, the URI each &lt;code&gt;RewriteRule&lt;/code&gt; compares against is the concatenation of the current values of the URI and PATH_INFO.</source>
          <target state="translated">ディレクトリごとのコンテキストでは、各 &lt;code&gt;RewriteRule&lt;/code&gt; が比較するURIは、URIとPATH_INFOの現在の値を連結したものです。</target>
        </trans-unit>
        <trans-unit id="300fba782c565c27ddf465d2d771b61ce854d02a" translate="yes" xml:space="preserve">
          <source>In practical terms, this means that the default will almost always be &lt;code&gt;&lt;a href=&quot;mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt;, as all modern operating systems support these two features.</source>
          <target state="translated">最新のオペレーティングシステムはすべてこれら2つの機能をサポートしているため、実際には、これはデフォルトがほぼ常に &lt;code&gt;&lt;a href=&quot;mod/event&quot;&gt;event&lt;/a&gt;&lt;/code&gt; であることを意味します。</target>
        </trans-unit>
        <trans-unit id="ad0a1741e99fa5f96001a7d1073a20e68a67d860" translate="yes" xml:space="preserve">
          <source>In practice only levels &lt;strong&gt;none&lt;/strong&gt; and &lt;strong&gt;require&lt;/strong&gt; are really interesting, because level &lt;strong&gt;optional&lt;/strong&gt; doesn't work with all servers and level &lt;strong&gt;optional_no_ca&lt;/strong&gt; is actually against the idea of authentication (but can be used to establish SSL test pages, etc.)</source>
          <target state="translated">レベル&lt;strong&gt;optional&lt;/strong&gt;はすべてのサーバーで機能せず、レベル&lt;strong&gt;optional_no_ca&lt;/strong&gt;は実際には認証の概念に反するため（ただし、SSLテストページの確立などに使用できます）、実際にはレベル&lt;strong&gt;none&lt;/strong&gt;および&lt;strong&gt;require&lt;/strong&gt;のみが本当に興味深い&lt;strong&gt;です&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit id="dc0ab17ef3f44a22cf0b8ad12e6b1210341c283a" translate="yes" xml:space="preserve">
          <source>In previous 2.3.x releases, the default was effectively to ignore LuaHook* directives from parent configuration sections.</source>
          <target state="translated">以前の2.3.xでは、デフォルトでは親設定セクションのLuaHook*ディレクティブを無視するようになっていました。</target>
        </trans-unit>
        <trans-unit id="aa11ab8a306b41071f151022755977ec2d567046" translate="yes" xml:space="preserve">
          <source>In releases prior to 2.4, this module did not take any action if any other handler was configured for a URL. This allows directory indexes to be served even when a &lt;code&gt;SetHandler&lt;/code&gt; directive is specified for an entire directory, but it can also result in some conflicts with modules such as &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">2.4より前のリリースでは、URLに対して他のハンドラーが構成されている場合、このモジュールは何のアクションも実行しませんでした。 これにより、ディレクトリ全体に &lt;code&gt;SetHandler&lt;/code&gt; ディレクティブが指定されている場合でもディレクトリインデックスを提供できますが、 &lt;code&gt;&lt;a href=&quot;mod_rewrite&quot;&gt;mod_rewrite&lt;/a&gt;&lt;/code&gt; などのモジュールとの競合が発生する可能性もあります。</target>
        </trans-unit>
        <trans-unit id="dc17b2aac0d9bf584f4c0aa53431a65d1503313c" translate="yes" xml:space="preserve">
          <source>In situations where Apache 2.x can ignore the contents of the file to be delivered -- for example, when serving static file content -- it normally uses the kernel sendfile support for the file if the OS supports the &lt;code&gt;sendfile(2)&lt;/code&gt; operation.</source>
          <target state="translated">Apache 2.xが配信されるファイルのコンテンツを無視できる状況（たとえば、静的ファイルコンテンツを提供する場合）では、OSが &lt;code&gt;sendfile(2)&lt;/code&gt; 操作をサポートしている場合、通常、ファイルのカーネルsendfileサポートを使用します。</target>
        </trans-unit>
        <trans-unit id="e628e148cdf08986cfa9f0ddc033c1780441240c" translate="yes" xml:space="preserve">
          <source>In situations where Apache 2.x needs to look at the contents of a file being delivered--for example, when doing server-side-include processing--it normally memory-maps the file if the OS supports some form of &lt;code&gt;mmap(2)&lt;/code&gt;.</source>
          <target state="translated">Apache 2.xが配信されるファイルの内容を確認する必要がある場合（たとえば、サーバーサイドインクルード処理を行う場合など）、OSが何らかの形式の &lt;code&gt;mmap(2)&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="d5386848866849fda31cf63f04299cd71f0cf4a2" translate="yes" xml:space="preserve">
          <source>In some circumstances, it is useful to be able to send a set of acceptable CA names which differs from the actual CAs used to verify the client certificate - for example, if the client certificates are signed by intermediate CAs. In such cases, &lt;code&gt;&lt;a href=&quot;#sslcadnrequestpath&quot;&gt;SSLCADNRequestPath&lt;/a&gt;&lt;/code&gt; and/or &lt;code&gt;&lt;a href=&quot;#sslcadnrequestfile&quot;&gt;SSLCADNRequestFile&lt;/a&gt;&lt;/code&gt; can be used; the acceptable CA names are then taken from the complete set of certificates in the directory and/or file specified by this pair of directives.</source>
          <target state="translated">状況によっては、クライアント証明書が中間CAによって署名されている場合など、クライアント証明書の検証に使用される実際のCAとは異なる、受け入れ可能なCA名のセットを送信できると便利です。 このような場合、 &lt;code&gt;&lt;a href=&quot;#sslcadnrequestpath&quot;&gt;SSLCADNRequestPath&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;#sslcadnrequestfile&quot;&gt;SSLCADNRequestFile&lt;/a&gt;&lt;/code&gt; を使用できます。 受け入れ可能なCA名は、このディレクティブのペアで指定されたディレクトリまたはファイル、あるいはその両方にある証明書の完全なセットから取得されます。</target>
        </trans-unit>
        <trans-unit id="a7f1a3e792d05cdf14f75d1a886444546b6cae90" translate="yes" xml:space="preserve">
          <source>In such scenarios, httpd itself does not generate or host the data, but rather the content is obtained by one or several backend servers, which normally have no direct connection to the external network. As httpd receives a request from a client, the request itself is &lt;em&gt;proxied&lt;/em&gt; to one of these backend servers, which then handles the request, generates the content and then sends this content back to httpd, which then generates the actual HTTP response back to the client.</source>
          <target state="translated">このようなシナリオでは、httpd自体はデータを生成またはホストしませんが、コンテンツは通常、外部ネットワークに直接接続されていない1つ以上のバックエンドサーバーによって取得されます。 httpdがクライアントからリクエストを受信すると、リクエスト自体がこれらのバックエンドサーバーの1つに&lt;em&gt;プロキシされ&lt;/em&gt;ます。これらのバックエンドサーバーはリクエストを処理し、コンテンツを生成してから、このコンテンツをhttpdに送り返し、実際のHTTP応答をクライアントに返します。 。</target>
        </trans-unit>
        <trans-unit id="3d881a7ff121abad262163b99962573ae2507b02" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;semiformatted&lt;/code&gt; menu, comments are printed where they occur in the imagemap file. Blank lines are turned into HTML breaks. No header or hrule is printed, but otherwise the menu is the same as a &lt;code&gt;formatted&lt;/code&gt; menu.</source>
          <target state="translated">&lt;code&gt;semiformatted&lt;/code&gt; メニューでは、コメントは、イメージマップファイル内で発生する場所に出力されます。 空白行はHTMLの改行になります。 ヘッダーやhruleは印刷されませんが、それ以外のメニューは &lt;code&gt;formatted&lt;/code&gt; れたメニューと同じです。</target>
        </trans-unit>
        <trans-unit id="c2947fce709df5603a75706378c2d960b5f04f0e" translate="yes" xml:space="preserve">
          <source>In the &lt;em&gt;balancer-manager&lt;/em&gt; the current state, or &lt;em&gt;status&lt;/em&gt;, of a worker is displayed and can be set/reset. The meanings of these statuses are as follows:</source>
          <target state="translated">&lt;em&gt;バランサーマネージャー&lt;/em&gt;では、ワーカーの現在の状態（ &lt;em&gt;status&lt;/em&gt; ）が表示され、設定/リセットできます。 これらのステータスの意味は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="6dc73e3e63c6dfb6b18d5a466dfa84edbd266157" translate="yes" xml:space="preserve">
          <source>In the Apache HTTP Server API, the handler is a specific kind of hook responsible for generating the response. Examples of modules that include a handler are &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">Apache HTTP Server APIでは、ハンドラーは応答の生成を担当する特定の種類のフックです。 ハンドラーを含むモジュールの例は、 &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;mod_cgi&quot;&gt;mod_cgi&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2ecdd8799a8937c2203f90faf90a7e654d32b1a6" translate="yes" xml:space="preserve">
          <source>In the above example, authentication will be required for the &lt;code&gt;/var/www/private&lt;/code&gt; directory, but will not be required for the &lt;code&gt;/var/www/private/public&lt;/code&gt; directory.</source>
          <target state="translated">上記の例では、認証は &lt;code&gt;/var/www/private&lt;/code&gt; ディレクトリーには必要ですが、 &lt;code&gt;/var/www/private/public&lt;/code&gt; ディレクトリーには必要ありません。</target>
        </trans-unit>
        <trans-unit id="dcb3d90dcf1d7734dd7d60c09fda6140e73000ab" translate="yes" xml:space="preserve">
          <source>In the above, any requests which start with the &lt;code&gt;/images&lt;/code&gt; path with be proxied to the specified backend, otherwise it will be handled locally.</source>
          <target state="translated">上記では、 &lt;code&gt;/images&lt;/code&gt; パスで始まるリクエストはすべて、指定されたバックエンドにプロキシされます。それ以外の場合、ローカルで処理されます。</target>
        </trans-unit>
        <trans-unit id="6f3574f7d6549778b2d9114d9913eb02806fd05c" translate="yes" xml:space="preserve">
          <source>In the below example, &lt;code&gt;-strmatch&lt;/code&gt; is used to compare the &lt;code&gt;REFERER&lt;/code&gt; against the site hostname, to block unwanted hotlinking.</source>
          <target state="translated">以下の例では、 &lt;code&gt;-strmatch&lt;/code&gt; を使用して &lt;code&gt;REFERER&lt;/code&gt; をサイトのホスト名と比較し、不要なホットリンクをブロックしています。</target>
        </trans-unit>
        <trans-unit id="7e143fa7f0b573ce250e9c837cbab019682fd810" translate="yes" xml:space="preserve">
          <source>In the case of &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; directives, in &lt;code&gt;.htaccess&lt;/code&gt; context these regular expressions must be re-compiled with every request to the directory, whereas in main server configuration context they are compiled once and cached. Additionally, the rules themselves are more complicated, as one must work around the restrictions that come with per-directory context and &lt;code&gt;mod_rewrite&lt;/code&gt;. Consult the &lt;a href=&quot;../rewrite/intro#htaccess&quot;&gt;Rewrite Guide&lt;/a&gt; for more detail on this subject.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; ディレクティブの場合、 &lt;code&gt;.htaccess&lt;/code&gt; コンテキストでは、これらの正規表現はディレクトリへのリクエストごとに再コンパイルする必要がありますが、メインサーバー構成コンテキストでは一度コンパイルしてキャッシュします。 さらに、ディレクトリごとのコンテキストと &lt;code&gt;mod_rewrite&lt;/code&gt; に伴う制限を回避する必要があるため、ルール自体はより複雑になります。 この問題の詳細については、 &lt;a href=&quot;../rewrite/intro#htaccess&quot;&gt;書き換えガイド&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="59b4dae3ffaebd82037571136a9659fe4296595a" translate="yes" xml:space="preserve">
          <source>In the case of Unix, the decision as to which MPM is installed is based on two questions:</source>
          <target state="translated">Unixの場合、どのMPMがインストールされているかは2つの質問に基づいて決定されます。</target>
        </trans-unit>
        <trans-unit id="bb84611880b49e28cc8c529093a6da6e9e2ebbf4" translate="yes" xml:space="preserve">
          <source>In the case of a content negotiated via the &quot;Vary&quot; header, a &quot;.vary&quot; directory will be created for the URL in question. This directory will have multiple &quot;.data&quot; files corresponding to the differently negotiated content.</source>
          <target state="translated">Vary&quot; ヘッダーでネゴシエートされたコンテンツの場合、問題の URL に対して &quot;.various&quot; ディレクトリが作成されます。このディレクトリには、異なるネゴシエートされたコンテンツに対応する複数の &quot;.data&quot; ファイルが作成されます。</target>
        </trans-unit>
        <trans-unit id="8230ddde0cf4c04b5829eed34deff59370c2ba54" translate="yes" xml:space="preserve">
          <source>In the case of multiple least-busy workers, the statistics (and weightings) used by the Request Counting method are used to break the tie. Over time, the distribution of work will come to resemble that characteristic of &lt;code&gt;byrequests&lt;/code&gt; (as implemented by &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt;).</source>
          <target state="translated">複数の最小ビジーワーカーの場合、Request Countingメソッドで使用される統計（および重み付け）は、同点を打破するために使用されます。 時間の経過とともに、作業の分散は、 &lt;code&gt;byrequests&lt;/code&gt; （ &lt;code&gt;&lt;a href=&quot;mod_lbmethod_byrequests&quot;&gt;mod_lbmethod_byrequests&lt;/a&gt;&lt;/code&gt; によって実装される ）の特性に似たものになります。</target>
        </trans-unit>
        <trans-unit id="0eaae951f3a99f65207fb845e72b2693ac80edd7" translate="yes" xml:space="preserve">
          <source>In the case of the &lt;em&gt;http-to-https&lt;/em&gt; redirection, the use of &lt;code&gt;RewriteRule&lt;/code&gt; would be appropriate if you don't have access to the main server configuration file, and are obliged to perform this task in a &lt;code&gt;.htaccess&lt;/code&gt; file instead.</source>
          <target state="translated">&lt;em&gt;httpからhttpsへの&lt;/em&gt;リダイレクトの場合、メインサーバーの構成ファイルにアクセスできず、代わりに &lt;code&gt;.htaccess&lt;/code&gt; ファイルでこのタスクを実行する必要がある場合は、 &lt;code&gt;RewriteRule&lt;/code&gt; の使用が適切です。</target>
        </trans-unit>
        <trans-unit id="fbeba7cd23dd1ed29f7d8c31521aa0935a9915ed" translate="yes" xml:space="preserve">
          <source>In the current implementation, these workers use a separate thread pool from the MPM workers that you might be familiar with. This is just how things are right now and not intended to be like this forever. (It might be forever for the 2.4.x release line, though.) So, HTTP/2 workers, or shorter H2Workers, will not show up in &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt;. They are also not counted against directives such as &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt;. However they take &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; as default if you have not configured something else via &lt;code&gt;&lt;a href=&quot;#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;#h2maxworkers&quot;&gt;H2MaxWorkers&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">現在の実装では、これらのワーカーは、使い慣れたMPMワーカーとは別のスレッドプールを使用します。 これは現在の状態であり、永遠にこのようになることを意図したものではありません。 （ただし、2.4.xリリースラインでは永久に続く可能性があります。）したがって、HTTP / 2ワーカー、またはより短いH2Workersは &lt;code&gt;&lt;a href=&quot;mod_status&quot;&gt;mod_status&lt;/a&gt;&lt;/code&gt; に表示されません。 また、 &lt;code&gt;&lt;a href=&quot;mpm_common#threadsperchild&quot;&gt;ThreadsPerChild&lt;/a&gt;&lt;/code&gt; などのディレクティブに対してもカウントされません。 ただし、 &lt;code&gt;&lt;a href=&quot;#h2minworkers&quot;&gt;H2MinWorkers&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;#h2maxworkers&quot;&gt;H2MaxWorkers&lt;/a&gt;&lt;/code&gt; を介して他に何かを構成していない場合、それらはThreadsPerChildをデフォルトとして使用します。</target>
        </trans-unit>
        <trans-unit id="dc2b0eefa3c7eb6de87e6830b2362d7e4bd6aad8" translate="yes" xml:space="preserve">
          <source>In the default configuration, &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; inserts the caching filter as far forward as possible within the filter stack, utilising the &lt;strong&gt;quick handler&lt;/strong&gt; to bypass all per request processing when returning content to the client. In this mode of operation, &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; may be thought of as a caching proxy server bolted to the front of the webserver, while running within the webserver itself.</source>
          <target state="translated">デフォルトの設定では、 &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; はキャッシュフィルターをフィルタースタック内で可能な限り前方に挿入し、クライアントにコンテンツを返すときに、 &lt;strong&gt;クイックハンドラー&lt;/strong&gt;を使用してすべての要求ごとの処理をバイパスします。 この動作モードでは、 &lt;code&gt;&lt;a href=&quot;mod_cache&quot;&gt;mod_cache&lt;/a&gt;&lt;/code&gt; は、Webサーバー自体の中で実行されているときに、Webサーバーの前面にボルトで固定されたキャッシングプロキシサーバーと考えることができます。</target>
        </trans-unit>
        <trans-unit id="52730053baed86ecacf713e9592c908cd9ae15a5" translate="yes" xml:space="preserve">
          <source>In the default enabled configuration, the cache operates within the quick handler phase. This phase short circuits the majority of server processing, and represents the most performant mode of operation for a typical server. The cache &lt;strong&gt;bolts onto&lt;/strong&gt; the front of the server, and the majority of server processing is avoided.</source>
          <target state="translated">デフォルトで有効になっている構成では、キャッシュはクイックハンドラフェーズ内で動作します。 このフェーズでは、サーバー処理の大部分が短絡され、一般的なサーバーで最もパフォーマンスの高い操作モードを表します。 キャッシュはサーバーの前面に&lt;strong&gt;ボルトで固定され&lt;/strong&gt; 、サーバー処理の大部分が回避されます。</target>
        </trans-unit>
        <trans-unit id="100b5585f2c76516c603381664553d30ac617200" translate="yes" xml:space="preserve">
          <source>In the directory &lt;code&gt;/www/htdocs/example1/example2&lt;/code&gt; we have a &lt;code&gt;.htaccess&lt;/code&gt; file containing:</source>
          <target state="translated">ディレクトリ &lt;code&gt;/www/htdocs/example1/example2&lt;/code&gt; には、 以下を含む &lt;code&gt;.htaccess&lt;/code&gt; ファイルがあります。</target>
        </trans-unit>
        <trans-unit id="ef2f4f6fc9f22164e7b7882f142832c95b7f72d5" translate="yes" xml:space="preserve">
          <source>In the directory &lt;code&gt;/www/htdocs/example1&lt;/code&gt; we have a &lt;code&gt;.htaccess&lt;/code&gt; file containing the following:</source>
          <target state="translated">ディレクトリ &lt;code&gt;/www/htdocs/example1&lt;/code&gt; には、以下を含む &lt;code&gt;.htaccess&lt;/code&gt; ファイルがあります。</target>
        </trans-unit>
        <trans-unit id="dd5da14321d9036ef6d866f52249c1a35c22a2a9" translate="yes" xml:space="preserve">
          <source>In the event of a problem or error, Apache httpd can be configured to do one of four things,</source>
          <target state="translated">問題やエラーが発生した場合、Apache httpd は以下の 4 つのことを行うように設定することができます。</target>
        </trans-unit>
        <trans-unit id="67fbbbfcb292e56c0b7ba95c9b1dddbca04001c4" translate="yes" xml:space="preserve">
          <source>In the event of problems you can:</source>
          <target state="translated">問題が発生した場合、あなたはすることができます。</target>
        </trans-unit>
        <trans-unit id="4b368a86e6901ee79f40f56f029be3115bb0366b" translate="yes" xml:space="preserve">
          <source>In the event that a document does not provide an expiry date but does provide a last-modified date, an expiry date can be calculated based on the time since the document was last modified. The &lt;code&gt;CacheLastModifiedFactor&lt;/code&gt; directive specifies a &lt;var&gt;factor&lt;/var&gt; to be used in the generation of this expiry date according to the following formula: &lt;code&gt;expiry-period = time-since-last-modified-date * factor expiry-date = current-date + expiry-period&lt;/code&gt; For example, if the document was last modified 10 hours ago, and &lt;var&gt;factor&lt;/var&gt; is 0.1 then the expiry-period will be set to 10*0.1 = 1 hour. If the current time was 3:00pm then the computed expiry-date would be 3:00pm + 1hour = 4:00pm. If the expiry-period would be longer than that set by &lt;code&gt;CacheMaxExpire&lt;/code&gt;, then the latter takes precedence.</source>
          <target state="translated">ドキュメントに有効期限はなく、最終更新日が指定されている場合、ドキュメントが最後に変更されてからの時間に基づいて有効期限を計算できます。 &lt;code&gt;CacheLastModifiedFactor&lt;/code&gt; ディレクティブは、次の式に従って、この有効期限の生成に使用される &lt;var&gt;factor&lt;/var&gt; を指定します。expiry &lt;code&gt;expiry-period = time-since-last-modified-date * factor expiry-date = current-date + expiry-period&lt;/code&gt; たとえば、 、ドキュメントの最終変更が10時間前で、 &lt;var&gt;factor&lt;/var&gt; が0.1の場合、expiry-periodは10 * 0.1 = 1時間に設定されます。 現在の時刻が午後3時の場合、計算される有効期限は午後3時+ 1時間=午後4時になります。 有効期限が &lt;code&gt;CacheMaxExpire&lt;/code&gt; で設定された期間よりも長い場合は、後者が優先されます。</target>
        </trans-unit>
        <trans-unit id="5a95c2c129b65ecd0f60da8cd983ef92767c0e08" translate="yes" xml:space="preserve">
          <source>In the event that the URL space overlaps between different &lt;code&gt;CacheEnable&lt;/code&gt; directives (as in the example below), each possible storage manager will be run until the first one that actually processes the request. The order in which the storage managers are run is determined by the order of the &lt;code&gt;CacheEnable&lt;/code&gt; directives in the configuration file. &lt;code&gt;CacheEnable&lt;/code&gt; directives within &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;LocationMatch&amp;gt;&lt;/code&gt; sections are processed before globally defined &lt;code&gt;CacheEnable&lt;/code&gt; directives.</source>
          <target state="translated">URLスペースが異なる &lt;code&gt;CacheEnable&lt;/code&gt; ディレクティブ間で重複する場合（以下の例のように）、可能なストレージマネージャーはそれぞれ、実際にリクエストを処理する最初のマネージャーまで実行されます。 ストレージマネージャが実行される順序は、構成ファイル内の &lt;code&gt;CacheEnable&lt;/code&gt; ディレクティブの順序によって決まります。 &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; または &lt;code&gt;&amp;lt;LocationMatch&amp;gt;&lt;/code&gt; セクション内の &lt;code&gt;CacheEnable&lt;/code&gt; ディレクティブは、グローバルに定義された &lt;code&gt;CacheEnable&lt;/code&gt; ディレクティブの前に処理されます。</target>
        </trans-unit>
        <trans-unit id="900cc283d2bca00ba4d16994876ca9e426139790" translate="yes" xml:space="preserve">
          <source>In the example above, &lt;code&gt;&lt;a href=&quot;#allowoverride&quot;&gt;AllowOverride &lt;/a&gt;&lt;/code&gt; grants permission to the &lt;code&gt;AuthConfig&lt;/code&gt; directive grouping and &lt;code&gt;AllowOverrideList&lt;/code&gt; grants permission to only two directives from the &lt;code&gt;FileInfo&lt;/code&gt; directive grouping. All others will cause an internal server error.</source>
          <target state="translated">上記の例では、 &lt;code&gt;&lt;a href=&quot;#allowoverride&quot;&gt;AllowOverride &lt;/a&gt;&lt;/code&gt; は &lt;code&gt;AuthConfig&lt;/code&gt; ディレクティブグループに権限を付与し、 AllowOverrideListは &lt;code&gt;FileInfo&lt;/code&gt; ディレクティブグループからの2つのディレクティブのみに権限を付与します。 他のすべては内部サーバーエラーを引き起こします。</target>
        </trans-unit>
        <trans-unit id="1e102f773efcad198bfd61da7c574bbd172bcecb" translate="yes" xml:space="preserve">
          <source>In the example above, all directives that are neither in the group &lt;code&gt;AuthConfig&lt;/code&gt; nor &lt;code&gt;Indexes&lt;/code&gt; cause an internal server error.</source>
          <target state="translated">上記の例では、 &lt;code&gt;AuthConfig&lt;/code&gt; グループにも &lt;code&gt;Indexes&lt;/code&gt; グループにもないすべてのディレクティブにより、内部サーバーエラーが発生します。</target>
        </trans-unit>
        <trans-unit id="e6da71583d9512b62f779e33e33bb2bc192c6835" translate="yes" xml:space="preserve">
          <source>In the example above, both &lt;code&gt;www.example.com&lt;/code&gt; as well as &lt;code&gt;www.sub.example.com&lt;/code&gt; or &lt;code&gt;example.com&lt;/code&gt; will all point to &lt;code&gt;/usr/local/apache/vhosts/example.com&lt;/code&gt;.</source>
          <target state="translated">上記の例では、 &lt;code&gt;www.example.com&lt;/code&gt; と &lt;code&gt;www.sub.example.com&lt;/code&gt; または &lt;code&gt;example.com&lt;/code&gt; の両方が &lt;code&gt;/usr/local/apache/vhosts/example.com&lt;/code&gt; をポイントしています。</target>
        </trans-unit>
        <trans-unit id="5f0507498a6b6a21ce268e9d0518276e1e9cc5d5" translate="yes" xml:space="preserve">
          <source>In the example above, only the &lt;code&gt;Redirect&lt;/code&gt; and &lt;code&gt;RedirectMatch&lt;/code&gt; directives are allowed. All others will cause an internal server error.</source>
          <target state="translated">上記の例では、 &lt;code&gt;Redirect&lt;/code&gt; および &lt;code&gt;RedirectMatch&lt;/code&gt; ディレクティブのみが許可されています。 他のすべては内部サーバーエラーを引き起こします。</target>
        </trans-unit>
        <trans-unit id="e25870d2b8ad8f07fef85df61f1063089b80c266" translate="yes" xml:space="preserve">
          <source>In the example below, &lt;code&gt;RewriteBase&lt;/code&gt; is necessary to avoid rewriting to http://example.com/opt/myapp-1.2.3/welcome.html since the resource was not relative to the document root. This misconfiguration would normally cause the server to look for an &quot;opt&quot; directory under the document root.</source>
          <target state="translated">以下の例では、リソースがドキュメントルートに関連していないため、http： &lt;code&gt;RewriteBase&lt;/code&gt; への書き換えを回避するためにRewriteBaseが必要です。 この設定ミスにより、通常、サーバーはドキュメントルートの下の「opt」ディレクトリを検索します。</target>
        </trans-unit>
        <trans-unit id="37eabe7fa8e9c0fa2738d5f1dba0c2fca070d31d" translate="yes" xml:space="preserve">
          <source>In the example below, any request for an image file will be proxied to your dedicated image server. The match is case-insensitive, so that &lt;code&gt;.jpg&lt;/code&gt; and &lt;code&gt;.JPG&lt;/code&gt; files are both acceptable, for example.</source>
          <target state="translated">以下の例では、画像ファイルのリクエストはすべて専用の画像サーバーにプロキシされます。 一致では大文字と小文字が区別されないため、たとえば、 &lt;code&gt;.jpg&lt;/code&gt; ファイルと &lt;code&gt;.JPG&lt;/code&gt; ファイルはどちらも受け入れ可能です。</target>
        </trans-unit>
        <trans-unit id="764e7bbf6937273b4df357da0d2255518112f817" translate="yes" xml:space="preserve">
          <source>In the example below, where a trailing slash is used, requests to /private2/ and /private2/file.txt will have the enclosed directives applied, but /private2 and /private2other would not.</source>
          <target state="translated">以下の例では、末尾のスラッシュが使用されている場合、private2 と private2file.txt へのリクエストには同封のディレクティブが適用されますが、private2 と private2other へのリクエストには適用されません。</target>
        </trans-unit>
        <trans-unit id="b0198fe34b25825a466cbdf29c555e4d9b0e1b3d" translate="yes" xml:space="preserve">
          <source>In the example below, where no trailing slash is used, requests to /private1, /private1/ and /private1/file.txt will have the enclosed directives applied, but /private1other would not.</source>
          <target state="translated">以下の例では、末尾にスラッシュが使用されていない場合、private1、private1、private1file.txt へのリクエストには同封のディレクティブが適用されますが、private1other へのリクエストには適用されません。</target>
        </trans-unit>
        <trans-unit id="c46df073f2808b07c8496be238868eb14a60f437" translate="yes" xml:space="preserve">
          <source>In the example give, the rule doesn't rewrite the request. The &quot;-&quot; rewrite target tells mod_rewrite to pass the request through unchanged. Instead, it sets a cookie called 'frontdoor' to a value of 'yes'. The cookie is valid for any host in the &lt;code&gt;.example.com&lt;/code&gt; domain. It is set to expire in 1440 minutes (24 hours) and is returned for all URIs.</source>
          <target state="translated">与えられた例では、ルールはリクエストを書き換えません。 「-」リライトターゲットは、mod_rewriteにリクエストを変更せずに渡すように指示します。 代わりに、「frontdoor」というCookieを「yes」の値に設定します。 Cookieは &lt;code&gt;.example.com&lt;/code&gt; ドメインのすべてのホストで有効です。 1440分（24時間）で期限切れになるように設定されており、すべてのURIに対して返されます。</target>
        </trans-unit>
        <trans-unit id="65e94a226bc947d105d8b97ce676b1f28fa38f5b" translate="yes" xml:space="preserve">
          <source>In the example given with &lt;code&gt;&lt;a href=&quot;#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt;, the directive:</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#proxypassreverse&quot;&gt;ProxyPassReverse&lt;/a&gt;&lt;/code&gt; で指定した例では、ディレクティブは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="c793ddb391799f9676ebb0bda0f5850fa7bbf098" translate="yes" xml:space="preserve">
          <source>In the first example, the &lt;code&gt;User-agent&lt;/code&gt; will be logged if the HTTP status code is 400 or 501. In other cases, a literal &quot;-&quot; will be logged instead. Likewise, in the second example, the &lt;code&gt;Referer&lt;/code&gt; will be logged if the HTTP status code is &lt;strong&gt;not&lt;/strong&gt; 200, 204, or 302. (Note the &quot;!&quot; before the status codes.</source>
          <target state="translated">最初の例では、HTTPステータスコードが400または501の場合、 &lt;code&gt;User-agent&lt;/code&gt; がログに記録されます。それ以外の場合は、代わりにリテラル「-」がログに記録されます。 同様に、2番目の例では、HTTPステータスコードが200、204、または302で&lt;strong&gt;ない&lt;/strong&gt;場合、 &lt;code&gt;Referer&lt;/code&gt; がログに記録されます（ステータスコードの前の「！」に注意してください）。</target>
        </trans-unit>
        <trans-unit id="81da996241c2f8b4480bd0dcf977960fd76b8a52" translate="yes" xml:space="preserve">
          <source>In the first form, &lt;var&gt;address&lt;/var&gt; is a fully qualified domain name (or a partial domain name); you may provide multiple addresses or domain names, if desired.</source>
          <target state="translated">最初の形式では、 &lt;var&gt;address&lt;/var&gt; は完全修飾ドメイン名（または部分的なドメイン名）です。 必要に応じて、複数のアドレスまたはドメイン名を指定できます。</target>
        </trans-unit>
        <trans-unit id="468705e5865cd020268ebfd34fcd3498418ccce4" translate="yes" xml:space="preserve">
          <source>In the first form, documents will be declared as HTML 4.01 or XHTML 1.0 according to the option selected. This option also determines whether HTML or XHTML syntax is used for output. Note that the format of the documents coming from the backend server is immaterial: the parser will deal with it automatically. If the optional second argument is set to &lt;code&gt;Legacy&lt;/code&gt;, documents will be declared &quot;Transitional&quot;, an option that may be necessary if you are proxying pre-1998 content or working with defective authoring/publishing tools.</source>
          <target state="translated">最初の形式では、選択したオプションに応じて、ドキュメントはHTML 4.01またはXHTML 1.0として宣言されます。 このオプションは、出力にHTMLまたはXHTML構文のどちらを使用するかも決定します。 バックエンドサーバーから送信されるドキュメントの形式は重要ではないことに注意してください。パーサーが自動的に処理します。 オプションの2番目の引数が &lt;code&gt;Legacy&lt;/code&gt; に設定されている場合、ドキュメントは &quot;Transitional&quot;として宣言されます。これは、1998年より前のコンテンツをプロキシする場合、または欠陥のあるオーサリング/公開ツールを使用する場合に必要になるオプションです。</target>
        </trans-unit>
        <trans-unit id="44bdbf09c8b49c4c449c96a9c5e0567aed0aadbe" translate="yes" xml:space="preserve">
          <source>In the first form, the value will be set to &quot;1&quot;. The second will remove the given variable if already defined, and the third will set the variable to the literal value given by &lt;code&gt;&lt;em&gt;value&lt;/em&gt;&lt;/code&gt;. Since version 2.0.51, Apache httpd will recognize occurrences of &lt;code&gt;$1&lt;/code&gt;..&lt;code&gt;$9&lt;/code&gt; within &lt;var&gt;value&lt;/var&gt; and replace them by parenthesized subexpressions of &lt;var&gt;regex&lt;/var&gt;. &lt;code&gt;$0&lt;/code&gt; provides access to the whole string matched by that pattern.</source>
          <target state="translated">最初の形式では、値は「1」に設定されます。 2番目はすでに定義されている場合、指定された変数を削除し、3番目は変数をvalueで指定されたリテラル値に設定し &lt;code&gt;&lt;em&gt;value&lt;/em&gt;&lt;/code&gt; 。 バージョン2.0.51以降、Apache httpdは &lt;var&gt;value&lt;/var&gt; 内の &lt;code&gt;$1&lt;/code&gt; .. &lt;code&gt;$9&lt;/code&gt; 出現を認識し、それらを &lt;var&gt;regex&lt;/var&gt; の括弧で囲まれた部分式で置き換えます。 &lt;code&gt;$0&lt;/code&gt; は、そのパターンに一致する文字列全体へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="0f868aa0eda0e3af6b7871085b700eecc810503c" translate="yes" xml:space="preserve">
          <source>In the first way the DSO's are usually called &lt;em&gt;shared libraries&lt;/em&gt; or &lt;em&gt;DSO libraries&lt;/em&gt; and named &lt;code&gt;libfoo.so&lt;/code&gt; or &lt;code&gt;libfoo.so.1.2&lt;/code&gt;. They reside in a system directory (usually &lt;code&gt;/usr/lib&lt;/code&gt;) and the link to the executable program is established at build-time by specifying &lt;code&gt;-lfoo&lt;/code&gt; to the linker command. This hard-codes library references into the executable program file so that at start-time the Unix loader is able to locate &lt;code&gt;libfoo.so&lt;/code&gt; in &lt;code&gt;/usr/lib&lt;/code&gt;, in paths hard-coded via linker-options like &lt;code&gt;-R&lt;/code&gt; or in paths configured via the environment variable &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;. It then resolves any (yet unresolved) symbols in the executable program which are available in the DSO.</source>
          <target state="translated">最初の方法では、DSOは通常&lt;em&gt;共有ライブラリ&lt;/em&gt;または&lt;em&gt;DSOライブラリ&lt;/em&gt;と呼ばれ、 &lt;code&gt;libfoo.so&lt;/code&gt; または &lt;code&gt;libfoo.so.1.2&lt;/code&gt; という名前が付けられます。 これらはシステムディレクトリ（通常は &lt;code&gt;/usr/lib&lt;/code&gt; ）にあり、実行可能プログラムへのリンクは、ビルド時にリンカーコマンドに &lt;code&gt;-lfoo&lt;/code&gt; を指定することによって確立されます。 このライブラリは、参照を実行可能プログラムファイルにハードコード化しているため、起動時に、Unixローダーは &lt;code&gt;/usr/lib&lt;/code&gt; 内の &lt;code&gt;libfoo.so&lt;/code&gt; を &lt;code&gt;-R&lt;/code&gt; などのリンカーオプションを介してハードコード化されたパス、または環境変数 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 。 次に、DSOで使用可能な実行可能プログラム内の（まだ未解決の）シンボルを解決します。</target>
        </trans-unit>
        <trans-unit id="ca079e26dce1b7d6fad032ba43f7df7c8ea774e5" translate="yes" xml:space="preserve">
          <source>In the following example, all hosts in the example.org domain are allowed access; all other hosts are denied access.</source>
          <target state="translated">次の例では、example.org ドメイン内のすべてのホストがアクセスを許可され、それ以外のすべてのホストはアクセスを拒否されます。</target>
        </trans-unit>
        <trans-unit id="243d10e71b877b094d398254deb772e9eecf071d" translate="yes" xml:space="preserve">
          <source>In the following example, all users in the &lt;code&gt;alpha&lt;/code&gt; and &lt;code&gt;beta&lt;/code&gt; groups are authorized, except for those who are also in the &lt;code&gt;reject&lt;/code&gt; group.</source>
          <target state="translated">次の例では、 &lt;code&gt;reject&lt;/code&gt; グループにも属しているユーザーを除いて、 &lt;code&gt;alpha&lt;/code&gt; グループと &lt;code&gt;beta&lt;/code&gt; グループのすべてのユーザーが承認されます。</target>
        </trans-unit>
        <trans-unit id="a46ab504f8a2340bdcae7755276c00d12498ad4c" translate="yes" xml:space="preserve">
          <source>In the following example, the &lt;code&gt;&lt;a href=&quot;mod/mod_mime_magic#mimemagicfile&quot;&gt;MimeMagicFile&lt;/a&gt;&lt;/code&gt; directive will be applied only if &lt;code&gt;&lt;a href=&quot;mod/mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; is available.</source>
          <target state="translated">次の例では、 &lt;code&gt;&lt;a href=&quot;mod/mod_mime_magic&quot;&gt;mod_mime_magic&lt;/a&gt;&lt;/code&gt; が使用可能な場合にのみ &lt;code&gt;&lt;a href=&quot;mod/mod_mime_magic#mimemagicfile&quot;&gt;MimeMagicFile&lt;/a&gt;&lt;/code&gt; ディレクティブが適用されます。</target>
        </trans-unit>
        <trans-unit id="b142e6288d833347e7dec9596a285fe96ca26cff" translate="yes" xml:space="preserve">
          <source>In the following example, the mutex mechanism for the MPM accept mutex will be changed from the compiled-in default to &lt;code&gt;fcntl&lt;/code&gt;, with the associated lock file created in directory &lt;code&gt;/var/httpd/locks&lt;/code&gt;. The mutex mechanism for all other mutexes will be changed from the compiled-in default to &lt;code&gt;sysvsem&lt;/code&gt;.</source>
          <target state="translated">次の例では、MPM Accept mutexのmutexメカニズムが、コンパイル済みのデフォルトから &lt;code&gt;fcntl&lt;/code&gt; に変更され、関連するロックファイルがディレクトリ &lt;code&gt;/var/httpd/locks&lt;/code&gt; に作成されます。 他のすべてのミューテックスのミューテックスメカニズムは、コンパイル済みのデフォルトから &lt;code&gt;sysvsem&lt;/code&gt; に変更されます。</target>
        </trans-unit>
        <trans-unit id="da10503fbb9a7acb8026d0163238519dc1c19ed5" translate="yes" xml:space="preserve">
          <source>In the following example, we send the backend a &lt;code&gt;GET&lt;/code&gt; request and if the response body contains the phrase &lt;em&gt;Under maintenance&lt;/em&gt;, we want to disable the backend.</source>
          <target state="translated">次の例では、バックエンドに &lt;code&gt;GET&lt;/code&gt; リクエストを送信し、レスポンスの本文に&lt;em&gt;Under Maintenance&lt;/em&gt;というフレーズが含まれている場合は、バックエンドを無効にします。</target>
        </trans-unit>
        <trans-unit id="9c578e342fe7b81688c56c72f048e688fa7a877c" translate="yes" xml:space="preserve">
          <source>In the following example, when clients request documents under the &lt;code&gt;/foo/&lt;/code&gt; directory, the server fetches those documents from the &lt;code&gt;/bar/&lt;/code&gt; directory on &lt;code&gt;internal.example.com&lt;/code&gt; and returns them to the client as if they were from the local server.</source>
          <target state="translated">次の例では、クライアントが &lt;code&gt;/foo/&lt;/code&gt; ディレクトリの下のドキュメントをリクエストすると、サーバーはそれらのドキュメントを &lt;code&gt;internal.example.com&lt;/code&gt; の &lt;code&gt;/bar/&lt;/code&gt; ディレクトリからフェッチし、ローカルサーバーからのようにクライアントに返します。</target>
        </trans-unit>
        <trans-unit id="665505f3f1914cbefd9e1181122f18bac8228565" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if a directive of the given name is available at the time of processing. The second format reverses the test, and only processes the directives if &lt;var&gt;directive-name&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; available.</source>
          <target state="translated">前者の場合、開始マーカーと終了マーカーの間のディレクティブは、指定された名前のディレクティブが処理時に利用可能な場合にのみ処理されます。 2番目の形式はテストを逆にし、 &lt;var&gt;directive-name&lt;/var&gt; が使用でき&lt;strong&gt;ない&lt;/strong&gt;場合にのみディレクティブを処理します。</target>
        </trans-unit>
        <trans-unit id="9294be38bb571023c8672b38497dc30d5a273b43" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if a section directive of the given name is available at the time of processing. The second format reverses the test, and only processes the directives if &lt;var&gt;section-name&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; an available section directive.</source>
          <target state="translated">前者の場合、開始マーカーと終了マーカーの間のディレクティブは、指定された名前のセクションディレクティブが処理時に利用可能な場合にのみ処理されます。 2番目の形式はテストを逆にし、 &lt;var&gt;section-name&lt;/var&gt; が使用可能なセクションディレクティブで&lt;strong&gt;ない&lt;/strong&gt;場合にのみディレクティブを処理します。</target>
        </trans-unit>
        <trans-unit id="4e1cea19981ff895355226406c56db1de53df492" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if the module named &lt;var&gt;module&lt;/var&gt; is included in Apache httpd -- either compiled in or dynamically loaded using &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt;. The second format reverses the test, and only processes the directives if &lt;var&gt;module&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; included.</source>
          <target state="translated">前者の場合、開始マーカーと終了マーカーの間のディレクティブは、moduleという &lt;var&gt;module&lt;/var&gt; がApache httpdに含まれている場合にのみ処理されます -コンパイルされているか、 &lt;code&gt;&lt;a href=&quot;mod_so#loadmodule&quot;&gt;LoadModule&lt;/a&gt;&lt;/code&gt; を使用して動的にロードされています 。 2番目の形式はテストを逆にし、 &lt;var&gt;module&lt;/var&gt; が含まれて&lt;strong&gt;いない&lt;/strong&gt;場合にのみディレクティブを処理します 。</target>
        </trans-unit>
        <trans-unit id="bd049bbcdeb128550c493dedde0034f9433163df" translate="yes" xml:space="preserve">
          <source>In the former case, the directives between the start and end markers are only processed if the parameter named &lt;var&gt;parameter-name&lt;/var&gt; is defined. The second format reverses the test, and only processes the directives if &lt;var&gt;parameter-name&lt;/var&gt; is &lt;strong&gt;not&lt;/strong&gt; defined.</source>
          <target state="translated">前者の場合、開始マーカーと終了マーカーの間のディレクティブは、 &lt;var&gt;parameter-name&lt;/var&gt; という名前のパラメーターが定義されている場合にのみ処理されます。 2番目の形式はテストを逆にし、 &lt;var&gt;parameter-name&lt;/var&gt; が定義されて&lt;strong&gt;いない&lt;/strong&gt;場合にのみディレクティブを処理します 。</target>
        </trans-unit>
        <trans-unit id="674d94c39f1683560d497c2f58da42036ce3b05a" translate="yes" xml:space="preserve">
          <source>In the last example, the proxy will forward FTP requests, encapsulated as yet another HTTP proxy request, to another proxy which can handle them.</source>
          <target state="translated">最後の例では、プロキシは、別のHTTPプロキシリクエストとしてカプセル化された FTPリクエストを、それらを処理できる別のプロキシに転送します。</target>
        </trans-unit>
        <trans-unit id="1372707efc2c398ddd4d11281cc77e0970f8ae71" translate="yes" xml:space="preserve">
          <source>In the latter part of the article, we'll talk about some of the somewhat more advanced things that can be done with SSI, such as conditional statements in your SSI directives.</source>
          <target state="translated">記事の後半では、SSIディレクティブの中の条件文など、SSIでできることの少し高度なことについてお話しします。</target>
        </trans-unit>
        <trans-unit id="ec87deb1db93922e2104568dfbc7848b3c7c22e6" translate="yes" xml:space="preserve">
          <source>In the next example, all hosts in the example.org domain are allowed access, except for the hosts which are in the foo.example.org subdomain, who are denied access. All hosts not in the example.org domain are denied access because the default state is to &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; access to the server.</source>
          <target state="translated">次の例では、foo.example.orgサブドメインにあり、アクセスを拒否されているホストを除いて、example.orgドメインのすべてのホストにアクセスが許可されています。 example.orgドメインにないすべてのホストは、デフォルトの状態がサーバーへのアクセスを &lt;code&gt;&lt;a href=&quot;#deny&quot;&gt;Deny&lt;/a&gt;&lt;/code&gt; するためにアクセスを拒否されます。</target>
        </trans-unit>
        <trans-unit id="53d0eaedde361d2506eb0625ac6887c9cfe839a4" translate="yes" xml:space="preserve">
          <source>In the rare situation where you must download a specific file using the FTP &lt;code&gt;ASCII&lt;/code&gt; transfer method (while the default transfer is in &lt;code&gt;binary&lt;/code&gt; mode), you can override &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt;'s default by suffixing the request with &lt;code&gt;;type=a&lt;/code&gt; to force an ASCII transfer. (FTP Directory listings are always executed in ASCII mode, however.)</source>
          <target state="translated">FTP &lt;code&gt;ASCII&lt;/code&gt; 転送方法を使用して特定のファイルをダウンロードする必要があるまれな状況（デフォルトの転送は &lt;code&gt;binary&lt;/code&gt; モードです）では、 &lt;code&gt;;type=a&lt;/code&gt; でリクエストに接尾辞を付けて、ASCII転送を強制することにより、 &lt;code&gt;&lt;a href=&quot;mod_proxy&quot;&gt;mod_proxy&lt;/a&gt;&lt;/code&gt; のデフォルトを上書きできます。 （ただし、FTPディレクトリのリストは常にASCIIモードで実行されます。）</target>
        </trans-unit>
        <trans-unit id="2f23974bc81ae40d635e9364e58c53cd9c7a198d" translate="yes" xml:space="preserve">
          <source>In the second example, we proxy the request only if we can't find the resource locally. This can be very useful when you're migrating from one server to another, and you're not sure if all the content has been migrated yet.</source>
          <target state="translated">2 番目の例では、ローカルでリソースが見つからない場合にのみリクエストをプロキシします。これは、あるサーバから別のサーバに移行する際に、すべてのコンテンツがまだ移行されていないかどうかわからない場合に非常に便利です。</target>
        </trans-unit>
        <trans-unit id="c9e1673815243d32021bd18336f6a9e61a11e8f7" translate="yes" xml:space="preserve">
          <source>In the second form, &lt;var&gt;ip.address&lt;/var&gt; is an IP address, a partial IP address, a network/netmask pair, or a network/nnn CIDR specification. Either IPv4 or IPv6 addresses may be used.</source>
          <target state="translated">2番目の形式では、 &lt;var&gt;ip.address&lt;/var&gt; はIPアドレス、部分的なIPアドレス、ネットワーク/ネットマスクのペア、またはネットワーク/ nnn CIDR仕様です。 IPv4またはIPv6アドレスのいずれかを使用できます。</target>
        </trans-unit>
        <trans-unit id="eee35fac23be70539f72a8f0aafe09c07129a943" translate="yes" xml:space="preserve">
          <source>In the second form, it will insert your own FPI. The optional second argument determines whether SGML/HTML or XML/XHTML syntax will be used.</source>
          <target state="translated">2 番目の形式では、独自の FPI を挿入します。オプションの第2引数は、SGMLHTMLとXMLXHTMLのどちらの構文を使用するかを決定します。</target>
        </trans-unit>
        <trans-unit id="0bfdf608a58172d0b1194e9669ba4deb98f60aca" translate="yes" xml:space="preserve">
          <source>In the second way the DSO's are usually called &lt;em&gt;shared objects&lt;/em&gt; or &lt;em&gt;DSO files&lt;/em&gt; and can be named with an arbitrary extension (although the canonical name is &lt;code&gt;foo.so&lt;/code&gt;). These files usually stay inside a program-specific directory and there is no automatically established link to the executable program where they are used. Instead the executable program manually loads the DSO at run-time into its address space via &lt;code&gt;dlopen()&lt;/code&gt;. At this time no resolving of symbols from the DSO for the executable program is done. But instead the Unix loader automatically resolves any (yet unresolved) symbols in the DSO from the set of symbols exported by the executable program and its already loaded DSO libraries (especially all symbols from the ubiquitous &lt;code&gt;libc.so&lt;/code&gt;). This way the DSO gets knowledge of the executable program's symbol set as if it had been statically linked with it in the first place.</source>
          <target state="translated">2番目の方法では、DSOは通常&lt;em&gt;共有オブジェクト&lt;/em&gt;または&lt;em&gt;DSOファイル&lt;/em&gt;と呼ばれ、任意の拡張子で名前を &lt;code&gt;foo.so&lt;/code&gt; ことができます（ただし、正規名はfoo.soです ）。 これらのファイルは通常、プログラム固有のディレクトリ内にあり、それらが使用される実行可能プログラムへのリンクが自動的に確立されることはありません。 代わりに、実行可能プログラムは、実行時に手動でDSOを &lt;code&gt;dlopen()&lt;/code&gt; を介してそのアドレス空間にロードします。 現時点では、実行可能プログラムのDSOからのシンボルの解決は行われません。 ただし、代わりに、Unixローダーは、実行可能プログラムによってエクスポートされた一連のシンボルと既にロードされているDSOライブラリ（特にユビキタス &lt;code&gt;libc.so&lt;/code&gt; からのすべてのシンボル）から、DSO内の（未解決の）シンボルを自動的に解決します。 このようにして、DSOは、最初から静的にリンクされているかのように、実行可能プログラムのシンボルセットの情報を取得します。</target>
        </trans-unit>
        <trans-unit id="c088e4c8ff3b9615721bc67eef89f9b04a4474af" translate="yes" xml:space="preserve">
          <source>In the server configuration file, associate files with the &lt;code&gt;send-as-is&lt;/code&gt; handler &lt;em&gt;e.g.&lt;/em&gt;</source>
          <target state="translated">サーバー構成ファイルで、ファイルを &lt;code&gt;send-as-is&lt;/code&gt; ハンドラーに関連付けます。</target>
        </trans-unit>
        <trans-unit id="3b9509d8dc4540fcf4afaf5fc119581939396842" translate="yes" xml:space="preserve">
          <source>In the server configuration file, put</source>
          <target state="translated">サーバ設定ファイルに</target>
        </trans-unit>
        <trans-unit id="0f22dae1310638ecf8d7adefb54ed1ce8635d4b6" translate="yes" xml:space="preserve">
          <source>In the server configuration file, use the &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; directive to associate ISAPI files with the &lt;code&gt;isapi-handler&lt;/code&gt; handler, and map it to them with their file extensions. To enable any .dll file to be processed as an ISAPI extension, edit the httpd.conf file and add the following line:</source>
          <target state="translated">サーバー構成ファイルで、 &lt;code&gt;&lt;a href=&quot;mod_mime#addhandler&quot;&gt;AddHandler&lt;/a&gt;&lt;/code&gt; ディレクティブを使用してISAPIファイルを &lt;code&gt;isapi-handler&lt;/code&gt; ハンドラーに関連付け、ファイル拡張子を付けてそれらにマッピングします。 .dllファイルをISAPI拡張機能として処理できるようにするには、httpd.confファイルを編集して次の行を追加します。</target>
        </trans-unit>
        <trans-unit id="0451d6f83be2cddb287e7a38e02aad92dd658025" translate="yes" xml:space="preserve">
          <source>In the simple example above, a URL has been protected by &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt;, but the user has yet to be given an opportunity to enter their username and password. Options for doing so include providing a dedicated standalone login page for this purpose, or for providing the login page inline.</source>
          <target state="translated">上記の簡単な例では、URLは &lt;code&gt;&lt;a href=&quot;mod_auth_form&quot;&gt;mod_auth_form&lt;/a&gt;&lt;/code&gt; によって保護されていますが、ユーザーにはまだユーザー名とパスワードを入力する機会が与えられていません。 そのためのオプションには、この目的のために専用のスタンドアロンログインページを提供することや、ログインページをインラインで提供することが含まれます。</target>
        </trans-unit>
        <trans-unit id="5c2b9b01fbe5bebe76852e1be973f2c23f51ac91" translate="yes" xml:space="preserve">
          <source>In the terminology of Apache HTTP Server, using a single IP address but multiple TCP ports, is also IP-based virtual hosting.</source>
          <target state="translated">Apache HTTP Serverの用語では、単一のIPアドレスを使用するが、複数のTCPポートを使用することもIPベースの仮想ホスティングです。</target>
        </trans-unit>
        <trans-unit id="041bb2fa38f176afb659a370f3eba29a39fef9b1" translate="yes" xml:space="preserve">
          <source>In the third example, we redirect the request to an image on some other site.</source>
          <target state="translated">3 番目の例では、リクエストを他のサイトの画像にリダイレクトします。</target>
        </trans-unit>
        <trans-unit id="af6ed86a8f8ec31db3156ff7ee5e40b0501a8220" translate="yes" xml:space="preserve">
          <source>In the traditional filtering model, filters are inserted unconditionally using &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; and family. Each filter then needs to determine whether to run, and there is little flexibility available for server admins to allow the chain to be configured dynamically.</source>
          <target state="translated">従来のフィルタリングモデルでは、フィルターは &lt;code&gt;&lt;a href=&quot;mod_mime#addoutputfilter&quot;&gt;AddOutputFilter&lt;/a&gt;&lt;/code&gt; とファミリを使用して無条件に挿入されます。 次に、各フィルターは実行するかどうかを決定する必要があり、サーバー管理者がチェーンを動的に構成できるようにする柔軟性はほとんどありません。</target>
        </trans-unit>
        <trans-unit id="ad0c9ca189b82ce1849d901851d7d08f53be7eb0" translate="yes" xml:space="preserve">
          <source>In the traditional model, output filters are a simple chain from the content generator (handler) to the client. This works well provided the filter chain can be correctly configured, but presents problems when the filters need to be configured dynamically based on the outcome of the handler.</source>
          <target state="translated">従来のモデルでは、出力フィルタはコンテンツ生成器(ハンドラ)からクライアントへの単純なチェーンです。これは、フィルタチェーンが正しく設定できる場合にはうまく機能しますが、ハンドラの結果に基づいてフィルタを動的に設定する必要がある場合には問題があります。</target>
        </trans-unit>
        <trans-unit id="86635c7fbeec4b0298ba6544b56152b2ae7bf39d" translate="yes" xml:space="preserve">
          <source>In their recent documentation, Microsoft appears to have abandoned the distinction between the two &lt;code&gt;HSE_REQ_SEND_URL&lt;/code&gt; functions. Apache continues to treat them as two distinct functions with different requirements and behaviors.</source>
          <target state="translated">最近のドキュメントでは、Microsoftは2つの &lt;code&gt;HSE_REQ_SEND_URL&lt;/code&gt; 関数の区別を放棄しているようです。 Apacheは引き続き、要件と動作が異なる2つの異なる機能としてそれらを扱います。</target>
        </trans-unit>
        <trans-unit id="1a9c8907d2b0398bbe5b4434b0dbd02ae2916545" translate="yes" xml:space="preserve">
          <source>In these cases, the proper &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; should be set in the configuration file.</source>
          <target state="translated">このような場合は、適切な &lt;code&gt;&lt;a href=&quot;../mod/core#serverroot&quot;&gt;ServerRoot&lt;/a&gt;&lt;/code&gt; を構成ファイルに設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7eca4eecf9263883726037d38641bc4ead379ed7" translate="yes" xml:space="preserve">
          <source>In these contexts, two special formats can also be used:</source>
          <target state="translated">これらの文脈では、2つの特別なフォーマットを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="4a6d570ac9d2f10423bcc6ee2ce4e25a475d8042" translate="yes" xml:space="preserve">
          <source>In this case, &lt;code&gt;mod_substitute&lt;/code&gt; can be used to rewrite those URLs into something that will work from the front end:</source>
          <target state="translated">この場合、 &lt;code&gt;mod_substitute&lt;/code&gt; を使用して、これらのURLをフロントエンドから機能するものに書き換えることができます。</target>
        </trans-unit>
        <trans-unit id="2a84471d788be506028f1150b0e7f1d014fcba05" translate="yes" xml:space="preserve">
          <source>In this case, a request to &lt;code&gt;/mirror/foo/i&lt;/code&gt; will get proxied, because the &lt;code&gt;ProxyPass&lt;/code&gt; directive in the Location block will be evaluated first. The fact that &lt;code&gt;ProxyPass&lt;/code&gt; supports both server and directory contexts does not mean that their scope and position in the configuration file will guarantee any ordering or override.</source>
          <target state="translated">この場合、Locationブロックの &lt;code&gt;ProxyPass&lt;/code&gt; ディレクティブが最初に評価されるため、 &lt;code&gt;/mirror/foo/i&lt;/code&gt; へのリクエストはプロキシされます。 &lt;code&gt;ProxyPass&lt;/code&gt; がサーバーコンテキストとディレクトリコンテキストの両方をサポートするという事実は、構成ファイル内のスコープと位置が順序付けや上書きを保証することを意味するものではありません。</target>
        </trans-unit>
        <trans-unit id="c1ecac168f35254ad658d142ab61e2ea589a1b4a" translate="yes" xml:space="preserve">
          <source>In this case, browsers with a user-agent string beginning with &lt;code&gt;KnockKnock/2.0&lt;/code&gt; will be allowed access, and all others will be denied.</source>
          <target state="translated">この場合、ユーザーエージェント文字列が &lt;code&gt;KnockKnock/2.0&lt;/code&gt; で始まるブラウザーはアクセスを許可され、その他のブラウザーはすべて拒否されます。</target>
        </trans-unit>
        <trans-unit id="201a37fdc0b0a453489f6a62da6adf2af5b3cf85" translate="yes" xml:space="preserve">
          <source>In this case, the error message should be specific to the particular syntax error that you have committed.</source>
          <target state="translated">この場合、エラーメッセージはコミットした特定の構文エラーに固有のものでなければなりません。</target>
        </trans-unit>
        <trans-unit id="f624839ca9027cfbe6b1e4bf7ee098057f4b3bbc" translate="yes" xml:space="preserve">
          <source>In this document we discuss the logging modules that are a standard part of the http server.</source>
          <target state="translated">このドキュメントでは、http サーバの標準的な部分であるロギングモジュールについて説明します。</target>
        </trans-unit>
        <trans-unit id="eb010a60c97230ef94f287b7fe0cba521cb80049" translate="yes" xml:space="preserve">
          <source>In this document, we attempt to provide enough of a regex vocabulary to get you started, without being overwhelming, in the hope that &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt;s will be scientific formulae, rather than magical incantations.</source>
          <target state="translated">このドキュメントでは、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewriterule&quot;&gt;RewriteRule&lt;/a&gt;&lt;/code&gt; が魔法の呪文ではなく科学的な公式になることを期待して、圧倒されることなく、始めるのに十分な正規表現の語彙を提供することを試みます。</target>
        </trans-unit>
        <trans-unit id="b74cceabeb689c320ea020e94fe16452a5416b32" translate="yes" xml:space="preserve">
          <source>In this example the file provider will attempt to authenticate the user first. If it is unable to authenticate the user, the LDAP provider will be called. This allows the scope of authentication to be broadened if your organization implements more than one type of authentication store. Other authentication and authorization scenarios may include mixing one type of authentication with a different type of authorization. For example, authenticating against a password file yet authorizing against an LDAP directory.</source>
          <target state="translated">この例では、ファイル・プロバイダは最初にユーザーの認証を試みます。ユーザーを認証できない場合は、LDAP プロバイダが呼び出されます。これにより、組織が複数のタイプの認証ストアを実装している場合、認証の範囲を広げることができます。他の認証および認証のシナリオには、あるタイプの認証と異なるタイプの認証を混在させることも含まれます。例えば、パスワードファイルに対して認証を行いながら、LDAP ディレクトリに対して認証を行うことができます。</target>
        </trans-unit>
        <trans-unit id="62fd44223f7ebf158f7e8880a38a090e5f613e09" translate="yes" xml:space="preserve">
          <source>In this example, a request for &lt;code&gt;/test/1234&lt;/code&gt; would be transformed into &lt;code&gt;/admin.foo?page=test&amp;amp;id=1234&amp;amp;host=admin.example.com&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;/test/1234&lt;/code&gt; のリクエストは &lt;code&gt;/admin.foo?page=test&amp;amp;id=1234&amp;amp;host=admin.example.com&lt;/code&gt; に変換されます 。</target>
        </trans-unit>
        <trans-unit id="1b326b2ab5b64b878394a040cffe9db48dae33ba" translate="yes" xml:space="preserve">
          <source>In this example, as contrasted to the &lt;a href=&quot;#old-to-new-intern&quot;&gt;internal&lt;/a&gt; example above, we can simply use the Redirect directive. mod_rewrite was used in that earlier example in order to hide the redirect from the client:</source>
          <target state="translated">この例では、上記の&lt;a href=&quot;#old-to-new-intern&quot;&gt;内部の&lt;/a&gt;例とは対照的に、Redirectディレクティブを使用するだけで済みます。 クライアントからのリダイレクトを隠すために、前の例ではmod_rewriteが使用されていました。</target>
        </trans-unit>
        <trans-unit id="dc82b4125b2c46da46094f6c9950818e650079b0" translate="yes" xml:space="preserve">
          <source>In this example, requests for files with a MIME content type of &lt;code&gt;image/gif&lt;/code&gt; will be handled by the specified cgi script &lt;code&gt;/cgi-bin/images.cgi&lt;/code&gt;.</source>
          <target state="translated">この例では、MIMEコンテンツタイプが &lt;code&gt;image/gif&lt;/code&gt; のファイルに対するリクエストは、指定されたcgiスクリプト &lt;code&gt;/cgi-bin/images.cgi&lt;/code&gt; によって処理されます。</target>
        </trans-unit>
        <trans-unit id="e7ae4cb5b93cb4ffc0c441e69fa5eaa398122e0d" translate="yes" xml:space="preserve">
          <source>In this example, requests for files with a file extension of &lt;code&gt;.xyz&lt;/code&gt; are handled by the specified cgi script &lt;code&gt;/cgi-bin/program.cgi&lt;/code&gt;.</source>
          <target state="translated">この例では、ファイル拡張子が &lt;code&gt;.xyz&lt;/code&gt; のファイルのリクエストは、指定されたcgiスクリプト &lt;code&gt;/cgi-bin/program.cgi&lt;/code&gt; によって処理されます。</target>
        </trans-unit>
        <trans-unit id="dc078aa8eb489bcf02031a8fb0aff5573827ad37" translate="yes" xml:space="preserve">
          <source>In this example, the domain 'www.example.org' is automatically added to the MD 'example.org'. Similarly for 'example2.org' where 'auto' is configured explicitly. Whenever you add more ServerAlias names to this virtual host, they will be added as well to the Managed Domain.</source>
          <target state="translated">この例では、ドメイン 'www.example.org' が自動的に MD 'example.org' に追加されます。同様に、'auto' が明示的に構成されている 'example2.org' についても同様です。このバーチャルホストにServerAlias名を追加すると、それらも同様にマネージドドメインに追加されます。</target>
        </trans-unit>
        <trans-unit id="74072832a10b07f84b64d936698e8e9f12a9a6eb" translate="yes" xml:space="preserve">
          <source>In this example, the httpd is able to send the HTTP response header and the requested file with a single &lt;code&gt;sendfilev(2)&lt;/code&gt; system call. Sendfile semantics vary among operating systems. On some other systems, it is necessary to do a &lt;code&gt;write(2)&lt;/code&gt; or &lt;code&gt;writev(2)&lt;/code&gt; call to send the headers before calling &lt;code&gt;sendfile(2)&lt;/code&gt;.</source>
          <target state="translated">この例では、httpdは単一の &lt;code&gt;sendfilev(2)&lt;/code&gt; システムコールでHTTP応答ヘッダーと要求されたファイルを送信できます。 Sendfileのセマンティクスは、オペレーティングシステムによって異なります。 他の一部のシステムでは、 &lt;code&gt;sendfile(2)&lt;/code&gt; を呼び出す前に、ヘッダーを送信する &lt;code&gt;write(2)&lt;/code&gt; または &lt;code&gt;writev(2)&lt;/code&gt; 呼び出しを行う必要があります。</target>
        </trans-unit>
        <trans-unit id="1d51e462e264ebf4e27e0c5047ac2121772dbf5c" translate="yes" xml:space="preserve">
          <source>In this example, we are blocking a robot called &lt;code&gt;NameOfBadRobot&lt;/code&gt; from a location &lt;code&gt;/secret/files&lt;/code&gt;. You may also specify an IP address range, if you are trying to block that user agent only from the particular source.</source>
          <target state="translated">この例では、場所 &lt;code&gt;/secret/files&lt;/code&gt; から &lt;code&gt;NameOfBadRobot&lt;/code&gt; というロボットをブロックしています 。 特定のソースからのユーザーエージェントのみをブロックする場合は、IPアドレスの範囲を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="3bb7e6a3abe35bf30c4022d83251bcaa6077e891" translate="yes" xml:space="preserve">
          <source>In this example, we pass a fixed username and password to a backend server.</source>
          <target state="translated">この例では、固定のユーザ名とパスワードをバックエンドサーバに渡しています。</target>
        </trans-unit>
        <trans-unit id="87d8f982a049673d48aea63055c761663d17b653" translate="yes" xml:space="preserve">
          <source>In this example, we pass the email address extracted from a client certificate, extending the functionality of the FakeBasicAuth option within the &lt;code&gt;&lt;a href=&quot;mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; directive. Like the FakeBasicAuth option, the password is set to the fixed string &quot;password&quot;.</source>
          <target state="translated">この例では、クライアント証明書から抽出された電子メールアドレスを渡し、 &lt;code&gt;&lt;a href=&quot;mod_ssl#ssloptions&quot;&gt;SSLOptions&lt;/a&gt;&lt;/code&gt; ディレクティブ内のFakeBasicAuthオプションの機能を拡張します。 FakeBasicAuthオプションと同様に、パスワードは固定文字列「password」に設定されます。</target>
        </trans-unit>
        <trans-unit id="7fb10a87cb2208a123bac01957a26202194f5208" translate="yes" xml:space="preserve">
          <source>In this first example, we simply deny the request, if it didn't initiate from a page on our site. For the purpose of this example, we assume that our site is &lt;code&gt;www.example.com&lt;/code&gt;.</source>
          <target state="translated">この最初の例では、サイトのページから開始されていない場合、リクエストを単に拒否します。 この例では、サイトが &lt;code&gt;www.example.com&lt;/code&gt; であると想定しています。</target>
        </trans-unit>
        <trans-unit id="27a57a712c1e1c6e57c0a564c4ec1ab15cdc21f4" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHENTICATOR&lt;/code&gt;. The application must be defined as provider type &lt;em&gt;authn&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt; and enabled with &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt;. When invoked, the application is expected to authenticate the client using the provided user id and password. Example application:</source>
          <target state="translated">このモードでは、 &lt;code&gt;FCGI_ROLE&lt;/code&gt; は &lt;code&gt;AUTHORIZER&lt;/code&gt; に設定され、 &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; は &lt;code&gt;AUTHENTICATOR&lt;/code&gt; に設定されます。 アプリケーションは、 &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt; を使用してプロバイダータイプ&lt;em&gt;authn&lt;/em&gt;として定義し、 AuthBasicProviderで有効にする &lt;code&gt;&lt;a href=&quot;mod_auth_basic#authbasicprovider&quot;&gt;AuthBasicProvider&lt;/a&gt;&lt;/code&gt; ます。 呼び出されると、アプリケーションは提供されたユーザーIDとパスワードを使用してクライアントを認証することが期待されます。 応用例：</target>
        </trans-unit>
        <trans-unit id="2f88dbc93e24cc89acc8bf0f85a4d8e1210c16d0" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHENTICATOR&lt;/code&gt;. The application must be defined as provider type &lt;em&gt;authn&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt;. &lt;code&gt;&lt;a href=&quot;#authnzfcgicheckauthnprovider&quot;&gt;AuthnzFcgiCheckAuthnProvider&lt;/a&gt;&lt;/code&gt; specifies when it is called. Example application:</source>
          <target state="translated">このモードでは、 &lt;code&gt;FCGI_ROLE&lt;/code&gt; は &lt;code&gt;AUTHORIZER&lt;/code&gt; に設定され、 &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; は &lt;code&gt;AUTHENTICATOR&lt;/code&gt; に設定されます。 アプリケーションは、 &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt; を使用してプロバイダータイプ&lt;em&gt;authn&lt;/em&gt;として定義する必要があります。 &lt;code&gt;&lt;a href=&quot;#authnzfcgicheckauthnprovider&quot;&gt;AuthnzFcgiCheckAuthnProvider&lt;/a&gt;&lt;/code&gt; は、いつ呼び出されるかを指定します。 応用例：</target>
        </trans-unit>
        <trans-unit id="a355d5d14e661e37316e5c2ae9f3aeead9b508d9" translate="yes" xml:space="preserve">
          <source>In this mode, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt;. The application must be defined as provider type &lt;em&gt;authz&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt;. When invoked, the application is expected to authorize the client using the provided user id and other request data. Example application:</source>
          <target state="translated">このモードでは、 &lt;code&gt;FCGI_ROLE&lt;/code&gt; は &lt;code&gt;AUTHORIZER&lt;/code&gt; に設定され、 FCGI_APACHE_ROLEはAUTHORIZERに設定されます。 アプリケーションは、 &lt;em&gt;AuthnzFcgiDefineProvider&lt;/em&gt;を使用してプロバイダータイプ&lt;em&gt;authz&lt;/em&gt;として定義する必要があります。 呼び出されると、アプリケーションは、提供されたユーザーIDと他の要求データを使用してクライアントを承認することが期待されます。 応用例：</target>
        </trans-unit>
        <trans-unit id="e2777994ae73785cd20b3f91647c6c6ec7e0d875" translate="yes" xml:space="preserve">
          <source>In this mode, the cache &lt;strong&gt;bolts onto&lt;/strong&gt; the front of the server, acting as if a free standing RFC 2616 caching proxy had been placed in front of the server.</source>
          <target state="translated">このモードでは、キャッシュはサーバーの前面に&lt;strong&gt;ボルトで固定され&lt;/strong&gt; 、まるで独立したRFC 2616キャッシングプロキシがサーバーの前面に配置されているかのように機能します。</target>
        </trans-unit>
        <trans-unit id="a1df8aa9c5282cbf88fea36f55ec9fb26659f893" translate="yes" xml:space="preserve">
          <source>In this mode, which supports the web server-agnostic FastCGI &lt;code&gt;AUTHORIZER&lt;/code&gt; protocol, &lt;code&gt;FCGI_ROLE&lt;/code&gt; is set to &lt;code&gt;AUTHORIZER&lt;/code&gt; and &lt;code&gt;FCGI_APACHE_ROLE&lt;/code&gt; is not set. The application must be defined as provider type &lt;em&gt;authnz&lt;/em&gt; using &lt;code&gt;&lt;a href=&quot;#authnzfcgidefineprovider&quot;&gt; AuthnzFcgiDefineProvider&lt;/a&gt;&lt;/code&gt;. The application is expected to handle both authentication and authorization in the same invocation using the user id, password, and other request data. The invocation occurs during the Apache httpd API authentication phase. If the application returns 200 and the same provider is invoked during the authorization phase (via &lt;code&gt;Require&lt;/code&gt;), mod_authnz_fcgi will return success for the authorization phase without invoking the application. Example application:</source>
          <target state="translated">このモードでは、Webサーバーに依存しないFastCGI &lt;code&gt;AUTHORIZER&lt;/code&gt; プロトコルがサポートされ、 &lt;code&gt;FCGI_ROLE&lt;/code&gt; は &lt;code&gt;AUTHORIZER&lt;/code&gt; に設定され、 FCGI_APACHE_ROLEは設定されません。 アプリケーションは、 &lt;em&gt;AuthnzFcgiDefineProvider&lt;/em&gt;を使用してプロバイダータイプ&lt;em&gt;authnz&lt;/em&gt;として定義する必要があります。 アプリケーションは、ユーザーID、パスワード、およびその他の要求データを使用して、同じ呼び出しで認証と承認の両方を処理することが期待されています。 呼び出しは、Apache httpd API認証フェーズ中に発生します。 アプリケーションが200を返し、同じプロバイダーが承認段階で（ &lt;code&gt;Require&lt;/code&gt; を介して）呼び出された場合、mod_authnz_fcgiはアプリケーションを呼び出さずに承認段階の成功を返します。 応用例：</target>
        </trans-unit>
        <trans-unit id="07824d5add858ce633d70fd83a9db60a2ac99a1b" translate="yes" xml:space="preserve">
          <source>In this recipe, we assume that we'll be using the hostname &lt;code&gt;www.SITE.example.com&lt;/code&gt; for each user, and serve their content out of &lt;code&gt;/home/SITE/www&lt;/code&gt;.</source>
          <target state="translated">このレシピでは、ユーザーごとにホスト名 &lt;code&gt;www.SITE.example.com&lt;/code&gt; を使用し、そのコンテンツを &lt;code&gt;/home/SITE/www&lt;/code&gt; から提供することを想定しています。</target>
        </trans-unit>
        <trans-unit id="54e2418d25a51853e435916bf9aa5d5ec8184c5b" translate="yes" xml:space="preserve">
          <source>In this recipe, we discuss how to block persistent requests from a particular robot, or user agent.</source>
          <target state="translated">このレシピでは、特定のロボットやユーザーエージェントからの永続的なリクエストをブロックする方法について説明します。</target>
        </trans-unit>
        <trans-unit id="645ddd70d4398fd46db12501940cfae5e9ae7b84" translate="yes" xml:space="preserve">
          <source>In this scenario all files requested in &lt;code&gt;/cgi-bin/&lt;/code&gt; will be handled by the file you have configured, this allows you to use your own custom handler. You may want to use this as a wrapper for CGI so that you can add content, or some other bespoke action.</source>
          <target state="translated">このシナリオでは、 &lt;code&gt;/cgi-bin/&lt;/code&gt; 要求されたすべてのファイルは、構成したファイルによって処理されます。これにより、独自のカスタムハンドラーを使用できます。 これをCGIのラッパーとして使用して、コンテンツやその他の特注のアクションを追加できます。</target>
        </trans-unit>
        <trans-unit id="819dd428bcdc345970b8ad15a5ed515a56bb8ba4" translate="yes" xml:space="preserve">
          <source>In this scenario, &lt;code&gt;http://www.example.com/&lt;/code&gt; is health checked by sending a &lt;code&gt;GET /status.php&lt;/code&gt; request to that server and seeing that the returned page does not include the string &lt;em&gt;Under maintenance&lt;/em&gt;. If it does, that server is put in health-check fail mode, and disabled. This dynamic check is performed every 30 seconds, which is the default.</source>
          <target state="translated">このシナリオでは、 &lt;code&gt;http://www.example.com/&lt;/code&gt; は、 &lt;code&gt;GET /status.php&lt;/code&gt; リクエストをそのサーバーに送信し、返されたページに文字列&lt;em&gt;Under maintenanceが&lt;/em&gt;含まれていないことを確認することにより、ヘルスチェックされます。 存在する場合、そのサーバーはヘルスチェック失敗モードになり、無効になります。 この動的チェックは、デフォルトである30秒ごとに実行されます。</target>
        </trans-unit>
        <trans-unit id="0bcdf5b48d6c8fcb1c0c0236a490e008ca41c3d3" translate="yes" xml:space="preserve">
          <source>In this scenario, the cache behaves as if it has been &quot;bolted on&quot; to the back of the server.</source>
          <target state="translated">このシナリオでは、キャッシュはサーバーの後ろに「ボルトオン」されたかのように動作します。</target>
        </trans-unit>
        <trans-unit id="b29ddb25e9435785b8c6b449418ff365ec1875b8" translate="yes" xml:space="preserve">
          <source>In this scenario, the cache behaves as if it has been &quot;bolted on&quot; to the front of the server.</source>
          <target state="translated">このシナリオでは、キャッシュはサーバーの前に「ボルトオン」されたかのように動作します。</target>
        </trans-unit>
        <trans-unit id="2dd6166bfd0e409724bdedae14c5a951806c21dd" translate="yes" xml:space="preserve">
          <source>In this second example, instead of failing the request, we display an alternate image instead.</source>
          <target state="translated">この 2 番目の例では、リクエストを失敗させる代わりに、代替の画像を表示します。</target>
        </trans-unit>
        <trans-unit id="ff3ae4281c6f6e26dc13dcce73e9de5150ac897b" translate="yes" xml:space="preserve">
          <source>In this trace, a client has requested a 10KB static file from the httpd. Traces of non-static requests or requests with content negotiation look wildly different (and quite ugly in some cases).</source>
          <target state="translated">このトレースでは、クライアントが httpd から 10KB の静的ファイルをリクエストしています。静的ではないリクエストやコンテントネゴシエーションを伴うリクエストのトレースは、 大きく異なって見えます (場合によっては非常に醜いものもあります)。</target>
        </trans-unit>
        <trans-unit id="02d20292d1efb7e80bb2830657bef9c667c0b773" translate="yes" xml:space="preserve">
          <source>In this trace, the listener thread is running within LWP #67.</source>
          <target state="translated">このトレースでは、リスナースレッドがLWP #67内で実行されている。</target>
        </trans-unit>
        <trans-unit id="c41030c7b07546ebdaa9a18c35f76fc92f756d1d" translate="yes" xml:space="preserve">
          <source>In this way, documents that are infrequently updated can be served in static form. if documents need to be refreshed, they can be deleted from the document directory, and they will then be regenerated the next time they are requested.</source>
          <target state="translated">このようにして、更新頻度の低いドキュメントは静的な形式で提供することができます。 ドキュメントを更新する必要がある場合は、ドキュメントディレクトリから削除することができ、次に要求されたときに再生成されます。</target>
        </trans-unit>
        <trans-unit id="6bc2ec3fcaa7a16479521200d5da5d15aa187ea3" translate="yes" xml:space="preserve">
          <source>In typical operation, Apache is started by the root user, and it switches to the user defined by the &lt;code&gt;&lt;a href=&quot;../mod/mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; directive to serve hits. As is the case with any command that root executes, you must take care that it is protected from modification by non-root users. Not only must the files themselves be writeable only by root, but so must the directories, and parents of all directories. For example, if you choose to place ServerRoot in &lt;code&gt;/usr/local/apache&lt;/code&gt; then it is suggested that you create that directory as root, with commands like these:</source>
          <target state="translated">通常の操作では、Apacheはrootユーザーによって開始され、ヒットを提供するために &lt;code&gt;&lt;a href=&quot;../mod/mod_unixd#user&quot;&gt;User&lt;/a&gt;&lt;/code&gt; ディレクティブによって定義されたユーザーに切り替わります。 rootが実行するコマンドと同様に、root以外のユーザーによる変更から保護されるように注意する必要があります。 ファイル自体はrootのみが書き込み可能である必要があるだけでなく、ディレクトリ、およびすべてのディレクトリの親も同様である必要があります。 たとえば、ServerRootを &lt;code&gt;/usr/local/apache&lt;/code&gt; に配置する場合は、次のようなコマンドを使用して、そのディレクトリをルートとして作成することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="25c66429b8ac221feef28ca30aebe876b9b4b7fe" translate="yes" xml:space="preserve">
          <source>In your server configuration file, you'll see a line such as:</source>
          <target state="translated">サーバー設定ファイルには、次のような行があります。</target>
        </trans-unit>
        <trans-unit id="6a1114721ce15ed35f16a82f7e242f54e257849e" translate="yes" xml:space="preserve">
          <source>In-Depth Discussion of Virtual Host Matching</source>
          <target state="translated">バーチャルホストマッチングの徹底討論</target>
        </trans-unit>
        <trans-unit id="dc56364317cf88f74596613a331ab9866894ec05" translate="yes" xml:space="preserve">
          <source>In-Memory Caching</source>
          <target state="translated">インメモリキャッシング</target>
        </trans-unit>
        <trans-unit id="88713e02eb04f142ad5a4309f90cadfce4e07705" translate="yes" xml:space="preserve">
          <source>Include &lt;var&gt;FEATURE&lt;/var&gt;. The default value for &lt;var&gt;ARG&lt;/var&gt; is &lt;code&gt;yes&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;FEATURE&lt;/var&gt; を含めます。 &lt;var&gt;ARG&lt;/var&gt; のデフォルト値は &lt;code&gt;yes&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="f461d3ca7d12a08d907beea3284b66b61e324789" translate="yes" xml:space="preserve">
          <source>Include Directive</source>
          <target state="translated">インクルード指令</target>
        </trans-unit>
        <trans-unit id="0537d7dfb2f6436ddb848c19841e34bf47adf2ad" translate="yes" xml:space="preserve">
          <source>Include Variables</source>
          <target state="translated">インクルード変数</target>
        </trans-unit>
        <trans-unit id="aa2f30a34bc4d7847696c0adfea923e5d9c322bd" translate="yes" xml:space="preserve">
          <source>Include the provider you're cacheing for in an &lt;code&gt;AuthnCacheProvideFor&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;AuthnCacheProvideFor&lt;/code&gt; ディレクティブに、 キャッシュするプロバイダーを含めます。</target>
        </trans-unit>
        <trans-unit id="beca8e894fe113f1a53b75e0e51d6f072bfc985f" translate="yes" xml:space="preserve">
          <source>IncludeOptional Directive</source>
          <target state="translated">インクルードオプション指令</target>
        </trans-unit>
        <trans-unit id="a2f06e3b6ff40817d88f03cf87f7c344647d48d1" translate="yes" xml:space="preserve">
          <source>Includes other configuration files from within the server configuration files</source>
          <target state="translated">サーバ設定ファイル内の他の設定ファイルを含む</target>
        </trans-unit>
        <trans-unit id="f74f0dbf400d3ae05a3b7f43b899ad122211bda0" translate="yes" xml:space="preserve">
          <source>Including a standard footer</source>
          <target state="translated">標準のフッターを含む</target>
        </trans-unit>
        <trans-unit id="0cc9ab92f6f5677021de486d6b660f0611bb0ffb" translate="yes" xml:space="preserve">
          <source>Including the results of a CGI program</source>
          <target state="translated">CGIプログラムの結果を含む</target>
        </trans-unit>
        <trans-unit id="a1496da1d37865b9a22c43fda76935a6ed2360ed" translate="yes" xml:space="preserve">
          <source>Incremental IndexOptions</source>
          <target state="translated">インクリメンタルインデックスオプション</target>
        </trans-unit>
        <trans-unit id="c2df9b932637fe9d32a0f16da1c11873398f873d" translate="yes" xml:space="preserve">
          <source>Index</source>
          <target state="translated">Index</target>
        </trans-unit>
        <trans-unit id="5da36416d25b61717641ed315af5a7d3ffda7dbe" translate="yes" xml:space="preserve">
          <source>IndexHeadInsert</source>
          <target state="translated">IndexHeadInsert</target>
        </trans-unit>
        <trans-unit id="0f7a5901a9e1a7c51f959e216002fe706896538a" translate="yes" xml:space="preserve">
          <source>IndexHeadInsert Directive</source>
          <target state="translated">IndexHeadInsert ディレクティブ</target>
        </trans-unit>
        <trans-unit id="e58018f7e781e663b99b91610ea61fec915deac6" translate="yes" xml:space="preserve">
          <source>IndexIgnore</source>
          <target state="translated">IndexIgnore</target>
        </trans-unit>
        <trans-unit id="b3eb03ebfb8feb898db19c7eef8e21f199452fed" translate="yes" xml:space="preserve">
          <source>IndexIgnore Directive</source>
          <target state="translated">インデックス無視指令</target>
        </trans-unit>
        <trans-unit id="7cbe5a165cb98bb0e114df71fea7a4b5aa683ced" translate="yes" xml:space="preserve">
          <source>IndexIgnoreReset</source>
          <target state="translated">IndexIgnoreReset</target>
        </trans-unit>
        <trans-unit id="fa04e8c9ee5024e9b4460491bc506131fccab762" translate="yes" xml:space="preserve">
          <source>IndexIgnoreReset Directive</source>
          <target state="translated">IndexIgnoreReset ディレクティブ</target>
        </trans-unit>
        <trans-unit id="fe526a0619b76be9ac38f677e9cc84a5336f9948" translate="yes" xml:space="preserve">
          <source>IndexOptions</source>
          <target state="translated">IndexOptions</target>
        </trans-unit>
        <trans-unit id="f58ef343dbeeccc0875d1edb7cd13e7a6a938f20" translate="yes" xml:space="preserve">
          <source>IndexOptions Directive</source>
          <target state="translated">インデックスオプション指令</target>
        </trans-unit>
        <trans-unit id="5d86ae44bf6726eae8a9dc72b10dc46bed0b6d70" translate="yes" xml:space="preserve">
          <source>IndexOrderDefault</source>
          <target state="translated">IndexOrderDefault</target>
        </trans-unit>
        <trans-unit id="b2b042a78462b941921fdbe199b0e3fc533f504c" translate="yes" xml:space="preserve">
          <source>IndexOrderDefault Directive</source>
          <target state="translated">IndexOrderDefault ディレクティブ</target>
        </trans-unit>
        <trans-unit id="44e7d881985bda03f6c61c01d6c1981377f790f3" translate="yes" xml:space="preserve">
          <source>IndexStyleSheet</source>
          <target state="translated">IndexStyleSheet</target>
        </trans-unit>
        <trans-unit id="536e7f5b206da5653b7b677a94f00e7542c71b9e" translate="yes" xml:space="preserve">
          <source>IndexStyleSheet Directive</source>
          <target state="translated">IndexStyleSheet ディレクティブ</target>
        </trans-unit>
        <trans-unit id="f642ee196088372ea886186c6c617515599afd3f" translate="yes" xml:space="preserve">
          <source>Indexes</source>
          <target state="translated">Indexes</target>
        </trans-unit>
        <trans-unit id="aea5a35644a6038ea4b9ed3fbbbdbb7d894a875b" translate="yes" xml:space="preserve">
          <source>Individual directives that are allowed in &lt;code&gt;.htaccess&lt;/code&gt; files</source>
          <target state="translated">&lt;code&gt;.htaccess&lt;/code&gt; ファイルで許可される個々のディレクティブ</target>
        </trans-unit>
        <trans-unit id="f37500a23d3203eed506ce9901ac4b574d1e9f98" translate="yes" xml:space="preserve">
          <source>Inevitably, URLs will be requested for which no matching file can be found in the filesystem. This can happen for several reasons. In some cases, it can be a result of moving documents from one location to another. In this case, it is best to use &lt;a href=&quot;#redirect&quot;&gt;URL redirection&lt;/a&gt; to inform clients of the new location of the resource. In this way, you can assure that old bookmarks and links will continue to work, even though the resource is at a new location.</source>
          <target state="translated">必然的に、ファイルシステムで一致するファイルが見つからないURLが要求されます。 これにはいくつかの理由が考えられます。 場合によっては、ドキュメントをある場所から別の場所に移動したことが原因である可能性があります。 この場合、 &lt;a href=&quot;#redirect&quot;&gt;URLリダイレクト&lt;/a&gt;を使用して、リソースの新しい場所をクライアントに通知するのが最適です。 このようにして、リソースが新しい場所にある場合でも、古いブックマークとリンクが引き続き機能することを保証できます。</target>
        </trans-unit>
        <trans-unit id="fa9dbeb9939842bde9307c90e385dafa26993e97" translate="yes" xml:space="preserve">
          <source>Influenced by &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;core#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; in version 2.0.51 and later</source>
          <target state="translated">バージョン2.0.51以降では、 &lt;code&gt;&lt;a href=&quot;core#limit&quot;&gt;&amp;lt;Limit&amp;gt;&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;core#limitexcept&quot;&gt;&amp;lt;LimitExcept&amp;gt;&lt;/a&gt;&lt;/code&gt; の影響を受けます</target>
        </trans-unit>
        <trans-unit id="0eb5ed506e4923c28d7f4a8aa69efe99b3ad75d1" translate="yes" xml:space="preserve">
          <source>Information</source>
          <target state="translated">Information</target>
        </trans-unit>
        <trans-unit id="bb20a906b4528032bee3f0ed17eea35f75173c3e" translate="yes" xml:space="preserve">
          <source>Information on &lt;a href=&quot;../mod/mod_so#creating&quot;&gt;creating loadable modules&lt;/a&gt; is also available.</source>
          <target state="translated">&lt;a href=&quot;../mod/mod_so#creating&quot;&gt;ロード可能なモジュールの作成&lt;/a&gt;に関する情報も利用できます。</target>
        </trans-unit>
        <trans-unit id="94554924bfd63dd62927553b3e660b70fb0083d0" translate="yes" xml:space="preserve">
          <source>Information on the latest version of Apache can be found on the Apache web server at &lt;a href=&quot;http://www.apache.org/&quot;&gt;http://www.apache.org/&lt;/a&gt;. This will list the current release, any more recent alpha or beta-test releases, together with details of mirror web and anonymous ftp sites. Binary builds of the latest releases of Apache 2.0 for NetWare can be downloaded from &lt;a href=&quot;http://www.apache.org/dist/httpd/binaries/netware&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Apacheの最新バージョンに関する情報は、Apache Webサーバー（ &lt;a href=&quot;http://www.apache.org/&quot;&gt;http://www.apache.org/）にあります&lt;/a&gt; 。 これにより、現在のリリース、より最近のアルファまたはベータテストリリース、およびミラーWebサイトと匿名FTPサイトの詳細が一覧表示されます。 NetWare用Apache 2.0の最新リリースのバイナリビルドは、 &lt;a href=&quot;http://www.apache.org/dist/httpd/binaries/netware&quot;&gt;こちら&lt;/a&gt;からダウンロードできます 。</target>
        </trans-unit>
        <trans-unit id="4715201bec57d0115416cafeba39925788d5a06c" translate="yes" xml:space="preserve">
          <source>Information provided in the &lt;code&gt;Via&lt;/code&gt; HTTP response header for proxied requests</source>
          <target state="translated">プロキシされたリクエストの &lt;code&gt;Via&lt;/code&gt; HTTP応答ヘッダーで提供される情報</target>
        </trans-unit>
        <trans-unit id="31405a1a8929a8c848e159aba889f1e3aea9d103" translate="yes" xml:space="preserve">
          <source>Informational.</source>
          <target state="translated">Informational.</target>
        </trans-unit>
        <trans-unit id="e7ffa9bcc2ed87aaf2d994005ff09e7c967c1838" translate="yes" xml:space="preserve">
          <source>Inherit ProxyPass directives defined from the main server</source>
          <target state="translated">メインサーバから定義された ProxyPass ディレクティブを継承する</target>
        </trans-unit>
        <trans-unit id="92388d95dbb28857a5272d28c6b24c0ec1a3774a" translate="yes" xml:space="preserve">
          <source>Inherit ProxyPassed Balancers/Workers from the main server</source>
          <target state="translated">メインサーバから ProxyPassed BalancersWorkers を継承します。</target>
        </trans-unit>
        <trans-unit id="dcb49b8402c085d502915ad3e2fc19353eace148" translate="yes" xml:space="preserve">
          <source>Initial caching of an entry</source>
          <target state="translated">エントリの初期キャッシュ</target>
        </trans-unit>
        <trans-unit id="8d29ba448e9a76e6a06128a533f22bf2789968ba" translate="yes" xml:space="preserve">
          <source>Initial or Resumed SSL Session. Note: multiple requests may be served over the same (Initial or Resumed) SSL session if HTTP KeepAlive is in use</source>
          <target state="translated">初期または再開されたSSLセッション。注意:HTTP KeepAlive が使用されている場合、複数のリクエストが同じ (初期または再開された)SSL セッション上で提供されることがあります。</target>
        </trans-unit>
        <trans-unit id="9a95658cbf3576faa430a90c286fe7f1820b120b" translate="yes" xml:space="preserve">
          <source>Initialize the cache. The cname must be of maximum length 16 characters, and uniquely identifies the consumer of the cache within the server; using the module name is recommended, e.g. &quot;mod_ssl-sess&quot;. This string may be used within a filesystem path so use of only alphanumeric [a-z0-9_-] characters is recommended. If hints is non-NULL, it gives a set of hints for the provider. Return APR error code.</source>
          <target state="translated">キャッシュを初期化します。cname は最大 16 文字で、サーバ内のキャッシュの消費者を一意に識別します。この文字列はファイルシステムのパスの中で使われる可能性があるので、 英数字の [a-z0-9_-]文字のみを使うことをお勧めします。hints が NULL 以外の場合は、プロバイダのヒントのセットを提供します。APRエラーコードを返します。</target>
        </trans-unit>
        <trans-unit id="86895df783eef6d42a7638aab5d419c0ebe6a182" translate="yes" xml:space="preserve">
          <source>Inline Login</source>
          <target state="translated">インラインログイン</target>
        </trans-unit>
        <trans-unit id="f2ccc04104520c4ec96f916bc2af0e8614eff2c2" translate="yes" xml:space="preserve">
          <source>Inline Login with Body Preservation</source>
          <target state="translated">ボディ保存でインラインログイン</target>
        </trans-unit>
        <trans-unit id="7688a604fb2f68c037f91f852daa6253aab53c8b" translate="yes" xml:space="preserve">
          <source>Input Decompression</source>
          <target state="translated">入力減圧</target>
        </trans-unit>
        <trans-unit id="915144f5d82b087dc1d6d63ef13ea1fb8ac6dccc" translate="yes" xml:space="preserve">
          <source>Input file from which the dbm is to be created. The file should be formated with one record per line, of the form: &lt;code&gt;key value&lt;/code&gt;. See the documentation for &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; for further details of this file's format and meaning.</source>
          <target state="translated">dbmが作成される入力ファイル。 ファイルは、 &lt;code&gt;key value&lt;/code&gt; 形式で、1行に1レコードでフォーマットする必要があります 。 このファイルの形式と意味の詳細については、 &lt;code&gt;&lt;a href=&quot;../mod/mod_rewrite#rewritemap&quot;&gt;RewriteMap&lt;/a&gt;&lt;/code&gt; のドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="12a0928ba0ac43bff0878d271fd3f7adf2c7113c" translate="yes" xml:space="preserve">
          <source>InputSed Directive</source>
          <target state="translated">インプットセド指令</target>
        </trans-unit>
        <trans-unit id="6f48b508fe7f7aadd73bd38182a3e4c277f45b3e" translate="yes" xml:space="preserve">
          <source>Insert &lt;var&gt;filter-name&lt;/var&gt; at the start of the filter chain</source>
          <target state="translated">フィルターチェーンの先頭に &lt;var&gt;filter-name&lt;/var&gt; を挿入します</target>
        </trans-unit>
        <trans-unit id="41814aef32ab12845d320fc0a5dfa31e4e23e591" translate="yes" xml:space="preserve">
          <source>Insert INFLATE filter only if &quot;gzip&quot; is NOT in the Accept-Encoding header. This filter runs with ftype CONTENT_SET.</source>
          <target state="translated">Accept-Encoding ヘッダに &quot;gzip&quot; が含まれていない場合にのみ INFLATE フィルタを挿入する。このフィルタは ftype CONTENT_SET で実行されます。</target>
        </trans-unit>
        <trans-unit id="bebb658d8064779630693e250eca0d19de5f8835" translate="yes" xml:space="preserve">
          <source>Inserts text in the HEAD section of an index page.</source>
          <target state="translated">インデックスページのHEADセクションにテキストを挿入します。</target>
        </trans-unit>
        <trans-unit id="fd6c3ebf7befca9f8208f86c76e4d4180303745c" translate="yes" xml:space="preserve">
          <source>Install</source>
          <target state="translated">Install</target>
        </trans-unit>
        <trans-unit id="31bfb6586e8413e3deba51f7bc2741ca065af3ef" translate="yes" xml:space="preserve">
          <source>Install Apache httpd as a Windows NT service; change startup options for the Apache httpd service; and uninstall the Apache httpd service.</source>
          <target state="translated">Apache httpd を Windows NT サービスとしてインストールし、Apache httpd サービスの起動オプションを変更し、Apache httpd サービスをアンインストールします。</target>
        </trans-unit>
        <trans-unit id="3ac72855ee772f26679272dd1e0b4940235d0525" translate="yes" xml:space="preserve">
          <source>Install C header files for non-gcc in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;oldincludedir&lt;/code&gt; is set to &lt;code&gt;/usr/include&lt;/code&gt;. This option is offered by &lt;code&gt;autoconf&lt;/code&gt; and currently unused.</source>
          <target state="translated">gcc以外のCヘッダーファイルを &lt;var&gt;DIR&lt;/var&gt; にインストールします。 デフォルトでは、 &lt;code&gt;oldincludedir&lt;/code&gt; は &lt;code&gt;/usr/include&lt;/code&gt; に設定されています 。 このオプションは &lt;code&gt;autoconf&lt;/code&gt; によって提供され、現在は使用されていません。</target>
        </trans-unit>
        <trans-unit id="c53fabaf0b71445ff86503e2b090c67917f362de" translate="yes" xml:space="preserve">
          <source>Install C header files in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;includedir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/include&lt;/code&gt;.</source>
          <target state="translated">Cヘッダーファイルを &lt;var&gt;DIR&lt;/var&gt; にインストールします。 デフォルトでは、 &lt;code&gt;includedir&lt;/code&gt; は &lt;code&gt;EPREFIX/include&lt;/code&gt; に設定されています 。</target>
        </trans-unit>
        <trans-unit id="e89bcc8805a2632b427e732380e4e693cb5d1f89" translate="yes" xml:space="preserve">
          <source>Install architecture-dependent files in &lt;var&gt;EPREFIX&lt;/var&gt;. By default the installation directory is set to the &lt;var&gt;PREFIX&lt;/var&gt; directory.</source>
          <target state="translated">&lt;var&gt;EPREFIX&lt;/var&gt; にアーキテクチャー依存ファイルをインストールします。 デフォルトでは、インストールディレクトリは &lt;var&gt;PREFIX&lt;/var&gt; ディレクトリに設定されています。</target>
        </trans-unit>
        <trans-unit id="8b1a58b2caacd0ec0115212dcca1650e5e11af8c" translate="yes" xml:space="preserve">
          <source>Install architecture-independent files in &lt;var&gt;PREFIX&lt;/var&gt;. By default the installation directory is set to &lt;code&gt;/usr/local/apache2&lt;/code&gt;.</source>
          <target state="translated">アーキテクチャに依存しないファイルを &lt;var&gt;PREFIX&lt;/var&gt; にインストールします。 デフォルトでは、インストールディレクトリは &lt;code&gt;/usr/local/apache2&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="2e082c15a1da8949c9c6deaa3f4aac3a35edab78" translate="yes" xml:space="preserve">
          <source>Install info documentation in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;infodir&lt;/code&gt; is set to &lt;code&gt;PREFIX/info&lt;/code&gt;. This option is currently unused.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; に情報ドキュメントをインストールします。 デフォルトでは、 &lt;code&gt;infodir&lt;/code&gt; は &lt;code&gt;PREFIX/info&lt;/code&gt; に設定されています。 このオプションは現在使用されていません。</target>
        </trans-unit>
        <trans-unit id="e90653f316ae47b36421f8e172859f26795c10ae" translate="yes" xml:space="preserve">
          <source>Install modifiable architecture-independent data in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;sharedstatedir&lt;/code&gt; is set to &lt;code&gt;PREFIX/com&lt;/code&gt;. This option is offered by &lt;code&gt;autoconf&lt;/code&gt; and currently unused.</source>
          <target state="translated">変更可能なアーキテクチャに依存しないデータを &lt;var&gt;DIR&lt;/var&gt; にインストールします。 デフォルトでは、 &lt;code&gt;sharedstatedir&lt;/code&gt; は &lt;code&gt;PREFIX/com&lt;/code&gt; に設定されています。 このオプションは &lt;code&gt;autoconf&lt;/code&gt; によって提供され、現在は使用されていません。</target>
        </trans-unit>
        <trans-unit id="13e52d2ee35c93084ab24a1c9d181788057cd9c3" translate="yes" xml:space="preserve">
          <source>Install modifiable single-machine data in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;localstatedir&lt;/code&gt; is set to &lt;code&gt;PREFIX/var&lt;/code&gt;. This option is offered by &lt;code&gt;autoconf&lt;/code&gt; and currently unused.</source>
          <target state="translated">変更可能な単一マシンのデータを &lt;var&gt;DIR&lt;/var&gt; にインストールします。 デフォルトでは、 &lt;code&gt;localstatedir&lt;/code&gt; は &lt;code&gt;PREFIX/var&lt;/code&gt; に設定されています。 このオプションは &lt;code&gt;autoconf&lt;/code&gt; によって提供され、現在は使用されていません。</target>
        </trans-unit>
        <trans-unit id="7ca8946423f290d596a3b26f5cca81a6165e6142" translate="yes" xml:space="preserve">
          <source>Install object code libraries in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;libdir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/lib&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; にオブジェクトコードライブラリをインストールします。 デフォルトでは、 &lt;code&gt;libdir&lt;/code&gt; は &lt;code&gt;EPREFIX/lib&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="1eb7faa4bad5c2bfe1917969bc44b662de93d1f7" translate="yes" xml:space="preserve">
          <source>Install read-only architecture-independent data in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;datadir&lt;/code&gt; is set to &lt;code&gt;PREFIX/share&lt;/code&gt;. This option is offered by &lt;code&gt;autoconf&lt;/code&gt; and currently unused.</source>
          <target state="translated">読み取り専用のアーキテクチャに依存しないデータを &lt;var&gt;DIR&lt;/var&gt; にインストールします。 デフォルトでは、 &lt;code&gt;datadir&lt;/code&gt; は &lt;code&gt;PREFIX/share&lt;/code&gt; に設定されています 。 このオプションは &lt;code&gt;autoconf&lt;/code&gt; によって提供され、現在は使用されていません。</target>
        </trans-unit>
        <trans-unit id="58dfd1b6f4824cdfad602862abc9e7962274edf4" translate="yes" xml:space="preserve">
          <source>Install read-only single-machine data like the server configuration files &lt;code&gt;httpd.conf&lt;/code&gt;, &lt;code&gt;mime.types&lt;/code&gt;, etc. in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;sysconfdir&lt;/code&gt; is set to &lt;code&gt;PREFIX/conf&lt;/code&gt;.</source>
          <target state="translated">サーバー構成ファイル &lt;code&gt;httpd.conf&lt;/code&gt; 、 &lt;code&gt;mime.types&lt;/code&gt; などの読み取り専用の単一マシンデータを &lt;var&gt;DIR&lt;/var&gt; にインストールします。 デフォルトでは、 &lt;code&gt;sysconfdir&lt;/code&gt; は &lt;code&gt;PREFIX/conf&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="67f3487f7c00dbb703634414e18aeb9e470d8707" translate="yes" xml:space="preserve">
          <source>Install the man documentation in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;mandir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/man&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; に manドキュメントをインストールします。 デフォルトでは、 &lt;code&gt;mandir&lt;/code&gt; は &lt;code&gt;EPREFIX/man&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="525c9e57b004e303e6bb12df2cf37f7ed548ce50" translate="yes" xml:space="preserve">
          <source>Install the program executables (i.e., shared modules) in &lt;var&gt;DIR&lt;/var&gt;. By default &lt;code&gt;libexecdir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/modules&lt;/code&gt;.</source>
          <target state="translated">プログラムの実行可能ファイル（つまり、共有モジュール）を &lt;var&gt;DIR&lt;/var&gt; にインストールします。 デフォルトでは、 &lt;code&gt;libexecdir&lt;/code&gt; は &lt;code&gt;EPREFIX/modules&lt;/code&gt; に設定されています 。</target>
        </trans-unit>
        <trans-unit id="5742964c8040aa93dc750715359c5dec4e7b2c5b" translate="yes" xml:space="preserve">
          <source>Install the system administrator executables in &lt;var&gt;DIR&lt;/var&gt;. Those are server programs like &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt;, etc. which are necessary to run the Apache HTTP Server. By default &lt;code&gt;sbindir&lt;/code&gt; is set to &lt;code&gt;EPREFIX/sbin&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;DIR&lt;/var&gt; にシステム管理者の実行可能ファイルをインストールします。 これらは、Apache HTTP Serverを実行するために必要な &lt;code&gt;&lt;a href=&quot;httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;apachectl&quot;&gt;apachectl&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;suexec&quot;&gt;suexec&lt;/a&gt;&lt;/code&gt; などのサーバープログラムです。 デフォルトでは、 &lt;code&gt;sbindir&lt;/code&gt; は &lt;code&gt;EPREFIX/sbin&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="703c7b4f374df4daddad22e3091bb90aca463172" translate="yes" xml:space="preserve">
          <source>Install user executables in &lt;var&gt;DIR&lt;/var&gt;. The user executables are supporting programs like &lt;code&gt;&lt;a href=&quot;htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;dbmmanage&quot;&gt;dbmmanage&lt;/a&gt;&lt;/code&gt;, etc. which are useful for site administrators. By default &lt;var&gt;DIR&lt;/var&gt; is set to &lt;code&gt;EPREFIX/bin&lt;/code&gt;.</source>
          <target state="translated">ユーザー実行可能ファイルを &lt;var&gt;DIR&lt;/var&gt; にインストールします。 ユーザー実行可能ファイルは、サイト管理者に役立つ &lt;code&gt;&lt;a href=&quot;htpasswd&quot;&gt;htpasswd&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;dbmmanage&quot;&gt;dbmmanage&lt;/a&gt;&lt;/code&gt; などのサポートプログラムです。 デフォルトでは、 &lt;var&gt;DIR&lt;/var&gt; は &lt;code&gt;EPREFIX/bin&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="fec76963adae1405f24412e85f5691c85faaaf16" translate="yes" xml:space="preserve">
          <source>Installation directories</source>
          <target state="translated">インストールディレクトリ</target>
        </trans-unit>
        <trans-unit id="04835d690c34b4d477956ab179bcbdc338d0acf7" translate="yes" xml:space="preserve">
          <source>Installing Apache for NetWare</source>
          <target state="translated">NetWare 用の Apache のインストール</target>
        </trans-unit>
        <trans-unit id="25698238529e36c36bbff9a1cf8864afeb7e862b" translate="yes" xml:space="preserve">
          <source>Installing from source</source>
          <target state="translated">ソースからのインストール</target>
        </trans-unit>
        <trans-unit id="66a1e1ced0e07213cbfa6f33d6a26ffd394053a4" translate="yes" xml:space="preserve">
          <source>Installing on Fedora/CentOS/Red Hat Enterprise Linux</source>
          <target state="translated">FedoraCentOSRed Hat Enterprise Linux へのインストール</target>
        </trans-unit>
        <trans-unit id="a5628a9680ce3130226426c266f8760192803c47" translate="yes" xml:space="preserve">
          <source>Installing on Ubuntu/Debian</source>
          <target state="translated">UbuntuDebianへのインストール</target>
        </trans-unit>
        <trans-unit id="322b4792b6d9555f37ed838af513dc59f6437e8c" translate="yes" xml:space="preserve">
          <source>Installing the Server</source>
          <target state="translated">サーバーのインストール</target>
        </trans-unit>
        <trans-unit id="2a53e86ba7d4b4f6f55e30b3861ead0ba1220100" translate="yes" xml:space="preserve">
          <source>Instead of listing all dns names on the same line, you may use &lt;code&gt;MDMember&lt;/code&gt; to add such names to a managed domain.</source>
          <target state="translated">同じ行にすべてのDNS名をリストする代わりに、 &lt;code&gt;MDMember&lt;/code&gt; を使用してそのような名前を管理対象ドメインに追加できます。</target>
        </trans-unit>
        <trans-unit id="441cd62e4eff11e12f87b88fc025333c0822ef8c" translate="yes" xml:space="preserve">
          <source>Instead, provided with httpd is the &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; tool which allows you to clean the cache periodically. Determining how frequently to run &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt; and what target size to use for the cache is somewhat complex and trial and error may be needed to select optimal values.</source>
          <target state="translated">代わりに、httpdには、定期的にキャッシュをクリーンアップできる&lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt;ツールが用意されています。 &lt;a href=&quot;programs/htcacheclean&quot;&gt;htcacheclean&lt;/a&gt;を実行する頻度とキャッシュに使用するターゲットサイズの決定はやや複雑で、最適な値を選択するには試行錯誤が必要になる場合があります。</target>
        </trans-unit>
        <trans-unit id="7c1b056960a4c327a5977fcc03433bdb01cb6586" translate="yes" xml:space="preserve">
          <source>Instructs Apache to terminate all running worker threads as they become idle, reread the configuration file and restart each worker thread based on the new configuration.</source>
          <target state="translated">実行中のワーカースレッドがアイドルになったら全てのワーカースレッドを終了させ、 設定ファイルを読み直して、新しい設定に基づいて各ワーカースレッドを再起動するように Apache に指示します。</target>
        </trans-unit>
        <trans-unit id="9edcffff4461c9083fbff857f8dcee0f0769cbd4" translate="yes" xml:space="preserve">
          <source>Integer</source>
          <target state="translated">Integer</target>
        </trans-unit>
        <trans-unit id="8ee73d86e8c3fba0e58f78bb3fb22a6e6cf892fc" translate="yes" xml:space="preserve">
          <source>Integer equality</source>
          <target state="translated">整数等式</target>
        </trans-unit>
        <trans-unit id="79a373cb06f849745d1e3f88685c87b525c46b7a" translate="yes" xml:space="preserve">
          <source>Integer greater than</source>
          <target state="translated">より大きい整数</target>
        </trans-unit>
        <trans-unit id="97fab31e5da2e11e0a43753c6de14b4c2b13fd85" translate="yes" xml:space="preserve">
          <source>Integer greater than or equal</source>
          <target state="translated">以上の整数</target>
        </trans-unit>
        <trans-unit id="b8513165462817031f57dc66d8683e569bf33892" translate="yes" xml:space="preserve">
          <source>Integer inequality</source>
          <target state="translated">整数不等式</target>
        </trans-unit>
        <trans-unit id="cd2295a599b2be24f7be34f909f6305e21d3158e" translate="yes" xml:space="preserve">
          <source>Integer less than</source>
          <target state="translated">未満の整数</target>
        </trans-unit>
        <trans-unit id="ab9a5b5c159eb25d3e153cccff50b4968e9fa886" translate="yes" xml:space="preserve">
          <source>Integer less than or equal</source>
          <target state="translated">以下の整数</target>
        </trans-unit>
        <trans-unit id="9289421e6c38ac47b5bd9f96091631185aaa2694" translate="yes" xml:space="preserve">
          <source>Integrating Sessions with External Applications</source>
          <target state="translated">セッションを外部アプリケーションと統合する</target>
        </trans-unit>
        <trans-unit id="eb838e9ccd07e8b7fa352b08baa333726cd2e06f" translate="yes" xml:space="preserve">
          <source>Interaction between host-level access control and user authentication</source>
          <target state="translated">ホストレベルのアクセス制御とユーザ認証の相互作用</target>
        </trans-unit>
        <trans-unit id="301b2222062d0cd682168bda56f6664b16feb8ca" translate="yes" xml:space="preserve">
          <source>Interaction with the Server</source>
          <target state="translated">サーバーとの相互作用</target>
        </trans-unit>
        <trans-unit id="56d84efe9b4ce4f40a470abcc9c7844c7c816516" translate="yes" xml:space="preserve">
          <source>Interface which the program will listen on</source>
          <target state="translated">プログラムがリッスンするインターフェース</target>
        </trans-unit>
        <trans-unit id="fe9a0ef809ba887aa5875883a88580551336c502" translate="yes" xml:space="preserve">
          <source>Interleaved Priority Rule</source>
          <target state="translated">インターリーブプライオリティルール</target>
        </trans-unit>
        <trans-unit id="cc2af07e44ea8ed5c99018401dd5010f6d53309d" translate="yes" xml:space="preserve">
          <source>Intermediate CA certificates lie between the root CA certificate (which is installed in the browsers) and the server certificate (which you installed on the server). In order for the browser to be able to traverse and verify the trust chain from the server certificate to the root certificate it needs need to be given the intermediate certificates. The CAs should be able to provide you such intermediate certificate packages that can be installed on the server.</source>
          <target state="translated">中間CA証明書は、ルートCA証明書(ブラウザにインストールされている)とサーバ証明書(サーバにインストールされている)の間に存在します。ブラウザがサーバ証明書からルート証明書までのトラストチェーンをトラバースして検証できるようにするためには、中間証明書を与える必要があります。CA は、サーバにインストールできる中間証明書パッケージを提供してくれるはずです。</target>
        </trans-unit>
        <trans-unit id="2d4afc6452f78f45ab912ec448f7c08acfe72c99" translate="yes" xml:space="preserve">
          <source>Internal (Load Balancer) Example</source>
          <target state="translated">内部(ロードバランサー)の例</target>
        </trans-unit>
        <trans-unit id="373b5e08f5fc88cded97669a6d0b933cefcf2eda" translate="yes" xml:space="preserve">
          <source>Interoperability problems have led to the introduction of mechanisms to modify the way Apache behaves when talking to particular clients. To make these mechanisms as flexible as possible, they are invoked by defining environment variables, typically with &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif#browsermatch&quot;&gt;BrowserMatch&lt;/a&gt;&lt;/code&gt;, though &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod/mod_env#passenv&quot;&gt;PassEnv&lt;/a&gt;&lt;/code&gt; could also be used, for example.</source>
          <target state="translated">相互運用性の問題により、特定のクライアントと通信するときのApacheの動作を変更するメカニズムが導入されました。 これらのメカニズムを可能な限り柔軟にするために、通常は &lt;code&gt;&lt;a href=&quot;mod/mod_setenvif#browsermatch&quot;&gt;BrowserMatch&lt;/a&gt;&lt;/code&gt; で環境変数を定義することによって呼び出されますが、 &lt;code&gt;&lt;a href=&quot;mod/mod_env#setenv&quot;&gt;SetEnv&lt;/a&gt;&lt;/code&gt; や &lt;code&gt;&lt;a href=&quot;mod/mod_env#passenv&quot;&gt;PassEnv&lt;/a&gt;&lt;/code&gt; も使用できます。</target>
        </trans-unit>
        <trans-unit id="c4f2078422c49dcdb28306f6080b794e1176b4b6" translate="yes" xml:space="preserve">
          <source>Interpolate environment variables in &lt;code&gt;from-pattern&lt;/code&gt;. Patterns supported are as above.</source>
          <target state="translated">&lt;code&gt;from-pattern&lt;/code&gt; で環境変数を補間します。 サポートされるパターンは上記のとおりです。</target>
        </trans-unit>
        <trans-unit id="71fcab7687c6ca56131e82ad8073a1366f700b0b" translate="yes" xml:space="preserve">
          <source>Interpolate environment variables in &lt;code&gt;to-pattern&lt;/code&gt;. A string of the form &lt;code&gt;${varname|default}&lt;/code&gt; will be replaced by the value of environment variable &lt;code&gt;varname&lt;/code&gt;. If that is unset, it is replaced by &lt;code&gt;default&lt;/code&gt;. The &lt;code&gt;|default&lt;/code&gt; is optional.</source>
          <target state="translated">&lt;code&gt;to-pattern&lt;/code&gt; で環境変数を補間します。 &lt;code&gt;${varname|default}&lt;/code&gt; 形式の文字列は、環境変数 &lt;code&gt;varname&lt;/code&gt; の値に置き換えられます 。 これが設定されていない場合、 &lt;code&gt;default&lt;/code&gt; で置き換えられます 。 &lt;code&gt;|default&lt;/code&gt; はオプションです。</target>
        </trans-unit>
        <trans-unit id="4f7755c212a6f4f3777131fb95755de5f26090d8" translate="yes" xml:space="preserve">
          <source>Interpret the final parameter as a comment. When this option is specified, an additional string can be appended to the command line; this string will be stored in the &quot;Comment&quot; field of the database, associated with the specified username.</source>
          <target state="translated">最後のパラメータをコメントとして解釈します。このオプションが指定された場合、コマンドラインに追加の文字列を追加することができます。この文字列は、指定されたユーザ名に関連付けられたデータベースの「コメント」フィールドに格納されます。</target>
        </trans-unit>
        <trans-unit id="9d4078bbaa2b166e4b34ddffddfb5bb4f7210ddf" translate="yes" xml:space="preserve">
          <source>Interpret the last (right-most) question mark as the query string delimiter, instead of the first (left-most) as normally used. Available in 2.4.19 and later. &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_qsl&quot;&gt;details ...&lt;/a&gt;&lt;/em&gt;</source>
          <target state="translated">通常使用される最初（左端）の代わりに、最後（右端）の疑問符をクエリ文字列の区切り文字として解釈します。 2.4.19以降で使用できます。 &lt;em&gt;&lt;a href=&quot;../rewrite/flags#flag_qsl&quot;&gt;詳細...&lt;/a&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1f185b858444754bab61f3b4f962798b08922f03" translate="yes" xml:space="preserve">
          <source>Intranet Proxy</source>
          <target state="translated">イントラネットプロキシ</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="00828667736e561630c64dd17eea9e72ef056ea2" translate="yes" xml:space="preserve">
          <source>Introduction To SSL</source>
          <target state="translated">SSL入門</target>
        </trans-unit>
        <trans-unit id="5d824b95e8144a5378dc4a31cb9fbe74625bfb61" translate="yes" xml:space="preserve">
          <source>Introduction to Server Side Includes</source>
          <target state="translated">サーバーサイドの紹介</target>
        </trans-unit>
        <trans-unit id="aad1ca7c2b4d0ef3b41e2c881a1b30f71ac114c8" translate="yes" xml:space="preserve">
          <source>Introduction to regular expressions and mod_rewrite</source>
          <target state="translated">正規表現と mod_rewrite の紹介</target>
        </trans-unit>
        <trans-unit id="08d10f669df8738631d36a3d53daa201cc6404f5" translate="yes" xml:space="preserve">
          <source>Invalid character set names</source>
          <target state="translated">無効な文字セット名</target>
        </trans-unit>
        <trans-unit id="cc2ff723b5fbcf65f535d567797ec1300969e957" translate="yes" xml:space="preserve">
          <source>Invalid hyperlink</source>
          <target state="translated">無効なハイパーリンク</target>
        </trans-unit>
        <trans-unit id="f63d5c1b6033a0fded9e877bbe55ee9caaf6b71c" translate="yes" xml:space="preserve">
          <source>Invocation modes</source>
          <target state="translated">呼び出しモード</target>
        </trans-unit>
        <trans-unit id="256daf39bbbd5b0623bdb1ea206eb3b9e39fe885" translate="yes" xml:space="preserve">
          <source>Invoke a lua function in the auth_checker phase of processing a request. This can be used to implement arbitrary authentication and authorization checking. A very simple example:</source>
          <target state="translated">リクエストを処理する auth_checker フェーズで lua 関数を呼び出します。これを使用して、任意の認証や認可チェックを実装することができます。非常にシンプルな例です。</target>
        </trans-unit>
        <trans-unit id="467570b74f2a2cfd3d8eaa387a31644532520f67" translate="yes" xml:space="preserve">
          <source>Is &lt;strong&gt;d&lt;/strong&gt;irectory.</source>
          <target state="translated">直腸です。</target>
        </trans-unit>
        <trans-unit id="512cc414fe7aacb2c9a55ab7a031544f72982fb5" translate="yes" xml:space="preserve">
          <source>Is existing URL, via subrequest.</source>
          <target state="translated">サブリクエスト経由で既存のURL。</target>
        </trans-unit>
        <trans-unit id="ca05918c30259782c6d8b1c64c5d1bfedaa2db7a" translate="yes" xml:space="preserve">
          <source>Is existing file, via subrequest.</source>
          <target state="translated">サブリクエスト経由で既存のファイル。</target>
        </trans-unit>
        <trans-unit id="6884bcfb900ca88538526bf613a32a91ed65bc6c" translate="yes" xml:space="preserve">
          <source>Is it possible to provide HTTP and HTTPS from the same server?</source>
          <target state="translated">同じサーバーからHTTPとHTTPSを提供することは可能ですか?</target>
        </trans-unit>
        <trans-unit id="0e5839b02967334dd081518318d686041e1e8dfa" translate="yes" xml:space="preserve">
          <source>Is it possible to use Name-Based Virtual Hosting to identify different SSL virtual hosts?</source>
          <target state="translated">名前ベースのバーチャルホスティングを使用して、異なるSSLバーチャルホストを識別することは可能ですか?</target>
        </trans-unit>
        <trans-unit id="ee13216515a725666a57ee4a5097f27a5492af82" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;eq&lt;/strong&gt;ual to</source>
          <target state="translated">数値的に等しい</target>
        </trans-unit>
        <trans-unit id="c3888f5925ea1e3e71081b46fd2e8d6ea35ae588" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;g&lt;/strong&gt;reater &lt;strong&gt;t&lt;/strong&gt;han</source>
          <target state="translated">数値的に大きい</target>
        </trans-unit>
        <trans-unit id="24460245722e56eb7e3a1884d50138d24c3596c9" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;g&lt;/strong&gt;reater than or &lt;strong&gt;e&lt;/strong&gt;qual to</source>
          <target state="translated">数値的に大きいか等しい</target>
        </trans-unit>
        <trans-unit id="fe7858860fc094acb3a180f049ef31f9fa174b3b" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;l&lt;/strong&gt;ess &lt;strong&gt;t&lt;/strong&gt;han</source>
          <target state="translated">数値的に小さい</target>
        </trans-unit>
        <trans-unit id="9bdd4390959a37b0215d8ca3f3f5de76bd5e0c87" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;l&lt;/strong&gt;ess than or &lt;strong&gt;e&lt;/strong&gt;qual to</source>
          <target state="translated">数値的に小さいか等しい</target>
        </trans-unit>
        <trans-unit id="ca118febad438dcfd44ccc3a55c73befd82481a8" translate="yes" xml:space="preserve">
          <source>Is numerically &lt;strong&gt;n&lt;/strong&gt;ot &lt;strong&gt;e&lt;/strong&gt;qual to</source>
          <target state="translated">数値的に等しくない</target>
        </trans-unit>
        <trans-unit id="8f73215ae4c43c22b70e01286290341162bb95a2" translate="yes" xml:space="preserve">
          <source>Is regular &lt;strong&gt;f&lt;/strong&gt;ile.</source>
          <target state="translated">通常のファイルです。</target>
        </trans-unit>
        <trans-unit id="a315527a56b8bce07182a4b610953ff97879d792" translate="yes" xml:space="preserve">
          <source>Is regular file, with &lt;strong&gt;s&lt;/strong&gt;ize.</source>
          <target state="translated">通常のファイルで、サイズが異なります。</target>
        </trans-unit>
        <trans-unit id="e8c44a51bdfa00a81f53a1d6b762a35bb36ae77b" translate="yes" xml:space="preserve">
          <source>Is symbolic &lt;strong&gt;l&lt;/strong&gt;ink.</source>
          <target state="translated">象徴的な&lt;strong&gt;l&lt;/strong&gt;インクです。</target>
        </trans-unit>
        <trans-unit id="b4b81cfdb9379e0832584a6ea9c4aba5ee87381b" translate="yes" xml:space="preserve">
          <source>Is symbolic link, bash convention.</source>
          <target state="translated">シンボリックリンク、bashの規約です。</target>
        </trans-unit>
        <trans-unit id="e74bf80ec21022a47205fdc0a8ed1ab08ab0c03b" translate="yes" xml:space="preserve">
          <source>Is the user the owner of the file?</source>
          <target state="translated">ユーザーはファイルの所有者ですか?</target>
        </trans-unit>
        <trans-unit id="4a4582eb30cb664f6c0235b7ab352ca317b0f76d" translate="yes" xml:space="preserve">
          <source>Is there a difference on startup between a non-SSL-aware Apache and an SSL-aware Apache?</source>
          <target state="translated">起動時にSSL非対応のApacheとSSL対応のApacheの違いはありますか?</target>
        </trans-unit>
        <trans-unit id="cb71dc6ac67ac5aee2723818367c984b7b384fe2" translate="yes" xml:space="preserve">
          <source>Is this user the user allowed to run this wrapper? Only one user (the Apache user) is allowed to execute this program.</source>
          <target state="translated">このユーザはこのラッパーの実行を許可されていますか?一人のユーザ (Apache ユーザ)だけがこのプログラムの実行を許可されています。</target>
        </trans-unit>
        <trans-unit id="2587e48b81143beb59fc21b7be6db218f7fb98e3" translate="yes" xml:space="preserve">
          <source>Issuer</source>
          <target state="translated">Issuer</target>
        </trans-unit>
        <trans-unit id="45d376ce8e11552b1bb9692a78ffbf363981c7d9" translate="yes" xml:space="preserve">
          <source>Issuer DN of client's certificate</source>
          <target state="translated">クライアント証明書の発行者DN</target>
        </trans-unit>
        <trans-unit id="353aa54d49d911b71fe188f8e56b037cf1741c87" translate="yes" xml:space="preserve">
          <source>Issuer DN of server's certificate</source>
          <target state="translated">サーバ証明書の発行者DN</target>
        </trans-unit>
        <trans-unit id="2b6383fd8f90c8b3882d99afb1e424882b6fd2ee" translate="yes" xml:space="preserve">
          <source>Issues Regarding DNS and Apache HTTP Server</source>
          <target state="translated">DNSとApache HTTPサーバに関する問題</target>
        </trans-unit>
        <trans-unit id="e30aea7fa84917220dda8fa507387f5cac349b7e" translate="yes" xml:space="preserve">
          <source>Issuing and managing certificates</source>
          <target state="translated">証明書の発行と管理</target>
        </trans-unit>
        <trans-unit id="dfafb016ebe91f6ebaca919740ba3cbfb6d02a26" translate="yes" xml:space="preserve">
          <source>It can be made safe by &lt;em&gt;untainting&lt;/em&gt; all inputs: a process inspired by Perl's taint checking. Each input is matched against a regexp, and only the match is used, according to the Perl idiom:</source>
          <target state="translated">すべての入力を汚染しないようにすることで安全にすることができます：Perlの汚染チェックに触発されたプロセス。 Perlのイディオムによれば、各入力は正規表現と照合され、一致のみが使用されます。</target>
        </trans-unit>
        <trans-unit id="673a825c2cb69d47ae612033d96659479124277c" translate="yes" xml:space="preserve">
          <source>It can be useful during development of cached RESTful services to have additional information about the caching decision written to the response headers, so as to confirm whether &lt;code&gt;Cache-Control&lt;/code&gt; and other headers have been correctly used by the service and client.</source>
          <target state="translated">キャッシュされたRESTfulサービスの開発中に、 &lt;code&gt;Cache-Control&lt;/code&gt; のヘッダーがサービスとクライアントによって正しく使用されているかどうかを確認するために、応答ヘッダーにキャッシュの決定に関する追加情報を書き込むと便利です。</target>
        </trans-unit>
        <trans-unit id="0cfc83fa062ba79310ca43286ab95ade8779bca2" translate="yes" xml:space="preserve">
          <source>It can happen that some format string items do not produce output. For example, the Referer header is only present if the log message is associated to a request and the log message happens at a time when the Referer header has already been read from the client. If no output is produced, the default behavior is to delete everything from the preceding space character to the next space character. This means the log line is implicitly divided into fields on non-whitespace to whitespace transitions. If a format string item does not produce output, the whole field is omitted. For example, if the remote address &lt;code&gt;%a&lt;/code&gt; in the log format &lt;code&gt;[%t] [%l] [%a] %M&lt;/code&gt; is not available, the surrounding brackets are not logged either. Space characters can be escaped with a backslash to prevent them from delimiting a field. The combination '% ' (percent space) is a zero-width field delimiter that does not produce any output.</source>
          <target state="translated">一部のフォーマット文字列アイテムが出力を生成しない場合があります。 たとえば、Refererヘッダーは、ログメッセージがリクエストに関連付けられており、ログメッセージが、Refererヘッダーがクライアントから既に読み取られているときに発生した場合にのみ存在します。 出力が生成されない場合、デフォルトの動作では、前のスペース文字から次のスペース文字まですべて削除されます。 これは、ログ行が暗黙的に空白以外から空白への遷移のフィールドに分割されることを意味します。 フォーマット文字列アイテムが出力を生成しない場合、フィールド全体が省略されます。 たとえば、ログ形式 &lt;code&gt;[%t] [%l] [%a] %M&lt;/code&gt; のリモートアドレス &lt;code&gt;%a&lt;/code&gt; が使用できない場合、周囲の角かっこもログに記録されません。 スペース文字は、バックスラッシュでエスケープして、フィールドを区切るのを防ぐことができます。 '％'（スペースのパーセント）の組み合わせは、出力を生成しない幅ゼロのフィールド区切り文字です。</target>
        </trans-unit>
        <trans-unit id="8e20f1cc92626699fd6ce6aa6f24a6b0fc4455a7" translate="yes" xml:space="preserve">
          <source>It does not implement HTTP/1.x fully; only accepts some 'expected' forms of responses. The rather heavy use of &lt;code&gt;strstr(3)&lt;/code&gt; shows up top in profile, which might indicate a performance problem; &lt;em&gt;i.e.&lt;/em&gt;, you would measure the &lt;code&gt;ab&lt;/code&gt; performance rather than the server's.</source>
          <target state="translated">HTTP / 1.xを完全には実装していません。 一部の「予期された」形式の応答のみを受け入れます。 &lt;code&gt;strstr(3)&lt;/code&gt; のかなり重い使用は、パフォーマンスの問題を示している可能性があるプロファイルのトップに表示されます。 &lt;em&gt;つまり&lt;/em&gt; 、サーバーではなく &lt;code&gt;ab&lt;/code&gt; のパフォーマンスを測定します。</target>
        </trans-unit>
        <trans-unit id="2d8db3990ee41afc67512d2ab92e017c7bbdf095" translate="yes" xml:space="preserve">
          <source>It does not support regex or pattern matching at all.</source>
          <target state="translated">正規表現やパターンマッチングは一切サポートしていません。</target>
        </trans-unit>
        <trans-unit id="31ad9d4d79a48d98d1831fec383931c0f8d85f1b" translate="yes" xml:space="preserve">
          <source>It emulates:</source>
          <target state="translated">エミュレートします。</target>
        </trans-unit>
        <trans-unit id="f9ff43ab213196c281ee69ed9b8f3615a28dcd2a" translate="yes" xml:space="preserve">
          <source>It has to be kept in mind that conditions follow a short circuit logic in the case of the '&lt;strong&gt;&lt;code&gt;ornext|OR&lt;/code&gt;&lt;/strong&gt;' flag so that certain conditions might not be evaluated at all.</source>
          <target state="translated">' &lt;strong&gt; &lt;code&gt;ornext|OR&lt;/code&gt; &lt;/strong&gt; 'フラグの場合、条件は短絡ロジックに従うため、特定の条件がまったく評価されない可能性があることに注意する必要があります。</target>
        </trans-unit>
        <trans-unit id="ec7aa7190336590cba3c398a0b9704e5df845c6a" translate="yes" xml:space="preserve">
          <source>It insists that the user enters a password. (&lt;code&gt;&lt;a href=&quot;#anonymous_mustgiveemail&quot;&gt;Anonymous_MustGiveEmail&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">ユーザーがパスワードを入力するように要求します。 （ &lt;code&gt;&lt;a href=&quot;#anonymous_mustgiveemail&quot;&gt;Anonymous_MustGiveEmail&lt;/a&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="a28fe1cef9425081c44eefe023093ed8535abf05" translate="yes" xml:space="preserve">
          <source>It insists that the user enters a userID. (&lt;code&gt;&lt;a href=&quot;#anonymous_nouserid&quot;&gt;Anonymous_NoUserID&lt;/a&gt;&lt;/code&gt;)</source>
          <target state="translated">これは、ユーザーがユーザーIDを入力することを要求します。 （ &lt;code&gt;&lt;a href=&quot;#anonymous_nouserid&quot;&gt;Anonymous_NoUserID&lt;/a&gt;&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="4617759b878fff2b99bace262cdca6ab50e0c4fc" translate="yes" xml:space="preserve">
          <source>It is a module that sends static content at a bandwidth rate limit, defined by the various old modem standards. So, you can browse your site with a 56k V.92 modem, by adding something like this:</source>
          <target state="translated">これは、様々な古いモデム規格によって定義された帯域幅の制限で静的なコンテンツを送信するモジュールです。ですから、以下のようなものを追加することで、56k V.92 モデムでサイトを閲覧することができます。</target>
        </trans-unit>
        <trans-unit id="8930d631dbbe53bf5e5bcc7b182d1e1f24a63c2c" translate="yes" xml:space="preserve">
          <source>It is also possible to change the level per directory:</source>
          <target state="translated">また、ディレクトリごとにレベルを変更することも可能です。</target>
        </trans-unit>
        <trans-unit id="06032140c85fbcebbd2bcd30d037db86aa638dc1" translate="yes" xml:space="preserve">
          <source>It is also possible to create your own Certificate Authority. Although risky in the Internet environment, it may be useful within an Intranet where the organization can easily verify the identities of individuals and servers.</source>
          <target state="translated">独自の認証局を作成することも可能です。インターネット環境ではリスクが高いですが、組織が個人やサーバの身元を簡単に確認できるイントラネットの中では有効かもしれません。</target>
        </trans-unit>
        <trans-unit id="22634b0b364d135856c1f68808a59047ebeedf3f" translate="yes" xml:space="preserve">
          <source>It is also possible to specify alternative user directories. If you use a command like:</source>
          <target state="translated">また、代替のユーザディレクトリを指定することも可能です。のようなコマンドを使えば</target>
        </trans-unit>
        <trans-unit id="e9680b8aa0e1d13945bcda47074aa47d592c5169" translate="yes" xml:space="preserve">
          <source>It is also possible, when the quick handler is disabled, for the administrator to choose the precise location within the filter chain where caching is to be performed, by adding the &lt;strong&gt;CACHE&lt;/strong&gt; filter to the chain.</source>
          <target state="translated">また、クイックハンドラーが無効になっている場合、管理者が&lt;strong&gt;CACHE&lt;/strong&gt;フィルターをチェーンに追加することにより、キャッシュを実行するフィルターチェーン内の正確な場所を選択することもできます。</target>
        </trans-unit>
        <trans-unit id="84fa0a84925cfe1e20a3c634f65f3a84a8684474" translate="yes" xml:space="preserve">
          <source>It is also recommended that an appropriate &quot;nice&quot; level is chosen for htcacheclean so that the tool does not cause excessive disk io while the server is running.</source>
          <target state="translated">また、サーバの実行中にツールが過剰なディスクイオを発生させないように、 htcacheclean には適切な &quot;いいね&quot; レベルを選択することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="45ccc5d8e95446d6510b360290014ea86fb2226a" translate="yes" xml:space="preserve">
          <source>It is assumed that &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;/usr&lt;/code&gt;, and &lt;code&gt;/usr/local&lt;/code&gt; are only modifiable by root. When you install the &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; executable, you should ensure that it is similarly protected:</source>
          <target state="translated">&lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;/usr&lt;/code&gt; 、および &lt;code&gt;/usr/local&lt;/code&gt; はrootによってのみ変更可能であると想定されています。 &lt;code&gt;&lt;a href=&quot;../programs/httpd&quot;&gt;httpd&lt;/a&gt;&lt;/code&gt; 実行可能ファイルをインストールするときは、同様に保護されていることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="db128f1b6e287493215a5f97b55b56776c08cf70" translate="yes" xml:space="preserve">
          <source>It is best to &lt;em&gt;avoid&lt;/em&gt; putting mutex files in a world-writable directory such as &lt;code&gt;/var/tmp&lt;/code&gt; because someone could create a denial of service attack and prevent the server from starting by creating a lockfile with the same name as the one the server will try to create.</source>
          <target state="translated">サーバーが試行するのと同じ名前のロックファイルを作成することにより、サービス拒否攻撃を作成し、サーバーが起動できないようにするため、 &lt;code&gt;/var/tmp&lt;/code&gt; などの誰でも書き込み可能なディレクトリにmutexファイルを配置し&lt;em&gt;ない&lt;/em&gt;ことをお勧めします。作成します。</target>
        </trans-unit>
        <trans-unit id="026fce5b0da21205dd08e28dc3ec5a47b2c8cc7e" translate="yes" xml:space="preserve">
          <source>It is best to always explicitly list a &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; in every name-based virtual host.</source>
          <target state="translated">すべての名前ベースの仮想ホストで常に &lt;code&gt;&lt;a href=&quot;../mod/core#servername&quot;&gt;ServerName&lt;/a&gt;&lt;/code&gt; を明示的にリストすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="8fd1412828bb690a1813db462330f2be70b22fe4" translate="yes" xml:space="preserve">
          <source>It is critical to only enable this behavior from intermediate hosts (proxies, etc) which are trusted by this server, since it is trivial for the remote useragent to impersonate another useragent.</source>
          <target state="translated">リモートのユーザーエージェントが他のユーザーエージェントになりすますのは些細なことなので、この動作を有効にするのは、このサーバーによって信頼されている中間ホスト(プロキシなど)からだけであることが重要です。</target>
        </trans-unit>
        <trans-unit id="596e232171bc77b4d2c8989950c98437b71d6a99" translate="yes" xml:space="preserve">
          <source>It is crucial that whatever program you use to create your group files is configured to use the same type of database.</source>
          <target state="translated">グループファイルを作成するために使用するプログラムが、同じタイプのデータベースを使用するように構成されていることが重要です。</target>
        </trans-unit>
        <trans-unit id="4fe7299f695f5fd5e299912a0d84c8b67e72ffcf" translate="yes" xml:space="preserve">
          <source>It is crucial that whatever program you use to create your password files is configured to use the same type of database.</source>
          <target state="translated">パスワードファイルを作成するために使用するどのようなプログラムであっても、同じタイプのデータベースを使用するように構成されていることが重要です。</target>
        </trans-unit>
        <trans-unit id="fd90df5213b641de4e747f53b5676181ab9cc85f" translate="yes" xml:space="preserve">
          <source>It is formatted like an HTML comment, so if you don't have SSI correctly enabled, the browser will ignore it, but it will still be visible in the HTML source. If you have SSI correctly configured, the directive will be replaced with its results.</source>
          <target state="translated">これは HTML コメントのようにフォーマットされているので、SSI が正しく有効になっていないとブラウザは無視しますが、 HTML ソースでは表示されます。SSI が正しく設定されていれば、ディレクティブはその結果に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="dcefea24fba0f1f53e443fe859a11ac284bcb1d8" translate="yes" xml:space="preserve">
          <source>It is frequently desirable to have a single file or resource handle all requests to a particular directory, except those requests that correspond to an existing file or script. This is often referred to as a 'front controller.'</source>
          <target state="translated">既存のファイルやスクリプトに対応するリクエストを除いて、 特定のディレクトリへのすべてのリクエストを単一のファイルや リソースで処理することが望ましいことがよくあります。これはしばしば 'フロントコントローラ' と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="34553228bdf559d24073903deb500d405ab8888d" translate="yes" xml:space="preserve">
          <source>It is important that you are aware that this &lt;code&gt;server.key&lt;/code&gt; does &lt;em&gt;not&lt;/em&gt; have any passphrase. To add a passphrase to the key, you should run the following command, and enter &amp;amp; verify the passphrase as requested.</source>
          <target state="translated">この &lt;code&gt;server.key&lt;/code&gt; にはパスフレーズが&lt;em&gt;ない&lt;/em&gt;ことに注意してください。 キーにパスフレーズを追加するには、次のコマンドを実行し、要求に応じてパスフレーズを入力して確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="aa178e2413aa133783c91cb2172ae8f8b64fa799" translate="yes" xml:space="preserve">
          <source>It is important to never use &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; when trying to restrict access to objects in the filesystem. This is because many different webspace locations (URLs) could map to the same filesystem location, allowing your restrictions to be circumvented. For example, consider the following configuration:</source>
          <target state="translated">ファイルシステム内のオブジェクトへのアクセスを制限しようとするときは、 &lt;code&gt;&lt;a href=&quot;mod/core#location&quot;&gt;&amp;lt;Location&amp;gt;&lt;/a&gt;&lt;/code&gt; を使用しないことが重要です。 これは、多くの異なるWebスペースの場所（URL）が同じファイルシステムの場所にマッピングされ、制限を回避できるためです。 たとえば、次の構成を検討してください。</target>
        </trans-unit>
        <trans-unit id="e87c26ea20ff60c3deae97d2e3fbc66cb2465ffa" translate="yes" xml:space="preserve">
          <source>It is important to note, however, that links inside the documents will not be rewritten. So any absolute links on &lt;code&gt;internal.example.com&lt;/code&gt; will result in the client breaking out of the proxy server and requesting directly from &lt;code&gt;internal.example.com&lt;/code&gt;. You can modify these links (and other content) in a page as it is being served to the client using &lt;code&gt;&lt;a href=&quot;mod/mod_substitute&quot;&gt;mod_substitute&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">ただし、ドキュメント内のリンクは書き換えられないことに注意してください。 そのため、 &lt;code&gt;internal.example.com&lt;/code&gt; 上の絶対リンクは、クライアントがプロキシサーバーから抜け出し、 &lt;code&gt;internal.example.com&lt;/code&gt; から直接リクエストすることになります。 &lt;code&gt;&lt;a href=&quot;mod/mod_substitute&quot;&gt;mod_substitute&lt;/a&gt;&lt;/code&gt; を使用してクライアントに提供されるときに、ページ内のこれらのリンク（およびその他のコンテンツ）を変更できます。</target>
        </trans-unit>
        <trans-unit id="ebe44c02fa734be7fdfadf7e70c9205331860644" translate="yes" xml:space="preserve">
          <source>It is important to recognize that the first step in name-based virtual host resolution is IP-based resolution. Name-based virtual host resolution only chooses the most appropriate name-based virtual host after narrowing down the candidates to the best IP-based match. Using a wildcard (*) for the IP address in all of the VirtualHost directives makes this IP-based mapping irrelevant.</source>
          <target state="translated">名前ベースのバーチャルホスト解決の最初のステップは、IPベースの解決であることを認識することが重要です。名前ベースのバーチャルホストの解決は、IP ベースの最良のマッチする候補を絞り込んだ後に、 最も適切な名前ベースのバーチャルホストを選択します。すべての VirtualHost ディレクティブで IP アドレスにワイルドカード (*)を使うと、この IP ベースのマッピングは無関係になります。</target>
        </trans-unit>
        <trans-unit id="fa40eca518f63116b40698f1dd291f4cd86db9e7" translate="yes" xml:space="preserve">
          <source>It is not advisable to use zlib-dynamic, as that transfers the cost of deflating SSL streams to the first request which must load the zlib dll. Note the suggested patch enables the -L flag to work with windows builds, corrects the name of zdll.lib and ensures .pdb files are generated for troubleshooting. If the assembler is not installed, you would add no-asm above and use ms\do_ms.bat instead of the ms\do_masm.bat script.</source>
          <target state="translated">zlib-dynamic を使用することはお勧めできません。提案されたパッチでは、-L フラグが Windows ビルドで動作するようになり、 zdll.lib の名前が修正され、トラブルシューティングのために .pdb ファイルが生成されるようになっていることに注意してください。アセンブラがインストールされていない場合は、上記のno-asmを追加し、ms\do_masm.batスクリプトの代わりにms\do_ms.batを使用してください。</target>
        </trans-unit>
        <trans-unit id="9f7c8442732e5b3d8bf6262671c33dcfb67f3aef" translate="yes" xml:space="preserve">
          <source>It is not possible to override or change the standard CGI variables using the environment manipulation directives.</source>
          <target state="translated">環境操作ディレクティブを使って標準 CGI 変数をオーバーライドしたり変更したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="97a992071cddc516986a9d388fec8fdd5b9d52ea" translate="yes" xml:space="preserve">
          <source>It is often useful to be able to send the server a signal, so that it closes and then re-opens its &lt;code&gt;&lt;a href=&quot;core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mod_log_config#transferlog&quot;&gt;TransferLog&lt;/a&gt;&lt;/code&gt;, and re-reads its configuration files. This is done by sending a SIGHUP (kill -1) signal to the process id listed in the &lt;code&gt;PidFile&lt;/code&gt;.</source>
          <target state="translated">サーバーにシグナルを送信して、 &lt;code&gt;&lt;a href=&quot;core#errorlog&quot;&gt;ErrorLog&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;mod_log_config#transferlog&quot;&gt;TransferLog&lt;/a&gt;&lt;/code&gt; を いったん閉じてから再度開き、構成ファイルを再度読み取ることができると便利な場合があります。 これは、 &lt;code&gt;PidFile&lt;/code&gt; にリストされているプロセスIDにSIGHUP（kill -1）シグナルを送信することで行われます 。</target>
        </trans-unit>
        <trans-unit id="2c0cf899eb355ecd4ca15b5193ea4a3cdf8f9e82" translate="yes" xml:space="preserve">
          <source>It is possible to &quot;leak&quot; SysV semaphores if processes crash before the semaphore is removed.</source>
          <target state="translated">セマフォが削除される前にプロセスがクラッシュした場合、SysV セマフォを「リーク」することが可能です。</target>
        </trans-unit>
        <trans-unit id="a1bdf6f387d0b612e317f6b7d3486110c3c9b2f3" translate="yes" xml:space="preserve">
          <source>It is possible to configure additional instances of the Apache httpd server running independently alongside each other on the same machine. These instances can have independent configurations, and can potentially run as separate users if so configured.</source>
          <target state="translated">同じマシン上でお互いに独立して動作する Apache httpd サーバの追加インスタンスを設定することができます。これらのインスタンスは独立した設定をすることができ、 設定されていれば別のユーザとして動作する可能性があります。</target>
        </trans-unit>
        <trans-unit id="0fce6e538bb763d3996bd7fe0151647c13d8f59c" translate="yes" xml:space="preserve">
          <source>It is possible to create a statically linked binary of a single support program by using the following options:</source>
          <target state="translated">を使用して、単一のサポートプログラムの静的にリンクされたバイナリを作成することができます。</target>
        </trans-unit>
        <trans-unit id="1aeca8c1f691936781b6d3c6e1ba5307e052b93b" translate="yes" xml:space="preserve">
          <source>It is possible to have the time displayed in another format by specifying &lt;code&gt;%{format}t&lt;/code&gt; in the log format string, where &lt;code&gt;format&lt;/code&gt; is either as in &lt;code&gt;strftime(3)&lt;/code&gt; from the C standard library, or one of the supported special tokens. For details see the &lt;code&gt;&lt;a href=&quot;mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt;&lt;a href=&quot;mod/mod_log_config#formats&quot;&gt;format strings&lt;/a&gt;.</source>
          <target state="translated">ログ形式文字列で &lt;code&gt;%{format}t&lt;/code&gt; を指定することにより、時刻を別の形式で表示することができます。 &lt;code&gt;format&lt;/code&gt; は、C標準ライブラリの &lt;code&gt;strftime(3)&lt;/code&gt; またはサポートされている特別なトークンのいずれかです。 詳細については、 &lt;code&gt;&lt;a href=&quot;mod/mod_log_config&quot;&gt;mod_log_config&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;mod/mod_log_config#formats&quot;&gt;フォーマット文字列を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="2627f31901e605abb3b1669b29225b3decdffce8" translate="yes" xml:space="preserve">
          <source>It is possible, but only if using a 2.2.12 or later web server, built with 0.9.8j or later OpenSSL. This is because it requires a feature that only the most recent revisions of the SSL specification added, called Server Name Indication (SNI).</source>
          <target state="translated">可能ですが、0.9.8j以降のOpenSSLで構築された2.2.12以降のWebサーバを使用している場合に限ります。これは、SSL仕様の最新リビジョンのみが追加されたSNI(Server Name Indication)と呼ばれる機能が必要になるためです。</target>
        </trans-unit>
        <trans-unit id="8ae7b81f12a2c1f71b9ea9fed3e7a0438b33cbd7" translate="yes" xml:space="preserve">
          <source>It is probably easier to accomplish this kind of configuration using the &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ElseIf&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;Else&amp;gt;&lt;/code&gt; directives instead.</source>
          <target state="translated">代わりに &lt;code&gt;&amp;lt;If&amp;gt;&lt;/code&gt; 、 &lt;code&gt;&amp;lt;ElseIf&amp;gt;&lt;/code&gt; 、および &lt;code&gt;&amp;lt;Else&amp;gt;&lt;/code&gt; ディレクティブを使用して、この種の構成を実現する方がおそらく簡単です。</target>
        </trans-unit>
        <trans-unit id="f6fb39947684331e68c6c3c7a1ac6618fe2647f6" translate="yes" xml:space="preserve">
          <source>It is recommended that new media types be added using the &lt;code&gt;AddType&lt;/code&gt; directive rather than changing the &lt;code&gt;&lt;a href=&quot;#typesconfig&quot;&gt;TypesConfig&lt;/a&gt;&lt;/code&gt; file.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;#typesconfig&quot;&gt;TypesConfig&lt;/a&gt;&lt;/code&gt; ファイルを変更するのではなく、 &lt;code&gt;AddType&lt;/code&gt; ディレクティブを使用して新しいメディアタイプを追加することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="4ea93c9389c5711c0178f8a1d8fc11fd130f65d9" translate="yes" xml:space="preserve">
          <source>It is recommended that users create a separate account for running Apache service(s). If you have to access network resources via Apache, this is required.</source>
          <target state="translated">Apache のサービスを実行するためのアカウントを別途作成することをお勧めします。Apache 経由でネットワークリソースにアクセスする必要がある場合は、これが必要です。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
