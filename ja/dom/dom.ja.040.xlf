<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="4f549939198bb4708f1436bfbc8520dca33d6897" translate="yes" xml:space="preserve">
          <source>The type of track event which is described by the object: &lt;code&gt;&quot;addtrack&quot;&lt;/code&gt; or &lt;code&gt;&quot;removetrack&quot;&lt;/code&gt;.</source>
          <target state="translated">オブジェクトによって記述されるトラックイベントのタイプ： &lt;code&gt;&quot;addtrack&quot;&lt;/code&gt; または &lt;code&gt;&quot;removetrack&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cb8c126bad66905cd504aad949a72c4f7bf43a78" translate="yes" xml:space="preserve">
          <source>The type specifies how to use the image in order to create the pattern, and must be one of the following string values:</source>
          <target state="translated">typeは、パターンを作成するために画像をどのように使用するかを指定するもので、以下の文字列値のいずれかでなければなりません。</target>
        </trans-unit>
        <trans-unit id="47269aa1e2b7a612c6c1808e7d5253029f0a8863" translate="yes" xml:space="preserve">
          <source>The type used to return the value of &lt;a href=&quot;performance/navigation&quot;&gt;&lt;code&gt;navigation&lt;/code&gt;&lt;/a&gt;, which contains information explaining the context of the load operation described by this &lt;code&gt;Performance&lt;/code&gt; instance.</source>
          <target state="translated">この &lt;code&gt;Performance&lt;/code&gt; インスタンスによって記述されたロード操作のコンテキストを説明する情報を含む、&lt;a href=&quot;performance/navigation&quot;&gt; &lt;code&gt;navigation&lt;/code&gt; &lt;/a&gt;の値を返すために使用されるタイプ。</target>
        </trans-unit>
        <trans-unit id="58147d3dc641f5c63a575232de4c050e390152cb" translate="yes" xml:space="preserve">
          <source>The underlying data format is defined by the IEEE draft specification &lt;code&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/draft-ietf-mmusic-sctp-sdp&quot;&gt;draft-ietf-mmusic-sctp-sdp&lt;/a&gt;&lt;/code&gt;. The current format specifies its protocol as either &lt;code&gt;&quot;UDP/DTLS/SCTP&quot;&lt;/code&gt; (UDP carrying DTLS carrying SCTP) or &lt;code&gt;&quot;TCP/DTLS/SCTP&quot;&lt;/code&gt; (TCP carrying DTLS carrying SCTP). Older browsers may only specify &lt;code&gt;&quot;DTLS/SCTP&quot;&lt;/code&gt;.</source>
          <target state="translated">基本となるデータ形式は、IEEEドラフト仕様 &lt;code&gt;&lt;a href=&quot;https://datatracker.ietf.org/doc/draft-ietf-mmusic-sctp-sdp&quot;&gt;draft-ietf-mmusic-sctp-sdp&lt;/a&gt;&lt;/code&gt; で定義されています。現在の形式は、プロトコルを &lt;code&gt;&quot;UDP/DTLS/SCTP&quot;&lt;/code&gt; （UDPがDTPを伝送するSCTPを運ぶ）または &lt;code&gt;&quot;TCP/DTLS/SCTP&quot;&lt;/code&gt; （TCPがDTLSを伝送するSCTPを運ぶ）として指定します。古いブラウザでは &lt;code&gt;&quot;DTLS/SCTP&quot;&lt;/code&gt; のみを指定できます。</target>
        </trans-unit>
        <trans-unit id="436af11d722d501ef39ef0bedcd89e9eb4fda39c" translate="yes" xml:space="preserve">
          <source>The underlying data transport has been established and data can be transferred bidirectionally across it. This is the default state of a new &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; created by the WebRTC layer when the remote peer created the channel and delivered to the site or app in a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event of type &lt;a href=&quot;../rtcdatachannelevent&quot;&gt;&lt;code&gt;RTCDataChannelEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">基礎となるデータ転送が確立されており、データはその間で双方向に転送できます。これは、リモートピアがチャネルを作成し、タイプ&lt;a href=&quot;../rtcdatachannelevent&quot;&gt; &lt;code&gt;RTCDataChannelEvent&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; イベントでサイトまたはアプリに配信したときに、WebRTCレイヤーによって作成された新しい&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; の&lt;/a&gt;デフォルトの状態です。</target>
        </trans-unit>
        <trans-unit id="cb29fadd6b7d70900b0772ce16939c6a3ae5a53b" translate="yes" xml:space="preserve">
          <source>The underlying data transport has closed, or the attempt to make the connection failed.</source>
          <target state="translated">基礎となるデータ・トランスポートが閉じたか、接続の試みが失敗しました。</target>
        </trans-unit>
        <trans-unit id="5b0c80eb56e0f05f6f372a392e6aade0e8202e92" translate="yes" xml:space="preserve">
          <source>The underlying data transport is closed.</source>
          <target state="translated">基礎となるデータトランスポートは閉じられています。</target>
        </trans-unit>
        <trans-unit id="6f6be821ba011b456a2fbe8b98ea2718df1b2454" translate="yes" xml:space="preserve">
          <source>The underlying data transport used by the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; can be created in one of two ways:</source>
          <target state="translated">&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; で&lt;/a&gt;使用される基本的なデータ転送は、次の2つの方法のいずれかで作成できます。</target>
        </trans-unit>
        <trans-unit id="1230611b26f60b6e1b961a1858941c7939219063" translate="yes" xml:space="preserve">
          <source>The underlying object store uses in-line keys and the property in the value at the object store's key path does not match the key in this cursor's position.</source>
          <target state="translated">基礎となるオブジェクトストアはインラインキーを使用しており、オブジェクトストアのキーパスの値のプロパティがこのカーソル位置のキーと一致しません。</target>
        </trans-unit>
        <trans-unit id="0c0f71b38608007dd5d4e20b654e130b126e0271" translate="yes" xml:space="preserve">
          <source>The underlying pixel data of an area of a &lt;a href=&quot;../canvas_api&quot;&gt;&lt;code&gt;canvas&lt;/code&gt;&lt;/a&gt; element. Manipulating such data can be a complex task better suited to be delegated to a Web Worker.</source>
          <target state="translated">&lt;a href=&quot;../canvas_api&quot;&gt; &lt;code&gt;canvas&lt;/code&gt; &lt;/a&gt;要素の領域の基になるピクセルデータ。このようなデータの操作は、Webワーカーに委任するのに適した複雑なタスクになる場合があります。</target>
        </trans-unit>
        <trans-unit id="4ffb6b0bffc02b2f4be8f300f68ff4d73d096919" translate="yes" xml:space="preserve">
          <source>The underlying sink will finish processing any previously-written chunks, before invoking the close behavior. During this time any further attempts to write will fail (without erroring the stream).</source>
          <target state="translated">基礎となるシンクは、close ビヘイビアを呼び出す前に、以前に書き込まれたチャンクの処理を終了します。この間、それ以上の書き込みは失敗します(ストリームをエラーにすることなく)。</target>
        </trans-unit>
        <trans-unit id="9fd9c13420a54bb35482c0d9424c83f6c47f9263" translate="yes" xml:space="preserve">
          <source>The uniform &lt;code&gt;uRotationVector&lt;/code&gt; is set to the contents of the variable &lt;code&gt;currentRotation&lt;/code&gt;. This, too, is a 2-component vertex.</source>
          <target state="translated">均一な &lt;code&gt;uRotationVector&lt;/code&gt; は、変数 &lt;code&gt;currentRotation&lt;/code&gt; の内容に設定されます。これも2コンポーネントの頂点です。</target>
        </trans-unit>
        <trans-unit id="6a2a5fe10456b71dde48da09e16b8815575dd6d4" translate="yes" xml:space="preserve">
          <source>The uniform itself is declared in the shader program using GLSL.</source>
          <target state="translated">ユニフォーム自体は、GLSLを使用してシェーダプログラムで宣言されています。</target>
        </trans-unit>
        <trans-unit id="be0debcc2eb83dcf86445224bc5121c9c62e118c" translate="yes" xml:space="preserve">
          <source>The uniform name indexed with an integer. E.g. the location returned for &lt;code&gt;arrayUniform[2]&lt;/code&gt; would point directly to the third entry of the &lt;code&gt;arrayUniform&lt;/code&gt; uniform.</source>
          <target state="translated">整数で索引付けされた統一名。たとえば、 &lt;code&gt;arrayUniform[2]&lt;/code&gt; に対して返される場所は、 &lt;code&gt;arrayUniform&lt;/code&gt; ユニフォームの3番目のエントリを直接指します。</target>
        </trans-unit>
        <trans-unit id="fad389054e270c670b23bcf8112c4b074df79202" translate="yes" xml:space="preserve">
          <source>The uniform name without the &lt;code&gt;[0]&lt;/code&gt; suffix. E.g. the location returned for &lt;code&gt;arrayUniform&lt;/code&gt; is equivalent to the one for &lt;code&gt;arrayUniform[0]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;[0]&lt;/code&gt; サフィックスのない統一名。たとえば、 &lt;code&gt;arrayUniform&lt;/code&gt; に対して返される場所は &lt;code&gt;arrayUniform[0]&lt;/code&gt; の場所と同じです。</target>
        </trans-unit>
        <trans-unit id="bc9cb9b597c76a78f6e830da4f2b2d159b4d6876" translate="yes" xml:space="preserve">
          <source>The uniform named &lt;code&gt;uScalingFactor&lt;/code&gt; is set to the &lt;code&gt;currentScale&lt;/code&gt; value previously computed; this, as you may recall, is the value used to adjust the coordinate system based on the aspect ratio of the context. This is done using &lt;a href=&quot;../webglrenderingcontext/uniform&quot;&gt;&lt;code&gt;uniform2fv()&lt;/code&gt;&lt;/a&gt; (since this is a 2-value floating-point vector).</source>
          <target state="translated">&lt;code&gt;uScalingFactor&lt;/code&gt; という名前のユニフォームは、以前に計算された &lt;code&gt;currentScale&lt;/code&gt; 値に設定されます。ご存じのように、これはコンテキストのアスペクト比に基づいて座標系を調整するために使用される値です。これは、&lt;a href=&quot;../webglrenderingcontext/uniform&quot;&gt; &lt;code&gt;uniform2fv()&lt;/code&gt; &lt;/a&gt;を使用して行われます（これは2値の浮動小数点ベクトルであるため）。</target>
        </trans-unit>
        <trans-unit id="a0da378abb240c0ed53765d644dae2da44572b7b" translate="yes" xml:space="preserve">
          <source>The unique status of the index is logged to the console: it should be returned as &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">インデックスの一意のステータスがコンソールに記録されます。falseとして返される必要があり &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="30fc58ab5f4576412d18250abfbf109740ba068d" translate="yes" xml:space="preserve">
          <source>The unit is milliseconds and should be accurate to 5 &amp;micro;s (microseconds). However, if the browser is unable to provide a time value accurate to 5 microseconds (due, for example, to hardware or software constraints), the browser can represent the value as a time in milliseconds accurate to a millisecond. Also note the section below on reduced time precision controlled by browser preferences to avoid timing attacks and fingerprinting.</source>
          <target state="translated">単位はミリ秒で、正確には5 &amp;micro;s（マイクロ秒）でなければなりません。ただし、ブラウザが5マイクロ秒までの正確な時間値を提供できない場合（ハードウェアやソフトウェアの制約などにより）、ブラウザは値をミリ秒単位の正確な時間としてミリ秒単位で表すことができます。また、タイミングの攻撃とフィンガープリントを回避するために、ブラウザーの設定によって制御される時間精度の削減に関する以下のセクションにも注意してください。</target>
        </trans-unit>
        <trans-unit id="215c8ee959ac03fda0fdd6a65cb73af23a74c00f" translate="yes" xml:space="preserve">
          <source>The unit of &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; is milliseconds and should be accurate to 5 &amp;micro;s (microseconds). However, If the browser is unable to provide a time value accurate to 5 &amp;micro;s (because, for example, due to hardware or software constraints), the browser can represent a the value as a time in milliseconds accurate to a millisecond.</source>
          <target state="translated">&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; の単位はミリ秒であり、5 &amp;micro;s（マイクロ秒）まで正確でなければなりません。ただし、ブラウザが5 &amp;micro;sまでの正確な時間値を提供できない場合（たとえば、ハードウェアまたはソフトウェアの制約が原因で）、ブラウザは値をミリ秒単位の正確な時間としてミリ秒単位で表すことができます。</target>
        </trans-unit>
        <trans-unit id="8f7e573f8b73c4ec54c432ce782ae558d69060d2" translate="yes" xml:space="preserve">
          <source>The unit of &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; is milliseconds and should be accurate to 5 &amp;micro;s (microseconds). However, If the browser is unable to provide a time value accurate to 5 microseconds (because, for example, due to hardware or software constraints), the browser can represent a the value as a time in milliseconds accurate to a millisecond.</source>
          <target state="translated">&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; の単位はミリ秒であり、5 &amp;micro;s（マイクロ秒）まで正確でなければなりません。ただし、ブラウザが5マイクロ秒までの正確な時間値を提供できない場合（たとえば、ハードウェアまたはソフトウェアの制約が原因で）、ブラウザは値をミリ秒単位の正確な時間としてミリ秒単位で表すことができます。</target>
        </trans-unit>
        <trans-unit id="b754a0f6a758c28e957b4b082d6bd8a74b34ff7a" translate="yes" xml:space="preserve">
          <source>The unit type is not one of predefined unit types. It is invalid to attempt to define a new value of this type or to attempt to switch an existing value to this type.</source>
          <target state="translated">このユニット・タイプは、定義済みのユニット・タイプではありません。このタイプの新しい値を定義しようとしたり、既存の値をこのタイプに切り替えようとすることは無効です。</target>
        </trans-unit>
        <trans-unit id="2f95465839b712548941e0ee7da2a6a2f7f1097e" translate="yes" xml:space="preserve">
          <source>The universally unique identifier of the client as a string.</source>
          <target state="translated">クライアントの普遍的に一意な識別子を文字列で指定します。</target>
        </trans-unit>
        <trans-unit id="9b7505ad8d398b0ff3f1c46147047ace9715479e" translate="yes" xml:space="preserve">
          <source>The updatePosition() function updates the position of the ball on the canvas (&lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;), and also includes &lt;code&gt;if()&lt;/code&gt; statements to check whether the ball has gone off the edges of the canvas. If so, it makes the ball wrap around to the opposite edge. It also includes a check whether a &lt;code&gt;&lt;a href=&quot;window/requestanimationframe&quot;&gt;requestAnimationFrame()&lt;/a&gt;&lt;/code&gt; call has previously been made, and if so, calls it again as required, and calls the &lt;code&gt;canvasDraw()&lt;/code&gt; function that updates the canvas scene. A tracker is also set up to write out the X and Y values to the screen, for reference.</source>
          <target state="translated">updatePosition（）関数は、キャンバス上のボールの位置（ &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; ）を更新し、ボールがキャンバスの端から外れたかどうかを確認する &lt;code&gt;if()&lt;/code&gt; ステートメントも含まれています。もしそうなら、それはボールを反対側の端に巻きつけます。これには、 &lt;code&gt;&lt;a href=&quot;window/requestanimationframe&quot;&gt;requestAnimationFrame()&lt;/a&gt;&lt;/code&gt; 呼び出しが以前に行われたかどうかのチェックも含まれ、必要に応じて再度呼び出し、キャンバスシーンを更新する &lt;code&gt;canvasDraw()&lt;/code&gt; 関数を呼び出します。参照用に、X値とY値を画面に書き込むようにトラッカーも設定されています。</target>
        </trans-unit>
        <trans-unit id="e76f0892b70ac39058988276e95d5aa7b386664e" translate="yes" xml:space="preserve">
          <source>The upload completed successfully.</source>
          <target state="translated">無事にアップロードが完了しました。</target>
        </trans-unit>
        <trans-unit id="f7dc835df88734482ec7863d51beb4aecc24d339" translate="yes" xml:space="preserve">
          <source>The upload completed; this event does not differentiate between success or failure, and is sent at the very end of the upload process, regardless of the outcome. Prior to this event being sent, one of &lt;code&gt;load&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;abort&lt;/code&gt;, or &lt;code&gt;timeout&lt;/code&gt; will already have been delivered to indicate why the upload is ending.</source>
          <target state="translated">アップロードが完了しました。このイベントは成功と失敗を区別せず、結果に関係なく、アップロードプロセスの最後に送信されます。このイベントが送信される前に、 &lt;code&gt;load&lt;/code&gt; 、 &lt;code&gt;error&lt;/code&gt; 、 &lt;code&gt;abort&lt;/code&gt; 、または &lt;code&gt;timeout&lt;/code&gt; のいずれかがすでに送信されており、アップロードが終了した理由を示しています。</target>
        </trans-unit>
        <trans-unit id="51035c784b6cc4a32e65791252bcc8423affeb0c" translate="yes" xml:space="preserve">
          <source>The upload failed due to an error.</source>
          <target state="translated">エラーでアップロードに失敗しました。</target>
        </trans-unit>
        <trans-unit id="8e70c8f5e5fbd5547aa106e8ae1b120ff16d7ce4" translate="yes" xml:space="preserve">
          <source>The upload has begun.</source>
          <target state="translated">アップロードが始まりました。</target>
        </trans-unit>
        <trans-unit id="60c27f0e379b4673e2effcf8c64439462f4244c5" translate="yes" xml:space="preserve">
          <source>The upload operation was aborted.</source>
          <target state="translated">アップロード操作が中断されました。</target>
        </trans-unit>
        <trans-unit id="50fc23afe648a30d805bfd7d6d04c1903ec81707" translate="yes" xml:space="preserve">
          <source>The upload timed out because an awaited reply did not arrive within the time interval specified by the &lt;a href=&quot;timeout&quot;&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/a&gt; property on the &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">待機した応答が&lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;timeout&quot;&gt; &lt;code&gt;timeout&lt;/code&gt; &lt;/a&gt;プロパティで指定された時間間隔内に到着しなかったため、アップロードがタイムアウトしました。</target>
        </trans-unit>
        <trans-unit id="ccca622837e8386da2b8e4081c2f2160f3e622fc" translate="yes" xml:space="preserve">
          <source>The upper bound of the key range (can be any type.)</source>
          <target state="translated">キー範囲の上限値(型は問いません。</target>
        </trans-unit>
        <trans-unit id="2c99dd6744f8cf2c874187cf16cfe0e534d46f2f" translate="yes" xml:space="preserve">
          <source>The upper limit of the frequencies getting a boost or an attenuation.</source>
          <target state="translated">ブーストまたは減衰を受ける周波数の上限。</target>
        </trans-unit>
        <trans-unit id="1d718bc1b42f838cbd3455ab797f0921c9346e8a" translate="yes" xml:space="preserve">
          <source>The upper value of the key range is one of the following:</source>
          <target state="translated">キー範囲の上限値は、以下のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="1c943374dc00a23bbac8ccd3c470e83d86cfa1d6" translate="yes" xml:space="preserve">
          <source>The upper-bound value is included in the key range.</source>
          <target state="translated">上限値はキー範囲に含まれます。</target>
        </trans-unit>
        <trans-unit id="094f15d6d531cb8cac4abfa55040fbf0efbbe837" translate="yes" xml:space="preserve">
          <source>The upper-bound value is not included in the key range.</source>
          <target state="translated">上限値はキー範囲に含まれません。</target>
        </trans-unit>
        <trans-unit id="3845e459925b4588d74e3d45735d94b526e014ba" translate="yes" xml:space="preserve">
          <source>The user agent (browser) is in the process of creating the underlying data transport; that is, whatever network level connection is used to link the two peers together is in the process of being set up. This is the state of a new &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; after being created by &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt; (on the peer which started the connection process).</source>
          <target state="translated">ユーザーエージェント（ブラウザー）は、基になるデータ転送を作成中です。つまり、2つのピアを相互にリンクするために使用されるネットワークレベルの接続は、セットアップ中です。これは、&lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt; &lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt; &lt;/a&gt;（接続プロセスを開始したピア上）によって作成された後の新しい&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; の&lt;/a&gt;状態です。</target>
        </trans-unit>
        <trans-unit id="fb19bd240edb11eefa319f6cf8eab2e3328ff2db" translate="yes" xml:space="preserve">
          <source>The user agent (browser) or operating system doesn't allow playback of media in the current context or situation. This may happen, for example, if the browser requires the user to explicitly start media playback by clicking a &quot;play&quot; button.</source>
          <target state="translated">ユーザーエージェント(ブラウザ)またはオペレーティングシステムが、現在のコンテキストまたは状況でのメディアの再生を許可していません。これは、例えば、ブラウザが「再生」ボタンをクリックして明示的にメディアの再生を開始するようにユーザーに要求した場合などに発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="9654db2c5efd5887c392a4f431b809902b1fc48e" translate="yes" xml:space="preserve">
          <source>The user agent blocked registration of the protocol handler. This might happen if an invalid scheme is specified, such as &quot;http&quot;, which cannot be registered for obvious security reasons, or if the browser requires that this function be called from a secure context, or that the handler's URL be an HTTPS one.</source>
          <target state="translated">ユーザーエージェントがプロトコルハンドラの登録をブロックした。これは、明らかなセキュリティ上の理由から登録できない &quot;http &quot;のような無効なスキームが指定された場合や、ブラウザがこの関数を安全なコンテキストから呼び出すように要求したり、ハンドラのURLがHTTPSであることを要求したりした場合に発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="45b9b9aff87ac8ab09e2265b47877e568e675b9a" translate="yes" xml:space="preserve">
          <source>The user agent can't handle any more &lt;code&gt;SourceBuffer&lt;/code&gt; objects, or creating a new &lt;code&gt;SourceBuffer&lt;/code&gt; using the given &lt;code&gt;mimeType&lt;/code&gt; would result in an &lt;a href=&quot;https://w3c.github.io/media-source/#sourcebuffer-configuration&quot;&gt;unsupported configuration of &lt;code&gt;SourceBuffer&lt;/code&gt;s&lt;/a&gt;.</source>
          <target state="translated">ユーザエージェントはそれ以上処理できない &lt;code&gt;SourceBuffer&lt;/code&gt; のオブジェクトを、または新規作成 &lt;code&gt;SourceBuffer&lt;/code&gt; を与え使用して &lt;code&gt;mimeType&lt;/code&gt; につながる&lt;a href=&quot;https://w3c.github.io/media-source/#sourcebuffer-configuration&quot;&gt;のサポートされていない構成 &lt;code&gt;SourceBuffer&lt;/code&gt; 秒&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cfb98d39388d75f86285340a4db09cd5e431c15" translate="yes" xml:space="preserve">
          <source>The user agent determines, using whatever mechanism it chooses, the maximum amount of storage a given site can use. This maximum is the origin's &lt;strong&gt;quota&lt;/strong&gt;. The amount of this space which is in use by the site is called its &lt;strong&gt;usage&lt;/strong&gt;. Both of these values are estimates; there are several reasons why they're not precise:</source>
          <target state="translated">ユーザーエージェントは、選択したメカニズムを使用して、特定のサイトが使用できるストレージの最大量を決定します。この最大値がオリジンの&lt;strong&gt;割り当て&lt;/strong&gt;です。サイトによって使用されているこのスペースの量は、その&lt;strong&gt;使用量&lt;/strong&gt;と呼ばれ&lt;strong&gt;ます&lt;/strong&gt;。これらの値はどちらも推定値です。正確でない理由はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="8ddddd5d109047256c97c20e5c7ab1ade0ac5355" translate="yes" xml:space="preserve">
          <source>The user agent disallowed any speech input from occurring for reasons of security, privacy or user preference.</source>
          <target state="translated">ユーザーエージェントは、セキュリティ、プライバシー、またはユーザーの好みの理由から、音声入力の発生を拒否しました。</target>
        </trans-unit>
        <trans-unit id="8bff5d7a01e8809536a7ef0885cec7b550cf8572" translate="yes" xml:space="preserve">
          <source>The user agent disallowed the requested speech recognition service, either because the user agent doesn't support it or because of reasons of security, privacy or user preference. In this case it would allow another more suitable speech recognition service to be used instead.</source>
          <target state="translated">ユーザエージェントが要求された音声認識サービスを拒否した理由は、ユーザエージェントがそれをサポートしていないか、セキュリティ、プライバシー、またはユーザの好みの理由のいずれかである。この場合、より適切な別の音声認識サービスを代わりに使用することができます。</target>
        </trans-unit>
        <trans-unit id="086e0ba470b908adeb66c079251480eb161dc479" translate="yes" xml:space="preserve">
          <source>The user agent may implement the process of actually sending data in any way it chooses; this may be done periodically during the event loop or truly asynchronously. As messages are actually sent, this value is reduced accordingly.</source>
          <target state="translated">ユーザーエージェントは、任意の方法で実際にデータを送信するプロセスを実装することができます;これは、イベントループの間に定期的に行われてもよいし、本当に非同期的に行われてもよい。メッセージが実際に送信されるにつれて、この値はそれに応じて減少します。</target>
        </trans-unit>
        <trans-unit id="7f7c41f5a330ccf018d1b513ea3429ccb6b26d54" translate="yes" xml:space="preserve">
          <source>The user agent should balance audio output latency and power consumption when selecting a latency value.</source>
          <target state="translated">ユーザエージェントは、レイテンシ値を選択する際に、オーディオ出力レイテンシと消費電力のバランスをとるべきである。</target>
        </trans-unit>
        <trans-unit id="96113ea512de1f194caeafea202a6e832d2d6675" translate="yes" xml:space="preserve">
          <source>The user agent should select a latency that will maximize playback time by minimizing power consumption at the expense of latency. Useful for non-interactive playback, such as playing music.</source>
          <target state="translated">ユーザーエージェントは、レイテンシーを犠牲にして消費電力を最小限に抑え、再生時間を最大化するレイテンシーを選択する必要があります。音楽を再生するような非インタラクティブな再生に便利です。</target>
        </trans-unit>
        <trans-unit id="3f4def92564c4c2a622dd4f85e4e6ae2a35be416" translate="yes" xml:space="preserve">
          <source>The user agent string is built on a formal structure which can be decomposed into several pieces of info. Each of these pieces of info comes from other navigator properties which are also settable by the user. Gecko-based browsers comply with the following general structure:</source>
          <target state="translated">ユーザーエージェント文字列は形式的な構造に基づいて構築されており、いくつかの情報に分解することができます。これらの情報のそれぞれの部分は、ユーザが設定可能な他のナビゲータのプロパティから来ています。Gecko ベースのブラウザは以下の一般的な構造に準拠しています。</target>
        </trans-unit>
        <trans-unit id="82c06318dce00254294877cd6d8e0661b7ca2f58" translate="yes" xml:space="preserve">
          <source>The user agent will retain the data as long as possible, clearing all &lt;code&gt;&quot;best-effort&quot;&lt;/code&gt; boxes before considering clearing a box marked &lt;code&gt;&quot;persistent&quot;&lt;/code&gt;. If it becomes necessary to consider clearing persistent boxes, the user agent will notify the user and provide a way to clear one or more persistent boxes as needed.</source>
          <target state="translated">ユーザーエージェントは可能な限りデータを保持し、 &lt;code&gt;&quot;persistent&quot;&lt;/code&gt; マークされたボックスをクリアする前に、すべての &lt;code&gt;&quot;best-effort&quot;&lt;/code&gt; ボックスをクリアします。永続的なボックスのクリアを検討する必要がある場合、ユーザーエージェントはユーザーに通知し、必要に応じて1つ以上の永続的なボックスをクリアする方法を提供します。</target>
        </trans-unit>
        <trans-unit id="ac9dffabf3c027d13b34a0f3d7deccea90bee28e" translate="yes" xml:space="preserve">
          <source>The user agent will try to retain the data contained in the box for as long as it can, &lt;em&gt;but will not warn users&lt;/em&gt; if storage space runs low and it becomes necessary to clear the box in order to relieve the storage pressure.</source>
          <target state="translated">ユーザーエージェントは、ボックスに含まれているデータをできる限り保持しようとし&lt;em&gt;ますが&lt;/em&gt;、ストレージスペースが少なくなり、ストレージの圧力を緩和するためにボックスをクリアする必要が生じた場合、&lt;em&gt;ユーザーに警告しません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="92f26324425a550b26606ec4ac3b1afc3f081cab" translate="yes" xml:space="preserve">
          <source>The user always has the ability to exit fullscreen mode of their own accord; see &lt;a href=&quot;#Things_your_users_want_to_know&quot;&gt;Things your users want to know&lt;/a&gt;. You can also do so programmatically by calling the &lt;a href=&quot;../document/exitfullscreen&quot;&gt;&lt;code&gt;Document.exitFullscreen()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ユーザーはいつでも自分のフルスクリーンモードを終了することができます。&lt;a href=&quot;#Things_your_users_want_to_know&quot;&gt;ユーザーが知りたいことを&lt;/a&gt;参照してください。&lt;a href=&quot;../document/exitfullscreen&quot;&gt; &lt;code&gt;Document.exitFullscreen()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、プログラムで行うこともできます。</target>
        </trans-unit>
        <trans-unit id="8e21ba80979d76daaa6afd06f7c3f4ec7f264461" translate="yes" xml:space="preserve">
          <source>The user has explicitly declined permission to show notifications.</source>
          <target state="translated">ユーザーは通知を表示する許可を明示的に拒否しています。</target>
        </trans-unit>
        <trans-unit id="6278c58ad1eaf1cac3e38b049ab3e25cf91495a9" translate="yes" xml:space="preserve">
          <source>The user has granted permission to display notifications, after having been asked previously.</source>
          <target state="translated">ユーザーは、以前に質問された後、通知を表示する許可を与えました。</target>
        </trans-unit>
        <trans-unit id="c56b8a768e5139dacc06b97fb688b044f30e2615" translate="yes" xml:space="preserve">
          <source>The user has placed more touch points on the screen than can be supported, in which case the earliest &lt;a href=&quot;touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; in the &lt;a href=&quot;touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; gets canceled.</source>
          <target state="translated">ユーザーがサポートできるよりも多くのタッチポイントを画面に配置した場合、&lt;a href=&quot;touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; の&lt;/a&gt;最初の&lt;a href=&quot;touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;がキャンセルされます。</target>
        </trans-unit>
        <trans-unit id="4b72e21073c231ba7f0f9c79e8cc5be522e924ff" translate="yes" xml:space="preserve">
          <source>The user has specified that the current browsing instance is not permitted access to the device; or the user has denied access for the current session; or the user has denied all access to user media devices globally.</source>
          <target state="translated">ユーザーは、現在のブラウジングインスタンスがデバイスへのアクセスを許可されていないことを指定したか、現在のセッションに対するアクセスを拒否したか、ユーザーメディアデバイスへのグローバルなアクセスをすべて拒否したかのいずれかです。</target>
        </trans-unit>
        <trans-unit id="b741358a44a8c59ac6eafad98f0b6523f01fd59b" translate="yes" xml:space="preserve">
          <source>The user hasn't been asked for permission yet, so notifications won't be displayed.</source>
          <target state="translated">ユーザーはまだ許可を求められていないので、通知は表示されません。</target>
        </trans-unit>
        <trans-unit id="6a1c353375628b276e804be072acc7fbb000bca8" translate="yes" xml:space="preserve">
          <source>The user requests a wipe out. Many browsers have settings that let users wipe all data stored for a given website, including cookies, bookmarks, stored passwords, and IndexedDB data.</source>
          <target state="translated">ユーザーはワイプアウトを要求します。多くのブラウザには、クッキー、ブックマーク、保存されたパスワード、IndexedDBデータなど、ユーザーが特定のウェブサイトのために保存されたすべてのデータをワイプできるようにする設定があります。</target>
        </trans-unit>
        <trans-unit id="c69072e650e461d94165595cb4388286f6739e73" translate="yes" xml:space="preserve">
          <source>The user will be notified that your code has asked to register the protocol handler, so that they can decide whether or not to permit it. See the screenshot below for an example on google.co.uk.</source>
          <target state="translated">ユーザーには、あなたのコードがプロトコルハンドラの登録を求めてきたことが通知されるので、それを許可するかどうかを決めることができます。google.co.ukでの例は以下のスクリーンショットを参照してください。</target>
        </trans-unit>
        <trans-unit id="c8d6672219efb568c98e05732b7531fa6d127ca8" translate="yes" xml:space="preserve">
          <source>The user's location is described using a &lt;a href=&quot;position&quot;&gt;&lt;code&gt;Position&lt;/code&gt;&lt;/a&gt; object referencing a &lt;a href=&quot;coordinates&quot;&gt;&lt;code&gt;Coordinates&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">ユーザーの位置は、&lt;a href=&quot;coordinates&quot;&gt; &lt;code&gt;Coordinates&lt;/code&gt; &lt;/a&gt;オブジェクトを参照する&lt;a href=&quot;position&quot;&gt; &lt;code&gt;Position&lt;/code&gt; &lt;/a&gt;オブジェクトを使用して記述されます。</target>
        </trans-unit>
        <trans-unit id="9cc240c935222515c590d3621c2b9d58d5a0aa54" translate="yes" xml:space="preserve">
          <source>The username fragment and password uniquely identify the remote peer for the duration of the ICE session, and are used to both ensure security and to avoid crosstalk across multiple ongoing ICE sessions. See &lt;a href=&quot;rtcicecandidate/usernamefragment&quot;&gt;&lt;code&gt;RTCIceCandidate.usernameFragment&lt;/code&gt;&lt;/a&gt; for further information.</source>
          <target state="translated">ユーザー名フラグメントとパスワードは、ICEセッションの期間中、リモートピアを一意に識別し、セキュリティの確保と、進行中の複数のICEセッション間のクロストークの回避の両方に使用されます。詳細については、&lt;a href=&quot;rtcicecandidate/usernamefragment&quot;&gt; &lt;code&gt;RTCIceCandidate.usernameFragment&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="90f79ab80bed86c1b53443dd22ca22a02faba9fa" translate="yes" xml:space="preserve">
          <source>The username of the person to receive the description (if the caller is sending the message, this specifies the callee, and vice-versa).</source>
          <target state="translated">説明文を受け取る人のユーザ名 (発信者がメッセージを送信している場合は着呼者を指定し、その逆も同様)。</target>
        </trans-unit>
        <trans-unit id="919f7229c276b6cfa86ab06641a906338c6ef005" translate="yes" xml:space="preserve">
          <source>The username of the person with whom negotiation is underway; the server will direct the message to this user only.</source>
          <target state="translated">交渉中の相手のユーザ名。サーバはこのユーザのみにメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="043dfcff71d3896591088134a7a74a921c8afc81" translate="yes" xml:space="preserve">
          <source>The username the ICE candidate needs to be delivered to. This lets the signaling server route the message.</source>
          <target state="translated">ICE 候補の配信先となるユーザ名。これにより、シグナリングサーバがメッセージをルーティングすることができます。</target>
        </trans-unit>
        <trans-unit id="6ea7bf2277be0d64c7c8bfd95f416503e3ff0498" translate="yes" xml:space="preserve">
          <source>The valid strings you can enter should, according to the specification, be CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;&lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt;&lt;/a&gt; values. Each of the following examples describe the same color.</source>
          <target state="translated">入力できる有効な文字列は、仕様に従って、CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt; &lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt; &lt;/a&gt;値である必要があります。以下の例はそれぞれ同じ色を示しています。</target>
        </trans-unit>
        <trans-unit id="c00ec5ca12b0aa766b2b6bb32bf398cd7c71c305" translate="yes" xml:space="preserve">
          <source>The value &lt;code&gt;custom&lt;/code&gt; was specified. To set a custom waveform, just call &lt;a href=&quot;setperiodicwave&quot;&gt;&lt;code&gt;setPeriodicWave()&lt;/code&gt;&lt;/a&gt;. Doing so automatically sets the type for you.</source>
          <target state="translated">値 &lt;code&gt;custom&lt;/code&gt; が指定されました。カスタム波形を設定するには、単に&lt;a href=&quot;setperiodicwave&quot;&gt; &lt;code&gt;setPeriodicWave()&lt;/code&gt; を&lt;/a&gt;呼び出します。これにより、タイプが自動的に設定されます。</target>
        </trans-unit>
        <trans-unit id="d05d120e00af71688e93ed53712ca716b90582e3" translate="yes" xml:space="preserve">
          <source>The value as a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; value, in the units expressed by &lt;code&gt;unitType&lt;/code&gt;. Setting this attribute will cause &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;valueInSpecifiedUnits&lt;/code&gt; and &lt;code&gt;unitType&lt;/code&gt; to be updated automatically to reflect this setting.</source>
          <target state="translated">&lt;code&gt;unitType&lt;/code&gt; で表される単位での&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;値としての値。この属性を設定すると、 &lt;code&gt;value&lt;/code&gt; 、 &lt;code&gt;valueInSpecifiedUnits&lt;/code&gt; および &lt;code&gt;unitType&lt;/code&gt; が自動的に更新され、この設定が反映されます。</target>
        </trans-unit>
        <trans-unit id="c5cb4242a02a3445cae6f6bfafe4e61ef7026e2d" translate="yes" xml:space="preserve">
          <source>The value as a floating point value, in the units expressed by &lt;code&gt;unitType&lt;/code&gt;. Setting this attribute will cause &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;valueAsString&lt;/code&gt; to be updated automatically to reflect this setting.</source>
          <target state="translated">&lt;code&gt;unitType&lt;/code&gt; で表される単位での浮動小数点値としての値。この属性を設定すると、 &lt;code&gt;value&lt;/code&gt; および &lt;code&gt;valueAsString&lt;/code&gt; が自動的に更新され、この設定が反映されます。</target>
        </trans-unit>
        <trans-unit id="21a1f8ba0abb429add350e21153a3453844adb43" translate="yes" xml:space="preserve">
          <source>The value as a floating point value, in user units. Setting this attribute will cause &lt;code&gt;valueInSpecifiedUnits&lt;/code&gt; and &lt;code&gt;valueAsString&lt;/code&gt; to be updated automatically to reflect this setting.</source>
          <target state="translated">ユーザー単位での浮動小数点値としての値。この属性を設定すると、 &lt;code&gt;valueInSpecifiedUnits&lt;/code&gt; および &lt;code&gt;valueAsString&lt;/code&gt; が自動的に更新され、この設定が反映されます。</target>
        </trans-unit>
        <trans-unit id="a4ef8b2a20382afd7aa67f0e7aa4d1d89f9e2ece" translate="yes" xml:space="preserve">
          <source>The value as a string value, in the units expressed by &lt;code&gt;unitType&lt;/code&gt;. Setting this attribute will cause &lt;code&gt;value&lt;/code&gt;, &lt;code&gt;valueInSpecifiedUnits&lt;/code&gt; and &lt;code&gt;unitType&lt;/code&gt; to be updated automatically to reflect this setting.</source>
          <target state="translated">&lt;code&gt;unitType&lt;/code&gt; で表される単位の文字列値としての値。この属性を設定すると、 &lt;code&gt;value&lt;/code&gt; 、 &lt;code&gt;valueInSpecifiedUnits&lt;/code&gt; および &lt;code&gt;unitType&lt;/code&gt; が自動的に更新され、この設定が反映されます。</target>
        </trans-unit>
        <trans-unit id="f59ea001cf8b186ec53d043a88f442d2b9d24820" translate="yes" xml:space="preserve">
          <source>The value associated with the given key, or &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">指定されたキーに関連付けられている値、または &lt;code&gt;undefined&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b2ba0a57ab322b54c2d02284e264ec03cef1044" translate="yes" xml:space="preserve">
          <source>The value can also be specified as a double-precision floating-point value, specifying the preferred maximum latency in seconds. This provides more precise control over the balance between audio latency and device energy usage.</source>
          <target state="translated">また、倍精度浮動小数点値として、好ましい最大レイテンシーを秒単位で指定することもできます。これにより、オーディオのレイテンシーとデバイスのエネルギー使用量のバランスをより正確に制御することができます。</target>
        </trans-unit>
        <trans-unit id="22149dd332e0f149ac3e0f417657c7efbbf9a0ed" translate="yes" xml:space="preserve">
          <source>The value for the &lt;code&gt;mode&lt;/code&gt; parameter is invalid.</source>
          <target state="translated">値は &lt;code&gt;mode&lt;/code&gt; パラメータが無効です。</target>
        </trans-unit>
        <trans-unit id="bfd6d29468147d7a47f1b42a25842835598ed930" translate="yes" xml:space="preserve">
          <source>The value for the direction parameter is invalid.</source>
          <target state="translated">方向パラメータの値が無効です。</target>
        </trans-unit>
        <trans-unit id="d0fb0cbb94fba530584eaaf7520272f1244ad810" translate="yes" xml:space="preserve">
          <source>The value for the record at the cursor's position. Setting this attribute can raise an IDBDatabaseException with the following codes:</source>
          <target state="translated">カーソル位置のレコードの値。この属性を設定すると、以下のコードでIDBDatabaseExceptionが発生します。</target>
        </trans-unit>
        <trans-unit id="06a62f7ab5525e1bc32929fcb5594d140ef093fc" translate="yes" xml:space="preserve">
          <source>The value for the specified property name.</source>
          <target state="translated">指定したプロパティ名の値です。</target>
        </trans-unit>
        <trans-unit id="7a92a4ffaff22a399fc94a2033fa2b7778df1ada" translate="yes" xml:space="preserve">
          <source>The value in &lt;code&gt;longitude&lt;/code&gt; is the geographical longitude of the location on Earth described by the &lt;code&gt;Coordinates&lt;/code&gt; object, in decimal degrees. The value is defined by the World Geodetic System 1984 specification (WGS 84).</source>
          <target state="translated">&lt;code&gt;longitude&lt;/code&gt; の値は、 &lt;code&gt;Coordinates&lt;/code&gt; オブジェクトで記述された地球上の場所の地理上の経度（10進度）です。この値は、World Geodetic System 1984仕様（WGS 84）で定義されています。</target>
        </trans-unit>
        <trans-unit id="1ebcdec80c0a23408cf952e6ad2c185b722ef1b9" translate="yes" xml:space="preserve">
          <source>The value is &lt;code&gt;null&lt;/code&gt; if the request is not yet complete or was unsuccessful, with the exception that when reading text data using a &lt;code&gt;responseType&lt;/code&gt; of &lt;code&gt;&quot;text&quot;&lt;/code&gt; or the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), the response can contain the response so far while the request is still in the &lt;code&gt;LOADING&lt;/code&gt;&lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; (3).</source>
          <target state="translated">リクエストがまだ完了していない、または失敗した場合、値は &lt;code&gt;null&lt;/code&gt; になります。ただし、 &lt;code&gt;responseType&lt;/code&gt; が &lt;code&gt;&quot;text&quot;&lt;/code&gt; または空の文字列（ &lt;code&gt;&quot;&quot;&lt;/code&gt; ）を使用してテキストデータを読み取る場合、リクエスト中にリクエストに応答を含めることができます。まだ &lt;code&gt;LOADING&lt;/code&gt; &lt;a href=&quot;readystate&quot;&gt; &lt;code&gt;readyState&lt;/code&gt; &lt;/a&gt;（3）です。</target>
        </trans-unit>
        <trans-unit id="9db707f77defd4071b53b0c625b58f54b26b4175" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing an SDP message like this one:</source>
          <target state="translated">値は、次のようなSDPメッセージを含む&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="6086b59370d09d510f705647e5eb3973b458f5b4" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt;, made up of the following values:</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt;であり、次の値で構成されています。</target>
        </trans-unit>
        <trans-unit id="62a3a2afaa6682e69602a2b8c67a00b9749669ff" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters&quot;&gt;counter or counters&lt;/a&gt; function. The value can be obtained by using the &lt;code&gt;getCounterValue()&lt;/code&gt; method.</source>
          <target state="translated">値は、1 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters&quot;&gt;つまたは複数のカウンター&lt;/a&gt;関数です。この値は、 &lt;code&gt;getCounterValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="55569dd5e9ded79d4352d6f08a539dba544b98d8" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/frequency&quot;&gt;&lt;code&gt;&amp;lt;frequency&amp;gt;&lt;/code&gt;&lt;/a&gt; in Hertz. The value can be obtained by using the getFloatValue method.</source>
          <target state="translated">値はヘルツ単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/frequency&quot;&gt; &lt;code&gt;&amp;lt;frequency&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、getFloatValueメソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="4931d880569e8d92c8a6f048b148e91e30e3b36b" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/frequency&quot;&gt;&lt;code&gt;&amp;lt;frequency&amp;gt;&lt;/code&gt;&lt;/a&gt; in Kilohertz.</source>
          <target state="translated">値はキロヘルツ単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/frequency&quot;&gt; &lt;code&gt;&amp;lt;frequency&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="287885bfc6a3b3275d54fd51adb3335f9aa68b40" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/frequency&quot;&gt;&lt;code&gt;&amp;lt;frequency&amp;gt;&lt;/code&gt;&lt;/a&gt; in Kilohertz. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はキロヘルツ単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/frequency&quot;&gt; &lt;code&gt;&amp;lt;frequency&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="c58be0c7c234fe01103423ceadcdd60426e02a80" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in centimeters.</source>
          <target state="translated">値はセンチメートル単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="bac52b261e1e2a809e255dd4ef981d595b93e606" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in centimeters. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はセンチメートル単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="b1ef6dd46314e4f03347b84150d862d4754ffcb2" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in em units.</source>
          <target state="translated">値はem単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="f73825e45ce2f40228882dbb51dc463f0acb4b2d" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in em units. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はem単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="4507f45acde444e285edd112c57df0358e548fb5" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in ex units.</source>
          <target state="translated">値は、ex単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="db7ff50c9ef2fc04d30f25ce61afa717e9db0434" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in ex units. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値は、ex単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="ad753cbee363214ad1077b6926f192fc2553c922" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in inches.</source>
          <target state="translated">値はインチ単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="64c7a0c12ede3044ae67bf031d0eb644a7a9d4d3" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in inches. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はインチ単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="dbe9d21dea02bbda266029ebf1d89eb8d8c8b5cc" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in millimeters.</source>
          <target state="translated">値はミリメートル単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="09d154720b6c67b148179f10a2e7593c5bf5f964" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in millimeters. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はミリメートル単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="279e7aa0742e8737615fde6efc36d9e19fa4ba2c" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in picas.</source>
          <target state="translated">値はパイカの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="296c9f0ff71f297c0109b6f5719a8e9cb3647b5b" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in picas. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はパイカの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="f232909e89340bc78d1b5df45f6b1a2f39fbb27a" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in pixels.</source>
          <target state="translated">値はピクセル単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="85b14772296061733e1e99427b65fb10d92808a6" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in pixels. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はピクセル単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="b738ff5334f6c56bdee7eb80103e9b161414de27" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in points.</source>
          <target state="translated">値はポイント単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="dea07435b4a09922d7872696bf7858a7795fe96d" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt;&lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt;&lt;/a&gt; in points. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はポイント単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/length&quot;&gt; &lt;code&gt;&amp;lt;length&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="a8b8022c063b2747ea3cb17ab96fad4969506e02" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; with an unknown dimension.</source>
          <target state="translated">値は、次元が不明な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="1febd16c4477db698ae2274e13e6a543348713c5" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt; with an unknown dimension. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値は、次元が不明な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="fee48a5d9d8ea133911f068647b6cd9ba9848b73" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="68d70ebc1656548ae79cab802197794504813735" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt;&lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt;&lt;/a&gt;. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/percentage&quot;&gt; &lt;code&gt;&amp;lt;percentage&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="391915087f55caaa09913d11217f69eaf55a799c" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/shape#Syntax&quot;&gt;&lt;code&gt;rect()&lt;/code&gt;&lt;/a&gt; function. The value can be obtained by using the &lt;code&gt;getRectValue()&lt;/code&gt; method.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/shape#Syntax&quot;&gt; &lt;code&gt;rect()&lt;/code&gt; &lt;/a&gt;関数です。この値は、 &lt;code&gt;getRectValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="22f67537625df9bd670491d8d1d08d5d43bebc8d" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/string&quot;&gt; &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e443ae4241e03ee55255db82c53bb2e9634776e4" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/string&quot;&gt;&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/a&gt;. The value can be obtained by using the &lt;code&gt;getStringValue()&lt;/code&gt; method.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/string&quot;&gt; &lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getStringValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="63a5f6d4d3670eebf9e15dbc98dea598327d7268" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/time&quot;&gt;&lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt;&lt;/a&gt; in milliseconds.</source>
          <target state="translated">値はミリ秒単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/time&quot;&gt; &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="2ce164ec14a2a837cc9634d182ffe566e96c750f" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/time&quot;&gt;&lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt;&lt;/a&gt; in milliseconds. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はミリ秒単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/time&quot;&gt; &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="2b4bc39a2b204f3546f46c75e395a1e6d437422e" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/time&quot;&gt;&lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt;&lt;/a&gt; in seconds.</source>
          <target state="translated">値は秒単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/time&quot;&gt; &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="3957efec760e93057f0a549a13b2d96863c94c19" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/time&quot;&gt;&lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt;&lt;/a&gt; in seconds. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値は秒単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/time&quot;&gt; &lt;code&gt;&amp;lt;time&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="f56ea5f58182cd029a936f1e90b8e0ad5687b061" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/uri&quot;&gt;&lt;code&gt;&amp;lt;uri&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/uri&quot;&gt; &lt;code&gt;&amp;lt;uri&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="6c7a479243cc6ccc36bb3eaedfc198b587646500" translate="yes" xml:space="preserve">
          <source>The value is a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/uri&quot;&gt;&lt;code&gt;&amp;lt;uri&amp;gt;&lt;/code&gt;&lt;/a&gt;. The value can be obtained by using the &lt;code&gt;getStringValue()&lt;/code&gt; method.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/uri&quot;&gt; &lt;code&gt;&amp;lt;uri&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getStringValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="e7f41cf2d26296ff0001500445699653908b5061" translate="yes" xml:space="preserve">
          <source>The value is a &lt;code&gt;CSSValue&lt;/code&gt; list and an instance of the &lt;a href=&quot;../cssvaluelist&quot;&gt;&lt;code&gt;CSSValueList&lt;/code&gt;&lt;/a&gt; interface can be obtained by using binding-specific casting methods on this instance of the &lt;code&gt;CSSValue&lt;/code&gt; interface.</source>
          <target state="translated">値は &lt;code&gt;CSSValue&lt;/code&gt; のリストのインスタンス&lt;a href=&quot;../cssvaluelist&quot;&gt; &lt;code&gt;CSSValueList&lt;/code&gt; の&lt;/a&gt;インターフェースは、このインスタンスのメソッドキャスティング結合特異用いることによって得ることができる &lt;code&gt;CSSValue&lt;/code&gt; のインターフェイスを。</target>
        </trans-unit>
        <trans-unit id="aa9bccbe78f731335af084c917c3bbf7cb223df5" translate="yes" xml:space="preserve">
          <source>The value is a &lt;code&gt;CSSValue&lt;/code&gt; list and an instance of the &lt;a href=&quot;cssvaluelist&quot;&gt;&lt;code&gt;CSSValueList&lt;/code&gt;&lt;/a&gt; interface can be obtained by using binding-specific casting methods on this instance of the &lt;code&gt;CSSValue&lt;/code&gt; interface.</source>
          <target state="translated">値は &lt;code&gt;CSSValue&lt;/code&gt; のリストのインスタンス&lt;a href=&quot;cssvaluelist&quot;&gt; &lt;code&gt;CSSValueList&lt;/code&gt; の&lt;/a&gt;インターフェースは、このインスタンスのメソッドキャスティング結合特異用いることによって得ることができる &lt;code&gt;CSSValue&lt;/code&gt; のインターフェイスを。</target>
        </trans-unit>
        <trans-unit id="87b64d80c032aea5c9ad3e2491a6ed1576caee25" translate="yes" xml:space="preserve">
          <source>The value is a custom value.</source>
          <target state="translated">値はカスタム値です。</target>
        </trans-unit>
        <trans-unit id="017feb48186e077d3ec3585aadcc5f585a87c8fd" translate="yes" xml:space="preserve">
          <source>The value is a primitive value and an instance of the &lt;a href=&quot;../cssprimitivevalue&quot;&gt;&lt;code&gt;CSSPrimitiveValue&lt;/code&gt;&lt;/a&gt; interface can be obtained by using binding-specific casting methods on this instance of the &lt;code&gt;CSSValue&lt;/code&gt; interface.</source>
          <target state="translated">値は、プリミティブ値とのインスタンスである&lt;a href=&quot;../cssprimitivevalue&quot;&gt; &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; の&lt;/a&gt;このインスタンスでバインディング固有のキャスティング法を用いることによって得ることができるインタフェース &lt;code&gt;CSSValue&lt;/code&gt; のインターフェース。</target>
        </trans-unit>
        <trans-unit id="5ce6b7db811a9283e755ba91b3449cb0a4f18ee9" translate="yes" xml:space="preserve">
          <source>The value is a primitive value and an instance of the &lt;a href=&quot;cssprimitivevalue&quot;&gt;&lt;code&gt;CSSPrimitiveValue&lt;/code&gt;&lt;/a&gt; interface can be obtained by using binding-specific casting methods on this instance of the &lt;code&gt;CSSValue&lt;/code&gt; interface.</source>
          <target state="translated">値は、プリミティブ値とのインスタンスである&lt;a href=&quot;cssprimitivevalue&quot;&gt; &lt;code&gt;CSSPrimitiveValue&lt;/code&gt; の&lt;/a&gt;このインスタンスでバインディング固有のキャスティング法を用いることによって得ることができるインタフェース &lt;code&gt;CSSValue&lt;/code&gt; のインターフェース。</target>
        </trans-unit>
        <trans-unit id="e20e9b391c6120b6e04800ad67cea54b768431b4" translate="yes" xml:space="preserve">
          <source>The value is a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">値は単純な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="30a7c8b6b47fb1bc30c92b432b9f4bbdcca5625a" translate="yes" xml:space="preserve">
          <source>The value is a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/number&quot;&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/a&gt;. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値は単純な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/number&quot;&gt; &lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="3367981b93277eaee19e482eef296580d0ebbbf1" translate="yes" xml:space="preserve">
          <source>The value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; in degrees.</source>
          <target state="translated">値は度単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="719fda609fb8bb52c0c5634561669a5e342273ba" translate="yes" xml:space="preserve">
          <source>The value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; in degrees. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値は度単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="67cc244993bc80f1c7498e7a23d14ef1f4e0bc27" translate="yes" xml:space="preserve">
          <source>The value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; in grads.</source>
          <target state="translated">値はグラードの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="30d52bb9b68f3e85e3970107d6cc66091cc9315a" translate="yes" xml:space="preserve">
          <source>The value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; in grads. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はグラードの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="654cf3cb9423b8a8782bb4251b8ad6139cbc4e65" translate="yes" xml:space="preserve">
          <source>The value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; in radians.</source>
          <target state="translated">値はラジアン単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="d9666fc3029f2ccd871b98205bdbe0335d90680e" translate="yes" xml:space="preserve">
          <source>The value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt; in radians. The value can be obtained by using the &lt;code&gt;getFloatValue()&lt;/code&gt; method.</source>
          <target state="translated">値はラジアン単位の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getFloatValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="7f551766201633ce0b27f50e477c2a40a3a6b63e" translate="yes" xml:space="preserve">
          <source>The value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/attr()&quot;&gt;&lt;code&gt;attr()&lt;/code&gt;&lt;/a&gt; function.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/attr()&quot;&gt; &lt;code&gt;attr()&lt;/code&gt; &lt;/a&gt;関数です。</target>
        </trans-unit>
        <trans-unit id="c547cbb435fde3c2c8a892c2e4d2cb4a04a77511" translate="yes" xml:space="preserve">
          <source>The value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/attr()&quot;&gt;&lt;code&gt;attr()&lt;/code&gt;&lt;/a&gt; function. The value can be obtained by using the &lt;code&gt;getStringValue()&lt;/code&gt; method.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/attr()&quot;&gt; &lt;code&gt;attr()&lt;/code&gt; &lt;/a&gt;関数です。この値は、 &lt;code&gt;getStringValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="f4898250434ae4ead48359bf1e2b257f9df03072" translate="yes" xml:space="preserve">
          <source>The value is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt;&lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt;&lt;/a&gt;. The value can be obtained by using the &lt;code&gt;getRGBColorValue()&lt;/code&gt; method.</source>
          <target state="translated">値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/color_value&quot;&gt; &lt;code&gt;&amp;lt;color&amp;gt;&lt;/code&gt; &lt;/a&gt;です。この値は、 &lt;code&gt;getRGBColorValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="7c24749ecab2c644970a6a55094cf88008164c7c" translate="yes" xml:space="preserve">
          <source>The value is an empty string if the user navigated to the page directly (not through a link, but, for example, via a bookmark). Since this property returns only a string, it does not give you DOM access to the referring page.</source>
          <target state="translated">ユーザーが直接ページに移動した場合 (リンクではなく、例えばブックマークを介して)、値は空の文字列となります。このプロパティは文字列を返すだけなので、参照先のページへの DOM アクセスはできません。</target>
        </trans-unit>
        <trans-unit id="48dcf6a735244359eaed753f254e648fd1cec01f" translate="yes" xml:space="preserve">
          <source>The value is an identifier.</source>
          <target state="translated">値は識別子です。</target>
        </trans-unit>
        <trans-unit id="6383f0417ddcb3b677853f49b445800ff99857db" translate="yes" xml:space="preserve">
          <source>The value is an identifier. The value can be obtained by using the &lt;code&gt;getStringValue()&lt;/code&gt; method.</source>
          <target state="translated">値は識別子です。この値は、 &lt;code&gt;getStringValue()&lt;/code&gt; メソッドを使用して取得できます。</target>
        </trans-unit>
        <trans-unit id="e8df3b7db3c2a4a62f5c9a3f95f348f0108a3942" translate="yes" xml:space="preserve">
          <source>The value is inherited and the &lt;code&gt;cssText&lt;/code&gt; contains &lt;code&gt;&quot;inherit&quot;&lt;/code&gt;.</source>
          <target state="translated">値は継承され、 &lt;code&gt;cssText&lt;/code&gt; には &lt;code&gt;&quot;inherit&quot;&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="2df5cff8bb16852ca752272c5d767a133935e424" translate="yes" xml:space="preserve">
          <source>The value is not a recognized CSS2 value. The value can only be obtained by using the &lt;a href=&quot;../cssvalue/csstext&quot;&gt;&lt;code&gt;cssText&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">値は認識されたCSS2値ではありません。この値は、&lt;a href=&quot;../cssvalue/csstext&quot;&gt; &lt;code&gt;cssText&lt;/code&gt; &lt;/a&gt;属性を使用してのみ取得できます。</target>
        </trans-unit>
        <trans-unit id="0d13c027b5b89773e9259ea07e6b92fac3fe9ea2" translate="yes" xml:space="preserve">
          <source>The value is not a recognized CSS2 value. The value can only be obtained by using the &lt;a href=&quot;cssvalue/csstext&quot;&gt;&lt;code&gt;cssText&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">値は認識されたCSS2値ではありません。この値は、&lt;a href=&quot;cssvalue/csstext&quot;&gt; &lt;code&gt;cssText&lt;/code&gt; &lt;/a&gt;属性を使用してのみ取得できます。</target>
        </trans-unit>
        <trans-unit id="52e8c6bb1070e37190f9d61afef094ca81de0acf" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;../element/tagname&quot;&gt;&lt;code&gt;Element.tagName&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;../element/tagname&quot;&gt; &lt;code&gt;Element.tagName&lt;/code&gt; &lt;/a&gt;の値</target>
        </trans-unit>
        <trans-unit id="f9a33a98eccdf08982099e65eb035cd6694c60e2" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Guard&quot;&gt;Guard&lt;/a&gt; is &lt;code&gt;immutable&lt;/code&gt;.​</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Guard&quot;&gt;Guard&lt;/a&gt;の価値は &lt;code&gt;immutable&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d86fdd3a64fab080bf9766ab758dac2a9f548087" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Attr/name&quot;&gt;&lt;code&gt;Attr.name&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Attr/name&quot;&gt; &lt;code&gt;Attr.name&lt;/code&gt; &lt;/a&gt;の値</target>
        </trans-unit>
        <trans-unit id="7839547b5cc1e78385d11c3a2f54848f93ae7ac7" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentType/name&quot;&gt;&lt;code&gt;DocumentType.name&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentType/name&quot;&gt; &lt;code&gt;DocumentType.name&lt;/code&gt; &lt;/a&gt;の値</target>
        </trans-unit>
        <trans-unit id="5128920e6c07b79a1e092345c4d5ab3c387afd69" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction/target&quot;&gt;&lt;code&gt;ProcessingInstruction.target&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction/target&quot;&gt; &lt;code&gt;ProcessingInstruction.target&lt;/code&gt; &lt;/a&gt;の値</target>
        </trans-unit>
        <trans-unit id="df9acaf3c960fe81b6b51b5552cd6df403bdee29" translate="yes" xml:space="preserve">
          <source>The value of &lt;a href=&quot;language&quot;&gt;&lt;code&gt;navigator.language&lt;/code&gt;&lt;/a&gt; is the first element of the returned array.</source>
          <target state="translated">&lt;a href=&quot;language&quot;&gt; &lt;code&gt;navigator.language&lt;/code&gt; &lt;/a&gt;の値は、返される配列の最初の要素です。</target>
        </trans-unit>
        <trans-unit id="52499f2645ebbbc963983e37ffe36b34fc1e4b33" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;before&lt;/code&gt; can now be a long and is optional. It throws a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMError&quot;&gt;&lt;code&gt;DOMError&lt;/code&gt;&lt;/a&gt; of the type &lt;code&gt;HierarchyRequestError&lt;/code&gt; if the passed &lt;code&gt;item&lt;/code&gt; is an ancestor of the &lt;a href=&quot;../htmlselectelement&quot;&gt;&lt;code&gt;HTMLSelectElement&lt;/code&gt;&lt;/a&gt; and no longer throws if the &lt;code&gt;before&lt;/code&gt; parameter is not found.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; の値は長くなり、オプションになりました。それは投げない&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DOMError&quot;&gt; &lt;code&gt;DOMError&lt;/code&gt; が&lt;/a&gt;型の &lt;code&gt;HierarchyRequestError&lt;/code&gt; を渡された場合 &lt;code&gt;item&lt;/code&gt; の祖先である&lt;a href=&quot;../htmlselectelement&quot;&gt; &lt;code&gt;HTMLSelectElement&lt;/code&gt; &lt;/a&gt;、もはや場合スロー &lt;code&gt;before&lt;/code&gt; パラメータが見つかりません。</target>
        </trans-unit>
        <trans-unit id="4e69d37edaec4a8736c7ef7d8c3eba3c242e3f21" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;channelNumber&lt;/code&gt; specifies a channel number which doesn't exist (that is, it's greater than or equal to the value of &lt;a href=&quot;numberofchannels&quot;&gt;&lt;code&gt;numberOfChannels&lt;/code&gt;&lt;/a&gt; on the channel).</source>
          <target state="translated">値は &lt;code&gt;channelNumber&lt;/code&gt; 存在しないチャンネル番号（の値に等しいまたはそれよりなる、それのより大きな指定&lt;a href=&quot;numberofchannels&quot;&gt; &lt;code&gt;numberOfChannels&lt;/code&gt; &lt;/a&gt;チャネル上を）。</target>
        </trans-unit>
        <trans-unit id="8d1efed955480b055cacc81c08ca99c1f9649e28" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;direction&lt;/code&gt; is used by &lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt;&lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt;&lt;/a&gt; in order to generate the SDP generated by each of those methods. The SDP contains an a-line which specifies the directionality. For example, if the &lt;code&gt;direction&lt;/code&gt; is specified as &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt;, the corresponding SDP a-line is:</source>
          <target state="translated">&lt;code&gt;direction&lt;/code&gt; の値は、&lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt; &lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt; &lt;/a&gt;がこれらの各メソッドによって生成されたSDPを生成するために使用されます。SDPには方向性を指定するa行が含まれています。たとえば、 &lt;code&gt;direction&lt;/code&gt; が &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt; と指定されている場合、対応するSDP a-lineは次のようになります。</target>
        </trans-unit>
        <trans-unit id="dbe256a269f022eaccd96066754e68998198d39e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;enabled&lt;/code&gt;, in essence, represents what a typical user would consider the muting state for a track, whereas the &lt;a href=&quot;muted&quot;&gt;&lt;code&gt;muted&lt;/code&gt;&lt;/a&gt; property indicates a state in which the track is temporarily unable to output data, such as a scenario in which frames have been lost in transit.</source>
          <target state="translated">&lt;code&gt;enabled&lt;/code&gt; の値は、本質的に、一般的なユーザーがトラックのミューティング状態をどのように考えるかを表しますが、&lt;a href=&quot;muted&quot;&gt; &lt;code&gt;muted&lt;/code&gt; &lt;/a&gt;プロパティは、フレームが失われたシナリオなど、トラックが一時的にデータを出力できない状態を示します。輸送中。</target>
        </trans-unit>
        <trans-unit id="3ebe3e8ddce95a82f28879babc90fa20ce7aa9c3" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;frameRate&lt;/code&gt; is negative.</source>
          <target state="translated">&lt;code&gt;frameRate&lt;/code&gt; の値が負です。</target>
        </trans-unit>
        <trans-unit id="6f40eead736f505ec82003b950d0ff1030d4160c" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;startInChannel&lt;/code&gt; is outside the current range of samples that already exist in the source buffer; that is, it's greater than its current &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;startInChannel&lt;/code&gt; の値が、ソースバッファーに既に存在するサンプルの現在の範囲外です。つまり、現在の&lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;よりも長くなります。</target>
        </trans-unit>
        <trans-unit id="0b6ae6c5d7920b3d42487a7506171aa302218d21" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; within &lt;code&gt;modifyText()&lt;/code&gt; is a reference to the global object &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; (or &lt;code&gt;undefined&lt;/code&gt; in the case of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;strict mode&lt;/a&gt;).</source>
          <target state="translated">値は &lt;code&gt;this&lt;/code&gt; 内 &lt;code&gt;modifyText()&lt;/code&gt; グローバル・オブジェクトへの参照である&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;（または &lt;code&gt;undefined&lt;/code&gt; の場合は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode&quot;&gt;厳密モード&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c92bc2b1a615af20a94dbb8796285470b69ff0ce" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;this&lt;/code&gt; within the handler</source>
          <target state="translated">ハンドラー内の &lt;code&gt;this&lt;/code&gt; の値</target>
        </trans-unit>
        <trans-unit id="5123ebefb1e645a582dc710944d613048c96aaff" translate="yes" xml:space="preserve">
          <source>The value of a &lt;code&gt;ConstrainDOMString&lt;/code&gt; can be any of the following:</source>
          <target state="translated">&lt;code&gt;ConstrainDOMString&lt;/code&gt; の値は、次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="07025ea471c8bca5ba257685a5cea2f466731f5e" translate="yes" xml:space="preserve">
          <source>The value of a &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; is a double-precision floating-point number which describes the number of milliseconds (accurate to within 5 microseconds if the device supports it) elapsed between two points in time. The starting time can be either a specific time determined by the script for a site or app, or the &lt;strong&gt;time origin&lt;/strong&gt;.</source>
          <target state="translated">&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; の値は、2つの時点間で経過したミリ秒数（デバイスがサポートしている場合は5マイクロ秒以内の精度）を表す倍精度浮動小数点数です。開始時間は、サイトまたはアプリのスクリプトによって決定される特定の時間、または&lt;strong&gt;時間の起点の&lt;/strong&gt;いずれかです。</target>
        </trans-unit>
        <trans-unit id="90bcc60448c00fd108d00ed202ff2673d6044bd9" translate="yes" xml:space="preserve">
          <source>The value of dataset is a &lt;a href=&quot;../domstringmap&quot;&gt;&lt;code&gt;DOMStringMap&lt;/code&gt;&lt;/a&gt; object mapping key names to values; both the key names and the values are, themselves, &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; objects. You can access an individual value by using the syntax &lt;code&gt;&lt;em&gt;SVGElement&lt;/em&gt;.dataset.&lt;em&gt;keyName&lt;/em&gt;&lt;/code&gt; to refer to the key.</source>
          <target state="translated">datasetの値は、キー名を値にマッピングする&lt;a href=&quot;../domstringmap&quot;&gt; &lt;code&gt;DOMStringMap&lt;/code&gt; &lt;/a&gt;オブジェクトです。キー名と値の両方が、それ自体、&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;オブジェクトです。構文 &lt;code&gt;&lt;em&gt;SVGElement&lt;/em&gt;.dataset.&lt;em&gt;keyName&lt;/em&gt;&lt;/code&gt; を使用して、個々の値にアクセスできます。&lt;em&gt;キー&lt;/em&gt;を参照する&lt;em&gt;keyName&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="e781237c2b8ddfce0f0cc6733be1a0af0304eddc" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;../navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt;&lt;code&gt;&lt;strong&gt;vendor&lt;/strong&gt;&lt;/code&gt; property is always either &quot;&lt;code&gt;Google Inc.&lt;/code&gt;&quot;, &quot;&lt;code&gt;Apple Computer, Inc.&lt;/code&gt;&quot;, or (in Firefox) the empty string.</source>
          <target state="translated">&lt;a href=&quot;../navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&lt;strong&gt;vendor&lt;/strong&gt;&lt;/code&gt; プロパティの値は、常に「 &lt;code&gt;Google Inc.&lt;/code&gt; 」、「 &lt;code&gt;Apple Computer, Inc.&lt;/code&gt; 」、または（Firefoxでは）空の文字列のいずれかです。</target>
        </trans-unit>
        <trans-unit id="d4eb5acc3ea67b69a1a806f227bb8f55afcaf2c2" translate="yes" xml:space="preserve">
          <source>The value of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property&quot;&gt;&lt;code&gt;transition-property&lt;/code&gt;&lt;/a&gt; property that applies to the target is changed</source>
          <target state="translated">ターゲットに適用される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/transition-property&quot;&gt; &lt;code&gt;transition-property&lt;/code&gt; &lt;/a&gt;プロパティの値が変更された</target>
        </trans-unit>
        <trans-unit id="5c05ea4ee0c9106e2a3c6c88845ffe9980fa8644" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;&lt;strong&gt;Navigator.vendorSub&lt;/strong&gt;&lt;/code&gt; property is always the empty string, in any browser.</source>
          <target state="translated">どのブラウザでも、 &lt;code&gt;&lt;strong&gt;Navigator.vendorSub&lt;/strong&gt;&lt;/code&gt; プロパティの値は常に空の文字列です。</target>
        </trans-unit>
        <trans-unit id="776fecf56bedd40df82e1c4582f9931b4a697b03" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;NavigatorID.appCodeName&lt;/code&gt; property is always &quot;&lt;code&gt;Mozilla&lt;/code&gt;&quot;, in any browser. This property is kept only for compatibility purposes.</source>
          <target state="translated">&lt;code&gt;NavigatorID.appCodeName&lt;/code&gt; プロパティの値は、どのブラウザでも常に「 &lt;code&gt;Mozilla&lt;/code&gt; 」です。このプロパティは、互換性の目的でのみ保持されます。</target>
        </trans-unit>
        <trans-unit id="b98150811a0598dc2958e62810f72ad265a056aa" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;NavigatorID.appName&lt;/code&gt; property is always &quot;&lt;code&gt;Netscape&lt;/code&gt;&quot;, in any browser.</source>
          <target state="translated">&lt;code&gt;NavigatorID.appName&lt;/code&gt; プロパティの値は、どのブラウザでも常に「 &lt;code&gt;Netscape&lt;/code&gt; 」です。</target>
        </trans-unit>
        <trans-unit id="2cf93591e2fd780b44620dccb78418e397b65f35" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;NavigatorID.product&lt;/code&gt; property is always &quot;&lt;code&gt;Gecko&lt;/code&gt;&quot;, in any browser.</source>
          <target state="translated">どのブラウザでも、 &lt;code&gt;NavigatorID.product&lt;/code&gt; プロパティの値は常に「 &lt;code&gt;Gecko&lt;/code&gt; 」です。</target>
        </trans-unit>
        <trans-unit id="51d7e7fa24054ef5327bc4ea047ecf0eaa23466d" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;audio&lt;/code&gt; property can be specified as either of two types:</source>
          <target state="translated">&lt;code&gt;audio&lt;/code&gt; プロパティの値は、次の2つのタイプのいずれかとして指定できます。</target>
        </trans-unit>
        <trans-unit id="9f1e8b84e14a503bd7012e84ce800f5bf7ba1505" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;navigationUI&lt;/code&gt; property must be one of the following strings. The default is &lt;code&gt;&quot;auto&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;navigationUI&lt;/code&gt; プロパティの値は、次のいずれかの文字列である必要があります。デフォルトは &lt;code&gt;&quot;auto&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="aa18ebfd63e4fbb53608d1820a9701c76ea34e93" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;origin&lt;/code&gt; property of the dispatched event is not affected by the current value of &lt;code&gt;document.domain&lt;/code&gt; in the calling window.</source>
          <target state="translated">値は &lt;code&gt;origin&lt;/code&gt; 送出されたイベントのプロパティは、現在の値に影響されない &lt;code&gt;document.domain&lt;/code&gt; を呼び出してウィンドウに表示されます。</target>
        </trans-unit>
        <trans-unit id="de41810685b2f5e23b83b04e3c7f7cbd39f04ee7" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;origin&lt;/code&gt; property when the sending window contains a &lt;code&gt;javascript:&lt;/code&gt; or &lt;code&gt;data:&lt;/code&gt; URL is the origin of the script that loaded the URL.</source>
          <target state="translated">送信ウィンドウに &lt;code&gt;javascript:&lt;/code&gt; または &lt;code&gt;data:&lt;/code&gt; URLが含まれている場合の &lt;code&gt;origin&lt;/code&gt; プロパティの値は、URLをロードしたスクリプトの起点です。</target>
        </trans-unit>
        <trans-unit id="5bf02c6a156305d4c7fb52c8531eaf6a14176a7b" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;video&lt;/code&gt; property can be specified as either of two types:</source>
          <target state="translated">&lt;code&gt;video&lt;/code&gt; プロパティの値は、次の2つのタイプのいずれかとして指定できます。</target>
        </trans-unit>
        <trans-unit id="a1b2c610f4f02e50361fe72a95299c3366f69ff4" translate="yes" xml:space="preserve">
          <source>The value of the HTTP header you want to add.</source>
          <target state="translated">追加したいHTTPヘッダーの値。</target>
        </trans-unit>
        <trans-unit id="797ddf7b2bb39a2617e58f952e29d2243cd09e75" translate="yes" xml:space="preserve">
          <source>The value of the auto increment flag for this object store.</source>
          <target state="translated">このオブジェクトストアのオートインクリメントフラグの値。</target>
        </trans-unit>
        <trans-unit id="a0655d4c584f4cda48ae8159deae0ea747748140" translate="yes" xml:space="preserve">
          <source>The value of the current cursor.</source>
          <target state="translated">現在のカーソルの値。</target>
        </trans-unit>
        <trans-unit id="47b75aa5553be59be4e7e55e4716ce379d0badd0" translate="yes" xml:space="preserve">
          <source>The value of the current element being processed.</source>
          <target state="translated">処理されている現在の要素の値。</target>
        </trans-unit>
        <trans-unit id="d0cc4ab1e973a68880df1073590048533ec59a3c" translate="yes" xml:space="preserve">
          <source>The value of the depth coordinate, z, as a floating point number. The default value is 0.</source>
          <target state="translated">深さ座標 z の値を浮動小数点数で指定します。デフォルト値は0です。</target>
        </trans-unit>
        <trans-unit id="e82b05dff163ac0f27e33a76835ea9a4dd8fdf05" translate="yes" xml:space="preserve">
          <source>The value of the horizontal coordinate, x, as a floating point number. The default value is 0.</source>
          <target state="translated">水平座標 x の値を浮動小数点数で指定します。デフォルト値は0です。</target>
        </trans-unit>
        <trans-unit id="b9d661b5edbb825b4b78e620973573e89d9ceb21" translate="yes" xml:space="preserve">
          <source>The value of the list as a &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;としてのリストの値。</target>
        </trans-unit>
        <trans-unit id="164f01e6549956280d219056ff177df1f5095998" translate="yes" xml:space="preserve">
          <source>The value of the name parameter is not the name of an HTTP header.</source>
          <target state="translated">name パラメータの値は HTTP ヘッダの名前ではありません。</target>
        </trans-unit>
        <trans-unit id="30f99426ec21c32a11c3203aeaf868cd6562557b" translate="yes" xml:space="preserve">
          <source>The value of the parameter to append.</source>
          <target state="translated">追加するパラメータの値。</target>
        </trans-unit>
        <trans-unit id="976451a3cf005214a6e64381e37c97bcabdba67c" translate="yes" xml:space="preserve">
          <source>The value of the parameter to set.</source>
          <target state="translated">設定するパラメータの値です。</target>
        </trans-unit>
        <trans-unit id="4223925586beea1671f18518394bf2721418aece" translate="yes" xml:space="preserve">
          <source>The value of the perspective, w, as a floating point number. The default is 1.</source>
          <target state="translated">パースペクティブの値 w を浮動小数点数で指定します。デフォルトは1です。</target>
        </trans-unit>
        <trans-unit id="15760a29c3a5cb4a56717efdf7afd2931323dd2c" translate="yes" xml:space="preserve">
          <source>The value of the specified key.</source>
          <target state="translated">指定したキーの値。</target>
        </trans-unit>
        <trans-unit id="d9b16b03c29555767d6fa2f1e5ac09e258487dcc" translate="yes" xml:space="preserve">
          <source>The value of the vertical coordinate, y, as a floating point number. The default value is 0.</source>
          <target state="translated">垂直座標 y の値を浮動小数点数で指定します。デフォルト値は0です。</target>
        </trans-unit>
        <trans-unit id="382234da0cf947a6248e2e06a1f2ffa7c9eeffc2" translate="yes" xml:space="preserve">
          <source>The value of this property corresponds to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly/timing&quot;&gt;&lt;code&gt;AnimationEffectReadOnly.timing&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffectReadOnly/timing&quot;&gt;&lt;code&gt;KeyframeEffectReadOnly.timing&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect/timing&quot;&gt;&lt;code&gt;KeyframeEffect.timing&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このプロパティの値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly/timing&quot;&gt; &lt;code&gt;AnimationEffectReadOnly.timing&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffectReadOnly/timing&quot;&gt; &lt;code&gt;KeyframeEffectReadOnly.timing&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect/timing&quot;&gt; &lt;code&gt;KeyframeEffect.timing&lt;/code&gt; に&lt;/a&gt;対応します）。</target>
        </trans-unit>
        <trans-unit id="0405bdb56440711696bc5e9116c97222a4028e96" translate="yes" xml:space="preserve">
          <source>The value of this property corresponds to property of the same name in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly/timing&quot;&gt;&lt;code&gt;AnimationEffectReadOnly.timing&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffectReadOnly/timing&quot;&gt;&lt;code&gt;KeyframeEffectReadOnly.timing&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect/timing&quot;&gt;&lt;code&gt;KeyframeEffect.timing&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このプロパティの値は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly/timing&quot;&gt; &lt;code&gt;AnimationEffectReadOnly.timing&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffectReadOnly/timing&quot;&gt; &lt;code&gt;KeyframeEffectReadOnly.timing&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect/timing&quot;&gt; &lt;code&gt;KeyframeEffect.timing&lt;/code&gt; &lt;/a&gt;の同じ名前のプロパティに対応しています。</target>
        </trans-unit>
        <trans-unit id="21b25a9457b0c657cbf71ec44036f8ff08d21113" translate="yes" xml:space="preserve">
          <source>The value of this property corresponds to the one in &lt;a href=&quot;../effecttiming&quot;&gt;&lt;code&gt;EffectTiming&lt;/code&gt;&lt;/a&gt; (which is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly/timing&quot;&gt;&lt;code&gt;timing&lt;/code&gt;&lt;/a&gt; object for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly&quot;&gt;&lt;code&gt;AnimationEffectReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffectReadOnly&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このプロパティの値は、&lt;a href=&quot;../effecttiming&quot;&gt; &lt;code&gt;EffectTiming&lt;/code&gt; &lt;/a&gt;の値に対応します（これは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly&quot;&gt; &lt;code&gt;AnimationEffectReadOnly&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../keyframeeffect&quot;&gt; &lt;code&gt;KeyframeEffectReadOnly&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../keyframeeffect&quot;&gt; &lt;code&gt;KeyframeEffect&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly/timing&quot;&gt; &lt;code&gt;timing&lt;/code&gt; &lt;/a&gt;オブジェクトです）。</target>
        </trans-unit>
        <trans-unit id="5f0430dbde66ff6cf6079e557a56ad45148670df" translate="yes" xml:space="preserve">
          <source>The value of this property corresponds to the one in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectTimingReadOnly&quot;&gt;&lt;code&gt;AnimationEffectTimingReadOnly&lt;/code&gt;&lt;/a&gt; (which is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly/timing&quot;&gt;&lt;code&gt;timing&lt;/code&gt;&lt;/a&gt; object for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly&quot;&gt;&lt;code&gt;AnimationEffectReadOnly&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffectReadOnly&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../keyframeeffect&quot;&gt;&lt;code&gt;KeyframeEffect&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">このプロパティの値は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectTimingReadOnly&quot;&gt; &lt;code&gt;AnimationEffectTimingReadOnly&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly&quot;&gt; &lt;code&gt;AnimationEffectReadOnly&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../keyframeeffect&quot;&gt; &lt;code&gt;KeyframeEffectReadOnly&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../keyframeeffect&quot;&gt; &lt;code&gt;KeyframeEffect&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AnimationEffectReadOnly/timing&quot;&gt; &lt;code&gt;timing&lt;/code&gt; &lt;/a&gt;オブジェクト）の値に対応します。</target>
        </trans-unit>
        <trans-unit id="138b044d278ebce6791d41689c2e5299449b1800" translate="yes" xml:space="preserve">
          <source>The value of this property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; containing the full URL of a server to use during ICE negotiation.</source>
          <target state="translated">このプロパティの値は、ICEネゴシエーション中に使用するサーバーの完全なURLを含む&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="2f8162cf3e22dd1c35ad35b9c28726036fa84d68" translate="yes" xml:space="preserve">
          <source>The value of this property may be specified as a single URL or as an array of multiple URLs.</source>
          <target state="translated">このプロパティの値は、単一の URL または複数の URL の配列として指定することができます。</target>
        </trans-unit>
        <trans-unit id="1d88b0b24d8f852b8f59a0657ee994e8c9cfeb87" translate="yes" xml:space="preserve">
          <source>The value of this string is as follows:</source>
          <target state="translated">この文字列の値は以下のようになります。</target>
        </trans-unit>
        <trans-unit id="7fe412518b3a03890a243217cdcd87c2deb4138a" translate="yes" xml:space="preserve">
          <source>The value of version is zero or a negative number or not a number.</source>
          <target state="translated">バージョンの値は0か、負の数か、数字ではないかのどちらかです。</target>
        </trans-unit>
        <trans-unit id="84668a1f236c612a67d1b59234219bed9fbebfb4" translate="yes" xml:space="preserve">
          <source>The value parameter passed was not a valid key.</source>
          <target state="translated">渡された値パラメータは有効なキーではありませんでした。</target>
        </trans-unit>
        <trans-unit id="97ff11d9f3b3c01d19d6b17e43990501b1afc8a5" translate="yes" xml:space="preserve">
          <source>The value passed into the &lt;code&gt;count&lt;/code&gt; parameter was zero or a negative number.</source>
          <target state="translated">&lt;code&gt;count&lt;/code&gt; パラメータに渡された値がゼロまたは負の数でした。</target>
        </trans-unit>
        <trans-unit id="c4cb7bc285cd79fda9b3cf0ff2dd832e82436ffc" translate="yes" xml:space="preserve">
          <source>The value reflects that of the do-not-track header, i.e. values of {&quot;1&quot;, &quot;0&quot;, &quot;unspecified&quot; }. Note: Prior to Gecko 32, Gecko used the values { &quot;yes&quot;, &quot;no&quot;, &quot;unspecified&quot;} (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=887703&quot;&gt;bug 887703&lt;/a&gt;).</source>
          <target state="translated">値は、do-not-trackヘッダーの値、つまり{&quot;1&quot;、 &quot;0&quot;、 &quot;unspecified&quot;}の値を反映しています。注：Gecko 32より前の&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=887703&quot;&gt;バージョンでは&lt;/a&gt;、Geckoは値{&quot;yes&quot;、 &quot;no&quot;、 &quot; unspecified &quot;}を使用していました（バグ887703）。</target>
        </trans-unit>
        <trans-unit id="1bdbd91dd5ca1ea3a5f5b5b092b47d6d4a9f28e0" translate="yes" xml:space="preserve">
          <source>The value retrieved from the object store.</source>
          <target state="translated">オブジェクトストアから取得した値。</target>
        </trans-unit>
        <trans-unit id="a647efc911e05d6fd799ef612f58becc65b0f89f" translate="yes" xml:space="preserve">
          <source>The value returned by &lt;code&gt;returnValue&lt;/code&gt; is the opposite of the value returned by &lt;a href=&quot;defaultprevented&quot;&gt;&lt;code&gt;defaultPrevented&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返される値 &lt;code&gt;returnValue&lt;/code&gt; で返される値の逆です&lt;a href=&quot;defaultprevented&quot;&gt; &lt;code&gt;defaultPrevented&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4ac9d8e93539105a3b0c7aed86e434907ee9687f" translate="yes" xml:space="preserve">
          <source>The value returned by this property depends on the performance entry's &lt;a href=&quot;entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">このプロパティによって返される値は、パフォーマンスエントリの&lt;a href=&quot;entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;によって異なります。</target>
        </trans-unit>
        <trans-unit id="d81f222db879af651838bcc389938b523628b725" translate="yes" xml:space="preserve">
          <source>The value specified as &lt;code&gt;outputIndex&lt;/code&gt; or &lt;code&gt;inputIndex&lt;/code&gt; doesn't correspond to an existing input or output.</source>
          <target state="translated">&lt;code&gt;outputIndex&lt;/code&gt; または &lt;code&gt;inputIndex&lt;/code&gt; として指定された値は、既存の入力または出力に対応していません。</target>
        </trans-unit>
        <trans-unit id="a3ffb4cc141d2ffc909327acacfe878788d0b2c2" translate="yes" xml:space="preserve">
          <source>The value specified for &lt;a href=&quot;../rtcicecandidate/sdpmid&quot;&gt;&lt;code&gt;sdpMid&lt;/code&gt;&lt;/a&gt; is non-&lt;code&gt;null&lt;/code&gt; and doesn't match the media description ID of any media description included within the &lt;a href=&quot;remotedescription&quot;&gt;&lt;code&gt;remoteDescription&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rtcicecandidate/sdpmid&quot;&gt; &lt;code&gt;sdpMid&lt;/code&gt; に&lt;/a&gt;指定された値は &lt;code&gt;null&lt;/code&gt; 以外であり、&lt;a href=&quot;remotedescription&quot;&gt; &lt;code&gt;remoteDescription&lt;/code&gt; &lt;/a&gt;内に含まれるメディア説明のメディア説明IDと一致しません。</target>
        </trans-unit>
        <trans-unit id="1b5dbaafba182d39e738e7fe19ff3f5fbf907ed1" translate="yes" xml:space="preserve">
          <source>The value specified for &lt;code&gt;mimeType&lt;/code&gt; is an empty string rather than a valid MIME type.</source>
          <target state="translated">&lt;code&gt;mimeType&lt;/code&gt; に指定された値は、有効なMIMEタイプではなく空の文字列です。</target>
        </trans-unit>
        <trans-unit id="7bbaaa72829b8b5e7bc7c28feb3450607a181910" translate="yes" xml:space="preserve">
          <source>The value specified for &lt;code&gt;when&lt;/code&gt; is negative.</source>
          <target state="translated">&lt;code&gt;when&lt;/code&gt; に指定された値は負です。</target>
        </trans-unit>
        <trans-unit id="967ef5b8a97458f0ce29c933c4756d64578d5f89" translate="yes" xml:space="preserve">
          <source>The value the given property should have.</source>
          <target state="translated">与えられたプロパティが持つべき値。</target>
        </trans-unit>
        <trans-unit id="a516e1ceee6ce87a44dd29a94236c962f336951b" translate="yes" xml:space="preserve">
          <source>The value the parameter will start to transition towards at the given start time.</source>
          <target state="translated">指定された開始時刻にパラメータが遷移を開始する値。</target>
        </trans-unit>
        <trans-unit id="af119caceb3e95ed52ef907b9e0c67aba1c8eed9" translate="yes" xml:space="preserve">
          <source>The value to be stored in the record.</source>
          <target state="translated">レコードに格納する値。</target>
        </trans-unit>
        <trans-unit id="636283d24e4b7d797a2555d5c5c0091ff6b74558" translate="yes" xml:space="preserve">
          <source>The value to be stored.</source>
          <target state="translated">保存する値です。</target>
        </trans-unit>
        <trans-unit id="9c06718d1e0eef2c165aae300980208a0841e3da" translate="yes" xml:space="preserve">
          <source>The value to set as the body of the header.</source>
          <target state="translated">ヘッダの本文として設定する値。</target>
        </trans-unit>
        <trans-unit id="ab8ae4ffd1f56b5b324481dfedac7c5afa0016ce" translate="yes" xml:space="preserve">
          <source>The value to store into the index.</source>
          <target state="translated">インデックスに格納する値。</target>
        </trans-unit>
        <trans-unit id="bf32e2792bb48e1730d5ff258b8b7915d00bda8a" translate="yes" xml:space="preserve">
          <source>The value will be &lt;code&gt;null&lt;/code&gt; if the stream cannot be successfully written to (due to either being errored, or having an abort queued up), and zero if the stream is closed.</source>
          <target state="translated">ストリームに正常に書き込めなかった場合（エラーが発生したか、アボートがキューに入れられた場合）、値は &lt;code&gt;null&lt;/code&gt; になり、ストリームが閉じている場合はゼロになります。</target>
        </trans-unit>
        <trans-unit id="942c94f3fa1fedd0c44f443966db73a060dccae5" translate="yes" xml:space="preserve">
          <source>The values in the example table above have been rounded to two decimal places.</source>
          <target state="translated">上記の表の例の値は、小数点以下2桁に四捨五入されています。</target>
        </trans-unit>
        <trans-unit id="aa4533e4c532cec3a1d6decc14e7c0cbd4c70645" translate="yes" xml:space="preserve">
          <source>The values in this interface should not be used to compute view or projection matrices. In order to ensure the widest possible hardware compatibility use the matrices provided by &lt;a href=&quot;vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このインターフェイスの値は、ビューまたは射影行列の計算に使用しないでください。可能な限り幅広いハードウェア互換性を確保するために、&lt;a href=&quot;vrframedata&quot;&gt; &lt;code&gt;VRFrameData&lt;/code&gt; &lt;/a&gt;によって提供される行列を使用します。</target>
        </trans-unit>
        <trans-unit id="23f35b79fd5aaac460d678dca5788af7128a8c0a" translate="yes" xml:space="preserve">
          <source>The values listed are for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; in which the sample is presented above.</source>
          <target state="translated">リストされている値は、上記のサンプルが示されている&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;の値です。</target>
        </trans-unit>
        <trans-unit id="9bbaa6d95232d9d635293ce05cf3ddd7551945b2" translate="yes" xml:space="preserve">
          <source>The values listed are for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; in which the sample is presented.</source>
          <target state="translated">リストされている値は、サンプルが提示されている&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;の値です。</target>
        </trans-unit>
        <trans-unit id="981a7aefa2e8f7efe6c605dbb42a7309920906a5" translate="yes" xml:space="preserve">
          <source>The values returned by &lt;code&gt;getComputedStyle&lt;/code&gt; are known as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/resolved_value&quot;&gt;&lt;code&gt;resolved values&lt;/code&gt;&lt;/a&gt;. These are usually the same as the CSS 2.1 &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/computed_value&quot;&gt;&lt;code&gt;computed values&lt;/code&gt;&lt;/a&gt;, but for some older properties like &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt; or &lt;code&gt;padding&lt;/code&gt;, they are instead the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/used_value&quot;&gt;&lt;code&gt;used values&lt;/code&gt;&lt;/a&gt;. Originally, CSS 2.0 defined the computed values to be the &quot;ready to be used&quot; final values of properties after cascading and inheritance, but CSS 2.1 redefined computed values as pre-layout, and used values as post-layout. For CSS 2.0 properties, the &lt;code&gt;getComputedStyle&lt;/code&gt; function returns the old meaning of computed values, now called &lt;strong&gt;used values&lt;/strong&gt;. An example of difference between pre- and post-layout values includes the resolution of percentages that represent the width or the height of an element (also known as its layout), as those will be replaced by their pixel equivalent only in the used value case.</source>
          <target state="translated">&lt;code&gt;getComputedStyle&lt;/code&gt; によって返される値は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/resolved_value&quot;&gt; &lt;code&gt;resolved values&lt;/code&gt; &lt;/a&gt;呼ばれます。これらは通常、CSS 2.1で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/computed_value&quot;&gt; &lt;code&gt;computed values&lt;/code&gt; &lt;/a&gt;と同じですが、 &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;height&lt;/code&gt; 、 &lt;code&gt;padding&lt;/code&gt; などの一部の古いプロパティでは、代わりに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/used_value&quot;&gt; &lt;code&gt;used values&lt;/code&gt; &lt;/a&gt;です。当初、CSS 2.0は計算された値をカスケードおよび継承後のプロパティの「すぐに使用できる」最終値であると定義しましたが、CSS 2.1は計算された値を事前レイアウトとして再定義し、値を事後レイアウトとして使用しました。 CSS 2.0プロパティの場合、 &lt;code&gt;getComputedStyle&lt;/code&gt; 関数は計算された値の古い意味を返します。現在は&lt;strong&gt;使用されている値&lt;/strong&gt;と呼ば&lt;strong&gt;れています&lt;/strong&gt;。レイアウト前とレイアウト後の値の違いの例には、要素の幅または高さ（レイアウトとも呼ばれます）を表すパーセンテージの解像度が含まれます。 。</target>
        </trans-unit>
        <trans-unit id="7b6f3c4bd31589673588dd3334c2f969c530602a" translate="yes" xml:space="preserve">
          <source>The values set with &lt;a href=&quot;vertexattribpointer&quot;&gt;&lt;code&gt;vertexAttribPointer&lt;/code&gt;&lt;/a&gt; are context-global, i.e. they aren't part of the shader state (like generix vertex attribute indexes to shader variable bindings) and aren't part of the vertex array object state (like enabled vertex attribute arrays). The only way to change the values is by calling this function again.</source>
          <target state="translated">&lt;a href=&quot;vertexattribpointer&quot;&gt; &lt;code&gt;vertexAttribPointer&lt;/code&gt; で&lt;/a&gt;設定された値はコンテキストグローバルです。つまり、これらはシェーダー状態の一部ではなく（generix頂​​点属性インデックスからシェーダー変数バインディングへ）、頂点配列オブジェクトの状態（有効な頂点属性配列など）の一部ではありません。値を変更する唯一の方法は、この関数を再度呼び出すことです。</target>
        </trans-unit>
        <trans-unit id="72a94f65bb1cbe6e07b90497305fc92cb8d35b74" translate="yes" xml:space="preserve">
          <source>The values supported by &lt;code&gt;responseType&lt;/code&gt; are the following:</source>
          <target state="translated">&lt;code&gt;responseType&lt;/code&gt; でサポートされる値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="bea9b3b9d093ed3896bb7430843fa8f6b7fde568" translate="yes" xml:space="preserve">
          <source>The values that can be combined to form the bitmask are:</source>
          <target state="translated">ビットマスクを形成するために組み合わせることができる値は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="cad53f7f875ecf3125760cd3a749a527ed79b1f2" translate="yes" xml:space="preserve">
          <source>The variable &lt;code&gt;loremIpsum&lt;/code&gt; contains the text we'll use for the body of all of our articles. Obviously in the real world, you'd have some code to pull articles from a database or the like, but this does the job for our purposes. Every article uses the same text; you could of course change that easily enough.</source>
          <target state="translated">変数 &lt;code&gt;loremIpsum&lt;/code&gt; には、すべての記事の本文に使用するテキストが含まれています。明らかに現実の世界では、データベースなどから記事をプルするコードがいくつかありますが、これは私たちの目的のために機能します。すべての記事で同じテキストを使用しています。もちろん、簡単に変更できます。</target>
        </trans-unit>
        <trans-unit id="5f6a5b2150b450d9e1ad2c4043ea43191ab4f86c" translate="yes" xml:space="preserve">
          <source>The velocity relative to the listener is used to control the pitch change needed to conform with the &lt;a href=&quot;http://en.wikipedia.org/wiki/Doppler_effect&quot;&gt;Doppler effect&lt;/a&gt; due to the relative speed.</source>
          <target state="translated">リスナーに対する相対速度は、相対速度による&lt;a href=&quot;http://en.wikipedia.org/wiki/Doppler_effect&quot;&gt;ドップラー効果&lt;/a&gt;に適合するために必要なピッチの変更を制御するために使用されます。</target>
        </trans-unit>
        <trans-unit id="314e4aa2c407881e5008650230cc8c712510dc0e" translate="yes" xml:space="preserve">
          <source>The version of the connected database. Has the null value when the database is first created.</source>
          <target state="translated">接続されているデータベースのバージョン。データベースが最初に作成されたときのヌル値を持ちます。</target>
        </trans-unit>
        <trans-unit id="fd120f67ac4e3351ed79959adb23e04cecd2301f" translate="yes" xml:space="preserve">
          <source>The version to store in the database.</source>
          <target state="translated">データベースに保存するバージョン。</target>
        </trans-unit>
        <trans-unit id="08116e45c37d7ab736e7989a33c24ca8bd2aef5f" translate="yes" xml:space="preserve">
          <source>The vertex shader</source>
          <target state="translated">頂点シェーダ</target>
        </trans-unit>
        <trans-unit id="cc35063a6d7c301b5637019402552d1acc860bd0" translate="yes" xml:space="preserve">
          <source>The vertex shader can, as needed, also do things like determine the coordinates within the face's texture of the &lt;a href=&quot;https://en.wikipedia.org/wiki/texel_(graphics)&quot;&gt;texel&lt;/a&gt; to apply to the vertex, apply the normals to determine the lighting factor to apply to the vertex, and so on. This information can then be stored in &lt;a href=&quot;../data#Varyings&quot;&gt;varyings&lt;/a&gt; or &lt;a href=&quot;../data#Attributes&quot;&gt;attributes&lt;/a&gt; as appropriate to be shared with the fragment shader.</source>
          <target state="translated">頂点シェーダーは、必要に応じて、頂点に適用する&lt;a href=&quot;https://en.wikipedia.org/wiki/texel_(graphics)&quot;&gt;テクセルの&lt;/a&gt;顔のテクスチャ内の座標を決定したり、法線を適用して頂点に適用する照明係数を決定したりすることもできます。この情報は、フラグメントシェーダーと共有するために、必要に応じて&lt;a href=&quot;../data#Varyings&quot;&gt;可変&lt;/a&gt;または&lt;a href=&quot;../data#Attributes&quot;&gt;属性に&lt;/a&gt;格納できます。</target>
        </trans-unit>
        <trans-unit id="ba6602a58a6efc2f4b614dbbea3e19cd42a17127" translate="yes" xml:space="preserve">
          <source>The vertex shader code may include a number of attributes, but we don't need to specify the values for each attribute. Instead, we can supply a default value that will be identical for all vertices. We can call &lt;code&gt;&lt;a href=&quot;disablevertexattribarray&quot;&gt;&lt;code&gt;gl.disableVertexAttribArray()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; to tell WebGL to use the default value, while calling &lt;a href=&quot;enablevertexattribarray&quot;&gt;&lt;code&gt;gl.enableVertexAttribArray()&lt;/code&gt;&lt;/a&gt; will read the values from the array buffer as specified with &lt;code&gt;gl.vertexAttribPointer()&lt;/code&gt;.</source>
          <target state="translated">頂点シェーダーコードにはいくつかの属性を含めることができますが、各属性の値を指定する必要はありません。代わりに、すべての頂点で同じになるデフォルト値を指定できます。私たちは、呼び出すことができ &lt;code&gt;&lt;a href=&quot;disablevertexattribarray&quot;&gt;&lt;code&gt;gl.disableVertexAttribArray()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 呼び出し中に、デフォルト値を使用するようにWebGLのを伝えるために&lt;a href=&quot;enablevertexattribarray&quot;&gt; &lt;code&gt;gl.enableVertexAttribArray()&lt;/code&gt; &lt;/a&gt;で指定された配列バッファから値を読み取ります &lt;code&gt;gl.vertexAttribPointer()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="48d16f4e23ff7c00d1eea9fbe68df6cd80aff2af" translate="yes" xml:space="preserve">
          <source>The vertex shader must perform the needed transforms on the vertex's position, make any other adjustments or calculations it needs to make on a per-vertex basis, then return the transformed vertex by saving it in a special variable provided by GLSL, called &lt;code&gt;gl_Position&lt;/code&gt;.</source>
          <target state="translated">頂点シェーダーは、頂点の位置で必要な変換を実行し、頂点ごとに必要なその他の調整または計算を行ってから、GLSLによって提供される &lt;code&gt;gl_Position&lt;/code&gt; と呼ばれる特別な変数に保存することにより、変換された頂点を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="845898c14814b4a346972e2991623e406325cde7" translate="yes" xml:space="preserve">
          <source>The vertical coordinate of a point, relative to the top edge of the current viewport.</source>
          <target state="translated">現在のビューポートの上端を基準とした点の垂直座標。</target>
        </trans-unit>
        <trans-unit id="999ed039c211b52858b1890bf8d90d9c21c07e1d" translate="yes" xml:space="preserve">
          <source>The vertical coordinate of a point.</source>
          <target state="translated">点の垂直座標。</target>
        </trans-unit>
        <trans-unit id="a5c848583e0055fa9493058d5073d5d360b0130e" translate="yes" xml:space="preserve">
          <source>The very fact that RTCP is defined in the same RFC as RTP is a clue as to just how closely-interrelated these two protocols are.</source>
          <target state="translated">RTCPがRTPと同じRFCで定義されているという事実は、この2つのプロトコルがいかに密接に関連しているかを知る手がかりとなります。</target>
        </trans-unit>
        <trans-unit id="c7d09b9852e42555432a32419233a56d1e7e71a8" translate="yes" xml:space="preserve">
          <source>The very same list but as a space-separated tokens in a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;rel&quot;&gt;&lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">まったく同じリストですが、&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;内のスペースで区切られたトークンとして：&lt;a href=&quot;rel&quot;&gt; &lt;code&gt;HTMLAnchorElement.rel&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1033ae960c8cb5b61ee150aef1c3186847284a58" translate="yes" xml:space="preserve">
          <source>The very same list but as a space-separated tokens in a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;rel&quot;&gt;&lt;code&gt;HTMLAreaElement.rel&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">まったく同じリストですが、&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;内のスペースで区切られたトークンとして：&lt;a href=&quot;rel&quot;&gt; &lt;code&gt;HTMLAreaElement.rel&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6874c9a26e41ef5b85e68f58fd8f1d0aa5e4f77" translate="yes" xml:space="preserve">
          <source>The very same list but as a space-separated tokens in a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;: &lt;a href=&quot;rel&quot;&gt;&lt;code&gt;HTMLLinkElement.rel&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">まったく同じリストですが、&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;内のスペースで区切られたトークンとして：&lt;a href=&quot;rel&quot;&gt; &lt;code&gt;HTMLLinkElement.rel&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="51c20ea3ec9ff7f15f946bcdaa0ec9bfadc95fc9" translate="yes" xml:space="preserve">
          <source>The very same list but as tokens: &lt;a href=&quot;rellist&quot;&gt;&lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">非常に同じリストですが、トークンとして：&lt;a href=&quot;rellist&quot;&gt; &lt;code&gt;HTMLAnchorElement.relList&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ffdabfa301f501dada06780202d4538cdcf8786" translate="yes" xml:space="preserve">
          <source>The very same list but as tokens: &lt;a href=&quot;rellist&quot;&gt;&lt;code&gt;HTMLAreaElement.relList&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">非常に同じリストですが、トークンとして：&lt;a href=&quot;rellist&quot;&gt; &lt;code&gt;HTMLAreaElement.relList&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8e738a3f7559f2529ecb8272c7cb6e7e5aac8c04" translate="yes" xml:space="preserve">
          <source>The very same list but as tokens: &lt;a href=&quot;rellist&quot;&gt;&lt;code&gt;HTMLLinkElement.relList&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">まったく同じリストですが、トークンとして：&lt;a href=&quot;rellist&quot;&gt; &lt;code&gt;HTMLLinkElement.relList&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d430c5df00c038b0cb21652a2094354cc04c3c0d" translate="yes" xml:space="preserve">
          <source>The video keyboard</source>
          <target state="translated">ビデオキーボード</target>
        </trans-unit>
        <trans-unit id="71941c45ba704e48f1359adcd65e0efee6c8e185" translate="yes" xml:space="preserve">
          <source>The video source is facing away from the user, thereby viewing their environment. This is the back camera on a smartphone.</source>
          <target state="translated">映像ソースがユーザーとは反対側を向いているため、ユーザーの環境を見ることができます。これがスマートフォンのバックカメラです。</target>
        </trans-unit>
        <trans-unit id="4e482bc938f06086499dfbdb0e6ed6f3c845d9a4" translate="yes" xml:space="preserve">
          <source>The video source is facing toward the user but to their left, such as a camera aimed toward the user but over their left shoulder.</source>
          <target state="translated">映像ソースはユーザーの方を向いているが、左肩越しにカメラを向けるなど、ユーザーの左を向いている。</target>
        </trans-unit>
        <trans-unit id="52da644171f2a5881601bf1b2671a7f7aeee95b5" translate="yes" xml:space="preserve">
          <source>The video source is facing toward the user but to their right, such as a camera aimed toward the user but over their right shoulder.</source>
          <target state="translated">映像ソースはユーザーの方を向いているが、右肩越しのカメラなど、ユーザーの右を向いている。</target>
        </trans-unit>
        <trans-unit id="351262500ecadb5155b60f7bc08b1adb7f27f1cd" translate="yes" xml:space="preserve">
          <source>The video source is facing toward the user; this includes, for example, the front-facing camera on a smartphone.</source>
          <target state="translated">映像ソースはユーザーの方を向いていますが、これには例えばスマートフォンの正面を向いたカメラなどが含まれます。</target>
        </trans-unit>
        <trans-unit id="9512b8a9a954a5005274bc88570b1502892f53eb" translate="yes" xml:space="preserve">
          <source>The view attribute identifies the AbstractView [DOM2VIEWS] from which the event was generated.</source>
          <target state="translated">view属性は、イベントが生成されたAbstractView [DOM2VIEWS]を識別します。</target>
        </trans-unit>
        <trans-unit id="e1750f44b5857163a52e2a6fd6334881e823b0cb" translate="yes" xml:space="preserve">
          <source>The view to be read into.</source>
          <target state="translated">読み込まれる景色。</target>
        </trans-unit>
        <trans-unit id="aae4897138b692ce8b049dbaa5305cc0b479a4e6" translate="yes" xml:space="preserve">
          <source>The viewport width and height are clamped to a range that is implementation dependent. To get this range, you can use the &lt;code&gt;MAX_VIEWPORT_DIMS&lt;/code&gt; constant, which returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array&quot;&gt;&lt;code&gt;Int32Array&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ビューポートの幅と高さは、実装に依存する範囲に固定されます。この範囲を取得するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array&quot;&gt; &lt;code&gt;Int32Array&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;MAX_VIEWPORT_DIMS&lt;/code&gt; 定数を使用できます。</target>
        </trans-unit>
        <trans-unit id="edfb3f0eb9ea0ec925b22c6e476db4a7819c8134" translate="yes" xml:space="preserve">
          <source>The visual viewport API adds two events, &lt;code&gt;onresize&lt;/code&gt; and &lt;code&gt;onscroll&lt;/code&gt;, that fire whenever the visual viewport changes. These events allow you to position elements relative to the visual viewport that would normally be anchored to the layout viewport.</source>
          <target state="translated">ビジュアルビューポートAPIは、ビジュアルビューポートが変更されるたびに発生する2つのイベント &lt;code&gt;onresize&lt;/code&gt; および &lt;code&gt;onscroll&lt;/code&gt; を追加します。これらのイベントにより、通常はレイアウトビューポートに固定されるビジュアルビューポートを基準にして要素を配置できます。</target>
        </trans-unit>
        <trans-unit id="5c5258a7cbb02685a908273aabf441cab195ee57" translate="yes" xml:space="preserve">
          <source>The voice set in &lt;a href=&quot;../speechsynthesisutterance/voice&quot;&gt;&lt;code&gt;SpeechSynthesisUtterance.voice&lt;/code&gt;&lt;/a&gt; was not available.</source>
          <target state="translated">&lt;a href=&quot;../speechsynthesisutterance/voice&quot;&gt; &lt;code&gt;SpeechSynthesisUtterance.voice&lt;/code&gt; &lt;/a&gt;に設定された音声は利用できませんでした。</target>
        </trans-unit>
        <trans-unit id="b0edc1d3eb213b0ec6c08dd751c2895490f20805" translate="yes" xml:space="preserve">
          <source>The volume control</source>
          <target state="translated">ボリュームコントロール</target>
        </trans-unit>
        <trans-unit id="5db221252270f2da4b504889c3b261849f6a391f" translate="yes" xml:space="preserve">
          <source>The volume slider in the settings bar provides a simple interface to change the gain value on the master gain node, thereby changing the loudness of all playing notes. The &lt;code&gt;changeVolume()&lt;/code&gt; method is the handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; event on the slider.</source>
          <target state="translated">設定バーのボリュームスライダーは、マスターゲインノードのゲイン値を変更するシンプルなインターフェイスを提供し、それによってすべての演奏ノートの音量を変更します。 &lt;code&gt;changeVolume()&lt;/code&gt; メソッドは、のためのハンドラである &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; スライダー上のイベント。</target>
        </trans-unit>
        <trans-unit id="e54f1e5a2e95ff9074ec170ca3c589ac1700d762" translate="yes" xml:space="preserve">
          <source>The waveform picker</source>
          <target state="translated">波形ピッカー</target>
        </trans-unit>
        <trans-unit id="6541162334d281474545b070a2f79392f6be3bd9" translate="yes" xml:space="preserve">
          <source>The web page creates a &lt;code&gt;div&lt;/code&gt; element with the ID &lt;code&gt;result&lt;/code&gt; , which gets used to display the result, then spawns the worker. After spawning the worker, the &lt;code&gt;onmessage&lt;/code&gt; handler is configured to display the results by setting the contents of the &lt;code&gt;div&lt;/code&gt; element, and the &lt;code&gt;onerror&lt;/code&gt; handler is set to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Debugging_JavaScript#dump.28.29&quot;&gt;dump&lt;/a&gt; the error message.</source>
          <target state="translated">Webページは、 &lt;code&gt;result&lt;/code&gt; を表示するために使用されるID resultを持つ &lt;code&gt;div&lt;/code&gt; 要素を作成し、ワーカーを生成します。ワーカーを生成した後、 &lt;code&gt;onmessage&lt;/code&gt; ハンドラーは &lt;code&gt;div&lt;/code&gt; 要素のコンテンツを設定して結果を表示するように構成され、 &lt;code&gt;onerror&lt;/code&gt; ハンドラーはエラーメッセージを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Debugging_JavaScript#dump.28.29&quot;&gt;ダンプ&lt;/a&gt;するように設定されます。</target>
        </trans-unit>
        <trans-unit id="453151a8b6c3475268acbc0d0417aa88a418aa49" translate="yes" xml:space="preserve">
          <source>The web server hosting the chat servic</source>
          <target state="translated">チャットサービスをホストしているウェブサーバー</target>
        </trans-unit>
        <trans-unit id="77c935d4fc21caba386035c18bad5c57fd93ec7c" translate="yes" xml:space="preserve">
          <source>The webgl spec, based on the OpenGL ES 2.0/3.0 specs points out that the minimum and maximum width for a line is implementation defined. The maximum minimum width is allowed to be 1.0. The minimum maximum width is also allowed to be 1.0. Because of these implementation defined limits it is not recommended to use line widths other than 1.0 since there is no guarantee any user's browser will display any other width.</source>
          <target state="translated">OpenGL ES 2.0/3.0仕様に基づいたwebgl仕様では、線の最小幅と最大幅は実装で定義されていると指摘しています。最大最小幅は1.0であることが許されています。また、最小最大幅も1.0であることが許されています。これらの実装で定義された制限のため、1.0以外の線幅を使用することは推奨されません。</target>
        </trans-unit>
        <trans-unit id="282f25aab6e8cfd557f9443ddfaae267393ae32d" translate="yes" xml:space="preserve">
          <source>The welcome panel</source>
          <target state="translated">ウェルカムパネル</target>
        </trans-unit>
        <trans-unit id="e0837ea8c119de749a7bccc30b20115a265e995b" translate="yes" xml:space="preserve">
          <source>The whole thing is wrapped in a test that checks whether &lt;code&gt;getUserMedia&lt;/code&gt; is supported before running anything else. Next, we call &lt;code&gt;getUserMedia()&lt;/code&gt; and inside it define:</source>
          <target state="translated">全体は、他に何かを実行する前に &lt;code&gt;getUserMedia&lt;/code&gt; がサポートされているかどうかをチェックするテストにラップされています。次に、 &lt;code&gt;getUserMedia()&lt;/code&gt; を呼び出して、次のように定義します。</target>
        </trans-unit>
        <trans-unit id="f0f3e617d01525e0b2452ec35ab90eaa0ca339a8" translate="yes" xml:space="preserve">
          <source>The width (magnitude on the X axis), in CSS pixels, of the contact geometry of the pointer.</source>
          <target state="translated">ポインタの接触ジオメトリの幅(X軸上の大きさ)をCSSピクセルで指定します。</target>
        </trans-unit>
        <trans-unit id="f9ec5051bad662420776d9108dcc3d0b286bacc8" translate="yes" xml:space="preserve">
          <source>The width of the &lt;code&gt;DOMRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRect&lt;/code&gt; の幅。</target>
        </trans-unit>
        <trans-unit id="50ddb1f1af0ed9fe4f4f84f7e434bca734f03e76" translate="yes" xml:space="preserve">
          <source>The width of the &lt;code&gt;DOMRectReadOnly&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRectReadOnly&lt;/code&gt; の幅。</target>
        </trans-unit>
        <trans-unit id="a0072b1b0819abe7b66f2c566e8f179f93ce2ced" translate="yes" xml:space="preserve">
          <source>The width of the bounds.</source>
          <target state="translated">境界線の幅。</target>
        </trans-unit>
        <trans-unit id="e38420beea5433ea5f9e06ee8edf62ef0e494fef" translate="yes" xml:space="preserve">
          <source>The width of the event's contact area (in CSS pixels).</source>
          <target state="translated">イベントの接触領域の幅(CSSピクセル)。</target>
        </trans-unit>
        <trans-unit id="0cc2c2a477dab42fcbb08d00c7dfb1b1c119eb32" translate="yes" xml:space="preserve">
          <source>The width of the image (i.e., the value for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-width&quot;&gt;width&lt;/a&gt;&lt;/code&gt; attribute).</source>
          <target state="translated">画像の幅（つまり、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-width&quot;&gt;width&lt;/a&gt;&lt;/code&gt; 属性の値）。</target>
        </trans-unit>
        <trans-unit id="9a04c661fdfc55e4501ba0565e630d50894693e2" translate="yes" xml:space="preserve">
          <source>The width of the image in pixels.</source>
          <target state="translated">画像の幅をピクセル単位で指定します。</target>
        </trans-unit>
        <trans-unit id="924a717cb84a878ef6da280675a5b2093b42b039" translate="yes" xml:space="preserve">
          <source>The width of the left border of an element in pixels. It includes the width of the vertical scrollbar if the text direction of the element is right&amp;ndash;to&amp;ndash;left and if there is an overflow causing a left vertical scrollbar to be rendered. &lt;code&gt;clientLeft&lt;/code&gt; does not include the left margin or the left padding. &lt;code&gt;clientLeft&lt;/code&gt; is read-only.</source>
          <target state="translated">要素の左ボーダーの幅（ピクセル単位）。要素のテキスト方向が右から左で、オーバーフローが発生して左の垂直スクロールバーがレンダリングされる場合は、垂直スクロールバーの幅が含まれます。 &lt;code&gt;clientLeft&lt;/code&gt; には、左マージンまたは左パディングは含まれません。 &lt;code&gt;clientLeft&lt;/code&gt; は読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="442e7fb13b5a532d6aba794a2191dbb561e3fc0c" translate="yes" xml:space="preserve">
          <source>The width of the offscreen canvas.</source>
          <target state="translated">画面外のキャンバスの幅。</target>
        </trans-unit>
        <trans-unit id="945232011b9a42eb5cb9da76e190668fb406c6fe" translate="yes" xml:space="preserve">
          <source>The width of the rectangle from which the &lt;code&gt;ImageBitmap&lt;/code&gt; will be extracted. This value can be negative.</source>
          <target state="translated">&lt;code&gt;ImageBitmap&lt;/code&gt; が抽出される長方形の幅。この値は負になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="1e89d13c4fe264f91ae6b7479b3bf3373be29c18" translate="yes" xml:space="preserve">
          <source>The width of the rectangle from which the &lt;code&gt;ImageData&lt;/code&gt; will be extracted. Positive values are to the right, and negative to the left.</source>
          <target state="translated">&lt;code&gt;ImageData&lt;/code&gt; が抽出される長方形の幅。正の値は右に、負の値は左にあります。</target>
        </trans-unit>
        <trans-unit id="8937b615820e3bef9d96f28db08396d90c59117f" translate="yes" xml:space="preserve">
          <source>The width of the rule on the page.</source>
          <target state="translated">ページ上のルールの幅。</target>
        </trans-unit>
        <trans-unit id="960ccc9a8efbe4b845fe9f6e604e180f4b4be985" translate="yes" xml:space="preserve">
          <source>The width of the sub-rectangle of the source &lt;code&gt;image&lt;/code&gt; to draw into the destination context. If not specified, the entire rectangle from the coordinates specified by &lt;code&gt;sx&lt;/code&gt; and &lt;code&gt;sy&lt;/code&gt; to the bottom-right corner of the image is used.</source>
          <target state="translated">宛先コンテキストに描画するソース &lt;code&gt;image&lt;/code&gt; のサブ長方形の幅。指定しない場合、 &lt;code&gt;sx&lt;/code&gt; と &lt;code&gt;sy&lt;/code&gt; で指定された座標から画像の右下隅までの長方形全体が使用されます。</target>
        </trans-unit>
        <trans-unit id="f90bf67277f327527ea0e447eca10aa2001bbf3c" translate="yes" xml:space="preserve">
          <source>The width of the top border of an element in pixels. It is a read-only, integer property of element.</source>
          <target state="translated">要素の上端の境界線の幅をピクセル単位で指定します。要素の読み取り専用の整数値プロパティです。</target>
        </trans-unit>
        <trans-unit id="a78481dbb7decdb1f4befb0086e3e926c9f2093c" translate="yes" xml:space="preserve">
          <source>The width to draw the &lt;code&gt;image&lt;/code&gt; in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in width when drawn.</source>
          <target state="translated">宛先キャンバスに &lt;code&gt;image&lt;/code&gt; を描画する幅。これにより、描画されたイメージのスケーリングが可能になります。指定しない場合、描画時に画像の幅が調整されません。</target>
        </trans-unit>
        <trans-unit id="05604a76edcf5f123852053144c676dfe88b511c" translate="yes" xml:space="preserve">
          <source>The width to give the new &lt;code&gt;ImageData&lt;/code&gt; object. A negative value flips the rectangle around the vertical axis.</source>
          <target state="translated">新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトに与える幅。負の値は、垂直軸を中心に長方形を反転します。</target>
        </trans-unit>
        <trans-unit id="b12ade8a271a121ba8f96c1d087912eeea1bb6ea" translate="yes" xml:space="preserve">
          <source>The window method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/sizeToContent&quot;&gt;sizeToContent()&lt;/a&gt; is also disabled if the user unchecks the preference &lt;code&gt;Move or resize existing windows&lt;/code&gt; checkbox. Moving and resizing a window remotely on the user's screen via script will very often annoy the users, will disorient the user, and will be wrong at best. The web author expects to have full control of (and can decide about) every position and size aspects of the users' browser window ... which is simply not true.</source>
          <target state="translated">ウィンドウメソッド&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window/sizeToContent&quot;&gt;sizeToContent（）&lt;/a&gt;は、ユーザーが設定の[ &lt;code&gt;Move or resize existing windows&lt;/code&gt; チェックボックスをオフにした場合も無効になります。スクリプトを使用してユーザーの画面上でウィンドウをリモートで移動したりサイズ変更したりすると、ユーザーに迷惑をかけたり、ユーザーの方向性を乱したり、せいぜい間違ったりします。Web作成者は、ユーザーのブラウザーウィンドウのすべての位置とサイズの側面を完全に制御できる（そして決定できる）ことを期待しています...これは単に正しくありません。</target>
        </trans-unit>
        <trans-unit id="17b6c8c897ffdecfd320d625d911a3134d42ca49" translate="yes" xml:space="preserve">
          <source>The window you create must respect the Same Origin Policy. If the window you open is not in the same orgin as the current window, you will not be able to resize, or access any information on, that window/tab.</source>
          <target state="translated">作成したウィンドウは、同一オリジンポリシーを尊重しなければなりません。開いたウィンドウが現在のウィンドウと同じ場所にない場合、そのウィンドウ/タブのサイズを変更したり、そのウィンドウ/タブの情報にアクセスしたりすることはできません。</target>
        </trans-unit>
        <trans-unit id="efb363b832b0c1311b95ca8fe2e2b10276f30b55" translate="yes" xml:space="preserve">
          <source>The window.blur() method is the programmatic equivalent of the user shifting focus away from the current window.</source>
          <target state="translated">window.blur()メソッドは、ユーザが現在のウィンドウからフォーカスを遠ざけることとプログラム上で等価なものです。</target>
        </trans-unit>
        <trans-unit id="d6cd62812c4618cba5b1d318a7bf5fc183ea1a1c" translate="yes" xml:space="preserve">
          <source>The words or patterns of words that we want the recognition service to recognize.</source>
          <target state="translated">認識サービスに認識してもらいたい言葉やパターン。</target>
        </trans-unit>
        <trans-unit id="53cfbb58cb0931e10a7de6369e0e1781bf7355d1" translate="yes" xml:space="preserve">
          <source>The worker context is represented by a &lt;a href=&quot;../dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; object in the case of dedicated workers (standard workers that are utilized by a single script; shared workers use &lt;a href=&quot;../sharedworkerglobalscope&quot;&gt;&lt;code&gt;SharedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;). A dedicated worker is only accessible from the script that first spawned it, whereas shared workers can be accessed from multiple scripts.</source>
          <target state="translated">専用ワーカー（単一のスクリプトで使用される標準ワーカー、共有ワーカーは&lt;a href=&quot;../sharedworkerglobalscope&quot;&gt; &lt;code&gt;SharedWorkerGlobalScope&lt;/code&gt; を&lt;/a&gt;使用）の場合、ワーカーコンテキストは&lt;a href=&quot;../dedicatedworkerglobalscope&quot;&gt; &lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;オブジェクトで表されます。専用ワーカーには、最初に生成されたスクリプトからのみアクセスできますが、共有ワーカーには複数のスクリプトからアクセスできます。</target>
        </trans-unit>
        <trans-unit id="2c58986abc431033dabd2188d6c00c6e6180c967" translate="yes" xml:space="preserve">
          <source>The worker sets the property &lt;code&gt;onmessage&lt;/code&gt; to a function which will receive messages sent when the worker object's &lt;code&gt;postMessage()&lt;/code&gt; is called (note that this differs from defining a global &lt;em&gt;variable&lt;/em&gt; of that name, or defining a &lt;em&gt;function&lt;/em&gt; with that name. &lt;code&gt;var onmessage&lt;/code&gt; and &lt;code&gt;function onmessage&lt;/code&gt; will define global properties with those names, but they will not register the function to receive messages sent by the web page that created the worker). This starts the recursion, spawning new copies of itself to handle each iteration of the calculation.</source>
          <target state="translated">ワーカーは、 &lt;code&gt;onmessage&lt;/code&gt; プロパティを、ワーカーオブジェクトの &lt;code&gt;postMessage()&lt;/code&gt; が呼び出されたときに送信されるメッセージを受信する関数に設定します（これは、その名前のグローバル&lt;em&gt;変数&lt;/em&gt;の定義や、その名前の&lt;em&gt;関数の&lt;/em&gt;定義とは異なり&lt;em&gt;ます&lt;/em&gt; &lt;code&gt;var onmessage&lt;/code&gt; および &lt;code&gt;function onmessage&lt;/code&gt; これらの名前でグローバルプロパティを定義しますが、ワーカーを作成したWebページによって送信されたメッセージを受信する関数を登録しません）。これは再帰を開始し、計算の各反復を処理するために自身の新しいコピーを生成します。</target>
        </trans-unit>
        <trans-unit id="aaa72b71328af9d5bc04a2f7a2bf28988c8812cc" translate="yes" xml:space="preserve">
          <source>The worker thread is killed immediately without an opportunity to complete its operations or clean up after itself.</source>
          <target state="translated">ワーカースレッドは、その操作を完了させたり、後始末をしたりする機会を与えられることなく、即座に終了します。</target>
        </trans-unit>
        <trans-unit id="36d7debc01201c385d7b5b156e29c1e1ea8c599c" translate="yes" xml:space="preserve">
          <source>The worker's code is loaded from the file &lt;code&gt;&quot;worker.js&quot;&lt;/code&gt;. This code assumes that there's an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element represented by &lt;code&gt;first&lt;/code&gt;; an event handler for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Change&quot;&gt;&lt;code&gt;change&lt;/code&gt;&lt;/a&gt; event is established so that when the user changes the value of &lt;code&gt;first&lt;/code&gt;, a message is posted to the worker to let it know.</source>
          <target state="translated">ワーカーのコードは &lt;code&gt;&quot;worker.js&quot;&lt;/code&gt; ファイルから読み込まれます。このコードは、 &lt;code&gt;first&lt;/code&gt; で表される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素があることを前提としています。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Change&quot;&gt; &lt;code&gt;change&lt;/code&gt; &lt;/a&gt;イベントのイベントハンドラーが確立されているため、ユーザーが &lt;code&gt;first&lt;/code&gt; の値を変更すると、ワーカーにメッセージが通知されて通知されます。</target>
        </trans-unit>
        <trans-unit id="eeedd87293ce7496556af313b325153d6b47ee8d" translate="yes" xml:space="preserve">
          <source>The wrapper establishes a CSS grid with two columns and two rows. The first column (sized automatically based on its content) is used for the sidebar and the second column (which will be used for body content) is sized to be at least the width of the contents of the column and at most all remaining available space.</source>
          <target state="translated">ラッパーは、2つのカラムと2つの行からなるCSSグリッドを確立します。最初のカラム(その内容に基づいて自動的にサイズ調整されます)はサイドバーに使われ、2番目のカラム(ボディ・コンテンツに使われます)は、少なくともカラムの内容の幅と、残りの利用可能なスペースの最大値になるようにサイズ調整されています。</target>
        </trans-unit>
        <trans-unit id="42fe6ec365bb041b380312f61157044f10a4d867" translate="yes" xml:space="preserve">
          <source>The wrapper's width is fixed at 700px so that it will fit in the available space when presented inline on MDN below.</source>
          <target state="translated">ラッパーの幅は700pxに固定されており、 MDN上でインライン表示した際に空いているスペースに収まるようになっています。</target>
        </trans-unit>
        <trans-unit id="6d911913a6926f08758745fbb1c781a6b32e6e24" translate="yes" xml:space="preserve">
          <source>The writer&amp;rsquo;s lock is released.</source>
          <target state="translated">ライターのロックが解除されます。</target>
        </trans-unit>
        <trans-unit id="9cdf522270fb8fcf53df45448282e197ca022a9b" translate="yes" xml:space="preserve">
          <source>The x coordinate of the &lt;code&gt;DOMPoint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMPoint&lt;/code&gt; のx座標。</target>
        </trans-unit>
        <trans-unit id="399695d426e21f1eae1b85eceea92c9deb812609" translate="yes" xml:space="preserve">
          <source>The x coordinate of the &lt;code&gt;DOMRect&lt;/code&gt;'s origin.</source>
          <target state="translated">&lt;code&gt;DOMRect&lt;/code&gt; の原点のx座標。</target>
        </trans-unit>
        <trans-unit id="0980a802f56661940381c8be1c865476926f21cc" translate="yes" xml:space="preserve">
          <source>The x coordinate of the reference point of the rectangle from which the &lt;code&gt;ImageBitmap&lt;/code&gt; will be extracted.</source>
          <target state="translated">&lt;code&gt;ImageBitmap&lt;/code&gt; が抽出される長方形の参照点のx座標。</target>
        </trans-unit>
        <trans-unit id="120c748b85282988780b2610b3af2b3cca0faab8" translate="yes" xml:space="preserve">
          <source>The x position of the listener in 3D space.</source>
          <target state="translated">3D 空間におけるリスナーの x 位置。</target>
        </trans-unit>
        <trans-unit id="fdf6f984d09af8ac7a16fc06d73f65358913960b" translate="yes" xml:space="preserve">
          <source>The x position of the panner in 3D space.</source>
          <target state="translated">3D空間におけるパンナのX位置。</target>
        </trans-unit>
        <trans-unit id="f9c613339a0ca1e953f5dbd33e064372ff25f06b" translate="yes" xml:space="preserve">
          <source>The x value of the front vector of the listener.</source>
          <target state="translated">リスナーのフロントベクトルのx値。</target>
        </trans-unit>
        <trans-unit id="d7d819a41ca31213639d9dc9e498b59e0a94f599" translate="yes" xml:space="preserve">
          <source>The x value of the panner's direction vector in 3D space.</source>
          <target state="translated">3次元空間におけるパンナの方向ベクトルのx値。</target>
        </trans-unit>
        <trans-unit id="c06d1ea172516eaa935104f9911153180859e151" translate="yes" xml:space="preserve">
          <source>The x value of the panner's velocity vector.</source>
          <target state="translated">パンナの速度ベクトルのx値。</target>
        </trans-unit>
        <trans-unit id="82df182d02a30cc8d5123e133893c86606c76b69" translate="yes" xml:space="preserve">
          <source>The x value of the up vector of the listener.</source>
          <target state="translated">リスナーのアップベクトルのx値。</target>
        </trans-unit>
        <trans-unit id="a3cea14d18c729d3dce661a1020127fb1ce8d529" translate="yes" xml:space="preserve">
          <source>The x-axis (horizontal) coordinate of the arc's center.</source>
          <target state="translated">円弧の中心のx軸(水平)座標。</target>
        </trans-unit>
        <trans-unit id="216075453a2c692eae370647a4fc0a7dd5043fdd" translate="yes" xml:space="preserve">
          <source>The x-axis (horizontal) coordinate of the ellipse's center.</source>
          <target state="translated">楕円の中心のX軸(水平)座標。</target>
        </trans-unit>
        <trans-unit id="6554a31a9cb26405ee300566cd88e0af396859df" translate="yes" xml:space="preserve">
          <source>The x-axis (horizontal) coordinate of the point.</source>
          <target state="translated">点のX軸(水平)座標。</target>
        </trans-unit>
        <trans-unit id="c008bba776b8dc4e0f25a1a241b797c3ad0893ec" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate in the destination canvas at which to place the top-left corner of the source &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">ソース &lt;code&gt;image&lt;/code&gt; 左上隅を配置する宛先キャンバスのx軸座標。</target>
        </trans-unit>
        <trans-unit id="e9a2e33d58c74c2cdcb6dcd02aff3c5ba005797c" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the control point.</source>
          <target state="translated">制御点のx軸座標です。</target>
        </trans-unit>
        <trans-unit id="7fc9a75ae867c6ec391734cb233a97defd06f167" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the end circle.</source>
          <target state="translated">端円のx軸座標。</target>
        </trans-unit>
        <trans-unit id="9477d3b324b8d1530d87e0dd54f8f62dd42e7a80" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the end point.</source>
          <target state="translated">終点のx軸座標。</target>
        </trans-unit>
        <trans-unit id="64873eb29f4fb5e728f15528a80e6f145b16bdae" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the first control point.</source>
          <target state="translated">第1の制御点のX軸座標。</target>
        </trans-unit>
        <trans-unit id="a32f7bb9e3c99069a0a644b5b34359b4186bbbb0" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the line's end point.</source>
          <target state="translated">線の終点のx軸座標。</target>
        </trans-unit>
        <trans-unit id="a1bacdf0e5d5185678263b251ce8b76ad9b39711" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the point at which to begin drawing the text, in pixels.</source>
          <target state="translated">テキストの描画を開始する点の x 軸座標をピクセル単位で指定します。</target>
        </trans-unit>
        <trans-unit id="fa073fbd4a60b458513f9a8a4b703e8aba07c18e" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the point at which to begin drawing the text.</source>
          <target state="translated">テキストの描画を開始する点のx軸座標。</target>
        </trans-unit>
        <trans-unit id="5de31642cb67769578661a042fcb50980e2aab15" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the point to check.</source>
          <target state="translated">チェックする点のx軸座標。</target>
        </trans-unit>
        <trans-unit id="ce162057c03994f32afc7b3ddbf5b566d46119ea" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the rectangle's starting point.</source>
          <target state="translated">矩形の始点のx軸座標。</target>
        </trans-unit>
        <trans-unit id="a5103f0af750356e62c0dcd5682fed31d62ba4fa" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the second control point.</source>
          <target state="translated">第2の制御点のx軸座標。</target>
        </trans-unit>
        <trans-unit id="de44eb3f7c0eb37b7c18d099874dcb449c3064ca" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the start circle.</source>
          <target state="translated">スタートサークルのx軸座標。</target>
        </trans-unit>
        <trans-unit id="3917f01f034bc85f20a85a00820a7f86f778ba9e" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the start point.</source>
          <target state="translated">開始点の x 軸座標。</target>
        </trans-unit>
        <trans-unit id="44a3819ed1cfb2053ac3021665014e9660c832b3" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the top left corner of the sub-rectangle of the source &lt;code&gt;image&lt;/code&gt; to draw into the destination context.</source>
          <target state="translated">宛先コンテキストに描画するソース &lt;code&gt;image&lt;/code&gt; サブ長方形の左上隅のx軸座標。</target>
        </trans-unit>
        <trans-unit id="e16baca9912f3b3cac4c4415d83c15da29a6b54f" translate="yes" xml:space="preserve">
          <source>The x-axis coordinate of the top-left corner of the rectangle from which the &lt;code&gt;ImageData&lt;/code&gt; will be extracted.</source>
          <target state="translated">&lt;code&gt;ImageData&lt;/code&gt; が抽出される長方形の左上隅のx軸座標。</target>
        </trans-unit>
        <trans-unit id="d383ea9d3dc03d20b01031754581997ab38bedb3" translate="yes" xml:space="preserve">
          <source>The y coordinate of the &lt;code&gt;DOMPoint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMPoint&lt;/code&gt; のy座標。</target>
        </trans-unit>
        <trans-unit id="470f37ffd3e83825d2111064516fc0046bb0d641" translate="yes" xml:space="preserve">
          <source>The y coordinate of the &lt;code&gt;DOMRect&lt;/code&gt;'s origin.</source>
          <target state="translated">&lt;code&gt;DOMRect&lt;/code&gt; の原点のy座標。</target>
        </trans-unit>
        <trans-unit id="b0a74215e8b6989ceadf0e338feb62f0865674b1" translate="yes" xml:space="preserve">
          <source>The y coordinate of the reference point of the rectangle from which the &lt;code&gt;ImageBitmap&lt;/code&gt; will be extracted.</source>
          <target state="translated">&lt;code&gt;ImageBitmap&lt;/code&gt; が抽出される長方形の参照点のy座標。</target>
        </trans-unit>
        <trans-unit id="1fe8c922a0c9e43a1c29f02ad147762aa7d6c2b8" translate="yes" xml:space="preserve">
          <source>The y position of the listener in 3D space.</source>
          <target state="translated">3D 空間におけるリスナーの y 位置。</target>
        </trans-unit>
        <trans-unit id="19d68c8637a483f3bed4eceb240b17086b429619" translate="yes" xml:space="preserve">
          <source>The y position of the panner in 3D space.</source>
          <target state="translated">3D空間におけるパンナのy位置。</target>
        </trans-unit>
        <trans-unit id="c8798fcd5e93b6cbf348a96843d794eb440a2ce6" translate="yes" xml:space="preserve">
          <source>The y value of the front vector of the listener.</source>
          <target state="translated">リスナーのフロントベクトルのy値。</target>
        </trans-unit>
        <trans-unit id="70326654060537e8207f6ac77c90fe64b3b5b2f3" translate="yes" xml:space="preserve">
          <source>The y value of the panner's direction vector in 3D space.</source>
          <target state="translated">3次元空間におけるパンナの方向ベクトルのy値。</target>
        </trans-unit>
        <trans-unit id="894f2fcdf4ac3bb021927fbbe637aef2052e03e7" translate="yes" xml:space="preserve">
          <source>The y value of the panner's velocity vector.</source>
          <target state="translated">パンナの速度ベクトルのy値。</target>
        </trans-unit>
        <trans-unit id="a79e2261e768ac66bf63d05acb9a4779ab91b9d8" translate="yes" xml:space="preserve">
          <source>The y value of the up vector of the listener.</source>
          <target state="translated">リスナーのアップベクトルのy値。</target>
        </trans-unit>
        <trans-unit id="820482ba5c3b740aafef6b55e1b2375aaabfdf27" translate="yes" xml:space="preserve">
          <source>The y-axis (vertical) coordinate of the arc's center.</source>
          <target state="translated">円弧の中心のy軸(垂直)座標。</target>
        </trans-unit>
        <trans-unit id="f9ceb56253afb09513af7599c2f3221650a990c5" translate="yes" xml:space="preserve">
          <source>The y-axis (vertical) coordinate of the ellipse's center.</source>
          <target state="translated">楕円の中心のy軸(垂直)座標。</target>
        </trans-unit>
        <trans-unit id="803c2dced93c898ccc974e9dea91d8f6ed267feb" translate="yes" xml:space="preserve">
          <source>The y-axis (vertical) coordinate of the point.</source>
          <target state="translated">点のY軸(垂直)座標。</target>
        </trans-unit>
        <trans-unit id="4ea171ec82301103387cc995d2c072a5a4d718f5" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate in the destination canvas at which to place the top-left corner of the source &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">ソース &lt;code&gt;image&lt;/code&gt; 左上隅を配置する宛先キャンバスのy軸座標。</target>
        </trans-unit>
        <trans-unit id="4937edd981670a6fcb09d41eb35fca385a28f965" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the control point.</source>
          <target state="translated">制御点のy軸座標。</target>
        </trans-unit>
        <trans-unit id="bfef6537f2ffa0634b116fa619aaa42bc29ede42" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the end circle.</source>
          <target state="translated">端円のy軸座標。</target>
        </trans-unit>
        <trans-unit id="db8e32b082c0aaee9eaa74e252647ce8061b58c8" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the end point.</source>
          <target state="translated">終点のy軸座標。</target>
        </trans-unit>
        <trans-unit id="0d2445e09608ed4def6203bc7bcd7d9cfada3a22" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the first control point.</source>
          <target state="translated">第1の制御点のy軸座標。</target>
        </trans-unit>
        <trans-unit id="39b5c5742d1d5d71be6bcc4b1c3ea122b68c75c8" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the line's end point.</source>
          <target state="translated">線の終点のy軸座標。</target>
        </trans-unit>
        <trans-unit id="b9d2fe755fde2a5bec8fd10456c5233dab3607ed" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the point at which to begin drawing the text, in pixels.</source>
          <target state="translated">テキストの描画を開始する点の y 軸座標をピクセル単位で指定します。</target>
        </trans-unit>
        <trans-unit id="eb86c5a68aba2901e75cd6a43df4dd456aa02c01" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the point at which to begin drawing the text.</source>
          <target state="translated">テキストの描画を開始する点の y 軸座標。</target>
        </trans-unit>
        <trans-unit id="2fac6891c3008082370576d7ba431aa3f1958597" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the point to check.</source>
          <target state="translated">チェックする点のy軸座標。</target>
        </trans-unit>
        <trans-unit id="163f0bcfdaa3813b04c6298b001408c33b1ff838" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the rectangle's starting point.</source>
          <target state="translated">矩形の始点のy軸座標。</target>
        </trans-unit>
        <trans-unit id="dea2c08cfc279c2d0db8c55b8655bc0a05c94c76" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the second control point.</source>
          <target state="translated">第2の制御点のy軸座標。</target>
        </trans-unit>
        <trans-unit id="d39db25e804d0129e8c91b385fd39fc379628bd4" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the start circle.</source>
          <target state="translated">スタートサークルのy軸座標。</target>
        </trans-unit>
        <trans-unit id="247a688f76497ba1e99b4f37ba6ab8b4006231f6" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the start point.</source>
          <target state="translated">開始点のy軸座標。</target>
        </trans-unit>
        <trans-unit id="3abb4e9c66d51879425109233e29694c23ce1cd3" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the top left corner of the sub-rectangle of the source &lt;code&gt;image&lt;/code&gt; to draw into the destination context.</source>
          <target state="translated">宛先コンテキストに描画するソース &lt;code&gt;image&lt;/code&gt; サブ長方形の左上隅のy軸座標。</target>
        </trans-unit>
        <trans-unit id="d41cea0b3f7718935dbb1df8abf3d9e86ec3e229" translate="yes" xml:space="preserve">
          <source>The y-axis coordinate of the top-left corner of the rectangle from which the &lt;code&gt;ImageData&lt;/code&gt; will be extracted.</source>
          <target state="translated">&lt;code&gt;ImageData&lt;/code&gt; が抽出される長方形の左上隅のy軸座標。</target>
        </trans-unit>
        <trans-unit id="0ebc21c57a6f0afb51824c3e6c493a7c07eea541" translate="yes" xml:space="preserve">
          <source>The z coordinate of the &lt;code&gt;DOMPoint&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMPoint&lt;/code&gt; のz座標。</target>
        </trans-unit>
        <trans-unit id="057252692c83bc5fb15ae51d0cc8d91ca9943205" translate="yes" xml:space="preserve">
          <source>The z position of the listener in 3D space.</source>
          <target state="translated">3次元空間におけるリスナーのz位置。</target>
        </trans-unit>
        <trans-unit id="68333ab83438f5744c3fa3f40d5106ba7855a02e" translate="yes" xml:space="preserve">
          <source>The z position of the panner in 3D space.</source>
          <target state="translated">3D空間におけるパンナのZ位置。</target>
        </trans-unit>
        <trans-unit id="d2010c0d6625f998a0aedd3f87ba6b677e5e6e4d" translate="yes" xml:space="preserve">
          <source>The z value of the front vector of the listener.</source>
          <target state="translated">リスナーのフロントベクトルのz値。</target>
        </trans-unit>
        <trans-unit id="292730e2cfe203a5cce9a5707d85181c202a7ff3" translate="yes" xml:space="preserve">
          <source>The z value of the panner's direction vector in 3D space.</source>
          <target state="translated">3次元空間におけるパンナの方向ベクトルのz値。</target>
        </trans-unit>
        <trans-unit id="1235dfd34153b1b83bfc944ce56e6b880ca9af12" translate="yes" xml:space="preserve">
          <source>The z value of the panner's velocity vector.</source>
          <target state="translated">パンナの速度ベクトルのz値。</target>
        </trans-unit>
        <trans-unit id="d58e10fafa809b11dc58fde14c15a96928c49d28" translate="yes" xml:space="preserve">
          <source>The z value of the up vector of the listener.</source>
          <target state="translated">リスナーのアップベクトルのz値。</target>
        </trans-unit>
        <trans-unit id="270fe07c029a861554d060b4d964347083acea7f" translate="yes" xml:space="preserve">
          <source>The zero-based index number of the item in the drag data list to remove. If the &lt;code&gt;index&lt;/code&gt; doesn't correspond to an existing item in the list, the list is left unchanged.</source>
          <target state="translated">削除するドラッグデータリスト内のアイテムの0から始まるインデックス番号。 &lt;code&gt;index&lt;/code&gt; がリスト内の既存のアイテムに対応していない場合、リストは変更されません。</target>
        </trans-unit>
        <trans-unit id="8f59f884d369979877e00824ab0a22e03b39f755" translate="yes" xml:space="preserve">
          <source>The zero-based index of the file to retrieve from the list.</source>
          <target state="translated">リストから取得するファイルのゼロベースのインデックス。</target>
        </trans-unit>
        <trans-unit id="e74e0175787165a6cdbb7d60a49df65328a220ee" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item in the drag data list to return.</source>
          <target state="translated">返すドラッグデータリスト内の項目のゼロベースのインデックス。</target>
        </trans-unit>
        <trans-unit id="e3874fd5677c59cc537ee6cccee2d1842c33265c" translate="yes" xml:space="preserve">
          <source>The zero-based index of the m-line within the SDP of the media description with which the candidate is associated, or &lt;code&gt;null&lt;/code&gt; if no such associated exists. The default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">候補が関連付けられているメディア記述のSDP内のm行の0ベースのインデックス。そのような関連付けが存在しない場合は &lt;code&gt;null&lt;/code&gt; 。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c699a0a26ca2d037830e720480377bbf419d3f84" translate="yes" xml:space="preserve">
          <source>The zero-based index of the range to return. A negative number or a number greater than or equal to &lt;a href=&quot;rangecount&quot;&gt;&lt;code&gt;Selection.rangeCount&lt;/code&gt;&lt;/a&gt; will result in an error.</source>
          <target state="translated">返す範囲のゼロから始まるインデックス。負の数または&lt;a href=&quot;rangecount&quot;&gt; &lt;code&gt;Selection.rangeCount&lt;/code&gt; &lt;/a&gt;以上の数は、エラーになります。</target>
        </trans-unit>
        <trans-unit id="a55c268a35d5097a000df87dbed236c666822606" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt; &lt;strong&gt;window.isSecureContext&lt;/strong&gt;&lt;/code&gt; read-only property indicates whether a context is capable of using features that require &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts&quot;&gt;secure contexts&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt; &lt;strong&gt;window.isSecureContext&lt;/strong&gt;&lt;/code&gt; は読み取り専用のプロパティは、コンテキストが必要とする機能の使用が可能であるかどうかを示す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts&quot;&gt;安全なコンテキストを&lt;/a&gt;。 &lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d999098e23a7c247bbd1ffb55a0fce5a0f197110" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/tonechange&quot;&gt;tonechange&lt;/a&gt;&lt;/code&gt; event is used both to indicate when an individual tone has played and when all tones have finished playing. The event's &lt;a href=&quot;../rtcdtmftonechangeevent/tone&quot;&gt;&lt;code&gt;tone&lt;/code&gt;&lt;/a&gt; property is a string indicating which tone just finished playing. If all tones have finished playing, &lt;code&gt;tone&lt;/code&gt; is an empty string; when that's the case, &lt;a href=&quot;../rtcdtmfsender/tonebuffer&quot;&gt;&lt;code&gt;RTCDTMFSender.toneBuffer&lt;/code&gt;&lt;/a&gt; is empty.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/tonechange&quot;&gt;tonechange&lt;/a&gt;&lt;/code&gt; のイベントは、個々のトーンが果たしてきたときに、すべてのトーンの再生が終了したことを示すために両方を使用しています。イベントの&lt;a href=&quot;../rtcdtmftonechangeevent/tone&quot;&gt; &lt;code&gt;tone&lt;/code&gt; &lt;/a&gt;プロパティは、再生を終了したばかりのトーンを示す文字列です。すべてのトーンの再生が終了した場合、 &lt;code&gt;tone&lt;/code&gt; は空の文字列です。その場合、&lt;a href=&quot;../rtcdtmfsender/tonebuffer&quot;&gt; &lt;code&gt;RTCDTMFSender.toneBuffer&lt;/code&gt; &lt;/a&gt;は空です。</target>
        </trans-unit>
        <trans-unit id="498e94a7cffca63784094a822e6fc0890b64a129" translate="yes" xml:space="preserve">
          <source>The&lt;code&gt;MouseEvent.buttons&lt;/code&gt; read-only property indicates which buttons are pressed on the mouse (or other input device) when the event is triggered.</source>
          <target state="translated">&lt;code&gt;MouseEvent.buttons&lt;/code&gt; は、読み取り専用プロパティボタンは、イベントがトリガされたマウス（または他の入力装置）に押されているかを示します。</target>
        </trans-unit>
        <trans-unit id="9cc7506dd016d59015a903f64f3e5fb82f1b0046" translate="yes" xml:space="preserve">
          <source>The&lt;strong&gt; Media Capabilities API&lt;/strong&gt; allows developers to determine decoding and encoding abilities of the device, exposing information such as whether media is supported and whether playback should be smooth and power efficient, with real time feedback about playback to better enable adaptive streaming, and access to display property information.</source>
          <target state="translated">&lt;strong&gt;メディア機能のAPIは、&lt;/strong&gt;開発者は、そのようなメディアがサポートされているかどうかのように、再生がより良い適応ストリーミングを可能にするために、再生に関するリアルタイムのフィードバックを、平滑化し、電力効率的でなければならないかどうかの情報を露光、復号及び装置の能力をコードして決定することができ、ディスプレイへのアクセスプロパティ情報。</target>
        </trans-unit>
        <trans-unit id="463c21b44aa99ede7fcd44a5574bc529f2220884" translate="yes" xml:space="preserve">
          <source>Their novelty provides a new and unexploited opportunity for enterprising sites to reach potential customers. Has the customer switched tabs to answer an email? Win them back with an expiring offer of free shipping that they can&amp;rsquo;t ignore!</source>
          <target state="translated">彼らの目新しさは、進取的なサイトが潜在的な顧客に到達するための新しくて未開拓の機会を提供します。お客様はタブを切り替えてメールに返信しましたか？無視できない無料配送の期限切れのオファーで彼らを取り戻しましょう！</target>
        </trans-unit>
        <trans-unit id="57b808f2b7dec9e5869597c4de1f5be8c479e01a" translate="yes" xml:space="preserve">
          <source>Then &quot;transmit&quot; the offer to the receiver by calling &lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;receiverPC.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;. This configures the receiver so that it knows how the caller is configured.</source>
          <target state="translated">次に、&lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt; &lt;code&gt;receiverPC.setRemoteDescription()&lt;/code&gt; を&lt;/a&gt;呼び出して、オファーをレシーバーに「送信」します。これにより、発信者がどのように構成されているかがわかるように受信者が構成されます。</target>
        </trans-unit>
        <trans-unit id="3dd06fdc2970c1ebc1b1b25b179821b6e63a0df9" translate="yes" xml:space="preserve">
          <source>Then &lt;code&gt;addEventListener()&lt;/code&gt; is called to begin watching the &lt;code&gt;video&lt;/code&gt; element so that we obtain notification when the user presses the play button on the video. In response to the user beginning playback, this code fetches the width and height of the video, halving each (we will be halving the size of the video when we perform the chroma-keying effect), then calls the &lt;code&gt;timerCallback()&lt;/code&gt; method to start watching the video and computing the visual effect.</source>
          <target state="translated">次に &lt;code&gt;addEventListener()&lt;/code&gt; を呼び出して &lt;code&gt;video&lt;/code&gt; 要素の監視を開始し、ユーザーがビデオの再生ボタンを押したときに通知を取得します。ユーザーが再生を開始するのに応答して、このコードはビデオの幅と高さをフェッチし、それぞれを半分にして（クロマキーイング効果を実行するときにビデオのサイズを半分にします）、 &lt;code&gt;timerCallback()&lt;/code&gt; メソッドを呼び出して開始しますビデオを見て、視覚効果を計算します。</target>
        </trans-unit>
        <trans-unit id="c309c0c2495ff9fd3616715981d50261f158ce08" translate="yes" xml:space="preserve">
          <source>Then a &lt;a href=&quot;paymentdetailsupdate&quot;&gt;&lt;code&gt;PaymentDetailsUpdate&lt;/code&gt;&lt;/a&gt; object is created with its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentDetailsUpdate/error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; set to a generic message about address errors and with the reset of the object's values taken from &lt;code&gt;shippingAddressErrors&lt;/code&gt;, and, using &quot;&lt;code&gt;...defaultPaymentDetails&lt;/code&gt;&quot; as the final entry in the object, the remeainder of the properties' values are taken from &lt;code&gt;defaultPaymentDetails&lt;/code&gt;.</source>
          <target state="translated">次に、&lt;a href=&quot;paymentdetailsupdate&quot;&gt; &lt;code&gt;PaymentDetailsUpdate&lt;/code&gt; &lt;/a&gt;オブジェクトが作成され、その&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PaymentDetailsUpdate/error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;は住所エラーに関する一般的なメッセージに設定され、 &lt;code&gt;shippingAddressErrors&lt;/code&gt; から取得されたオブジェクトの値がリセットされます。オブジェクトの最後のエントリとして「 &lt;code&gt;...defaultPaymentDetails&lt;/code&gt; 」を使用すると、プロパティの値は &lt;code&gt;defaultPaymentDetails&lt;/code&gt; から取得されます。</target>
        </trans-unit>
        <trans-unit id="1a7b2581be67a054a57aff440abc6e0171148db9" translate="yes" xml:space="preserve">
          <source>Then a new custom waveform is built using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/createPeriodicWave&quot;&gt;&lt;code&gt;AudioContext.createPeriodicWave()&lt;/code&gt;&lt;/a&gt;. This waveform will be used any time the user selects &quot;Custom&quot; from the waveform picker control.</source>
          <target state="translated">次に、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/createPeriodicWave&quot;&gt; &lt;code&gt;AudioContext.createPeriodicWave()&lt;/code&gt; &lt;/a&gt;を使用して新しいカスタム波形が作成されます。この波形は、ユーザーが波形ピッカーコントロールから「カスタム」を選択したときに使用されます。</target>
        </trans-unit>
        <trans-unit id="85092fca9e3988667a53576d6585fada443a85e4" translate="yes" xml:space="preserve">
          <source>Then a second &lt;code&gt;RTCPeerConnection&lt;/code&gt;, this one representing the receiving end of the call, is created and stored in &lt;code&gt;receiverPC&lt;/code&gt;; its &lt;code&gt;onicecandidate&lt;/code&gt; event handler is set up too.</source>
          <target state="translated">次に、2番目の &lt;code&gt;RTCPeerConnection&lt;/code&gt; （これは呼び出しの受信側を表す）が作成され、 &lt;code&gt;receiverPC&lt;/code&gt; に格納されます。その &lt;code&gt;onicecandidate&lt;/code&gt; イベントハンドラーもセッ​​トアップされます。</target>
        </trans-unit>
        <trans-unit id="8a9b236bdde74c2827725c431b81ba5908de052c" translate="yes" xml:space="preserve">
          <source>Then add code to specify the texture to map onto the faces, just before draw:</source>
          <target state="translated">そして、描画の直前に、面にマップするテクスチャを指定するコードを追加します。</target>
        </trans-unit>
        <trans-unit id="69745cc86500dc905cd62eca31f6f7ca7a9e0642" translate="yes" xml:space="preserve">
          <source>Then come the event handlers. First, we prevent the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event from being handled by the default handler, so that our drop zone can receive the drop:</source>
          <target state="translated">次に、イベントハンドラが表示されます。まず、デフォルトのハンドラーで &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; イベントが処理されないようにして、ドロップゾーンがドロップを受け取ることができるようにします。</target>
        </trans-unit>
        <trans-unit id="3959aa02dca9340d7ed2d7fae0c98f7910492360" translate="yes" xml:space="preserve">
          <source>Then factoring out the scaleFactor, we get this:</source>
          <target state="translated">次に scaleFactor を差し引くと、次のようになります。</target>
        </trans-unit>
        <trans-unit id="309cef5b3533b8b58564f4b2e5c19214a1d1d74a" translate="yes" xml:space="preserve">
          <source>Then for both the incoming and outgoing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, we remove their &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; attributes using their &lt;a href=&quot;../element/removeattribute&quot;&gt;&lt;code&gt;removeAttribute()&lt;/code&gt;&lt;/a&gt; methods. This completes the disassociation of the streams from the video elements.</source>
          <target state="translated">次に、着信と発信の両方の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素について、&lt;a href=&quot;../element/removeattribute&quot;&gt; &lt;code&gt;removeAttribute()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; 属性と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; 属性を削除します。これで、ビデオ要素からのストリームの関連付けが完了しました。</target>
        </trans-unit>
        <trans-unit id="fab9350943d90b205ddfb3a55eccd2f3778e00c6" translate="yes" xml:space="preserve">
          <source>Then in &lt;code&gt;main()&lt;/code&gt; in place of the call to &lt;code&gt;loadTexture()&lt;/code&gt; in the previous example, we call &lt;code&gt;initTexture&lt;/code&gt;&lt;code&gt;()&lt;/code&gt; followed by &lt;code&gt;setupVideo()&lt;/code&gt; .</source>
          <target state="translated">その後で &lt;code&gt;main()&lt;/code&gt; への呼び出しの代わりに &lt;code&gt;loadTexture()&lt;/code&gt; 前の例では、我々は呼んで &lt;code&gt;initTexture&lt;/code&gt; &lt;code&gt;()&lt;/code&gt; に続いて &lt;code&gt;setupVideo()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="86511ae8b61858331343852df9b290f2ba5d94da" translate="yes" xml:space="preserve">
          <source>Then include a click event listener on the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; element:</source>
          <target state="translated">次に、 &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; 要素にクリックイベントリスナーを含めます。</target>
        </trans-unit>
        <trans-unit id="2c69e4554edc0d1b778b465e505f9f45d518adcb" translate="yes" xml:space="preserve">
          <source>Then it calls the &lt;code&gt;computeFrame()&lt;/code&gt; method, which performs the chroma-keying effect on the current video frame.</source>
          <target state="translated">次に、 &lt;code&gt;computeFrame()&lt;/code&gt; メソッドを呼び出します。このメソッドは、現在のビデオフレームに対してクロマキーイング効果を実行します。</target>
        </trans-unit>
        <trans-unit id="c0102849120b2cf5c4767ba335e22ccae43f41a4" translate="yes" xml:space="preserve">
          <source>Then move the last column's 1 up one space.</source>
          <target state="translated">そして、最後の列の1を1スペース上に移動させます。</target>
        </trans-unit>
        <trans-unit id="15773a0ebb798d5acc04978f0802f724e5ce06b6" translate="yes" xml:space="preserve">
          <source>Then take that offer and set the caller's local description to match by calling &lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;callerPC.setLocalDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次に、そのオファーを&lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;callerPC.setLocalDescription()&lt;/code&gt; &lt;/a&gt;呼び出して、一致するように発信者のローカルの説明を設定します。</target>
        </trans-unit>
        <trans-unit id="c53f9679b33a623d07c987291a7f7cbf542a7b19" translate="yes" xml:space="preserve">
          <source>Then the answer is &quot;transmitted&quot; to the caller by calling &lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;callerPC.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;. This lets the caller know what the receiver's configuration is.</source>
          <target state="translated">次に、&lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt; &lt;code&gt;callerPC.setRemoteDescription()&lt;/code&gt; を&lt;/a&gt;呼び出して、応答が発信者に「送信」されます。これにより、発信者は受信者の構成を知ることができます。</target>
        </trans-unit>
        <trans-unit id="d3c2b8d476927d3a8ff77b4d79dcee846676d62b" translate="yes" xml:space="preserve">
          <source>Then the current rotation angle (in degrees) is set to 0.0, since we haven't performed any rotation yet, and the rotation speed (in degrees per screen refresh period, typically 60 FPS) is set to 6.</source>
          <target state="translated">そして、現在の回転角度(度数)を0.0に設定し、回転速度(スクリーンリフレッシュ期間あたりの度数、通常は60FPS)を6に設定します。</target>
        </trans-unit>
        <trans-unit id="61fee238b5bc6fb76aa43e975e21ab4281587d08" translate="yes" xml:space="preserve">
          <source>Then the download button's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download&quot;&gt;download&lt;/a&gt;&lt;/code&gt; attribute is set. While the &lt;code&gt;download&lt;/code&gt; attribute can be a Boolean, you can also set it to a string to use as the name for the downloaded file. So by setting the download link's &lt;code&gt;download&lt;/code&gt; attribute to &quot;RecordedVideo.webm&quot;, we tell the browser that clicking the button should download a file named &lt;code&gt;&quot;RecordedVideo.webm&quot;&lt;/code&gt; whose contents are the recorded video.</source>
          <target state="translated">次に、ダウンロードボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-download&quot;&gt;download&lt;/a&gt;&lt;/code&gt; 属性が設定されます。一方で &lt;code&gt;download&lt;/code&gt; 属性はブールすることができ、あなたはまた、ダウンロードしたファイルの名前として使用する文字列に設定することができます。したがって、ダウンロードリンクの &lt;code&gt;download&lt;/code&gt; 属性を「RecordedVideo.webm」に設定することにより、ボタンをクリックすると、記録されたビデオをコンテンツとする &lt;code&gt;&quot;RecordedVideo.webm&quot;&lt;/code&gt; という名前のファイルをダウンロードする必要があることをブラウザーに伝えます。</target>
        </trans-unit>
        <trans-unit id="82ed27018ac26c6ef564b8d1352bdcd7417d3ad9" translate="yes" xml:space="preserve">
          <source>Then the event's &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt; method is called to ensure that the &lt;code&gt;mousedown&lt;/code&gt; event isn't triggered, potentially causing events to be handled twice if we had a handler for those events in case Pointer Event support is missing.</source>
          <target state="translated">次に、イベントの&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、 &lt;code&gt;mousedown&lt;/code&gt; イベントがトリガーされないようにします。これにより、ポインターイベントのサポートがない場合にイベントのハンドラーがあると、イベントが2回処理される可能性があります。</target>
        </trans-unit>
        <trans-unit id="c5101503a39524d5201514bc0a40a02d19068c32" translate="yes" xml:space="preserve">
          <source>Then the final position is computed by multiplying the rotated position by the scaling vector provided by the JavaScript code in &lt;code&gt;uScalingFactor&lt;/code&gt;. The values of &lt;code&gt;z&lt;/code&gt; and &lt;code&gt;w&lt;/code&gt; are fixed at 0.0 and 1.0, respectively, since we're drawing in 2D.</source>
          <target state="translated">次に、回転した位置に &lt;code&gt;uScalingFactor&lt;/code&gt; の JavaScriptコードによって提供されるスケーリングベクトルを掛けて、最終的な位置が計算されます。2Dで描画しているため、 &lt;code&gt;z&lt;/code&gt; と &lt;code&gt;w&lt;/code&gt; の値はそれぞれ0.0と1.0に固定されています。</target>
        </trans-unit>
        <trans-unit id="489f3243b29add7da7b362b6797ccbc945dd346a" translate="yes" xml:space="preserve">
          <source>Then the observer is instantiated, specifying the &lt;code&gt;callback()&lt;/code&gt; function, and we begin observing the DOM nodes of interest by calling &lt;code&gt;observe()&lt;/code&gt;, specifying that target node and the options record.</source>
          <target state="translated">次に、 &lt;code&gt;callback()&lt;/code&gt; 関数を指定してオブザーバーをインスタンス化し、 &lt;code&gt;observe()&lt;/code&gt; を呼び出して対象のDOMノードの監視を開始し、そのターゲットノードとオプションレコードを指定します。</target>
        </trans-unit>
        <trans-unit id="0caf40faa986f0c437944e0fd6f6a4e5e0da832f" translate="yes" xml:space="preserve">
          <source>Then the receiver creates an answer by calling &lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt;&lt;code&gt;receiverPC.createAnswer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次に、レシーバーは&lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt; &lt;code&gt;receiverPC.createAnswer()&lt;/code&gt; を&lt;/a&gt;呼び出して応答を作成します。</target>
        </trans-unit>
        <trans-unit id="6e5b0cf31bc70b35149aa12d39fc4b97a3255bda" translate="yes" xml:space="preserve">
          <source>Then the receiver sets its local description to match the newly-created answer by calling &lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;receiverPC.setLocalDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次に、レシーバーは&lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;receiverPC.setLocalDescription()&lt;/code&gt; を&lt;/a&gt;呼び出して、新しく作成された回答と一致するようにローカルの説明を設定します。</target>
        </trans-unit>
        <trans-unit id="5473746ce673e7baa73ecfddee64295800b5d335" translate="yes" xml:space="preserve">
          <source>Then the three uniforms' values are set:</source>
          <target state="translated">そして、3つのユニフォームの値が設定されています。</target>
        </trans-unit>
        <trans-unit id="c80b0a67a7898df51e7c295adf3db5e4a45c982b" translate="yes" xml:space="preserve">
          <source>Then the vertex buffer is bound to the &lt;code&gt;aVertexPosition&lt;/code&gt; attribute by calling &lt;a href=&quot;../webglrenderingcontext/vertexattribpointer&quot;&gt;&lt;code&gt;vertexAttribPointer()&lt;/code&gt;&lt;/a&gt;. This step is not obvious, since this binding is almost a side effect. But as a result, accessing &lt;code&gt;aVertexPosition&lt;/code&gt; now obtains data from the vertex buffer.</source>
          <target state="translated">次に、&lt;a href=&quot;../webglrenderingcontext/vertexattribpointer&quot;&gt; &lt;code&gt;vertexAttribPointer()&lt;/code&gt; を&lt;/a&gt;呼び出して、頂点バッファーを &lt;code&gt;aVertexPosition&lt;/code&gt; 属性にバインドします。このバインドはほとんど副作用であるため、この手順は明らかではありません。ただし、その結果、 &lt;code&gt;aVertexPosition&lt;/code&gt; にアクセスすると、頂点バッファーからデータが取得されます。</target>
        </trans-unit>
        <trans-unit id="765e109c1099bb2060bf75ffd90d781d82b07ea7" translate="yes" xml:space="preserve">
          <source>Then the vertex buffer is bound to the &lt;code&gt;aVertexPosition&lt;/code&gt; attribute by calling &lt;a href=&quot;vertexattribpointer&quot;&gt;&lt;code&gt;vertexAttribPointer()&lt;/code&gt;&lt;/a&gt;. This step is not obvious, since this binding is almost a side effect. But as a result, accessing &lt;code&gt;aVertexPosition&lt;/code&gt; now obtains data from the vertex buffer.</source>
          <target state="translated">次に、&lt;a href=&quot;vertexattribpointer&quot;&gt; &lt;code&gt;vertexAttribPointer()&lt;/code&gt; を&lt;/a&gt;呼び出して、頂点バッファーを &lt;code&gt;aVertexPosition&lt;/code&gt; 属性にバインドします。このバインドはほとんど副作用であるため、この手順は明らかではありません。ただし、その結果、 &lt;code&gt;aVertexPosition&lt;/code&gt; にアクセスすると、頂点バッファーからデータが取得されます。</target>
        </trans-unit>
        <trans-unit id="9f3d8db13ab0d44e7a01c1ce70161c5ce7dc4ff8" translate="yes" xml:space="preserve">
          <source>Then the vertex shader uses the 4 dimensional point passed in.</source>
          <target state="translated">そして、頂点シェーダは、渡された4次元の点を使用します。</target>
        </trans-unit>
        <trans-unit id="207e7c5a834e7b180fd70a1e23609ec4e48c3e6e" translate="yes" xml:space="preserve">
          <source>Then there's a box which contains the text input box into which the user can type a message to transmit, with a button to send the entered text. This &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; will be the first peer in the channel.</source>
          <target state="translated">次に、ユーザーが送信するメッセージを入力できるテキスト入力ボックスを含むボックスと、入力したテキストを送信するボタンがあります。この&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;は、チャネルの最初のピアになります。</target>
        </trans-unit>
        <trans-unit id="c35e7b9b5b39cc9e76afabefe87aff1b39f93911" translate="yes" xml:space="preserve">
          <source>Then there's the roll-off factor (&lt;a href=&quot;../pannernode/rollofffactor&quot;&gt;&lt;code&gt;rolloffFactor&lt;/code&gt;&lt;/a&gt;) &amp;mdash; how quickly does the volume reduce as the panner moves away from the listener. The default value is 1; let's make that a bit bigger to exaggerate our movements.</source>
          <target state="translated">次に、ロールオフ係数（&lt;a href=&quot;../pannernode/rollofffactor&quot;&gt; &lt;code&gt;rolloffFactor&lt;/code&gt; &lt;/a&gt;）があります。パンナーがリスナーから離れるにつれて、ボリュームがどれだけ速く減少しますか。デフォルト値は1です。それを少し大きくして、動きを誇張してみましょう。</target>
        </trans-unit>
        <trans-unit id="1f665dc614e4c9f51e068cd53442d2cb74852d50" translate="yes" xml:space="preserve">
          <source>Then we add a method to handle toggle &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; between &lt;code&gt;&quot;&lt;/code&gt;&lt;code&gt;flex&quot;&lt;/code&gt; and &lt;code&gt;&quot;&lt;/code&gt;&lt;code&gt;none&quot;&lt;/code&gt; and establish it as the handler for a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event on the &quot;Hide/Show&quot; the Box button:</source>
          <target state="translated">次に、 &lt;code&gt;&quot;&lt;/code&gt; &lt;code&gt;flex&quot;&lt;/code&gt; と &lt;code&gt;&quot;&lt;/code&gt; &lt;code&gt;none&quot;&lt;/code&gt; 間の切り替え&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt;を処理するメソッドを追加し、「ボタンを非表示/表示」ボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのハンドラーとして確立します。</target>
        </trans-unit>
        <trans-unit id="65636735405d32d70871a5f657a94b22d25e4035" translate="yes" xml:space="preserve">
          <source>Then we add the code to &lt;code&gt;drawScene()&lt;/code&gt; to bind the normals array to a shader attribute so the shader code can get access to it:</source>
          <target state="translated">次に、 &lt;code&gt;drawScene()&lt;/code&gt; にコードを追加して、法線配列をシェーダー属性にバインドし、シェーダーコードがそれにアクセスできるようにします。</target>
        </trans-unit>
        <trans-unit id="c19e0c05a9d5609a16a2189d554f7d2770a70797" translate="yes" xml:space="preserve">
          <source>Then we add the methods of adding/removing listeners:</source>
          <target state="translated">そして、リスナーを追加/削除する方法を追加します。</target>
        </trans-unit>
        <trans-unit id="5f8fbf0ee115966420ae3a05c1390c26716298b4" translate="yes" xml:space="preserve">
          <source>Then we assign a handler for the play button's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event (see &lt;a href=&quot;#Toggling_the_oscillators_on_and_off&quot;&gt;Toggling the oscillators on and off&lt;/a&gt; for more on the &lt;code&gt;togglePlay()&lt;/code&gt; method), and for the volume slider's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/input&quot;&gt;input&lt;/a&gt;&lt;/code&gt; event (see &lt;a href=&quot;#Controlling_the_linked_oscillators&quot;&gt;Controlling the linked oscillators&lt;/a&gt; to see the very short &lt;code&gt;changeVolume()&lt;/code&gt; method).</source>
          <target state="translated">その後、我々は再生ボタンのためのハンドラを割り当てる &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; （参照イベント&lt;a href=&quot;#Toggling_the_oscillators_on_and_off&quot;&gt;のオンとオフの発振器を切り替える&lt;/a&gt;の詳細については &lt;code&gt;togglePlay()&lt;/code&gt; メソッド）、およびボリュームスライダーのため &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/input&quot;&gt;input&lt;/a&gt;&lt;/code&gt; （参照イベント&lt;a href=&quot;#Controlling_the_linked_oscillators&quot;&gt;リンク発振器を制御する&lt;/a&gt;非常に短い見に &lt;code&gt;changeVolume()&lt;/code&gt; 方法）。</target>
        </trans-unit>
        <trans-unit id="387e66dd98a36d4a08f9f45b48c6ba7085709e8b" translate="yes" xml:space="preserve">
          <source>Then we call &lt;a href=&quot;windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt;, passing into it a function which runs the callback passed into our implementation of &lt;code&gt;requestIdleCallback()&lt;/code&gt;. The callback is passed an object which conforms to &lt;a href=&quot;idledeadline&quot;&gt;&lt;code&gt;IdleDeadline&lt;/code&gt;&lt;/a&gt;, with &lt;a href=&quot;idledeadline/didtimeout&quot;&gt;&lt;code&gt;didTimeout&lt;/code&gt;&lt;/a&gt; set to &lt;code&gt;false&lt;/code&gt; and a&lt;a href=&quot;idledeadline/timeremaining&quot;&gt;&lt;code&gt;timeRemaining()&lt;/code&gt;&lt;/a&gt; method which is implemented to give the callback 50 milliseconds of time to begin with. Each time &lt;code&gt;timeRemaining()&lt;/code&gt; is called, it subtracts the elapsed time from the original 50 milliseconds to determine the amount of time left.</source>
          <target state="translated">次に、&lt;a href=&quot;windoworworkerglobalscope/settimeout&quot;&gt; &lt;code&gt;setTimeout()&lt;/code&gt; &lt;/a&gt;を呼び出して、 &lt;code&gt;requestIdleCallback()&lt;/code&gt; の実装に渡されたコールバックを実行する関数を渡します。コールバックには、&lt;a href=&quot;idledeadline/didtimeout&quot;&gt; &lt;code&gt;didTimeout&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;false&lt;/code&gt; に設定された&lt;a href=&quot;idledeadline&quot;&gt; &lt;code&gt;IdleDeadline&lt;/code&gt; &lt;/a&gt;に準拠したオブジェクトと、コールバックの開始時間を50ミリ秒にするために実装された&lt;a href=&quot;idledeadline/timeremaining&quot;&gt; &lt;code&gt;timeRemaining()&lt;/code&gt; &lt;/a&gt;メソッドが渡されます。各時間 &lt;code&gt;timeRemaining()&lt;/code&gt; が呼び出され、それは、残り時間の量を決定するために、元の50ミリ秒から経過時間を減算します。</target>
        </trans-unit>
        <trans-unit id="63045e64e686a4cbd840811c2045d7f9559512fc" translate="yes" xml:space="preserve">
          <source>Then we copy the name of the user we're calling into the variable &lt;code&gt;targetUsername&lt;/code&gt; and call &lt;code&gt;createPeerConnection()&lt;/code&gt;, a function which will create and do basic configuration of the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">その後、我々は、我々は変数に呼び出しているユーザーの名前をコピー &lt;code&gt;targetUsername&lt;/code&gt; とコール &lt;code&gt;createPeerConnection()&lt;/code&gt; 、の基本構成を作成して行います機能&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="04e4fcb62703348e530022cce58ec44304ab1aa0" translate="yes" xml:space="preserve">
          <source>Then we define several variables:</source>
          <target state="translated">次に、いくつかの変数を定義します。</target>
        </trans-unit>
        <trans-unit id="5e05cdd056dadd6f339e8c0f583ea1fb35bb1023" translate="yes" xml:space="preserve">
          <source>Then we establish the position of the square plane by loading the identity position and translating away from the camera by 6 units. After that, we bind the square's vertex buffer to the attribute the shader is using for &lt;code&gt;aVertexPosition&lt;/code&gt; and we tell WebGL how to pull the data out of it. Finally we draw the object by calling the &lt;a href=&quot;../../webglrenderingcontext/drawarrays&quot;&gt;&lt;code&gt;drawArrays()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">次に、アイデンティティー位置をロードし、カメラから6単位だけ平行移動して、正方形の平面の位置を確立します。その後、正方形の頂点バッファーをシェーダーが &lt;code&gt;aVertexPosition&lt;/code&gt; に使用している属性にバインドし、WebGLにデータをプルする方法を指示します。最後に、&lt;a href=&quot;../../webglrenderingcontext/drawarrays&quot;&gt; &lt;code&gt;drawArrays()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出してオブジェクトを描画します。</target>
        </trans-unit>
        <trans-unit id="78913e4f77f13493b985b5b096e7e2d3949f9dcc" translate="yes" xml:space="preserve">
          <source>Then we get the type of waveform to use by checking the value of the waveform picker control in the settings bar. If the user has it set to &lt;code&gt;&quot;custom&quot;&lt;/code&gt;, we call &lt;a href=&quot;../oscillatornode/setperiodicwave&quot;&gt;&lt;code&gt;OscillatorNode.setPeriodicWave()&lt;/code&gt;&lt;/a&gt; to configure the oscillator to use our custom waveform. Doing this automatically sets the oscillator's &lt;a href=&quot;../oscillatornode/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;custom&lt;/code&gt;. If any other waveform type is selected in the wave picker, we simply set the oscillator's type to the value of the picker; that value will be one of &lt;code&gt;sine&lt;/code&gt;, &lt;code&gt;square&lt;/code&gt;, &lt;code&gt;triangle&lt;/code&gt;, and &lt;code&gt;sawtooth&lt;/code&gt;.</source>
          <target state="translated">次に、設定バーで波形ピッカーコントロールの値を確認して、使用する波形のタイプを取得します。ユーザーが &lt;code&gt;&quot;custom&quot;&lt;/code&gt; に設定している場合は、&lt;a href=&quot;../oscillatornode/setperiodicwave&quot;&gt; &lt;code&gt;OscillatorNode.setPeriodicWave()&lt;/code&gt; &lt;/a&gt;を呼び出して、カスタム波形を使用するように発振器を構成します。これを行うと、オシレーターの&lt;a href=&quot;../oscillatornode/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;が自動的に &lt;code&gt;custom&lt;/code&gt; 設定されます。ウェーブピッカーで他の波形タイプが選択されている場合は、オシレーターのタイプをピッカーの値に設定するだけです。その値は、 &lt;code&gt;sine&lt;/code&gt; 、 &lt;code&gt;square&lt;/code&gt; 、 &lt;code&gt;triangle&lt;/code&gt; 、 &lt;code&gt;sawtooth&lt;/code&gt; のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="2c977e25d7ed6c243ad2e2cad106254fe29779a1" translate="yes" xml:space="preserve">
          <source>Then we hide the actual checkbox, because we don't want it cluttering up our UI:</source>
          <target state="translated">そして、実際のチェックボックスを非表示にします。</target>
        </trans-unit>
        <trans-unit id="ca5f040065d7b403c3b4650fd65c8d821e8ec116" translate="yes" xml:space="preserve">
          <source>Then we initialize the variables which will hold the &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; objects for the video and audio tracks, as well as the variables which will hold references to the video and audio tracks themselves, to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">次に、ビデオおよびオーディオトラックの&lt;a href=&quot;../mediatrackconstraints&quot;&gt; &lt;code&gt;MediaTrackConstraints&lt;/code&gt; &lt;/a&gt;オブジェクトを保持する変数と、ビデオおよびオーディオトラック自体への参照を保持する変数を &lt;code&gt;null&lt;/code&gt; に初期化します。</target>
        </trans-unit>
        <trans-unit id="f5c0d560c7733c5f68e61fcedd924311eb24ce52" translate="yes" xml:space="preserve">
          <source>Then we iterate over the array of user names using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt;. For each name, we create a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li&quot;&gt;&lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt;&lt;/a&gt; element, then create a new text node containing the user name using &lt;a href=&quot;../document/createtextnode&quot;&gt;&lt;code&gt;createTextNode()&lt;/code&gt;&lt;/a&gt;. That text node is added as a child of the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; element. Next, we set a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event on the list item, that clicking on a user name calls our &lt;code&gt;invite()&lt;/code&gt; method, which we'll look at in the next section.</source>
          <target state="translated">次に、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt;を使用してユーザー名の配列を反復処理します。名前ごとに新しい&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li&quot;&gt; &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成し、次に&lt;a href=&quot;../document/createtextnode&quot;&gt; &lt;code&gt;createTextNode()&lt;/code&gt; &lt;/a&gt;を使用してユーザー名を含む新しいテキストノードを作成します。そのテキストノードは、 &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; 要素の子として追加されます。次に、リストアイテムの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを設定します。ユーザー名をクリックすると、 &lt;code&gt;invite()&lt;/code&gt; メソッドが呼び出されます。これについては、次のセクションで説明します。</target>
        </trans-unit>
        <trans-unit id="5e6484c76bd8e4a781639c2e2f7594a817968f53" translate="yes" xml:space="preserve">
          <source>Then we iterate over the items in the list of dropped items. For each one, we call its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry&quot;&gt;&lt;code&gt;webkitGetAsEntry()&lt;/code&gt;&lt;/a&gt; method to obtain a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt;&lt;code&gt;FileSystemEntry&lt;/code&gt;&lt;/a&gt; representing the file. If that's successful, we call &lt;code&gt;scanFiles()&lt;/code&gt; to process the item&amp;mdash;either by adding it to the list if it's just a file or by adding it and walking down into it if it's a directory.</source>
          <target state="translated">次に、ドロップされたアイテムのリスト内のアイテムを反復処理します。それぞれについて、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem/webkitGetAsEntry&quot;&gt; &lt;code&gt;webkitGetAsEntry()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、ファイルを表す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry&quot;&gt; &lt;code&gt;FileSystemEntry&lt;/code&gt; &lt;/a&gt;を取得します。それが成功した場合は、 &lt;code&gt;scanFiles()&lt;/code&gt; を呼び出してアイテムを処理します。ファイルのみの場合はリストに追加するか、ディレクトリの場合は追加してそこに移動します。</target>
        </trans-unit>
        <trans-unit id="1fa678caeaf8d8098cfaf0d90e77c6ddd6d3b836" translate="yes" xml:space="preserve">
          <source>Then we load a new ad by calling &lt;code&gt;&lt;a href=&quot;#Creating_an_ad&quot;&gt;loadRandomAd()&lt;/a&gt;&lt;/code&gt;, specifying the ad to be replaced as an input parameter. As we saw previously, &lt;code&gt;loadRandomAd()&lt;/code&gt; will replace an existing ad with content and data corresponding to a new ad, if you specify an existing ad's element as an input parameter.</source>
          <target state="translated">次に、 &lt;code&gt;&lt;a href=&quot;#Creating_an_ad&quot;&gt;loadRandomAd()&lt;/a&gt;&lt;/code&gt; を呼び出して新しい広告をロードし、置換する広告を入力パラメーターとして指定します。以前に見たように、既存の広告の要素を入力パラメーターとして指定すると、 &lt;code&gt;loadRandomAd()&lt;/code&gt; は既存の広告を新しい広告に対応するコンテンツとデータに置き換えます。</target>
        </trans-unit>
        <trans-unit id="aab9feff38d88a71e4c7eadeb706c569fe794f63" translate="yes" xml:space="preserve">
          <source>Then we run a simple &lt;code&gt;spawnNotification()&lt;/code&gt; function when we want to fire a notification &amp;mdash; this is passed arguments to specify the body, icon, and title we want. Then it creates the necessary &lt;code&gt;options&lt;/code&gt; object and fires the notification using the &lt;a href=&quot;notification/notification&quot;&gt;&lt;code&gt;Notification()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">次に、通知を &lt;code&gt;spawnNotification()&lt;/code&gt; するときに単純なspawnNotification（）関数を実行します。これには、必要な本文、アイコン、タイトルを指定する引数が渡されます。次に、必要な &lt;code&gt;options&lt;/code&gt; オブジェクトを作成し、&lt;a href=&quot;notification/notification&quot;&gt; &lt;code&gt;Notification()&lt;/code&gt; &lt;/a&gt;コンストラクタを使用して通知を発行します。</target>
        </trans-unit>
        <trans-unit id="3c341f3c48f42e66500ba5843dfb7cdee35f6eb1" translate="yes" xml:space="preserve">
          <source>Then we set up a promise which resolves when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/onloadedmetadata&quot;&gt;onloadedmetadata&lt;/a&gt;&lt;/code&gt; event occurs on the video element.</source>
          <target state="translated">次に、ビデオ要素で &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/onloadedmetadata&quot;&gt;onloadedmetadata&lt;/a&gt;&lt;/code&gt; イベントが発生したときに解決するpromiseを設定します。</target>
        </trans-unit>
        <trans-unit id="a66016707b10ed23ac1bbd3b14d25050088a377c" translate="yes" xml:space="preserve">
          <source>Then we set up the &lt;code&gt;handleCancelEvent()&lt;/code&gt; function, which is called in response to the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/animationcancel&quot;&gt;animationcancel&lt;/a&gt;&lt;/code&gt; event, as set up in the HTML above. All we do here is log information to the console, but you might find other use cases, such as starting a new animation or effect, or terminating some dependent operation.</source>
          <target state="translated">次に、上のHTMLで設定したように、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/animationcancel&quot;&gt;animationcancel&lt;/a&gt;&lt;/code&gt; イベントに応答して呼び出される &lt;code&gt;handleCancelEvent()&lt;/code&gt; 関数を設定します。ここで行うのはコンソールへのログ情報だけですが、新しいアニメーションやエフェクトを開始したり、依存している操作を終了したりするなど、他のユースケースが見つかる場合があります。</target>
        </trans-unit>
        <trans-unit id="11b4d5f5e9775278a440bf0d6eb6f38002042e5c" translate="yes" xml:space="preserve">
          <source>Then we set up the event handlers for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/animationstart&quot;&gt;animationstart&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/animationend&quot;&gt;animationend&lt;/a&gt;&lt;/code&gt; events:</source>
          <target state="translated">その後、我々はのためのイベントハンドラの設定 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/animationstart&quot;&gt;animationstart&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/animationend&quot;&gt;animationend&lt;/a&gt;&lt;/code&gt; イベント：</target>
        </trans-unit>
        <trans-unit id="0735d8dd98e3e3e9882f8a98c4817ab28ccbc2a0" translate="yes" xml:space="preserve">
          <source>Then we set up the handler for the stop button.</source>
          <target state="translated">そして、停止ボタンのハンドラを設定します。</target>
        </trans-unit>
        <trans-unit id="604a1e31d8468b9f6570da59a0a95fb60b4800eb" translate="yes" xml:space="preserve">
          <source>Then we start a loop to create the actual tasks. For each task, we create an object, &lt;code&gt;taskData&lt;/code&gt;, which includes two properties:</source>
          <target state="translated">次に、ループを開始して実際のタスクを作成します。タスクごとに、2つのプロパティを含む &lt;code&gt;taskData&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="1403c2466d0224f613b0b7e4cac8f04d0610edd2" translate="yes" xml:space="preserve">
          <source>Then we update the vertex shader to adjust the color of each vertex, taking into account the ambient lighting as well as the effect of the directional lighting given the angle at which it's striking the face. We'll see how to do that when we look at the code for the shader.</source>
          <target state="translated">次に、各頂点の色を調整するために頂点シェーダを更新し、周囲の照明と、顔に当たる角度に応じた指向性照明の効果を考慮に入れます。シェーダのコードを見て、その方法を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="a66f5af2ceb219d741249c19b08e92d05407465d" translate="yes" xml:space="preserve">
          <source>Then we use this as the event handler for a number of mouse events on the box that contains our log:</source>
          <target state="translated">そして、これをログを含むボックス上のマウスイベントのイベントハンドラとして使用します。</target>
        </trans-unit>
        <trans-unit id="108dd2a5c9a6aeedc15352c26867944d0b76d5ce" translate="yes" xml:space="preserve">
          <source>Then we'll create variables to define how far ahead we want to look, and how far ahead we want to schedule:</source>
          <target state="translated">あとは、どこまで先を見たいか、どこまで先を予定したいかを定義するための変数を作成します。</target>
        </trans-unit>
        <trans-unit id="8f402618c1ac3776c6527644fccad2af35bbc747" translate="yes" xml:space="preserve">
          <source>Then you can send it using code like the following:</source>
          <target state="translated">そして、以下のようなコードを使って送信します。</target>
        </trans-unit>
        <trans-unit id="09685dce7684213f479cedfeedca00aa1f34511d" translate="yes" xml:space="preserve">
          <source>Then you use &lt;a href=&quot;../../canvasrenderingcontext2d#Paths&quot;&gt;drawing commands&lt;/a&gt; to draw into the path.</source>
          <target state="translated">次に、&lt;a href=&quot;../../canvasrenderingcontext2d#Paths&quot;&gt;描画コマンド&lt;/a&gt;を使用してパスに描画します。</target>
        </trans-unit>
        <trans-unit id="71259e35f23602729e8a24a7846902a219139a4e" translate="yes" xml:space="preserve">
          <source>Then, drawScene() can be revised to actually use these colors when drawing the square:</source>
          <target state="translated">そして、drawScene()を修正して、正方形を描画するときに実際にこれらの色を使用するようにすることができます。</target>
        </trans-unit>
        <trans-unit id="9a11e7fbe5bfb6db8b29dec6c7f9587e130492e5" translate="yes" xml:space="preserve">
          <source>Then, finally, each &lt;code&gt;RTCPeerConnection&lt;/code&gt; is closed by calling its &lt;a href=&quot;../rtcpeerconnection/close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">次に、最後に、各 &lt;code&gt;RTCPeerConnection&lt;/code&gt; は、その&lt;a href=&quot;../rtcpeerconnection/close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことによって閉じられます。</target>
        </trans-unit>
        <trans-unit id="0a51a2e891e28207e198c64fd8e8f61c87610ecc" translate="yes" xml:space="preserve">
          <source>Then, for each of the visible ads, we save the value of &lt;code&gt;dataset.totalViewTime&lt;/code&gt; (the total number of milliseconds the ad has currently been visible, as of the last time it was updated) and then call &lt;code&gt;updateAdTimer()&lt;/code&gt; to update the time. If it's changed, then we push the ad onto the &lt;code&gt;redrawList&lt;/code&gt; so we know it needs to be updated during the next animation frame.</source>
          <target state="translated">次に、表示される各広告について、 &lt;code&gt;dataset.totalViewTime&lt;/code&gt; の値（広告が最後に更新された時点で現在表示されているミリ秒数の合計）を保存してから、 &lt;code&gt;updateAdTimer()&lt;/code&gt; を呼び出して時間を更新します。変更されている場合は、広告を &lt;code&gt;redrawList&lt;/code&gt; にプッシュして、次のアニメーションフレーム中に更新する必要があることを確認します。</target>
        </trans-unit>
        <trans-unit id="35e1939a4d46737dbf396926fe1876fba57646f0" translate="yes" xml:space="preserve">
          <source>Then, for each shader in the specified list of shaders, we call a &lt;code&gt;compileShader()&lt;/code&gt; function to compile it, passing into it the ID and type of the shader function to build. Each of those objects includes, as mentioned before, the ID of the &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element the shader code is found in and the type of shader it is. The compiled shader is attached to the shader program by passing it into &lt;a href=&quot;../webglrenderingcontext/attachshader&quot;&gt;&lt;code&gt;gl.attachShader()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次に、指定されたシェーダーのリスト内の各シェーダーについて、 &lt;code&gt;compileShader()&lt;/code&gt; 関数を呼び出してコンパイルし、ビルドするシェーダー関数のIDとタイプをそれに渡します。これらの各オブジェクトには、前述のように、シェーダーコードが含まれる &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 要素のIDと、シェーダーのタイプが含まれています。コンパイルされたシェーダーは、それを&lt;a href=&quot;../webglrenderingcontext/attachshader&quot;&gt; &lt;code&gt;gl.attachShader()&lt;/code&gt; に&lt;/a&gt;渡すことにより、シェーダープログラムにアタッチされます。</target>
        </trans-unit>
        <trans-unit id="d6df3268da39c20a4cabf189c0c5da2e70c06abf" translate="yes" xml:space="preserve">
          <source>Then, if the width and height are both non-zero (meaning that there's at least potentially valid image data), we set the width and height of the canvas to match that of the captured frame, then call &lt;a href=&quot;../canvasrenderingcontext2d/drawimage&quot;&gt;&lt;code&gt;drawImage()&lt;/code&gt;&lt;/a&gt; to draw the current frame of the video into the context, filling the entire canvas with the frame image.</source>
          <target state="translated">次に、幅と高さが両方ともゼロ以外の場合（つまり、有効な可能性のある画像データがあることを意味します）、キャンバスの幅と高さをキャプチャしたフレームの幅と高さに合わせてから、&lt;a href=&quot;../canvasrenderingcontext2d/drawimage&quot;&gt; &lt;code&gt;drawImage()&lt;/code&gt; &lt;/a&gt;を呼び出して現在のビデオのフレームをコンテキストに挿入し、キャンバス全体をフレーム画像で塗りつぶします。</target>
        </trans-unit>
        <trans-unit id="72c780a88e61271aa004b3b314b195840f42d571" translate="yes" xml:space="preserve">
          <source>Then, if there's text waiting to be added to the log (that is, if &lt;code&gt;logFragment&lt;/code&gt; isn't &lt;code&gt;null&lt;/code&gt;), we append it to the log element using &lt;a href=&quot;node/appendchild&quot;&gt;&lt;code&gt;Element.appendChild()&lt;/code&gt;&lt;/a&gt; and set &lt;code&gt;logFragment&lt;/code&gt; to &lt;code&gt;null&lt;/code&gt; so we don't add it again.</source>
          <target state="translated">次に、ログへの追加を待機しているテキストがある場合（つまり、 &lt;code&gt;logFragment&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; でない場合）、&lt;a href=&quot;node/appendchild&quot;&gt; &lt;code&gt;Element.appendChild()&lt;/code&gt; &lt;/a&gt;を使用してログ要素に追加し、 &lt;code&gt;logFragment&lt;/code&gt; を &lt;code&gt;null&lt;/code&gt; に設定して、再度追加しないようにします。 。</target>
        </trans-unit>
        <trans-unit id="d24b070c8c4ea03202b24bd6b5ffe5ce64011b78" translate="yes" xml:space="preserve">
          <source>Then, we specify the memory layout of the array buffer, either by setting the index ourselves:</source>
          <target state="translated">そして、配列バッファのメモリレイアウトを自分たちでインデックスを設定して指定します。</target>
        </trans-unit>
        <trans-unit id="b2380803b7341195c89f52e8ee28d858d6f6dcd2" translate="yes" xml:space="preserve">
          <source>Then, when you want to create an actual event listener that uses the options in question, you can do something like this:</source>
          <target state="translated">そして、問題のオプションを使用する実際のイベントリスナーを作成したい場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="f00097a2997c3a92be7ab03028702730bc13eb0d" translate="yes" xml:space="preserve">
          <source>There also is the &lt;a href=&quot;range/range&quot;&gt;&lt;code&gt;Range()&lt;/code&gt;&lt;/a&gt; constructor available.</source>
          <target state="translated">あり、&lt;a href=&quot;range/range&quot;&gt; &lt;code&gt;Range()&lt;/code&gt; &lt;/a&gt;可能なコンストラクタが。</target>
        </trans-unit>
        <trans-unit id="00a3e42d0c4c00462f325126c594f81877ecf3b5" translate="yes" xml:space="preserve">
          <source>There are 3 ways to register event handlers for a DOM element.</source>
          <target state="translated">DOM 要素のイベントハンドラを登録する方法は 3 つあります。</target>
        </trans-unit>
        <trans-unit id="0b8d850477653d483a6766cc99537595f8e63068" translate="yes" xml:space="preserve">
          <source>There are a myriad of video and audio codecs. Different browsers support different media types and new media types are always being developed. With the Media Capabilities API, developers can ensure each user is getting the best bitrate and storage savings for their browser, device, and OS capabilities.</source>
          <target state="translated">ビデオやオーディオのコーデックは無数にあります。ブラウザによってサポートするメディアの種類が異なり、常に新しいメディアの種類が開発されています。Media Capabilities APIを使用することで、開発者は各ユーザーがそれぞれのブラウザ、デバイス、OSの機能に最適なビットレートとストレージの節約を確実に得ることができます。</target>
        </trans-unit>
        <trans-unit id="1931e678d678ba2fc610140e2d6f32ea111b3b14" translate="yes" xml:space="preserve">
          <source>There are a number of additional events you can set listeners for which notifying your code of a variety of state changes. We use three of them: &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icegatheringstatechange&quot;&gt;icegatheringstatechange&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/signalingstatechange&quot;&gt;signalingstatechange&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">さまざまな状態変化をコードに通知するリスナーを設定できる追加のイベントがいくつかあります。私たちは、それらの3を使用します。 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icegatheringstatechange&quot;&gt;icegatheringstatechange&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/signalingstatechange&quot;&gt;signalingstatechange&lt;/a&gt;&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="89717d276f982e422b611c64e6faae73b1c4f99a" translate="yes" xml:space="preserve">
          <source>There are a number of other convenience methods belonging to the &lt;a href=&quot;../htmltableelement#Methods&quot;&gt;table interface&lt;/a&gt; that can be used for creating and modifying tables.</source>
          <target state="translated">テーブルの作成と変更に使用できる、&lt;a href=&quot;../htmltableelement#Methods&quot;&gt;テーブルインターフェースに&lt;/a&gt;属する他の便利なメソッドがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="22574341e25eaafcc3aa29306a7e17f7ba405e94" translate="yes" xml:space="preserve">
          <source>There are a number of reasons why a timeout may take longer to fire than anticipated. This section describes the most common reasons.</source>
          <target state="translated">タイムアウトが発生した場合、予想よりも発射までに時間がかかる理由はいくつかあります。このセクションでは、最も一般的な理由を説明します。</target>
        </trans-unit>
        <trans-unit id="ad25db404365aac6ca42c02f76f58299c62e11a5" translate="yes" xml:space="preserve">
          <source>There are a number of small differences between the terminology used in CSS Animations and the terminology used in Web Animations. For instance, Web Animations doesn't use the string &lt;code&gt;&quot;infinite&quot;&lt;/code&gt;, but instead uses the JavaScript keyword &lt;code&gt;Infinity&lt;/code&gt;. And instead of &lt;code&gt;timing-function&lt;/code&gt; we use &lt;code&gt;easing&lt;/code&gt;. We aren&amp;rsquo;t listing an &lt;code&gt;easing&lt;/code&gt; value here because, unlike CSS Animations where the default &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function&quot;&gt;animation-timing-function&lt;/a&gt; is &lt;code&gt;ease&lt;/code&gt;, in the Web Animations API the default easing is &lt;code&gt;linear&lt;/code&gt; &amp;mdash; which is what we want here.</source>
          <target state="translated">CSSアニメーションで使用される用語とWebアニメーションで使用される用語の間には、いくつかの小さな違いがあります。たとえば、Webアニメーションは文字列 &lt;code&gt;&quot;infinite&quot;&lt;/code&gt; を使用せず、代わりにJavaScriptキーワード &lt;code&gt;Infinity&lt;/code&gt; を使用します。そして、 &lt;code&gt;timing-function&lt;/code&gt; 代わりに &lt;code&gt;easing&lt;/code&gt; を使用します。ここでは &lt;code&gt;easing&lt;/code&gt; 値を示していません。これは、デフォルトの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function&quot;&gt;animation-timing-function&lt;/a&gt;が &lt;code&gt;ease&lt;/code&gt; であるCSSアニメーションとは異なり、Web Animations APIではデフォルトのイージングが &lt;code&gt;linear&lt;/code&gt; ためです。</target>
        </trans-unit>
        <trans-unit id="8144c31e121c950c378250d01bb0d00bd63af0b1" translate="yes" xml:space="preserve">
          <source>There are a number of tags, such as &lt;code&gt;&amp;lt;bold&amp;gt;&lt;/code&gt;, that can be used. However, if the WebVTT file is used in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track&quot;&gt;&lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt;&lt;/a&gt; element where the attribute &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-kind&quot;&gt;kind&lt;/a&gt;&lt;/code&gt; is &lt;code&gt;chapters&lt;/code&gt; then you cannot use tags.</source>
          <target state="translated">&lt;code&gt;&amp;lt;bold&amp;gt;&lt;/code&gt; など、使用できるタグは多数あります。ただし、属性の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-kind&quot;&gt;kind&lt;/a&gt;&lt;/code&gt; が &lt;code&gt;chapters&lt;/code&gt; である&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track&quot;&gt; &lt;code&gt;&amp;lt;track&amp;gt;&lt;/code&gt; &lt;/a&gt;要素でWebVTTファイルが使用されている場合は、タグを使用できません。</target>
        </trans-unit>
        <trans-unit id="2e5954040494bc061b63a97829220164590fd742" translate="yes" xml:space="preserve">
          <source>There are a number of web technologies that store data of one kind or another on the client side (i.e. on your local disk). IndexedDB is the most commonly talked about one. The process by which the browser works out how much space to allocate to web data storage and what to delete when that limit is reached is not simple, and differs between browsers. &lt;a href=&quot;indexeddb_api/browser_storage_limits_and_eviction_criteria&quot;&gt;Browser storage limits and eviction criteria&lt;/a&gt; attempts to explain how this works, at least in the case of Firefox.</source>
          <target state="translated">クライアント側（ローカルディスクなど）には、さまざまな種類のデータを格納する多くのWebテクノロジーがあります。IndexedDBが最も一般的に話題になっています。ブラウザーがWebデータストレージに割り当てる容量と、その制限に達したときに何を削除するかを決定するプロセスは単純ではなく、ブラウザーによって異なります。&lt;a href=&quot;indexeddb_api/browser_storage_limits_and_eviction_criteria&quot;&gt;ブラウザのストレージ制限と立ち退き基準&lt;/a&gt;は、少なくともFirefoxの場合、これがどのように機能するかを説明しようとします。</target>
        </trans-unit>
        <trans-unit id="5bf1d296282c261a212324cd21e256ba8c09d075" translate="yes" xml:space="preserve">
          <source>There are a number of web technologies that store data of one kind or another on the client-side (i.e., on your local disk). The process by which the browser works out how much space to allocate to web data storage and what to delete when that limit is reached is not simple, and differs between browsers. This article describes how browsers determine what local content to purge and when in order to free up needed local storage space.</source>
          <target state="translated">ある種のデータをクライアント側(つまりローカルディスク)に保存するウェブ技術は数多く存在します。ブラウザがどのくらいの容量をウェブ データ ストレージに割り当てるか、そしてその上限に達したときに何を削除するかを判断するプロセスは単純ではなく、ブラウザによって異なります。この記事では、必要なローカルストレージの空き容量を確保するために、どのローカルコンテンツをいつ削除するかをブラウザが決定する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="94a7efe591dcd23f6d4c64e8090e24d8c22b5142" translate="yes" xml:space="preserve">
          <source>There are a series of methods available in the &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; interface that allow you to control recording of the media stream; in Web Dictaphone we just make use of two, and listen to some events. First of all, &lt;a href=&quot;../mediarecorder/start&quot;&gt;&lt;code&gt;MediaRecorder.start()&lt;/code&gt;&lt;/a&gt; is used to start recording the stream once the record button is pressed:</source>
          <target state="translated">&lt;a href=&quot;../mediarecorder&quot;&gt; &lt;code&gt;MediaRecorder&lt;/code&gt; &lt;/a&gt;インターフェイスには、メディアストリームの記録を制御できる一連のメソッドがあります。Webディクタフォンでは、2つを使用して、いくつかのイベントをリッスンします。まず、&lt;a href=&quot;../mediarecorder/start&quot;&gt; &lt;code&gt;MediaRecorder.start()&lt;/code&gt; &lt;/a&gt;を使用して、記録ボタンが押されるとストリームの記録を開始します。</target>
        </trans-unit>
        <trans-unit id="7ce68cf04ecfe9f502e28d9e9c92412d25939900" translate="yes" xml:space="preserve">
          <source>There are a several exceptions which can occur when you attempt to change an index's name.</source>
          <target state="translated">インデックスの名前を変更しようとすると、いくつかの例外が発生します。</target>
        </trans-unit>
        <trans-unit id="ed02c1cefa1ec48600687d90fb6239b2cc8addfc" translate="yes" xml:space="preserve">
          <source>There are a several exceptions which can occur when you attempt to change an object store's name.</source>
          <target state="translated">オブジェクトストアの名前を変更しようとすると、いくつかの例外が発生します。</target>
        </trans-unit>
        <trans-unit id="b7cd4c1e4d12654f58b17c7a2bf08ed0ab9fce9e" translate="yes" xml:space="preserve">
          <source>There are a variety of demos and further explanations about canvas on these sites:</source>
          <target state="translated">これらのサイトには、キャンバスに関する様々なデモや詳しい説明が掲載されています。</target>
        </trans-unit>
        <trans-unit id="692ea6c982466d27e8fae0cac66f6b904c8f3a64" translate="yes" xml:space="preserve">
          <source>There are also Gecko-Specific &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOM Events&lt;/a&gt; like &lt;code&gt;DOMContentLoaded&lt;/code&gt; and &lt;code&gt;DOMFrameContentLoaded&lt;/code&gt; (which can be handled using &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt;) which are fired after the DOM for the page has been constructed, but do not wait for other resources to finish loading.</source>
          <target state="translated">&lt;code&gt;DOMContentLoaded&lt;/code&gt; や &lt;code&gt;DOMFrameContentLoaded&lt;/code&gt; などのGecko固有の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events&quot;&gt;DOMイベント&lt;/a&gt;（&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;EventTarget.addEventListener()&lt;/code&gt; &lt;/a&gt;を使用して処理できます）もあり、ページのDOMが構築された後に発生しますが、他のリソースがロードを完了するのを待ちません。</target>
        </trans-unit>
        <trans-unit id="4e5a8ff61bcfbd8c4c9549993dd0c5096a99e5af" translate="yes" xml:space="preserve">
          <source>There are cases in which you may want to add a file to an existing drag event session, and you may also want to write the file to disk when the drop operation happens over a folder in the operating system when your code receives notification of the target folder's location. This only works in extensions (or other privileged code) and the data type &quot;application/moz-file-promise&quot; should be used. The following sample offers an overview of this advanced case:</source>
          <target state="translated">既存のドラッグイベントセッションにファイルを追加したい場合もあるでしょうし、コードがターゲットフォルダの場所の通知を受け取ったときに、ドロップ操作がオペレーティングシステム上のフォルダの上で発生したときに、ファイルをディスクに書き込みたい場合もあるでしょう。これは拡張機能(またはその他の特権コード)でのみ動作し、データ型「application/moz-file-promise」を使用する必要があります。次のサンプルでは、この高度なケースの概要を説明します。</target>
        </trans-unit>
        <trans-unit id="68322449fcdf309003ef428b2a57e3aa27c57ed1" translate="yes" xml:space="preserve">
          <source>There are few steps that can be followed to write a simple webVTT file. Before start, it must be noted that you can make use of a notepad and then save the file as &amp;lsquo;.vtt&amp;rsquo; file. Steps are given below:</source>
          <target state="translated">単純なwebVTTファイルを書き込むために実行できるいくつかの手順があります。開始する前に、メモ帳を使用してファイルを「.vtt」ファイルとして保存できることに注意してください。手順は以下のとおりです。</target>
        </trans-unit>
        <trans-unit id="a4e16b41d396e4ff1f8bbbd42b27c140f721dcd9" translate="yes" xml:space="preserve">
          <source>There are four different sounds, or voices, which can be played. Each voice has four buttons, which represent four beats in one bar of music. When they are enabled the note will sound. When the instrument plays, it will move across this set of beats and loop the bar.</source>
          <target state="translated">4つの異なる音、つまりボイスがあり、それを再生することができます。それぞれの音色には4つのボタンがあり、音楽の1小節の4つの拍子を表します。これらのボタンが有効になっていると、音符が鳴ります。楽器が演奏されると、この拍子のセットを横切って移動し、小節をループさせます。</target>
        </trans-unit>
        <trans-unit id="6260e8ae6416b69d3bade48189d8fe2236aad51c" translate="yes" xml:space="preserve">
          <source>There are four main ways to load sound with the Web Audio API and it can be a little confusing as to which one you should use.</source>
          <target state="translated">Web Audio APIを使ってサウンドをロードするには、主に4つの方法があり、どれを使えばいいのか少し混乱してしまいます。</target>
        </trans-unit>
        <trans-unit id="0c20dde9b1d72fffc7b03d389a257b75fcdaacae" translate="yes" xml:space="preserve">
          <source>There are many APIs which provide ways for Web content to store data on a user's computer, including &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/cookies&quot;&gt;cookies&lt;/a&gt;, the Web Storage API (&lt;a href=&quot;window/localstorage&quot;&gt;&lt;code&gt;Window.localStorage&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;window/sessionstorage&quot;&gt;&lt;code&gt;Window.sessionStorage&lt;/code&gt;&lt;/a&gt;), and &lt;a href=&quot;indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt;. The Storage Standard is designed to serve as a common basis for the implementation of all of those APIs and storage technologies, so that their constraints and configurations can be understood and controlled using a common set of methods and properties.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/cookies&quot;&gt;Cookie&lt;/a&gt;、Web Storage API（&lt;a href=&quot;window/localstorage&quot;&gt; &lt;code&gt;Window.localStorage&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;window/sessionstorage&quot;&gt; &lt;code&gt;Window.sessionStorage&lt;/code&gt; &lt;/a&gt;）、&lt;a href=&quot;indexeddb_api&quot;&gt;IndexedDB &lt;/a&gt;など、Webコンテンツがユーザーのコンピューターにデータを保存する方法を提供する多くのAPIがあります。ストレージ標準は、それらすべてのAPIとストレージテクノロジーの実装の共通基盤として機能するように設計されているため、共通のメソッドとプロパティのセットを使用して、それらの制約と構成を理解および制御できます。</target>
        </trans-unit>
        <trans-unit id="d588489c98f52256af7d16f39154311e0b1e0b95" translate="yes" xml:space="preserve">
          <source>There are many reasons why calls may end. A call might have completed, with one or both sides having hung up. Perhaps a network failure has occurred, or one user might have quit their browser, or had a system crash. In any case, all good things must come to an end.</source>
          <target state="translated">通話が終了する理由はたくさんあります。通話が終了し、一方または双方が電話を切ってしまった可能性があります。ネットワーク障害が発生したのかもしれませんし、一方のユーザーがブラウザを終了したり、システムがクラッシュしたりしたのかもしれません。いずれにしても、すべての良いことには終わりがあります。</target>
        </trans-unit>
        <trans-unit id="16d576127d96fa8def05cbfe0085e7e1086b5010" translate="yes" xml:space="preserve">
          <source>There are many types of matrices, but the ones we are interested in are the 3D transformation matrices. These matrices consist of a set of 16 values arranged in a 4x4 grid. In JavaScript, it is easy to represent a matrix as an array. The typical starting point is to show the identity matrix. When this matrix is multiplied against another point or matrix then the result will be identical.</source>
          <target state="translated">行列には多くの種類がありますが、我々が興味を持っているのは3次元変換行列です。これらの行列は、4x4のグリッドに配置された16個の値の集合で構成されています。JavaScriptでは、行列を配列として表現するのは簡単です。典型的な出発点は、同一性行列を示すことです。この行列を別の点や行列と掛け合わせると、結果は同じになります。</target>
        </trans-unit>
        <trans-unit id="59ea919ed600d5c9b30e772f7cb93629315c1991" translate="yes" xml:space="preserve">
          <source>There are more advantages too &amp;mdash; you can detect when streams start or end, chain streams together, handle errors and cancel streams as required, and react to the speed the stream is being read at.</source>
          <target state="translated">さらに多くの利点もあります。ストリームの開始または終了を検出し、ストリームをチェーン化し、必要に応じてエラーを処理し、ストリームをキャンセルし、ストリームの読み取り速度に対応できます。</target>
        </trans-unit>
        <trans-unit id="c9d0d5268d4f571ea7d2bbd0bd953afc1fa56dbd" translate="yes" xml:space="preserve">
          <source>There are multiple properties in the CSSOM that will return a &lt;code&gt;CSSRuleList&lt;/code&gt;. They are:</source>
          <target state="translated">戻りますCSSOM内に複数のプロパティがあります &lt;code&gt;CSSRuleList&lt;/code&gt; は。彼らです：</target>
        </trans-unit>
        <trans-unit id="5111fa0e194dd742756bc923d13848c78ef810ae" translate="yes" xml:space="preserve">
          <source>There are no &lt;code&gt;2x2&lt;/code&gt;, &lt;code&gt;3x3&lt;/code&gt;, and &lt;code&gt;4x4&lt;/code&gt; versions of this method. They are abbreviated in &lt;code&gt;2&lt;/code&gt;, &lt;code&gt;3&lt;/code&gt;, and &lt;code&gt;4&lt;/code&gt;, respectively. See the syntax below.</source>
          <target state="translated">何もありません &lt;code&gt;2x2&lt;/code&gt; の、 &lt;code&gt;3x3&lt;/code&gt; の、および &lt;code&gt;4x4&lt;/code&gt; のこのメソッドのバージョンでは。彼らはに略記されている &lt;code&gt;2&lt;/code&gt; 、 &lt;code&gt;3&lt;/code&gt; 、及び &lt;code&gt;4&lt;/code&gt; それぞれ。以下の構文を参照してください。</target>
        </trans-unit>
        <trans-unit id="0a61e6e0de8f55794c39c18b20c0307a07bd630a" translate="yes" xml:space="preserve">
          <source>There are no object of this type, but several interface are implemented it, like &lt;a href=&quot;workerlocation&quot;&gt;&lt;code&gt;WorkerLocation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このタイプのオブジェクトはありませんが、&lt;a href=&quot;workerlocation&quot;&gt; &lt;code&gt;WorkerLocation&lt;/code&gt; の&lt;/a&gt;ようないくつかのインターフェースが実装されています。</target>
        </trans-unit>
        <trans-unit id="359ce73d9363164551ed8ba8e9f3c9a0e18dbffd" translate="yes" xml:space="preserve">
          <source>There are no objects of this type, but several objects &lt;a href=&quot;htmlanchorelement&quot;&gt;&lt;code&gt;HTMLAnchorElement&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;htmlareaelement&quot;&gt;&lt;code&gt;HTMLAreaElement&lt;/code&gt;&lt;/a&gt; implement it.</source>
          <target state="translated">このタイプのオブジェクトはありませんが、いくつかのオブジェクト&lt;a href=&quot;htmlanchorelement&quot;&gt; &lt;code&gt;HTMLAnchorElement&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;htmlareaelement&quot;&gt; &lt;code&gt;HTMLAreaElement&lt;/code&gt; &lt;/a&gt;がそれを実装しています。</target>
        </trans-unit>
        <trans-unit id="44d970cfa63ed88f417d531f2fc799f4a0114c41" translate="yes" xml:space="preserve">
          <source>There are now &lt;a href=&quot;https://addons.mozilla.org/seamonkey/browse/type:1/cat:48/sort:updated&quot;&gt;several Mozilla extensions&lt;/a&gt; (like Multizilla) and &lt;a href=&quot;https://addons.update.mozilla.org/firefox/browse/type:1/cat:14/sort:updated&quot;&gt;Firefox extensions&lt;/a&gt; (like &lt;a href=&quot;https://addons.mozilla.org/firefox/addon/158&quot;&gt;Tabbrowser preferences&lt;/a&gt;), features, settings and advanced preferences based on tab-browsing and based on converting window.open() calls into opening tabs, based on neutralizing window.open() calls, in particular in neutralizing unrequested openings of new windows (often referred as blocking unrequested popups or as blocking script-initiated windows opening automatically). Such features found in extensions include opening a link in a new window or not, in the same window, in a new tab or not, in &quot;background&quot; or not. Coding carelessly to open new windows can no longer be assured of success, can not succeed by force and, if it does, it will annoy a majority of users.</source>
          <target state="translated">現在、&lt;a href=&quot;https://addons.mozilla.org/seamonkey/browse/type:1/cat:48/sort:updated&quot;&gt;いくつかのMozilla拡張機能&lt;/a&gt;（Multizillaなど）と&lt;a href=&quot;https://addons.update.mozilla.org/firefox/browse/type:1/cat:14/sort:updated&quot;&gt;Firefox拡張機能&lt;/a&gt;（&lt;a href=&quot;https://addons.mozilla.org/firefox/addon/158&quot;&gt;Tabbrowserプリファレンスなど&lt;/a&gt;）、機能、設定、およびタブブラウジングに基づく、window.open（）呼び出しの無効化window.openに基づくオープンタブへの変換に基づく詳細設定があります。 （）呼び出し、特に新しいウィンドウの要求されていないオープンを無力化する（しばしば、要求されていないポップアップのブロックまたはスクリプトで開始されたウィンドウの自動オープンのブロックと呼ばれる）。拡張機能にあるこのような機能には、リンクを新しいウィンドウで開くかどうか、同じウィンドウで新しいタブで開くかどうか、「バックグラウンド」で開くかどうかなどがあります。不注意に新しいウィンドウを開くようにコーディングすると、成功を保証できなくなり、無理に成功することはできなくなります。成功した場合、大多数のユーザーを困らせます。</target>
        </trans-unit>
        <trans-unit id="4a6aff8ecb8050b47f943057e1663211aaebfa19" translate="yes" xml:space="preserve">
          <source>There are numerous available free and open source tools for transcoding content and preparing it for use with DASH, DASH file servers, and DASH client libraries written in JavaScript.</source>
          <target state="translated">コンテンツをトランスコードし、DASH、DASHファイルサーバ、JavaScriptで書かれたDASHクライアントライブラリで使用するための準備をするためのフリーでオープンソースのツールが多数あります。</target>
        </trans-unit>
        <trans-unit id="1545017aa57829338fb46e792580222648e8b6c9" translate="yes" xml:space="preserve">
          <source>There are only two more lines of code in the &lt;code&gt;startup()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;startup()&lt;/code&gt; メソッドには、あと2行のコードしかありません。</target>
        </trans-unit>
        <trans-unit id="e6ba5455e43cd22b03a476f7f9eb781e9945b7d1" translate="yes" xml:space="preserve">
          <source>There are other examples available to learn more about the Web Audio API.</source>
          <target state="translated">Web Audio APIの詳細については、他にも例があります。</target>
        </trans-unit>
        <trans-unit id="a69ffb49cfc0479793e0ff1f560bcaa33d4fb4d4" translate="yes" xml:space="preserve">
          <source>There are other techniques used to ensure that data is submitted. One such technique is to delay the unload to submit data by creating an Image element and setting its &lt;code&gt;src&lt;/code&gt; attribute within the unload handler. As most user agents will delay the unload to complete the pending image load, data can be submitted during the unload. Another technique is to create a no-op loop for several seconds within the unload handler to delay the unload and submit data to a server.</source>
          <target state="translated">データが確実に送信されるようにするために使用される他の手法があります。そのような手法の1つは、Image要素を作成し、アンロードハンドラー内でその &lt;code&gt;src&lt;/code&gt; 属性を設定することにより、アンロードを遅らせてデータを送信することです。ほとんどのユーザーエージェントはアンロードを遅らせて保留中のイメージのロードを完了するため、アンロード中にデータを送信できます。別の手法は、アンロードハンドラ内で数秒間no-opループを作成して、アンロードを遅延させ、データをサーバーに送信することです。</target>
        </trans-unit>
        <trans-unit id="bc2a72228882c9130903a2502017ede25275949f" translate="yes" xml:space="preserve">
          <source>There are other workaround techniques which have been used to ensure that this kind of data is submitted. One such technique is to delay the unload in order to submit data by creating an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element and setting its &lt;code&gt;src&lt;/code&gt; attribute within the unload handler. As most user agents will delay the unload to complete the pending image load, data can be submitted during the unload. Another technique is to create a no-op loop for several seconds within the unload handler to delay the unload and submit data to a server.</source>
          <target state="translated">この種のデータを確実に送信するために使用されている回避策は他にもあります。そのような手法の1つは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成し、アンロードハンドラー内でその &lt;code&gt;src&lt;/code&gt; 属性を設定することにより、データを送信するためにアンロードを遅らせることです。ほとんどのユーザーエージェントはアンロードを遅らせて保留中のイメージのロードを完了するため、アンロード中にデータを送信できます。別の手法は、アンロードハンドラ内で数秒間no-opループを作成して、アンロードを遅延させ、データをサーバーに送信することです。</target>
        </trans-unit>
        <trans-unit id="dfe3576f13f4523b73d03efd0070bfb604609443" translate="yes" xml:space="preserve">
          <source>There are several fallback scripts listed on &lt;a href=&quot;https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills&quot;&gt;this page&lt;/a&gt;. Basically those scripts check the location.hash at a regular interval. Here is a version that allows only one handler to be bound to the &amp;lt;code&amp;gt;window.onhashchange&amp;lt;/code&amp;gt; property:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Modernizr/Modernizr/wiki/HTML5-Cross-Browser-Polyfills&quot;&gt;このページに&lt;/a&gt;は、いくつかのフォールバックスクリプトがリストされています。基本的にこれらのスクリプトは、定期的にlocation.hashをチェックします。以下は、1つのハンドラのみを&amp;lt;code&amp;gt; window.onhashchange &amp;lt;/ code&amp;gt;プロパティにバインドできるバージョンです。</target>
        </trans-unit>
        <trans-unit id="3a8687719d2bd4c6b957cc60b245486e1a985278" translate="yes" xml:space="preserve">
          <source>There are several properties which allow us to style lines.</source>
          <target state="translated">いくつかのプロパティがあり、それを使用して線のスタイルを設定することができます。</target>
        </trans-unit>
        <trans-unit id="949906d598ccc58803e0af38c65a43af54def8e7" translate="yes" xml:space="preserve">
          <source>There are several properties you can look at in order to determine the width and height of elements, and it can be tricky to determine which is the right one for your needs. This article is designed to help you make that decision. Note that all these properties are read-only. If you want to set the width and height of an element, use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/height&quot;&gt;&lt;code&gt;height&lt;/code&gt;&lt;/a&gt; or the overriding &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/min-width&quot;&gt;&lt;code&gt;min-width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/max-width&quot;&gt;&lt;code&gt;max-width&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/min-height&quot;&gt;&lt;code&gt;min-height&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/max-height&quot;&gt;&lt;code&gt;max-height&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">要素の幅と高さを決定するために見ることができるいくつかのプロパティがあり、どれがニーズに合っているのかを決定するのは難しい場合があります。この記事は、その決定を行うのに役立つように設計されています。これらのプロパティはすべて読み取り専用であることに注意してください。あなたは、要素、利用の幅と高さを設定したい場合は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/height&quot;&gt; &lt;code&gt;height&lt;/code&gt; &lt;/a&gt;または上書き&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/min-width&quot;&gt; &lt;code&gt;min-width&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/max-width&quot;&gt; &lt;code&gt;max-width&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/min-height&quot;&gt; &lt;code&gt;min-height&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/max-height&quot;&gt; &lt;code&gt;max-height&lt;/code&gt; &lt;/a&gt;のプロパティを。</target>
        </trans-unit>
        <trans-unit id="2358cb4677e5ed2c92c690c24b5ea7b2829c0ae3" translate="yes" xml:space="preserve">
          <source>There are several steps here:</source>
          <target state="translated">ここにはいくつかのステップがあります。</target>
        </trans-unit>
        <trans-unit id="f633a9a7bf7e1cc5507528d69c49db68fbca1ac9" translate="yes" xml:space="preserve">
          <source>There are several types of &lt;a href=&quot;https://xhr.spec.whatwg.org/&quot;&gt;response attributes&lt;/a&gt; defined by the living standard specification for the &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest()&lt;/code&gt;&lt;/a&gt; constructor. These tell the client making the &lt;code&gt;XMLHttpRequest&lt;/code&gt; important information about the status of the response. Some cases where dealing with non-text response types may involve some manipulation and analysis are outlined in the following sections.</source>
          <target state="translated">&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest()&lt;/code&gt; &lt;/a&gt;コンストラクターの生活標準仕様で定義されているいくつかのタイプの&lt;a href=&quot;https://xhr.spec.whatwg.org/&quot;&gt;応答属性&lt;/a&gt;があります。これらは、 &lt;code&gt;XMLHttpRequest&lt;/code&gt; を作成しているクライアントに、応答のステータスに関する重要な情報を伝えます。非テキスト応答タイプを処理する場合に、いくつかの操作と分析が含まれる場合があるいくつかのケースについて、次のセクションで概説します。</target>
        </trans-unit>
        <trans-unit id="2b26ab05d62f813c3c3f83780c906f91eb3091dd" translate="yes" xml:space="preserve">
          <source>There are several types of event that can be fired to indicate that touch-related changes have occurred. You can determine which of these has happened by looking at the event's &lt;a href=&quot;event/type&quot;&gt;&lt;code&gt;TouchEvent.type&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">タッチ関連の変更が発生したことを示すために発生させることができるイベントにはいくつかのタイプがあります。イベントの&lt;a href=&quot;event/type&quot;&gt; &lt;code&gt;TouchEvent.type&lt;/code&gt; &lt;/a&gt;プロパティを確認することで、これらのどれが発生したかを判断できます。</target>
        </trans-unit>
        <trans-unit id="69b8c58554506baa9d17fe108ca675c4185445f2" translate="yes" xml:space="preserve">
          <source>There are several versions of the &lt;code&gt;disconnect()&lt;/code&gt; method, which accept different combinations of parameters to control which nodes to disconnect from. If no parameters are provided, all outgoing connections are disconnected.</source>
          <target state="translated">&lt;code&gt;disconnect()&lt;/code&gt; メソッドにはいくつかのバージョンがあり、どのノードから切断するかを制御するパラメーターのさまざまな組み合わせを受け入れます。パラメータを指定しない場合、すべての発信接続が切断されます。</target>
        </trans-unit>
        <trans-unit id="3d8b2bcc67a7183336c0667b0961f212f8b6e1eb" translate="yes" xml:space="preserve">
          <source>There are several ways in which you can indicate to the user that a drop is allowed at a certain location. The mouse pointer will update as necessary depending on the value of the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property. Although the exact appearance depends on the user's platform, typically a plus sign icon will appear for a 'copy' for example, and a 'cannot drop here' icon will appear when a drop is not allowed. This mouse pointer feedback is sufficient in many cases.</source>
          <target state="translated">ドロップが特定の場所で許可されていることをユーザーに示すことができるいくつかの方法があります。マウスポインタは、&lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt;プロパティの値に応じて、必要に応じて更新されます。正確な外観はユーザーのプラットフォームによって異なりますが、通常は「コピー」などの場合はプラス記号アイコンが表示され、ドロップが許可されていない場合は「ここにドロップできません」アイコンが表示されます。多くの場合、このマウスポインターのフィードバックで十分です。</target>
        </trans-unit>
        <trans-unit id="7a7d9ac6b375aa6c280187b66e4d89c1ed67bb2d" translate="yes" xml:space="preserve">
          <source>There are several ways this code can be made better. Most real games would watch for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; events, start motion when that happens, and stop the motion when the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keyup&quot;&gt;keyup&lt;/a&gt;&lt;/code&gt; occurs, instead of relying on key repeats. That would allow both smoother and faster movement, but would also allow the player to be moving and steering at the same time. Transitions or animations could be used to make the ship's movement smoother, too.</source>
          <target state="translated">このコードを改善する方法はいくつかあります。ほとんどの実際のゲームは、キーの繰り返しに依存するのではなく、キー &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントを監視し、発生したときにモーションを開始し、対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keyup&quot;&gt;keyup&lt;/a&gt;&lt;/code&gt; が発生したときにモーションを停止します。これにより、スムーズで速い動きが可能になるだけでなく、プレイヤーが同時に動きながらステアリングすることも可能になります。トランジションやアニメーションを使用して、船の動きをスムーズにすることもできます。</target>
        </trans-unit>
        <trans-unit id="3ee48f18164ed93097ef50e02be2935571196da3" translate="yes" xml:space="preserve">
          <source>There are several ways to get images for use on a canvas.</source>
          <target state="translated">キャンバスに使用する画像を取得する方法はいくつかあります。</target>
        </trans-unit>
        <trans-unit id="9558be435a574a93ec3f1ab6cbf7cc871b090e8a" translate="yes" xml:space="preserve">
          <source>There are several ways to handle screen orientation, both with CSS and JavaScript. The first is the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/CSS/Media_queries#orientation&quot;&gt;orientation media query&lt;/a&gt;. This lets content adjust its layout using CSS, based on whether the browser window is in landscape mode (that is, its width is greater than its height) or portrait mode (its height is greater than its width).</source>
          <target state="translated">CSSとJavaScriptの両方で画面の向きを処理する方法はいくつかあります。1つ目は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/CSS/Media_queries#orientation&quot;&gt;オリエンテーションメディアクエリ&lt;/a&gt;です。これにより、ブラウザーウィンドウが横長モード（つまり、幅が高さより大きい）か縦長モード（高さが幅より大きい）に基づいて、コンテンツのレイアウトをCSSを使用して調整できます。</target>
        </trans-unit>
        <trans-unit id="325b3c0869d1dd8072342791e67b2675e1486ea9" translate="yes" xml:space="preserve">
          <source>There are some basic questions you can answer to determine if a push notification is needed:</source>
          <target state="translated">プッシュ通知が必要かどうかを判断するための基本的な質問がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="d376ecbe7d5af57e09a537111b73c1e08d2d3201" translate="yes" xml:space="preserve">
          <source>There are some cases in which the synchronous usage of XMLHttpRequest was not replaceable, like during the &lt;a href=&quot;../windoweventhandlers/onunload&quot;&gt;&lt;code&gt;window.onunload&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../windoweventhandlers/onbeforeunload&quot;&gt;&lt;code&gt;window.onbeforeunload&lt;/code&gt;&lt;/a&gt; events. You should consider using the &lt;code&gt;fetch&lt;/code&gt; API with &lt;code&gt;keepalive&lt;/code&gt; flag. When &lt;code&gt;fetch&lt;/code&gt; with &lt;code&gt;keepalive&lt;/code&gt; isn't available, you can consider using the &lt;a href=&quot;../navigator/sendbeacon&quot;&gt;navigator.sendBeacon&lt;/a&gt; API can support these use cases typically while delivering a good UX.</source>
          <target state="translated">&lt;a href=&quot;../windoweventhandlers/onunload&quot;&gt; &lt;code&gt;window.onunload&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../windoweventhandlers/onbeforeunload&quot;&gt; &lt;code&gt;window.onbeforeunload&lt;/code&gt; &lt;/a&gt;イベント中など、XMLHttpRequestの同期使用が置き換えられない場合があります。 &lt;code&gt;keepalive&lt;/code&gt; フラグを指定した &lt;code&gt;fetch&lt;/code&gt; APIの使用を検討する必要があります。 &lt;code&gt;keepalive&lt;/code&gt; を使用した &lt;code&gt;fetch&lt;/code&gt; が利用できない場合は、&lt;a href=&quot;../navigator/sendbeacon&quot;&gt;navigator.sendBeacon&lt;/a&gt; APIを使用すると、通常、優れたUXを提供しながらこれらのユースケースをサポートできます。</target>
        </trans-unit>
        <trans-unit id="19bd5c07f816d065e89be699de363873cab7001e" translate="yes" xml:space="preserve">
          <source>There are some cases, however, when the examples are more concise. To run examples that only demonstrate the basic relationship of the interface to the HTML elements, you may want to set up a test page in which interfaces can be easily accessed from scripts. The following very simple web page provides a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element in the header in which you can place functions that test the interface, a few HTML elements with attributes that you can retrieve, set, or otherwise manipulate, and the web user interface necessary to call those functions from the browser.</source>
          <target state="translated">ただし、例がより簡潔な場合もあります。インターフェイスとHTML要素の基本的な関係のみを示す例を実行するには、スクリプトからインターフェイスに簡単にアクセスできるテストページを設定することができます。次の非常に単純なWebページには、ヘッダーに &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 要素があり、そこにインターフェイスをテストする関数を配置できます。取得、設定、またはその他の方法で操作できる属性を持ついくつかのHTML要素、および必要なWebユーザーインターフェイスブラウザからこれらの関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="95d9177640c554b7cdb4ad92d0e5004563e8bf4a" translate="yes" xml:space="preserve">
          <source>There are some other useful payment request methods worth knowing about.</source>
          <target state="translated">他にも知っておくと便利な支払い依頼方法があります。</target>
        </trans-unit>
        <trans-unit id="dfa1fc690db0dbd3232494d393d52cd0f8fa837f" translate="yes" xml:space="preserve">
          <source>There are some things worth noting about the XML output by &lt;code&gt;serializeToString()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;serializeToString()&lt;/code&gt; によるXML出力について、注目に値する点がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="176f3fbc6870559a485dea3405e108a5f2381199" translate="yes" xml:space="preserve">
          <source>There are three attributes provided by the &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object that contain useful information about the file.</source>
          <target state="translated">&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトには、ファイルに関する有用な情報を含む3つの属性があります。</target>
        </trans-unit>
        <trans-unit id="1e757283ceb8ce95088d4d09018c9bcc7aaed138" translate="yes" xml:space="preserve">
          <source>There are three basic types of information that need to be exchanged during signaling:</source>
          <target state="translated">シグナリング中に交換する必要がある情報には、基本的に3つのタイプがあります。</target>
        </trans-unit>
        <trans-unit id="2564f39410267d755cec24d1aa5f5b31561feb99" translate="yes" xml:space="preserve">
          <source>There are three basic types of lighting:</source>
          <target state="translated">照明には基本的に3つのタイプがあります。</target>
        </trans-unit>
        <trans-unit id="b327796c3317331775828ffef97d473fb000bdd7" translate="yes" xml:space="preserve">
          <source>There are three extensions to the &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interface:</source>
          <target state="translated">&lt;a href=&quot;element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;インターフェースには3つの拡張機能があります。</target>
        </trans-unit>
        <trans-unit id="4371f3da5d8157f4360723406f9f8f085fc64112" translate="yes" xml:space="preserve">
          <source>There are three kinds of &quot;variable&quot; or data storage available in GLSL, each of which with its own purpose and use cases: &lt;strong&gt;&lt;a href=&quot;#Attributes&quot;&gt;attributes&lt;/a&gt;&lt;/strong&gt;, &lt;strong&gt;&lt;a href=&quot;#Varyings&quot;&gt;varyings&lt;/a&gt;&lt;/strong&gt;, and &lt;strong&gt;&lt;a href=&quot;#Uniforms&quot;&gt;uniforms&lt;/a&gt;&lt;/strong&gt;.</source>
          <target state="translated">GLSLには3種類の「変数」またはデータストレージがあり、それぞれに独自の目的と使用例があります。&lt;strong&gt;&lt;a href=&quot;#Attributes&quot;&gt;属性&lt;/a&gt;&lt;/strong&gt;、&lt;strong&gt;&lt;a href=&quot;#Varyings&quot;&gt;可変&lt;/a&gt;&lt;/strong&gt;、および&lt;strong&gt;&lt;a href=&quot;#Uniforms&quot;&gt;ユニフォーム&lt;/a&gt;&lt;/strong&gt;です。</target>
        </trans-unit>
        <trans-unit id="ba02abfa2bfc165ce113dd9a891527c4c57d0746" translate="yes" xml:space="preserve">
          <source>There are three methods that immediately draw rectangles to the bitmap.</source>
          <target state="translated">ビットマップに即座に矩形を描画する方法は3つあります。</target>
        </trans-unit>
        <trans-unit id="6c44dea077469012e0116eb8a6e80fa7cd5df8a1" translate="yes" xml:space="preserve">
          <source>There are three possible execution modes:</source>
          <target state="translated">実行モードは3つあります。</target>
        </trans-unit>
        <trans-unit id="07a39cb953aeda216cac379f2ed84242f1fd33b9" translate="yes" xml:space="preserve">
          <source>There are three possible values for this property: &lt;code&gt;&quot;round&quot;&lt;/code&gt;, &lt;code&gt;&quot;bevel&quot;&lt;/code&gt;, and &lt;code&gt;&quot;miter&quot;&lt;/code&gt;. The default is &lt;code&gt;&quot;miter&quot;&lt;/code&gt;.</source>
          <target state="translated">このプロパティには、 &lt;code&gt;&quot;bevel&quot;&lt;/code&gt; &lt;code&gt;&quot;round&quot;&lt;/code&gt; 、「bevel」、 &lt;code&gt;&quot;miter&quot;&lt;/code&gt; 3つの値が考えられます。デフォルトは &lt;code&gt;&quot;miter&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1213f53c4e342dcc007545aa926e295099b4a404" translate="yes" xml:space="preserve">
          <source>There are three possible values for this property: &lt;code&gt;round&lt;/code&gt;, &lt;code&gt;bevel&lt;/code&gt; and &lt;code&gt;miter&lt;/code&gt;. By default this property is set to &lt;code&gt;miter&lt;/code&gt;. Note that the &lt;code&gt;lineJoin&lt;/code&gt; setting has no effect if the two connected segments have the same direction, because no joining area will be added in this case.</source>
          <target state="translated">このプロパティには、 &lt;code&gt;round&lt;/code&gt; 、 &lt;code&gt;bevel&lt;/code&gt; 、および &lt;code&gt;miter&lt;/code&gt; の 3つの可能な値があります。デフォルトでは、このプロパティは &lt;code&gt;miter&lt;/code&gt; に設定されています。この場合、結合領域は追加されないため、2つの接続されたセグメントが同じ方向である場合、 &lt;code&gt;lineJoin&lt;/code&gt; 設定は効果がないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="5a3acb196aa6650f03312454609ade323e69b2a6" translate="yes" xml:space="preserve">
          <source>There are three primary components to the display for our virtual keyboard. The first is the musical keyboard itself. We draw this in a pair of nested &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; elements so that we can make the keyboard horizontally scrollable if all the keys don't fit on the screen, without having them wrap around.</source>
          <target state="translated">仮想キーボードのディスプレイには、3つの主要コンポーネントがあります。1つ目は、ミュージカルキーボード自体です。これをネストされた&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のペアで描画して、すべてのキーが画面に収まらない場合に折り返すことなく、キーボードを水平方向にスクロールできるようにします。</target>
        </trans-unit>
        <trans-unit id="145e5959e7429cf64762e4f476128505b5024e07" translate="yes" xml:space="preserve">
          <source>There are three types of keyboard events: &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keypress&quot;&gt;keypress&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keyup&quot;&gt;keyup&lt;/a&gt;&lt;/code&gt;. For most keys, Gecko dispatches a sequence of key events like this:</source>
          <target state="translated">キーボードイベントには、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keypress&quot;&gt;keypress&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keyup&quot;&gt;keyup&lt;/a&gt;&lt;/code&gt; の 3つのタイプがあります。ほとんどのキーについて、Geckoは次のような一連のキーイベントを送出します。</target>
        </trans-unit>
        <trans-unit id="0c8f3d11222c43c141b2140af5136bc731fd8ae3" translate="yes" xml:space="preserve">
          <source>There are two challenges to detecting exactly if a browser supports HTML parsing in &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;. First, the detection result is obtained asynchronously, because HTML support is only available in the asynchronous mode. Second, you have to actually fetch a test document over HTTP, because testing with a &lt;code&gt;data:&lt;/code&gt; URL would end up testing &lt;code&gt;data:&lt;/code&gt; URL support at the same time.</source>
          <target state="translated">ブラウザが&lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; での&lt;/a&gt; HTML解析をサポートしているかどうかを正確に検出するには、2つの課題があります。まず、HTMLサポートは非​​同期モードでのみ使用できるため、検出結果は非同期で取得されます。次に、 &lt;code&gt;data:&lt;/code&gt; URLでテストすると、同時に &lt;code&gt;data:&lt;/code&gt; URLサポートもテストされるため、実際にHTTP経由でテストドキュメントをフェッチする必要があります。</target>
        </trans-unit>
        <trans-unit id="0e1ac1adebd8c50b4ae34b896f42cb5ed5483178" translate="yes" xml:space="preserve">
          <source>There are two different types of certificates used in WebAuthn for registration and authentication. They have similar names and similar purposes, but understanding the differences may be an initial point of confusion. The sections below describe attestation, which happens during registration, and assertion which happens during authentication.</source>
          <target state="translated">WebAuthn で登録と認証に使用される証明書には 2 つの異なるタイプがあります。これらは名前も目的も似ていますが、違いを理解することが最初の混乱の原因になるかもしれません。以下のセクションでは、登録時に行われる認証と、認証時に行われるアサーションについて説明します。</target>
        </trans-unit>
        <trans-unit id="e2b1e1f6289be07fd20cdb8afd0aea53fc6f218f" translate="yes" xml:space="preserve">
          <source>There are two different ways to format keyframes:</source>
          <target state="translated">キーフレームのフォーマットには2つの方法があります。</target>
        </trans-unit>
        <trans-unit id="7ba71327a262557df11030096b19c270891ba7c6" translate="yes" xml:space="preserve">
          <source>There are two distinct sets of parameters. The first one allows to test the support of a pair &lt;em&gt;property-value&lt;/em&gt;:</source>
          <target state="translated">2つの異なるパラメーターセットがあります。最初の例では、&lt;em&gt;プロパティと値の&lt;/em&gt;ペアのサポートをテストでき&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="950a4a36b25eaf72766f999a4b4fa5abdb6ecdba" translate="yes" xml:space="preserve">
          <source>There are two flags you can set:</source>
          <target state="translated">設定できるフラグは2つあります。</target>
        </trans-unit>
        <trans-unit id="88e8f5cdb90be89e19992ef23ab921f6dce150d1" translate="yes" xml:space="preserve">
          <source>There are two forms of this constructor, which take their information in slightly different ways. The first one accepts four separate arguments &amp;mdash; the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRFieldOfViewReadOnly/upDegrees&quot;&gt;&lt;code&gt;VRFieldOfViewReadOnly.upDegrees&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRFieldOfViewReadOnly/rightDegrees&quot;&gt;&lt;code&gt;VRFieldOfViewReadOnly.rightDegrees&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRFieldOfViewReadOnly/downDegrees&quot;&gt;&lt;code&gt;VRFieldOfViewReadOnly.downDegrees&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRFieldOfViewReadOnly/leftDegrees&quot;&gt;&lt;code&gt;VRFieldOfViewReadOnly.leftDegrees&lt;/code&gt;&lt;/a&gt; values you want the field of view to have</source>
          <target state="translated">このコンストラクタには2つの形式があり、わずかに異なる方法で情報を取得します。最初の引数は4つの別々の引数を受け入れます&amp;mdash; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRFieldOfViewReadOnly/upDegrees&quot;&gt; &lt;code&gt;VRFieldOfViewReadOnly.upDegrees&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRFieldOfViewReadOnly/rightDegrees&quot;&gt; &lt;code&gt;VRFieldOfViewReadOnly.rightDegrees&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRFieldOfViewReadOnly/downDegrees&quot;&gt; &lt;code&gt;VRFieldOfViewReadOnly.downDegrees&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRFieldOfViewReadOnly/leftDegrees&quot;&gt; &lt;code&gt;VRFieldOfViewReadOnly.leftDegrees&lt;/code&gt; の&lt;/a&gt;値で、視野に必要な値</target>
        </trans-unit>
        <trans-unit id="cdb4eb41e30939877e13df12a446da62b67212c9" translate="yes" xml:space="preserve">
          <source>There are two interfaces or APIs used in WebVTT which are:</source>
          <target state="translated">WebVTTで使用される2つのインターフェースまたはAPIがあります。</target>
        </trans-unit>
        <trans-unit id="fefc2350504774e394b73527f1c0e98c53a69f6f" translate="yes" xml:space="preserve">
          <source>There are two kinds of &lt;code&gt;AudioParam&lt;/code&gt;, &lt;em&gt;a-rate&lt;/em&gt; and &lt;em&gt;k-rate&lt;/em&gt; parameters:</source>
          <target state="translated">&lt;code&gt;AudioParam&lt;/code&gt; には、&lt;em&gt;a &lt;/em&gt;&lt;em&gt;-rate&lt;/em&gt;パラメータと&lt;em&gt;k-rate&lt;/em&gt;パラメータの2種類があります。</target>
        </trans-unit>
        <trans-unit id="2fe7396ba186072d1b9cf45dcc7a00d5064b3706" translate="yes" xml:space="preserve">
          <source>There are two levels of ICE restart: &lt;strong&gt;full ICE restart&lt;/strong&gt; causes all media streams in the session to be renegotiated. &lt;strong&gt;Partial ICE restart&lt;/strong&gt; allows ICE renegotiation of specific media streams instead of all of them at once. Some browsers don't yet support partial ICE restart, however.</source>
          <target state="translated">ICEの再起動には2つのレベルがあります。ICEを&lt;strong&gt;完全に再起動する&lt;/strong&gt;と、セッション内のすべてのメディアストリームが再ネゴシエートされます。&lt;strong&gt;ICEの部分的な再起動&lt;/strong&gt;により、一度にすべてではなく特定のメディアストリームのICE再ネゴシエーションが可能になります。ただし、一部のブラウザはまだICEの部分的な再起動をサポートしていません。</target>
        </trans-unit>
        <trans-unit id="c556e6c20b3cddc98acf617d738b94bb86361e3e" translate="yes" xml:space="preserve">
          <source>There are two live examples of this interface:</source>
          <target state="translated">このインターフェイスの実例は2つあります。</target>
        </trans-unit>
        <trans-unit id="783d6dca8372c564c305595a3abaab474db7e01c" translate="yes" xml:space="preserve">
          <source>There are two main types of setup, mobile or computer-connected. Their minimum hardware set ups are as follows:</source>
          <target state="translated">セットアップには大きく分けて、モバイル接続型とコンピュータ接続型の2種類があります。それらの最低限のハードウェアのセットアップは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="ea1d86ab5cc0965f7aa3907f3b4b619e0ab3b1f8" translate="yes" xml:space="preserve">
          <source>There are two methods which use &lt;code&gt;DOMPointInit&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;DOMPointInit&lt;/code&gt; を使用するメソッドは2つあります。</target>
        </trans-unit>
        <trans-unit id="c599714c5fe4868c1729f6480045bb2b19a133a2" translate="yes" xml:space="preserve">
          <source>There are two shader functions run when drawing WebGL content: the &lt;strong&gt;vertex shader&lt;/strong&gt; and the &lt;strong&gt;fragment shader&lt;/strong&gt;. You write these in GLSL and pass the text of the code into WebGL to be compiled for execution on the GPU. Together, a set of vertex and fragment shaders is called a &lt;strong&gt;shader program&lt;/strong&gt;.</source>
          <target state="translated">WebGLコンテンツの描画時に実行されるシェーダー関数には、&lt;strong&gt;頂点シェーダー&lt;/strong&gt;と&lt;strong&gt;フラグメントシェーダーの&lt;/strong&gt; 2つがあります。これらをGLSLで記述し、コードのテキストをWebGLに渡して、GPUで実行するためにコンパイルします。頂点シェーダーとフラグメントシェーダーのセットを合わせて、&lt;strong&gt;シェーダープログラム&lt;/strong&gt;と呼びます。</target>
        </trans-unit>
        <trans-unit id="111bcba6742ada543a68c95a6c98ef3e3425a1a0" translate="yes" xml:space="preserve">
          <source>There are two types of &lt;code&gt;PromiseRejectionEvent&lt;/code&gt;: &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unhandledrejection&quot;&gt;unhandledrejection&lt;/a&gt;&lt;/code&gt; is sent by the JavaScript runtime when a promise is rejected but the rejection goes unhandled. A recipient of &lt;code&gt;unhandledrejection&lt;/code&gt; sends a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/rejectionhandled&quot;&gt;rejectionhandled&lt;/a&gt;&lt;/code&gt; event if it handles the rejection, so the system knows to stop treating the rejection as unhandled.</source>
          <target state="translated">2種類があり &lt;code&gt;PromiseRejectionEvent&lt;/code&gt; は： &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unhandledrejection&quot;&gt;unhandledrejection&lt;/a&gt;&lt;/code&gt; は約束が拒否されたときに、JavaScriptのランタイムによって送信されたが、拒絶反応が未処理になりました。 &lt;code&gt;unhandledrejection&lt;/code&gt; の受信者は、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/rejectionhandled&quot;&gt;rejectionhandled&lt;/a&gt;&lt;/code&gt; を処理する場合、rejectionhandledイベントを送信します。そのため、システムは、拒否を未処理として処理することを停止することを認識しています。</target>
        </trans-unit>
        <trans-unit id="a75238b45a440481058a6cfc2d0bcf4d79c63e5c" translate="yes" xml:space="preserve">
          <source>There are two types of controller you'll encounter with VR hardware:</source>
          <target state="translated">VRハードで遭遇するコントローラーは2種類。</target>
        </trans-unit>
        <trans-unit id="e405506c787a35134c61cfcf3ecd0907423f06ef" translate="yes" xml:space="preserve">
          <source>There are two types of custom elements you can create:</source>
          <target state="translated">作成できるカスタム要素は2種類あります。</target>
        </trans-unit>
        <trans-unit id="58025463a5f401d907ee834bc94e53f125b76f45" translate="yes" xml:space="preserve">
          <source>There are two types of underlying source:</source>
          <target state="translated">下敷きになるソースには2種類あります。</target>
        </trans-unit>
        <trans-unit id="be1ebf9bb4b6b016203bf592acad0ba5cbbe22c4" translate="yes" xml:space="preserve">
          <source>There are two versions of this method: a two and a three parameter version:</source>
          <target state="translated">このメソッドには、2つのバージョンと3つのパラメータのバージョンがあります。</target>
        </trans-unit>
        <trans-unit id="44502ffc58afc9171ffa480847c6c583b4031a4f" translate="yes" xml:space="preserve">
          <source>There are two ways to create a new &lt;code&gt;DOMPointReadOnly&lt;/code&gt; instance. First, you can use its constructor, passing in the values of the parameters for each dimension and, optionally, the perspective:</source>
          <target state="translated">新しい &lt;code&gt;DOMPointReadOnly&lt;/code&gt; インスタンスを作成するには2つの方法があります。最初に、コンストラクターを使用して、各次元のパラメーターの値と、オプションでパースペクティブを渡すことができます。</target>
        </trans-unit>
        <trans-unit id="32c9a5ee4c34e51543d64b1fbd48f9c6423730fe" translate="yes" xml:space="preserve">
          <source>There are two ways to create an &lt;code&gt;AudioNode&lt;/code&gt;: via the &lt;em&gt;constuctor&lt;/em&gt; and via the &lt;em&gt;factory method&lt;/em&gt;.</source>
          <target state="translated">作成するには、2つの方法があります &lt;code&gt;AudioNode&lt;/code&gt; を経由：&lt;em&gt;constuctor&lt;/em&gt;とを経由して&lt;em&gt;ファクトリメソッドは&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="87ef743a6a424b54bdabed69b2cadf2238f6f108" translate="yes" xml:space="preserve">
          <source>There are two ways to manipulate &lt;a href=&quot;../audionode&quot;&gt;&lt;code&gt;AudioNode&lt;/code&gt;&lt;/a&gt; values, which are themselves objects of type &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface. The first is to set the value directly via the property. So for instance if we want to change the &lt;code&gt;gain&lt;/code&gt; value of a &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; we would do so thus:</source>
          <target state="translated">&lt;a href=&quot;../audionode&quot;&gt; &lt;code&gt;AudioNode&lt;/code&gt; &lt;/a&gt;値を操作する方法は2つあり、それ自体が&lt;a href=&quot;../audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; &lt;/a&gt;インターフェイスタイプのオブジェクトです。1つ目は、プロパティを介して直接値を設定することです。したがって、たとえば、&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;gain&lt;/code&gt; 値を変更する場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="fc606715d6d98999af2010b64fb48d27cbb4dfa8" translate="yes" xml:space="preserve">
          <source>There are two ways to use each of the output methods; you can simply pass in a list of objects whose string representations get concatenated into one string, then output to the console, or you can pass in a string containing zero or more substitution strings followed by a list of objects to replace them.</source>
          <target state="translated">文字列表現が一つの文字列に連結されたオブジェクトのリストを単に渡してコンソールに出力する方法と、0個以上の置換文字列を含む文字列と、それを置換するオブジェクトのリストを渡して出力する方法です。</target>
        </trans-unit>
        <trans-unit id="fd66be19ace740c2722a33149bbbe07c64ce2ae0" translate="yes" xml:space="preserve">
          <source>There are two ways you can create nodes with the Web Audio API. You can use the factory method on the context itself (e.g. &lt;code&gt;audioCtx.createGain()&lt;/code&gt;) or via a constructor of the node (e.g. &lt;code&gt;new GainNode()&lt;/code&gt;). We'll use the factory method in our code:</source>
          <target state="translated">Web Audio APIでノードを作成する方法は2つあります。コンテキスト自体（例： &lt;code&gt;audioCtx.createGain()&lt;/code&gt; ）またはノードのコンストラクター（例： &lt;code&gt;new GainNode()&lt;/code&gt; ）を介してファクトリメソッドを使用できます。コードではファクトリメソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="5960816c694d72b816d9ef313b67a5035223d856" translate="yes" xml:space="preserve">
          <source>There are various ways to determine whether the node has a child node.</source>
          <target state="translated">ノードに子ノードがあるかどうかを判断するには、さまざまな方法があります。</target>
        </trans-unit>
        <trans-unit id="5229746864ee10ec8cc534465346bd8d9f0afdaa" translate="yes" xml:space="preserve">
          <source>There aren't any property for this interface.</source>
          <target state="translated">このインターフェイスのプロパティはありません。</target>
        </trans-unit>
        <trans-unit id="e7cc4d8b3d78a79b3586c61b0c183e5bb001ebf9" translate="yes" xml:space="preserve">
          <source>There is &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=189112#c7&quot;&gt;an algorithm&lt;/a&gt; to obtain the height of the viewport excluding, if rendered, the horizontal scrollbar.</source>
          <target state="translated">レンダリングされた場合、水平スクロールバーを除いて、ビューポートの高さを取得&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=189112#c7&quot;&gt;するアルゴリズム&lt;/a&gt;があります。</target>
        </trans-unit>
        <trans-unit id="8156a6358749cae4d45abc41ed807153e8c4de57" translate="yes" xml:space="preserve">
          <source>There is &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=189112#c7&quot;&gt;an algorithm&lt;/a&gt; to obtain the width of the viewport excluding, if rendered, the vertical scrollbar.</source>
          <target state="translated">レンダリングされた場合、垂直スクロールバーを除いて、ビューポートの幅を取得&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=189112#c7&quot;&gt;するアルゴリズム&lt;/a&gt;があります。</target>
        </trans-unit>
        <trans-unit id="857e7cbdfa015d98a2546611f723543a8f95ea7c" translate="yes" xml:space="preserve">
          <source>There is a &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/sendAsBinary#sendAsBinary%28%29_polyfill&quot;&gt;polyfill available&lt;/a&gt; to support &lt;code&gt;sendAsBinary()&lt;/code&gt;.</source>
          <target state="translated">ある&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/XMLHttpRequest/sendAsBinary#sendAsBinary%28%29_polyfill&quot;&gt;利用可能ポリフィル&lt;/a&gt;サポートする &lt;code&gt;sendAsBinary()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="108c9bfc838dc19b7628dd1fda0910bcfc724afd" translate="yes" xml:space="preserve">
          <source>There is a drawback to &lt;code&gt;attachEvent()&lt;/code&gt;: The value of &lt;code&gt;this&lt;/code&gt; will be a reference to the &lt;code&gt;window&lt;/code&gt; object, instead of the element on which it was fired.</source>
          <target state="translated">欠点がある &lt;code&gt;attachEvent()&lt;/code&gt; は：の値 &lt;code&gt;this&lt;/code&gt; への参照になり &lt;code&gt;window&lt;/code&gt; 代わりに、それが解雇された要素の、オブジェクト。</target>
        </trans-unit>
        <trans-unit id="47543470d58323347a30898dec7e2f96dba48e93" translate="yes" xml:space="preserve">
          <source>There is a lot of discussion in progress about getting new specs to align with this behavior change, to mitigate potential problems going forward.</source>
          <target state="translated">今後の潜在的な問題を軽減するために、この行動変 更に合わせて新しいスペックを導入することについて、多くの議論が行われています。</target>
        </trans-unit>
        <trans-unit id="2206ff1ab85030f8ae9156d6ced9fb8dad6c1d41" translate="yes" xml:space="preserve">
          <source>There is a performance cost associated with looking at the &lt;code&gt;value&lt;/code&gt; property of a cursor, because the object is created lazily. To use a feature like &lt;code&gt;getAll()&lt;/code&gt;, the browser has to create all the objects at once. If you are just interested in looking at each of the keys, for instance, it is more efficient to use a &lt;a href=&quot;../idbcursor&quot;&gt;cursor&lt;/a&gt;. If you are trying to get an array of all the objects in an object store, though, you should use &lt;code&gt;getAll()&lt;/code&gt;.</source>
          <target state="translated">オブジェクトは遅延して作成されるため、カーソルの &lt;code&gt;value&lt;/code&gt; プロパティの表示に関連するパフォーマンスコストがあります。 &lt;code&gt;getAll()&lt;/code&gt; などの機能を使用するには、ブラウザがすべてのオブジェクトを一度に作成する必要があります。たとえば、各キーを確認するだけの場合は、&lt;a href=&quot;../idbcursor&quot;&gt;カーソル&lt;/a&gt;を使用する方が効率的です。ただし、オブジェクトストア内のすべてのオブジェクトの配列を取得しようとしている場合は、 &lt;code&gt;getAll()&lt;/code&gt; を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7fd064067f9f8551eb066db9adfb520c97b8dfa2" translate="yes" xml:space="preserve">
          <source>There is a performance cost associated with looking at the &lt;code&gt;value&lt;/code&gt; property of a cursor, because the object is created lazily. When you use &lt;code&gt;getAll()&lt;/code&gt; for example, the browser must create all the objects at once. If you're just interested in looking at each of the keys, for instance, it is much more efficient to use a cursor than to use &lt;code&gt;getAll()&lt;/code&gt;. If you're trying to get an array of all the objects in an object store, though, use &lt;code&gt;getAll()&lt;/code&gt;.</source>
          <target state="translated">オブジェクトは遅延して作成されるため、カーソルの &lt;code&gt;value&lt;/code&gt; プロパティの表示に関連するパフォーマンスコストがあります。たとえば、 &lt;code&gt;getAll()&lt;/code&gt; を使用する場合、ブラウザはすべてのオブジェクトを一度に作成する必要があります。たとえば、各キーを調べるだけの場合は、 &lt;code&gt;getAll()&lt;/code&gt; を使用するよりもカーソルを使用する方がはるかに効率的です。ただし、オブジェクトストア内のすべてのオブジェクトの配列を取得する場合は、 &lt;code&gt;getAll()&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="0e28e6cb7c57b82d3a734b621022711a0b1ac949" translate="yes" xml:space="preserve">
          <source>There is a possible race condition here &amp;mdash; if the page content has finished loading before the &lt;code&gt;onmessage&lt;/code&gt; handler has been set, the messages could be lost because there is nothing to handle it.</source>
          <target state="translated">ここでは競合状態が発生する可能性があります &lt;code&gt;onmessage&lt;/code&gt; ハンドラーが設定される前にページコンテンツの読み込みが完了した場合、処理するものがないためメッセージが失われる可能性があります。</target>
        </trans-unit>
        <trans-unit id="722e6d39a083c88c15688dd489d063c9f2376b10" translate="yes" xml:space="preserve">
          <source>There is also a construct you&amp;rsquo;ll use called a &lt;strong&gt;controller&lt;/strong&gt; &amp;mdash; each reader has an associated controller that allows you to control the stream (for example, to cancel it if wished).</source>
          <target state="translated">&lt;strong&gt;コントローラー&lt;/strong&gt;と呼ばれる、使用する構成要素もあります。各リーダーには、ストリームを制御する（たとえば、必要に応じてキャンセルする）ためのコントローラーが関連付けられています。</target>
        </trans-unit>
        <trans-unit id="65201de949089e576015090637312f8ad0388156" translate="yes" xml:space="preserve">
          <source>There is also a construct you&amp;rsquo;ll use called a controller &amp;mdash; each writer has an associated controller that allows you to control the stream (for example, to abort it if wished).</source>
          <target state="translated">コントローラーと呼ばれる、使用する構成要素もあります。各ライターには、ストリームを制御する（たとえば、必要に応じて中止する）ためのコントローラーが関連付けられています。</target>
        </trans-unit>
        <trans-unit id="b707c128c651756e96cb66f2cdcac1a69e976909" translate="yes" xml:space="preserve">
          <source>There is also an &lt;code&gt;activate&lt;/code&gt; event. The point where this event fires is generally a good time to clean up old caches and other things associated with the previous version of your service worker.</source>
          <target state="translated">&lt;code&gt;activate&lt;/code&gt; イベントもあります。このイベントが発生するポイントは、通常、古いバージョンのサービスワーカーの以前のバージョンに関連付けられている古いキャッシュやその他のものをクリーンアップするのに良いタイミングです。</target>
        </trans-unit>
        <trans-unit id="f489029b631649817466aca0cd163edcbe67af22" translate="yes" xml:space="preserve">
          <source>There is also an Internet Explorer-compatible way to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;Array.prototype.forEach&lt;/code&gt;&lt;/a&gt; for iteration:</source>
          <target state="translated">反復に&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;Array.prototype.forEach&lt;/code&gt; &lt;/a&gt;を使用するためのInternet Explorer互換の方法もあります。</target>
        </trans-unit>
        <trans-unit id="1c666f768d3759a791b0c2c319478b26fd020bb6" translate="yes" xml:space="preserve">
          <source>There is also the option of libraries, of which there are a few depending on your use case. For a good all-rounder, &lt;a href=&quot;https://howlerjs.com/&quot;&gt;howler.js&lt;/a&gt; is a good choice. It has cross-browser support and, provides a useful subset of functionality. Although it doesn't harness the full gamut of filters and other effects the Web Audio API comes with, you can do most of what you'd want to do.</source>
          <target state="translated">ライブラリのオプションもあり、ユースケースに応じていくつかあります。万能の人にとって、&lt;a href=&quot;https://howlerjs.com/&quot;&gt;howler.js&lt;/a&gt;は良い選択です。ブラウザー間のサポートがあり、機能の有用なサブセットを提供します。これは、Web Audio APIに付属するフィルターやその他の効果の全範囲を利用するわけではありませんが、やりたいことのほとんどを行うことができます。</target>
        </trans-unit>
        <trans-unit id="7d573a5bea115520228121579af761d834eb4c50" translate="yes" xml:space="preserve">
          <source>There is an excellent diagram that clearly explains the three phases of event flow through the DOM in the &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Events/#dom-event-architecture&quot;&gt;DOM Level 3 Events draft&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-3-Events/#dom-event-architecture&quot;&gt;DOM Level 3 Eventsドラフト&lt;/a&gt;には、DOMを介したイベントフローの3つのフェーズを明確に説明する優れた図があります。</target>
        </trans-unit>
        <trans-unit id="5f2436de8fbfd340752fe1bbb66d69d2550a17db" translate="yes" xml:space="preserve">
          <source>There is currently an issue flagged in the specification pointing out that at this time, no exceptions are being thrown if the canvas isn't origin-clean. This may change in the future, so it would be wise to plan ahead and watch for exceptions such as &lt;code&gt;SecurityError&lt;/code&gt; (although the specific error that might be thrown is not mentioned in the spec, this is a likely candidate).</source>
          <target state="translated">現在、仕様にフラグが立てられている問題があり、現時点では、キャンバスがorigin-cleanでない場合、例外はスローされません。これは将来変更される可能性があるため、事前に計画を立て、 &lt;code&gt;SecurityError&lt;/code&gt; などの例外を監視することをお勧めします（スローされる可能性のある特定のエラーは仕様に記載されていませんが、これはおそらく候補です）。</target>
        </trans-unit>
        <trans-unit id="57488d57f76077f4ee2cf0446536a26e8da5a984" translate="yes" xml:space="preserve">
          <source>There is currently only one registered &lt;a href=&quot;https://www.w3.org/TR/payment-method-id/#registry&quot;&gt;standardized payment method identifier&lt;/a&gt; (more may be added in the future):</source>
          <target state="translated">現在、登録されている&lt;a href=&quot;https://www.w3.org/TR/payment-method-id/#registry&quot;&gt;標準化された支払い方法識別子は&lt;/a&gt; 1つだけです（将来、さらに多く追加される可能性があります）：</target>
        </trans-unit>
        <trans-unit id="f51e89a9b8f40922cff623bc0057da9f684eb30b" translate="yes" xml:space="preserve">
          <source>There is frequent confusion surrounding the meaning and use of &lt;em&gt;scope&lt;/em&gt;. Since a service worker can't have a scope broader than its own location, only use the &lt;code&gt;scope&lt;/code&gt; option when you need a scope that is narrower than the default.</source>
          <target state="translated">&lt;em&gt;スコープの&lt;/em&gt;意味と使用法をめぐってしばしば混乱が生じ&lt;em&gt;ます&lt;/em&gt;。Service Workerは自分の場所よりも広いスコープを持つことはできないため、デフォルトよりも狭いスコープが必要な場合にのみ、 &lt;code&gt;scope&lt;/code&gt; オプションを使用してください。</target>
        </trans-unit>
        <trans-unit id="035469bdaf9675a96dd892e4c0b2edb8a93aeccb" translate="yes" xml:space="preserve">
          <source>There is no &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; whose &lt;code&gt;track&lt;/code&gt; matches the specified &lt;code&gt;selector&lt;/code&gt;, or &lt;code&gt;selector&lt;/code&gt; matches more than one sender or receiver.</source>
          <target state="translated">指定された &lt;code&gt;selector&lt;/code&gt; に一致する &lt;code&gt;track&lt;/code&gt; を持つ&lt;a href=&quot;../rtcrtpsender&quot;&gt; &lt;code&gt;RTCRtpSender&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../rtcrtpreceiver&quot;&gt; &lt;code&gt;RTCRtpReceiver&lt;/code&gt; &lt;/a&gt;がないか、 &lt;code&gt;selector&lt;/code&gt; が複数の送信者または受信者に一致します。</target>
        </trans-unit>
        <trans-unit id="c7e977a4c35f50b569afb80bc98f41c54af82f9f" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;insertAfter&lt;/code&gt; method. It can be emulated by combining the &lt;code&gt;insertBefore&lt;/code&gt; method with &lt;code&gt;&lt;a href=&quot;nextsibling&quot;&gt;nextSibling&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;insertAfter&lt;/code&gt; メソッドはありません。 &lt;code&gt;insertBefore&lt;/code&gt; メソッドを &lt;code&gt;&lt;a href=&quot;nextsibling&quot;&gt;nextSibling&lt;/a&gt;&lt;/code&gt; と組み合わせることでエミュレートできます。</target>
        </trans-unit>
        <trans-unit id="0a8cc27d65f284405fb98c87526d13732c3976b1" translate="yes" xml:space="preserve">
          <source>There is no &lt;code&gt;removeAttributeNodeNS&lt;/code&gt; (unlike the pair &lt;code&gt;setAttributeNode &lt;/code&gt;and&lt;code&gt;setAttributeNodeNS&lt;/code&gt; which need to know which existing attribute to replace (if any), &lt;code&gt;removeAttributeNode has no such requirement&lt;/code&gt;). &lt;code&gt;removeAttributeNode &lt;/code&gt;can remove namespaced as well as non-namespaced attributes.</source>
          <target state="translated">&lt;code&gt;removeAttributeNodeNS&lt;/code&gt; はありません（ &lt;code&gt;setAttributeNode &lt;/code&gt; と &lt;code&gt;setAttributeNodeNS&lt;/code&gt; のペアとは異なり（存在する場合）、既存の属性を置き換える必要があるため、 &lt;code&gt;removeAttributeNode has no such requirement&lt;/code&gt; ）。 &lt;code&gt;removeAttributeNode &lt;/code&gt; は、名前空間属性と非名前空間属性を削除できます。</target>
        </trans-unit>
        <trans-unit id="3c13655c95efe7cc0deff4aa3970ded732c7e0a5" translate="yes" xml:space="preserve">
          <source>There is no &lt;em&gt;end&lt;/em&gt; property for &lt;code&gt;requestStart&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;requestStart&lt;/code&gt; の&lt;em&gt;終了&lt;/em&gt;プロパティはありません。</target>
        </trans-unit>
        <trans-unit id="d39c0bae4580801fe954444b8320db090c80e576" translate="yes" xml:space="preserve">
          <source>There is no complex set up for using an &lt;code&gt;AudioDestinationNode&lt;/code&gt; &amp;mdash; by default, this simply represents the output of the user's system (e.g. their speakers), so you can get it hooked up inside an audio graph using only a few lines of code:</source>
          <target state="translated">&lt;code&gt;AudioDestinationNode&lt;/code&gt; を使用するための複雑な設定はありません。デフォルトでは、これは単にユーザーのシステム（スピーカーなど）の出力を表すため、数行のコードを使用してオーディオグラフ内に接続できます。</target>
        </trans-unit>
        <trans-unit id="0fd60e4febb13b9d15709f063aa9af91f821a3cd" translate="yes" xml:space="preserve">
          <source>There is no data yet. Also, &lt;code&gt;readyState&lt;/code&gt; is &lt;code&gt;HAVE_NOTHING&lt;/code&gt;.</source>
          <target state="translated">まだデータはありません。また、 &lt;code&gt;readyState&lt;/code&gt; は &lt;code&gt;HAVE_NOTHING&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="62748c19229a9f037c98bd21dcbf9d715e459698" translate="yes" xml:space="preserve">
          <source>There is no index with the given name (case-sensitive) in the database.</source>
          <target state="translated">データベースには、指定された名前(大文字と小文字を区別する)のインデックスはありません。</target>
        </trans-unit>
        <trans-unit id="d03454339da57555840cd2655ea1892ad168ef04" translate="yes" xml:space="preserve">
          <source>There is no need to add JavaScript code to call &lt;code&gt;fileElem.click()&lt;/code&gt;. Also in this case you can style the label element as you wish. You need to provide a visual cue for the focus status of the hidden input field on its label, be it an outline as shown above, or background-color or box-shadow. (As of time of writing, Firefox doesn&amp;rsquo;t show this visual cue for &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; elements.)</source>
          <target state="translated">&lt;code&gt;fileElem.click()&lt;/code&gt; を呼び出すためにJavaScriptコードを追加する必要はありません。この場合も、必要に応じてラベル要素のスタイルを設定できます。ラベルにある非表示の入力フィールドのフォーカスステータスを、上に示したアウトライン、背景色、ボックスシャドウなどの視覚的な手がかりとする必要があります。（執筆時点では、Firefoxは &lt;code&gt;&amp;lt;input type=&quot;file&quot;&amp;gt;&lt;/code&gt; 要素に対するこの視覚的な手掛かりを表示していません。）</target>
        </trans-unit>
        <trans-unit id="a3dc53aef83c30b6b8ac7dcaa64f08409a7cdd6e" translate="yes" xml:space="preserve">
          <source>There is no object of type &lt;code&gt;NavigatorGeolocation&lt;/code&gt;, but some interfaces, like &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; implements it.</source>
          <target state="translated">タイプのオブジェクトがない &lt;code&gt;NavigatorGeolocation&lt;/code&gt; 等が挙げられるが、いくつかのインタフェース、&lt;a href=&quot;navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt;実装では。</target>
        </trans-unit>
        <trans-unit id="3a1ffb5817ce56023ffb589f2b23523560e9ce5d" translate="yes" xml:space="preserve">
          <source>There is no object of type &lt;code&gt;NavigatorID&lt;/code&gt;, but other interfaces, like &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;workernavigator&quot;&gt;&lt;code&gt;WorkerNavigator&lt;/code&gt;&lt;/a&gt;, implement it.</source>
          <target state="translated">タイプ &lt;code&gt;NavigatorID&lt;/code&gt; のオブジェクトはありませんが、&lt;a href=&quot;navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;workernavigator&quot;&gt; &lt;code&gt;WorkerNavigator&lt;/code&gt; &lt;/a&gt;などの他のインターフェースがそれを実装します。</target>
        </trans-unit>
        <trans-unit id="591e27787246ec82ed949a688390d027cfd9edfb" translate="yes" xml:space="preserve">
          <source>There is no object of type &lt;code&gt;NavigatorLanguage&lt;/code&gt;, but other interfaces, like &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;workernavigator&quot;&gt;&lt;code&gt;WorkerNavigator&lt;/code&gt;&lt;/a&gt;, implement it.</source>
          <target state="translated">タイプ &lt;code&gt;NavigatorLanguage&lt;/code&gt; のオブジェクトはありませんが、&lt;a href=&quot;navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;workernavigator&quot;&gt; &lt;code&gt;WorkerNavigator&lt;/code&gt; &lt;/a&gt;などの他のインターフェースがそれを実装します。</target>
        </trans-unit>
        <trans-unit id="58e7772c803b8693394d88ede8ca7420a0fa524a" translate="yes" xml:space="preserve">
          <source>There is no object of type &lt;code&gt;NavigatorOnLine&lt;/code&gt;, but other interfaces, like &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;workernavigator&quot;&gt;&lt;code&gt;WorkerNavigator&lt;/code&gt;&lt;/a&gt;, implement it.</source>
          <target state="translated">タイプ &lt;code&gt;NavigatorOnLine&lt;/code&gt; のオブジェクトはありませんが、&lt;a href=&quot;navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;workernavigator&quot;&gt; &lt;code&gt;WorkerNavigator&lt;/code&gt; &lt;/a&gt;などの他のインターフェースがそれを実装します。</target>
        </trans-unit>
        <trans-unit id="1f2c364f5bfa70b5a0228da1091401ade414ae94" translate="yes" xml:space="preserve">
          <source>There is no ongoing exchange of offer and answer underway. This may mean that the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object is new, in which case both the &lt;a href=&quot;localdescription&quot;&gt;&lt;code&gt;localDescription&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;remotedescription&quot;&gt;&lt;code&gt;remoteDescription&lt;/code&gt;&lt;/a&gt; are &lt;code&gt;null&lt;/code&gt;; it may also mean that negotiation is complete and a connection has been established.</source>
          <target state="translated">進行中の提案と回答の継続的な交換はありません。これは、&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;オブジェクトが新しいことを意味する場合があり &lt;code&gt;null&lt;/code&gt; 。その場合、&lt;a href=&quot;localdescription&quot;&gt; &lt;code&gt;localDescription&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;remotedescription&quot;&gt; &lt;code&gt;remoteDescription&lt;/code&gt; の&lt;/a&gt;両方がnullです。また、ネゴシエーションが完了し、接続が確立されたことを意味する場合もあります。</target>
        </trans-unit>
        <trans-unit id="39f087d267801765096318f3c5786c4ccde0708e" translate="yes" xml:space="preserve">
          <source>There is no ongoing exchange of offer and answer underway. This may mean that the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object is new, in which case both the &lt;a href=&quot;rtcpeerconnection/localdescription&quot;&gt;&lt;code&gt;localDescription&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;rtcpeerconnection/remotedescription&quot;&gt;&lt;code&gt;remoteDescription&lt;/code&gt;&lt;/a&gt; are &lt;code&gt;null&lt;/code&gt;; it may also mean that negotiation is complete and a connection has been established.</source>
          <target state="translated">進行中の提案と回答の継続的な交換はありません。これは、&lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;オブジェクトが新しいことを意味する場合があり &lt;code&gt;null&lt;/code&gt; 。その場合、&lt;a href=&quot;rtcpeerconnection/localdescription&quot;&gt; &lt;code&gt;localDescription&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;rtcpeerconnection/remotedescription&quot;&gt; &lt;code&gt;remoteDescription&lt;/code&gt; の&lt;/a&gt;両方がnullです。また、ネゴシエーションが完了し、接続が確立されたことを意味する場合もあります。</target>
        </trans-unit>
        <trans-unit id="6656b9489ce76c46a3cf5b62f6edcded0871e89e" translate="yes" xml:space="preserve">
          <source>There is no preference for this behavior.</source>
          <target state="translated">この行動には好みがありません。</target>
        </trans-unit>
        <trans-unit id="e90a0725b30e8a0d90fca809b2150ccb73a717db" translate="yes" xml:space="preserve">
          <source>There is no track already associated with the sender.</source>
          <target state="translated">送信者と関連するトラックはすでにありません。</target>
        </trans-unit>
        <trans-unit id="6b6ab916b9f1931c39ef3dfa9e059828a190d237" translate="yes" xml:space="preserve">
          <source>There is no way to be notified when this value is changed (which can happen, for example, if the user drags the window to a display with a different pixel density). Since there are no callbacks or events available to detect pixel density changes, the only way to do so is to periodically check the value of &lt;code&gt;devicePixelRatio&lt;/code&gt; to see if it's changed. Just don't do it too often, or you'll impact performance.</source>
          <target state="translated">この値が変更されたときに通知する方法はありません（たとえば、ユーザーがウィンドウを異なるピクセル密度のディスプレイにドラッグした場合に発生する可能性があります）。ピクセル密度の変化を検出するために使用できるコールバックまたはイベントはないため、これを行う唯一の方法は、 &lt;code&gt;devicePixelRatio&lt;/code&gt; の値を定期的にチェックして、それが変更されたかどうかを確認することです。あまり頻繁に実行しないでください。そうしないと、パフォーマンスに影響が出ます。</target>
        </trans-unit>
        <trans-unit id="b21b7fbb345ef87015c54ff6507b188001ae7053" translate="yes" xml:space="preserve">
          <source>There is no way to clear the session history or to disable the back/forward navigation from unprivileged code. The closest available solution is the &lt;code&gt;&lt;a href=&quot;location#replace&quot;&gt;location.replace()&lt;/a&gt;&lt;/code&gt; method, which replaces the current item of the session history with the provided URL.</source>
          <target state="translated">セッション履歴をクリアしたり、権限のないコードから戻る/進むナビゲーションを無効にする方法はありません。最も近い利用可能なソリューションは、 &lt;code&gt;&lt;a href=&quot;location#replace&quot;&gt;location.replace()&lt;/a&gt;&lt;/code&gt; メソッドです。これは、セッション履歴の現在のアイテムを提供されたURLに置き換えます。</target>
        </trans-unit>
        <trans-unit id="36fe53cdacadd3f36eef6b7777104103cd86aa63" translate="yes" xml:space="preserve">
          <source>There is not an &quot;official&quot; way to embed the code of a worker within a web page, like &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; elements do for normal scripts. But a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; element that does not have a &lt;code&gt;src&lt;/code&gt; attribute and has a &lt;code&gt;type&lt;/code&gt; attribute that does not identify an executable MIME type can be considered a data block element that JavaScript could use. &quot;Data blocks&quot; is a more general feature of HTML5 that can carry almost any textual data. So, a worker could be embedded in this way:</source>
          <target state="translated">通常のスクリプトの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のように、Webページ内にワーカーのコードを埋め込む「公式」な方法はありません。ただし、 &lt;code&gt;src&lt;/code&gt; 属性がなく、実行可能なMIMEタイプを識別しない &lt;code&gt;type&lt;/code&gt; 属性を持つ&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;要素は、JavaScriptが使用できるデータブロック要素と見なすことができます。「データブロック」はHTML5のより一般的な機能で、ほとんどすべてのテキストデータを運ぶことができます。したがって、ワーカーは次のように埋め込むことができます。</target>
        </trans-unit>
        <trans-unit id="94b65007782c8b2d7a1a1834865a6abdc5b5dda1" translate="yes" xml:space="preserve">
          <source>There is one record for each key that is an array.</source>
          <target state="translated">配列であるキーごとに1つのレコードがあります。</target>
        </trans-unit>
        <trans-unit id="5b52736f5a3c4fc1c37d67e351eea3978ad5c090" translate="yes" xml:space="preserve">
          <source>There is one record in the index for each item in an array of keys.</source>
          <target state="translated">キーの配列の各項目のインデックスには、1つのレコードがあります。</target>
        </trans-unit>
        <trans-unit id="3d96baaf92d10aa23e17d629d34103da9987afa1" translate="yes" xml:space="preserve">
          <source>There is only one type of track event.</source>
          <target state="translated">トラックイベントは1種類のみ。</target>
        </trans-unit>
        <trans-unit id="35025ec54394e3e0d04ac72f4815210bff73415c" translate="yes" xml:space="preserve">
          <source>There is slightly better support for &lt;code&gt;pageYOffset&lt;/code&gt; than for &lt;code&gt;scrollY&lt;/code&gt; in older browsers, but if you're not concerned about browsers more than a handful of years old, you can use either one.</source>
          <target state="translated">そこのためにわずかに良いサポートです &lt;code&gt;pageYOffset&lt;/code&gt; のためのより &lt;code&gt;scrollY&lt;/code&gt; 古いブラウザでは、しかし、あなたは歳の一握り以上のブラウザを心配していない場合、あなたはどちらを使用することができます。</target>
        </trans-unit>
        <trans-unit id="ea1c1f7f35de18a5375074a25bdc71a404a203dd" translate="yes" xml:space="preserve">
          <source>There isn't enough memory available to allocate the buffer.</source>
          <target state="translated">バッファを割り当てるのに十分なメモリがありません。</target>
        </trans-unit>
        <trans-unit id="69524f7c378b3e02590aee5ec44eb503f1299d35" translate="yes" xml:space="preserve">
          <source>There must be at least one space after &lt;code&gt;WEBVTT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;WEBVTT&lt;/code&gt; の後に少なくとも1つのスペースが必要です</target>
        </trans-unit>
        <trans-unit id="0c4a1f357f66c3b5e0c1d6d4744bf3e4dec833c3" translate="yes" xml:space="preserve">
          <source>There must be at least two keyframes specified (representing the starting and ending states of the animation sequence). If your keyframe list has only one entry, &lt;a href=&quot;../element/animate&quot;&gt;&lt;code&gt;Element.animate()&lt;/code&gt;&lt;/a&gt; will throw a &lt;code&gt;NotSupportedError&lt;/code&gt; exception.</source>
          <target state="translated">少なくとも2つのキーフレームを指定する必要があります（アニメーションシーケンスの開始状態と終了状態を表します）。キーフレームリストにエントリが1つしかない場合、&lt;a href=&quot;../element/animate&quot;&gt; &lt;code&gt;Element.animate()&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;NotSupportedError&lt;/code&gt; 例外をスローします。</target>
        </trans-unit>
        <trans-unit id="17e1af8a73d618369d1b78033b43199cd3b39069" translate="yes" xml:space="preserve">
          <source>There was an error in the speech recognition grammar or semantic tags, or the chosen grammar format or semantic tag format was unsupported.</source>
          <target state="translated">音声認識文法または意味タグにエラーがあったか、選択した文法フォーマットまたは意味タグフォーマットがサポートされていませんでした。</target>
        </trans-unit>
        <trans-unit id="8d11149c788402adbd352407acad5b1fa65c6143" translate="yes" xml:space="preserve">
          <source>There were various experiments conducted over the next few decades, but it wasn't resricted to science labs and battlefields anymore. Eventually pop culture took over with movie directors showing their visions of virtual reality. Movies like Tron (1982) and The Matrix (1999) were created, where people could transfer themselves into a whole new cyber world or were trapped in one without even knowing, accepting it as the real world.</source>
          <target state="translated">その後数十年の間に様々な実験が行われましたが、もはや科学実験室や戦場での実験ではありませんでした。やがて、映画監督がバーチャルリアリティのビジョンを公開したことで、ポップカルチャーに乗っ取られていきました。トロン』(1982年)や『マトリックス』(1999年)のような映画が作られ、人々は全く新しいサイバー世界に身を移すことができたり、知らず知らずのうちにサイバー世界に閉じ込められ、それを現実の世界として受け入れるようになりました。</target>
        </trans-unit>
        <trans-unit id="f272780743da29d11032e050401c58ba4f9777fd" translate="yes" xml:space="preserve">
          <source>There's &lt;a href=&quot;https://bugzilla.mozilla.org/attachment.cgi?id=220609&quot;&gt;a simple test case&lt;/a&gt; that you can run to verify that the events are working (does not work in Chrome due to attaching the event listener to document.body).</source>
          <target state="translated">あります&lt;a href=&quot;https://bugzilla.mozilla.org/attachment.cgi?id=220609&quot;&gt;簡単なテストケース&lt;/a&gt;あなたはイベントが（原因document.bodyにイベントリスナーを取り付けるにChromeで動作しない）機能していることを確認するために実行できるということは。</target>
        </trans-unit>
        <trans-unit id="bc8af119de4d69d195d7eb4fe3d73b1216347933" translate="yes" xml:space="preserve">
          <source>There's &lt;a href=&quot;https://bugzilla.mozilla.org/attachment.cgi?id=220609&quot;&gt;a simple test case&lt;/a&gt; that you can run to verify that the events are working.</source>
          <target state="translated">あります&lt;a href=&quot;https://bugzilla.mozilla.org/attachment.cgi?id=220609&quot;&gt;簡単なテストケース&lt;/a&gt;あなたはイベントが動作していることを確認するために実行することができます。</target>
        </trans-unit>
        <trans-unit id="d48d421df8b7c0c5659389bcd922a44ba4f4f034" translate="yes" xml:space="preserve">
          <source>There's a &lt;a href=&quot;../stereopannernode&quot;&gt;&lt;code&gt;StereoPannerNode&lt;/code&gt;&lt;/a&gt; node, which changes the balance of the sound between the left and right speakers, if the user has stereo capabilities.</source>
          <target state="translated">ユーザーがステレオ機能を持っている場合、左右のスピーカー間のサウンドのバランスを変更する&lt;a href=&quot;../stereopannernode&quot;&gt; &lt;code&gt;StereoPannerNode&lt;/code&gt; &lt;/a&gt;ノードがあります。</target>
        </trans-unit>
        <trans-unit id="a2d601f013a180e7caf5974866c51c1c292aa86d" translate="yes" xml:space="preserve">
          <source>There's a good reason why the notion of tracking visibility of ads is being used in this example. It turns out that one of the most common uses of Flash or other script in advertising on the Web is to record how long each ad is visible, for the purpose of billing and payment of revenues. Without the Intersection Observer API, this winds up being done using intervals and timeouts for each individual ad, or other techniques that tend to slow the page down. Using this API lets everything get streamlined by the browser to reduce the impact on performance substantially.</source>
          <target state="translated">広告の可視性を追跡するという概念がこの例で使用されている理由は正当な理由があります。Web上の広告でFlashや他のスクリプトを使用する最も一般的な用途の1つは、収益の請求や支払いのために、各広告がどのくらいの時間表示されているかを記録することであることがわかりました。Intersection Observer APIがないと、個々の広告の間隔やタイムアウト、またはページが遅くなる傾向のある他のテクニックを使って行われてしまいます。この API を使用することで、ブラウザによってすべてが合理化され、パフォーマンスへの影響を大幅に軽減することができます。</target>
        </trans-unit>
        <trans-unit id="ab27adafd9dd98144b1fc7d9e23a92d990055b13" translate="yes" xml:space="preserve">
          <source>There's a sequence of things that have to happen in order to make it possible to begin a WebRTC session:</source>
          <target state="translated">WebRTCセッションを開始できるようにするためには、一連の流れがあります。</target>
        </trans-unit>
        <trans-unit id="c5fc5881de87f85c7a454cf1ab5f029e0eb2e866" translate="yes" xml:space="preserve">
          <source>There's also a &lt;a href=&quot;web_audio_api/basic_concepts_behind_web_audio_api&quot;&gt;Basic Concepts Behind Web Audio API&lt;/a&gt; article, to help you understand the way digital audio works, specifically in the realm of the API. This also includes a good introduction to some of the concepts the API is built upon.</source>
          <target state="translated">&lt;a href=&quot;web_audio_api/basic_concepts_behind_web_audio_api&quot;&gt;WebオーディオAPIの背後に&lt;/a&gt;ある基本的な概念の記事もあり、特にAPIの領域でデジタルオーディオが機能する方法を理解するのに役立ちます。これには、APIの基礎となるいくつかの概念の紹介も含まれています。</target>
        </trans-unit>
        <trans-unit id="997d28e1c00ca36c3e20ab8cfc1e46204ec5fbf1" translate="yes" xml:space="preserve">
          <source>There's also a reference distance (&lt;code&gt;&lt;a href=&quot;../pannernode/refdistance&quot;&gt;refDistance&lt;/a&gt;&lt;/code&gt;), which is used by the distance models. We can keep that at the default value of &lt;code&gt;1&lt;/code&gt; as well:</source>
          <target state="translated">距離モデルで使用される参照距離（ &lt;code&gt;&lt;a href=&quot;../pannernode/refdistance&quot;&gt;refDistance&lt;/a&gt;&lt;/code&gt; ）もあります。これをデフォルト値の &lt;code&gt;1&lt;/code&gt; のままにすることもできます。</target>
        </trans-unit>
        <trans-unit id="5613b9799b53183cc286723baf665ceb4844e4de" translate="yes" xml:space="preserve">
          <source>There's also another limit called &lt;strong&gt;group limit&lt;/strong&gt; &amp;mdash; this is defined as 20% of the global limit, but it has a minimum of 10 MB and a maximum of 2 GB. Each origin is part of a group (group of origins). There's one group for each eTLD+1 domain. For example:</source>
          <target state="translated">&lt;strong&gt;グループ&lt;/strong&gt;制限と呼ばれる別の制限もあります。これはグローバル制限の20％として定義されますが、最小値は10 MB、最大値は2 GBです。各起点はグループ（起点のグループ）の一部です。eTLD + 1ドメインごとに1つのグループがあります。例えば：</target>
        </trans-unit>
        <trans-unit id="7cb3f711551918e49bcf6eebf8cd30764aa2cb09" translate="yes" xml:space="preserve">
          <source>There's an even more extensive example at &lt;a href=&quot;intersection_observer_api/timing_element_visibility&quot;&gt;Timing element visibility with the Intersection Observer API&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;intersection_observer_api/timing_element_visibility&quot;&gt;Intersection Observer APIを使用したタイミング要素の可視性には、&lt;/a&gt;さらに広範な例があります。</target>
        </trans-unit>
        <trans-unit id="7ef8c82adb4072591edd747f1352ce7dfb2fd097" translate="yes" xml:space="preserve">
          <source>There's more information in the &lt;a href=&quot;https://developers.google.com/chrome-developer-tools/docs/console-api#consoledirobject&quot;&gt;Chrome Console API reference&lt;/a&gt; about this and other functions.</source>
          <target state="translated">&lt;a href=&quot;https://developers.google.com/chrome-developer-tools/docs/console-api#consoledirobject&quot;&gt;Chrome Console APIリファレンスには&lt;/a&gt;、この関数やその他の関数に関する詳細情報があります。</target>
        </trans-unit>
        <trans-unit id="f3724586933fd10276a56ccb3cfe55f5d48c7b47" translate="yes" xml:space="preserve">
          <source>There's no strict right or wrong way when writing creative code. As long as you consider security, performance, and accessibility, you can adapt to your own style. In this article, we'll share a number of &lt;em&gt;best practices&lt;/em&gt; &amp;mdash; guidelines, tips, and tricks for working with the Web Audio API.</source>
          <target state="translated">クリエイティブなコードを書く際に厳密な正しい方法や間違った方法はありません。セキュリティ、パフォーマンス、アクセシビリティを考慮すれば、自分のスタイルに適応できます。この記事では、我々は多くの共有よ&lt;em&gt;ベストプラクティス&lt;/em&gt;ウェブオーディオAPIを使用するためのガイドライン、ヒント、およびトリックを- 。</target>
        </trans-unit>
        <trans-unit id="a2624e8d9ddad62b6beecab7420be074926dd91c" translate="yes" xml:space="preserve">
          <source>There's nothing magic in here. It's fairly basic CSS.</source>
          <target state="translated">ここには魔法のようなものは何もありません。かなり基本的なCSSです。</target>
        </trans-unit>
        <trans-unit id="aca55dc97193d40ad28701bdd92f406c9d56bdc6" translate="yes" xml:space="preserve">
          <source>There's nothing very difficult in these examples. In both cases we see a succession of curves being drawn which finally result in a complete shape.</source>
          <target state="translated">これらの例では、それほど難しいことは何もありません。どちらの例でも、最終的には完全な形になるような曲線の連続が描かれています。</target>
        </trans-unit>
        <trans-unit id="e889d8698fde7c242a7b2847687962e7ccc83481" translate="yes" xml:space="preserve">
          <source>There's one last function to define, and it's the point to the entire exercise: the &lt;code&gt;takepicture()&lt;/code&gt; function, whose job it is to capture the currently displayed video frame, convert it into a PNG file, and display it in the captured frame box. The code looks like this:</source>
          <target state="translated">最後に定義する関数が1つあります。これが全体の演習の &lt;code&gt;takepicture()&lt;/code&gt; 関数は、現在表示されているビデオフレームをキャプチャし、PNGファイルに変換して、キャプチャされたフレームボックスに表示する役割を果たします。コードは次のようになります。</target>
        </trans-unit>
        <trans-unit id="d0c07ae2e8523c972399a7d7fe5f70bfb7ea30d7" translate="yes" xml:space="preserve">
          <source>There's the &lt;a href=&quot;https://github.com/chrisguttandin/standardized-audio-context&quot;&gt;&lt;code&gt;standardised-audio-context&lt;/code&gt;&lt;/a&gt; npm package, which creates API functionality consistently across browsers, full holes as they are found. It's constantly in development and endeavours to keep up with the current specification.</source>
          <target state="translated">あります&lt;a href=&quot;https://github.com/chrisguttandin/standardized-audio-context&quot;&gt; &lt;code&gt;standardised-audio-context&lt;/code&gt; &lt;/a&gt;彼らが発見されているようなブラウザ、完全な穴一貫APIの機能を作成し、NPMパッケージは、。それは常に開発中であり、現在の仕様に追いつくように努めています。</target>
        </trans-unit>
        <trans-unit id="4e019a82fef2e3f6171062fa30a094172b804c44" translate="yes" xml:space="preserve">
          <source>Therefore, it is possible to choose the range in which an &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; will change by setting the value of the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; to the central frequency, and to use a &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt; between the audio source and the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; to adjust the range of the &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; changes.</source>
          <target state="translated">したがって、その範囲を選択することが可能である&lt;a href=&quot;../audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; は、&lt;/a&gt;の値に設定することにより変更され&lt;a href=&quot;../audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; を&lt;/a&gt;中心周波数に、そして使用する&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; を&lt;/a&gt;オーディオソースとの間&lt;a href=&quot;../audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; &lt;/a&gt;の範囲に調整する&lt;a href=&quot;../audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; &lt;/a&gt;変化します。</target>
        </trans-unit>
        <trans-unit id="b2f666c413b929db0280b26ff281d05fc2e76e52" translate="yes" xml:space="preserve">
          <source>These APIs might be useful when working further with canvas and graphics:</source>
          <target state="translated">これらのAPIは、キャンバスやグラフィックをさらに使いこなすときに便利かもしれません。</target>
        </trans-unit>
        <trans-unit id="ee9a606273cacc92d323c135466e381bdacae85a" translate="yes" xml:space="preserve">
          <source>These are accessed through each ad's &lt;a href=&quot;../htmlelement/dataset&quot;&gt;&lt;code&gt;HTMLElement.dataset&lt;/code&gt;&lt;/a&gt; attribute, which provides a &lt;a href=&quot;../domstringmap&quot;&gt;&lt;code&gt;DOMStringMap&lt;/code&gt;&lt;/a&gt; mapping each custom attribute's name to its value. The values are strings, but we can convert those to numbers easily enough&amp;mdash;in fact, JavaScript generally does it automatically, although we'll have one instance where we have to do it ourselves.</source>
          <target state="translated">これらは、各カスタム属性の名前をその値にマッピングする&lt;a href=&quot;../domstringmap&quot;&gt; &lt;code&gt;DOMStringMap&lt;/code&gt; &lt;/a&gt;を提供する各広告の&lt;a href=&quot;../htmlelement/dataset&quot;&gt; &lt;code&gt;HTMLElement.dataset&lt;/code&gt; &lt;/a&gt;属性を介してアクセスされます。値は文字列ですが、十分に簡単に数値に変換できます。実際、JavaScriptは通常、自動的に実行されますが、自分で実行する必要があるインスタンスが1つあります。</target>
        </trans-unit>
        <trans-unit id="13f84087545183278fce274f814078977d8a8991" translate="yes" xml:space="preserve">
          <source>These are images created using the &lt;code&gt;Image()&lt;/code&gt; constructor, as well as any &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">これらは、 &lt;code&gt;Image()&lt;/code&gt; コンストラクターと&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt; &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を使用して作成された画像です。</target>
        </trans-unit>
        <trans-unit id="0e94523494a8c57eae349c90090228ce5d8d09a5" translate="yes" xml:space="preserve">
          <source>These are images embedded using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/image&quot;&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">これらは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/image&quot;&gt; &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を使用して埋め込まれた画像です。</target>
        </trans-unit>
        <trans-unit id="bededfc349a1a9c16a4c6528784f75e829fb54b5" translate="yes" xml:space="preserve">
          <source>These are properties of the window object that can be set to establish event handlers for the various things that can happen in the window that might be of interest.</source>
          <target state="translated">これらはウィンドウオブジェクトのプロパティで、ウィンドウ内で起こる様々なことのためのイベントハンドラを確立するために設定することができます。</target>
        </trans-unit>
        <trans-unit id="a821830064c2ca53ea5d92dd7ffdb5edfa845f2c" translate="yes" xml:space="preserve">
          <source>These are supported values for the &lt;code&gt;resultType&lt;/code&gt; parameter of the &lt;code&gt;evaluate&lt;/code&gt; method:</source>
          <target state="translated">これらは、 &lt;code&gt;evaluate&lt;/code&gt; メソッドの &lt;code&gt;resultType&lt;/code&gt; パラメータでサポートされている値です。</target>
        </trans-unit>
        <trans-unit id="1b1b071e05949d480c4d1ce488e58ed12e37bd73" translate="yes" xml:space="preserve">
          <source>These are the basic features of the Web Animations API, most of which are already supported across the latest release versions of Firefox and Chrome. By now you should be ready to &quot;jump down the rabbit hole&quot; of animating in the browser and ready to write your own animation experiments! If you're using the API and want to share, try using the #WAAPI hashtag. We will be watching and will write more tutorials to cover further features as support spreads!</source>
          <target state="translated">これらはWeb Animations APIの基本的な機能であり、そのほとんどはFirefoxとChromeの最新リリースバージョンで既にサポートされています。そろそろブラウザでのアニメーションの「うさぎの穴を飛び降りる」準備ができて、独自のアニメーション実験を書く準備ができているはずです。APIを使用していて共有したい場合は、#WAAPIのハッシュタグを使ってみてください。サポートが広まり次第、さらに多くの機能をカバーするチュートリアルを書く予定です。</target>
        </trans-unit>
        <trans-unit id="23b3ff6648f23356d644f1640c87067e3c26e4c6" translate="yes" xml:space="preserve">
          <source>These are the steps you need to take to draw a frame:</source>
          <target state="translated">以上がフレームを描くために必要な手順です。</target>
        </trans-unit>
        <trans-unit id="92bc89741b07044ead54e0c0e22ccb0d6c1e61ea" translate="yes" xml:space="preserve">
          <source>These are used as follows:</source>
          <target state="translated">これらは、以下のように使用されています。</target>
        </trans-unit>
        <trans-unit id="dbeeb50fca15282002a007bc3ebaf034d2b5f63c" translate="yes" xml:space="preserve">
          <source>These are, in order:</source>
          <target state="translated">これらは、順に。</target>
        </trans-unit>
        <trans-unit id="a55097e024f02fa113e77cc5d09adab4b518a02e" translate="yes" xml:space="preserve">
          <source>These attributes are obsolete and should not be used, even if a browser still supports them.</source>
          <target state="translated">これらの属性は時代遅れのものであり、ブラウザがサポートしていても使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="c6402355fdb81e0c902ae10bc66c240d8bf7a7ff" translate="yes" xml:space="preserve">
          <source>These candidate types are listed in order of priority; the higher in the list they are, the more efficient they are.</source>
          <target state="translated">これらの候補は、優先度の高い順にリストアップされており、リストの中で上位にあるほど効率的です。</target>
        </trans-unit>
        <trans-unit id="2345cd6c133f3a6be031ebb39daaf9a5b4a54269" translate="yes" xml:space="preserve">
          <source>These characters represent the &quot;A&quot; through &quot;D&quot; keys which are part of the DTMF standard but not included on most telephones. These are &lt;em&gt;not&lt;/em&gt; interpreted as digits. Lower-case &quot;a&quot;-&quot;d&quot; automatically gets converted to upper-case.</source>
          <target state="translated">これらの文字は、DTMF標準の一部であるが、ほとんどの電話には含まれていない「A」から「D」のキーを表します。これらは数字として解釈され&lt;em&gt;ません&lt;/em&gt;。小文字の「a」-「d」は自動的に大文字に変換されます。</target>
        </trans-unit>
        <trans-unit id="df9b51c97c0b2c3feeaef7c4f451a127335d7b6a" translate="yes" xml:space="preserve">
          <source>These characters represent the digit keys on a telephone keypad.</source>
          <target state="translated">これらの文字は、電話のキーパッドの数字キーを表しています。</target>
        </trans-unit>
        <trans-unit id="10dc30370cde8e39c8ce6bc141632e455c0b5bf4" translate="yes" xml:space="preserve">
          <source>These constants are defined on the &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; interface. All WebGL 1 constants are also available in a WebGL 2 context.</source>
          <target state="translated">これらの定数は、&lt;a href=&quot;../webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; &lt;/a&gt;インターフェースで定義されます。すべてのWebGL 1定数は、WebGL 2コンテキストでも使用できます。</target>
        </trans-unit>
        <trans-unit id="de0dc21549f8deed64732aaeafc4a9d7535110df" translate="yes" xml:space="preserve">
          <source>These constants are defined on the &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">これらの定数は、&lt;a href=&quot;../webglrenderingcontext&quot;&gt; &lt;code&gt;WebGLRenderingContext&lt;/code&gt; &lt;/a&gt;インターフェースで定義されます。</target>
        </trans-unit>
        <trans-unit id="58c67efe933054b1f0ce614840269807b8651ce7" translate="yes" xml:space="preserve">
          <source>These constants are no longer available &amp;mdash; they were removed in Gecko 25. You should use the string constants directly instead. (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=888598&quot;&gt;bug 888598&lt;/a&gt;)</source>
          <target state="translated">これらの定数は使用できなくなりました&amp;mdash; Gecko 25で削除されました。代わりに文字列定数を直接使用する必要があります。（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=888598&quot;&gt;バグ888598&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="69d11bb6c762d3a73dde0ba88fdb62ea303f07e4" translate="yes" xml:space="preserve">
          <source>These constants are no longer available &amp;mdash; they were removed in Gecko 25. You should use the string constants directly instead. (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=891944&quot;&gt;bug 891944&lt;/a&gt;)</source>
          <target state="translated">これらの定数は使用できなくなりました&amp;mdash; Gecko 25で削除されました。代わりに文字列定数を直接使用する必要があります。（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=891944&quot;&gt;バグ891944&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="65d7409da269406f7f6eaaf802e3e2eb5b1488bc" translate="yes" xml:space="preserve">
          <source>These cookie blocking policies are known to break embedded cross-origin content that requires access to its first-party storage. As an example, federated logins often require access to authentication cookies stored in first-party storage, and will require the user to sign in on each site separately (or completely break) if those cookies are not available. In the case of breakage, site owners have often encouraged users to add their site as an exception or to disable the policy entirely. As a consequence, users who wish to continue to interact with embedded content are forced to greatly relax their blocking policy for resources loaded from all embedded origins and possibly across all websites.</source>
          <target state="translated">これらのクッキーブロッキングポリシーは、そのファーストパーティストレージへのアクセスを必要とする、埋め込まれたクロスオリジンコンテンツを壊すことが知られています。例として、フェデレートされたログインは、しばしばファーストパーティのストレージに保存されている認証クッキーへのアクセスを必要とし、それらのクッキーが利用できない場合には、各サイトで個別にサインインするようにユーザーに要求します(または完全に壊れます)。壊れた場合、サイトの所有者は、ユーザーに自分のサイトを例外として追加するか、ポリシーを完全に無効にするように促していることが多い。その結果、埋め込みコンテンツとのやりとりを続けたいユーザーは、すべての埋め込み元から読み込まれたリソースや、場合によってはすべてのウェブサイトにまたがって読み込まれたリソースに対するブロッキングポリシーを大幅に緩和せざるを得なくなります。</target>
        </trans-unit>
        <trans-unit id="fa3d40b5978eb2d72bba3b4be6c0231207728abe" translate="yes" xml:space="preserve">
          <source>These correspond to the similarly-labeled keys which are typically on the bottom row of the telephone keypad.</source>
          <target state="translated">これらは、電話のキーパッドの最下段にある同様のラベルが付けられたキーに対応しています。</target>
        </trans-unit>
        <trans-unit id="63ab3d7bc9771c337e3b20d87f1b8e61d5b2cb19" translate="yes" xml:space="preserve">
          <source>These defaults ask for a pretty common camera configuration, but don't insist on any property being of special importance. The browser should do its best to match these settings but will settle for anything it considers a close match.</source>
          <target state="translated">これらのデフォルト設定は、かなり一般的なカメラ設定を要求しますが、プロパティが特別に重要であることを主張しないでください。ブラウザはこれらの設定と一致するように最善を尽くすべきですが、ほぼ一致すると思われるものであれば何でも構いません。</target>
        </trans-unit>
        <trans-unit id="5bdd48fb618064ecf28a9c91a62bb5d2b1d63c09" translate="yes" xml:space="preserve">
          <source>These elements are:</source>
          <target state="translated">これらの要素は</target>
        </trans-unit>
        <trans-unit id="7f1f14ab12c8e7a7d1fc283af78fd3a362c5da72" translate="yes" xml:space="preserve">
          <source>These errors may occur either directly because of a call to a &lt;code&gt;MediaRecorder&lt;/code&gt; method, or indirectly due to a problem arising during the recording process.</source>
          <target state="translated">これらのエラーは、 &lt;code&gt;MediaRecorder&lt;/code&gt; メソッドの呼び出しが原因で直接発生する場合と、録音プロセス中に発生した問題が原因で間接的に発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="2b753bfb7e70e62060fa57970dc8290f179440f8" translate="yes" xml:space="preserve">
          <source>These event handlers are defined on the &lt;a href=&quot;globaleventhandlers&quot;&gt;&lt;code&gt;GlobalEventHandlers&lt;/code&gt;&lt;/a&gt; mixin, and implemented by &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;, as well as by &lt;a href=&quot;workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt; for Web Workers.</source>
          <target state="translated">これらのイベントハンドラーは&lt;a href=&quot;globaleventhandlers&quot;&gt; &lt;code&gt;GlobalEventHandlers&lt;/code&gt; &lt;/a&gt;ミックスインで定義され、&lt;a href=&quot;htmlelement&quot;&gt; &lt;code&gt;HTMLElement&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;workerglobalscope&quot;&gt; &lt;code&gt;WorkerGlobalScope&lt;/code&gt; &lt;/a&gt; for Web Workers によって実装されます。</target>
        </trans-unit>
        <trans-unit id="767745062027dc314280f4765a86bee30715d597" translate="yes" xml:space="preserve">
          <source>These events can be tracked using the &lt;a href=&quot;../notification/onclick&quot;&gt;&lt;code&gt;onclick&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../notification/onclose&quot;&gt;&lt;code&gt;onclose&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../notification/onerror&quot;&gt;&lt;code&gt;onerror&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../notification/onshow&quot;&gt;&lt;code&gt;onshow&lt;/code&gt;&lt;/a&gt; handlers. Because &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; also inherits from &lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;, it's possible to use the &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt; method on it.</source>
          <target state="translated">これらのイベントは、&lt;a href=&quot;../notification/onclick&quot;&gt; &lt;code&gt;onclick&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../notification/onclose&quot;&gt; &lt;code&gt;onclose&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../notification/onerror&quot;&gt; &lt;code&gt;onerror&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../notification/onshow&quot;&gt; &lt;code&gt;onshow&lt;/code&gt; &lt;/a&gt;ハンドラーを使用して追跡できます。ので&lt;a href=&quot;../notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt;からも継承&lt;a href=&quot;../eventtarget&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; &lt;/a&gt;、それを使用することが可能です&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt;、それに方法を。</target>
        </trans-unit>
        <trans-unit id="f3c6ae01aae11fbf35175c0482e92526a9abc385" translate="yes" xml:space="preserve">
          <source>These examples will disable right click on the page:</source>
          <target state="translated">これらの例では、ページ上での右クリックを無効にします。</target>
        </trans-unit>
        <trans-unit id="74d4c56287167455bd5fac29b911bfc91ae25554" translate="yes" xml:space="preserve">
          <source>These exceptions are returned by rejecting the returned promise. Your rejection handler should examine the received exception to determine which occurred.</source>
          <target state="translated">これらの例外は、返されたプロミスを拒否することで返されます。拒絶ハンドラは、受信した例外を調べて、何が発生したかを判断しなければなりません。</target>
        </trans-unit>
        <trans-unit id="fb1c14e7a3bef84404bae1d7042bafa49733da5a" translate="yes" xml:space="preserve">
          <source>These flags are only setable with the &lt;code&gt;secure&lt;/code&gt; attribute.</source>
          <target state="translated">これらのフラグは、 &lt;code&gt;secure&lt;/code&gt; 属性でのみ設定できます。</target>
        </trans-unit>
        <trans-unit id="0a7a2720df3a4b85e9924ba7f064ca6aa8652c10" translate="yes" xml:space="preserve">
          <source>These functions are used send to event activity to the application window (to support debugging and learning about the event flow).</source>
          <target state="translated">これらの関数は、イベント活動をアプリケーションウィンドウに送信するために使用されます(デバッグやイベントフローの学習をサポートするため)。</target>
        </trans-unit>
        <trans-unit id="1710f52b80b720d094c833f0022e920cbf6365d9" translate="yes" xml:space="preserve">
          <source>These functions are used to send event activity to the application's window (to support debugging and learning about the event flow).</source>
          <target state="translated">これらの関数は、イベントアクティビティをアプリケーションのウィンドウに送信するために使用されます(デバッグやイベントフローの学習をサポートするため)。</target>
        </trans-unit>
        <trans-unit id="add70970a027207d82f88204daff92e2b264e99c" translate="yes" xml:space="preserve">
          <source>These functions manage the global event caches &lt;code&gt;evCache1&lt;/code&gt;, &lt;code&gt;evCache2&lt;/code&gt; and &lt;code&gt;evCache3&lt;/code&gt;.</source>
          <target state="translated">これらの関数は、グローバルイベントキャッシュ &lt;code&gt;evCache1&lt;/code&gt; 、 &lt;code&gt;evCache2&lt;/code&gt; 、および &lt;code&gt;evCache3&lt;/code&gt; を管理します。</target>
        </trans-unit>
        <trans-unit id="b43bb87640c9723d8b8a7e436cd44a88ce43ea6f" translate="yes" xml:space="preserve">
          <source>These functions support the application but aren't directly involved in the event flow.</source>
          <target state="translated">これらの関数はアプリケーションをサポートしますが、イベントフローには直接関与しません。</target>
        </trans-unit>
        <trans-unit id="47866ca3e0d5dfccadb185033e346b8d56074b01" translate="yes" xml:space="preserve">
          <source>These functions support the application but aren't directly involved with the event flow.</source>
          <target state="translated">これらの関数はアプリケーションをサポートしますが、イベントフローには直接関与しません。</target>
        </trans-unit>
        <trans-unit id="55aa32688d7fc066a527608733b3632334146405" translate="yes" xml:space="preserve">
          <source>These interfaces allow you to add audio spatialization panning effects to your audio sources.</source>
          <target state="translated">これらのインターフェイスを使用すると、オーディオの空間化パンニング効果をオーディオソースに追加することができます。</target>
        </trans-unit>
        <trans-unit id="008fd29c667023d006403abb9d97c97e2aab000a" translate="yes" xml:space="preserve">
          <source>These interfaces are related to interactivity with public-switched telephone networks (PTSNs).</source>
          <target state="translated">これらのインタフェースは、公衆交換電話網(PTSN)との相互作用に関連しています。</target>
        </trans-unit>
        <trans-unit id="d790b62e54280b56f39cdcac55f33d62c2a07e17" translate="yes" xml:space="preserve">
          <source>These interfaces are used to set up, open, and manage WebRTC connections.</source>
          <target state="translated">これらのインターフェイスは、WebRTC接続の設定、オープン、管理に使用されます。</target>
        </trans-unit>
        <trans-unit id="6d588cf1190e7f0f8d5f45e9dd67a86b17dd937a" translate="yes" xml:space="preserve">
          <source>These interfaces may return &lt;code&gt;null&lt;/code&gt; in certain cases where the methods and properties are not relevant. They may throw an exception &amp;mdash; for example when adding children to a node type for which no children can exist.</source>
          <target state="translated">これらのインターフェイスは、メソッドとプロパティが関連していない特定の場合に &lt;code&gt;null&lt;/code&gt; を返す場合があります。たとえば、子が存在できないノードタイプに子を追加する場合など、例外がスローされることがあります。</target>
        </trans-unit>
        <trans-unit id="450b11e86dc8048665575d86a1d5cc645f143abe" translate="yes" xml:space="preserve">
          <source>These lines create a new &lt;code&gt;Promise&lt;/code&gt; which is fulfilled when both of the two &lt;code&gt;Promise&lt;/code&gt;s (&lt;code&gt;stopped&lt;/code&gt; and &lt;code&gt;recorded&lt;/code&gt;) have resolved. Once that resolves, the array data is returned by &lt;code&gt;startRecording()&lt;/code&gt; to its caller.</source>
          <target state="translated">これらの行は、2つの &lt;code&gt;Promise&lt;/code&gt; （ &lt;code&gt;stopped&lt;/code&gt; および &lt;code&gt;recorded&lt;/code&gt; ）の両方が解決されたときに満たされる新しい &lt;code&gt;Promise&lt;/code&gt; を作成します。それが解決されると、配列データが &lt;code&gt;startRecording()&lt;/code&gt; によって呼び出し元に返されます。</target>
        </trans-unit>
        <trans-unit id="dd65638cc6b446c47d58fc40fb006dc25c41927e" translate="yes" xml:space="preserve">
          <source>These may vary substantially depending on the specifics of the service, and a given processing service may have multiple URLs used, depending on the version of their API, their communication technology, and so forth.</source>
          <target state="translated">これらはサービスの仕様によって大きく異なる場合があり、ある処理サービスではAPIのバージョンや通信技術などによって複数のURLが使用されている場合があります。</target>
        </trans-unit>
        <trans-unit id="d126a125430c518c3480f98bd6590612312c83fa" translate="yes" xml:space="preserve">
          <source>These mechanisms are available via the &lt;a href=&quot;../window/sessionstorage&quot;&gt;&lt;code&gt;Window.sessionStorage&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../window/localstorage&quot;&gt;&lt;code&gt;Window.localStorage&lt;/code&gt;&lt;/a&gt; properties (to be more precise, in supporting browsers the &lt;code&gt;Window&lt;/code&gt; object implements the &lt;code&gt;WindowLocalStorage&lt;/code&gt; and &lt;code&gt;WindowSessionStorage&lt;/code&gt; objects, which the &lt;code&gt;localStorage&lt;/code&gt; and &lt;code&gt;sessionStorage&lt;/code&gt; properties hang off) &amp;mdash; invoking one of these will create an instance of the &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object, through which data items can be set, retrieved, and removed. A different Storage object is used for the &lt;code&gt;sessionStorage&lt;/code&gt; and &lt;code&gt;localStorage&lt;/code&gt; for each origin &amp;mdash; they function and are controlled separately.</source>
          <target state="translated">これらのメカニズムは、を介して利用可能である&lt;a href=&quot;../window/sessionstorage&quot;&gt; &lt;code&gt;Window.sessionStorage&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../window/localstorage&quot;&gt; &lt;code&gt;Window.localStorage&lt;/code&gt; &lt;/a&gt;（ブラウザをサポートで、より正確にプロパティ &lt;code&gt;Window&lt;/code&gt; オブジェクトの実装 &lt;code&gt;WindowLocalStorage&lt;/code&gt; と &lt;code&gt;WindowSessionStorage&lt;/code&gt; はオブジェクト &lt;code&gt;localStorage&lt;/code&gt; と &lt;code&gt;sessionStorage&lt;/code&gt; 特性がオフハング） -作成され、これらのいずれかを呼び出します&lt;a href=&quot;../storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt;オブジェクトのインスタンス。これを介して、データ項目を設定、取得、および削除できます。各オリジンの &lt;code&gt;sessionStorage&lt;/code&gt; と &lt;code&gt;localStorage&lt;/code&gt; には異なるStorageオブジェクトが使用されます &amp;mdash;これらは機能し、別々に制御されます。</target>
        </trans-unit>
        <trans-unit id="7eed9f88496e650fbdee029eace300edcb495887" translate="yes" xml:space="preserve">
          <source>These mechanisms are available via the &lt;a href=&quot;window/sessionstorage&quot;&gt;&lt;code&gt;Window.sessionStorage&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;window/localstorage&quot;&gt;&lt;code&gt;Window.localStorage&lt;/code&gt;&lt;/a&gt; properties (to be more precise, in supporting browsers the &lt;code&gt;Window&lt;/code&gt; object implements the &lt;code&gt;WindowLocalStorage&lt;/code&gt; and &lt;code&gt;WindowSessionStorage&lt;/code&gt; objects, which the &lt;code&gt;localStorage&lt;/code&gt; and &lt;code&gt;sessionStorage&lt;/code&gt; properties hang off) &amp;mdash; invoking one of these will create an instance of the &lt;a href=&quot;storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object, through which data items can be set, retrieved and removed. A different Storage object is used for the &lt;code&gt;sessionStorage&lt;/code&gt; and &lt;code&gt;localStorage&lt;/code&gt; for each origin &amp;mdash; they function and are controlled separately.</source>
          <target state="translated">これらのメカニズムは、を介して利用可能である&lt;a href=&quot;window/sessionstorage&quot;&gt; &lt;code&gt;Window.sessionStorage&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;window/localstorage&quot;&gt; &lt;code&gt;Window.localStorage&lt;/code&gt; &lt;/a&gt;（ブラウザをサポートで、より正確にプロパティ &lt;code&gt;Window&lt;/code&gt; オブジェクトの実装 &lt;code&gt;WindowLocalStorage&lt;/code&gt; と &lt;code&gt;WindowSessionStorage&lt;/code&gt; はオブジェクト &lt;code&gt;localStorage&lt;/code&gt; と &lt;code&gt;sessionStorage&lt;/code&gt; 特性がオフハング） -作成され、これらのいずれかを呼び出します&lt;a href=&quot;storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt;オブジェクトのインスタンス。データ項目を設定、取得、および削除できます。各オリジンの &lt;code&gt;sessionStorage&lt;/code&gt; と &lt;code&gt;localStorage&lt;/code&gt; には異なるStorageオブジェクトが使用されます &amp;mdash;これらは機能し、別々に制御されます。</target>
        </trans-unit>
        <trans-unit id="3f5318c00d0b100c1c9ee4d152c8552e3e8325e6" translate="yes" xml:space="preserve">
          <source>These methods are available only on the &lt;code&gt;Notification&lt;/code&gt; object itself.</source>
          <target state="translated">これらのメソッドは、 &lt;code&gt;Notification&lt;/code&gt; オブジェクト自体でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="9612ebc03d85793c72674aada8aca4e5f6e27eb9" translate="yes" xml:space="preserve">
          <source>These methods are obsolete and should not be used, even if a browser still supports them.</source>
          <target state="translated">これらの方法は時代遅れのものであり、たとえブラウザがサポートしていても使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="eb1ffdc852a537d21c3e786dbed988694624da21" translate="yes" xml:space="preserve">
          <source>These methods copy data into a specified array, so you need to create a new array to receive the data before invoking one. The first one produces 32-bit floating point numbers, and the second and third ones produce 8-bit unsigned integers, therefore a standard JavaScript array won't do &amp;mdash; you need to use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt;&lt;code&gt;Float32Array&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Uint8Array&quot;&gt;&lt;code&gt;Uint8Array&lt;/code&gt;&lt;/a&gt; array, depending on what data you are handling.</source>
          <target state="translated">これらのメソッドは指定された配列にデータをコピーするため、データを呼び出す前に、データを受け取るための新しい配列を作成する必要があります。最初のものは32ビットの浮動小数点数を生成し、2番目と3番目のものは8ビットの符号なし整数を生成するため、標準のJavaScript配列は機能しません&amp;mdash;使用しているデータに応じて、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Float32Array&quot;&gt; &lt;code&gt;Float32Array&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Uint8Array&quot;&gt; &lt;code&gt;Uint8Array&lt;/code&gt; &lt;/a&gt;配列を使用する必要があります取り扱い。</target>
        </trans-unit>
        <trans-unit id="9749a53a977c72b99303a5164a21cf47e376ea89" translate="yes" xml:space="preserve">
          <source>These methods manage WebGL extensions:</source>
          <target state="translated">これらのメソッドは、WebGLの拡張機能を管理します。</target>
        </trans-unit>
        <trans-unit id="f119078244b1983d2174c33a1dc1930a9566340f" translate="yes" xml:space="preserve">
          <source>These promises are not fully supported as of this writing.</source>
          <target state="translated">これらの約束事は、この文章を書いている時点では完全にはサポートされていません。</target>
        </trans-unit>
        <trans-unit id="55c1fb24154d106c91f4d0a30790946c4e288b2b" translate="yes" xml:space="preserve">
          <source>These properties are available only on an instance of the &lt;code&gt;Notification&lt;/code&gt; object or through its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain&quot;&gt;&lt;code&gt;prototype&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;Notification&lt;/code&gt; object also inherits from the &lt;a href=&quot;eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">これらのプロパティは、 &lt;code&gt;Notification&lt;/code&gt; オブジェクトのインスタンスで、またはその&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Inheritance_and_the_prototype_chain&quot;&gt; &lt;code&gt;prototype&lt;/code&gt; &lt;/a&gt;を通じてのみ使用できます。 &lt;code&gt;Notification&lt;/code&gt; オブジェクトは、から継承&lt;a href=&quot;eventtarget&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; &lt;/a&gt;インターフェース。</target>
        </trans-unit>
        <trans-unit id="c2f6118fd5244aa5759ea8a5c4fe46ede36b15e8" translate="yes" xml:space="preserve">
          <source>These properties are available only on instances of the &lt;code&gt;Notification&lt;/code&gt; object.</source>
          <target state="translated">これらのプロパティは、 &lt;code&gt;Notification&lt;/code&gt; オブジェクトのインスタンスでのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="8630d1beb7f5815e558353776c79277545daae3c" translate="yes" xml:space="preserve">
          <source>These properties are available only on the &lt;code&gt;Notification&lt;/code&gt; object itself.</source>
          <target state="translated">これらのプロパティは、 &lt;code&gt;Notification&lt;/code&gt; オブジェクト自体でのみ使用できます。</target>
        </trans-unit>
        <trans-unit id="e3568c685f75a70eaae5cdeeedfc9dbd317bd2ad" translate="yes" xml:space="preserve">
          <source>These properties are computed locally, and are only available to the device receiving the media stream. Their primary purpose is to examine the error resiliency of the connection, as they provide information about lost packets, lost frames, and how heavily compressed the data is.</source>
          <target state="translated">これらのプロパティはローカルで計算され、メディアストリームを受信しているデバイスでのみ利用可能です。これらのプロパティの主な目的は、失われたパケット、失われたフレーム、およびデータがどれだけ重く圧縮されているかについての情報を提供するため、接続のエラー回復力を調べることです。</target>
        </trans-unit>
        <trans-unit id="f30edcbc56980adc244f5a8988d7ff88626b8e11" translate="yes" xml:space="preserve">
          <source>These properties are defined on the &lt;a href=&quot;windoworworkerglobalscope&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; mixin, and implemented by &lt;a href=&quot;window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;workerglobalscope&quot;&gt;&lt;code&gt;WorkerGlobalScope&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのプロパティは、&lt;a href=&quot;windoworworkerglobalscope&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;ミックスインで定義され、&lt;a href=&quot;window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;workerglobalscope&quot;&gt; &lt;code&gt;WorkerGlobalScope&lt;/code&gt; &lt;/a&gt;によって実装されます。</target>
        </trans-unit>
        <trans-unit id="7fc759053a1b5b839e7971266ff6d29bf786b910" translate="yes" xml:space="preserve">
          <source>These properties are listed in the order in which they occur during the navigation process.</source>
          <target state="translated">これらのプロパティは、ナビゲーションプロセス中に発生する順にリストアップされています。</target>
        </trans-unit>
        <trans-unit id="7d1b535fb32806d374abdfbce171d60977fac683" translate="yes" xml:space="preserve">
          <source>These properties each describe the time at which a particular point in the page loading process was reached. Some correspond to DOM events; others describe the time at which internal browser operations of interest took place.</source>
          <target state="translated">これらのプロパティはそれぞれ、ページ読み込みプロセスの特定のポイントに到達した時間を記述しています。いくつかのプロパティは DOM イベントに対応していますが、その他のプロパティはブラウザの内部操作が行われた時間を表しています。</target>
        </trans-unit>
        <trans-unit id="2e88d4dbcbe864ef724c4a9997e71e9ff32f40e6" translate="yes" xml:space="preserve">
          <source>These properties have been &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/deprecated&quot;&gt;deprecated&lt;/a&gt; and should no longer be used. They are documented primarily to help understand older code bases.</source>
          <target state="translated">これらのプロパティは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/deprecated&quot;&gt;廃止&lt;/a&gt;されており、今後は使用しないでください。これらは主に、古いコードベースを理解するのに役立つように文書化されています。</target>
        </trans-unit>
        <trans-unit id="b842c6fcd3d7a2e446f55ddf3a33b4c146bb49d1" translate="yes" xml:space="preserve">
          <source>These properties have been removed from the Payment Method: Basic Card specification and should no longer be used.</source>
          <target state="translated">これらの物件は、お支払い方法から削除されました。基本カードの仕様から削除され、使用されなくなりました。</target>
        </trans-unit>
        <trans-unit id="b49f67a7c32aee747a7e839530a8a36b76327565" translate="yes" xml:space="preserve">
          <source>These properties have been removed from the specification and should no longer be used.</source>
          <target state="translated">これらのプロパティは仕様から削除されており、使用しなくなっているはずです。</target>
        </trans-unit>
        <trans-unit id="218b08a6a5d4723675abd323d41fe0dd5c165f90" translate="yes" xml:space="preserve">
          <source>These properties might be familiar to you, if you have worked with CSS before.</source>
          <target state="translated">これらのプロパティは、CSSを使ったことがある人なら見慣れたものかもしれません。</target>
        </trans-unit>
        <trans-unit id="f159765f2fbe71b62bbbba938b6d82b5c6aaa671" translate="yes" xml:space="preserve">
          <source>These sources are collectively referred to by the type &lt;a href=&quot;../../canvasimagesource&quot;&gt;&lt;code&gt;CanvasImageSource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのソースは、&lt;a href=&quot;../../canvasimagesource&quot;&gt; &lt;code&gt;CanvasImageSource&lt;/code&gt; &lt;/a&gt;タイプによってまとめて参照されます。</target>
        </trans-unit>
        <trans-unit id="386f0e5157c5328b8098150dc1e9ab9d020228b8" translate="yes" xml:space="preserve">
          <source>These two are equivalent. In the first, &lt;code&gt;item()&lt;/code&gt; is the single method on the &lt;code&gt;nodeList&lt;/code&gt; object. The latter uses the typical array syntax to fetch the second item in the list.</source>
          <target state="translated">これら2つは同等です。最初の例では、 &lt;code&gt;item()&lt;/code&gt; は &lt;code&gt;nodeList&lt;/code&gt; オブジェクトの単一のメソッドです。後者は、典型的な配列構文を使用して、リストの2番目の項目をフェッチします。</target>
        </trans-unit>
        <trans-unit id="d8a89fd7f943f9edb111238228217304d0295414" translate="yes" xml:space="preserve">
          <source>These two replacements also enable the HTML5 standard passage of arbitrary arguments to the callback functions of timers in IE. So they can be used as &lt;em&gt;non-standard-compliant&lt;/em&gt; polyfills also. See the &lt;a href=&quot;#Callback_arguments&quot;&gt;callback arguments paragraph&lt;/a&gt; for a &lt;em&gt;standard-compliant&lt;/em&gt; polyfill.</source>
          <target state="translated">これらの2つの置換により、IEのタイマーのコールバック関数への任意の引数のHTML5標準通過も可能になります。したがって、&lt;em&gt;非標準に準拠した&lt;/em&gt;ポリフィルとしても使用できます。&lt;em&gt;標準に準拠した&lt;/em&gt;ポリフィルについては、&lt;a href=&quot;#Callback_arguments&quot;&gt;コールバック引数の段落&lt;/a&gt;を参照してください。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9593997401dabb5f77bb1fcfdbd52a7565d5c74c" translate="yes" xml:space="preserve">
          <source>These types are used within &lt;a href=&quot;using_extensions&quot;&gt;WebGL extensions&lt;/a&gt;.</source>
          <target state="translated">これらのタイプは、&lt;a href=&quot;using_extensions&quot;&gt;WebGL拡張機能&lt;/a&gt;内で使用されます。</target>
        </trans-unit>
        <trans-unit id="3ef7edf5de6716bff91543d2b1dfb26bc9b6e317" translate="yes" xml:space="preserve">
          <source>These types are used within a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt;. All WebGL 1 types are used as well.</source>
          <target state="translated">これらのタイプは、&lt;a href=&quot;../webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; &lt;/a&gt;内で使用されます。すべてのWebGL 1タイプも使用されます。</target>
        </trans-unit>
        <trans-unit id="e207e2aebc61dc272b811afe1a0f29df6eb231ff" translate="yes" xml:space="preserve">
          <source>These types are used within a &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのタイプは&lt;a href=&quot;../webglrenderingcontext&quot;&gt; &lt;code&gt;WebGLRenderingContext&lt;/code&gt; &lt;/a&gt;内で使用されます。</target>
        </trans-unit>
        <trans-unit id="d85b18bd4b6bf40358b79efd77203c14301ef1d8" translate="yes" xml:space="preserve">
          <source>These values are comparable to the computed styles of an Element returned using &lt;code&gt;window.getComputedStyle(elem)&lt;/code&gt;.</source>
          <target state="translated">これらの値は、 &lt;code&gt;window.getComputedStyle(elem)&lt;/code&gt; を使用して返されたElementの計算されたスタイルに相当します。</target>
        </trans-unit>
        <trans-unit id="60e98c6d7107d27f16bce801901447b2ce5914a8" translate="yes" xml:space="preserve">
          <source>These values are only estimates for several reasons, including both performance and preventing storage capacity data from being used for fingerprinting purposes. See the individual property pages for details.</source>
          <target state="translated">これらの値は、性能と記憶容量データが指紋採取目的で使用されないようにすることの両方を含む、いくつかの理由での推定値に過ぎません。詳細については、個々のプロパティのページを参照してください。</target>
        </trans-unit>
        <trans-unit id="9b52a04e69b4f444f835ba5908ee67bb547dbf42" translate="yes" xml:space="preserve">
          <source>These values describe which phase the event flow is currently being evaluated.</source>
          <target state="translated">これらの値は、イベントフローが現在評価されているフェーズを記述します。</target>
        </trans-unit>
        <trans-unit id="75579d8b8788f857e3e06caa52856f9d25c7aca0" translate="yes" xml:space="preserve">
          <source>These variables are used to manage the list of tasks that are waiting to be performed, as well as status information about the task queue and its execution:</source>
          <target state="translated">これらの変数は、実行待ちのタスクのリストや、タスクキューとその実行に関するステータス情報を管理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="20c2ca4409cb5f3c17cbb86be697f4423ef48692" translate="yes" xml:space="preserve">
          <source>These variables are:</source>
          <target state="translated">これらの変数は</target>
        </trans-unit>
        <trans-unit id="64b96854efa7f21d0cd1e0aa77ac30d7737e8cba" translate="yes" xml:space="preserve">
          <source>These variables will be used to store references to the dial button and the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; into which logging information will be written. They'll get set up when the page is first loaded. See &lt;a href=&quot;#Initialization&quot;&gt;Initialization&lt;/a&gt; below.</source>
          <target state="translated">これらの変数は、ダイヤルボタンへの参照と、ログ情報が書き込まれる&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;を格納するために使用されます。これらは、ページが最初に読み込まれたときに設定されます。下記の&lt;a href=&quot;#Initialization&quot;&gt;初期化を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6dd5f45468d7249ad4904a2ff926289482b672b5" translate="yes" xml:space="preserve">
          <source>These work in exactly the same way as &lt;code&gt;screenX&lt;/code&gt;/&lt;code&gt;screenY&lt;/code&gt;.</source>
          <target state="translated">これらは、 &lt;code&gt;screenX&lt;/code&gt; / &lt;code&gt;screenY&lt;/code&gt; とまったく同じように機能します。</target>
        </trans-unit>
        <trans-unit id="652489284edfa9cf3f58cbeb8e988afda1c6482c" translate="yes" xml:space="preserve">
          <source>These, combined with additional values for other properties of the &lt;a href=&quot;../paymentaddress&quot;&gt;&lt;code&gt;PaymentAddress&lt;/code&gt;&lt;/a&gt;, would represent the full address, which is:</source>
          <target state="translated">これらは、&lt;a href=&quot;../paymentaddress&quot;&gt; &lt;code&gt;PaymentAddress&lt;/code&gt; の&lt;/a&gt;他のプロパティの追加の値と組み合わせて、完全な住所を表します。</target>
        </trans-unit>
        <trans-unit id="01f29c90bdeaf2da2dae8d9a3918c0c800ac7774" translate="yes" xml:space="preserve">
          <source>They are read-only, but their counterpart, with the same name, in &lt;a href=&quot;dommatrix&quot;&gt;&lt;code&gt;DOMMatrix&lt;/code&gt;&lt;/a&gt; aren't.</source>
          <target state="translated">それらは読み取り専用ですが、&lt;a href=&quot;dommatrix&quot;&gt; &lt;code&gt;DOMMatrix&lt;/code&gt; &lt;/a&gt;内の同じ名前の対応するものはそうではありません。</target>
        </trans-unit>
        <trans-unit id="951c6c7803fc9518fff1c038ddcf792a20e4d131" translate="yes" xml:space="preserve">
          <source>They can also be created programmatically via JavaScript, but this is only really useful in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt;&lt;code&gt;ServiceWorkers&lt;/code&gt;&lt;/a&gt;, when you are providing a custom response to a received request using a &lt;a href=&quot;../fetchevent/respondwith&quot;&gt;&lt;code&gt;respondWith()&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">それらはJavaScriptを介してプログラムで作成することもできますが、これは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API&quot;&gt; &lt;code&gt;ServiceWorkers&lt;/code&gt; &lt;/a&gt;で非常に役立ちます。これは、&lt;a href=&quot;../fetchevent/respondwith&quot;&gt; &lt;code&gt;respondWith()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、受信したリクエストに対するカスタムレスポンスを提供する場合のみです。</target>
        </trans-unit>
        <trans-unit id="edd2516cc5afcfba72dc78eba774693f39fe306d" translate="yes" xml:space="preserve">
          <source>Things RTP doesn't do</source>
          <target state="translated">RTPではできないこと</target>
        </trans-unit>
        <trans-unit id="40a7ea113597dae6dfd33fd5ab0013d292582197" translate="yes" xml:space="preserve">
          <source>Things that don't work with structured clone</source>
          <target state="translated">構造化クローンで動かないもの</target>
        </trans-unit>
        <trans-unit id="176d1270a4ec08e4a954fc89cb3ddf52fe730e7c" translate="yes" xml:space="preserve">
          <source>Things that trigger negotiation</source>
          <target state="translated">交渉のきっかけとなるもの</target>
        </trans-unit>
        <trans-unit id="c3738a50c69fe9fcbd22969a5ff2e60471316b13" translate="yes" xml:space="preserve">
          <source>Things to avoid</source>
          <target state="translated">避けるべきこと</target>
        </trans-unit>
        <trans-unit id="4824221375d3ce9b6f04cd13e1f0c90e7b5aac9d" translate="yes" xml:space="preserve">
          <source>Things to keep in mind</source>
          <target state="translated">気をつけたいこと</target>
        </trans-unit>
        <trans-unit id="0da42472b3dbe6143cca3d9ef365827712335a49" translate="yes" xml:space="preserve">
          <source>Things your users want to know</source>
          <target state="translated">ユーザーが知りたいこと</target>
        </trans-unit>
        <trans-unit id="9892199e599bdf28c3c4159f6d0724a42a97ed64" translate="yes" xml:space="preserve">
          <source>Think of a subprotocol as a custom &lt;a href=&quot;https://en.wikipedia.org/wiki/XML_schema&quot;&gt;XML schema&lt;/a&gt; or &lt;a href=&quot;https://en.wikipedia.org/wiki/Document_Type_Definition&quot;&gt;doctype declaration&lt;/a&gt;. You're still using XML and its syntax, but you're additionally restricted by a structure you agreed on. WebSocket subprotocols are just like that. They do not introduce anything fancy, they just establish structure. Like a doctype or schema, both parties must agree on the subprotocol; unlike a doctype or schema, the subprotocol is implemented on the server and cannot be externally refered to by the client.</source>
          <target state="translated">サブプロトコルは、カスタム&lt;a href=&quot;https://en.wikipedia.org/wiki/XML_schema&quot;&gt;XMLスキーマ&lt;/a&gt;または&lt;a href=&quot;https://en.wikipedia.org/wiki/Document_Type_Definition&quot;&gt;doctype宣言と&lt;/a&gt;考えてください。あなたはまだXMLとその構文を使用していますが、同意した構造によってさらに制限されています。WebSocketサブプロトコルはそのようなものです。彼らは派手なものを何も紹介しません、彼らは単に構造を確立します。doctypeまたはスキーマと同様に、両方の当事者はサブプロトコルについて合意する必要があります。doctypeやスキーマとは異なり、サブプロトコルはサーバーに実装されており、クライアントが外部から参照することはできません。</target>
        </trans-unit>
        <trans-unit id="8a8cf29266faf9bd2f28348fad2c5a8002189622" translate="yes" xml:space="preserve">
          <source>Think of an extension as compressing a file before e-mailing it to someone. Whatever you do, you're sending the &lt;em&gt;same&lt;/em&gt; data in different forms. The recipient will eventually be able to get the same data as your local copy, but it is sent differently. That's what an extension does. WebSockets defines a protocol and a simple way to send data, but an extension such as compression could allow sending the same data but in a shorter format.</source>
          <target state="translated">拡張機能は、誰かに電子メールで送信する前にファイルを圧縮すると考えることができます。何をするにしても、&lt;em&gt;同じ&lt;/em&gt;データを異なる形式で送信します。受信者は最終的にローカルコピーと同じデータを取得できますが、送信方法は異なります。これが拡張機能の機能です。WebSocketsはプロトコルとデータを送信する簡単な方法を定義しますが、圧縮などの拡張機能により、同じデータをより短い形式で送信できます。</target>
        </trans-unit>
        <trans-unit id="d6383d5e0964b3c11743aa364449e9c94499eadd" translate="yes" xml:space="preserve">
          <source>Third party window content (e.g. &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; content) can access the IndexedDB store for the origin it is embedded into, unless the browser is set to &lt;a href=&quot;https://support.mozilla.org/en-US/kb/disable-third-party-cookies&quot;&gt;never accept third party cookies&lt;/a&gt; (see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1147821&quot;&gt;bug 1147821&lt;/a&gt;.)</source>
          <target state="translated">サードパーティのウィンドウコンテンツ（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;コンテンツなど）は、ブラウザが&lt;a href=&quot;https://support.mozilla.org/en-US/kb/disable-third-party-cookies&quot;&gt;サードパーティのCookieを受け入れないように&lt;/a&gt;設定されていない限り、埋め込まれているオリジンのIndexedDBストアにアクセスできます（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1147821&quot;&gt;バグ1147821を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="74597a7753e031ab06568a761bc2da6c6d4687d0" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt;'s transaction is inactive.</source>
          <target state="translated">この&lt;a href=&quot;../idbindex&quot;&gt; &lt;code&gt;IDBIndex&lt;/code&gt; &lt;/a&gt;のトランザクションは非アクティブです。</target>
        </trans-unit>
        <trans-unit id="6cc3b26dc24d2f88b5e8527458659a068eec7d65" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; has been deleted.</source>
          <target state="translated">この&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;は削除されました。</target>
        </trans-unit>
        <trans-unit id="8b751e98eaac2c177a9f9f4dc71e38507fc1ea6f" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../idbindex&quot;&gt;&lt;code&gt;IDBIndex&lt;/code&gt;&lt;/a&gt; has been deleted.</source>
          <target state="translated">この&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../idbindex&quot;&gt; &lt;code&gt;IDBIndex&lt;/code&gt; &lt;/a&gt;は削除されました。</target>
        </trans-unit>
        <trans-unit id="a16cac9b24ff131803e2077a48d2850dc13fe554" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt;'s transaction is inactive.</source>
          <target state="translated">この&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;のトランザクションは非アクティブです。</target>
        </trans-unit>
        <trans-unit id="691a18f1d0b7225d6eeaa9dbcd91654aacccdb33" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; object is being updated (i.e. its &lt;a href=&quot;updating&quot;&gt;&lt;code&gt;SourceBuffer.updating&lt;/code&gt;&lt;/a&gt; property is currently &lt;code&gt;true&lt;/code&gt;), or this &lt;code&gt;SourceBuffer&lt;/code&gt; has been removed from the &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この&lt;a href=&quot;../sourcebuffer&quot;&gt; &lt;code&gt;SourceBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトが更新されている（つまり、その&lt;a href=&quot;updating&quot;&gt; &lt;code&gt;SourceBuffer.updating&lt;/code&gt; &lt;/a&gt;プロパティが現在 &lt;code&gt;true&lt;/code&gt; である）か、この &lt;code&gt;SourceBuffer&lt;/code&gt; が&lt;a href=&quot;../mediasource&quot;&gt; &lt;code&gt;MediaSource&lt;/code&gt; &lt;/a&gt;から削除されています。</target>
        </trans-unit>
        <trans-unit id="91aaca739a3d9cf346184c3ba09dd855a8199d8e" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;polyfill&lt;/a&gt; adds compatibility to all Browsers supporting &lt;a href=&quot;https://caniuse.com/#search=es5&quot;&gt;ES5&lt;/a&gt;:</source>
          <target state="translated">この&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/Polyfill&quot;&gt;ポリフィル&lt;/a&gt;は、&lt;a href=&quot;https://caniuse.com/#search=es5&quot;&gt;ES5を&lt;/a&gt;サポートするすべてのブラウザに互換性を追加します。</target>
        </trans-unit>
        <trans-unit id="4a2c1acb3cee17f0f75a08a50ca5123bd67812cd" translate="yes" xml:space="preserve">
          <source>This &lt;em&gt;&lt;a href=&quot;../audiobuffer&quot;&gt;&lt;code&gt;AudioBuffer&lt;/code&gt;&lt;/a&gt;&lt;/em&gt; must have the same sample-rate as the &lt;code&gt;AudioContext&lt;/code&gt; or an exception will be thrown. At the time when this attribute is set, the buffer and the state of the attribute will be used to configure the &lt;code&gt;ConvolverNode&lt;/code&gt; with this impulse response having the given normalization. The initial value of this attribute is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">この&lt;em&gt;&lt;a href=&quot;../audiobuffer&quot;&gt; &lt;code&gt;AudioBuffer&lt;/code&gt; は&lt;/a&gt;&lt;/em&gt;同じサンプルレートを持っている必要があります &lt;code&gt;AudioContext&lt;/code&gt; または例外がスローされます。この属性が設定された時点で、バッファーと属性の状態を使用して、指定された正規化を持つこのインパルス応答で &lt;code&gt;ConvolverNode&lt;/code&gt; を構成します。この属性の初期値は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="39deeb8a2b385ab83888bf39251e1006f23d059a" translate="yes" xml:space="preserve">
          <source>This &lt;em&gt;is&lt;/em&gt; a little confusing, but what we're doing is using sin and cos to help us work out the circular motion the coordinates need for the rotation of the boombox.</source>
          <target state="translated">これ&lt;em&gt;は&lt;/em&gt;少し混乱しますが、私たちがやっていることは、soomとcosを使用して、ラジカセの回転に必要な円運動を計算するのに役立っています。</target>
        </trans-unit>
        <trans-unit id="1c174037f42bdff2e7f596721f302d30e998fd83" translate="yes" xml:space="preserve">
          <source>This &lt;strong&gt;required&lt;/strong&gt; property is either a single &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; or an array of &lt;a href=&quot;domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;s, each specifying a URL which can be used to connect to the server.</source>
          <target state="translated">この&lt;strong&gt;必須&lt;/strong&gt;プロパティは、単一の&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;の配列のいずれかであり、それぞれがサーバーへの接続に使用できるURLを指定します。</target>
        </trans-unit>
        <trans-unit id="355ca8e73ffa0fa9c542b143e0c7fad3f84604e2" translate="yes" xml:space="preserve">
          <source>This API allows asynchronous read of &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">このAPIにより、&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトの非同期読み取りが可能になります。</target>
        </trans-unit>
        <trans-unit id="5d46c165022be2ce6d3c067a91f4b16e55b4c243" translate="yes" xml:space="preserve">
          <source>This API allows synchronous read of &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects. This is an API that works only in workers.</source>
          <target state="translated">このAPIにより、&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;オブジェクトと&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトの同期読み取りが可能になります。これは、ワーカーでのみ機能するAPIです。</target>
        </trans-unit>
        <trans-unit id="df919cfd25897d3dc2638852a09ef1b1cf3d3fa0" translate="yes" xml:space="preserve">
          <source>This API has no official W3C or WHATWG specification.</source>
          <target state="translated">このAPIにはW3CやWHATWGの公式仕様はありません。</target>
        </trans-unit>
        <trans-unit id="aa69a35f5ef7c966442e77e3e3d7341298985282" translate="yes" xml:space="preserve">
          <source>This API is designed to supersede accessing the clipboard using &lt;a href=&quot;document/execcommand&quot;&gt;&lt;code&gt;document.execCommand()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このAPIは、&lt;a href=&quot;document/execcommand&quot;&gt; &lt;code&gt;document.execCommand()&lt;/code&gt; &lt;/a&gt;を使用したクリップボードへのアクセスに優先するように設計されています</target>
        </trans-unit>
        <trans-unit id="23090f3252892444fa02c12b398c56c6bdf9c159" translate="yes" xml:space="preserve">
          <source>This API is restricted to top-level contexts. Calls to &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;store()&lt;/code&gt; within an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; element will resolve without effect.</source>
          <target state="translated">このAPIはトップレベルのコンテキストに制限されています。 &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; 要素内での &lt;code&gt;get()&lt;/code&gt; および &lt;code&gt;store()&lt;/code&gt; の呼び出しは、効果なしに解決されます。</target>
        </trans-unit>
        <trans-unit id="ff62dee57c4f09ac3b668f025cf5316345b4fd74" translate="yes" xml:space="preserve">
          <source>This API lets websites interact with a user agent&amp;rsquo;s password system so that websites can deal in a uniform way with site credentials and user agents can provide better assistance with the management of their credentials. For example, user agents have a particularly hard time dealing with federated identity providers or esoteric sign-in mechanisms that use more than just a username and password. To address these problems, the Credential Management API provides ways for a website to store and retrieve different types of credentials. This give users capabilities such as seeing the federated account they used to sign on to a site, or resuming a session without the explicit sign-in flow of an expired session.</source>
          <target state="translated">このAPIを使用すると、Webサイトはユーザーエージェントのパスワードシステムとやり取りできるため、Webサイトはサイトの資格情報を統一した方法で処理でき、ユーザーエージェントは資格情報の管理に関してより良い支援を提供できます。たとえば、ユーザーエージェントは、フェデレーションIDプロバイダーや、ユーザー名とパスワード以外のものを使用する難解なサインインメカニズムを処理するのに特に困難を伴います。これらの問題に対処するために、Credential Management APIは、Webサイトがさまざまなタイプの資格情報を格納および取得する方法を提供します。これにより、ユーザーがサイトへのサインオンに使用したフェデレーションアカウントを表示したり、期限切れのセッションの明示的なサインインフローなしでセッションを再開したりすることができます。</target>
        </trans-unit>
        <trans-unit id="dad71b48b3e1d5813d4233ac6100133e11f0ab10" translate="yes" xml:space="preserve">
          <source>This API was moved to the &lt;code&gt;Element&lt;/code&gt; and &lt;code&gt;Attr&lt;/code&gt; APIs according to the DOM4 standard.</source>
          <target state="translated">このAPIは、DOM4標準に従って &lt;code&gt;Element&lt;/code&gt; および &lt;code&gt;Attr&lt;/code&gt; APIに移動されました。</target>
        </trans-unit>
        <trans-unit id="253e64c9f0a804b63343795db1804dabd011a452" translate="yes" xml:space="preserve">
          <source>This API was previously available on the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="translated">このAPIは、以前は&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt; APIで利用可能でした。</target>
        </trans-unit>
        <trans-unit id="0e02c2994d68f7becce0fad8d06ecda2ef497564" translate="yes" xml:space="preserve">
          <source>This API was previously available on the&lt;code&gt;Node&lt;/code&gt; API.</source>
          <target state="translated">このAPIは、以前は &lt;code&gt;Node&lt;/code&gt; APIで利用可能でした。</target>
        </trans-unit>
        <trans-unit id="4ff118404a521b4c3402072a38887d0b9dbd3276" translate="yes" xml:space="preserve">
          <source>This Boolean property stops the script's execution in browsers that support&lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt; ES2015 modules&lt;/a&gt; &amp;mdash; used to run fallback scripts in older browsers that do &lt;em&gt;not&lt;/em&gt; support JavaScript modules.</source>
          <target state="translated">このブールプロパティは、&lt;a href=&quot;https://hacks.mozilla.org/2015/08/es6-in-depth-modules/&quot;&gt;ES2015モジュール&lt;/a&gt;をサポートするブラウザーでのスクリプトの実行を停止します。JavaScriptモジュールをサポートし&lt;em&gt;ない&lt;/em&gt;古いブラウザーでフォールバックスクリプトを実行するために使用されます。</target>
        </trans-unit>
        <trans-unit id="611662afe559078763db036e64a0cb29d21d7bfc" translate="yes" xml:space="preserve">
          <source>This HTML creates a panel (in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; block) that welcomes the user to a site and tells them what they're agreeing to by clicking the OK button.</source>
          <target state="translated">このHTMLは、（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;ブロック内に）パネルを作成します。このパネルは、ユーザーをサイトに歓迎し、[OK]ボタンをクリックして同意する内容をユーザーに通知します。</target>
        </trans-unit>
        <trans-unit id="4a5e17defdbe6494d36481da8c1deece2e6ac90e" translate="yes" xml:space="preserve">
          <source>This IDBCursor's transaction is inactive.</source>
          <target state="translated">このIDBCursorのトランザクションは非アクティブです。</target>
        </trans-unit>
        <trans-unit id="171b4f1a41b679fe21230e49c0c3c3c108cbff43" translate="yes" xml:space="preserve">
          <source>This IDBIndex's transaction is inactive.</source>
          <target state="translated">このIDBIndexのトランザクションは非アクティブです。</target>
        </trans-unit>
        <trans-unit id="a66f9a972ba3d70822a49955fea0b2bde4be6b33" translate="yes" xml:space="preserve">
          <source>This Property indicates how many bytes of data have been sent. The value is zero until &lt;code&gt;NetworkStream.DataAvailable&lt;/code&gt; is &lt;em&gt;true&lt;/em&gt;.</source>
          <target state="translated">このプロパティは、送信されたデータのバイト数を示します。 &lt;code&gt;NetworkStream.DataAvailable&lt;/code&gt; が&lt;em&gt;trueになる&lt;/em&gt;まで、値はゼロ&lt;em&gt;です&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="0e0e1b0a75147eb2994dc5c5b885b540fe6d856f" translate="yes" xml:space="preserve">
          <source>This adds the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; parameters, which indicate the size to which to scale the image when drawing it onto the canvas.</source>
          <target state="translated">これにより &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; パラメータが追加され、キャンバスに描画するときに画像を拡大縮小するサイズが示されます。</target>
        </trans-unit>
        <trans-unit id="bf88e33eafdd45251159cf2ef25f1298ee334c5b" translate="yes" xml:space="preserve">
          <source>This all happens asynchronously.</source>
          <target state="translated">これはすべて非同期で行われます。</target>
        </trans-unit>
        <trans-unit id="3fd958fbe858280fba2b10710baeae3bd7aeba3a" translate="yes" xml:space="preserve">
          <source>This also only works with the &lt;code&gt;lang&lt;/code&gt; attribute and not with &lt;code&gt;xml:lang&lt;/code&gt;.</source>
          <target state="translated">これは &lt;code&gt;lang&lt;/code&gt; 属性でのみ機能し、 &lt;code&gt;xml:lang&lt;/code&gt; では機能しません。</target>
        </trans-unit>
        <trans-unit id="34d01ae43990443e60442b78dae3887e2b1eaa84" translate="yes" xml:space="preserve">
          <source>This amends the previous example by looking at the contents of the &lt;code&gt;performance.navigation&lt;/code&gt; object. &lt;a href=&quot;../performancenavigation/type&quot;&gt;&lt;code&gt;performance.navigation.type&lt;/code&gt;&lt;/a&gt; indicates what kind of load operation took place: a navigation, a reload, or a shift through the browser's history. We also obtain the number of redirects that were incurred during the navigation from &lt;a href=&quot;../performancenavigation/redirectcount&quot;&gt;&lt;code&gt;performance.navigation.redirectCount&lt;/code&gt;&lt;/a&gt;. This information is output to the screen just like the page load time was previously: by inserting it into the element with class &lt;code&gt;&quot;output&quot;&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;performance.navigation&lt;/code&gt; オブジェクトの内容を確認することにより、前の例を修正します。&lt;a href=&quot;../performancenavigation/type&quot;&gt; &lt;code&gt;performance.navigation.type&lt;/code&gt; &lt;/a&gt;は、実行されたロード操作の種類（ナビゲーション、リロード、またはブラウザーの履歴のシフト）を示します。また、ナビゲーション中に発生したリダイレクトの数を&lt;a href=&quot;../performancenavigation/redirectcount&quot;&gt; &lt;code&gt;performance.navigation.redirectCount&lt;/code&gt; &lt;/a&gt;から取得します。この情報は、ページの読み込み時間が以前と同様に画面に出力されます。これは、クラス &lt;code&gt;&quot;output&quot;&lt;/code&gt; を使用して要素に挿入することによって行われます。</target>
        </trans-unit>
        <trans-unit id="471823c7a9f818f0a9f2d3341b211c2b8942647d" translate="yes" xml:space="preserve">
          <source>This application will only work on a browser that supports pointer events.</source>
          <target state="translated">このアプリケーションは、ポインタイベントをサポートするブラウザ上でのみ動作します。</target>
        </trans-unit>
        <trans-unit id="2d7cf787ab25324aaeaa14fd2544d212dbed030d" translate="yes" xml:space="preserve">
          <source>This article currently describes Navigation Timing Level 1. There is a specification for Level 2, but it is not yet covered here.</source>
          <target state="translated">この記事では現在、ナビゲーションタイミングレベル1について説明しています。レベル2については仕様がありますが、ここではまだ取り上げていません。</target>
        </trans-unit>
        <trans-unit id="d5a900639552727efe6323d49608deb0f31ff380" translate="yes" xml:space="preserve">
          <source>This article demonstrates how to use a &lt;a href=&quot;../constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt; to link multiple parameters together so they share the same value, which can be changed by simply setting the value of the &lt;a href=&quot;../constantsourcenode/offset&quot;&gt;&lt;code&gt;ConstantSourceNode.offset&lt;/code&gt;&lt;/a&gt; parameter.</source>
          <target state="translated">この記事では、&lt;a href=&quot;../constantsourcenode&quot;&gt; &lt;code&gt;ConstantSourceNode&lt;/code&gt; &lt;/a&gt;を使用して複数のパラメーターをリンクし、同じ値を共有する方法を説明します。同じ値は、&lt;a href=&quot;../constantsourcenode/offset&quot;&gt; &lt;code&gt;ConstantSourceNode.offset&lt;/code&gt; &lt;/a&gt;パラメーターの値を設定するだけで変更できます。</target>
        </trans-unit>
        <trans-unit id="f78e3221b5052b6192b96863f61de295b3a1f7ab" translate="yes" xml:space="preserve">
          <source>This article demonstrates how to use the &lt;a href=&quot;../fullscreen_api&quot;&gt;Fullscreen API&lt;/a&gt; to place a given element into full-screen mode, as well as how to detect when the browser enters or exits full-screen mode.</source>
          <target state="translated">この記事では、&lt;a href=&quot;../fullscreen_api&quot;&gt;フルスクリーンAPI&lt;/a&gt;を使用して特定の要素をフルスクリーンモードに配置する方法と、ブラウザがフルスクリーンモードに移行または終了したことを検出する方法について説明します。</target>
        </trans-unit>
        <trans-unit id="725bd3cf1a517194cbbfff5898fe47e0f93000c8" translate="yes" xml:space="preserve">
          <source>This article describes how the various WebRTC-related protocols interact with one another in order to create a connection and transfer data and/or media among peers.</source>
          <target state="translated">この記事では、接続を作成し、ピア間でデータやメディアを転送するために、さまざまな WebRTC 関連のプロトコルがどのように相互作用するかについて説明します。</target>
        </trans-unit>
        <trans-unit id="6a495d7bef8cf7e019bd17c3f0baf7e52ae746a7" translate="yes" xml:space="preserve">
          <source>This article discusses some of the concepts and theory behind virtual reality (VR). If you are a newcomer to the area, it is worthwhile getting an understanding of these topics before you start diving into code.</source>
          <target state="translated">この記事では、仮想現実(VR)の背後にある概念と理論のいくつかについて説明します。あなたがこの分野の初心者であれば、コードに飛び込む前にこれらのトピックを理解しておく価値があります。</target>
        </trans-unit>
        <trans-unit id="4ac4e464991e0b9f4da285254b21fedeb59c7bef" translate="yes" xml:space="preserve">
          <source>This article doesn't get into details of the actual APIs involved in establishing and handling a WebRTC connection; it simply reviews the process in general with some information about why each step is required. See &lt;a href=&quot;signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt; for an actual example with a step-by-step explanation of what's the code does.</source>
          <target state="translated">この記事では、WebRTC接続の確立と処理に関連する実際のAPIの詳細については触れません。各ステップが必要な理由に関するいくつかの情報を使用して、プロセスを概説するだけです。コードが何をするかの段階的な説明のある実際の例については、&lt;a href=&quot;signaling_and_video_calling&quot;&gt;シグナリングとビデオ通話&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="63f7121755ed932ab5ce73d361ee94a55a855b4c" translate="yes" xml:space="preserve">
          <source>This article explains an edge case that occurs with fetch (and potentially other APIs exhibiting the same kind of resource retrieval behavior). When a cross-origin fetch involving a relative URL is initiated from an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;, the relative URL used to be resolved against the current global location, rather than the iframe's location.</source>
          <target state="translated">この記事では、フェッチで発生するエッジケース（および、同じ種類のリソース取得動作を示す可能性のある他のAPI）について説明します。相対URLを含むクロスオリジンフェッチが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;から開始されると、相対URLは、iframeの場所ではなく、現在のグローバルな場所に対して解決されていました。</target>
        </trans-unit>
        <trans-unit id="7adfc2595765b418308ebfc06065b6df39d1709c" translate="yes" xml:space="preserve">
          <source>This article explains some of the audio theory behind how the features of the Web Audio API work, to help you make informed decisions while designing how audio is routed through your app. It won't turn you into a master sound engineer, but it will give you enough background to understand why the Web Audio API works like it does.</source>
          <target state="translated">この記事では、Web Audio APIの機能がどのように機能するのか、その背後にあるオーディオ理論について説明します。この記事を読めば、サウンドエンジニアになれるわけではありませんが、Web Audio APIがなぜそのように機能するのかを理解するのに十分な背景が得られるでしょう。</target>
        </trans-unit>
        <trans-unit id="db8d5072b2410f2f7c78c11a2b98dbc0c6d3bb44" translate="yes" xml:space="preserve">
          <source>This article explores how to take data within a WebGL project, and project it into the proper spaces to display it on the screen. It assumes a knowledge of basic matrix math using translation, scale, and rotation matrices. It explains the three core matrices that are typically used to represent a 3D object: the model, view and projection matrices.</source>
          <target state="translated">この記事では、WebGL プロジェクト内のデータを取得し、それを適切なスペースに投影して画面に表示する方法を探ります。この記事では、並進行列、スケール行列、回転行列を使用した基本的な行列計算の知識を前提としています。3D オブジェクトを表現するために一般的に使用される 3 つのコア行列、モデル行列、ビュー行列、投影行列について説明します。</target>
        </trans-unit>
        <trans-unit id="d928d97834f4c4d90a8e27643d03ef9f6625d926" translate="yes" xml:space="preserve">
          <source>This article has given you a very basic idea of how to use the Gamepad Extensions to use VR controllers inside WebVR apps. In a real app you'd probably have a much more complex control system in effect, with controls assigned to the buttons on the VR controllers, and the display being affected by both the display pose and the controller poses simultaneously. Here however, we just wanted to isolate the pure Gamepad Extensions parts of that.</source>
          <target state="translated">この記事では、WebVR アプリ内で VR コントローラを使用するためにゲームパッド拡張機能を使用する方法の非常に基本的なアイデアをお伝えしました。実際のアプリでは、おそらく、VR コントローラのボタンにコントロールが割り当てられ、ディスプレイはディスプレイのポーズとコントローラのポーズの両方に同時に影響を受けるという、より複雑なコントロールシステムを実際に使用することになるでしょう。しかしここでは、純粋なゲームパッド拡張機能の部分だけを切り離してみました。</target>
        </trans-unit>
        <trans-unit id="e5ca011d3bd4c665e9446857ffc9dc739282cda9" translate="yes" xml:space="preserve">
          <source>This article has given you the very basics of how to create a simple WebVR 1.1 app, to help you get started.</source>
          <target state="translated">この記事では、簡単なWebVR 1.1アプリの作成方法のごく基本的なことをお伝えしました。</target>
        </trans-unit>
        <trans-unit id="fe4a100cf9125ef03cdcf891d5f9cec805bac258" translate="yes" xml:space="preserve">
          <source>This article introduces the protocols on top of which the WebRTC API is built.</source>
          <target state="translated">この記事では、WebRTC APIが構築された上でのプロトコルを紹介しています。</target>
        </trans-unit>
        <trans-unit id="ef7200868160b2fd55ee5205a4adca29b47ca8ab" translate="yes" xml:space="preserve">
          <source>This article is an overview of some powerful, fundamental DOM level 1 methods and how to use them from JavaScript. You will learn how to create, access and control, and remove HTML elements dynamically. The DOM methods presented here are not specific to HTML; they also apply to XML. The demonstrations provided here will work fine in any modern browser, including all versions of Firefox and IE 5+.</source>
          <target state="translated">この記事では、いくつかの強力で基本的な DOM レベル 1 のメソッドの概要と、JavaScript からの使用方法について説明します。HTML 要素を動的に作成、アクセス、制御、削除する方法を学びます。ここで紹介する DOM メソッドは HTML に特化したものではなく、XML にも適用されます。ここで提供されているデモは、Firefox や IE 5+のすべてのバージョンを含む、最新のブラウザで問題なく動作します。</target>
        </trans-unit>
        <trans-unit id="389fb99613c3221620b47bea3898d0ec5ae76f7a" translate="yes" xml:space="preserve">
          <source>This article offers suggestions and tips to improve your WebGL content. Following these suggestions can help improve your web application's compatibility with more devices and browsers, as well as increase its performance.</source>
          <target state="translated">この記事では、WebGL コンテンツを改善するための提案とヒントを提供します。これらの提案に従うことで、Web アプリケーションのパフォーマンスを向上させるだけでなく、より多くのデバイスやブラウザとの互換性を向上させることができます。</target>
        </trans-unit>
        <trans-unit id="7f7d2c5b6006e345bdf65ccf7498a50d8aaa7291" translate="yes" xml:space="preserve">
          <source>This article presents the code and working demo of a video keyboard you can play using the mouse. The keyboard allows you to switch among the standard waveforms as well as one custom waveform, and you can control the master gain using a volume slider beneath the keyboard. This example makes use of the following Web API interfaces: &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../gainnode&quot;&gt;&lt;code&gt;GainNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この記事では、マウスを使用して再生できるビデオキーボードのコードと動作するデモを紹介します。キーボードを使用すると、標準波形と1つのカスタム波形を切り替えることができ、キーボードの下にあるボリュームスライダーを使用してマスターゲインを制御できます。この例では、以下のWeb APIインタフェースを利用します&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../gainnode&quot;&gt; &lt;code&gt;GainNode&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="4dd71977027d74d3cda3a8b03b46a28d86167f07" translate="yes" xml:space="preserve">
          <source>This article provides a useful summary of best practices to keep in mind when developing web sites and applications that use Push Notifications for user engagement.</source>
          <target state="translated">この記事では、ユーザーエンゲージメントのためにプッシュ通知を使用するWebサイトやアプリケーションを開発する際に留意すべきベストプラクティスをまとめています。</target>
        </trans-unit>
        <trans-unit id="1fd57a9e6c01519f95e4cebde9f971b3d777ec5d" translate="yes" xml:space="preserve">
          <source>This article provides a walkthrough of how to make use of this simple technology.</source>
          <target state="translated">この記事では、このシンプルな技術の活用方法をウォークスルーで紹介しています。</target>
        </trans-unit>
        <trans-unit id="1821d5ed750cd8c9a306517f4934976acd0c8a45" translate="yes" xml:space="preserve">
          <source>This article provides an interesting real-world example of using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element to do software rendering of a 3D environment using ray-casting.</source>
          <target state="translated">この記事では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を使用して、レイキャスティングを使用した3D環境のソフトウェアレンダリングを行う興味深い実例を紹介します。</target>
        </trans-unit>
        <trans-unit id="736f76c3e35560d26b90ffc22adb6c23bea7b4e2" translate="yes" xml:space="preserve">
          <source>This article provides information on getting started with service workers, including basic architecture, registering a service worker, the install and activation process for a new service worker, updating your service worker, cache control and custom responses, all in the context of a simple app with offline functionality.</source>
          <target state="translated">この記事では、基本的なアーキテクチャ、サービス ワーカーの登録、新しいサービス ワーカーのインストールとアクティベーション プロセス、サービス ワーカーの更新、キャッシュ制御、カスタム レスポンスなど、サービス ワーカーを使い始めるための情報を、オフライン機能を備えたシンプルなアプリのコンテキストで提供します。</target>
        </trans-unit>
        <trans-unit id="4cdecbf0913aeb5cf529a9149bc7b715c9e86a6c" translate="yes" xml:space="preserve">
          <source>This article shows how to use WebRTC to access the camera on a computer or mobile phone with WebRTC support and take a photo with it.</source>
          <target state="translated">この記事では、WebRTCに対応したパソコンや携帯電話でWebRTCを使ってカメラにアクセスして写真を撮る方法を紹介しています。</target>
        </trans-unit>
        <trans-unit id="1f037f6bcfe634b68cdfb511a8929db7df912e56" translate="yes" xml:space="preserve">
          <source>This article shows how to use WebRTC to access the camera on a computer or mobile phone with WebRTC support and take a photo with it. &lt;a href=&quot;https://mdn-samples.mozilla.org/s/webrtc-capturestill&quot;&gt;Try this sample&lt;/a&gt; then read on to learn how it works.</source>
          <target state="translated">この記事では、WebRTCを使用して、WebRTCをサポートするコンピューターまたは携帯電話のカメラにアクセスし、写真を撮る方法を説明します。&lt;a href=&quot;https://mdn-samples.mozilla.org/s/webrtc-capturestill&quot;&gt;このサンプルを試し&lt;/a&gt;てから、それがどのように機能するかを学習してください。</target>
        </trans-unit>
        <trans-unit id="04fcfc8edaedb085eb3143f05deedb059849b685" translate="yes" xml:space="preserve">
          <source>This article will introduce you to the basics of using WebGL. It's assumed that you already have an understanding of the mathematics involved in 3D graphics, and this article doesn't pretend to try to teach you 3D graphics concepts itself. We have a beginner-oriented guide, complete with coding assignments to complete, in our Learning Area: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/WebGL&quot;&gt;Learn WebGL for 2D and 3D graphics&lt;/a&gt;.</source>
          <target state="translated">この記事では、WebGLの基本的な使用方法を紹介します。3Dグラフィックスに関連する数学をすでに理解していることを前提としています。この記事は、3Dグラフィックスの概念自体を教えるつもりはありません。ラーニングエリア：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/WebGL&quot;&gt;2Dおよび3DグラフィックスのWebGLを学ぶには&lt;/a&gt;、コーディングの割り当てが完了した初心者向けのガイドがあります。</target>
        </trans-unit>
        <trans-unit id="fc134eb54626d01b289b889eda59423ebe98a5c4" translate="yes" xml:space="preserve">
          <source>This asks &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; to create and return a new answer. In our promise handler, the returned answer is set as the description of the local end of the connection by calling &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;setLocalDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;に新しい回答を作成して返すように要求します。Promiseハンドラーでは、返された回答は、&lt;a href=&quot;setlocaldescription&quot;&gt; &lt;code&gt;setLocalDescription()&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、接続のローカルエンドの説明として設定されます。</target>
        </trans-unit>
        <trans-unit id="c7fedaabcf76bf3a6947d615bf4395bef476764f" translate="yes" xml:space="preserve">
          <source>This attribute is only populated if the constructor is called with the &lt;code&gt;requestShipping&lt;/code&gt; flag set to &lt;code&gt;true&lt;/code&gt;. If &lt;code&gt;requestShipping&lt;/code&gt; was &lt;code&gt;false&lt;/code&gt; (or missing), &lt;code&gt;shippingOption&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, even the developer provides a selected a shipping option.</source>
          <target state="translated">この属性は、 &lt;code&gt;requestShipping&lt;/code&gt; フラグを &lt;code&gt;true&lt;/code&gt; に設定してコンストラクターが呼び出された場合にのみ入力されます。場合 &lt;code&gt;requestShipping&lt;/code&gt; がした &lt;code&gt;false&lt;/code&gt; （または欠落）、 &lt;code&gt;shippingOption&lt;/code&gt; は返す &lt;code&gt;null&lt;/code&gt; しても、開発者が選択した配送オプションを提供し、。</target>
        </trans-unit>
        <trans-unit id="fb3de18807c8e44ed053ce8dc7fcf07cc48ff547" translate="yes" xml:space="preserve">
          <source>This attribute supports providing multiple certificates because even though a given DTLS connection uses only one certificate, providing multiple certificates allows support for multiple encryption algorithms. The implementation of &lt;code&gt;RTCPeerConnection&lt;/code&gt; will choose which certificate to use based on the algorithms it and the remote peer support, as determined during DTLS handshake.</source>
          <target state="translated">特定のDTLS接続が1つの証明書しか使用しない場合でも、この属性は複数の証明書の提供をサポートします。複数の証明書を提供すると、複数の暗号化アルゴリズムをサポートできるようになります。 &lt;code&gt;RTCPeerConnection&lt;/code&gt; の実装は、DTLSハンドシェイク中に決定されたアルゴリズムとリモートピアサポートに基づいて、使用する証明書を選択します。</target>
        </trans-unit>
        <trans-unit id="cec279e233032970cd34bfb7d06d52f36ff678e4" translate="yes" xml:space="preserve">
          <source>This attribute was added to the specification in SVG 2.</source>
          <target state="translated">この属性は SVG 2 で仕様に追加された。</target>
        </trans-unit>
        <trans-unit id="97a5a54267dc44fd4ba09d929b4cedc1ac27a52c" translate="yes" xml:space="preserve">
          <source>This basically means all &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;typed arrays&lt;/a&gt; like Int32Array etc.</source>
          <target state="translated">これは基本的に、Int32Arrayなどのすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;型付き配列を&lt;/a&gt;意味します。</target>
        </trans-unit>
        <trans-unit id="fd8db3ab5c47451d5e2297a4363a832a818ff586" translate="yes" xml:space="preserve">
          <source>This begins by creating an offer by calling &lt;a href=&quot;createoffer&quot;&gt;&lt;code&gt;createOffer()&lt;/code&gt;&lt;/a&gt;; when that succeeds, we call &lt;code&gt;setLocalDescription()&lt;/code&gt;. The fulfillment handler for that promise can then send the newly-created offer along to the other peer using the signaling server.</source>
          <target state="translated">まず、&lt;a href=&quot;createoffer&quot;&gt; &lt;code&gt;createOffer()&lt;/code&gt; を&lt;/a&gt;呼び出してオファーを作成します。それが成功し &lt;code&gt;setLocalDescription()&lt;/code&gt; 、setLocalDescription（）を呼び出します。そのpromiseのフルフィルメントハンドラーは、シグナリングサーバーを使用して、新しく作成されたオファーを他のピアに送信できます。</target>
        </trans-unit>
        <trans-unit id="82151d74cf7c1600d034122acff7b72b21e30a60" translate="yes" xml:space="preserve">
          <source>This begins by setting up an &lt;code&gt;options&lt;/code&gt; object containing the settings for the observer. We want to watch for changes in visibility of the target element relative to the document's viewport, so &lt;code&gt;root&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. We need no margin, so the margin offset, &lt;code&gt;rootMargin&lt;/code&gt;, is specified as &quot;0px&quot;. This causes the observer to watch for changes in the intersection between the target element's bounds and those of the viewport, without any added (or subtracted) space.</source>
          <target state="translated">まず、オブザーバーの設定を含む &lt;code&gt;options&lt;/code&gt; オブジェクトを設定します。ドキュメントのビューポートに対するターゲット要素の可視性の変化を監視したいので、 &lt;code&gt;root&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; です。マージンは必要ないため、マージンオフセット &lt;code&gt;rootMargin&lt;/code&gt; は「0px」として指定されます。これにより、オブザーバーは、追加された（または差し引かれた）スペースなしで、ターゲット要素の境界とビューポートの境界の間の交差の変化を監視します。</target>
        </trans-unit>
        <trans-unit id="99ca1b43323f1977f57351c6684de783d379663c" translate="yes" xml:space="preserve">
          <source>This begins with a basic sanity check: is the user even connected? If there's no &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, they obviously can't make a call. Then the name of the user that was clicked upon is obtained from the event target's &lt;a href=&quot;../node/textcontent&quot;&gt;&lt;code&gt;textContent&lt;/code&gt;&lt;/a&gt; property, and we check to be sure that it's not the same user that's trying to start the call.</source>
          <target state="translated">これは、基本的な健全性チェックから始まります。ユーザーは接続されていますか？&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;がない場合、明らかに呼び出しを行うことができません。次に、クリックされたユーザーの名前がイベントターゲットの&lt;a href=&quot;../node/textcontent&quot;&gt; &lt;code&gt;textContent&lt;/code&gt; &lt;/a&gt;プロパティから取得され、呼び出しを開始しようとしているユーザーと同じでないことを確認します。</target>
        </trans-unit>
        <trans-unit id="f4353405496d2d0c6341382b41452f362103152c" translate="yes" xml:space="preserve">
          <source>This behavior has been changed in the latest spec, and if omitted, the method will act as if the value of &lt;code&gt;deep&lt;/code&gt; was &lt;code&gt;false&lt;/code&gt;. Though it's still optional, you should always provide the &lt;code&gt;deep&lt;/code&gt; argument both for backward and forward compatibility. With Gecko 28.0 (Firefox 28 / Thunderbird 28 / SeaMonkey 2.25 / Firefox OS 1.3)), the console warned developers not to omit the argument. Starting with Gecko 29.0 (Firefox 29 / Thunderbird 29 / SeaMonkey 2.26)), a shallow clone is defaulted instead of a deep clone.</source>
          <target state="translated">この動作は最新の仕様で変更されており、省略した場合、メソッドは &lt;code&gt;deep&lt;/code&gt; の値が &lt;code&gt;false&lt;/code&gt; であるかのように動作します。これはまだオプションですが、後方互換性と前方互換性の両方のために常に &lt;code&gt;deep&lt;/code&gt; 引数を提供する必要があります。Gecko 28.0（Firefox 28 / Thunderbird 28 / SeaMonkey 2.25 / Firefox OS 1.3）では、コンソールは引数を省略しないように開発者に警告しました。Gecko 29.0（Firefox 29 / Thunderbird 29 / SeaMonkey 2.26）以降、ディープクローンの代わりにシャロークローンがデフォルトで使用されます。</target>
        </trans-unit>
        <trans-unit id="a93c69779dba687c18b36481dfe58c6ef4028d03" translate="yes" xml:space="preserve">
          <source>This builds an object containing the candidate, then sends it to the other peer using the &lt;code&gt;sendToServer()&lt;/code&gt; function previously described in &lt;a href=&quot;#Sending_messages_to_the_signaling_server&quot;&gt;Sending messages to the signaling server&lt;/a&gt;. The message's properties are:</source>
          <target state="translated">これにより、候補を含むオブジェクトが構築され、前述の&lt;a href=&quot;#Sending_messages_to_the_signaling_server&quot;&gt;「シグナリングサーバーへのメッセージの送信」で&lt;/a&gt;説明した &lt;code&gt;sendToServer()&lt;/code&gt; 関数を使用して、候補が他のピアに送信されます。メッセージのプロパティは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="9fc44bf6799b291b1c3d76edb9ae44ab2f3c1a64" translate="yes" xml:space="preserve">
          <source>This builds the array of thresholds&amp;mdash;each of which is a ratio between 0.0 and 1.0, by pushing the value &lt;code&gt;i/numSteps&lt;/code&gt; onto the &lt;code&gt;thresholds&lt;/code&gt; array for each integer &lt;code&gt;i&lt;/code&gt; between 1 and &lt;code&gt;numSteps&lt;/code&gt;. It also pushes 0 to include that value. The result, given the default value of &lt;code&gt;numSteps&lt;/code&gt; (20), is the following list of thresholds:</source>
          <target state="translated">これにより、しきい値の配列が作成されます。それぞれのしきい値は0.0と1.0の間の比率であり、値 &lt;code&gt;i/numSteps&lt;/code&gt; を1から &lt;code&gt;numSteps&lt;/code&gt; の間の各整数 &lt;code&gt;i&lt;/code&gt; の &lt;code&gt;thresholds&lt;/code&gt; 配列にプッシュします。また、0をプッシュしてその値を含めます。デフォルト値の &lt;code&gt;numSteps&lt;/code&gt; （20）を指定すると、結果は次のしきい値のリストになります。</target>
        </trans-unit>
        <trans-unit id="180433b2bbb7f8f1221c9a3f1700ddd55e0a0926" translate="yes" xml:space="preserve">
          <source>This callback does nothing unless it's the first time it's been called; this is tested by looking at the value of our &lt;code&gt;streaming&lt;/code&gt; variable, which is &lt;code&gt;false&lt;/code&gt; the first time this method is run.</source>
          <target state="translated">このコールバックは、最初に呼び出されたとき以外は何もしません。これは、 &lt;code&gt;streaming&lt;/code&gt; 変数の値を調べることによってテストされます。これは、このメソッドが初めて実行されるときに &lt;code&gt;false&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="2e9fee7c1c67c6ae29ef2f953e8b7141de0f8d91" translate="yes" xml:space="preserve">
          <source>This calls &lt;a href=&quot;event/preventdefault&quot;&gt;&lt;code&gt;event.preventDefault()&lt;/code&gt;&lt;/a&gt; to keep the browser from continuing to process the touch event (this also prevents a mouse event from also being delivered). Then we get the context and pull the list of changed touch points out of the event's &lt;a href=&quot;touchevent/changedtouches&quot;&gt;&lt;code&gt;TouchEvent.changedTouches&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">これは&lt;a href=&quot;event/preventdefault&quot;&gt; &lt;code&gt;event.preventDefault()&lt;/code&gt; &lt;/a&gt;を呼び出して、ブラウザーがタッチイベントの処理を続行しないようにします（これにより、マウスイベントも配信されなくなります）。次に、コンテキストを取得し、変更されたタッチポイントのリストをイベントの&lt;a href=&quot;touchevent/changedtouches&quot;&gt; &lt;code&gt;TouchEvent.changedTouches&lt;/code&gt; &lt;/a&gt;プロパティから引き出します。</target>
        </trans-unit>
        <trans-unit id="e81f604cb7d7eed24c112dcd1c2b4dfb6efd24c4" translate="yes" xml:space="preserve">
          <source>This can also be thought of as a path which is relative to the root directory, with a &quot;/&quot; prepended to it to make it absolute.</source>
          <target state="translated">これは、ルートディレクトリからの相対パスと考えることもできます。</target>
        </trans-unit>
        <trans-unit id="f5c0bfcc105615d208b04badb928fb29787f0133" translate="yes" xml:space="preserve">
          <source>This can be also useful for logging and debugging purposes.</source>
          <target state="translated">また、ロギングやデバッグの目的にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="eae0e0d0bec4036d3982f94038aa75527b88b50a" translate="yes" xml:space="preserve">
          <source>This can be used, for example, as a source for a &lt;a href=&quot;../webrtc_api&quot;&gt;WebRTC&lt;/a&gt;&lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これは、たとえば&lt;a href=&quot;../webrtc_api&quot;&gt;WebRTC &lt;/a&gt;&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; の&lt;/a&gt;ソースとして使用できます。</target>
        </trans-unit>
        <trans-unit id="c00e67da12a1a56ef21b3d6902e2326f5d19c0e9" translate="yes" xml:space="preserve">
          <source>This can be useful for routing to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, for example. See also this &lt;a href=&quot;https://codepen.io/peterj35/pen/PEdLKx&quot;&gt;codepen demo&lt;/a&gt;.</source>
          <target state="translated">これは、たとえば&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素へのルーティングに役立ちます。この&lt;a href=&quot;https://codepen.io/peterj35/pen/PEdLKx&quot;&gt;codepenデモ&lt;/a&gt;も参照してください。</target>
        </trans-unit>
        <trans-unit id="9e46eb11b2376b3414d8c50362bdc8b864fda03a" translate="yes" xml:space="preserve">
          <source>This can complicate things, since you don't necessarily know what the size limits are for various user agents, and how they respond when a larger message is sent or received. Even when user agents share the same underlying library for handling Stream Control Transmission Protocol (SCTP) data, there can still be variations due to how the library is used. For example, both Firefox and Google Chrome use the &lt;code&gt;&lt;a href=&quot;https://github.com/sctplab/usrsctp&quot;&gt;usrsctp&lt;/a&gt;&lt;/code&gt; library to implement SCTP, but there are still situations in which data transfer on an &lt;code&gt;RTCDataChannel&lt;/code&gt; can fail due to differences in how they call the library and react to errors it returns.</source>
          <target state="translated">さまざまなユーザーエージェントのサイズ制限と、より大きなメッセージが送受信されたときのエージェントの応答が必ずしもわからないため、これは事態を複雑にする可能性があります。ユーザーエージェントがストリームコントロールトランスミッションプロトコル（SCTP）データを処理するために同じ基礎となるライブラリを共有する場合でも、ライブラリの使用方法により、バリエーションが存在する可能性があります。たとえば、FirefoxとGoogle Chromeはどちらも &lt;code&gt;&lt;a href=&quot;https://github.com/sctplab/usrsctp&quot;&gt;usrsctp&lt;/a&gt;&lt;/code&gt; ライブラリを使用してSCTPを実装していますが、 &lt;code&gt;RTCDataChannel&lt;/code&gt; でのデータ転送は、ライブラリの呼び出し方法とライブラリが返すエラーに対応する方法の違いにより失敗する場合があります。</target>
        </trans-unit>
        <trans-unit id="f02a53b5319c62da1b98a163edd5faad95cb6b24" translate="yes" xml:space="preserve">
          <source>This can happen for a number of reasons:</source>
          <target state="translated">これには様々な理由が考えられます。</target>
        </trans-unit>
        <trans-unit id="b473495e2c11a7353d6192ff2d917a07e2939a15" translate="yes" xml:space="preserve">
          <source>This can happen in a couple of situations:</source>
          <target state="translated">これは、いくつかの状況で起こる可能性があります。</target>
        </trans-unit>
        <trans-unit id="52af7bbde8a195872fbc1d8f5bbc65c427b1c413" translate="yes" xml:space="preserve">
          <source>This can have a big effect if the sound is very directional &amp;mdash; controlled by the three cone-related attributes &lt;a href=&quot;coneinnerangle&quot;&gt;&lt;code&gt;PannerNode.coneInnerAngle&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;coneouterangle&quot;&gt;&lt;code&gt;PannerNode.coneOuterAngle&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;coneoutergain&quot;&gt;&lt;code&gt;PannerNode.coneOuterGain&lt;/code&gt;&lt;/a&gt;. In such a case, a sound pointing away from the listener can be very quiet or even silent.</source>
          <target state="translated">サウンドが非常に指向性がある場合、これは大きな影響を与える可能性があります&amp;mdash;コーン関連の3つの属性&lt;a href=&quot;coneinnerangle&quot;&gt; &lt;code&gt;PannerNode.coneInnerAngle&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;coneouterangle&quot;&gt; &lt;code&gt;PannerNode.coneOuterAngle&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;coneoutergain&quot;&gt; &lt;code&gt;PannerNode.coneOuterGain&lt;/code&gt; &lt;/a&gt;によって制御されます。このような場合、リスナーから離れた方向を向く音は、非常に静かな場合もあれば、静かな場合もあります。</target>
        </trans-unit>
        <trans-unit id="5dffbf5f113f41683ecfe17e72307e4ec4b2f4ec" translate="yes" xml:space="preserve">
          <source>This can make things a bit harder for any users of the DOM who want to iterate through content, excluding the whitespace.</source>
          <target state="translated">これは、コンテンツを反復処理したいと考えている DOM のユーザーにとっては、空白部分を除いて、物事を少し難しくすることができます。</target>
        </trans-unit>
        <trans-unit id="9cfc9983ec11bc1664f2bd5270a9c176951714bb" translate="yes" xml:space="preserve">
          <source>This candidate examines the &lt;code&gt;priority&lt;/code&gt; of the candidate and, if it's greater than the priority of a previously-seen candidate, remembers the candidate for later use.</source>
          <target state="translated">この候補者は候補者の &lt;code&gt;priority&lt;/code&gt; を調べ、それが以前に見た候補者の優先度よりも高い場合は、後で使用するために候補者を記憶します。</target>
        </trans-unit>
        <trans-unit id="23a444dc6e6b85ec15f5f290c1c5f03b014f6bb1" translate="yes" xml:space="preserve">
          <source>This causes a context that is currently using a hardware-accelerated backend to fallback to a software one. All state should be preserved.</source>
          <target state="translated">これにより、現在ハードウェアアクセラレーションされたバックエンドを使用しているコンテキストがソフトウェアにフォールバックされます。すべての状態は保持されるべきです。</target>
        </trans-unit>
        <trans-unit id="90dc05814d2d0a1e15cf2acc763576a2d3361f30" translate="yes" xml:space="preserve">
          <source>This change is implemented in Chrome since version 46.0 and Firefox since version 48.0.</source>
          <target state="translated">この変更は、Chromeではバージョン46.0から、Firefoxではバージョン48.0から実装されています。</target>
        </trans-unit>
        <trans-unit id="46d584e35266d56f7d8dc3929fc14f9882edbbac" translate="yes" xml:space="preserve">
          <source>This changes Alice&amp;rsquo;s color and her transform&amp;rsquo;s rotation over 3 seconds at a constant (linear) rate and loops infinitely. In the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;@keyframes&lt;/a&gt; block we can see that 30% of the way through each loop (about .9 seconds in), Alice&amp;rsquo;s color changes from black to a deep burgundy then back again by the end of the loop.</source>
          <target state="translated">これにより、アリスの色とトランスフォームの回転が3秒間一定（線形）レートで変化し、無限にループします。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes&quot;&gt;@keyframes&lt;/a&gt;我々は各ループを通して道の30％を見ることができるブロック（で0.9秒程度）、ループの終わりまでに、次いで再び深いバーガンディ黒からアリスの色が変化します。</target>
        </trans-unit>
        <trans-unit id="634c4bd1d74eb673f7dd805adbc6b98fd7845e78" translate="yes" xml:space="preserve">
          <source>This chapter describes the DOM Event Model. The &lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event&quot;&gt;Event&lt;/a&gt; interface itself is described, as well as the interfaces for event registration on nodes in the DOM, and &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;event listeners&lt;/a&gt;, and several longer examples that show how the various event interfaces relate to one another.</source>
          <target state="translated">この章では、DOMイベントモデルについて説明します。&lt;a href=&quot;http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-Event&quot;&gt;イベント&lt;/a&gt;自体インタフェースは、DOM内のノードにイベント登録のためのインターフェース、および、ならびに、記載されている&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;イベントリスナー&lt;/a&gt;各種イベントインターフェイスが互いにどのように関係するかを示し、そしてより長いいくつかの例。</target>
        </trans-unit>
        <trans-unit id="8a2851599dc3a3bfd54ca2b61870665cb13558c5" translate="yes" xml:space="preserve">
          <source>This chapter provides some longer examples of web and XML development using the DOM. Wherever possible, the examples use common APIs, tricks, and patterns in JavaScript for manipulating the document object.</source>
          <target state="translated">この章では、DOM を使った Web や XML 開発の長い例をいくつか紹介します。可能な限り、ドキュメントオブジェクトを操作するための JavaScript の共通の API、トリック、パターンを使用しています。</target>
        </trans-unit>
        <trans-unit id="f879d3c7fe3e7e9484fd1c6af44389f38f0271df" translate="yes" xml:space="preserve">
          <source>This character instructs the dialing process to pause for two seconds before sending the next character in the buffer.</source>
          <target state="translated">この文字は、バッファ内の次の文字を送信する前に、ダイヤル処理を2秒間一時停止するように指示します。</target>
        </trans-unit>
        <trans-unit id="1b680af1fae190e09f829ae224af0be4a6ee1dbc" translate="yes" xml:space="preserve">
          <source>This code &amp;mdash; a snippet taken from the full example &lt;a href=&quot;../webgl_api/basic_2d_animation_example&quot;&gt;A basic 2D WebGL animation example&lt;/a&gt; &amp;mdash; shows the use of &lt;code&gt;enableVertexArray()&lt;/code&gt; to activate the attribute that will be used by the WebGL layer to pass individual vertexes from the vertex buffer into the vertex shader function.</source>
          <target state="translated">このコード（完全な例から抜粋したスニペット&lt;a href=&quot;../webgl_api/basic_2d_animation_example&quot;&gt;基本的な2D WebGLアニメーションの例&lt;/a&gt; &lt;code&gt;enableVertexArray()&lt;/code&gt; は、enableVertexArray（）を使用して、頂点バッファーから頂点シェーダー関数に個々の頂点を渡すためにWebGLレイヤーで使用される属性をアクティブにする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="611e2d96aba46178458dc3ec24df6c41bfa3e6fa" translate="yes" xml:space="preserve">
          <source>This code actually sets up the observation process.</source>
          <target state="translated">このコードは、実際に観測プロセスを設定します。</target>
        </trans-unit>
        <trans-unit id="4a66f5221b744c34b5d51ac4cfcbf33a1c8f7987" translate="yes" xml:space="preserve">
          <source>This code adds simple support for tabs to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt;&lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt;&lt;/a&gt; elements by making the tab key insert two space characters when either constraint edit box is focused.</source>
          <target state="translated">このコードは、いずれかの制約編集ボックスがフォーカスされている場合、タブキーに2つのスペース文字を挿入させることにより、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea&quot;&gt; &lt;code&gt;&amp;lt;textarea&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にタブの簡単なサポートを追加します。</target>
        </trans-unit>
        <trans-unit id="0185603a88201b725431f8b6bb6bbf8be62a4c54" translate="yes" xml:space="preserve">
          <source>This code block waits for an &lt;a href=&quot;../installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt; to fire, then calls &lt;a href=&quot;../extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil()&lt;/code&gt;&lt;/a&gt; to handle the install process for the app. This consists of calling &lt;a href=&quot;../cachestorage/open&quot;&gt;&lt;code&gt;CacheStorage.open&lt;/code&gt;&lt;/a&gt; to create a new cache, then using &lt;a href=&quot;add&quot;&gt;&lt;code&gt;Cache.add&lt;/code&gt;&lt;/a&gt; to add an asset to it.</source>
          <target state="translated">このコードブロックは、&lt;a href=&quot;../installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;../extendableevent/waituntil&quot;&gt; &lt;code&gt;waitUntil()&lt;/code&gt; &lt;/a&gt;するのを待ってから、waitUntil（）を呼び出して、アプリのインストールプロセスを処理します。これは、&lt;a href=&quot;../cachestorage/open&quot;&gt; &lt;code&gt;CacheStorage.open&lt;/code&gt; &lt;/a&gt;を呼び出して新しいキャッシュを作成し、次に&lt;a href=&quot;add&quot;&gt; &lt;code&gt;Cache.add&lt;/code&gt; &lt;/a&gt;を使用してそれにアセットを追加することで構成されます。</target>
        </trans-unit>
        <trans-unit id="6384e63587316d25bbf1ff41234ea414dc931469" translate="yes" xml:space="preserve">
          <source>This code block waits for an &lt;a href=&quot;../installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt; to fire, then runs &lt;a href=&quot;../extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil()&lt;/code&gt;&lt;/a&gt; to handle the install process for the app. This consists of calling &lt;a href=&quot;../cachestorage/open&quot;&gt;&lt;code&gt;CacheStorage.open&lt;/code&gt;&lt;/a&gt; to create a new cache, then using &lt;code&gt;addAll()&lt;/code&gt; to add a series of assets to it.</source>
          <target state="translated">このコードブロックは、&lt;a href=&quot;../installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;../extendableevent/waituntil&quot;&gt; &lt;code&gt;waitUntil()&lt;/code&gt; &lt;/a&gt;するのを待ってから、waitUntil（）を実行してアプリのインストールプロセスを処理します。これは、&lt;a href=&quot;../cachestorage/open&quot;&gt; &lt;code&gt;CacheStorage.open&lt;/code&gt; &lt;/a&gt;を呼び出して新しいキャッシュを作成し、次に &lt;code&gt;addAll()&lt;/code&gt; を使用して一連のアセットをキャッシュに追加することで構成されます。</target>
        </trans-unit>
        <trans-unit id="ccf49c4b0c557a62c2a6d9d28fd80279db261752" translate="yes" xml:space="preserve">
          <source>This code checks for the existence of the &lt;code&gt;requestFullscreen()&lt;/code&gt; method before calling it.</source>
          <target state="translated">このコードは、呼び出す前に &lt;code&gt;requestFullscreen()&lt;/code&gt; メソッドの存在を確認します。</target>
        </trans-unit>
        <trans-unit id="c84361cc7c679cfeaaee25ffea164fc66e9b0243" translate="yes" xml:space="preserve">
          <source>This code checks if the browser supports service workers.</source>
          <target state="translated">このコードは、ブラウザがサービスワーカーをサポートしているかどうかをチェックします。</target>
        </trans-unit>
        <trans-unit id="0e9cb27c1ae8e5986b59de0eef32a4a080ec8b0f" translate="yes" xml:space="preserve">
          <source>This code configures a data channel to receive binary data in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; objects, and establishes a listener for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; events which constructs a string representing the received data as a list of hexadecimal byte values.</source>
          <target state="translated">このコードは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトでバイナリデータを受信するようにデータチャネルを構成し、受信したデータを表す文字列を16進バイト値のリストとして構築する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/message&quot;&gt;message&lt;/a&gt;&lt;/code&gt; イベントのリスナーを確立します。</target>
        </trans-unit>
        <trans-unit id="2c56ed069eb6be154e45f277af140e3f0d7f9ba8" translate="yes" xml:space="preserve">
          <source>This code creates a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event on the &lt;a href=&quot;window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; which in turn adds the needed &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event handler to the &quot;Donate Now&quot; button so that clicking it starts the payment process.</source>
          <target state="translated">このコードは、&lt;a href=&quot;window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt; &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを作成します。これにより、必要な &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントハンドラーが[今すぐ寄付]ボタンに追加され、クリックすると支払いプロセスが開始されます。</target>
        </trans-unit>
        <trans-unit id="ca5692b0b41d96ff65b3a261e09be32f3374dcb3" translate="yes" xml:space="preserve">
          <source>This code creates a new &lt;a href=&quot;paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt;, providing the supported handlers and payment options we set up above, as well as additional options (in this case, that we want to ask for shipping information).</source>
          <target state="translated">このコードは、新しい&lt;a href=&quot;paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest&lt;/code&gt; を&lt;/a&gt;作成し、上記で設定したサポートされているハンドラーと支払いオプション、および追加のオプション（この場合は配送情報を要求する）を提供します。</target>
        </trans-unit>
        <trans-unit id="02b09a94925750312737f4a46e5baa8c2e07bebb" translate="yes" xml:space="preserve">
          <source>This code example illustrates the use of the &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;item&quot;&gt;&lt;code&gt;item&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;length&quot;&gt;&lt;code&gt;length&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">このコード例は、&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; &lt;/a&gt;インターフェースの&lt;a href=&quot;item&quot;&gt; &lt;code&gt;item&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;length&quot;&gt; &lt;code&gt;length&lt;/code&gt; &lt;/a&gt;プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="2670a11ac1873da6ca59a1a0e535103a53263594" translate="yes" xml:space="preserve">
          <source>This code fetches the incoming video &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;&quot;received_video&quot;&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; attribute, then calls the stream's &lt;a href=&quot;../mediastream/gettracks&quot;&gt;&lt;code&gt;getTracks()&lt;/code&gt;&lt;/a&gt; method to get an array of the stream's tracks.</source>
          <target state="translated">このコードは、 &lt;code&gt;&quot;received_video&quot;&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; 属性から着信ビデオ&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; を&lt;/a&gt;フェッチし、ストリームの&lt;a href=&quot;../mediastream/gettracks&quot;&gt; &lt;code&gt;getTracks()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、ストリームのトラックの配列を取得します。</target>
        </trans-unit>
        <trans-unit id="325f36fb73c19a6f4712bffae7749c15827d8475" translate="yes" xml:space="preserve">
          <source>This code finds descendant elements with the &lt;code&gt;&quot;colorbox&quot;&lt;/code&gt; class, adds the class &lt;code&gt;&quot;hueframe&quot;&lt;/code&gt;, by calling &lt;code&gt;item(0), &lt;/code&gt;then removes &lt;code&gt;&quot;colorbox&quot; &lt;/code&gt;(using array notation). Another element (if any are left) will then become &lt;code&gt;item(0)&lt;/code&gt;.</source>
          <target state="translated">このコードは、と子孫要素を検索し &lt;code&gt;&quot;colorbox&quot;&lt;/code&gt; 、クラスクラス追加 &lt;code&gt;&quot;hueframe&quot;&lt;/code&gt; 呼び出すことによって、 &lt;code&gt;item(0), &lt;/code&gt; 次いで取り除き &lt;code&gt;&quot;colorbox&quot; &lt;/code&gt; （配列表記を使用して）。別の要素（残っている場合）は &lt;code&gt;item(0)&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="1a51cb8b9c83238a78ae3c50c0a9acda7e8c7d19" translate="yes" xml:space="preserve">
          <source>This code finds the ad's timer using its ID, &lt;code&gt;&quot;timer&quot;&lt;/code&gt;, and computes the number of seconds elapsed by dividing the ad's &lt;code&gt;totalViewTime&lt;/code&gt; by 1000. Then it calculates the number of minutes and seconds elapsed before setting the timer's &lt;a href=&quot;../htmlelement/innertext&quot;&gt;&lt;code&gt;innerText&lt;/code&gt;&lt;/a&gt; to a string representing that time in the form m:ss. The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart&quot;&gt;&lt;code&gt;String.padStart()&lt;/code&gt;&lt;/a&gt; method is used to ensure that the number of seconds is padded out to two digits if it's less than 10.</source>
          <target state="translated">このコードは、ID &lt;code&gt;&quot;timer&quot;&lt;/code&gt; を使用して広告のタイマーを見つけ、広告の &lt;code&gt;totalViewTime&lt;/code&gt; を1000で割ることによって経過した秒数を計算します。次に、タイマーの&lt;a href=&quot;../htmlelement/innertext&quot;&gt; &lt;code&gt;innerText&lt;/code&gt; &lt;/a&gt;をその時間を表す文字列に設定する前に経過した分と秒の数を計算しますm：ssの形式。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart&quot;&gt; &lt;code&gt;String.padStart()&lt;/code&gt; &lt;/a&gt;メソッドは、それが10未満だ場合の秒数を2桁にパディングされることを保証するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4cfa1e37607e13d81dc945a13340c7ec95c9126a" translate="yes" xml:space="preserve">
          <source>This code gives us a result like the following:</source>
          <target state="translated">このコードでは、以下のような結果が得られます。</target>
        </trans-unit>
        <trans-unit id="fdfcfa130b47e8ae408b9ddc4119c70412560d56" translate="yes" xml:space="preserve">
          <source>This code grabs references to the elements in the XHTML document that are of particular interest, namely the &lt;code&gt;video&lt;/code&gt; element and the two &lt;code&gt;canvas&lt;/code&gt; elements. It also fetches references to the graphics contexts for each of the two canvases. These will be used when we're actually doing the chroma-keying effect.</source>
          <target state="translated">このコードは、特に関心のあるXHTMLドキュメント内の要素、つまり &lt;code&gt;video&lt;/code&gt; 要素と2つの &lt;code&gt;canvas&lt;/code&gt; 要素への参照を取得します。また、2つのキャンバスそれぞれのグラフィックスコンテキストへの参照も取得します。これらは、クロマキーイング効果を実際に行うときに使用されます。</target>
        </trans-unit>
        <trans-unit id="7bdc075fa8dce1e6680fce6dd790f227e8ba7a16" translate="yes" xml:space="preserve">
          <source>This code is analogous to the &lt;code&gt;icecandidate&lt;/code&gt; event handler for the caller, seen in &lt;a href=&quot;#Adding_candidates_to_the_caller&quot;&gt;Adding candidates to the caller&lt;/a&gt; above.</source>
          <target state="translated">このコードは&lt;a href=&quot;#Adding_candidates_to_the_caller&quot;&gt;、&lt;/a&gt;上記の呼び出し元への候補の追加で説明した、呼び出し元の &lt;code&gt;icecandidate&lt;/code&gt; イベントハンドラーに似ています。</target>
        </trans-unit>
        <trans-unit id="9390ceda27316274f56344fe186d0a04ebf0440b" translate="yes" xml:space="preserve">
          <source>This code is called by the event handler above when the user hits the</source>
          <target state="translated">このコードは、ユーザーが</target>
        </trans-unit>
        <trans-unit id="d9a093440844702b770d08ddddb47b9f97a54de9" translate="yes" xml:space="preserve">
          <source>This code is called when the user hits the</source>
          <target state="translated">このコードは、ユーザーが</target>
        </trans-unit>
        <trans-unit id="fb9674e620e6fa142b0da4c3011ee9f1b68a2a71" translate="yes" xml:space="preserve">
          <source>This code is excerpted from our &lt;a href=&quot;https://github.com/mdn/web-speech-api/blob/master/speech-color-changer/script.js&quot;&gt;Speech color changer&lt;/a&gt; example.</source>
          <target state="translated">このコードは、&lt;a href=&quot;https://github.com/mdn/web-speech-api/blob/master/speech-color-changer/script.js&quot;&gt;スピーチカラーチェンジャーの&lt;/a&gt;例から抜粋したものです。</target>
        </trans-unit>
        <trans-unit id="3307b4570270ca003e1b156447546376026d71f8" translate="yes" xml:space="preserve">
          <source>This code is similar, except that it will be called automatically whenever the server sends a message with the &lt;code&gt;event&lt;/code&gt; field set to &quot;ping&quot;; it then parses the JSON in the &lt;code&gt;data&lt;/code&gt; field and outputs that information.</source>
          <target state="translated">このコードは似ていますが、サーバーが &lt;code&gt;event&lt;/code&gt; フィールドを「ping」に設定してメッセージを送信するたびに自動的に呼び出される点が異なります。次に、 &lt;code&gt;data&lt;/code&gt; フィールドのJSONを解析し、その情報を出力します。</target>
        </trans-unit>
        <trans-unit id="26862a0825b89781d69fe8df42b99f67288528dc" translate="yes" xml:space="preserve">
          <source>This code is very similar to what we did in the &lt;code&gt;invite()&lt;/code&gt; function back in &lt;a href=&quot;#Starting_a_call&quot;&gt;Starting a call&lt;/a&gt;. It starts by creating and configuring an &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; using our &lt;code&gt;createPeerConnection()&lt;/code&gt; function. Then it takes the SDP offer from the received &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; message and uses it to create a new &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; object representing the caller's session description.</source>
          <target state="translated">このコードは&lt;a href=&quot;#Starting_a_call&quot;&gt;、「呼び出しの開始」の&lt;/a&gt;「 &lt;code&gt;invite()&lt;/code&gt; 関数」で行ったものとよく似ています。&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;、 &lt;code&gt;createPeerConnection()&lt;/code&gt; 関数を使用してRTCPeerConnectionを作成および構成します。次に、受信した &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; メッセージからSDPオファーを取得し、それを使用して、発信者のセッションの説明を表す新しい&lt;a href=&quot;../rtcsessiondescription&quot;&gt; &lt;code&gt;RTCSessionDescription&lt;/code&gt; &lt;/a&gt;オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="45d87c6a0c71d130e985162fc3c46b6df402989b" translate="yes" xml:space="preserve">
          <source>This code lets you handle things differently when the window is very narrow.</source>
          <target state="translated">このコードを使うと、ウィンドウが非常に狭い場合に別の処理をすることができます。</target>
        </trans-unit>
        <trans-unit id="81dd9019c9d41bdaad185b29dd84ba24afcb375f" translate="yes" xml:space="preserve">
          <source>This code listens for incoming messages (that is, notices from the server that do not have an &lt;code&gt;event&lt;/code&gt; field on them) and appends the message text to a list in the document's HTML.</source>
          <target state="translated">このコードは着信メッセージ（つまり、 &lt;code&gt;event&lt;/code&gt; フィールドのないサーバーからの通知）をリッスンし、メッセージテキストをドキュメントのHTMLのリストに追加します。</target>
        </trans-unit>
        <trans-unit id="356c1026755b1461cf3cda8bab14f1e29efba3c8" translate="yes" xml:space="preserve">
          <source>This code now looks at the pending message to see if it has a &lt;code&gt;target&lt;/code&gt; property. If that property is present, it specifies the username of the client to which the message is to be sent, and we call &lt;code&gt;sendToOneUser()&lt;/code&gt; to send the message to them. Otherwise, the message is broadcast to all users by iterating over the connection list, sending the message to each user.</source>
          <target state="translated">このコードは、保留中のメッセージを調べて、 &lt;code&gt;target&lt;/code&gt; プロパティがあるかどうかを確認します。そのプロパティが存在する場合は、メッセージの送信先となるクライアントのユーザー名を指定し、 &lt;code&gt;sendToOneUser()&lt;/code&gt; を呼び出してメッセージを送信します。それ以外の場合、メッセージは接続リストを反復してすべてのユーザーにブロードキャストし、各ユーザーにメッセージを送信します。</target>
        </trans-unit>
        <trans-unit id="56935f567bea894577b24035ebabc9f2d18c6518" translate="yes" xml:space="preserve">
          <source>This code obtains a reference to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;, then gets a reference to its 2D graphics context.</source>
          <target state="translated">このコードは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;への参照を取得してから、その2Dグラフィックコンテキストへの参照を取得します。</target>
        </trans-unit>
        <trans-unit id="48af5c95278d984b1b40acc81c2624176165534e" translate="yes" xml:space="preserve">
          <source>This code sample is inspired by the Web Dictaphone demo. Some lines have been omitted for brevity; &lt;a href=&quot;https://github.com/mdn/web-dictaphone/&quot;&gt;refer to the source&lt;/a&gt; for the complete code.</source>
          <target state="translated">このコードサンプルは、Web Dictaphoneデモから発想を得ています。一部の行は簡潔にするために省略されています。完全なコードについては&lt;a href=&quot;https://github.com/mdn/web-dictaphone/&quot;&gt;、ソース&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c9965db5f9d4867c586d2e69e1730daccffadcc8" translate="yes" xml:space="preserve">
          <source>This code sets the buffer of vertexes that will be used to draw the triangles of the shape by calling &lt;a href=&quot;bindbuffer&quot;&gt;&lt;code&gt;bindBuffer()&lt;/code&gt;&lt;/a&gt;. Then the vertex position attribute's index is obtained from the shader program by calling &lt;a href=&quot;getattriblocation&quot;&gt;&lt;code&gt;getAttribLocation()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このコードは、&lt;a href=&quot;bindbuffer&quot;&gt; &lt;code&gt;bindBuffer()&lt;/code&gt; を&lt;/a&gt;呼び出して形状の三角形を描画するために使用される頂点のバッファーを設定します。次に、頂点位置属性のインデックスが、&lt;a href=&quot;getattriblocation&quot;&gt; &lt;code&gt;getAttribLocation()&lt;/code&gt; を&lt;/a&gt;呼び出すことによってシェーダープログラムから取得されます。</target>
        </trans-unit>
        <trans-unit id="54303dd7110d5068b33f0fd4385a696ede20a3ca" translate="yes" xml:space="preserve">
          <source>This code sets up a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; event. The event handler calls a function, &lt;code&gt;getValidationData()&lt;/code&gt;, which retrieves the data from the validation URL, then passes that data (or a promise to deliver the data) into &lt;code&gt;complete()&lt;/code&gt;.</source>
          <target state="translated">このコードは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを設定します。イベントハンドラーは、検証URLからデータを取得する関数 &lt;code&gt;getValidationData()&lt;/code&gt; を呼び出し、そのデータ（またはデータを配信するためのプロミス）を &lt;code&gt;complete()&lt;/code&gt; に渡します。</target>
        </trans-unit>
        <trans-unit id="8c857939a3eb6bed2b5adc86676c80ac61b44788" translate="yes" xml:space="preserve">
          <source>This code sets up a handler for the welcome panel's &quot;OK&quot; button that hides the welcome panel and makes the follow-up panel&amp;mdash;with the curious name &quot;awesome&quot;&amp;mdash;visible in its place.</source>
          <target state="translated">このコードは、ウェルカムパネルの[OK]ボタンのハンドラーを設定し、ウェルカムパネルを非表示にして、奇妙な名前の「フォローアップ」パネルをその場所に表示します。</target>
        </trans-unit>
        <trans-unit id="5705b4e74ea55c89499ca4aecb928913f3836141" translate="yes" xml:space="preserve">
          <source>This code sets up the global values used by the rest of the program.</source>
          <target state="translated">このコードは、プログラムの残りの部分で使用されるグローバル値を設定します。</target>
        </trans-unit>
        <trans-unit id="403a61eab5dc884a0a7cc847beefeb6d371bee80" translate="yes" xml:space="preserve">
          <source>This code shows how to get the lists of supported codecs for both sender and receiver:</source>
          <target state="translated">このコードは、送信者と受信者の両方でサポートされているコーデックのリストを取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="1fdca42e863a2ff0b1f1fb8209fe2d8f6fe0b9c0" translate="yes" xml:space="preserve">
          <source>This code snippet creates a peer connection, adds a data channel to it, and starts creating new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; (paragraph) elements each time a message arrives, with the message's contents displayed inside it. The new elements are then attached to the end of the document.</source>
          <target state="translated">このコードスニペットは、ピア接続を作成し、それにデータチャネルを追加し、メッセージが到着するたびに新しい&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; &lt;/a&gt;（段落）要素の作成を開始し、その中にメッセージのコンテンツを表示します。次に、新しい要素がドキュメントの最後に添付されます。</target>
        </trans-unit>
        <trans-unit id="038d9492006293f5d84b1f174207df4321acf792" translate="yes" xml:space="preserve">
          <source>This code snippet demonstrates the creation of a new &lt;code&gt;Worker&lt;/code&gt; using the &lt;a href=&quot;worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor; it also shows how to then send a message to the worker.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した新しい &lt;code&gt;Worker&lt;/code&gt; の作成を示しています。次に、ワーカーにメッセージを送信する方法も示します。</target>
        </trans-unit>
        <trans-unit id="6fc86fcd4bad8b0a50e7edecdd752779ca02cffa" translate="yes" xml:space="preserve">
          <source>This code snippet erases the entire canvas. This is commonly required at the start of each frame in an animation. The dimensions of the cleared area are set to equal the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes.</source>
          <target state="translated">このコードスニペットは、キャンバス全体を消去します。これは通常、アニメーションの各フレームの開始時に必要です。クリアされた領域の寸法は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; 属性に等しく設定されます。</target>
        </trans-unit>
        <trans-unit id="911922ed2cb63ceb8eb6261b3e16bf0191de647d" translate="yes" xml:space="preserve">
          <source>This code snippet examines a candidate's component type and dispatches the candidate to different handlers depending on the value.</source>
          <target state="translated">このコード・スニペットは、候補のコンポーネント・タイプを調べ、値に応じて異なるハンドラに候補をディスパッチします。</target>
        </trans-unit>
        <trans-unit id="5943cf2e08726b731f0ecd888f25a0b0e0696bd3" translate="yes" xml:space="preserve">
          <source>This code snippet examines the value of &lt;code&gt;protocol&lt;/code&gt; to decide if it should look at the value of &lt;a href=&quot;tcptype&quot;&gt;&lt;code&gt;tcpType&lt;/code&gt;&lt;/a&gt; to see if it's a &lt;strong&gt;simultaneous-open&lt;/strong&gt; (&lt;strong&gt;S-O&lt;/strong&gt;) candidate.</source>
          <target state="translated">このコードスニペットは、 &lt;code&gt;protocol&lt;/code&gt; の値を調べて、&lt;a href=&quot;tcptype&quot;&gt; &lt;code&gt;tcpType&lt;/code&gt; &lt;/a&gt;の値を調べて&lt;strong&gt;同時オープン&lt;/strong&gt;（&lt;strong&gt;SO&lt;/strong&gt;）候補であるかどうかを確認する必要があるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="5a3a31a855be3e97cfa673e65c564bfce766038a" translate="yes" xml:space="preserve">
          <source>This code snippet fetches the IP address and port number of the candidate, storing them into an object for future use.</source>
          <target state="translated">このコード・スニペットは、候補者の IP アドレスとポート番号を取得し、将来の使用のためにそれらをオブジェクトに格納します。</target>
        </trans-unit>
        <trans-unit id="a92e92a422a41c3280e6d0412966f57aef8619fd" translate="yes" xml:space="preserve">
          <source>This code snippet fills the entire canvas with a rectangle. This is often useful for creating a background, on top of which other things may then be drawn. To achieve this, the dimensions of the rectangle are set to equal the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; attributes.</source>
          <target state="translated">このコードスニペットは、キャンバス全体を長方形で塗りつぶします。これは多くの場合、背景を作成するのに役立ち、その上に他のものが描画されます。これを実現するために、長方形の寸法は&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;width&lt;/code&gt; と &lt;code&gt;height&lt;/code&gt; 属性に等しく設定されます。</target>
        </trans-unit>
        <trans-unit id="4e6154705bb0c42add68211365561a979cfcf1aa" translate="yes" xml:space="preserve">
          <source>This code snippet is for the global context:</source>
          <target state="translated">このコードスニペットはグローバルコンテキストのためのものです。</target>
        </trans-unit>
        <trans-unit id="e805dd184fb47e783f14910fb244d6bee386dd9e" translate="yes" xml:space="preserve">
          <source>This code snippet is for the worker (&lt;code&gt;worker-using.js&lt;/code&gt;):</source>
          <target state="translated">このコードスニペットはワーカー（ &lt;code&gt;worker-using.js&lt;/code&gt; ）用です。</target>
        </trans-unit>
        <trans-unit id="ee0c2f03b8d8f1fab60322bbaaeca2d95cfd2eed" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker fetch sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;run the fetch sample live&lt;/a&gt;). The &lt;a href=&quot;../serviceworkerglobalscope/onfetch&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt;&lt;/a&gt; event handler listens for the &lt;code&gt;fetch&lt;/code&gt; event. When fired, &lt;a href=&quot;respondwith&quot;&gt;&lt;code&gt;FetchEvent.respondWith(any value)&lt;/code&gt;&lt;/a&gt; returns a promise back to the controlled page. This promise resolves to the first matching URL request in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object. If no match is found, the code fetches a response from the network.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;Service Workerフェッチサンプルからのものです&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;フェッチサンプルをライブで実行します&lt;/a&gt;）。&lt;a href=&quot;../serviceworkerglobalscope/onfetch&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt; の&lt;/a&gt;ためのイベントハンドラをリッスン &lt;code&gt;fetch&lt;/code&gt; イベント。起動されると、&lt;a href=&quot;respondwith&quot;&gt; &lt;code&gt;FetchEvent.respondWith(any value)&lt;/code&gt; &lt;/a&gt;は制御されたページにプロミスを返します。このpromiseは、&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt;オブジェクトで最初に一致したURLリクエストに解決されます。一致が見つからない場合、コードはネットワークから応答をフェッチします。</target>
        </trans-unit>
        <trans-unit id="49a6649568fd665fb01df331edb8d3a71cf20929" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker fetch sample&lt;/a&gt; (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;prefetch example live&lt;/a&gt;.) The &lt;a href=&quot;onfetch&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt;&lt;/a&gt; event handler listens for the &lt;code&gt;fetch&lt;/code&gt; event. When fired, the code returns a promise that resolves to the first matching request in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object. If no match is found, the code fetches a response from the network.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;サービスワーカーのフェッチサンプルからのものです&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;ライブのプリフェッチの例を&lt;/a&gt;参照してください）&lt;a href=&quot;onfetch&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt; &lt;/a&gt;イベントハンドラーは、 &lt;code&gt;fetch&lt;/code&gt; イベントをリッスンします。コードが実行されると、コードは、&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt;オブジェクト内の最初に一致するリクエストに解決するpromiseを返します。一致が見つからない場合、コードはネットワークから応答をフェッチします。</target>
        </trans-unit>
        <trans-unit id="9d00d7c04508d5955c2fa534c8706984ff0e59f7" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker prefetch sample&lt;/a&gt; (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;prefetch example live&lt;/a&gt;.) The &lt;a href=&quot;serviceworkerglobalscope/onfetch&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt;&lt;/a&gt; event handler listens for the &lt;code&gt;fetch&lt;/code&gt; event. When fired, the code returns a promise that resolves to the first matching request in the &lt;a href=&quot;cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object. If no match is found, the code fetches a response from the network.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;サービスワーカーのプリフェッチサンプルからのものです&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;ライブのプリフェッチの例を&lt;/a&gt;参照してください）&lt;a href=&quot;serviceworkerglobalscope/onfetch&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.onfetch&lt;/code&gt; &lt;/a&gt;イベントハンドラーは、 &lt;code&gt;fetch&lt;/code&gt; イベントをリッスンします。コードが実行されると、コードは、&lt;a href=&quot;cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt;オブジェクト内の最初に一致するリクエストに解決するpromiseを返します。一致が見つからない場合、コードはネットワークから応答をフェッチします。</target>
        </trans-unit>
        <trans-unit id="40df95a8e8aa7c92f22da2addd03478025791ae2" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker prefetch sample&lt;/a&gt; (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;prefetch example live&lt;/a&gt;.) The code calls &lt;a href=&quot;extendableevent/waituntil&quot;&gt;&lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;serviceworkerglobalscope/oninstall&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.oninstall&lt;/code&gt;&lt;/a&gt;, delaying treating the &lt;a href=&quot;serviceworkerregistration/installing&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.installing&lt;/code&gt;&lt;/a&gt; worker as installed until the passed promise resolves successfully. The promise resolves when all resources have been fetched and cached, or else when any exception occurs.</source>
          <target state="translated">このコードスニペットから提示された&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;サービスワーカーのプリフェッチ・サンプル&lt;/a&gt;（参照&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;ライブプリフェッチの例を&lt;/a&gt;。）コードを呼び出し&lt;a href=&quot;extendableevent/waituntil&quot;&gt; &lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;serviceworkerglobalscope/oninstall&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.oninstall&lt;/code&gt; &lt;/a&gt;治療遅延、&lt;a href=&quot;serviceworkerregistration/installing&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.installing&lt;/code&gt; の&lt;/a&gt;合格約束を解決するまでインストールとして労働者を。 promiseは、すべてのリソースがフェッチされてキャッシュされたとき、または例外が発生したときに解決します。</target>
        </trans-unit>
        <trans-unit id="c0958986c19171732c45a996648efb7bf510a7dc" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;service worker prefetch sample&lt;/a&gt; (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;prefetch running live&lt;/a&gt;.) The code calls &lt;a href=&quot;extendableevent/waituntil&quot;&gt;&lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;serviceworkerglobalscope/oninstall&quot;&gt;&lt;code&gt;ServiceWorkerGlobalScope.oninstall&lt;/code&gt;&lt;/a&gt; and delays treating the &lt;a href=&quot;serviceworkerregistration/installing&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.installing&lt;/code&gt;&lt;/a&gt; worker as installed until the passed promise resolves successfully. The promise resolves when all resources have been fetched and cached, or when any exception occurs.</source>
          <target state="translated">このコードスニペットは、からである&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/prefetch/service-worker.js&quot;&gt;サービスワーカーのプリフェッチ・サンプル&lt;/a&gt;（参照&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/prefetch/&quot;&gt;プリフェッチはライブ実行している&lt;/a&gt;。）コードが呼び出されます&lt;a href=&quot;extendableevent/waituntil&quot;&gt; &lt;code&gt;ExtendableEvent.waitUntil()&lt;/code&gt; を&lt;/a&gt;して&lt;a href=&quot;serviceworkerglobalscope/oninstall&quot;&gt; &lt;code&gt;ServiceWorkerGlobalScope.oninstall&lt;/code&gt; &lt;/a&gt;し、治療の遅れ&lt;a href=&quot;serviceworkerregistration/installing&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.installing&lt;/code&gt; の&lt;/a&gt;合格約束を解決するまでインストールとして労働者を。promiseは、すべてのリソースがフェッチされてキャッシュされたとき、または例外が発生したときに解決します。</target>
        </trans-unit>
        <trans-unit id="3da37509ae074c85f6656db9797ab2bc2fa9dc9a" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html&quot;&gt;service worker registration-events sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/registration-events/&quot;&gt;live demo&lt;/a&gt;). The code listens for any change in the &lt;a href=&quot;serviceworker/state&quot;&gt;&lt;code&gt;ServiceWorker.state&lt;/code&gt;&lt;/a&gt; and returns its value.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html&quot;&gt;Service Worker Registration-Eventsサンプル&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/registration-events/&quot;&gt;ライブデモ&lt;/a&gt;）からの抜粋です。コードは&lt;a href=&quot;serviceworker/state&quot;&gt; &lt;code&gt;ServiceWorker.state&lt;/code&gt; の&lt;/a&gt;変更をリッスンし、その値を返します。</target>
        </trans-unit>
        <trans-unit id="f2719bdcfb7cc3d5b6981acd0a0bf7739f5dc407" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html&quot;&gt;service worker registration-events sample&lt;/a&gt; (&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/registration-events/&quot;&gt;live demo&lt;/a&gt;). The code listens for any change in the &lt;a href=&quot;state&quot;&gt;&lt;code&gt;ServiceWorker.state&lt;/code&gt;&lt;/a&gt; and returns its value.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/registration-events/index.html&quot;&gt;Service Worker Registration-Eventsサンプル&lt;/a&gt;（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/registration-events/&quot;&gt;ライブデモ&lt;/a&gt;）からの抜粋です。コードは&lt;a href=&quot;state&quot;&gt; &lt;code&gt;ServiceWorker.state&lt;/code&gt; の&lt;/a&gt;変更をリッスンし、その値を返します。</target>
        </trans-unit>
        <trans-unit id="692d37171ae3f8649645cd67e6a22548cbf4e863" translate="yes" xml:space="preserve">
          <source>This code snippet is from the &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js&quot;&gt;service worker selective caching sample&lt;/a&gt;. (see &lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/selective-caching/&quot;&gt;selective caching live&lt;/a&gt;) The code uses &lt;a href=&quot;cachestorage/open&quot;&gt;&lt;code&gt;CacheStorage.open()&lt;/code&gt;&lt;/a&gt; to open any &lt;code&gt;Cache&lt;/code&gt; objects with a &lt;code&gt;Content-Type&lt;/code&gt; header that starts with &lt;code&gt;&quot;font/&quot;&lt;/code&gt;.</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/service-worker/selective-caching/service-worker.js&quot;&gt;Service Worker選択的キャッシングサンプルからのもの&lt;/a&gt;です。（&lt;a href=&quot;https://googlechrome.github.io/samples/service-worker/selective-caching/&quot;&gt;選択的キャッシングライブを&lt;/a&gt;参照）コードは&lt;a href=&quot;cachestorage/open&quot;&gt; &lt;code&gt;CacheStorage.open()&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;&quot;font/&quot;&lt;/code&gt; で始まる &lt;code&gt;Content-Type&lt;/code&gt; ヘッダーを持つすべての &lt;code&gt;Cache&lt;/code&gt; オブジェクトを開きます。</target>
        </trans-unit>
        <trans-unit id="e12a5aa41a5e85e4583b731911ecb6762ebc6f29" translate="yes" xml:space="preserve">
          <source>This code snippet is from the MDN &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;sw-test example&lt;/a&gt; (see &lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;sw-test running live&lt;/a&gt;.) This service worker script waits for an &lt;a href=&quot;installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt; to fire, then runs &lt;a href=&quot;extendableevent/waituntil&quot;&gt;&lt;code&gt;waitUntil&lt;/code&gt;&lt;/a&gt; to handle the install process for the app. This consists of calling &lt;a href=&quot;cachestorage/open&quot;&gt;&lt;code&gt;CacheStorage.open&lt;/code&gt;&lt;/a&gt; to create a new cache, then using &lt;a href=&quot;cache/addall&quot;&gt;&lt;code&gt;Cache.addAll&lt;/code&gt;&lt;/a&gt; to add a series of assets to it.</source>
          <target state="translated">このコードスニペットは、MDN &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;sw-testの例からのものです&lt;/a&gt;（&lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;sw-test running liveを&lt;/a&gt;参照してください）。このService Workerスクリプトは、&lt;a href=&quot;installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; &lt;/a&gt;が&lt;a href=&quot;extendableevent/waituntil&quot;&gt; &lt;code&gt;waitUntil&lt;/code&gt; &lt;/a&gt;するのを待ってから、waitUntilを実行してアプリのインストールプロセスを処理します。これは、&lt;a href=&quot;cachestorage/open&quot;&gt; &lt;code&gt;CacheStorage.open&lt;/code&gt; &lt;/a&gt;を呼び出して新しいキャッシュを作成し、次に&lt;a href=&quot;cache/addall&quot;&gt; &lt;code&gt;Cache.addAll&lt;/code&gt; &lt;/a&gt;を使用して一連のアセットを追加することで構成されます。</target>
        </trans-unit>
        <trans-unit id="e3f5078335268a4b083f754eb23d9b866692dfdf" translate="yes" xml:space="preserve">
          <source>This code snippet is taken from &lt;a href=&quot;../webgl_api/basic_2d_animation_example#Drawing_and_animating_the_scene&quot;&gt;the function &lt;code&gt;animateScene()&lt;/code&gt;&lt;/a&gt; in &quot;A basic 2D WebGL animation example.&quot; See that article for the full sample and to see the resulting animation in action.</source>
          <target state="translated">このコードスニペットは、「基本的な2D WebGLアニメーションの例」の&lt;a href=&quot;../webgl_api/basic_2d_animation_example#Drawing_and_animating_the_scene&quot;&gt; &lt;code&gt;animateScene()&lt;/code&gt; &lt;/a&gt;関数から抜粋したものです。完全なサンプルと実際の結果のアニメーションを確認するには、その記事を参照してください。</target>
        </trans-unit>
        <trans-unit id="793d68bfd3a8e844bf6ffe3560511bb6c26d939e" translate="yes" xml:space="preserve">
          <source>This code snippet is taken from a &lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/push-messaging-and-notifications&quot;&gt;push messaging and notification sample&lt;/a&gt;. (No live demo is available.)</source>
          <target state="translated">このコードスニペットは、&lt;a href=&quot;https://github.com/GoogleChrome/samples/blob/gh-pages/push-messaging-and-notifications&quot;&gt;プッシュメッセージングおよび通知サンプル&lt;/a&gt;から取得されます。（ライブデモはありません。）</target>
        </trans-unit>
        <trans-unit id="b25f8e8720baf48ff504004bb5ee7583d3e54608" translate="yes" xml:space="preserve">
          <source>This code snippet shows how to signal ICE candidates across an arbitrary signaling channel.</source>
          <target state="translated">このコードスニペットは、任意のシグナリングチャネルでICE候補をシグナリングする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="dda634886f6212986f6b77a093a7e5b1cb8cf50a" translate="yes" xml:space="preserve">
          <source>This code snippet uses the &lt;code&gt;foundation&lt;/code&gt; of two candidates to determine if they're actually the same candidate.</source>
          <target state="translated">このコードスニペットは、2つの候補の &lt;code&gt;foundation&lt;/code&gt; を使用して、それらが実際に同じ候補であるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="b97f69e5a8303d42b64dcd84645c18580bb0523f" translate="yes" xml:space="preserve">
          <source>This code snippet uses the value of &lt;code&gt;ip&lt;/code&gt; to implement an IP address based ban feature.</source>
          <target state="translated">このコードスニペットは、 &lt;code&gt;ip&lt;/code&gt; の値を使用して、IPアドレスベースの禁止機能を実装します。</target>
        </trans-unit>
        <trans-unit id="fa2d5092eeb44935a0906a83a3036448d462a0c8" translate="yes" xml:space="preserve">
          <source>This code starts by creating a JavaScript array containing four 4-value vectors, one for each vertices' color. Then a new WebGL buffer is allocated to store these colors, and the array is converted into floats and stored into the buffer.</source>
          <target state="translated">このコードは、頂点の色ごとに1つずつ、4つの4つの値のベクトルを含むJavaScriptの配列を作成することから始まります。次に、これらの色を格納するために新しい WebGL バッファが割り当てられ、配列が float に変換されてバッファに格納されます。</target>
        </trans-unit>
        <trans-unit id="3aa5b2b9bff4c2e23ad8a6cb27e676b0024a2cd1" translate="yes" xml:space="preserve">
          <source>This code starts by creating the gain nodes and setting them and the volume control that will adjust their value all to 0.5. Then the &lt;code&gt;ConstantSourceNode&lt;/code&gt; is created by calling &lt;a href=&quot;baseaudiocontext/createconstantsource&quot;&gt;&lt;code&gt;AudioContext.createConstantSource()&lt;/code&gt;&lt;/a&gt;, and the gain parameters of each of the two gain nodes are connected to the &lt;code&gt;ConstantSourceNode&lt;/code&gt;. After starting the constant source by calling its &lt;a href=&quot;audioscheduledsourcenode/start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. Finally, the two gain nodes are connected to the audio destination (typically speakers or headphones).</source>
          <target state="translated">このコードは、ゲインノードを作成し、それらを設定して、それらの値をすべて0.5に調整するボリュームコントロールを設定することから始まります。次に、&lt;a href=&quot;baseaudiocontext/createconstantsource&quot;&gt; &lt;code&gt;AudioContext.createConstantSource()&lt;/code&gt; を&lt;/a&gt;呼び出して &lt;code&gt;ConstantSourceNode&lt;/code&gt; を作成し、2つのゲインノードのそれぞれのゲインパラメータを &lt;code&gt;ConstantSourceNode&lt;/code&gt; に接続します。&lt;a href=&quot;audioscheduledsourcenode/start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して定数ソースを開始した後。最後に、2つのゲインノードがオーディオの宛先（通常はスピーカーまたはヘッドフォン）に接続されます。</target>
        </trans-unit>
        <trans-unit id="5dc7b7f63d6d2244ab28e81b61f7f5998166a8f6" translate="yes" xml:space="preserve">
          <source>This code strokes the first path three times, the second path two times, and the third path only once.</source>
          <target state="translated">このコードは、最初のパスを3回、2番目のパスを2回、3番目のパスを1回だけストロークします。</target>
        </trans-unit>
        <trans-unit id="185d44c5354c152c7e22f4b1128e4657a2353e97" translate="yes" xml:space="preserve">
          <source>This code takes SDP which has been received from the remote peer and constructs a new &lt;a href=&quot;../rtcsessiondescription&quot;&gt;&lt;code&gt;RTCSessionDescription&lt;/code&gt;&lt;/a&gt; to pass into &lt;a href=&quot;setremotedescription&quot;&gt;&lt;code&gt;setRemoteDescription()&lt;/code&gt;&lt;/a&gt;. Once that succeeds, it uses &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt; to obtain access to the local webcam and microphone.</source>
          <target state="translated">このコードは、リモートピアから受信したSDPを受け取り、新しい&lt;a href=&quot;../rtcsessiondescription&quot;&gt; &lt;code&gt;RTCSessionDescription&lt;/code&gt; &lt;/a&gt;を作成して&lt;a href=&quot;setremotedescription&quot;&gt; &lt;code&gt;setRemoteDescription()&lt;/code&gt; &lt;/a&gt;に渡します。成功すると、&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;MediaDevices.getUserMedia()&lt;/code&gt; &lt;/a&gt;を使用してローカルのウェブカメラとマイクへのアクセスを取得します。</target>
        </trans-unit>
        <trans-unit id="ad443b9596b97b894cf1f86ebe76af0a8baece3c" translate="yes" xml:space="preserve">
          <source>This code uses &lt;code&gt;requestAnimationFrame&lt;/code&gt; to ask the browser call the function &quot;&lt;code&gt;render&lt;/code&gt;&quot; each frame. &lt;code&gt;requestAnimationFrame&lt;/code&gt; passes us the time in milliseconds since the page loaded. We convert that to seconds and then subtract from it the last time to compute &lt;code&gt;deltaTime&lt;/code&gt; which is the number of second since the last frame was rendered. At the end of drawscene we add the code to update &lt;code&gt;squareRotation.&lt;/code&gt;</source>
          <target state="translated">このコードは &lt;code&gt;requestAnimationFrame&lt;/code&gt; を使用して、ブラウザに各フレームの関数「 &lt;code&gt;render&lt;/code&gt; 」を呼び出すように要求します。 &lt;code&gt;requestAnimationFrame&lt;/code&gt; は、ページが読み込まれてからの時間をミリ秒単位で渡します。これを秒に変換し、最後にそれから減算して、最後のフレームがレンダリングされてからの秒数である &lt;code&gt;deltaTime&lt;/code&gt; を計算します。ドローシーンの最後に、squareRotationを更新するコードを追加します &lt;code&gt;squareRotation.&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f4f51d763c1f9c916f6e2fabe48b33e400ac5a2f" translate="yes" xml:space="preserve">
          <source>This code uses the amount of time that's passed since the last time we updated the value of &lt;code&gt;squareRotation&lt;/code&gt; to determine how far to rotate the square.</source>
          <target state="translated">このコードは、 &lt;code&gt;squareRotation&lt;/code&gt; の値を最後に更新してから経過した時間を使用して、正方形を回転させる距離を決定します。</target>
        </trans-unit>
        <trans-unit id="9f5785bbbd17422157f0a380316d02169c29d4ad" translate="yes" xml:space="preserve">
          <source>This code's job is to just restore the original text into the target box after the user's interaction with the element ends (for example, when they release the mouse button, or when they lift the stylus or finger from the screen).</source>
          <target state="translated">このコードの仕事は、ユーザーが要素とのインタラクションを終了した後(例えば、マウスボタンを離した時や、スタイラスや指を画面から離した時など)、元のテキストをターゲット ボックスに復元することです。</target>
        </trans-unit>
        <trans-unit id="84030ebd509c6ee77d38e1be5bd1ac17e2308409" translate="yes" xml:space="preserve">
          <source>This code, based on an older version of our &lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;Signaling and video calling&lt;/a&gt; sample, responds to &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; events by setting the video source for a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element to the stream specified in the event, and then enabling a &quot;hang up&quot; button in the app's user interface.</source>
          <target state="translated">このコードは、以前のバージョンの&lt;a href=&quot;../webrtc_api/signaling_and_video_calling&quot;&gt;シグナリングおよびビデオ通話&lt;/a&gt;サンプルに基づいており、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素のビデオソースをイベントで指定されたストリームに設定し、次に[ハングアップ]ボタンを有効にすることで、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; イベントに応答します。アプリのユーザーインターフェイス。</target>
        </trans-unit>
        <trans-unit id="df798030650e5c573f23eb989a8c2c1704e869e6" translate="yes" xml:space="preserve">
          <source>This code, executed when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event occurs, subtracts from the current time the time at which the navigation whose timing was recorded began (&lt;a href=&quot;../performancetiming/navigationstart&quot;&gt;&lt;code&gt;performance.timing.navigationStart&lt;/code&gt;&lt;/a&gt;), and outputs that information to the screen by inserting it into an element.</source>
          <target state="translated">このコードは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントが発生したときに実行され、タイミングが記録されたナビゲーションが開始された時刻（&lt;a href=&quot;../performancetiming/navigationstart&quot;&gt; &lt;code&gt;performance.timing.navigationStart&lt;/code&gt; &lt;/a&gt;）を現在の時刻から減算し、その情報を要素に挿入して画面に出力します。</target>
        </trans-unit>
        <trans-unit id="54ce110c12d0b1294f6318f30387b5b9bb1b5d0a" translate="yes" xml:space="preserve">
          <source>This configuration option cannot be changed after it is first specified; once the certificates have been set, this property is ignored in future calls to &lt;a href=&quot;rtcpeerconnection/setconfiguration&quot;&gt;&lt;code&gt;RTCPeerConnection.setConfiguration()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この構成オプションは、最初に指定した後は変更できません。証明書が設定されると、このプロパティは今後の&lt;a href=&quot;rtcpeerconnection/setconfiguration&quot;&gt; &lt;code&gt;RTCPeerConnection.setConfiguration()&lt;/code&gt; の&lt;/a&gt;呼び出しで無視されます。</target>
        </trans-unit>
        <trans-unit id="b0c17d7cb33f8977a0334d4dc852adb23986059e" translate="yes" xml:space="preserve">
          <source>This configuration option cannot be changed after it is first specified; once the certificates have been set, this property is ignored in future calls to &lt;a href=&quot;setconfiguration&quot;&gt;&lt;code&gt;RTCPeerConnection.setConfiguration()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この構成オプションは、最初に指定した後は変更できません。証明書が設定されると、このプロパティは今後の&lt;a href=&quot;setconfiguration&quot;&gt; &lt;code&gt;RTCPeerConnection.setConfiguration()&lt;/code&gt; の&lt;/a&gt;呼び出しで無視されます。</target>
        </trans-unit>
        <trans-unit id="f775cb9859c745b99dd52a8aba4ca36f8ab822af" translate="yes" xml:space="preserve">
          <source>This constructor does not do complete validation of the specified &lt;code&gt;candidateInfo&lt;/code&gt; object or string.</source>
          <target state="translated">このコンストラクタは、指定された &lt;code&gt;candidateInfo&lt;/code&gt; オブジェクトまたは文字列の完全な検証を行いません。</target>
        </trans-unit>
        <trans-unit id="149d0792fcd4766ff175e51235e500f1cbbe5f13" translate="yes" xml:space="preserve">
          <source>This constructor has been deprecated because &lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt; and other methods which take SDP as input now directly accept an object conforming to the &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; dictionary, so you don't have to instantiate an &lt;code&gt;RTCSessionDescription&lt;/code&gt; yourself.</source>
          <target state="translated">&lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt;およびSDPを入力として受け取る他のメソッドが &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; 辞書に準拠するオブジェクトを直接受け入れるようになったため、このコンストラクタは廃止されました。自分で &lt;code&gt;RTCSessionDescription&lt;/code&gt; をインスタンス化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="5701c8c1eebdea428db51a030c7b07f6d6fc96af" translate="yes" xml:space="preserve">
          <source>This constructor is the preferred way of creating such an object in a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このコンストラクタは、&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;でこのようなオブジェクトを作成するための推奨される方法です。</target>
        </trans-unit>
        <trans-unit id="4ddc7ddae1f014aea1a21cb118ffd479d0c961e7" translate="yes" xml:space="preserve">
          <source>This constructor is used to create a synthetic &lt;a href=&quot;../dragevent&quot;&gt;&lt;code&gt;DragEvent&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このコンストラクターは、合成&lt;a href=&quot;../dragevent&quot;&gt; &lt;code&gt;DragEvent&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するために使用されます。</target>
        </trans-unit>
        <trans-unit id="a35cbc0b8a837379050ea697d644c6570a019881" translate="yes" xml:space="preserve">
          <source>This constructor returns a new &lt;code&gt;RTCSessionDescription&lt;/code&gt;. The parameter is a &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; dictionary containing the values to assign the two properties.</source>
          <target state="translated">このコンストラクタは、新しい &lt;code&gt;RTCSessionDescription&lt;/code&gt; を返します。パラメータは、2つのプロパティを割り当てるための値を含む &lt;code&gt;RTCSessionDescriptionInit&lt;/code&gt; 辞書です。</target>
        </trans-unit>
        <trans-unit id="137502c797120fd61fa1302c551f8582f03fce5d" translate="yes" xml:space="preserve">
          <source>This could be for the following reasons:</source>
          <target state="translated">これは以下のような理由が考えられます。</target>
        </trans-unit>
        <trans-unit id="5cdbb78ca2c3269ca25a23a07129e1249044cdab" translate="yes" xml:space="preserve">
          <source>This could be used to populate a list of voices that the user can choose between when the event fires (see our &lt;a href=&quot;https://github.com/mdn/web-speech-api/blob/gh-pages/speak-easy-synthesis/script.js&quot;&gt;Speak easy synthesis demo&lt;/a&gt;.) Note that Firefox doesn't support it at present, and will just return a list of voices when &lt;a href=&quot;getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt; is fired. With Chrome however, you have to wait for the event to fire before populating the list, hence the bottom if statement seen below.</source>
          <target state="translated">これは、イベントが発生したときにユーザーが選択できる音声のリストを入力するために使用できます（&lt;a href=&quot;https://github.com/mdn/web-speech-api/blob/gh-pages/speak-easy-synthesis/script.js&quot;&gt;Speak簡易合成デモを&lt;/a&gt;参照してください）&lt;a href=&quot;getvoices&quot;&gt; &lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt; &lt;/a&gt;は現時点ではサポートしておらず、SpeechSynthesisのときに音声のリストを返すだけです。 .getVoices（）が発生します。ただしChromeでは、イベントが発生するのを待ってからリストを作成する必要があるため、下のifステートメントが下に表示されます。</target>
        </trans-unit>
        <trans-unit id="d88db422599ade63e99d0c607e5d8ffe4d48db18" translate="yes" xml:space="preserve">
          <source>This could then be used to build a user interface for selecting the language the user would like to listen to while watching a movie, for example.</source>
          <target state="translated">これを利用して、例えば映画を見ながら聞きたい言語を選択するためのユーザーインターフェースを構築することができます。</target>
        </trans-unit>
        <trans-unit id="e91852c6678901525d98ec606bc71b9b051507a7" translate="yes" xml:space="preserve">
          <source>This counterpart to &lt;code&gt;ontrack&lt;/code&gt; is called to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; event; it's sent to the &lt;code&gt;RTCPeerConnection&lt;/code&gt; when the remote peer removes a track from the media being sent. See &lt;a href=&quot;#Handling_the_removal_of_tracks&quot;&gt;Handling the removal of tracks&lt;/a&gt;.</source>
          <target state="translated">この対応 &lt;code&gt;ontrack&lt;/code&gt; 処理するために呼び出される &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; イベントを、リモートピアが送信中のメディアからトラックを削除すると、 &lt;code&gt;RTCPeerConnection&lt;/code&gt; に送信されます。&lt;a href=&quot;#Handling_the_removal_of_tracks&quot;&gt;トラックの削除の処理を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="03a466fa359227c1ff4c19bc8d96b94ab3b8e129" translate="yes" xml:space="preserve">
          <source>This creates a handler that allows &lt;code&gt;web+burger://&lt;/code&gt; links to direct the user to your web application, inserting the burger information specified in the link into the URL. Recall that this script must be run from the same domain (so any page location at &lt;code&gt;burgers.example.com&lt;/code&gt;) and the second argument passed must be of &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; scheme (in this example it is &lt;code&gt;https&lt;/code&gt;) .</source>
          <target state="translated">これにより、 &lt;code&gt;web+burger://&lt;/code&gt; リンクでユーザーをWebアプリケーションに誘導できるハンドラーが作成され、リンクで指定されたハンバーガー情報がURLに挿入されます。このスクリプトは同じドメインから実行する必要がある（したがって、 &lt;code&gt;burgers.example.com&lt;/code&gt; のページの場所）必要があり、渡される2番目の引数は &lt;code&gt;http&lt;/code&gt; または &lt;code&gt;https&lt;/code&gt; スキーム（この例では &lt;code&gt;https&lt;/code&gt; ）である必要があることを思い出してください。</target>
        </trans-unit>
        <trans-unit id="7e1429073ced701d42db3ad261d5acda3c8a3ce8" translate="yes" xml:space="preserve">
          <source>This creates a new &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; and inserts it before the element with the ID &quot;&lt;code&gt;div1&lt;/code&gt;&quot;.</source>
          <target state="translated">これにより、新しい &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; が作成され、IDが &lt;code&gt;div1&lt;/code&gt; の要素の前に挿入されます。</target>
        </trans-unit>
        <trans-unit id="68af91b4a6c6922a173f5e758f1f94beabc45c99" translate="yes" xml:space="preserve">
          <source>This creates a new &lt;code&gt;ImageData&lt;/code&gt; object with the specified dimensions. All pixels are preset to transparent black (all zeroes i.e rgba(0,0,0,0)).</source>
          <target state="translated">これにより、指定された寸法で新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトが作成されます。すべてのピクセルは透明な黒にプリセットされています（すべてゼロ、つまりrgba（0,0,0,0））。</target>
        </trans-unit>
        <trans-unit id="b4bbbb33758558ffba5c13f53a853ce78e7ec9c3" translate="yes" xml:space="preserve">
          <source>This creates a variable, &lt;code&gt;newState&lt;/code&gt;, which is the opposite of the current value of &lt;code&gt;enabled&lt;/code&gt;, then uses that to select either the Emoji character for the &quot;play&quot; icon or the character for the &quot;pause&quot; icon as the new &lt;a href=&quot;../element/innerhtml&quot;&gt;&lt;code&gt;innerHTML&lt;/code&gt;&lt;/a&gt; of the pause button's element.</source>
          <target state="translated">これにより、 &lt;code&gt;enabled&lt;/code&gt; の現在の値の反対である変数 &lt;code&gt;newState&lt;/code&gt; が作成され、それを使用して、「再生」アイコンの絵文字文字または「一時停止」アイコンの文字のいずれかを、一時停止ボタンの新しい&lt;a href=&quot;../element/innerhtml&quot;&gt; &lt;code&gt;innerHTML&lt;/code&gt; &lt;/a&gt;として選択します素子。</target>
        </trans-unit>
        <trans-unit id="f1dd4b3e5ff9f06a8fb86b432fcb75215776e8a6" translate="yes" xml:space="preserve">
          <source>This creates an &lt;code&gt;options&lt;/code&gt; object with a getter function for the &lt;code&gt;passive&lt;/code&gt; property; the getter sets a flag, &lt;code&gt;passiveSupported&lt;/code&gt;, to &lt;code&gt;true&lt;/code&gt; if it gets called. That means that if the browser checks the value of the &lt;code&gt;passive&lt;/code&gt; property on the &lt;code&gt;options&lt;/code&gt; object, &lt;code&gt;passiveSupported&lt;/code&gt; will be set to &lt;code&gt;true&lt;/code&gt;; otherwise, it will remain &lt;code&gt;false&lt;/code&gt;. We then call &lt;code&gt;addEventListener()&lt;/code&gt; to set up a fake event handler, specifying those options, so that the options will be checked if the browser recognizes an object as the third parameter. Then, we call &lt;code&gt;removeEventListener()&lt;/code&gt; to clean up after ourselves. (Note that &lt;code&gt;handleEvent()&lt;/code&gt; is ignored on event listeners that aren't called.)</source>
          <target state="translated">これにより、 &lt;code&gt;passive&lt;/code&gt; プロパティのゲッター関数を含む &lt;code&gt;options&lt;/code&gt; オブジェクトが作成されます。ゲッターは、呼び出された場合、フラグ &lt;code&gt;passiveSupported&lt;/code&gt; を &lt;code&gt;true&lt;/code&gt; に設定します。つまり、ブラウザーが &lt;code&gt;options&lt;/code&gt; オブジェクトの &lt;code&gt;passive&lt;/code&gt; プロパティの値をチェックすると、 &lt;code&gt;passiveSupported&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; に設定されます。それ以外の場合は、 &lt;code&gt;false&lt;/code&gt; のままになります。次に &lt;code&gt;addEventListener()&lt;/code&gt; を呼び出して、これらのオプションを指定して偽のイベントハンドラーを設定します。これにより、ブラウザーがオブジェクトを3番目のパラメーターとして認識した場合にオプションがチェックされます。次に、 &lt;code&gt;removeEventListener()&lt;/code&gt; を呼び出します自分で片付けます。（呼び出されないイベントリスナーでは、 &lt;code&gt;handleEvent()&lt;/code&gt; が無視されることに注意してください。）</target>
        </trans-unit>
        <trans-unit id="c10a4c3135747fd9237fe8c50747c1330732afc1" translate="yes" xml:space="preserve">
          <source>This creates article boxes with a white background which float atop the blue background, with a small margin around the article. Every article which isn't the last item in the container has an 8px bottom margin to space things apart.</source>
          <target state="translated">これは、青い背景の上に白い背景の記事ボックスを作成し、記事の周りに小さな余白をつけてその上に浮かんでいます。コンテナ内の最後の項目ではないすべての記事は、物事を区切るために8pxの下マージンを持っています。</target>
        </trans-unit>
        <trans-unit id="15124c4356b41009912db7f49759bd62426c1900" translate="yes" xml:space="preserve">
          <source>This currently only has one method available on it &amp;mdash; &lt;a href=&quot;../writablestreamdefaultcontroller/error&quot;&gt;&lt;code&gt;WritableStreamDefaultController.error()&lt;/code&gt;&lt;/a&gt;, which when invoked causes future interactions with the stream to error. This is useful when another part of an app goes wrong, and you want to propagate the error to the stream so that the whole system fails cleanly, rather than risking garbage being silently written to the stream (or something similarly bad).</source>
          <target state="translated">現在、このメソッドで使用できるメソッドは&lt;a href=&quot;../writablestreamdefaultcontroller/error&quot;&gt; &lt;code&gt;WritableStreamDefaultController.error()&lt;/code&gt; の&lt;/a&gt; 1つだけです。このメソッドを呼び出すと、ストリームとの今後の対話でエラーが発生します。これは、アプリの別の部分に問題があり、ストリームにゴミを静かに書き込むリスクを負うのではなく、エラーをストリームに伝播してシステム全体を完全に失敗させたい場合に便利です（または同様に悪いもの）。</target>
        </trans-unit>
        <trans-unit id="1ac649a99beec9f0af5b82ac4f2e4d7742403b5b" translate="yes" xml:space="preserve">
          <source>This cursor does not include duplicates, and its direction is monotonically decreasing in the order of keys.</source>
          <target state="translated">このカーソルは重複を含まず、その方向はキー順に単調に減少していく。</target>
        </trans-unit>
        <trans-unit id="9ef49c53bead40ada54278d6231dd4fed10bfa58" translate="yes" xml:space="preserve">
          <source>This cursor does not include duplicates, and its direction is monotonically increasing in the order of keys.</source>
          <target state="translated">このカーソルは重複を含まず、その方向はキー順に単調に増加する。</target>
        </trans-unit>
        <trans-unit id="69c6434ee2b3fe6628e1b9b9e0f2f7163dee4ee1" translate="yes" xml:space="preserve">
          <source>This cursor includes duplicates, and its direction is monotonically decreasing in the order of keys.</source>
          <target state="translated">このカーソルは重複を含み、その方向はキーの順に単調に減少していく。</target>
        </trans-unit>
        <trans-unit id="61cda63b17e63d95c9c45bdea01f6736c28a3e0e" translate="yes" xml:space="preserve">
          <source>This cursor includes duplicates, and its direction is monotonically increasing in the order of keys.</source>
          <target state="translated">このカーソルは重複を含み、その方向はキー順に単調に増加する。</target>
        </trans-unit>
        <trans-unit id="0f374fa33dbd6e6721038cb7e88b2209b27d800d" translate="yes" xml:space="preserve">
          <source>This data is returned by the payment app that satisfies the payment request, and must conform to the structure defined in the &lt;a href=&quot;../basiccardresponse&quot;&gt;&lt;code&gt;BasicCardResponse&lt;/code&gt;&lt;/a&gt; dictionary.</source>
          <target state="translated">このデータは、支払い要求を満たす支払いアプリによって返され、&lt;a href=&quot;../basiccardresponse&quot;&gt; &lt;code&gt;BasicCardResponse&lt;/code&gt; &lt;/a&gt;辞書で定義された構造に準拠する必要があります。</target>
        </trans-unit>
        <trans-unit id="3cb089584fb6e1b93fa0a8e0051e6cc511e38908" translate="yes" xml:space="preserve">
          <source>This data should be passed into the &lt;a href=&quot;complete&quot;&gt;&lt;code&gt;complete()&lt;/code&gt;&lt;/a&gt; method to let the user agent complete the transaction.</source>
          <target state="translated">ユーザーエージェントがトランザクションを完了するには、このデータを&lt;a href=&quot;complete&quot;&gt; &lt;code&gt;complete()&lt;/code&gt; &lt;/a&gt;メソッドに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="5b6945638597aef4e4fb66a23a69eb5bf20a687b" translate="yes" xml:space="preserve">
          <source>This data, particularly the &lt;code&gt;duration&lt;/code&gt; timestamp, can be used to help identify performance problems.</source>
          <target state="translated">このデータ、特に &lt;code&gt;duration&lt;/code&gt; タイムスタンプは、パフォーマンスの問題を特定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="adc7402fa7230b7e16cb49dbcbf134faedaff5fb" translate="yes" xml:space="preserve">
          <source>This default has changed in the latest spec &amp;mdash; the new default value is &lt;code&gt;false&lt;/code&gt;. Though it's still an optional argument, you should always provide the &lt;code&gt;deep&lt;/code&gt; argument for backward &lt;em&gt;and&lt;/em&gt; forward compatibility. With Gecko 28.0 (Firefox 28 / Thunderbird 28 / SeaMonkey 2.25 / Firefox OS 1.3), the console warns developers not to omit the argument. Starting with Gecko 29.0 (Firefox 29 / Thunderbird 29 / SeaMonkey 2.26)), a shallow clone is defaulted instead of a deep clone.</source>
          <target state="translated">このデフォルトは最新の仕様で変更されてい &lt;code&gt;false&lt;/code&gt; 。新しいデフォルト値はfalseです。これはまだオプションの引数ですが、後方互換性&lt;em&gt;と&lt;/em&gt;前方互換性のために常に &lt;code&gt;deep&lt;/code&gt; 引数を提供する必要があります。Gecko 28.0（Firefox 28 / Thunderbird 28 / SeaMonkey 2.25 / Firefox OS 1.3）では、コンソールは開発者に引数を省略しないよう警告します。Gecko 29.0（Firefox 29 / Thunderbird 29 / SeaMonkey 2.26）以降、ディープクローンの代わりにシャロークローンがデフォルトで使用されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8e325065bf0ef55cca2c31ff998125fd45c5cc87" translate="yes" xml:space="preserve">
          <source>This defines the resource that you wish to fetch. This can either be:</source>
          <target state="translated">これは、取得したいリソースを定義します。これは次のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="40cedbbda26067b79218f1ed498daf5114302ceb" translate="yes" xml:space="preserve">
          <source>This demo uses JavaScript to draw a ball on top of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element. When you click the canvas, pointer lock is then used to remove the mouse pointer and allow you to move the ball directly using the mouse. Let's see how this works.</source>
          <target state="translated">このデモでは、JavaScriptを使用して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の上にボールを描画します。キャンバスをクリックすると、ポインターロックが使用されてマウスポインターが削除され、マウスを使用してボールを直接移動できるようになります。これがどのように機能するか見てみましょう。</target>
        </trans-unit>
        <trans-unit id="dfff1330b35fb00e8aa04dcc9ee1e025ff03052d" translate="yes" xml:space="preserve">
          <source>This demonstrates how you can use both array syntax (line 2) and the &lt;a href=&quot;../htmlcollection/item&quot;&gt;&lt;code&gt;HTMLCollection.item()&lt;/code&gt;&lt;/a&gt; method (line 3) to obtain individual rows in the table.</source>
          <target state="translated">これは、配列構文（2行目）と&lt;a href=&quot;../htmlcollection/item&quot;&gt; &lt;code&gt;HTMLCollection.item()&lt;/code&gt; &lt;/a&gt;メソッド（3行目）の両方を使用して、テーブル内の個々の行を取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="be25d1c5583b3e592cda4b71be6d842a8ed1262f" translate="yes" xml:space="preserve">
          <source>This demonstrates two things:</source>
          <target state="translated">これは2つのことを示しています。</target>
        </trans-unit>
        <trans-unit id="e66ee48d35373e716e7c6b37c885fe5cc5b5b356" translate="yes" xml:space="preserve">
          <source>This deprecated form of the method returns instantaneously without waiting for the actual setting to be done: in case of success, the &lt;code&gt;successCallback&lt;/code&gt; will be called; in case of failure, the &lt;code&gt;errorCallback&lt;/code&gt; will be called.</source>
          <target state="translated">この非推奨のメソッド形式は、実際の設定が完了するのを待たずに瞬時に戻ります。成功した場合、 &lt;code&gt;successCallback&lt;/code&gt; が呼び出されます。失敗した場合は、 &lt;code&gt;errorCallback&lt;/code&gt; が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="aa6f6380ccbd5b9e7852e7585896d78e77a74e85" translate="yes" xml:space="preserve">
          <source>This dictionary represents the object that should be passed into &lt;a href=&quot;subtlecrypto/sign&quot;&gt;&lt;code&gt;SubtleCrypto.sign()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;subtlecrypto/verify&quot;&gt;&lt;code&gt;SubtleCrypto.verify()&lt;/code&gt;&lt;/a&gt; when using the ECDSA algorithm.</source>
          <target state="translated">このディクショナリは、ECDSAアルゴリズムを使用するときに&lt;a href=&quot;subtlecrypto/sign&quot;&gt; &lt;code&gt;SubtleCrypto.sign()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;subtlecrypto/verify&quot;&gt; &lt;code&gt;SubtleCrypto.verify()&lt;/code&gt; &lt;/a&gt;に渡す必要があるオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="98eb93bf78e8588fa8227b8f8646068372cb9381" translate="yes" xml:space="preserve">
          <source>This dictionary represents the object that should be passed into &lt;a href=&quot;subtlecrypto/sign&quot;&gt;&lt;code&gt;SubtleCrypto.sign()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;subtlecrypto/verify&quot;&gt;&lt;code&gt;SubtleCrypto.verify()&lt;/code&gt;&lt;/a&gt; when using the RSA-PSS algorithm.</source>
          <target state="translated">このディクショナリは、RSA-PSSアルゴリズムを使用するときに&lt;a href=&quot;subtlecrypto/sign&quot;&gt; &lt;code&gt;SubtleCrypto.sign()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;subtlecrypto/verify&quot;&gt; &lt;code&gt;SubtleCrypto.verify()&lt;/code&gt; &lt;/a&gt;に渡す必要があるオブジェクトを表します。</target>
        </trans-unit>
        <trans-unit id="4a3737c6cdcf9269fef37445d380981c4383708a" translate="yes" xml:space="preserve">
          <source>This differs from the &lt;a href=&quot;../rtcicetransport/gatheringstate&quot;&gt;&lt;code&gt;gatheringState&lt;/code&gt;&lt;/a&gt;, which only indicates whether or not ICE gathering is currently underway.</source>
          <target state="translated">これは、ICEの収集が現在進行中であるかどうかのみを示す&lt;a href=&quot;../rtcicetransport/gatheringstate&quot;&gt; &lt;code&gt;gatheringState&lt;/code&gt; &lt;/a&gt;とは異なります。</target>
        </trans-unit>
        <trans-unit id="46936d633d4989fa1a5236fb9f8c8dacbc4d6c30" translate="yes" xml:space="preserve">
          <source>This direction causes the cursor to be opened at the end of the source.</source>
          <target state="translated">この方向にすると、ソースの最後にカーソルが開くようになります。</target>
        </trans-unit>
        <trans-unit id="08a3a57457d4b0256bc9d4e4d4a9bf680710eb81" translate="yes" xml:space="preserve">
          <source>This direction causes the cursor to be opened at the end of the source. For every key with duplicate values, only the first record is yielded.</source>
          <target state="translated">この方向にすると、ソースの最後にカーソルが開きます。重複した値を持つすべてのキーに対して、最初のレコードのみが生成されます。</target>
        </trans-unit>
        <trans-unit id="849338daaac2bb232f0ce46d11ee0819bdcc6ad2" translate="yes" xml:space="preserve">
          <source>This direction causes the cursor to be opened at the start of the source.</source>
          <target state="translated">この方向にすると、ソースの開始時にカーソルが開くようになります。</target>
        </trans-unit>
        <trans-unit id="4e95d4f4235889961ba79685e5d4333540231739" translate="yes" xml:space="preserve">
          <source>This direction causes the cursor to be opened at the start of the source. For every key with duplicate values, only the first record is yielded.</source>
          <target state="translated">この方向にすると、カーソルはソースの先頭に開きます。重複した値を持つすべてのキーに対して、最初のレコードのみが生成されます。</target>
        </trans-unit>
        <trans-unit id="e0c5f40d67de9d4fdb18b711aef397880e45d3f3" translate="yes" xml:space="preserve">
          <source>This directly related to the &lt;a href=&quot;../web_audio_api&quot;&gt;Web Audio API&lt;/a&gt;, which allows us to place sounds on objects we have in the canvas or launch audio depending on the part of the scene the user is traveling towards or looking at.</source>
          <target state="translated">これは&lt;a href=&quot;../web_audio_api&quot;&gt;WebオーディオAPI&lt;/a&gt;に直接関連しており、ユーザーが移動または見ているシーンの部分に応じて、キャンバス内のオブジェクトにサウンドを配置したり、オーディオを起動したりできます。</target>
        </trans-unit>
        <trans-unit id="02997f9e0b862ee244e3441e0b9110774453e91a" translate="yes" xml:space="preserve">
          <source>This document contains examples of the Beacon interfaces. See &lt;a href=&quot;../beacon_api&quot;&gt;&lt;code&gt;Beacon API&lt;/code&gt;&lt;/a&gt; for an overview of the API.</source>
          <target state="translated">このドキュメントには、ビーコンインターフェースの例が含まれています。&lt;a href=&quot;../beacon_api&quot;&gt; &lt;code&gt;Beacon API&lt;/code&gt; &lt;/a&gt;の概要については、ビーコンAPIを参照してください。</target>
        </trans-unit>
        <trans-unit id="3ed2c1899d82d5f3c5c8d778aa82db46c3528a08" translate="yes" xml:space="preserve">
          <source>This document describes how to use the &lt;a href=&quot;../performanceframetiming&quot;&gt;&lt;code&gt;PerformanceFrameTiming&lt;/code&gt;&lt;/a&gt; interfaces including example code. For an overview of these interfaces see &lt;a href=&quot;https://developer.mozilla.org/Web/API/Frame_Timing_API&quot;&gt;Frame Timing API&lt;/a&gt;.</source>
          <target state="translated">このドキュメントでは、サンプルコードを含む&lt;a href=&quot;../performanceframetiming&quot;&gt; &lt;code&gt;PerformanceFrameTiming&lt;/code&gt; &lt;/a&gt;インターフェイスの使用方法について説明します。これらのインターフェースの概要については、&lt;a href=&quot;https://developer.mozilla.org/Web/API/Frame_Timing_API&quot;&gt;Frame Timing APIを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="482d06a1d1cd37457442b804c3a01909085db36b" translate="yes" xml:space="preserve">
          <source>This document establishes two &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;canvas&lt;/code&gt;&lt;/a&gt; elements, with the IDs &lt;code&gt;c1&lt;/code&gt; and &lt;code&gt;c2&lt;/code&gt;. Canvas &lt;code&gt;c1&lt;/code&gt; is used to display the current frame of the original video, while &lt;code&gt;c2&lt;/code&gt; is used to display the video after performing the chroma-keying effect; &lt;code&gt;c2&lt;/code&gt; is preloaded with the still image that will be used to replace the green background in the video.</source>
          <target state="translated">このドキュメントは、IDが &lt;code&gt;c1&lt;/code&gt; と &lt;code&gt;c2&lt;/code&gt; の 2つの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;canvas&lt;/code&gt; &lt;/a&gt;要素を確立します。Canvas &lt;code&gt;c1&lt;/code&gt; は元のビデオの現在のフレームを表示するために使用され、 &lt;code&gt;c2&lt;/code&gt; はクロマキーイング効果の実行後にビデオを表示するために使用されます。 &lt;code&gt;c2&lt;/code&gt; には、ビデオの緑の背景を置き換えるために使用される静止画像がプリロードされています。</target>
        </trans-unit>
        <trans-unit id="f580fc49798a533ed9b57d0639574bdbf68ea6ad" translate="yes" xml:space="preserve">
          <source>This document is an &lt;em&gt;overview&lt;/em&gt; of HTML drag and drop. It includes a description of the interfaces, the basic steps to add drag and drop support to an application and a summary of the interoperability of the interfaces.</source>
          <target state="translated">このドキュメントは、HTMLドラッグアンドドロップの&lt;em&gt;概要&lt;/em&gt;です。インターフェースの説明、アプリケーションにドラッグアンドドロップサポートを追加するための基本的な手順、インターフェースの相互運用性の概要が含まれています。</target>
        </trans-unit>
        <trans-unit id="e7a26e1b0c8122e286e9cccf30dd2a6442efec2b" translate="yes" xml:space="preserve">
          <source>This document provides an overview of the &lt;code&gt;Resource Timing&lt;/code&gt; interfaces. For more details about the interfaces including examples see each interface's reference page, &lt;a href=&quot;resource_timing_api/using_the_resource_timing_api&quot;&gt;Using the Resource Timing API&lt;/a&gt;, and the references in the &lt;a href=&quot;#See_also&quot;&gt;See also&lt;/a&gt; section. For a graphical representation of the resource timing processing model see the &lt;a href=&quot;https://w3c.github.io/resource-timing/#process&quot;&gt;resource timing phases&lt;/a&gt; figure.</source>
          <target state="translated">このドキュメントでは、 &lt;code&gt;Resource Timing&lt;/code&gt; インターフェイスの概要について説明します。例を含むインターフェイスの詳細については、各インターフェイスのリファレンスページ、&lt;a href=&quot;resource_timing_api/using_the_resource_timing_api&quot;&gt;「リソースタイミングAPIの使用」&lt;/a&gt;、および「参照&lt;a href=&quot;#See_also&quot;&gt;」&lt;/a&gt;セクションのリファレンスを参照してください。リソースタイミング処理モデルのグラフィック表現については、&lt;a href=&quot;https://w3c.github.io/resource-timing/#process&quot;&gt;リソースタイミングフェーズの&lt;/a&gt;図を参照してください。</target>
        </trans-unit>
        <trans-unit id="0f86a90882f9bd8603d6d86e8964fa995126713e" translate="yes" xml:space="preserve">
          <source>This document provides an overview of the &lt;code&gt;mark&lt;/code&gt; and &lt;code&gt;measure&lt;/code&gt;&lt;a href=&quot;performanceentry/entrytype&quot;&gt;&lt;code&gt;performance event types&lt;/code&gt;&lt;/a&gt; including the four &lt;code&gt;User Timing&lt;/code&gt; methods that extend the &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface. For more details and example code regarding these two performance event types and the methods, see &lt;a href=&quot;https://developer.mozilla.org/Web/API/User_Timing_API/Using_the_User_Timing_API&quot;&gt;Using the User Timing API&lt;/a&gt;.</source>
          <target state="translated">このドキュメントでは、&lt;a href=&quot;performance&quot;&gt; &lt;code&gt;Performance&lt;/code&gt; &lt;/a&gt;インターフェイスを拡張する4つの &lt;code&gt;User Timing&lt;/code&gt; メソッドを含む、 &lt;code&gt;mark&lt;/code&gt; アンド &lt;code&gt;measure&lt;/code&gt; &lt;a href=&quot;performanceentry/entrytype&quot;&gt; &lt;code&gt;performance event types&lt;/code&gt; &lt;/a&gt;概要を説明します。これら2つのパフォーマンスイベントタイプとメソッドに関する詳細とコード例については、「&lt;a href=&quot;https://developer.mozilla.org/Web/API/User_Timing_API/Using_the_User_Timing_API&quot;&gt;ユーザータイミングAPIの使用&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="ee434451644a37b34408bc88551208a87c90d0ea" translate="yes" xml:space="preserve">
          <source>This document provides an overview of the standard's interfaces. For more details about the interfaces, see the reference pages and &lt;a href=&quot;https://developer.mozilla.org/Web/API/Performance_Timeline/Using_Performance_Timeline&quot;&gt;Using Performance Timeline&lt;/a&gt;.</source>
          <target state="translated">このドキュメントは、標準のインターフェースの概要を提供します。インターフェイスの詳細については、リファレンスページおよび「&lt;a href=&quot;https://developer.mozilla.org/Web/API/Performance_Timeline/Using_Performance_Timeline&quot;&gt;パフォーマンスタイムラインの使用」を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="bcfbb4537e285c78bb4aaa8db801f9fb9bd4bd5d" translate="yes" xml:space="preserve">
          <source>This document provides samples for every interface that you can use in your own web development. In some cases, the samples are complete HTML pages, with the DOM access in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element, the interface (e.g, buttons) necessary to fire up the script in a form, and the HTML elements upon which the DOM operates listed as well. When this is the case, you can cut and paste the example into a new HTML document, save it, and run the example from the browser.</source>
          <target state="translated">このドキュメントでは、独自のWeb開発で使用できるすべてのインターフェースのサンプルを提供します。場合によっては、サンプルは完全なHTMLページであり、 &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 要素でのDOMアクセス、フォームでスクリプトを起動するために必要なインターフェイス（ボタンなど）、およびDOMが動作するHTML要素が次のようにリストされます。上手。この場合は、例を切り取って新しいHTMLドキュメントに貼り付け、保存して、ブラウザーから例を実行できます。</target>
        </trans-unit>
        <trans-unit id="0ca3f97a11a94048c70bb0948922ff28a741377a" translate="yes" xml:space="preserve">
          <source>This document shows the use of Resource Timing interfaces. For more details about the interfaces, including examples, see each interface's reference page and the references in the &lt;a href=&quot;#See_also&quot;&gt;See also&lt;/a&gt; section.</source>
          <target state="translated">このドキュメントでは、リソースタイミングインターフェイスの使用方法を示します。例を含むインターフェイスの詳細については、各インターフェイスのリファレンスページと「参照&lt;a href=&quot;#See_also&quot;&gt;」&lt;/a&gt;セクションのリファレンスを参照してください。</target>
        </trans-unit>
        <trans-unit id="baf4ca27e7b527f76d2649a92d525f3bb6c9a3a6" translate="yes" xml:space="preserve">
          <source>This doesn't directly relate to the WebSocket protocol, but it's worth mentioning here: your server will have to keep track of clients' sockets so you don't keep handshaking again with clients who have already completed the handshake. The same client IP address can try to connect multiple times (but the server can deny them if they attempt too many connections in order to save itself from &lt;a href=&quot;https://en.wikipedia.org/wiki/Denial_of_service&quot;&gt;Denial-of-Service attacks&lt;/a&gt;).</source>
          <target state="translated">これはWebSocketプロトコルとは直接関係ありませんが、ここで言及する価値があります。サーバーはクライアントのソケットを追跡する必要があるため、既にハンドシェイクを完了したクライアントと再度ハンドシェイクを続ける必要はありません。同じクライアントIPアドレスが複数回接続を試行する可能性があります（ただし、サーバーが&lt;a href=&quot;https://en.wikipedia.org/wiki/Denial_of_service&quot;&gt;サービス拒否攻撃&lt;/a&gt;から身を守るために接続を試行しすぎると、サーバーが拒否する可能性があります）。</target>
        </trans-unit>
        <trans-unit id="508cb2a19e688c879fd5a48b0ea0dd802f622d0e" translate="yes" xml:space="preserve">
          <source>This element behaves in one of two modes: &lt;em&gt;default&lt;/em&gt; mode and &lt;em&gt;value&lt;/em&gt; mode.</source>
          <target state="translated">この要素は、&lt;em&gt;デフォルト&lt;/em&gt;モードと&lt;em&gt;値&lt;/em&gt;モードの2つのモードのいずれかで動作します。</target>
        </trans-unit>
        <trans-unit id="12c4fcd8de68f8c78dab871c527827e765eabe60" translate="yes" xml:space="preserve">
          <source>This eliminates the need to check for comments or iterate through lines yourself; however, it is limited to only the first URL in the list.</source>
          <target state="translated">これにより、自分でコメントをチェックしたり、行を繰り返したりする必要がなくなりますが、リストの最初のURLのみに限定されます。</target>
        </trans-unit>
        <trans-unit id="75bb5d12d14856074603e5cd5318110bef19757f" translate="yes" xml:space="preserve">
          <source>This enum defines strings that describe the current state of the session description, as used in the &lt;a href=&quot;rtcsessiondescription/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; property. The session description's type will be specified using one of these values.</source>
          <target state="translated">この列挙&lt;a href=&quot;rtcsessiondescription/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;は、typeプロパティで使用される、セッションの説明の現在の状態を説明する文字列を定義します。セッション記述のタイプは、これらの値のいずれかを使用して指定されます。</target>
        </trans-unit>
        <trans-unit id="de8fd86224adbc057fea1aad045720e87f7a3a29" translate="yes" xml:space="preserve">
          <source>This enum defines strings that describe the current state of the session description, as used in the &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; property. The session description's type will be specified using one of these values.</source>
          <target state="translated">この列挙&lt;a href=&quot;type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;は、typeプロパティで使用される、セッションの説明の現在の状態を説明する文字列を定義します。セッション記述のタイプは、これらの値のいずれかを使用して指定されます。</target>
        </trans-unit>
        <trans-unit id="dd70419109078f128706b57536b6baf3ba51ae00" translate="yes" xml:space="preserve">
          <source>This establishes our file &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element as well as a link that invokes the file picker (since we keep the file input hidden to prevent that less-than-attractive user interface from being displayed). This is explained in the section &lt;a href=&quot;#Using_hidden_file_input_elements_using_the_click()_method&quot;&gt;Using hidden file input elements using the click() method&lt;/a&gt;, as is the method that invokes the file picker.</source>
          <target state="translated">これにより、ファイルの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素と、ファイルピッカーを呼び出すリンクが確立されます（あまり魅力的ではないユーザーインターフェイスが表示されないようにファイル入力を非表示にしているため）。これについては、ファイルピッカーを呼び出す&lt;a href=&quot;#Using_hidden_file_input_elements_using_the_click()_method&quot;&gt;メソッド&lt;/a&gt;と同様に、「click（）メソッドを使用して隠しファイル入力要素を使用する」で説明しています。</target>
        </trans-unit>
        <trans-unit id="38be177877f07a312ef7b138ee257c0092ee9b0e" translate="yes" xml:space="preserve">
          <source>This evaluates to: [Infinity, Infinity, Infinity]</source>
          <target state="translated">これが評価されています。無限大、無限大、無限大】に評価されます。</target>
        </trans-unit>
        <trans-unit id="933e872b05b227aa2ce788a7bec5ddb07c51069f" translate="yes" xml:space="preserve">
          <source>This event bubbles. If supported on the window, it is supported on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; elements as well.</source>
          <target state="translated">このイベントは泡立ちます。ウィンドウでサポートされている場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素でもサポートされています。</target>
        </trans-unit>
        <trans-unit id="329d103e30025bc58a4a5c6e3d516b56b6d387f9" translate="yes" xml:space="preserve">
          <source>This event can be captured at the &lt;code&gt;window&lt;/code&gt; object level by using the &lt;a href=&quot;eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener&lt;/code&gt;&lt;/a&gt; method (using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; event name) or by attaching an event handler to the &lt;a href=&quot;window/ondevicelight&quot;&gt;&lt;code&gt;window.ondevicelight&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">このイベントは、&lt;a href=&quot;eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener&lt;/code&gt; &lt;/a&gt;メソッド（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; イベント名を使用）を使用するか、イベントハンドラーを&lt;a href=&quot;window/ondevicelight&quot;&gt; &lt;code&gt;window.ondevicelight&lt;/code&gt; &lt;/a&gt;プロパティにアタッチすることにより、 &lt;code&gt;window&lt;/code&gt; オブジェクトレベルでキャプチャできます。</target>
        </trans-unit>
        <trans-unit id="b56710b0ad1aab6341070c09afcd3d736628b701" translate="yes" xml:space="preserve">
          <source>This event can be captured at the &lt;code&gt;window&lt;/code&gt; object level by using the &lt;a href=&quot;eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener&lt;/code&gt;&lt;/a&gt; method (using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/userproximity&quot;&gt;userproximity&lt;/a&gt;&lt;/code&gt; event name) or by attaching an event handler to the &lt;a href=&quot;window/ondeviceproximity&quot;&gt;&lt;code&gt;window.ondeviceproximity&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;window/onuserproximity&quot;&gt;&lt;code&gt;window.onuserproximity&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">このイベントは、&lt;a href=&quot;eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener&lt;/code&gt; &lt;/a&gt;メソッド（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/userproximity&quot;&gt;userproximity&lt;/a&gt;&lt;/code&gt; イベント名を使用）を使用するか、イベントハンドラーを&lt;a href=&quot;window/ondeviceproximity&quot;&gt; &lt;code&gt;window.ondeviceproximity&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;window/onuserproximity&quot;&gt; &lt;code&gt;window.onuserproximity&lt;/code&gt; &lt;/a&gt;プロパティにアタッチすることにより、 &lt;code&gt;window&lt;/code&gt; オブジェクトレベルでキャプチャできます。</target>
        </trans-unit>
        <trans-unit id="ac61f6a638aac33781f379ceeccbcbae503936ed" translate="yes" xml:space="preserve">
          <source>This event handler can be set to function which is passed a single input parameter: an &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; object describing the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; event which occurred. Your code can look at the value of &lt;a href=&quot;iceconnectionstate&quot;&gt;&lt;code&gt;RTCPeerConnection.iceConnectionState&lt;/code&gt;&lt;/a&gt; to determine what the new state is.</source>
          <target state="translated">このイベントハンドラーは、単一の入力パラメーター（発生した &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; イベントを説明する&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;オブジェクト）が渡される関数に設定できます。コードは&lt;a href=&quot;iceconnectionstate&quot;&gt; &lt;code&gt;RTCPeerConnection.iceConnectionState&lt;/code&gt; &lt;/a&gt;の値を調べて、新しい状態を判別できます。</target>
        </trans-unit>
        <trans-unit id="9910ded83a3cf95934b48e95b4f715725d7ce47c" translate="yes" xml:space="preserve">
          <source>This event handler is called when an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/offline&quot;&gt;offline&lt;/a&gt;&lt;/code&gt; is fired on body and bubbles up, when &lt;a href=&quot;../navigatoronline/online&quot;&gt;navigator.onLine&lt;/a&gt; property changes and becomes &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">このイベントハンドラーは、&lt;a href=&quot;../navigatoronline/online&quot;&gt;navigator.onLine&lt;/a&gt;プロパティが変更されて &lt;code&gt;false&lt;/code&gt; になったときに、本体で &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/offline&quot;&gt;offline&lt;/a&gt;&lt;/code&gt; が発生してバブルアップしたときに呼び出されます。</target>
        </trans-unit>
        <trans-unit id="3ddfe72f01c2a18e9c54c79c4f9b14fccdb1b49c" translate="yes" xml:space="preserve">
          <source>This event is also sent if the values of the radius, rotation angle, or force attributes of a touch point change.</source>
          <target state="translated">このイベントは、タッチポイントの半径、回転角、力属性の値が変化した場合にも送信されます。</target>
        </trans-unit>
        <trans-unit id="4542c4021857c9f1107529f02e1863d460581fd6" translate="yes" xml:space="preserve">
          <source>This event is fired after pointer capture is released for a pointer.</source>
          <target state="translated">このイベントは、ポインタのキャプチャがポインタに対して解放された後に発生します。</target>
        </trans-unit>
        <trans-unit id="5da69c50819bfbaefa88c0eeac84edb5bc3c1078" translate="yes" xml:space="preserve">
          <source>This event is fired continuously when an element or text selection is being dragged and the mouse pointer is over a valid drop target (every 50 ms WHEN mouse is not moving ELSE much faster between 5 ms (slow movement) and 1ms (fast movement) approximately. This firing pattern is different than &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseover&quot;&gt;mouseover&lt;/a&gt;&lt;/code&gt; ).</source>
          <target state="translated">このイベントは、要素またはテキストの選択がドラッグされ、マウスポインターが有効なドロップターゲット上にあるときに継続的に発生します（マウスが5ミリ秒（遅い動き）と1ミリ秒（速い動き）の間ではるかに速く移動していない場合、50ミリ秒ごとにこの発砲パターンは &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mouseover&quot;&gt;mouseover&lt;/a&gt;&lt;/code&gt; とは異なります）。</target>
        </trans-unit>
        <trans-unit id="9d406794681205aeb7145c0100919917878e4e11" translate="yes" xml:space="preserve">
          <source>This event is fired for several reasons including: pointing device is moved out of the hit test boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer.</source>
          <target state="translated">このイベントは、ポインティングデバイスが要素のヒットテスト境界から外れたとき、ホバーをサポートしていないデバイスに対して pointerup イベントを発射したとき(pointerup を参照)、 pointercancel イベントを発射した後(pointercancel を参照)、ペンスタイラスがデジタイザで検出可能なホバー範囲から外れたときなど、いくつかの理由で発生します。</target>
        </trans-unit>
        <trans-unit id="e8e9031c3823a765ce0f32eb23377876e9aff715" translate="yes" xml:space="preserve">
          <source>This event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key).</source>
          <target state="translated">このイベントは、ドラッグ操作が終了したとき(マウスボタンを離すか、エスケープキーを押す)に発生します。</target>
        </trans-unit>
        <trans-unit id="52194dde96c01347babf030af0803632a2e9008d" translate="yes" xml:space="preserve">
          <source>This event is fired when a dragged element or text selection enters a valid drop target.</source>
          <target state="translated">このイベントは、ドラッグした要素やテキスト選択範囲が有効なドロップターゲットに入ったときに発生します。</target>
        </trans-unit>
        <trans-unit id="c2d36af1ee8d8f299b1eca60fae522243fb06d4a" translate="yes" xml:space="preserve">
          <source>This event is fired when a dragged element or text selection leaves a valid drop target.</source>
          <target state="translated">このイベントは、ドラッグした要素やテキスト選択範囲が有効なドロップターゲットから離れたときに発生します。</target>
        </trans-unit>
        <trans-unit id="75e3feecf0c204785485c35470e78edf84b79ed5" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointer changes coordinates.</source>
          <target state="translated">このイベントは、ポインタが座標を変更したときに発生します。</target>
        </trans-unit>
        <trans-unit id="4c2fba9a58dd86da82f3ce015d3fdb7bd4a00e7a" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointer is no longer &lt;em&gt;active&lt;/em&gt;.</source>
          <target state="translated">このイベントは、ポインタが&lt;em&gt;アクティブで&lt;/em&gt;なくなったときに発生します。</target>
        </trans-unit>
        <trans-unit id="68b692521ba440f8d3b73cfb3f4beea98f4dce86" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointing device is moved into an element's hit test boundaries.</source>
          <target state="translated">このイベントは、ポインティングデバイスが要素のヒットテスト境界に移動したときに発生します。</target>
        </trans-unit>
        <trans-unit id="79fb1af6710bc24e17015b14d94e33d31e1a9219" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown). This event type is similar to pointerover, but differs in that it does not bubble.</source>
          <target state="translated">このイベントは、ポインティングデバイスが、ホバーをサポートしていないデバイスからの pointerdown イベントの結果を含めて、要素またはその子孫の一つのヒットテスト境界内に移動したときに発生します(pointerdown を参照)。このイベントタイプは pointerover に似ていますが、バブルが発生しない点で異なります。</target>
        </trans-unit>
        <trans-unit id="cf30d80bcee3559524ec10b7c9706774fdfe4341" translate="yes" xml:space="preserve">
          <source>This event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer.</source>
          <target state="translated">このイベントは、ポインティングデバイスが要素のヒットテスト境界線の外に移動したときに発生します。ペンデバイスの場合、スタイラスがデジタイザで検出可能なホバリング範囲から外れたときに発生します。</target>
        </trans-unit>
        <trans-unit id="f767f2eaf1b4458caf61cded926fd5dc038b3aa8" translate="yes" xml:space="preserve">
          <source>This event is fired when an element is no longer the drag operation's immediate selection target.</source>
          <target state="translated">このイベントは、要素がドラッグ操作の即時選択対象ではなくなったときに発生します。</target>
        </trans-unit>
        <trans-unit id="fe9d5561daebfdf136cc25dbc0f0938fe9ae7473" translate="yes" xml:space="preserve">
          <source>This event is fired when an element or text selection is being dragged.</source>
          <target state="translated">このイベントは、要素やテキストの選択範囲がドラッグされているときに発生します。</target>
        </trans-unit>
        <trans-unit id="a0f90f62ce60b6768e210110a6b385d7bc3b89ba" translate="yes" xml:space="preserve">
          <source>This event is fired when an element or text selection is dropped on a valid drop target.</source>
          <target state="translated">このイベントは、要素やテキストの選択範囲が有効なドロップターゲットにドロップされたときに発生します。</target>
        </trans-unit>
        <trans-unit id="8e3cb7c755f279dcce823751e32715f837abc6d7" translate="yes" xml:space="preserve">
          <source>This event is fired when an element receives pointer capture.</source>
          <target state="translated">このイベントは、要素がポインタキャプチャを受信したときに発生します。</target>
        </trans-unit>
        <trans-unit id="8f8dc9f72b075b0a1ee02b937c339634534f2cd5" translate="yes" xml:space="preserve">
          <source>This event is fired when the user starts dragging an element or text selection.</source>
          <target state="translated">このイベントは、ユーザーが要素やテキスト選択範囲をドラッグし始めたときに発生します。</target>
        </trans-unit>
        <trans-unit id="8e92f02232ae3e1e894e02662896ceef2f90e051" translate="yes" xml:space="preserve">
          <source>This event is not be fired by all payment handlers. In particular, it's used by Apple Pay.</source>
          <target state="translated">このイベントはすべての決済ハンドラでは発生しません。特にApple Payで使用されています。</target>
        </trans-unit>
        <trans-unit id="7fd0aeb92cafc8f7bd5391cd8eafe8d3e7a3d25f" translate="yes" xml:space="preserve">
          <source>This event is sent by the WebRTC layer to the web site or application, so you will not typically need to instantiate an &lt;code&gt;RTCTrackEvent&lt;/code&gt; yourself.</source>
          <target state="translated">このイベントはWebRTCレイヤーによってWebサイトまたはアプリケーションに送信されるため、通常は自分で &lt;code&gt;RTCTrackEvent&lt;/code&gt; をインスタンス化する必要はありません。</target>
        </trans-unit>
        <trans-unit id="40811ae1653cb86688723ae0b635e8a7bad068d9" translate="yes" xml:space="preserve">
          <source>This event may not be fired by all payment handlers.</source>
          <target state="translated">このイベントは、すべての支払いハンドラによって発生するわけではありません。</target>
        </trans-unit>
        <trans-unit id="7fd00432a6818f1857e568940b5db2b12a40e6ef" translate="yes" xml:space="preserve">
          <source>This eventually became a problem. Over time, various applications (including those implementing WebRTC) began to use SCTP to transmit larger and larger messages. Eventually it was realized that when the messages become too large, it's possible for the transmission of a large message to block all other data transfers on that data channel&amp;mdash;including critical signaling messages.</source>
          <target state="translated">これは最終的に問題になりました。時間の経過とともに、さまざまなアプリケーション（WebRTCを実装するアプリケーションを含む）がSCTPを使用してますます大きなメッセージを送信し始めました。最終的に、メッセージが大きくなりすぎると、重要なシグナリングメッセージを含む、大きなメッセージの送信がそのデータチャネル上の他のすべてのデータ転送をブロックする可能性があることがわかりました。</target>
        </trans-unit>
        <trans-unit id="7df937a4f6ad8f3d0b5dc4127f537650f3fcbbd9" translate="yes" xml:space="preserve">
          <source>This example activates a commentary track on a video by ducking the audio level of the main audio track to 50%, then enabling the commentary track.</source>
          <target state="translated">この例では、メインオーディオトラックのオーディオレベルを 50% にダッキングし、コメンタリートラックを有効にします。</target>
        </trans-unit>
        <trans-unit id="22fd2027578d7c2b14b2dd33b6cd60e980c59890" translate="yes" xml:space="preserve">
          <source>This example adds a listener which, when a new track is added to the stream, appends a new item to a list of tracks; the new item shows the track's &lt;code&gt;kind&lt;/code&gt; (&lt;code&gt;&quot;audio&quot;&lt;/code&gt; or &lt;code&gt;&quot;video&quot;&lt;/code&gt;) and &lt;code&gt;label&lt;/code&gt;.</source>
          <target state="translated">この例では、新しいトラックがストリームに追加されると、新しいアイテムをトラックのリストに追加するリスナーを追加します。新しいアイテムには、トラックの &lt;code&gt;kind&lt;/code&gt; （ &lt;code&gt;&quot;audio&quot;&lt;/code&gt; または &lt;code&gt;&quot;video&quot;&lt;/code&gt; ）と &lt;code&gt;label&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="cc78654bd5b287e18dbf91f30e080bb7e166cea5" translate="yes" xml:space="preserve">
          <source>This example adds a listener which, when a track is removed from the stream, logs the track that was removed.</source>
          <target state="translated">この例では、ストリームからトラックが削除されたときに、削除されたトラックをログに記録するリスナーを追加しています。</target>
        </trans-unit>
        <trans-unit id="1d8133f70173427cf9058ffe1fbe8866efc15e87" translate="yes" xml:space="preserve">
          <source>This example adds a new certificate to an active connection if it doesn't already have one in use.</source>
          <target state="translated">この例では、アクティブな接続に新しい証明書がまだ使用されていない場合に、新しい証明書を追加します。</target>
        </trans-unit>
        <trans-unit id="e5c0802eb11d8f44636acb8f6d6b8f315cad26b0" translate="yes" xml:space="preserve">
          <source>This example adds a new data channel to an existing &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;myPeerConnection&lt;/code&gt;. It then establishes an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; event handler which updates some user interface elements to prepare them for being used to send messages over the data channel.</source>
          <target state="translated">この例では、新しいデータチャネルを既存の&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; myPeerConnection&lt;/a&gt;に &lt;code&gt;myPeerConnection&lt;/code&gt; ます。次に、いくつかのユーザーインターフェイス要素を更新する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/open&quot;&gt;open&lt;/a&gt;&lt;/code&gt; イベントハンドラーを確立し、データチャネル経由でメッセージを送信するために使用できるように準備します。</target>
        </trans-unit>
        <trans-unit id="c9032c2768ba377717415b1841a940460c4681ac" translate="yes" xml:space="preserve">
          <source>This example adds a video track to a connection and sets up a listener on a close button which removes the track when the user clicks the button.</source>
          <target state="translated">この例では、接続にビデオトラックを追加し、ユーザーがボタンをクリックするとトラックが削除されるクローズボタンにリスナーをセットアップします。</target>
        </trans-unit>
        <trans-unit id="e90e2d254027e45803df3df2db020d74754521b4" translate="yes" xml:space="preserve">
          <source>This example adds two items to be dragged. The last argument specifies the index of the item to add. You should add them in order starting with 0 as you cannot add items at positions farther than the last item, however you can replace existing items by using indices you have already added. Using 0 as the index is equivalent to calling &lt;a href=&quot;../datatransfer/setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例では、ドラッグする2つのアイテムを追加します。最後の引数は、追加するアイテムのインデックスを指定します。最後のアイテムよりも遠い位置にアイテムを追加することはできませんが、既に追加したインデックスを使用して既存のアイテムを置き換えることはできるため、0から順に追加する必要があります。インデックスとして0を使用することは、&lt;a href=&quot;../datatransfer/setdata&quot;&gt; &lt;code&gt;setData()&lt;/code&gt; &lt;/a&gt;を呼び出すことと同じです。</target>
        </trans-unit>
        <trans-unit id="ee004a11ec9f23c230b7c06ff17181412a367927" translate="yes" xml:space="preserve">
          <source>This example animates a small model of our solar system.</source>
          <target state="translated">この例では、太陽系の小さなモデルをアニメーション化しています。</target>
        </trans-unit>
        <trans-unit id="fc53cdce9248037e5505246ecb5727af099e8180" translate="yes" xml:space="preserve">
          <source>This example applies a blue fill color to a rectangle.</source>
          <target state="translated">この例では、矩形に青の塗りつぶし色を適用しています。</target>
        </trans-unit>
        <trans-unit id="f04bb58b197479ade544f67dbb37b194c0367108" translate="yes" xml:space="preserve">
          <source>This example applies a blue stroke color to a rectangle.</source>
          <target state="translated">この例では、青色のストロークカラーを矩形に適用しています。</target>
        </trans-unit>
        <trans-unit id="d936ab4fd3185b026bec9f881fed45c76742e5c0" translate="yes" xml:space="preserve">
          <source>This example attempts to call &lt;code&gt;requestFullscreen()&lt;/code&gt; outside of an event handler. Since &lt;code&gt;requestFullscreen()&lt;/code&gt; can only be called in response to user action, for security reasons, this will fail, causing the &lt;code&gt;fullscreenerror&lt;/code&gt; to be sent to the document.</source>
          <target state="translated">この例では、イベントハンドラの外で &lt;code&gt;requestFullscreen()&lt;/code&gt; を呼び出そうとしています。以来 &lt;code&gt;requestFullscreen()&lt;/code&gt; のみ、セキュリティ上の理由から、これが原因、失敗し、ユーザーのアクションに応じて呼び出すことができ &lt;code&gt;fullscreenerror&lt;/code&gt; が文書に送信します。</target>
        </trans-unit>
        <trans-unit id="862a350730700aad5b423c593dae620209c94b3e" translate="yes" xml:space="preserve">
          <source>This example attempts to switch into full-screen mode from outside a handler for a user-initiated event (such as a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keypress&quot;&gt;keypress&lt;/a&gt;&lt;/code&gt; event). SInce full-screen mode changes are only permitted in response to a user input, this causes an error to occur, which triggers the delivery of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenerror&quot;&gt;fullscreenerror&lt;/a&gt;&lt;/code&gt; event to the error handler,</source>
          <target state="translated">この例では、ユーザーが開始したイベント（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントや &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keypress&quot;&gt;keypress&lt;/a&gt;&lt;/code&gt; イベントなど）のハンドラーの外側から全画面モードに切り替えようとします。全画面モードの変更はユーザー入力に応じてのみ許可されるため、これによりエラーが発生し、エラーハンドラーへの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenerror&quot;&gt;fullscreenerror&lt;/a&gt;&lt;/code&gt; エラーイベントの配信がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="83729187f5fbdafe2b29b6e5dccd163f5d7a6ae5" translate="yes" xml:space="preserve">
          <source>This example begins loading content from the MDN home page, then due to some condition, aborts the transfer by calling &lt;code&gt;abort()&lt;/code&gt;.</source>
          <target state="translated">この例では、MDNホームページからコンテンツのロードを開始し、何らかの条件により、 &lt;code&gt;abort()&lt;/code&gt; を呼び出して転送を中止します。</target>
        </trans-unit>
        <trans-unit id="bbe0af236902efc4eb8023be40e8d651910471c4" translate="yes" xml:space="preserve">
          <source>This example builds a &lt;code&gt;FormData&lt;/code&gt; instance containing values for fields named &quot;username&quot;, &quot;accountnum&quot;, &quot;userfile&quot; and &quot;webmasterfile&quot;, then uses the &lt;code&gt;XMLHttpRequest&lt;/code&gt; method &lt;a href=&quot;../xmlhttprequest#send()&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; to send the form's data. The field &quot;webmasterfile&quot; is a &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Blob&lt;/code&gt; object represents a file-like object of immutable, raw data. Blobs represent data that isn't necessarily in a JavaScript-native format. The &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; interface is based on &lt;code&gt;Blob&lt;/code&gt;, inheriting blob functionality and expanding it to support files on the user's system. In order to build a &lt;code&gt;Blob&lt;/code&gt; you can invoke the &lt;a href=&quot;../blob/blob&quot;&gt;&lt;code&gt;Blob() constructor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例では、「username」、「accountnum」、「userfile」、「webmasterfile」という名前のフィールドの値を含む &lt;code&gt;FormData&lt;/code&gt; インスタンスを作成し、 &lt;code&gt;XMLHttpRequest&lt;/code&gt; メソッド&lt;a href=&quot;../xmlhttprequest#send()&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;を使用してフォームのデータを送信します。 「webmasterfile」フィールドは&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;です。 &lt;code&gt;Blob&lt;/code&gt; オブジェクトは、ファイルのような不変、生データのオブジェクトを表します。 Blobは、必ずしもJavaScriptネイティブ形式ではないデータを表します。&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;インターフェイスは基づいている &lt;code&gt;Blob&lt;/code&gt; ブロブの機能を継承し、ユーザーのシステム上のファイルをサポートするために、それを拡大し、。 &lt;code&gt;Blob&lt;/code&gt; を作成するには、&lt;a href=&quot;../blob/blob&quot;&gt; &lt;code&gt;Blob() constructor&lt;/code&gt; &lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="089e02134fca2cccd4c2538b43ebb52db0fd12bb" translate="yes" xml:space="preserve">
          <source>This example cancels both the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; events by calling the &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt;. method. This allows a drop to occur on that element.</source>
          <target state="translated">この例では、両方の取り消し &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントと &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントを呼び出すことにより、イベント&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;preventDefault()&lt;/code&gt; &lt;/a&gt;。方法。これにより、その要素でドロップが発生します。</target>
        </trans-unit>
        <trans-unit id="7ca5b572e3f656743ba108fe6aaab93f22134fda" translate="yes" xml:space="preserve">
          <source>This example causes the current document to toggle in and out of a full-screen presentation whenever the mouse button is clicked within it.</source>
          <target state="translated">この例では、現在のドキュメント内でマウスボタンがクリックされるたびに、現在のドキュメントがフルスクリーン表示の状態でトグルして表示されます。</target>
        </trans-unit>
        <trans-unit id="9ccb2c800909e422c7e2ff606f4ea18b07549a71" translate="yes" xml:space="preserve">
          <source>This example checks if the first node inside the document element is a comment node, and if it is not, displays a message.</source>
          <target state="translated">この例では、ドキュメント要素内の最初のノードがコメントノードであるかどうかをチェックし、そうでない場合はメッセージを表示します。</target>
        </trans-unit>
        <trans-unit id="2e73ccbbbcf7a6c3d97ddd68c429ea4a684efe56" translate="yes" xml:space="preserve">
          <source>This example checks the current horizontal scroll position of the document. If it's greater than 400 pixels, the window is scrolled back to the beginning.</source>
          <target state="translated">この例では、ドキュメントの現在の水平スクロール位置をチェックします。400 ピクセルより大きい場合は、ウィンドウが最初にスクロールされます。</target>
        </trans-unit>
        <trans-unit id="caa2fb9c52c5c5986dc70eec5b004682b3e58f46" translate="yes" xml:space="preserve">
          <source>This example checks the size of a log file and removes it if it's larger than a megabyte.</source>
          <target state="translated">この例では、ログファイルのサイズをチェックして、メガバイトより大きい場合は削除します。</target>
        </trans-unit>
        <trans-unit id="afce5c4b34d9a45aab04d604905852b6ca7fd2a8" translate="yes" xml:space="preserve">
          <source>This example checks the size of a log file in a temporary folder and, if it exceeds a megabyte, moves it into a different directory.</source>
          <target state="translated">この例では、一時フォルダ内のログファイルのサイズをチェックし、メガバイトを超えると別のディレクトリに移動します。</target>
        </trans-unit>
        <trans-unit id="1c80e65d6bb1a336bea7faa12e18a1f2e108fc9d" translate="yes" xml:space="preserve">
          <source>This example checks to see if the script is being executed asynchronously:</source>
          <target state="translated">この例では、スクリプトが非同期に実行されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="1a035c3447c5ff43616c1a2c3fadf7b791c06e27" translate="yes" xml:space="preserve">
          <source>This example could be simplified somewhat; you may more often see the code look something like this, taking advantage of more advanced ECMAScript 2016 features:</source>
          <target state="translated">この例は多少簡略化されているかもしれませんが、より高度な ECMAScript 2016 の機能を利用して、このようなコードを見ることが多くなるかもしれません。</target>
        </trans-unit>
        <trans-unit id="e53f84d2af1fb2abc165aebc095017cb104ca8be" translate="yes" xml:space="preserve">
          <source>This example counts the number of tracks in an array of &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; objects which are currently muted.</source>
          <target state="translated">この例では、現在ミュートされている&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;オブジェクトの配列内のトラック数をカウントします。</target>
        </trans-unit>
        <trans-unit id="3344a1d77cd2e65e164aeaff0e88b14bfdc210b5" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt; object representing the top-left corner of the current window, in screen coordinates, then converts that to JSON.</source>
          <target state="translated">この例では、現在のウィンドウの左上隅を画面座標で表す&lt;a href=&quot;../dompoint&quot;&gt; &lt;code&gt;DOMPoint&lt;/code&gt; &lt;/a&gt;オブジェクトを作成し、それをJSONに変換します。</target>
        </trans-unit>
        <trans-unit id="2492e4e831e6796917af19d67b6be2c3a29a302f" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element, establishes an error handler for it, then lets the user click buttons to choose whether to assign a valid audio file or a missing file to the element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; attribute. The error handler simply outputs a message to a box onscreen describing the error, including both the &lt;code&gt;code&lt;/code&gt; and the &lt;code&gt;message&lt;/code&gt;.</source>
          <target state="translated">この例では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成し、そのエラーハンドラーを確立してから、ボタンをクリックして、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; 属性に有効なオーディオファイルを割り当てるか、見つからないファイルを割り当てるかを選択できます。エラーハンドラは、 &lt;code&gt;code&lt;/code&gt; と &lt;code&gt;message&lt;/code&gt; 両方を含むエラーを説明するメッセージを画面上のボックスに出力するだけです。</target>
        </trans-unit>
        <trans-unit id="b5e1a8e7ac48b3777b6be8a115ac1c8b4fc04848" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, establishes an error handler for it, and then sets the element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; attribute to the video resource to present in the element. The error handler simply outputs a message</source>
          <target state="translated">この例では、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を作成し、その要素のエラーハンドラーを確立してから、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-src&quot;&gt;src&lt;/a&gt;&lt;/code&gt; 属性を要素に表示するビデオリソースに設定します。エラーハンドラは単にメッセージを出力します</target>
        </trans-unit>
        <trans-unit id="c551b19b4597e098976ceaa7ed656c8ed8236d2b" translate="yes" xml:space="preserve">
          <source>This example creates a &lt;code&gt;DOMPoint&lt;/code&gt; representing the top-left corner of the current window, then creates a second point based on the first, which is then offset by 100 pixels both vertically and horizontally.</source>
          <target state="translated">この例では、現在のウィンドウの左上隅を表す &lt;code&gt;DOMPoint&lt;/code&gt; を作成し、最初のポイントに基づいて2番目のポイントを作成します。次に、垂直および水平の両方に100ピクセルずつオフセットします。</target>
        </trans-unit>
        <trans-unit id="14b7c8f489637ea2b2cd69312e5172d3cb6a5f6a" translate="yes" xml:space="preserve">
          <source>This example creates a list of major web browsers.</source>
          <target state="translated">この例では、主要なウェブブラウザのリストを作成します。</target>
        </trans-unit>
        <trans-unit id="94e01c519b4e2d08bad3a0cc70177e3ec840a6a8" translate="yes" xml:space="preserve">
          <source>This example creates a method called &lt;code&gt;readDirectory()&lt;/code&gt;, which fetches all of the entries in the specified &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDIrectoryEntry&quot;&gt;&lt;code&gt;FileSystemDIrectoryEntry&lt;/code&gt;&lt;/a&gt; and returns them in an array.</source>
          <target state="translated">この例では、指定された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDIrectoryEntry&quot;&gt; &lt;code&gt;FileSystemDIrectoryEntry&lt;/code&gt; &lt;/a&gt;内のすべてのエントリをフェッチして配列に返す &lt;code&gt;readDirectory()&lt;/code&gt; というメソッドを作成します。</target>
        </trans-unit>
        <trans-unit id="ee2bf929ec4af5a43a62bea1d0faaa4c214fde72" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; for interactive audio (optimizing for latency) and a sample rate of 44.1kHz.</source>
          <target state="translated">この例では、インタラクティブオーディオ用の新しい&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;（遅延を最適化する）と44.1kHzのサンプルレートを作成します。</target>
        </trans-unit>
        <trans-unit id="f121cd8f7915b8775d2640752bf5cdfbd3fd5e43" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; instance and starts recording using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent's&lt;/a&gt; default media format. It returns either the &lt;code&gt;MediaRecorder&lt;/code&gt; or the name of the error that occurred if any exceptions are thrown during the setup process.</source>
          <target state="translated">この例では、新しい&lt;a href=&quot;../mediarecorder&quot;&gt; &lt;code&gt;MediaRecorder&lt;/code&gt; &lt;/a&gt;インスタンスを作成し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザーエージェントの&lt;/a&gt;デフォルトのメディア形式を使用して記録を開始します。 &lt;code&gt;MediaRecorder&lt;/code&gt; またはセットアッププロセス中に例外がスローされた場合に発生したエラーの名前を返します。</target>
        </trans-unit>
        <trans-unit id="5892214e5945c1a0ad1410b31b0b9674bead3789" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which uses a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; server at &lt;code&gt;turnserver.example.org&lt;/code&gt; to negotiate connections. Logging into the TURN server uses the username &quot;webrtc&quot; and the creative password &quot;turnpassword&quot;.</source>
          <target state="translated">この例では、新しい作成&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;使用&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURNの&lt;/a&gt;でサーバーを &lt;code&gt;turnserver.example.org&lt;/code&gt; 接続を交渉することを。TURNサーバーにログインするには、ユーザー名「webrtc」とクリエイティブパスワード「turnpassword」を使用します。</target>
        </trans-unit>
        <trans-unit id="2ec2a187553312d3865d02f984209fee18b1d0f2" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which will use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/STUN&quot;&gt;STUN&lt;/a&gt; server at &lt;code&gt;stunserver.example.org&lt;/code&gt; to negotiate connections.</source>
          <target state="translated">この例では、新しい作成&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;使用する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/STUN&quot;&gt;STUNの&lt;/a&gt;でサーバーを &lt;code&gt;stunserver.example.org&lt;/code&gt; 接続を交渉することを。</target>
        </trans-unit>
        <trans-unit id="f06fbbbb2ce4287b999fb54922f6141f65af498b" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which will use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; server at &lt;code&gt;turnserver.example.org&lt;/code&gt; to negotiate connections. Logging into the TURN server will use the username &quot;webrtc&quot; and the creative password &quot;turnpassword&quot;.</source>
          <target state="translated">この例では、新しい作成&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;使用する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURNの&lt;/a&gt;でサーバーを &lt;code&gt;turnserver.example.org&lt;/code&gt; 接続を交渉することを。TURNサーバーにログインすると、ユーザー名「webrtc」とクリエイティブパスワード「turnpassword」が使用されます。</target>
        </trans-unit>
        <trans-unit id="d238cd72be6b873d183342587d19b0cae2946793" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unhandledrejection&quot;&gt;unhandledrejection&lt;/a&gt;&lt;/code&gt; event for the promise &lt;code&gt;myPromise&lt;/code&gt; with the reason being the string &quot;My house is on fire&quot;. The &lt;code&gt;reason&lt;/code&gt; could just as easily be a number, or even an object with detailed information including the home address, how serious the fire is, and the phone number of an emergency contact who should be notified.</source>
          <target state="translated">この例では、新しい作成 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unhandledrejection&quot;&gt;unhandledrejection&lt;/a&gt;&lt;/code&gt; の約束のためのイベント &lt;code&gt;myPromise&lt;/code&gt; 文字列「私の家は燃えている」という理由でを。 &lt;code&gt;reason&lt;/code&gt; 同じように簡単に数、または自宅住所などの詳細情報とさえオブジェクト、どのように深刻な火災があり、かつ通知されるべき緊急連絡先の電話番号である可能性があります。</target>
        </trans-unit>
        <trans-unit id="2fee46bd9985e11874232f209749cc64d371f57f" translate="yes" xml:space="preserve">
          <source>This example creates a new &lt;code&gt;DOMPoint&lt;/code&gt; representing the top-left corner of the current window, with a &lt;em&gt;z&lt;/em&gt; component added to move the point closer to the user. This same code will work to create a &lt;code&gt;DOMPointReadOnly&lt;/code&gt; object; just change the interface name in the code.</source>
          <target state="translated">この例では、現在のウィンドウの左上隅を表す新しい &lt;code&gt;DOMPoint&lt;/code&gt; を作成し、ポイントをユーザーに近づけるために&lt;em&gt;z&lt;/em&gt;コンポーネントを追加しています。これと同じコードで &lt;code&gt;DOMPointReadOnly&lt;/code&gt; オブジェクトを作成できます。コードのインターフェイス名を変更するだけです。</target>
        </trans-unit>
        <trans-unit id="eacd87e16a860256ef9a97cd1b28c79eaefc3a73" translate="yes" xml:space="preserve">
          <source>This example creates a new HTML document and inserts it into an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt; in the current document.</source>
          <target state="translated">この例では、新しいHTMLドキュメントを作成し、それを現在のドキュメントの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; &lt;/a&gt;に挿入します。</target>
        </trans-unit>
        <trans-unit id="1a27dc53a8115907a825128c91c65db89cb1f1d6" translate="yes" xml:space="preserve">
          <source>This example creates a new audio buffer, then copies the samples from another channel into it.</source>
          <target state="translated">この例では、新しいオーディオバッファを作成し、別のチャンネルのサンプルをコピーします。</target>
        </trans-unit>
        <trans-unit id="f6110037ae735e89cc4db25896962994038cf5ca" translate="yes" xml:space="preserve">
          <source>This example creates a periodic function using &lt;a href=&quot;../windoworworkerglobalscope/setinterval&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt; that collects statistics for an &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; every second, generating an HTML-formatted report and inserting it into a specific element in the DOM.</source>
          <target state="translated">この例では、&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; の&lt;/a&gt;統計を毎秒収集する&lt;a href=&quot;../windoworworkerglobalscope/setinterval&quot;&gt; &lt;code&gt;setInterval()&lt;/code&gt; &lt;/a&gt;を使用して定期的な関数を作成し、HTML形式のレポートを生成して、それをDOMの特定の要素に挿入します。</target>
        </trans-unit>
        <trans-unit id="5bde58494d0fed00eff9a339745f0d3794f52c6d" translate="yes" xml:space="preserve">
          <source>This example creates a point, &lt;code&gt;origPoint&lt;/code&gt;, of type &lt;a href=&quot;../dompoint&quot;&gt;&lt;code&gt;DOMPoint&lt;/code&gt;&lt;/a&gt;, using &lt;a href=&quot;../dompoint/dompoint&quot;&gt;&lt;code&gt;new DOMPoint()&lt;/code&gt;&lt;/a&gt;. That point is then used as the input for &lt;code&gt;fromPoint()&lt;/code&gt; to create a new point, &lt;code&gt;newPoint&lt;/code&gt;.</source>
          <target state="translated">この例では、&lt;a href=&quot;../dompoint/dompoint&quot;&gt; &lt;code&gt;new DOMPoint()&lt;/code&gt; &lt;/a&gt;を使用して、タイプ&lt;a href=&quot;../dompoint&quot;&gt; &lt;code&gt;DOMPoint&lt;/code&gt; の&lt;/a&gt;ポイント &lt;code&gt;origPoint&lt;/code&gt; を作成します。次に、そのポイントを &lt;code&gt;fromPoint()&lt;/code&gt; の入力として使用して、新しいポイント &lt;code&gt;newPoint&lt;/code&gt; を作成します。</target>
        </trans-unit>
        <trans-unit id="a96e0142535559ce3d38564b6c90086bef6a5859" translate="yes" xml:space="preserve">
          <source>This example creates a rectangle using the &lt;code&gt;rect()&lt;/code&gt; method, and then draws it to the canvas using &lt;code&gt;stroke()&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;rect()&lt;/code&gt; メソッドを使用して長方形を作成し、それを &lt;code&gt;stroke()&lt;/code&gt; を使用してキャンバスに描画します。</target>
        </trans-unit>
        <trans-unit id="4d8f9bee60754210e091cc30c3cd0c50b2b5fc52" translate="yes" xml:space="preserve">
          <source>This example creates a rectangular path using the &lt;code&gt;rect()&lt;/code&gt; method. The path is then rendered using the &lt;code&gt;fill()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;rect()&lt;/code&gt; メソッドを使用して長方形のパスを作成します。次に、パスは &lt;code&gt;fill()&lt;/code&gt; メソッドを使用してレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="129f2770e71a6bdfca40fd1e2e3502835ccd1abb" translate="yes" xml:space="preserve">
          <source>This example creates a rounded corner using &lt;code&gt;arcTo()&lt;/code&gt;. This is one of the method's most common uses.</source>
          <target state="translated">この例では、 &lt;code&gt;arcTo()&lt;/code&gt; を使用して丸みのあるコーナーを作成します。これは、メソッドの最も一般的な用途の1つです。</target>
        </trans-unit>
        <trans-unit id="11b145b737e7f576ee3f3b70feea3b68bae7775e" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;ImageData&lt;/code&gt; object that is 100 pixels wide and 100 pixels tall, making 10,000 pixels in all. The &lt;code&gt;data&lt;/code&gt; array stores four values for each pixel, making 4 x 10,000, or 40,000 values in all.</source>
          <target state="translated">この例では、幅100ピクセル、高さ100ピクセルの &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成し、合計で10,000ピクセルにします。 &lt;code&gt;data&lt;/code&gt; アレイは、全部で4&amp;times;10,000または40,000の値を構成する各画素のための4つの値を格納します。</target>
        </trans-unit>
        <trans-unit id="76f789f52f1fc64ce53bfca92d99429e4412f1e8" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;ImageData&lt;/code&gt; object that is 200 pixels wide and 100 pixels tall, containing a total of 20,000 pixels.</source>
          <target state="translated">この例では、幅200ピクセル、高さ100ピクセルで、合計20,000ピクセルを含む &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="1603fef1b9a1db97cda6dbbdd14d4f8107918db2" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;ImageData&lt;/code&gt; object that is 200 pixels wide and 100 pixels tall. Thus, the &lt;code&gt;height&lt;/code&gt; property is &lt;code&gt;100&lt;/code&gt;.</source>
          <target state="translated">この例では、幅200ピクセル、高さ100ピクセルの &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成します。したがって、 &lt;code&gt;height&lt;/code&gt; プロパティは &lt;code&gt;100&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="b1f83c8771093a58694e87a02104268c25dbf3e2" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;ImageData&lt;/code&gt; object that is 200 pixels wide and 100 pixels tall. Thus, the &lt;code&gt;width&lt;/code&gt; property is &lt;code&gt;200&lt;/code&gt;.</source>
          <target state="translated">この例では、幅200ピクセル、高さ100ピクセルの &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成します。したがって、 &lt;code&gt;width&lt;/code&gt; プロパティは &lt;code&gt;200&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="7a7b3716610a5c5a4a0dc130e8de1bb85ff9cf30" translate="yes" xml:space="preserve">
          <source>This example creates an &lt;code&gt;unmute&lt;/code&gt; event handler which changes the state of a visual indicator to display the Emoji character representing a &quot;speaker&quot; icon.</source>
          <target state="translated">この例では、視覚的インジケーターの状態を変更して「スピーカー」アイコンを表す絵文字を表示する &lt;code&gt;unmute&lt;/code&gt; イベントハンドラーを作成します。</target>
        </trans-unit>
        <trans-unit id="0d66b55cf7772ec92626d6dc0ebba47603ee6345" translate="yes" xml:space="preserve">
          <source>This example creates an observer then, later, disconnects from it, leaving it available for possible reuse.</source>
          <target state="translated">この例では、オブザーバを作成した後、それを切り離し、再利用できるようにしています。</target>
        </trans-unit>
        <trans-unit id="7560776f23946e6fac638b4b9f69dbab3c0990ef" translate="yes" xml:space="preserve">
          <source>This example creates an oscillator, then links it to a gain node, so that the gain node controls the volume of the oscillator node.</source>
          <target state="translated">この例では、オシレータを作成し、それをゲインノードにリンクして、ゲインノードがオシレータノードの音量を制御するようにしています。</target>
        </trans-unit>
        <trans-unit id="935d7c415f11404b577077901ac9b5d03e8c5e4f" translate="yes" xml:space="preserve">
          <source>This example creates and configures two &lt;code&gt;PerformanceObservers&lt;/code&gt;; one watches for &lt;code&gt;&quot;mark&quot;&lt;/code&gt; and &lt;code&gt;&quot;frame&quot;&lt;/code&gt; events, and the other watches for &lt;code&gt;&quot;measure&quot;&lt;/code&gt; events.</source>
          <target state="translated">この例では、2つの &lt;code&gt;PerformanceObservers&lt;/code&gt; を作成して構成します。1つは &lt;code&gt;&quot;mark&quot;&lt;/code&gt; および &lt;code&gt;&quot;frame&quot;&lt;/code&gt; イベントを監視し、もう1つは &lt;code&gt;&quot;measure&quot;&lt;/code&gt; イベントを監視します。</target>
        </trans-unit>
        <trans-unit id="68712c65513217185496da3e815c63fd9968261f" translate="yes" xml:space="preserve">
          <source>This example creates and fills a new &lt;code&gt;ImageData&lt;/code&gt; object with colorful pixels.</source>
          <target state="translated">この例では、新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成し、カラフルなピクセルで塗りつぶします。</target>
        </trans-unit>
        <trans-unit id="5a724b71a87e53c63ddecfe2aad64749d691f32f" translate="yes" xml:space="preserve">
          <source>This example creates and fills a new &lt;code&gt;ImageData&lt;/code&gt; object with purple pixels.</source>
          <target state="translated">この例では、新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成し、紫色のピクセルで塗りつぶします。</target>
        </trans-unit>
        <trans-unit id="e73c73a3a16cfe942ba538ee931ce72bbdea2a32" translate="yes" xml:space="preserve">
          <source>This example creates the first two (diagonal) sides of a triangle using the &lt;code&gt;lineTo()&lt;/code&gt; method. After that, the triangle's base is created with the &lt;code&gt;closePath()&lt;/code&gt; method, which automatically connects the shape's first and last points.</source>
          <target state="translated">この例では、 &lt;code&gt;lineTo()&lt;/code&gt; メソッドを使用して、三角形の最初の2つの（対角）辺を作成します。その後、三角形のベースが &lt;code&gt;closePath()&lt;/code&gt; メソッドで作成されます。これは、シェイプの最初と最後のポイントを自動的に接続します。</target>
        </trans-unit>
        <trans-unit id="4e26e0a0262799b965326eb35eb0ad82acd0e9a3" translate="yes" xml:space="preserve">
          <source>This example creates three elliptical paths with vaying properties.</source>
          <target state="translated">この例では、ベイ特性を持つ3つの楕円形のパスを作成しています。</target>
        </trans-unit>
        <trans-unit id="8587a271f1d2a9d3042410bfd5c8515a1346fda1" translate="yes" xml:space="preserve">
          <source>This example creates two buttons which let you set the current color of the paragraph element located under the coordinates (2, 2).</source>
          <target state="translated">この例では、座標 (2,2)の下にある段落要素の現在の色を設定するための 2 つのボタンを作成しています。</target>
        </trans-unit>
        <trans-unit id="2b901257b83f94ab3a6ae3c87c7d8f6a98109551" translate="yes" xml:space="preserve">
          <source>This example creates two paths, each of which contains a single line.</source>
          <target state="translated">この例では、2 つのパスを作成し、それぞれに 1 行が含まれています。</target>
        </trans-unit>
        <trans-unit id="8028fe3a46de4d348e7260928626f1f880915566" translate="yes" xml:space="preserve">
          <source>This example defines a audio configuration then checks to see if the user agent supports decoding that media configuration, and whether it will perform well in terms of smoothness and power efficiency.</source>
          <target state="translated">この例では、オーディオ構成を定義し、ユーザーエージェントがそのメディア構成のデコードをサポートしているかどうかを確認し、スムーズさと電力効率の点でうまく機能するかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="eebf98d4da6c01d7b1d9c2c79b4c76e26c4f8cb3" translate="yes" xml:space="preserve">
          <source>This example deletes a temporary work file.</source>
          <target state="translated">この例では、一時的な作業ファイルを削除します。</target>
        </trans-unit>
        <trans-unit id="97e56816be4ce17b325dc481a49c8b5f66d7a352" translate="yes" xml:space="preserve">
          <source>This example demonstrates a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event handler for a pause button.</source>
          <target state="translated">この例は、一時停止ボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="318942d1fdedb7b34fe6879be39788097a9943d4" translate="yes" xml:space="preserve">
          <source>This example demonstrates a simple event listener implemented using arrow function notation.</source>
          <target state="translated">この例では、矢印関数記法を使用して実装されたシンプルなイベント・リスナーを示します。</target>
        </trans-unit>
        <trans-unit id="25fde44f7a181d6c34d80c26abda65b98d3cbb9d" translate="yes" xml:space="preserve">
          <source>This example demonstrates how different &lt;a href=&quot;rollofffactor&quot;&gt;&lt;code&gt;rolloffFactor&lt;/code&gt;&lt;/a&gt; values affect how the volume of the test tone decreases with increasing distance from the listener:</source>
          <target state="translated">この例は、さまざまな&lt;a href=&quot;rollofffactor&quot;&gt; &lt;code&gt;rolloffFactor&lt;/code&gt; &lt;/a&gt;値が、リスナーからの距離の増加に伴ってテストトーンの音量がどのように減少するかにどのように影響するかを示しています。</target>
        </trans-unit>
        <trans-unit id="e0db1d52cccc2674275f08564e1536e6e20e350c" translate="yes" xml:space="preserve">
          <source>This example demonstrates how different values of &lt;a href=&quot;refdistance&quot;&gt;&lt;code&gt;refDistance&lt;/code&gt;&lt;/a&gt; affect how the volume of a sound decays as it moves away from the listener. Unlike &lt;a href=&quot;rollofffactor&quot;&gt;&lt;code&gt;rolloffFactor&lt;/code&gt;&lt;/a&gt;, changing this value also &lt;em&gt;delays&lt;/em&gt; the volume decay until the sound moves past the reference point.</source>
          <target state="translated">この例では、&lt;a href=&quot;refdistance&quot;&gt; &lt;code&gt;refDistance&lt;/code&gt; の&lt;/a&gt;さまざまな値が、リスナーから離れるにつれてサウンドのボリュームがどのように減衰するかに影響を与えます。&lt;a href=&quot;rollofffactor&quot;&gt; &lt;code&gt;rolloffFactor&lt;/code&gt; &lt;/a&gt;とは異なり、この値を変更すると、サウンドが参照ポイントを通過するまでボリュームの減衰が&lt;em&gt;遅延&lt;/em&gt;します。</target>
        </trans-unit>
        <trans-unit id="831b0f00ff6983bbff81cd37bc1747994a925be1" translate="yes" xml:space="preserve">
          <source>This example demonstrates how events fire and are handled in the DOM in a very simple way. When the BODY of this HTML document loads, an event listener is registered with the top row of the TABLE. The event listener handles the event by executing the function stopEvent, which changes the value in the bottom cell of the table.</source>
          <target state="translated">この例では、イベントがどのように発生し、DOM で処理されるかを非常にシンプルな方法で示しています。この HTML ドキュメントの BODY がロードされると、TABLE の一番上の行にイベントリスナーが登録されます。イベントリスナーは、関数 stopEvent を実行することでイベントを処理し、テーブルの一番下のセルの値を変更します。</target>
        </trans-unit>
        <trans-unit id="d68399cba8f63bb176c2551051885d557979d0ac" translate="yes" xml:space="preserve">
          <source>This example demonstrates how the &lt;a href=&quot;../window/getcomputedstyle&quot;&gt;&lt;code&gt;window.getComputedStyle&lt;/code&gt;&lt;/a&gt; method can be used to get the styles of an element that are not set using the &lt;code&gt;style&lt;/code&gt; attribute or with JavaScript (e.g., &lt;code&gt;elt.style.backgroundColor=&quot;rgb(173, 216, 230)&quot;&lt;/code&gt;). These latter types of styles can be retrieved with the more direct &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/style&quot;&gt;&lt;code&gt;elt.style&lt;/code&gt;&lt;/a&gt; property, whose properties are listed in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Reference&quot;&gt;DOM CSS Properties List&lt;/a&gt;.</source>
          <target state="translated">この例は、&lt;a href=&quot;../window/getcomputedstyle&quot;&gt; &lt;code&gt;window.getComputedStyle&lt;/code&gt; &lt;/a&gt;メソッドを使用して、 &lt;code&gt;style&lt;/code&gt; 属性またはJavaScriptで設定されていない要素のスタイルを取得する方法を示しています（例： &lt;code&gt;elt.style.backgroundColor=&quot;rgb(173, 216, 230)&quot;&lt;/code&gt; ） 。これらの後者のタイプのスタイルは、より直接的な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/style&quot;&gt; &lt;code&gt;elt.style&lt;/code&gt; &lt;/a&gt;プロパティで取得できます。このプロパティは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/Reference&quot;&gt;DOM CSSプロパティリストに&lt;/a&gt;リストされています。</target>
        </trans-unit>
        <trans-unit id="87b3fc90574fc8631ec025cec2fbe698929d6bbd" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to confirm that playback has begun and how to gracefully handle blocked automatic playback:</source>
          <target state="translated">この例では、再生が開始されたことを確認する方法と、ブロックされた自動再生を優雅に処理する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4d64d34709acf5e543ff3a28796ce0d7845f3bc9" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to create an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; which is scheduled to start playing in 2 seconds and stop playing 1 second after that. The times are calculated by adding the desired number of seconds to the context's current time stamp returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;AudioContext.currentTime&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">この例は、2秒後に再生を開始し、1秒後に再生を停止するようにスケジュールされた&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;を作成する方法を示しています。時間は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt; &lt;code&gt;AudioContext.currentTime&lt;/code&gt; &lt;/a&gt;によって返されたコンテキストの現在のタイムスタンプに必要な秒数を追加することによって計算されます。</target>
        </trans-unit>
        <trans-unit id="1e427dc5d39831ae9b026ef07bdc55937deea112" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to detect a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebGL&quot;&gt;WebGL&lt;/a&gt; rendering context and reports the result to the user.</source>
          <target state="translated">この例は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/WebGL&quot;&gt;WebGL&lt;/a&gt;レンダリングコンテキストを検出し、結果をユーザーに報告する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="91035eeda86cd4121e3a14979113c918f6fe4ce2" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to make a simple synchronous request.</source>
          <target state="translated">この例では、シンプルな同期リクエストを作成する方法を示します。</target>
        </trans-unit>
        <trans-unit id="a090785e44c96c21f459f3310340faa79cfbdfe5" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to use &lt;code&gt;addEventListener()&lt;/code&gt; to watch for mouse clicks on an element.</source>
          <target state="translated">この例は、 &lt;code&gt;addEventListener()&lt;/code&gt; を使用して、要素のマウスクリックを監視する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="beff8e52a51a2a994f292603f72a5250a5a7e666" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to use video files as textures.</source>
          <target state="translated">この例では、動画ファイルをテクスチャとして使用する方法を説明します。</target>
        </trans-unit>
        <trans-unit id="6ecb841f365fb9cfdb27a00fb78b4889dbdd7d2e" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to watch for and act upon &lt;code&gt;pointerdown&lt;/code&gt; events using &lt;code&gt;onpointerdown&lt;/code&gt;. You could also use &lt;code&gt;addEventListener()&lt;/code&gt;, of course.</source>
          <target state="translated">この例では、を監視して作用する方法を示し &lt;code&gt;pointerdown&lt;/code&gt; 使用してイベント &lt;code&gt;onpointerdown&lt;/code&gt; 。もちろん、 &lt;code&gt;addEventListener()&lt;/code&gt; を使用することもできます。</target>
        </trans-unit>
        <trans-unit id="511b70eafa42cd1baa9641e5c60ccacf3936c1b9" translate="yes" xml:space="preserve">
          <source>This example demonstrates simulating a click (that is programmatically generating a click event) on a checkbox using DOM methods.</source>
          <target state="translated">この例では、DOM メソッドを使用してチェックボックスのクリック(クリックイベントをプログラムで生成する)をシミュレートしています。</target>
        </trans-unit>
        <trans-unit id="28799e6d6c6990e93bb85da04feecee02950621e" translate="yes" xml:space="preserve">
          <source>This example demonstrates some of the benefits of translating the canvas origin. Without the &lt;code&gt;translate()&lt;/code&gt; method, all of the rectangles would be drawn at the same position (0,0). The &lt;code&gt;translate()&lt;/code&gt; method also gives us the freedom to place the rectangle anywhere on the canvas without having to manually adjust coordinates in the &lt;code&gt;fillRect()&lt;/code&gt; function. This makes it a little easier to understand and use.</source>
          <target state="translated">この例は、キャンバスの原点を翻訳することの利点のいくつかを示しています。なければ &lt;code&gt;translate()&lt;/code&gt; メソッド、四角形のすべてが同じ位置（0,0）で描画されます。また、 &lt;code&gt;translate()&lt;/code&gt; メソッドを使用すると、 &lt;code&gt;fillRect()&lt;/code&gt; 関数で座標を手動で調整しなくても、長方形をキャンバス上の任意の場所に自由に配置できます。これにより、理解と使用が少し簡単になります。</target>
        </trans-unit>
        <trans-unit id="e892e2c4c9aa62107c0a1ec7dd8b76175350a294" translate="yes" xml:space="preserve">
          <source>This example demonstrates starting an oscillator node, scheduled to begin playing at once and to stop playing in one second. The stop time is determined by taking the audio context's current time from &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt;&lt;code&gt;AudioContext.currentTime&lt;/code&gt;&lt;/a&gt; and adding 1 second.</source>
          <target state="translated">この例は、すぐに再生を開始し、1秒で停止するようにスケジュールされたオシレーターノードの開始を示しています。停止時間は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/BaseAudioContext/currentTime&quot;&gt; &lt;code&gt;AudioContext.currentTime&lt;/code&gt; &lt;/a&gt;からオーディオコンテキストの現在の時間を取り、1秒を追加することによって決定されます。</target>
        </trans-unit>
        <trans-unit id="3f77af4ce6edc6e43f055a3322106e52d317872d" translate="yes" xml:space="preserve">
          <source>This example demonstrates that the hierarchy of the entire document is considered when applying &lt;code&gt;selectors&lt;/code&gt;, so that levels outside the specified &lt;code&gt;baseElement&lt;/code&gt; are still considered when locating matches.</source>
          <target state="translated">この例は、 &lt;code&gt;selectors&lt;/code&gt; 適用するときにドキュメント全体の階層が考慮されることを示しています。そのため、一致を &lt;code&gt;baseElement&lt;/code&gt; するときに、指定されたbaseElementの外側のレベルも考慮されます。</target>
        </trans-unit>
        <trans-unit id="fb2ec2f8cb2608f036ffd243bfa2531199d01b58" translate="yes" xml:space="preserve">
          <source>This example demonstrates the &lt;code&gt;addHitRegion()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;addHitRegion()&lt;/code&gt; メソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="89fc2304b240086903be5b34e85edee9e1a077a4" translate="yes" xml:space="preserve">
          <source>This example demonstrates the &lt;code&gt;clearHitRegions()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;clearHitRegions()&lt;/code&gt; メソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="2e3522470e08cb7d2cd8534bcb4dc33de6b9b7ab" translate="yes" xml:space="preserve">
          <source>This example demonstrates the &lt;code&gt;getLineDash()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;getLineDash()&lt;/code&gt; メソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="f52df6deaaabf5e36e43473641dbae0cd1775cd1" translate="yes" xml:space="preserve">
          <source>This example demonstrates the &lt;code&gt;removeHitRegion()&lt;/code&gt; method.</source>
          <target state="translated">この例は、 &lt;code&gt;removeHitRegion()&lt;/code&gt; メソッドを示しています。</target>
        </trans-unit>
        <trans-unit id="60f9c1f9e15adfc0329d9d3b25107347d15f6698" translate="yes" xml:space="preserve">
          <source>This example demonstrates the simple animation of a one-color shape. Topics examined are adapting to aspect ratio differences, a function to build shader programs from sets of multiple shaders, and the basics of drawing in WebGL.</source>
          <target state="translated">この例では、1 色の図形の簡単なアニメーションを示します。アスペクト比の違いへの対応、複数のシェーダのセットからシェーダプログラムを構築する機能、WebGL での描画の基本などを取り上げています。</target>
        </trans-unit>
        <trans-unit id="cd6bc8dbbd217a48267faf723e93376988c174bb" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of &lt;code&gt;firstChild&lt;/code&gt; and how whitespace nodes might interfere with using this property.</source>
          <target state="translated">この例は、 &lt;code&gt;firstChild&lt;/code&gt; の使用方法と、空白ノードがこのプロパティの使用を妨げる可能性があることを示しています。</target>
        </trans-unit>
        <trans-unit id="d2b64a2a09a748867c26a6c8c335b4fd7c944733" translate="yes" xml:space="preserve">
          <source>This example demonstrates the use of the &lt;a href=&quot;ondrop&quot;&gt;&lt;code&gt;ondrop&lt;/code&gt;&lt;/a&gt; attribute to define an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例は、&lt;a href=&quot;ondrop&quot;&gt; &lt;code&gt;ondrop&lt;/code&gt; &lt;/a&gt;属性を使用して要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; イベントハンドラーを定義する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="50c86ebcc7b1d284ebcd534b140d33dcf362085a" translate="yes" xml:space="preserve">
          <source>This example demonstrates the various &lt;code&gt;textBaseline&lt;/code&gt; property values.</source>
          <target state="translated">この例は、さまざまな &lt;code&gt;textBaseline&lt;/code&gt; プロパティ値を示しています。</target>
        </trans-unit>
        <trans-unit id="299584266fc307d799fdae59764963ce969be7d1" translate="yes" xml:space="preserve">
          <source>This example demonstrates using pointer events' various event types (&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointermove&quot;&gt;pointermove&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt;, etc.) for different multi-touch interactions.</source>
          <target state="translated">この例では、ポインターイベントのさまざまなイベントタイプ（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointermove&quot;&gt;pointermove&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; など）をさまざまなマルチタッチ操作に使用する方法を示します。</target>
        </trans-unit>
        <trans-unit id="ecd9312367982e58ff26c9bac0303836f80cf10e" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragenter&quot;&gt;&lt;code&gt;ondragenter&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondragenter&quot;&gt; &lt;code&gt;ondragenter&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="2f27d6b0998332296d7b41768ba04305c5353cf5" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragexit&quot;&gt;&lt;code&gt;ondragexit&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragexit&quot;&gt;dragexit&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例は、&lt;a href=&quot;ondragexit&quot;&gt; &lt;code&gt;ondragexit&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragexit&quot;&gt;dragexit&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="0112e279e4fb43d3f41d66cc57e49eed2a92dd99" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragleave&quot;&gt;&lt;code&gt;ondragleave&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragleave&quot;&gt;dragleave&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondragleave&quot;&gt; &lt;code&gt;ondragleave&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragleave&quot;&gt;dragleave&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="f06b4846ce53dce970729c40097f479913e36a4e" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragover&quot;&gt;&lt;code&gt;ondragover&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondragover&quot;&gt; &lt;code&gt;ondragover&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="f84c1628acc7b6a8702230c9140fc3a98fb9697b" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;a href=&quot;ondragstart&quot;&gt;&lt;code&gt;ondragstart&lt;/code&gt;&lt;/a&gt; attribute handler to set an element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例では、&lt;a href=&quot;ondragstart&quot;&gt; &lt;code&gt;ondragstart&lt;/code&gt; &lt;/a&gt;属性ハンドラーを使用して、要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt; イベントハンドラーを設定する方法を示します。</target>
        </trans-unit>
        <trans-unit id="dd20bd869b77a83aa1c6c4cdbb77c56f9e74d068" translate="yes" xml:space="preserve">
          <source>This example demonstrates using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchcancel&quot;&gt;touchcancel&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt;) touch events for the following gestures: single touch, two (simultaneous) touches, more than two simultaneous touches, 1-finger swipe, and 2-finger move/pinch/swipe.</source>
          <target state="translated">この例は、次のジェスチャーで &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchcancel&quot;&gt;touchcancel&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; ）タッチイベントを使用する方法を示しています。。</target>
        </trans-unit>
        <trans-unit id="857ead5e97e080e7e87c110ee22e95bfbac1e432" translate="yes" xml:space="preserve">
          <source>This example draws a blue triangle on top of a yellowish background. The &lt;code&gt;clearRect()&lt;/code&gt; method then erases part of the canvas.</source>
          <target state="translated">この例では、黄色がかった背景の上に青い三角形を描画します。次に、 &lt;code&gt;clearRect()&lt;/code&gt; メソッドはキャンバスの一部を消去します。</target>
        </trans-unit>
        <trans-unit id="63d5ece748dea6a044bb991f19ef5ce931df45ef" translate="yes" xml:space="preserve">
          <source>This example draws a complete circle using the &lt;code&gt;arc()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;arc()&lt;/code&gt; メソッドを使用して完全な円を描画します。</target>
        </trans-unit>
        <trans-unit id="7bc1c7dc9ee8847a277a3c0d7b291e4ac9f4013d" translate="yes" xml:space="preserve">
          <source>This example draws a filled green rectangle using the &lt;code&gt;fillRect()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;fillRect()&lt;/code&gt; メソッドを使用して、塗りつぶされた緑色の長方形を描画します。</target>
        </trans-unit>
        <trans-unit id="f199557868c7809aaacfb10ab59f2b26a8df21eb" translate="yes" xml:space="preserve">
          <source>This example draws a heart using cubic B&amp;eacute;zier curves.</source>
          <target state="translated">この例では、3次ベジェ曲線を使用してハートを描画します。</target>
        </trans-unit>
        <trans-unit id="4d790cc8c204051129d49a629c648e4af3a059b5" translate="yes" xml:space="preserve">
          <source>This example draws a rectangle with a drop shadow and thick, beveled outlines.</source>
          <target state="translated">この例では、ドロップシャドウと太い面取りの輪郭を持つ長方形を描いています。</target>
        </trans-unit>
        <trans-unit id="104af60a59102c63f0b127153efd6a0175b574c0" translate="yes" xml:space="preserve">
          <source>This example draws a rectangle with a green outline using the &lt;code&gt;strokeRect()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;strokeRect()&lt;/code&gt; メソッドを使用して、輪郭が緑色の長方形を描画します。</target>
        </trans-unit>
        <trans-unit id="98e4203c33e75a88a71bf0bca00dd405a1b91961" translate="yes" xml:space="preserve">
          <source>This example draws a rectangle, and then uses &lt;code&gt;getImageData()&lt;/code&gt; to grab a portion of the canvas.</source>
          <target state="translated">この例では、長方形を描画し、次に &lt;code&gt;getImageData()&lt;/code&gt; を使用してキャンバスの一部を取得します。</target>
        </trans-unit>
        <trans-unit id="e540caeb94f69e918ccf0f0c5fd1211903eb5bec" translate="yes" xml:space="preserve">
          <source>This example draws a simple B&amp;eacute;zier curve using &lt;code&gt;bezierCurveTo()&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;bezierCurveTo()&lt;/code&gt; を使用して単純なベジエ曲線を描画します。</target>
        </trans-unit>
        <trans-unit id="a19cb4cd26a9bd0b16cc6786634cf14f68ad2000" translate="yes" xml:space="preserve">
          <source>This example draws a simple quadratic B&amp;eacute;zier curve using &lt;code&gt;quadraticCurveTo()&lt;/code&gt;.</source>
          <target state="translated">この例では、 &lt;code&gt;quadraticCurveTo()&lt;/code&gt; を使用して単純な2次ベジェ曲線を描画します。</target>
        </trans-unit>
        <trans-unit id="82d8fe8aa1c5b599b2e12fa7f58a2bc1e8a4230f" translate="yes" xml:space="preserve">
          <source>This example draws a smiley face consisting of three disconnected sub-paths. Note that, although &lt;code&gt;closePath()&lt;/code&gt; is called after all the arcs have been created, only the last arc (sub-path) gets closed.</source>
          <target state="translated">この例では、3つの切断されたサブパスで構成されるスマイリーフェイスを描画します。すべてのアークが作成された後に &lt;code&gt;closePath()&lt;/code&gt; が呼び出されますが、最後のアーク（サブパス）のみが閉じられることに注意してください。</target>
        </trans-unit>
        <trans-unit id="4ac6a11f42ad679a43087920946e1f430299b057" translate="yes" xml:space="preserve">
          <source>This example draws a straight line using the &lt;code&gt;lineTo()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;lineTo()&lt;/code&gt; メソッドを使用して直線を描画します。</target>
        </trans-unit>
        <trans-unit id="e8d0159198190d81f9d129a05fb891735eaecc93" translate="yes" xml:space="preserve">
          <source>This example draws a text string with a shadowing effect.</source>
          <target state="translated">この例では、シャドウイング効果のあるテキスト文字列を描画します。</target>
        </trans-unit>
        <trans-unit id="7953ecbb0e019264f1ffa8a5e670a3e269b501ee" translate="yes" xml:space="preserve">
          <source>This example draws an animated clock, showing your current time.</source>
          <target state="translated">この例では、現在の時刻を示すアニメーション時計を描画します。</target>
        </trans-unit>
        <trans-unit id="9c7140bb65c3de0bca87bc69ec17a4cf24b545e3" translate="yes" xml:space="preserve">
          <source>This example draws an ellipse at an angle of &amp;pi;/4 radians (45&lt;strong&gt;&amp;deg;&lt;/strong&gt;). To make a full ellipse, the arc begins at an angle of 0 radians (0&lt;strong&gt;&amp;deg;&lt;/strong&gt;), and ends at an angle of 2&amp;pi; radians (360&lt;strong&gt;&amp;deg;&lt;/strong&gt;).</source>
          <target state="translated">この例では、&amp;pi;/ 4ラジアン（45 &lt;strong&gt;&amp;deg;&lt;/strong&gt;）の角度で楕円を描画します。完全な楕円を作るために、弧は0ラジアン（0 &lt;strong&gt;&amp;deg;&lt;/strong&gt;）の角度で始まり、2&amp;pi;ラジアン（360 &lt;strong&gt;&amp;deg;&lt;/strong&gt;）の角度で終わります。</target>
        </trans-unit>
        <trans-unit id="3d9822c79cc1581e89b7ce633f7b4728d78758b6" translate="yes" xml:space="preserve">
          <source>This example draws an image to the canvas using the &lt;code&gt;drawImage()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;drawImage()&lt;/code&gt; メソッドを使用してキャンバスに画像を描画します。</target>
        </trans-unit>
        <trans-unit id="986855db93587824f43d70b2cdc33447ffde57cc" translate="yes" xml:space="preserve">
          <source>This example draws various shapes to show what is possible when using &lt;code&gt;arc()&lt;/code&gt;.</source>
          <target state="translated">この例では、さまざまな形状を描画して、 &lt;code&gt;arc()&lt;/code&gt; を使用するときに何ができるかを示します。</target>
        </trans-unit>
        <trans-unit id="edddba5f0281c20e9f3016fc9bdd5a0bdeb78669" translate="yes" xml:space="preserve">
          <source>This example establishes a &lt;code&gt;fullscreenchange&lt;/code&gt; event handler, &lt;code&gt;handleFullscreenChange()&lt;/code&gt;. This function determines which element it was called on by checking the value of &lt;a href=&quot;../event/target&quot;&gt;&lt;code&gt;event.target&lt;/code&gt;&lt;/a&gt;, then compares the document's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/fullscreenElement&quot;&gt;&lt;code&gt;fullscreenElement&lt;/code&gt;&lt;/a&gt; value to the element to see if they're the same node.</source>
          <target state="translated">この例では、確立 &lt;code&gt;fullscreenchange&lt;/code&gt; のイベントハンドラを、 &lt;code&gt;handleFullscreenChange()&lt;/code&gt; 。この機能は、それがの価値チェックすることによって、上で呼び出された要素を決定&lt;a href=&quot;../event/target&quot;&gt; &lt;code&gt;event.target&lt;/code&gt; を&lt;/a&gt;、その文書の比較&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DocumentOrShadowRoot/fullscreenElement&quot;&gt; &lt;code&gt;fullscreenElement&lt;/code&gt; の&lt;/a&gt;彼らは同じノードいるかどうかを確認するための要素に値を。</target>
        </trans-unit>
        <trans-unit id="7b84b4ac3c05e50952fae7441ae5af56090efafe" translate="yes" xml:space="preserve">
          <source>This example establishes a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/tonechange&quot;&gt;tonechange&lt;/a&gt;&lt;/code&gt; event which updates an element to display the currently playing tone in its content, or, if all tones have played, the string &quot;&amp;lt;none&amp;gt;&quot;.</source>
          <target state="translated">この例では、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/tonechange&quot;&gt;tonechange&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを確立します。このハンドラーは、コンテンツで現在再生中のトーン、またはすべてのトーンが再生されている場合は文字列 &quot;&amp;lt;none&amp;gt;&quot;を表示するように要素を更新します。</target>
        </trans-unit>
        <trans-unit id="ed57d5197b4ee23f07ee900b8140cbc2c8d72ebe" translate="yes" xml:space="preserve">
          <source>This example establishes a method, &lt;code&gt;readFile()&lt;/code&gt;, reads a text file and calls a specified callback function with the received text (in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;&lt;code&gt;String&lt;/code&gt;&lt;/a&gt; object) once the read is completed. If an error occurs, a specified (optional) error callback is called.</source>
          <target state="translated">この例では、メソッド &lt;code&gt;readFile()&lt;/code&gt; を確立し、テキストファイルを読み取り、読み取りが完了すると、（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt; &lt;code&gt;String&lt;/code&gt; &lt;/a&gt;オブジェクト内の）受信したテキストを使用して、指定されたコールバック関数を呼び出します。エラーが発生すると、指定された（オプションの）エラーコールバックが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="160616646ba75eeaa07b0fdc5cd0a6300eda3245" translate="yes" xml:space="preserve">
          <source>This example establishes a method, &lt;code&gt;writeToFileEntry()&lt;/code&gt;, which outputs a text string to the file corresponding to the passed-in directory entry.</source>
          <target state="translated">この例では、メソッド &lt;code&gt;writeToFileEntry()&lt;/code&gt; を確立します。このメソッドは、渡されたディレクトリエントリに対応するファイルにテキスト文字列を出力します。</target>
        </trans-unit>
        <trans-unit id="96288394941964ebf7c1dd3acaefd3d647416d27" translate="yes" xml:space="preserve">
          <source>This example establishes a video element and adds an error handler to it; the error handler simply logs the details to console.</source>
          <target state="translated">この例では、video 要素を確立し、その要素にエラー ハンドラを追加しています。</target>
        </trans-unit>
        <trans-unit id="255f287b5a27ccdd057e1785afbacf61607d902c" translate="yes" xml:space="preserve">
          <source>This example establishes an event listener for &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; events which handles keyboard input for a game which uses the typical &quot;WASD&quot; keyboard layout for steering forward, left, backward, and right. This will use the same four keys physically regardless of what the actual corresponding characters are, such as if the user is using an AZERTY keyboard.</source>
          <target state="translated">この例では、キー &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントのイベントリスナーを確立します。このイベントリスナーは、典型的な「WASD」キーボードレイアウトを使用して前後左右にステアリングするゲームのキーボード入力を処理します。これは、ユーザーがAZERTYキーボードを使用している場合など、実際に対応する文字が何であるかに関係なく、同じ4つのキーを物理的に使用します。</target>
        </trans-unit>
        <trans-unit id="34a3f80f80f5995c0ae11de67eb85fdac60bf0ef" translate="yes" xml:space="preserve">
          <source>This example examines the headers in the request's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event handler, &lt;a href=&quot;onreadystatechange&quot;&gt;&lt;code&gt;XMLHttpRequest.onreadystatechange&lt;/code&gt;&lt;/a&gt;. The code shows how to obtain the raw header string, as well as how to convert it into an array of individual headers and then how to take that array and create a mapping of header names to their values.</source>
          <target state="translated">この例では、リクエストの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントハンドラー&lt;a href=&quot;onreadystatechange&quot;&gt; &lt;code&gt;XMLHttpRequest.onreadystatechange&lt;/code&gt; &lt;/a&gt;のヘッダーを調べます。このコードは、未加工のヘッダー文字列を取得する方法と、それを個々のヘッダーの配列に変換する方法と、その配列を取得してヘッダー名とその値のマッピングを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="be4cb5108ebb2b7b28fcddc3c8e3938fceacf9a4" translate="yes" xml:space="preserve">
          <source>This example fetches the current charging state of the battery and establishes a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; event, so that the charging state is recorded whenever it changes.</source>
          <target state="translated">この例では、バッテリーの現在の充電状態をフェッチし、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを確立します。これにより、充電状態が変化するたびに記録されます。</target>
        </trans-unit>
        <trans-unit id="e7f8d42d39a577e439249073c9877e412f6805ca" translate="yes" xml:space="preserve">
          <source>This example fetches the current configuration of the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, then looks to see if it has any certificates set by examining whether or not (a) the configuration has a value for &lt;code&gt;certificates&lt;/code&gt;, and (b) whether its length is zero.</source>
          <target state="translated">この例では、&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; の&lt;/a&gt;現在の構成をフェッチし、（a）構成に &lt;code&gt;certificates&lt;/code&gt; 値があるかどうか、および（b）長さがゼロかどうかを調べて、証明書が設定されているかどうかを確認します。</target>
        </trans-unit>
        <trans-unit id="d405a5c6accc148281ae5f99a5fcb3c518afe2f8" translate="yes" xml:space="preserve">
          <source>This example fetches the document's current HTML markup and replaces the &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; characters with the HTML entity &lt;code&gt;&quot;&amp;amp;lt;&quot;&lt;/code&gt;, thereby essentially converting the HTML into raw text. This is then wrapped in a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre&quot;&gt;&lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;&lt;/a&gt; element. Then the value of &lt;code&gt;innerHTML&lt;/code&gt; is changed to this new string. As a result, the document contents are replaced with a display of the page's entire source code.</source>
          <target state="translated">この例では、ドキュメントの現在のHTMLマークアップをフェッチし、 &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; 文字をHTMLエンティティ &lt;code&gt;&quot;&amp;amp;lt;&quot;&lt;/code&gt; 置き換えます。、それにより本質的にHTMLを生のテキストに変換します。次に、これは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre&quot;&gt; &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; &lt;/a&gt;要素でラップされます。次に、 &lt;code&gt;innerHTML&lt;/code&gt; の値がこの新しい文字列に変更されます。その結果、ドキュメントのコンテンツは、ページのソースコード全体の表示に置き換えられます。</target>
        </trans-unit>
        <trans-unit id="f0f31723af12e91a747bd9e06a9b6f2684f33b59" translate="yes" xml:space="preserve">
          <source>This example fills a rectangle with the &lt;code&gt;fill()&lt;/code&gt; method.</source>
          <target state="translated">この例では、 &lt;code&gt;fill()&lt;/code&gt; メソッドで長方形を塗りつぶしています。</target>
        </trans-unit>
        <trans-unit id="b93312ab6515d8f0f78e5d0341d380f6710ead70" translate="yes" xml:space="preserve">
          <source>This example finds a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element in the document and resets it by calling &lt;code&gt;load()&lt;/code&gt;.</source>
          <target state="translated">この例では、ドキュメント内で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を見つけ、 &lt;code&gt;load()&lt;/code&gt; を呼び出してそれをリセットします。</target>
        </trans-unit>
        <trans-unit id="c1899a9670aae40361ad5b8e57fb2d39cf00cc71" translate="yes" xml:space="preserve">
          <source>This example finds all elements that have a class of &lt;code&gt;test&lt;/code&gt;, which are also a descendant of the element that has the &lt;code&gt;id&lt;/code&gt; of &lt;code&gt;main&lt;/code&gt;:</source>
          <target state="translated">この例では、 &lt;code&gt;test&lt;/code&gt; のクラスを持つすべての要素を検索します。これは、 &lt;code&gt;main&lt;/code&gt; の &lt;code&gt;id&lt;/code&gt; を持つ要素の子孫でもあります。</target>
        </trans-unit>
        <trans-unit id="7fa506f5dae445620d20080384c0ebedce860677" translate="yes" xml:space="preserve">
          <source>This example function replaces the current contents of the clipboard with a specified string.</source>
          <target state="translated">この関数は、現在のクリップボードの内容を指定した文字列に置き換えます。</target>
        </trans-unit>
        <trans-unit id="4c767f1dec42843215ccb66206b022a1d441292c" translate="yes" xml:space="preserve">
          <source>This example gets a webcam's audio and video in a stream using &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;, attaches the stream to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, then sets a timer that, upon expiring, will stop the first audio track found on the stream.</source>
          <target state="translated">この例では、&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;getUserMedia()&lt;/code&gt; &lt;/a&gt;を使用して、ストリーム内のWebカメラのオーディオとビデオを取得し、ストリームを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にアタッチしてから、タイマーが設定されます。タイマーが終了すると、ストリームで最初に見つかったオーディオトラックが停止します。</target>
        </trans-unit>
        <trans-unit id="52363a20bc2cb397c229e68d500d8c12aa2bdaeb" translate="yes" xml:space="preserve">
          <source>This example gets the form's element list, then iterates over the list, looking for &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; elements of type &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text&quot;&gt;&quot;text&quot;&lt;/a&gt;&lt;/code&gt; so that some form of processing can be performed on them.</source>
          <target state="translated">この例では、フォームの要素リストを取得し、リストを反復処理して、タイプ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/text&quot;&gt;&quot;text&quot;&lt;/a&gt;&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を探して、何らかの形式の処理を実行できるようにします。</target>
        </trans-unit>
        <trans-unit id="d1fed95cd489fb1c48f4630a7d97b2db9c1d3d51" translate="yes" xml:space="preserve">
          <source>This example gives a preference for camera resolution, and assigns the resulting &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; object to a video element.</source>
          <target state="translated">この例では、カメラの解像度を設定し、結果の&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;オブジェクトをビデオ要素に割り当てます。</target>
        </trans-unit>
        <trans-unit id="5155a8744d180f5b4efe5d0bae1e3ee142448772" translate="yes" xml:space="preserve">
          <source>This example illustrates a variety of common line dash patterns.</source>
          <target state="translated">この例では、さまざまな一般的な線ダッシュパターンを示しています。</target>
        </trans-unit>
        <trans-unit id="af02c9813f8e542014491da3a89d91026a941e2d" translate="yes" xml:space="preserve">
          <source>This example illustrates accessing all of a touch event's properties.</source>
          <target state="translated">この例では、タッチ イベントのすべてのプロパティへのアクセスを説明しています。</target>
        </trans-unit>
        <trans-unit id="7debe77bf4888b740d3b003793cf8f7c147c41d5" translate="yes" xml:space="preserve">
          <source>This example illustrates accessing the drag and drop data within the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; event handler.</source>
          <target state="translated">この例は、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; イベントハンドラー内のドラッグアンドドロップデータへのアクセスを示しています。</target>
        </trans-unit>
        <trans-unit id="f36a7c197e9fe66bb0b259e6771a73c1febc5be3" translate="yes" xml:space="preserve">
          <source>This example illustrates how to access the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;pagex&quot;&gt;&lt;code&gt;Touch.pageX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;pagey&quot;&gt;&lt;code&gt;Touch.pageY&lt;/code&gt;&lt;/a&gt; properties. The &lt;a href=&quot;pagex&quot;&gt;&lt;code&gt;Touch.pageX&lt;/code&gt;&lt;/a&gt; property is the horizontal coordinate of a touch point relative to the viewport (in CSS pixels), including any scroll offset. The &lt;a href=&quot;pagey&quot;&gt;&lt;code&gt;Touch.pageY&lt;/code&gt;&lt;/a&gt; property is the vertical coordinate of a touch point relative to the viewport (in CSS pixels), including any scroll offset.</source>
          <target state="translated">この例では、アクセスする方法を示し&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;pagex&quot;&gt; &lt;code&gt;Touch.pageX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;pagey&quot;&gt; &lt;code&gt;Touch.pageY&lt;/code&gt; &lt;/a&gt;プロパティを。&lt;a href=&quot;pagex&quot;&gt; &lt;code&gt;Touch.pageX&lt;/code&gt; の&lt;/a&gt;プロパティは、オフセット任意スクロールを含む、（CSSピクセルで）ビューポートへのタッチポイント相対的な水平座標です。&lt;a href=&quot;pagey&quot;&gt; &lt;code&gt;Touch.pageY&lt;/code&gt; の&lt;/a&gt;プロパティは、垂直オフセットを任意スクロールを含む、（CSSピクセルで）ビューポートへのタッチポイントのy座標です。</target>
        </trans-unit>
        <trans-unit id="45ae8f522b52a51106a635d52d1730c82d3c92fe" translate="yes" xml:space="preserve">
          <source>This example illustrates how to access the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;screenx&quot;&gt;&lt;code&gt;Touch.screenX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;screeny&quot;&gt;&lt;code&gt;Touch.screenY&lt;/code&gt;&lt;/a&gt; properties. The &lt;a href=&quot;screenx&quot;&gt;&lt;code&gt;Touch.screenX&lt;/code&gt;&lt;/a&gt; property is the horizontal (x) coordinate of a touch point relative to the screen in CSS pixels. The &lt;a href=&quot;screeny&quot;&gt;&lt;code&gt;Touch.screenY&lt;/code&gt;&lt;/a&gt; property is the vertical coordinate of a touch point relative to the screen in CSS pixels.</source>
          <target state="translated">この例では、アクセスする方法を示し&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;screenx&quot;&gt; &lt;code&gt;Touch.screenX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;screeny&quot;&gt; &lt;code&gt;Touch.screenY&lt;/code&gt; &lt;/a&gt;プロパティを。&lt;a href=&quot;screenx&quot;&gt; &lt;code&gt;Touch.screenX&lt;/code&gt; の&lt;/a&gt;プロパティは、水平（X）CSSピクセルの画面に対するタッチ点の座標です。&lt;a href=&quot;screeny&quot;&gt; &lt;code&gt;Touch.screenY&lt;/code&gt; の&lt;/a&gt;プロパティは、CSSピクセルの画面に対するタッチ点の座標垂直です。</target>
        </trans-unit>
        <trans-unit id="11b64d94335b62564b50b1791e66b762f9af2977" translate="yes" xml:space="preserve">
          <source>This example illustrates how to access the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;target&quot;&gt;&lt;code&gt;Touch.target&lt;/code&gt;&lt;/a&gt; property. The &lt;a href=&quot;target&quot;&gt;&lt;code&gt;Touch.target&lt;/code&gt;&lt;/a&gt; property is an &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;../eventtarget&quot;&gt;&lt;code&gt;EventTarget&lt;/code&gt;&lt;/a&gt;) on which a touch point is started when contact is first placed on the surface.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;target&quot;&gt; &lt;code&gt;Touch.target&lt;/code&gt; &lt;/a&gt;プロパティにアクセスする方法を示しています。&lt;a href=&quot;target&quot;&gt; &lt;code&gt;Touch.target&lt;/code&gt; の&lt;/a&gt;プロパティは、&lt;a href=&quot;../element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;../eventtarget&quot;&gt; &lt;code&gt;EventTarget&lt;/code&gt; &lt;/a&gt;接点が第一表面上に配置されたときのタッチポイントが開始されています）。</target>
        </trans-unit>
        <trans-unit id="36eb3f93645ddcdc6eeb4e885bb04374c7381b60" translate="yes" xml:space="preserve">
          <source>This example illustrates how to access the &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; key modifier properties: &lt;a href=&quot;altkey&quot;&gt;&lt;code&gt;TouchEvent.altKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;ctrlkey&quot;&gt;&lt;code&gt;TouchEvent.ctrlKey&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;metakey&quot;&gt;&lt;code&gt;TouchEvent.metaKey&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;shiftkey&quot;&gt;&lt;code&gt;TouchEvent.shiftKey&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;../touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;キー修飾子プロパティ&lt;a href=&quot;altkey&quot;&gt; &lt;code&gt;TouchEvent.altKey&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;ctrlkey&quot;&gt; &lt;code&gt;TouchEvent.ctrlKey&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;metakey&quot;&gt; &lt;code&gt;TouchEvent.metaKey&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;shiftkey&quot;&gt; &lt;code&gt;TouchEvent.shiftKey&lt;/code&gt; &lt;/a&gt;にアクセスする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="45e30fd30382c72b20a7599115816a1c637072ad" translate="yes" xml:space="preserve">
          <source>This example illustrates simple accessing of the &lt;a href=&quot;tiltx&quot;&gt;&lt;code&gt;tiltX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;tilty&quot;&gt;&lt;code&gt;tiltY&lt;/code&gt;&lt;/a&gt; properties.</source>
          <target state="translated">この例は、単純なアクセス示し&lt;a href=&quot;tiltx&quot;&gt; &lt;code&gt;tiltX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;tilty&quot;&gt; &lt;code&gt;tiltY&lt;/code&gt; &lt;/a&gt;プロパティを。</target>
        </trans-unit>
        <trans-unit id="7552a022096a43cf7b0c31c12b92ff6b740f9e73" translate="yes" xml:space="preserve">
          <source>This example illustrates the &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;pointerid&quot;&gt;&lt;code&gt;pointerId&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">この例は、&lt;a href=&quot;../pointerevent&quot;&gt; &lt;code&gt;PointerEvent&lt;/code&gt; &lt;/a&gt;インターフェイスの&lt;a href=&quot;pointerid&quot;&gt; &lt;code&gt;pointerId&lt;/code&gt; &lt;/a&gt;プロパティを示しています。</target>
        </trans-unit>
        <trans-unit id="8ae756b51952a1c216717e71ed70d0db3303f6cd" translate="yes" xml:space="preserve">
          <source>This example illustrates the &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;changedtouches&quot;&gt;&lt;code&gt;TouchEvent.changedTouches&lt;/code&gt;&lt;/a&gt; property. The &lt;a href=&quot;changedtouches&quot;&gt;&lt;code&gt;TouchEvent.changedTouches&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; object that contains one &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object for each touch point which contributed to the event.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;changedtouches&quot;&gt; &lt;code&gt;TouchEvent.changedTouches&lt;/code&gt; &lt;/a&gt;プロパティを示しています。&lt;a href=&quot;changedtouches&quot;&gt; &lt;code&gt;TouchEvent.changedTouches&lt;/code&gt; &lt;/a&gt;プロパティがある&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; の&lt;/a&gt; 1つの含まれているオブジェクト&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;イベントに貢献した各タッチポイントのオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="0028492d52b27849aea64dc1e229b51859a30988" translate="yes" xml:space="preserve">
          <source>This example illustrates the &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;targettouches&quot;&gt;&lt;code&gt;TouchEvent.targetTouches&lt;/code&gt;&lt;/a&gt; property. The &lt;a href=&quot;targettouches&quot;&gt;&lt;code&gt;TouchEvent.targetTouches&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; object that includes those TPs that are currently touching the surface &lt;em&gt;and&lt;/em&gt; started on the element that is the target of the current event. As such, the &lt;code&gt;targetTouches&lt;/code&gt; list is a strict subset of the &lt;code&gt;touches&lt;/code&gt; list.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;targettouches&quot;&gt; &lt;code&gt;TouchEvent.targetTouches&lt;/code&gt; &lt;/a&gt;プロパティを示しています。&lt;a href=&quot;targettouches&quot;&gt; &lt;code&gt;TouchEvent.targetTouches&lt;/code&gt; &lt;/a&gt;プロパティがある&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; の&lt;/a&gt;現在の表面に触れているものを含んでいるのTPオブジェクト&lt;em&gt;と&lt;/em&gt;現在のイベントのターゲットである要素で開始します。このように、 &lt;code&gt;targetTouches&lt;/code&gt; のリストは、厳密なサブセットである &lt;code&gt;touches&lt;/code&gt; リスト。</target>
        </trans-unit>
        <trans-unit id="05e02726173174f1246874c0c44f7c836a365f72" translate="yes" xml:space="preserve">
          <source>This example illustrates the &lt;a href=&quot;../touchevent&quot;&gt;&lt;code&gt;TouchEvent&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;touches&quot;&gt;&lt;code&gt;TouchEvent.touches&lt;/code&gt;&lt;/a&gt; property. The &lt;a href=&quot;touches&quot;&gt;&lt;code&gt;TouchEvent.touches&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt; object and containing a list of &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; objects for every point of contact currently touching the surface.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touchevent&quot;&gt; &lt;code&gt;TouchEvent&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;touches&quot;&gt; &lt;code&gt;TouchEvent.touches&lt;/code&gt; &lt;/a&gt;プロパティを示しています。&lt;a href=&quot;touches&quot;&gt; &lt;code&gt;TouchEvent.touches&lt;/code&gt; の&lt;/a&gt;プロパティがある&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; の&lt;/a&gt;オブジェクトとのリスト含む&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;現在の表面に触れる接触のすべてのポイントのためのオブジェクト。</target>
        </trans-unit>
        <trans-unit id="0b56ff09a77d1e4c46be6ac4274025d3648a8266" translate="yes" xml:space="preserve">
          <source>This example illustrates the effect of applying the &lt;code&gt;imageSmoothingEnabled&lt;/code&gt; property to a scaled image. The image's natural dimensions are 86 x 117.</source>
          <target state="translated">この例は、 &lt;code&gt;imageSmoothingEnabled&lt;/code&gt; プロパティをスケーリングされた画像に適用する効果を示しています。画像の自然なサイズは86 x 117です。</target>
        </trans-unit>
        <trans-unit id="aeb80e0ac025c4ca95f8944a8e9ef43225d63b65" translate="yes" xml:space="preserve">
          <source>This example illustrates the effect of overlaying multiple transparent shapes on top of each other. We begin by drawing a solid background composed of four differently colored squares. Next, we set the &lt;code&gt;globalAlpha&lt;/code&gt; property to &lt;code&gt;0.2&lt;/code&gt; (20% opaque); this alpha level will apply to all of our transparent shapes. After that, we use a &lt;code&gt;for&lt;/code&gt; loop to draw a series of circles with increasing radii.</source>
          <target state="translated">この例は、複数の透明な形状を互いに重ね合わせる効果を示しています。まず、4つの異なる色の正方形で構成される無地の背景を描画します。次に、 &lt;code&gt;globalAlpha&lt;/code&gt; プロパティを &lt;code&gt;0.2&lt;/code&gt; （不透明度20％）に設定します。このアルファレベルは、すべての透明な形状に適用されます。その後、 &lt;code&gt;for&lt;/code&gt; ループを使用して、半径が増加する一連の円を描画します。</target>
        </trans-unit>
        <trans-unit id="9c6772cf4c02f5860872863b88e147575a8889fd" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;../pointerevent&quot;&gt;&lt;code&gt;PointerEvent&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;width&quot;&gt;&lt;code&gt;width&lt;/code&gt;&lt;/a&gt; properties to calculate the contact area.</source>
          <target state="translated">この例では、使用示す&lt;a href=&quot;../pointerevent&quot;&gt; &lt;code&gt;PointerEvent&lt;/code&gt; の&lt;/a&gt;界面の&lt;a href=&quot;width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;width&quot;&gt; &lt;code&gt;width&lt;/code&gt; &lt;/a&gt;の接触面積を計算するプロパティを。</target>
        </trans-unit>
        <trans-unit id="6b2b58e3434050c87c3a8cfe520c447ecd89061e" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;force&quot;&gt;&lt;code&gt;Touch.force&lt;/code&gt;&lt;/a&gt; property. This property is a relative value of pressure applied, in the range &lt;code&gt;0.0&lt;/code&gt; to &lt;code&gt;1.0&lt;/code&gt;, where &lt;code&gt;0.0&lt;/code&gt; is no pressure, and &lt;code&gt;1.0&lt;/code&gt; is the highest level of pressure the touch device is capable of sensing.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;インターフェースの&lt;a href=&quot;force&quot;&gt; &lt;code&gt;Touch.force&lt;/code&gt; &lt;/a&gt;プロパティの使用を示しています。このプロパティは、圧力の相対値が範囲内で適用される &lt;code&gt;0.0&lt;/code&gt; と &lt;code&gt;1.0&lt;/code&gt; 、 &lt;code&gt;0.0&lt;/code&gt; は全く圧力をせず、 &lt;code&gt;1.0&lt;/code&gt; タッチデバイスが感知することのできる圧力の最高レベルです。</target>
        </trans-unit>
        <trans-unit id="6ae29b94cf41ded984e5e2cd3c50f8c6dd69b17a" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; interface's &lt;a href=&quot;radiusx&quot;&gt;&lt;code&gt;Touch.radiusX&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;radiusx&quot;&gt;&lt;code&gt;Touch.radiusX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt; properties. The &lt;a href=&quot;radiusx&quot;&gt;&lt;code&gt;Touch.radiusX&lt;/code&gt;&lt;/a&gt; property is the radius of the ellipse which most closely circumscribes the touching area (e.g. finger, stylus) along the axis &lt;strong&gt;indicated&lt;/strong&gt; by the touch point's &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt;. Likewise, the &lt;a href=&quot;radiusy&quot;&gt;&lt;code&gt;Touch.radiusY&lt;/code&gt;&lt;/a&gt; property is the radius of the ellipse which most closely circumscribes the touching area (e.g. finger, stylus) along the axis &lt;strong&gt;perpendicular&lt;/strong&gt; to that indicated by &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;rotationangle&quot;&gt;&lt;code&gt;Touch.rotationAngle&lt;/code&gt;&lt;/a&gt; is the angle (in degrees) that the ellipse described by &lt;code&gt;radiusX&lt;/code&gt; and &lt;code&gt;radiusY&lt;/code&gt; is rotated clockwise about its center.</source>
          <target state="translated">この例は、&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;インターフェースの&lt;a href=&quot;radiusx&quot;&gt; &lt;code&gt;Touch.radiusX&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;radiusx&quot;&gt; &lt;code&gt;Touch.radiusX&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; &lt;/a&gt;プロパティの使用を示しています。&lt;a href=&quot;radiusx&quot;&gt; &lt;code&gt;Touch.radiusX&lt;/code&gt; の&lt;/a&gt;プロパティは、最も密接に軸方向接触領域（例えば、指、スタイラス）を囲む楕円の半径で&lt;strong&gt;示し&lt;/strong&gt;たタッチポイントのにより&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; &lt;/a&gt;。同様に、&lt;a href=&quot;radiusy&quot;&gt; &lt;code&gt;Touch.radiusY&lt;/code&gt; &lt;/a&gt;プロパティは、&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; &lt;/a&gt;によって示されるものに&lt;strong&gt;垂直な&lt;/strong&gt;軸&lt;strong&gt;に&lt;/strong&gt;沿って、接触領域（たとえば、指、スタイラス）を最も密接に囲む楕円の半径です。&lt;a href=&quot;rotationangle&quot;&gt; &lt;code&gt;Touch.rotationAngle&lt;/code&gt; &lt;/a&gt; &lt;code&gt;radiusX&lt;/code&gt; と &lt;code&gt;radiusY&lt;/code&gt; で表される楕円がその中心を中心に時計回りに回転する角度（度単位）です。</target>
        </trans-unit>
        <trans-unit id="a2a68e393297f81b5c695aa907d59f111662a3c5" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;clientx&quot;&gt;&lt;code&gt;Touch.clientX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;clienty&quot;&gt;&lt;code&gt;Touch.clientY&lt;/code&gt;&lt;/a&gt; properties. The &lt;a href=&quot;clientx&quot;&gt;&lt;code&gt;Touch.clientX&lt;/code&gt;&lt;/a&gt; property is the horizontal coordinate of a touch point relative to the browser's viewport excluding any scroll offset. The &lt;a href=&quot;clienty&quot;&gt;&lt;code&gt;Touch.clientY&lt;/code&gt;&lt;/a&gt; property is the vertical coordinate of the touch point relative to the browser's viewport excluding any scroll offset .</source>
          <target state="translated">この例は、&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;clientx&quot;&gt; &lt;code&gt;Touch.clientX&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;clienty&quot;&gt; &lt;code&gt;Touch.clientY&lt;/code&gt; &lt;/a&gt;プロパティの使用を示しています。&lt;a href=&quot;clientx&quot;&gt; &lt;code&gt;Touch.clientX&lt;/code&gt; の&lt;/a&gt;プロパティには、任意のオフセットスクロール除くブラウザのビューポートにタッチポイントのy座標に水平です。&lt;a href=&quot;clienty&quot;&gt; &lt;code&gt;Touch.clientY&lt;/code&gt; の&lt;/a&gt;プロパティは、垂直オフセットを任意のスクロールを除くブラウザのビューポートへのタッチポイントのy座標です。</target>
        </trans-unit>
        <trans-unit id="5a6f4dc5310587b5b254b1c3813649ea4b095906" translate="yes" xml:space="preserve">
          <source>This example illustrates using the &lt;a href=&quot;pressure&quot;&gt;&lt;code&gt;pressure&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">この例は、&lt;a href=&quot;pressure&quot;&gt; &lt;code&gt;pressure&lt;/code&gt; &lt;/a&gt;プロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="4ebed18c5d26e1c1ed20e3c5cad383eac53db957" translate="yes" xml:space="preserve">
          <source>This example illustrates using the value of the &lt;a href=&quot;isprimary&quot;&gt;&lt;code&gt;isPrimary&lt;/code&gt;&lt;/a&gt; to call the appropriate processing function.</source>
          <target state="translated">この例は、&lt;a href=&quot;isprimary&quot;&gt; &lt;code&gt;isPrimary&lt;/code&gt; &lt;/a&gt;の値を使用して適切な処理関数を呼び出す方法を示しています。</target>
        </trans-unit>
        <trans-unit id="889e312c3b091a75143f8ef20cf671f64574a4b2" translate="yes" xml:space="preserve">
          <source>This example illustrates using the value of the &lt;a href=&quot;pointertype&quot;&gt;&lt;code&gt;pointerType&lt;/code&gt;&lt;/a&gt; to call the appropriate pointer type processing function.</source>
          <target state="translated">この例では、&lt;a href=&quot;pointertype&quot;&gt; &lt;code&gt;pointerType&lt;/code&gt; &lt;/a&gt;の値を使用して、適切なポインター型処理関数を呼び出しています。</target>
        </trans-unit>
        <trans-unit id="62c180986cc31e85f4a230d470752aaa1d1acdb3" translate="yes" xml:space="preserve">
          <source>This example includes the use of the &lt;em&gt;ondrag&lt;/em&gt; attribute handler to set an element's &lt;em&gt;drag&lt;/em&gt; event handler.</source>
          <target state="translated">この例には、&lt;em&gt;ondrag&lt;/em&gt;属性ハンドラーを使用して要素の&lt;em&gt;ドラッグ&lt;/em&gt;イベントハンドラーを設定する方法が含まれています。</target>
        </trans-unit>
        <trans-unit id="02e58d71c9f44cce2e41898292fada9137a550f2" translate="yes" xml:space="preserve">
          <source>This example initializes a linear gradient using the &lt;code&gt;createLinearGradient()&lt;/code&gt; method. Three color stops between the gradient's start and end points are then created. Finally, the gradient is assigned to the canvas context, and is rendered to a filled rectangle.</source>
          <target state="translated">この例では、 &lt;code&gt;createLinearGradient()&lt;/code&gt; メソッドを使用して線形グラデーションを初期化します。グラデーションの始点と終点の間に3つのカラーストップが作成されます。最後に、グラデーションがキャンバスコンテキストに割り当てられ、塗りつぶされた四角形にレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="4a08cc93eac91dc55990ec9e7947204489fd38d1" translate="yes" xml:space="preserve">
          <source>This example initializes a radial gradient using the &lt;code&gt;createRadialGradient()&lt;/code&gt; method. Three color stops between the gradient's two circles are then created. Finally, the gradient is assigned to the canvas context, and is rendered to a filled rectangle.</source>
          <target state="translated">この例では、 &lt;code&gt;createRadialGradient()&lt;/code&gt; メソッドを使用して放射状グラデーションを初期化します。グラデーションの2つの円の間に3つのカラーストップが作成されます。最後に、グラデーションがキャンバスコンテキストに割り当てられ、塗りつぶされた四角形にレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="394f2fb9623c18a1e22a70536f8cabbdee3ce62d" translate="yes" xml:space="preserve">
          <source>This example inserts a link from the dragged data. As you might be able to guess from the name, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text/uri-list&lt;/a&gt; type actually may contain a list of URLs, each on a separate line. In this code, we use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/split&quot;&gt;split&lt;/a&gt; to split the string into lines, then iterate over the list of lines, inserting each as a link into the document. Note also that we skip links starting with a number sign (#) as these are comments.</source>
          <target state="translated">この例では、ドラッグしたデータからリンクを挿入します。名前から推測できるかもしれませんが、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text / uri-list&lt;/a&gt;タイプには実際にはそれぞれ別の行にあるURLのリストが含まれている場合があります。このコードでは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/split&quot;&gt;split&lt;/a&gt;を使用して文字列を行に分割し、行のリストを反復処理して、それぞれをリンクとしてドキュメントに挿入します。番号記号（＃）で始まるリンクはコメントであるため、スキップすることにも注意してください。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
