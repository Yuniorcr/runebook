<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="244a8ef0f961f1ec3a0bc5f76614f9b0594e212b" translate="yes" xml:space="preserve">
          <source>This snippet is derived loosely from the full, working example you'll find in &lt;a href=&quot;webrtc_api/using_dtmf#When_a_tone_finishes_playing&quot;&gt;When a tone finishes playing&lt;/a&gt; in &lt;a href=&quot;webrtc_api/using_dtmf&quot;&gt;Using DTMF with WebRTC&lt;/a&gt;. It appends each tone to a display box as it's played, and, once all tones have been sent, re-enabled a previously-disabled &quot;Send&quot; button, allowing the next DMTF string to be entered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc1c1f558bf113b82956fb26fcb7f8d5675c6b97" translate="yes" xml:space="preserve">
          <source>This snippet replaces the contents of the element whose class is &lt;code&gt;&quot;cliptext&quot;&lt;/code&gt; with the text contents of the clipboard. Perhaps this code is being used in a browser extension that displays the current clipboard contents, automatically updating periodically or when specific events fire.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f540bec63d8c1594b3819e5d239390e21f77b2d" translate="yes" xml:space="preserve">
          <source>This snippet simply shows an observer being created, an element being observed, and then being unobserved.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6072bb5671503756464153c47c3cca6405e429d" translate="yes" xml:space="preserve">
          <source>This special behavior will be removed once the non-&lt;code&gt;MediaStream&lt;/code&gt; source support is brought up to specification and the method is unprefixed. See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1259788#c160&quot;&gt;bug 1259788, comment 160&lt;/a&gt; for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="453b0b6ba0472dc7af0965b51900f9cbe1887102" translate="yes" xml:space="preserve">
          <source>This specification adds two new methods to any objects implementing the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt; interfaces:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3496baf1d0e8b5a1af8e111540892c33d45ea47" translate="yes" xml:space="preserve">
          <source>This specification fires events with the following custom interface:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b86b3852db070a05c766cfdf0c0990f3bef68ee1" translate="yes" xml:space="preserve">
          <source>This starts by calling &lt;code&gt;beginPath()&lt;/code&gt; to start a new shape path. We then use the &lt;code&gt;moveTo()&lt;/code&gt; method to move the starting point to the desired position. Below this, two lines are drawn which make up two sides of the triangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb4850368e3402440905d0bf3859b0251192f8d8" translate="yes" xml:space="preserve">
          <source>This starts by fetching the URL of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; with the ID &lt;code&gt;fileList&lt;/code&gt;. This is the block into which we'll insert our file list, including thumbnails.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f4c1e654ea09c63de98e73763fe4456cc6f72c" translate="yes" xml:space="preserve">
          <source>This starts by looking at the value of the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt;'s &lt;code&gt;fullscreenElement&lt;/code&gt; attribute. In a real-world deployment, at this time, you'll want to check for prefixed versions of this (&lt;code&gt;mozFullscreenElement&lt;/code&gt;, &lt;code&gt;msFullscreenElement&lt;/code&gt;, or &lt;code&gt;webkitFullscreenElement&lt;/code&gt;, for example). If the value is &lt;code&gt;null&lt;/code&gt;, the document is currently in windowed mode, so we need to switch to full-screen mode; otherwise, it's the element that's currently in full-screen mode. Switching to full-screen mode is done by calling &lt;a href=&quot;element/requestfullscreen&quot;&gt;&lt;code&gt;Element.requestFullscreen()&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9688d9f557f598fe08cb399b8044e024e2f0fd" translate="yes" xml:space="preserve">
          <source>This starts by looking at the value of the &lt;code&gt;fullscreenElement&lt;/code&gt; attribute on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; (checking it prefixed with both &lt;code&gt;moz&lt;/code&gt;, &lt;code&gt;ms&lt;/code&gt;, or &lt;code&gt;webkit&lt;/code&gt;). If it's &lt;code&gt;null&lt;/code&gt;, the document is currently in windowed mode, so we need to switch to fullscreen mode. Switching to fullscreen mode is done by calling &lt;a href=&quot;../element/requestfullscreen&quot;&gt;&lt;code&gt;element.requestFullscreen()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d147da8698c4e403a249bb5ccf2c7a7aabd3851" translate="yes" xml:space="preserve">
          <source>This subtracts the time at which navigation began (&lt;a href=&quot;performancetiming/navigationstart&quot;&gt;&lt;code&gt;navigationStart&lt;/code&gt;&lt;/a&gt;) from the time at which the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler returns (&lt;a href=&quot;performancetiming/loadeventend&quot;&gt;&lt;code&gt;loadEventEnd&lt;/code&gt;&lt;/a&gt;). This gives you the perceived page load time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bbd1d4506490bfa1e7991b0283ca8e60d5badfa" translate="yes" xml:space="preserve">
          <source>This table shows the Windows scan codes representing keys and the &lt;code&gt;KeyboardEvent.code&lt;/code&gt; values which correspond to those hardware keys. Only keys which generate scan codes on Windows are listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7dbe84e4fe7112efd8901f0c31970b4be7a660e" translate="yes" xml:space="preserve">
          <source>This technique makes it simpler to process multi-file uploads because the resultant data structure is more conducive to looping.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7f1fe32ed5594775c17d7b527319423c2ccced7" translate="yes" xml:space="preserve">
          <source>This technique saves it to the desktop and is only useful in Firefox chrome context or add-on code as OS APIs are not present on web sites.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e1ae068f927195045eda4e9feb4db26c50bf78" translate="yes" xml:space="preserve">
          <source>This timeline is unique to each &lt;code&gt;document&lt;/code&gt; and persists for the lifetime of the &lt;code&gt;document&lt;/code&gt; including calls to &lt;a href=&quot;open&quot;&gt;&lt;code&gt;Document.open()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc09f2cb31fab7211ae9363350cf2cc6623b3eaa" translate="yes" xml:space="preserve">
          <source>This topic describes the &lt;code&gt;HTMLEmbedElement&lt;/code&gt; interface as defined in the standard. It does not address earlier, non-standardized version of the interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69ebfe46555f031c911bad61ffbab40b45cc89c7" translate="yes" xml:space="preserve">
          <source>This transaction model is really useful when you consider what might happen if a user opened two instances of your web app in two different tabs simultaneously. Without transactional operations, the two instances could interfere with each other's modifications. If you are not familiar with transactions in a database, read the &lt;a href=&quot;https://en.wikipedia.org/wiki/Database_transaction&quot;&gt;Wikipedia article on transactions&lt;/a&gt;. Also see &lt;a href=&quot;#gloss_transaction&quot;&gt;transaction&lt;/a&gt; under the Definitions section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a89033b36b3b3744465782a14842b0486542424" translate="yes" xml:space="preserve">
          <source>This tutorial describes how to use the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element to draw 2D graphics, starting with the basics. The examples provided should give you some clear ideas what you can do with canvas and will provide code snippets that may get you started in building your own content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0a6b60fd244e4cc9e86468e2e06384f155b217" translate="yes" xml:space="preserve">
          <source>This tutorial walks you through using the asynchronous API of IndexedDB. If you are not familiar with IndexedDB, you should first read &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Basic_Concepts_Behind_IndexedDB&quot;&gt;Basic Concepts About IndexedDB&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea7fb78ba540215ae5e78cacdf2e484fe457690" translate="yes" xml:space="preserve">
          <source>This type represents a DOM element's attribute as an object. In most DOM methods, you will probably directly retrieve the attribute as a string (e.g., &lt;a href=&quot;element/getattribute&quot;&gt;&lt;code&gt;Element.getAttribute()&lt;/code&gt;&lt;/a&gt;, but certain functions (e.g., &lt;a href=&quot;element/getattributenode&quot;&gt;&lt;code&gt;Element.getAttributeNode()&lt;/code&gt;&lt;/a&gt;) or means of iterating give &lt;code&gt;Attr&lt;/code&gt; types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04763fafc21e8131446e04a8e90665a9613343bc" translate="yes" xml:space="preserve">
          <source>This uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse&quot;&gt;&lt;code&gt;JSON.parse()&lt;/code&gt;&lt;/a&gt; to parse the code in each editor into an object. If either call to JSON.parse() throws an exception, &lt;code&gt;handleError()&lt;/code&gt; is called to output the error message to the log.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="266bf42f8c8fc7bc202f8b5c7fa901006d70be8f" translate="yes" xml:space="preserve">
          <source>This uses &lt;code&gt;-moz-parse&lt;/code&gt; to convert the canvas to ico. Windows XP doesn't support converting from PNG to ico, so it uses bmp instead. A download link is created by setting the download attribute. The value of the download attribute is the name it will use as the file name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5254fd14b47cbde821d59a7c183ab837b4dadf" translate="yes" xml:space="preserve">
          <source>This uses the panel as the drag image, with the string &quot;&amp;lt;strong&amp;gt;Body&amp;lt;/strong&amp;gt;&quot; as its data, in HTML format. Dropping the panel into a text editor results in the text &quot;&lt;strong&gt;Body&lt;/strong&gt;&quot; being inserted into the text at the drop location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b97c672f9bb40efe7e1e9ba39840aa7c5deac8c0" translate="yes" xml:space="preserve">
          <source>This uses the promise-version of the method, as supported in recent implementations (Firefox 47, for example.) If you want to support older versions, you might have to use the older callback version, which looks like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f901e4a8f38e46e2822f4795dcc201416e5ff8ff" translate="yes" xml:space="preserve">
          <source>This value can be overridden by a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-formenctype&quot;&gt;formenctype&lt;/a&gt;&lt;/code&gt; attribute on a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50412f0aaa54cf253f1cd92be2d9633f76d551c8" translate="yes" xml:space="preserve">
          <source>This value controls how frequently the &lt;code&gt;audioprocess&lt;/code&gt; event is dispatched and how many sample-frames need to be processed each call. Lower values for &lt;code&gt;bufferSize&lt;/code&gt; will result in a lower (better) latency. Higher values will be necessary to avoid audio breakup and glitches. It is recommended for authors to not specify this buffer size and allow the implementation to pick a good buffer size to balance between latency and audio quality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cffa70719dfcb186c86381deab00c98756eec5" translate="yes" xml:space="preserve">
          <source>This value is assumed to be 1 by default if not included in the &lt;code&gt;DOMPointInit&lt;/code&gt; object passed into &lt;code&gt;fromPoint()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eceb9ed3aa84ebfa6adfdfce105bd261257f24c1" translate="yes" xml:space="preserve">
          <source>This value is not typically as useful as &lt;a href=&quot;acceleration&quot;&gt;&lt;code&gt;DeviceMotionEvent.acceleration&lt;/code&gt;&lt;/a&gt;, but may be the only value available on devices that aren't able of removing gravity from the acceleration data, such as on devices that don't have a gyroscope.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9301e50dafeb0f36e4e229ac7d9a9c55611adcc0" translate="yes" xml:space="preserve">
          <source>This value is only used while in unordered (sometimes called &quot;unreliable&quot;) mode; that is, if &lt;a href=&quot;ordered&quot;&gt;&lt;code&gt;ordered&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46c113b1b282fa0d0ed74cc65b531c9d94dc4b6c" translate="yes" xml:space="preserve">
          <source>This value is specified when creating the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; by setting the corresponding &lt;a href=&quot;../rtcicecandidateinit/sdpmlineindex&quot;&gt;&lt;code&gt;sdpMLineIndex&lt;/code&gt;&lt;/a&gt; value in the &lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt; object when creating a new candidate with &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;new RTCIceCandidate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d5d79c3a7be3dc3b0b8d9a0fd04d53672377e9" translate="yes" xml:space="preserve">
          <source>This value is specified when creating the &lt;a href=&quot;../rtcicecandidate&quot;&gt;&lt;code&gt;RTCIceCandidate&lt;/code&gt;&lt;/a&gt; by setting the corresponding &lt;a href=&quot;../rtcicecandidateinit/usernamefragment&quot;&gt;&lt;code&gt;usernameFragment&lt;/code&gt;&lt;/a&gt; value in the &lt;a href=&quot;../rtcicecandidateinit&quot;&gt;&lt;code&gt;RTCIceCandidateInit&lt;/code&gt;&lt;/a&gt; object when creating a new candidate with &lt;a href=&quot;rtcicecandidate&quot;&gt;&lt;code&gt;new RTCIceCandidate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42eb4eefe4cb78925ae4ab6920d5a91daea9ced9" translate="yes" xml:space="preserve">
          <source>This value is the number of milliseconds elapsed from the beginning of the current document's lifetime till the event was created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="801e1cc13528668d75b8cfd8a06f01d87d482572" translate="yes" xml:space="preserve">
          <source>This variable will be used to record what the visibility ratio was the last time a threshold was crossed; this will let us figure out whether the target element is becoming more or less visible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8babe6068557e4f9917fb3a1344a6d705bb53bc3" translate="yes" xml:space="preserve">
          <source>This version of the example above supports older browser versions that require you to create an object URL and assign it to &lt;code&gt;src&lt;/code&gt; if &lt;code&gt;srcObject&lt;/code&gt; isn't supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="735ee3d93db00c1d3ada6dc22f6c227ba67d27be" translate="yes" xml:space="preserve">
          <source>This was previously defined within the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/the-video-element.html#htmlmediaelement&quot;&gt;WHATWG HTML Living Standard&lt;/a&gt;, though was removed because of missing use cases.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f824aed21660327716d780eba6b4a0f934803638" translate="yes" xml:space="preserve">
          <source>This way should be avoided. This makes the markup bigger and less readable. Concerns of content/structure and behavior are not well-separated, making a bug harder to find.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2aa6823336967819380aa656ac3318c1d8787e2" translate="yes" xml:space="preserve">
          <source>This way you are sure you are seeing the value of &lt;code&gt;obj&lt;/code&gt; at the moment you log it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="327538858dc3cc7443d676095f3d03b391baab1f" translate="yes" xml:space="preserve">
          <source>This will act exactly like the user clicked on the Back button in their browser toolbar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f3240253be88d029c1cb4836b1809b53ceb93e" translate="yes" xml:space="preserve">
          <source>This will be set to the element that represents the ad. For new ads being appended to the page, this is created using &lt;a href=&quot;../document/createelement&quot;&gt;&lt;code&gt;Document.createElement()&lt;/code&gt;&lt;/a&gt;. When replacing an existing ad, this is set to the specified ad element (&lt;code&gt;replaceBox&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7727797f9437070fb293129410ae76b7fbecc15" translate="yes" xml:space="preserve">
          <source>This will cause the URL bar to display http://mozilla.org/bar.html, but won't cause the browser to load &lt;code&gt;bar.html&lt;/code&gt; or even check that &lt;code&gt;bar.html&lt;/code&gt; exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d837e542160cb17eb876d7664fa6f50039c3a792" translate="yes" xml:space="preserve">
          <source>This will cause the URL bar to display http://mozilla.org/bar2.html, but won't cause the browser to load &lt;code&gt;bar2.html&lt;/code&gt; or even check that &lt;code&gt;bar2.html&lt;/code&gt; exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c52eb25cbe1673eafd128fe1b02d9a6b6ff2d7f8" translate="yes" xml:space="preserve">
          <source>This will log &quot;The Philippine eagle is endangered!&quot; to the console, since the element has indeed a &lt;code&gt;class&lt;/code&gt; attribute with value &lt;code&gt;endangered&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4f6f5fc4542573b628f10c91091513fd0833b6" translate="yes" xml:space="preserve">
          <source>This will only work when a namespace-aware parser is used, i.e. when a document is served with an XML MIME type. This will not work for HTML documents.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3571a84701cc6034d1af8476a309c577e1122c" translate="yes" xml:space="preserve">
          <source>This will only work with XML, not HTML documents (as HTML documents do not support CDATA sections); attempting it on an HTML document will throw &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfb0cfc971b618b3870f407f6c8e325cf7c85cb" translate="yes" xml:space="preserve">
          <source>This will return &lt;code&gt;null&lt;/code&gt; if no active worker is already controlling the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b99a9953034ad11619682833e690f92caf2bee6a" translate="yes" xml:space="preserve">
          <source>This works because a sound that contains only a fundamental tone is by definition a sine wave</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e167054dd71b231dc57c33c736abf6e6b44c385b" translate="yes" xml:space="preserve">
          <source>This works because a sound that contains only a fundamental tone is by definition a sine wave.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7660f740169a7e3bfc719c4d1f9aa14ddac555a5" translate="yes" xml:space="preserve">
          <source>This works by calling &lt;a href=&quot;../mediastream/gettracks&quot;&gt;&lt;code&gt;MediaStream.getTracks()&lt;/code&gt;&lt;/a&gt;, using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; to call &lt;a href=&quot;../mediastreamtrack/stop&quot;&gt;&lt;code&gt;MediaStreamTrack.stop()&lt;/code&gt;&lt;/a&gt; on each track in the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0a67aa59d4ad0e485026525a94850ed7325bcec" translate="yes" xml:space="preserve">
          <source>This works by creating an internal function, &lt;code&gt;getEntries()&lt;/code&gt;, which calls itself recursively to get all the entries in the directory, concatenating each batch to the array. Each iteration, &lt;a href=&quot;../filesystemdirectoryreader/readentries&quot;&gt;&lt;code&gt;readEntries()&lt;/code&gt;&lt;/a&gt; is called to get more entries. When it returns an empty array, the end of the directory has beenr reached, and the recursion ends. Once control is returned to &lt;code&gt;readDirectory()&lt;/code&gt;, the array is returned to the caller.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="398af085a23de804b28d07899fc3d096f78e4b7f" translate="yes" xml:space="preserve">
          <source>This works by obtaining the video element's stream from its &lt;a href=&quot;../htmlmediaelement/srcobject&quot;&gt;&lt;code&gt;srcObject&lt;/code&gt;&lt;/a&gt; property. Then the stream's track list is obtained by calling its &lt;a href=&quot;../mediastream/gettracks&quot;&gt;&lt;code&gt;getTracks()&lt;/code&gt;&lt;/a&gt; method. From there, all that remains to do is to iterate over the track list using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt; and calling each track's &lt;code&gt;stop()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eedd07b0478e479b3790a318da73f3d187478df" translate="yes" xml:space="preserve">
          <source>This would be the equivalent of defining the following HTML tag inside the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bc3c618651c8e914facb574ac3293a28307aa9" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;Document.location&lt;/code&gt; is a &lt;em&gt;read-only&lt;/em&gt;&lt;code&gt;Location&lt;/code&gt; object, you can also assign a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; to it. This means that you can work with document.location as if it were a string in most cases: &lt;code&gt;document.location = 'http://www.example.com'&lt;/code&gt; is a synonym of &lt;code&gt;document.location.href = 'http://www.example.com'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f66e6f0c1d9138eb8642dab085d22215171ab088" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;body&lt;/code&gt; is settable, setting a new body on a document will effectively remove all the current children of the existing &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7857a86393cd9612759c6a41ad7053a3cc829d68" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;value&lt;/code&gt; can be set, any modifications happening while there are automation events scheduled&amp;mdash;that is, events scheduled using the methods of the &lt;code&gt;AudioParam&lt;/code&gt;&amp;mdash;are ignored, without raising any exception.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82c1a0b0740738fba5998b696fb23cb19ef928e9" translate="yes" xml:space="preserve">
          <source>Three arguments are necessary. The first is a reference to an image. This reference will typically be to an image element, but it can also be to a canvas or any other element. The feedback image will simply be generated from whatever the image looks like on screen, although for images, they will be drawn at their original size. The second and third arguments to the &lt;a href=&quot;../datatransfer/setdragimage&quot;&gt;&lt;code&gt;setDragImage()&lt;/code&gt;&lt;/a&gt; method are offsets where the image should appear relative to the mouse pointer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae550fb2cb0f70061ab370bc47f517cd2dc6c1af" translate="yes" xml:space="preserve">
          <source>Three effects may be defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cad632356370afd0da311ec01fb6ce353127fec" translate="yes" xml:space="preserve">
          <source>Thresholds</source>
          <target state="translated">Thresholds</target>
        </trans-unit>
        <trans-unit id="3289215d106d0550f4d633f6b69562c5ae9c813b" translate="yes" xml:space="preserve">
          <source>Thrown if &lt;code&gt;array&lt;/code&gt; is specified, but its length is not a multiple of &lt;code&gt;(4 * width)&lt;/code&gt; or &lt;code&gt;(4 * width * height)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1368d7b60e7d038d79737a3cf601d4598f0e164d" translate="yes" xml:space="preserve">
          <source>Thrown if any of the arguments is infinite.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0d6f2db218fcabc8b900e7014bd0c56a6c1b802" translate="yes" xml:space="preserve">
          <source>Thrown if either &lt;code&gt;sw&lt;/code&gt; or &lt;code&gt;sh&lt;/code&gt; are zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f74d6b54335401e40e9a66353971e876ed5ebdb9" translate="yes" xml:space="preserve">
          <source>Thrown if either of the &lt;code&gt;width&lt;/code&gt; or &lt;code&gt;height&lt;/code&gt; arguments is zero.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0324b3ab66424c5702c72e8bb436501764ab0da" translate="yes" xml:space="preserve">
          <source>Thrown if the &lt;code&gt;ImageData&lt;/code&gt; object's data has been detached.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f37ef217d6fa71abfad4b52fc9a8c1d4016ca2" translate="yes" xml:space="preserve">
          <source>Thrown in any of the following circumstances:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8e6dfce02020b9e495bf7222933e43da3d58b4b" translate="yes" xml:space="preserve">
          <source>Thrown when &lt;code&gt;abort&lt;/code&gt; is called while no read operation is in progress (that is, the state isn't &lt;code&gt;LOADING&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c246ad5f2c8d636197cd25ec66d0827661ad74de" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;RangeError&lt;/code&gt; exception for unknown encoding types.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66897c4e3b6ee4d4917629e34d0e205240e875b2" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;InvalidStateError&lt;/code&gt; if the animation's &lt;a href=&quot;currenttime&quot;&gt;&lt;code&gt;currentTime&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;unresolved&lt;/code&gt; (perhaps it hasn't started playing yet) and the end time of the animation is positive infinity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bdea5c61d99d8aa19b4775eac5e6c078533780e" translate="yes" xml:space="preserve">
          <source>Thus, it's important to note that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; never sends a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; event, unless the user agent itself implements a payment handler. For instance, Safari has integrated support for Apple Pay, so the Apple Pay payment handler uses this to ensure that Apple Pay can be used to pay the merchant by sending &lt;code&gt;merchantvalidation&lt;/code&gt; to the client, instructing it to fetch the server's validation data and deliver it to the payment handler by calling &lt;code&gt;complete()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246d4b1e22ca77e2e4c52c7ad4bddc528ec75d23" translate="yes" xml:space="preserve">
          <source>Tiles the image horizontally but not vertically.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c61b2b777794069392ac57d5d188bff476afd99" translate="yes" xml:space="preserve">
          <source>Tiles the image in both vertical and horizontal directions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eab388306905a6ee63a29bba3975b49530a2ce6" translate="yes" xml:space="preserve">
          <source>Tiles the image vertically but not horizontally.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce85b6a45a5d454bc25a961aa59413abd5e041a6" translate="yes" xml:space="preserve">
          <source>Time and Clock API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49882bd522a677ad295e39e84253b972274ae588" translate="yes" xml:space="preserve">
          <source>Time since &lt;code&gt;startTime&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08dd6b4f2472169d97bd2e840b80d60e01616a2" translate="yes" xml:space="preserve">
          <source>TimeEvent</source>
          <target state="translated">TimeEvent</target>
        </trans-unit>
        <trans-unit id="6e9104aba3fe18e4dd8562ba5f52cb92ded067dc" translate="yes" xml:space="preserve">
          <source>TimeRanges</source>
          <target state="translated">TimeRanges</target>
        </trans-unit>
        <trans-unit id="b91c16b2e169c66407442e97de1139642237faba" translate="yes" xml:space="preserve">
          <source>TimeRanges.end</source>
          <target state="translated">TimeRanges.end</target>
        </trans-unit>
        <trans-unit id="6e67954b5a5eb3cc7559185308feb680838f2252" translate="yes" xml:space="preserve">
          <source>TimeRanges.length</source>
          <target state="translated">TimeRanges.length</target>
        </trans-unit>
        <trans-unit id="0c5f7704880fb9c4e108c4721a981d2ab8a4fcb9" translate="yes" xml:space="preserve">
          <source>TimeRanges.start</source>
          <target state="translated">TimeRanges.start</target>
        </trans-unit>
        <trans-unit id="ef1258d8d00628ceb619d9da1eb4d43759e2fd1a" translate="yes" xml:space="preserve">
          <source>TimeStamp</source>
          <target state="translated">TimeStamp</target>
        </trans-unit>
        <trans-unit id="018514a3d58aa08353dd5e387ee29de45981c409" translate="yes" xml:space="preserve">
          <source>Timeline</source>
          <target state="translated">Timeline</target>
        </trans-unit>
        <trans-unit id="6752f551fbfecff63766bea2102fe898b4c54183" translate="yes" xml:space="preserve">
          <source>Timeline.Using Performance Timeline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00b2c4840a20d45aa9ecf62a1991416e8b4ff2c4" translate="yes" xml:space="preserve">
          <source>Timeline.currentTime</source>
          <target state="translated">Timeline.currentTime</target>
        </trans-unit>
        <trans-unit id="ded9447ea4e08c6a9bcfdb35b1698aa271794ce9" translate="yes" xml:space="preserve">
          <source>Timer tasks are only permitted when the budget is non-negative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="89b0d12e2ee4d68beac8a9fda88be670c3a642cc" translate="yes" xml:space="preserve">
          <source>Timers such as &lt;a href=&quot;windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;setTimeout()&lt;/code&gt;&lt;/a&gt; are throttled in background/inactive tabs to help improve performance. See &lt;a href=&quot;windoworworkerglobalscope/settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;Reasons for delays longer than specified&lt;/a&gt; for more details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="098024dc5537ca3623978ac7c0a6140ce39062b8" translate="yes" xml:space="preserve">
          <source>Timing</source>
          <target state="translated">Timing</target>
        </trans-unit>
        <trans-unit id="95748d8aa627fd143769017f59399e4fd4cb8e26" translate="yes" xml:space="preserve">
          <source>Timing element visibility with the Intersection Observer API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aedc8fcdd3b7047ed5bcdf414aa8bee370b63fa" translate="yes" xml:space="preserve">
          <source>Timing resource loading phases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80c182553d1d1efeed78c239d34ed9f7ff8bcd98" translate="yes" xml:space="preserve">
          <source>Timing.connectEnd</source>
          <target state="translated">Timing.connectEnd</target>
        </trans-unit>
        <trans-unit id="f0074fc97577913c248260d0c9e500aec02c374d" translate="yes" xml:space="preserve">
          <source>Timing.connectStart</source>
          <target state="translated">Timing.connectStart</target>
        </trans-unit>
        <trans-unit id="fadd20f6900251cd7aa471bdbbc3ef78f49a48dd" translate="yes" xml:space="preserve">
          <source>Timing.domComplete</source>
          <target state="translated">Timing.domComplete</target>
        </trans-unit>
        <trans-unit id="ac934d77b0537b9162781198f91ca69f11cabefc" translate="yes" xml:space="preserve">
          <source>Timing.domContentLoadedEventEnd</source>
          <target state="translated">Timing.domContentLoadedEventEnd</target>
        </trans-unit>
        <trans-unit id="80807426a10f677e9cc1f2c319fbbef5385b8c2c" translate="yes" xml:space="preserve">
          <source>Timing.domContentLoadedEventStart</source>
          <target state="translated">Timing.domContentLoadedEventStart</target>
        </trans-unit>
        <trans-unit id="c2e78ec9af6ad80f5adb39efca09464aac311638" translate="yes" xml:space="preserve">
          <source>Timing.domInteractive</source>
          <target state="translated">Timing.domInteractive</target>
        </trans-unit>
        <trans-unit id="b38b478f8fdc868ad8687f34880b08d861103c04" translate="yes" xml:space="preserve">
          <source>Timing.domLoading</source>
          <target state="translated">Timing.domLoading</target>
        </trans-unit>
        <trans-unit id="9045be14211f9833cc4e94d5a72713e9c9110118" translate="yes" xml:space="preserve">
          <source>Timing.domainLookupEnd</source>
          <target state="translated">Timing.domainLookupEnd</target>
        </trans-unit>
        <trans-unit id="bda458f4e0e4ef2c21eef9edd4bc0c8878cb95eb" translate="yes" xml:space="preserve">
          <source>Timing.domainLookupStart</source>
          <target state="translated">Timing.domainLookupStart</target>
        </trans-unit>
        <trans-unit id="d95e7b03a805188ad66751b2e8477f3bb24292a8" translate="yes" xml:space="preserve">
          <source>Timing.fetchStart</source>
          <target state="translated">Timing.fetchStart</target>
        </trans-unit>
        <trans-unit id="1010cb9e1f5de6097802a21e3f487f6101bd3e70" translate="yes" xml:space="preserve">
          <source>Timing.loadEventEnd</source>
          <target state="translated">Timing.loadEventEnd</target>
        </trans-unit>
        <trans-unit id="a4b9e9e0262d5044abed6d62996910b781bbf13d" translate="yes" xml:space="preserve">
          <source>Timing.loadEventStart</source>
          <target state="translated">Timing.loadEventStart</target>
        </trans-unit>
        <trans-unit id="7e6bb036b6f1fb58bef482ff06acc67db3f56327" translate="yes" xml:space="preserve">
          <source>Timing.navigationStart</source>
          <target state="translated">Timing.navigationStart</target>
        </trans-unit>
        <trans-unit id="f8b6da1bf269ec798d815dbe8ac6444f5a1a0fe5" translate="yes" xml:space="preserve">
          <source>Timing.redirectEnd</source>
          <target state="translated">Timing.redirectEnd</target>
        </trans-unit>
        <trans-unit id="00c28910d0d68b114bf0a48b797a055f18756c16" translate="yes" xml:space="preserve">
          <source>Timing.redirectStart</source>
          <target state="translated">Timing.redirectStart</target>
        </trans-unit>
        <trans-unit id="4c61dc4761845fac46dabe17289ece1afbabc4b2" translate="yes" xml:space="preserve">
          <source>Timing.requestStart</source>
          <target state="translated">Timing.requestStart</target>
        </trans-unit>
        <trans-unit id="1a300b68e9503798df50736557513cf6ae5d9529" translate="yes" xml:space="preserve">
          <source>Timing.responseEnd</source>
          <target state="translated">Timing.responseEnd</target>
        </trans-unit>
        <trans-unit id="807626cc9f3a93d05f0964922e71f8b5948a7935" translate="yes" xml:space="preserve">
          <source>Timing.responseStart</source>
          <target state="translated">Timing.responseStart</target>
        </trans-unit>
        <trans-unit id="77f4182e01fa4cb78712b3cb46aa81b2b3a4cbd3" translate="yes" xml:space="preserve">
          <source>Timing.secureConnectionStart</source>
          <target state="translated">Timing.secureConnectionStart</target>
        </trans-unit>
        <trans-unit id="d91038095504898135af5e192eab473449214882" translate="yes" xml:space="preserve">
          <source>Timing.unloadEventEnd</source>
          <target state="translated">Timing.unloadEventEnd</target>
        </trans-unit>
        <trans-unit id="84ea9d21ede716f03d3cf1fa6d44dc0d62880236" translate="yes" xml:space="preserve">
          <source>Timing.unloadEventStart</source>
          <target state="translated">Timing.unloadEventStart</target>
        </trans-unit>
        <trans-unit id="0235fe5afdcc3ed5d11f923f0e8a47f0527f8923" translate="yes" xml:space="preserve">
          <source>Title matches are case-sensitive.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4097f73f148088e74335d1c24ea5fd9e2c4dc40b" translate="yes" xml:space="preserve">
          <source>TitleElement</source>
          <target state="translated">TitleElement</target>
        </trans-unit>
        <trans-unit id="8298995d5b23e6d35e57580f8602fa050dde791b" translate="yes" xml:space="preserve">
          <source>To &lt;em&gt;require&lt;/em&gt; a capability, use the keywords &lt;code&gt;min&lt;/code&gt;, &lt;code&gt;max&lt;/code&gt;, or &lt;code&gt;exact&lt;/code&gt; (a.k.a. &lt;code&gt;min == max&lt;/code&gt;). The following demands a minimum resolution of 1280x720:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="396445e04d26a26a4e72fe38ed8591d07073f2fd" translate="yes" xml:space="preserve">
          <source>To &lt;em&gt;require&lt;/em&gt; the rear camera, use:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="662e7243845b4bd9465969b91cbd2880a23b92af" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;offset&lt;/code&gt; parameter's current value, access the parameter's &lt;code&gt;value&lt;/code&gt; property, as shown in the syntax box above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c571867088dd9d6cc96a14be9bd0957cae611a7" translate="yes" xml:space="preserve">
          <source>To add a header to the &lt;a href=&quot;../headers&quot;&gt;&lt;code&gt;Headers&lt;/code&gt;&lt;/a&gt; object we use &lt;a href=&quot;../headers/append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;; we then create a new &lt;code&gt;Request&lt;/code&gt; along with a 2nd init parameter, passing headers in as an init option:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="448827241e66fd937c05a22d35578f6514f206b9" translate="yes" xml:space="preserve">
          <source>To add a row and some cells to an existing table:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63d5e64694359921ef8d762708e7e0e8e442b7f" translate="yes" xml:space="preserve">
          <source>To add or remove items in &lt;code&gt;cssRules&lt;/code&gt;, use the &lt;code&gt;CSSStyleSheet&lt;/code&gt;'s &lt;code&gt;deleteRule()&lt;/code&gt; and &lt;code&gt;insertRule()&lt;/code&gt; methods, described below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d95e79732ad7a81ef00fb162753ef6805c4afa7" translate="yes" xml:space="preserve">
          <source>To allow opening the file picker without using JavaScript (the click() method), a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label&quot;&gt;&lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;&lt;/a&gt; element can be used. Note that in this case the input element must not be hidden using &lt;code&gt;display: none&lt;/code&gt; (nor &lt;code&gt;visibility: hidden&lt;/code&gt;), otherwise the label would not be keyboard-accessible. Use the &lt;a href=&quot;https://a11yproject.com/posts/how-to-hide-content/&quot;&gt;visually-hidden technique&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c70f12841dd2f1ef1435db17b0f917efb26183f4" translate="yes" xml:space="preserve">
          <source>To avoid the issue with &lt;code&gt;node.firstChild&lt;/code&gt; returning &lt;code&gt;#text&lt;/code&gt; or &lt;code&gt;#comment&lt;/code&gt; nodes, &lt;a href=&quot;../parentnode/firstelementchild&quot;&gt;&lt;code&gt;ParentNode.firstElementChild&lt;/code&gt;&lt;/a&gt; can be used to return only the first element node. However, &lt;code&gt;node.firstElementChild&lt;/code&gt; requires a shim for Internet Explorer 9 and earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e312614295a2b500eb56c352cb46a31b3f5213b" translate="yes" xml:space="preserve">
          <source>To be valid in an HTML document, a TR must have at least one TD element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b76da9adca9a2be9eae62f246eb64d0341a864" translate="yes" xml:space="preserve">
          <source>To begin, let's take a look at a simple example that draws two intersecting rectangles, one of which has alpha transparency. We'll explore how this works in more detail in later examples.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a413aad144f0eb08bd3b0f7df9c1cc0fe50876f" translate="yes" xml:space="preserve">
          <source>To cancel an event, call the &lt;a href=&quot;preventdefault&quot;&gt;&lt;code&gt;preventDefault()&lt;/code&gt;&lt;/a&gt; method on the event. This keeps the implementation from executing the default action that is associated with the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7191e01abf8a52a03bdebea0b2fe551363e893" translate="yes" xml:space="preserve">
          <source>To cancel the stream you then need to cancel both resulting branches. Teeing a stream will generally lock it for the duration, preventing other readers from locking it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f161d08d456a07ec8bc54920ee313223ddeabd29" translate="yes" xml:space="preserve">
          <source>To cause browsers to send a request with credentials included, even for a cross-origin call, add &lt;code&gt;credentials: 'include'&lt;/code&gt; to the &lt;code&gt;init&lt;/code&gt; object you pass to the &lt;code&gt;fetch()&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="815eb9d6a99b5f70832032b996f7bc7bcda08255" translate="yes" xml:space="preserve">
          <source>To change a particular element's style, you can adapt the following example for the element(s) you want to style.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9aace2c96ca797f69396e22bf9af257adaec32" translate="yes" xml:space="preserve">
          <source>To change the &quot;schema&quot; or structure of the database&amp;mdash;which involves creating or deleting object stores or indexes&amp;mdash;the transaction must be in &lt;code&gt;versionchange&lt;/code&gt; mode. This transaction is opened by calling the &lt;a href=&quot;../idbfactory/open&quot;&gt;&lt;code&gt;IDBFactory.open&lt;/code&gt;&lt;/a&gt; method with a &lt;code&gt;version&lt;/code&gt; specified. (In WebKit browsers, which have not implemented the latest specification, the &lt;a href=&quot;../idbfactory/open&quot;&gt;&lt;code&gt;IDBFactory.open&lt;/code&gt;&lt;/a&gt; method takes only one parameter, the &lt;code&gt;name&lt;/code&gt; of the database; then you must call &lt;a href=&quot;../idbversionchangerequest/setversion&quot;&gt;&lt;code&gt;IDBVersionChangeRequest.setVersion&lt;/code&gt;&lt;/a&gt; to establish the &lt;code&gt;versionchange&lt;/code&gt; transaction.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37b06f2e1f02711fff008f2a4b7ee20695a5adee" translate="yes" xml:space="preserve">
          <source>To change the &lt;code&gt;startOffset&lt;/code&gt; of a &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;setstart&quot;&gt;&lt;code&gt;Range.setStart&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c87e45703da15f7615e36ea51433444b9656dec" translate="yes" xml:space="preserve">
          <source>To check if multiple files are being dragged, check the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozItemCount&quot;&gt;&lt;code&gt;mozItemCount&lt;/code&gt;&lt;/a&gt; property. It will be set to the number of items being dragged. If a particular drop target only supports dropping a single item, it could either reject the dragged items or it could just use just the first item. To reject the items, either don't cancel the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event, or set the &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;none&lt;/code&gt;. You may wish to do both in case another listener has already cancelled the event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e690d5a799cf0ff220a3a26348ce45ad81117cdc" translate="yes" xml:space="preserve">
          <source>To check if the browser supports a particular container, you can pass a string of the MIME type to the &lt;a href=&quot;../mediasource/istypesupported&quot;&gt;&lt;code&gt;MediaSource.isTypeSupported&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c577ff403e9ee2d0f09c15b80f83eeb5fde85769" translate="yes" xml:space="preserve">
          <source>To check if you are online, query &lt;code&gt;window.navigator.onLine&lt;/code&gt;, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41647ca2da2218218ab655f62c07a0919acdba3" translate="yes" xml:space="preserve">
          <source>To check whether an MP4 file is a proper MP4 stream, you can again use the &lt;a href=&quot;http://nickdesaulniers.github.io/mp4info/&quot;&gt;mp4info&lt;/a&gt; utility to list the atoms of an MP4.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12514015ba63eda53db0137a6256b7434b21fd94" translate="yes" xml:space="preserve">
          <source>To clone a node for appending to a different document, use &lt;a href=&quot;../document/importnode&quot;&gt;&lt;code&gt;Document.importNode()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e40a2020e8fdaaa7aff32ead9ff588fc7d301a" translate="yes" xml:space="preserve">
          <source>To comply with the specification, starting with Gecko 16.0 (Firefox 16.0 / Thunderbird 16.0 / SeaMonkey 2.13), a call with an invalid number of arguments (only 3 or 7 arguments are valid), will now throw an error (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=762657&quot;&gt;bug 762657&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344df288c7c556a0721b97534f7dee93ded2e8f5" translate="yes" xml:space="preserve">
          <source>To compute the total amount of time it took to load the page, you can use the following code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53877b60d5924d7e4cc7e575d878b03340919d34" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;Blob&lt;/code&gt; from other non-blob objects and data, use the &lt;a href=&quot;blob/blob&quot;&gt;&lt;code&gt;Blob()&lt;/code&gt;&lt;/a&gt; constructor. To create a blob that contains a subset of another blob's data, use the &lt;a href=&quot;blob/slice&quot;&gt;&lt;code&gt;slice()&lt;/code&gt;&lt;/a&gt; method. To obtain a &lt;code&gt;Blob&lt;/code&gt; object for a file on the user's file system, see the &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; documentation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8719340e7f850a97595b55014f4d654d72832dab" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;FormData&lt;/code&gt; object that contains the data from an existing &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt;, specify that form element when creating the &lt;code&gt;FormData&lt;/code&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d26e78870f1f2728aa68335eb3f85d10c09411b" translate="yes" xml:space="preserve">
          <source>To convert our sample media from a QuickTime MOV container to an MP4 container, we can use ffmpeg. Because the audio codec in the MOV container is already AAC and the video codec is h.264, we can instruct ffmpeg not to perform transcoding. Instead, it will just copy the audio and video tracks over without performing any transcoding, which is relatively faster than having to transcode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="738f174950c608678e138210dc3a87d90264d0d7" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;DOMParser&lt;/code&gt; object simply use &lt;code&gt;new DOMParser()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6474cb39f5fbc99fbb1f86fffd4730d1d065a3e0" translate="yes" xml:space="preserve">
          <source>To create a data channel and ask a remote peer to join you, call the &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;createDataChannel()&lt;/code&gt;&lt;/a&gt; method. The peer being invited to exchange data receives a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event (which has type &lt;a href=&quot;rtcdatachannelevent&quot;&gt;&lt;code&gt;RTCDataChannelEvent&lt;/code&gt;&lt;/a&gt;) to let it know the data channel has been added to the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9f9dab0e3c513bd98b319d01dfcf44b9793a161" translate="yes" xml:space="preserve">
          <source>To create a new &lt;code&gt;DOMPoint&lt;/code&gt;, you could run a line of code like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d433bbee9b669f7885abd51f4991ee416c73b32" translate="yes" xml:space="preserve">
          <source>To create a new &lt;code&gt;DOMRect&lt;/code&gt;, you could run a line of code like so:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09fff1925f241d020c7458e751f86d846e4b1a14" translate="yes" xml:space="preserve">
          <source>To create a new, blank &lt;code&gt;ImageData&lt;/code&gt; object, you should use the &lt;a href=&quot;../../canvasrenderingcontext2d/createimagedata&quot;&gt;&lt;code&gt;createImageData()&lt;/code&gt;&lt;/a&gt; method. There are two versions of the &lt;code&gt;createImageData()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b019924a5773f0a440d40c800c6e923ebbfeb146" translate="yes" xml:space="preserve">
          <source>To create the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article&quot;&gt;&lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt;&lt;/a&gt; element for an article (as well as all of its contents), we use the &lt;code&gt;createArticle()&lt;/code&gt; function, which takes as input a string which is the full text of the article to add to the page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e7109479ee0caf0d2722edae7ddc0a01ac8fc4" translate="yes" xml:space="preserve">
          <source>To demonstrate basic usage of the MediaRecorder API, we have built a web-based dictaphone. It allows you to record snippets of audio and then play them back. It even gives you a visualization of your device's sound input, using the Web Audio API. We'll concentrate on the recording and playback functionality for this article.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80f4b45531f7def7aa63f9243b950a9be19a15d" translate="yes" xml:space="preserve">
          <source>To determine if the add operation has completed successfully, listen for the results&amp;rsquo;s &lt;code&gt;success&lt;/code&gt; event.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="608b21252cf2f13dca1e0d1a9e72937267943958" translate="yes" xml:space="preserve">
          <source>To determine if the add operation has completed successfully, listen for the transaction&amp;rsquo;s &lt;code&gt;complete&lt;/code&gt; event in addition to the &lt;code&gt;IDBObjectStore.add&lt;/code&gt; request&amp;rsquo;s &lt;code&gt;success&lt;/code&gt; event, because the transaction may still fail after the success event fires. In other words, the success event is only triggered when the transaction has been successfully queued.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c72cd0a1fb8e149b0fab0e0da2499809873f1d84" translate="yes" xml:space="preserve">
          <source>To determine the actual latency of the context after creating it, check the value of the context's &lt;a href=&quot;../audiocontext/baselatency&quot;&gt;&lt;code&gt;baseLatency&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d542d0077615de3bcaf1f78616a201e43f080e3b" translate="yes" xml:space="preserve">
          <source>To determine what character corresponds with the key event, use the &lt;a href=&quot;key&quot;&gt;&lt;code&gt;KeyboardEvent.key&lt;/code&gt;&lt;/a&gt; property instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6afbec8710d28b81e39b55df61deb644166c3915" translate="yes" xml:space="preserve">
          <source>To display the &lt;code&gt;ImageBitmap&lt;/code&gt;, you can use a &lt;a href=&quot;imagebitmaprenderingcontext&quot;&gt;&lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt;&lt;/a&gt; context, which can be created by calling &lt;code&gt;canvas.getContext(&quot;bitmaprenderer&quot;)&lt;/code&gt; on a (visible) canvas element. This context only provides functionality to replace the canvas's contents with the given &lt;code&gt;ImageBitmap&lt;/code&gt;. A call to &lt;a href=&quot;imagebitmaprenderingcontext/transferfromimagebitmap&quot;&gt;&lt;code&gt;ImageBitmapRenderingContext.transferFromImageBitmap()&lt;/code&gt;&lt;/a&gt; with the previously rendered and saved &lt;code&gt;ImageBitmap&lt;/code&gt; from the OffscreenCanvas, will display the &lt;code&gt;ImageBitmap&lt;/code&gt; on the canvas and transfer its ownership to the canvas. A single &lt;code&gt;OffscreenCanvas&lt;/code&gt; may transfer frames into an arbitrary number of other &lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5892a465c8af085abac9c099c32f229692f7ec" translate="yes" xml:space="preserve">
          <source>To do this, it's possible to add a tag to any new notification. If a notification already has the same tag and has not been displayed yet, the new notification replaces that previous notification. If the notification with the same tag has already been displayed, the previous notification is closed and the new one is displayed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c846e4a0839c2bbfdbe1c52248d4b8968364da8d" translate="yes" xml:space="preserve">
          <source>To drag multiple links, you can also separate each link with a linebreak. A line that begins with a number sign (#) is a comment and should not be considered a valid URL. You can use a comment to indicate the purpose of a link, or to hold the title associated with a link. The &lt;code&gt;text/plain&lt;/code&gt; version of the drag data should include all links but should not include the comments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01089a8722af554a019428b687511c108fb54bf3" translate="yes" xml:space="preserve">
          <source>To draw arcs or circles, we use the &lt;code&gt;arc()&lt;/code&gt; or &lt;code&gt;arcTo()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dcbe6d8bccf7eaa41d142dbf53b137d54b46724" translate="yes" xml:space="preserve">
          <source>To draw the outlines of the characters in a string, call the context's &lt;a href=&quot;stroketext&quot;&gt;&lt;code&gt;strokeText()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55cfd8bf5236d5b63fc4416aa7f7778936126e75" translate="yes" xml:space="preserve">
          <source>To enqueue the task, we &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push&quot;&gt;push&lt;/a&gt; an object onto the &lt;code&gt;taskList&lt;/code&gt; array; the object contains the &lt;code&gt;taskHandler&lt;/code&gt; and &lt;code&gt;taskData&lt;/code&gt; values under the names &lt;code&gt;handler&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt;, respectively, then increment &lt;code&gt;totalTaskCount&lt;/code&gt;, which reflects the total number of tasks which have ever been enqueued (we don't decrement it when tasks are removed from the queue).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1965f92cf5f4ba9eb25e98547419a4a0ea6d42d0" translate="yes" xml:space="preserve">
          <source>To ensure that keystrokes go to the sample code, click inside the black game play field below before pressing keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fe056a8764321a8a16562bff6fc19385806dac" translate="yes" xml:space="preserve">
          <source>To ensure that keystrokes go to the sample, click in the output box below before pressing keys.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29703be6e59b80fd10dfd1f80ab5ef40c9301988" translate="yes" xml:space="preserve">
          <source>To escape a string for use as part of a selector, the &lt;code&gt;escape()&lt;/code&gt; method can be used:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ced466a516a9cfab6ce8eea1804622122a57f95" translate="yes" xml:space="preserve">
          <source>To exit the current group, call &lt;code&gt;console.groupEnd()&lt;/code&gt;. For example, given this code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4df87ac398e96158512ac342b5bef97d37367f8" translate="yes" xml:space="preserve">
          <source>To exit the current group, simply call &lt;code&gt;console.groupEnd()&lt;/code&gt;. For example, given this code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519d1de70bf0c140e57277967613e2ef0ac9598b" translate="yes" xml:space="preserve">
          <source>To find elements whose class lists include both the &lt;code&gt;red&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; classes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428587c08b7413c764c694e592894bb18995f6ab" translate="yes" xml:space="preserve">
          <source>To fix this, you have to be very precise in your path creation. Knowing that a &lt;code&gt;1.0&lt;/code&gt; width line will extend half a unit to either side of the path, creating the path from (3.5,1) to (3.5,5) results in the situation in the third image&amp;mdash;the &lt;code&gt;1.0&lt;/code&gt; line width ends up completely and precisely filling a single pixel vertical line.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e648301519e3501d63c95c7aa19c880ff44b5aeb" translate="yes" xml:space="preserve">
          <source>To get a feeling for how thresholds work, try scrolling the box below around. Each colored box within it displays the percentage of itself that's visible in all four of its corners, so you can see these ratios change over time as you scroll the container. Each box has a different set of thresholds:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d28f710efe0e52e0fd9b2d43dc70ee30a5ee5e" translate="yes" xml:space="preserve">
          <source>To get a media element's &lt;a href=&quot;audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt;, use its &lt;a href=&quot;htmlmediaelement/audiotracks&quot;&gt;&lt;code&gt;audioTracks&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8ca7d6ccefbdea8a0ffe412ce9bcd14469e9ce0" translate="yes" xml:space="preserve">
          <source>To get access to a database, call &lt;a href=&quot;idbfactory/open&quot;&gt;&lt;code&gt;open()&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;windoworworkerglobalscope/indexeddb&quot;&gt;&lt;code&gt;indexedDB&lt;/code&gt;&lt;/a&gt; attribute of a &lt;a href=&quot;window&quot;&gt;window&lt;/a&gt; object. This method returns an &lt;a href=&quot;idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; object; asynchronous operations communicate to the calling application by firing events on &lt;a href=&quot;idbrequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a34fd28bb9ba77903ccd0aab64b9ccfff89e8e" translate="yes" xml:space="preserve">
          <source>To get an &lt;code&gt;AudioTrack&lt;/code&gt; for a given media element, use the element's &lt;a href=&quot;htmlmediaelement/audiotracks&quot;&gt;&lt;code&gt;audioTracks&lt;/code&gt;&lt;/a&gt; property, which returns an &lt;a href=&quot;audiotracklist&quot;&gt;&lt;code&gt;AudioTrackList&lt;/code&gt;&lt;/a&gt; object from which you can get the individual tracks contained in the media:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0032876d44bbd44e73423179c78157bcb5ad744c" translate="yes" xml:space="preserve">
          <source>To get an instance &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;, call &lt;a href=&quot;htmlcanvaselement/getcontext&quot;&gt;&lt;code&gt;getContext()&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;canvas&lt;/code&gt; element, supplying &lt;code&gt;2d&lt;/code&gt; as the argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d80faaf01a20a886995b631139f98ed13dacc35" translate="yes" xml:space="preserve">
          <source>To get some control over the ball, we can make it follow our mouse using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events/mousemove&quot;&gt;mousemove&lt;/a&gt;&lt;/code&gt; event, for example. The &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event releases the ball and lets it bounce again.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f8185dc67f23cd52eb7c9e2bd71d789e5ef6b7" translate="yes" xml:space="preserve">
          <source>To get the current value of an attribute, use &lt;a href=&quot;getattribute&quot;&gt;&lt;code&gt;getAttribute()&lt;/code&gt;&lt;/a&gt;; to remove an attribute, call &lt;a href=&quot;removeattribute&quot;&gt;&lt;code&gt;removeAttribute()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6352adf9ce1836e450ee752e471556c9f33880b5" translate="yes" xml:space="preserve">
          <source>To get to the &lt;code&gt;style&lt;/code&gt; objects from the &lt;code&gt;document&lt;/code&gt;, you can use the &lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt;&lt;code&gt;document.styleSheets&lt;/code&gt;&lt;/a&gt; property and access the individual objects by index (e.g., &lt;code&gt;document.styleSheets[0]&lt;/code&gt; is the first stylesheet defined for the document, etc.).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="561caf13aae83af1e79a3d54c581a742b61e3c6e" translate="yes" xml:space="preserve">
          <source>To get your started, we have published a couple of demos on Github. First up, check out our &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/channel-messaging-basic&quot;&gt;channel messaging basic demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/dom-examples/channel-messaging-basic/&quot;&gt;run it live too&lt;/a&gt;), which shows a really simple single message transfer between a page and an embedded &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06274680bc999b59eac7d8e060416f50c611fa80" translate="yes" xml:space="preserve">
          <source>To grab a lock only if it isn't already being held, use the &lt;code&gt;ifAvailable&lt;/code&gt; option. In this function &lt;code&gt;await&lt;/code&gt; means the method will not return until the callback is complete. Since the lock is only granted if it was available, this call avoids waiting on the lock being release elsehwere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80ff6a2f70d95849fc4132ad569ba581ce96b27" translate="yes" xml:space="preserve">
          <source>To grab the media stream we want to capture, we use &lt;code&gt;getUserMedia()&lt;/code&gt;. We then use the MediaRecorder API to record the stream, and output each recorded snippet into the source of a generated &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; element so it can be played back.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30111ad9baa284d2036492be88a26f7977b549d5" translate="yes" xml:space="preserve">
          <source>To guarantee enough performance, implementations are not using a truly random number generator, but they are using a pseudo-random number generator &lt;em&gt;seeded &lt;/em&gt;with a value with enough entropy. The PRNG used differs from one implementation to the other but is suitable for cryptographic usages. Implementations are also required to use a seed with enough entropy, like a system-level entropy source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3f71e56ec739241977d254c6732e855763399f" translate="yes" xml:space="preserve">
          <source>To implement a way for users to mute and unmute a track, use the &lt;a href=&quot;enabled&quot;&gt;&lt;code&gt;enabled&lt;/code&gt;&lt;/a&gt; property. When a track is disabled by setting &lt;code&gt;enabled&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, it generates only empty frames (audio frames in which every sample is 0, or video frames in which every pixel is black).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a58d50508803a8824d256421aaf32b39cbb11a2" translate="yes" xml:space="preserve">
          <source>To insert the HTML into the document rather than replace the contents of an element, use the method &lt;a href=&quot;insertadjacenthtml&quot;&gt;&lt;code&gt;insertAdjacentHTML()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ed667de921efe3b558d34482b9a72e4889f7da" translate="yes" xml:space="preserve">
          <source>To instead ensure browsers don&amp;rsquo;t include credentials in the request, use &lt;code&gt;credentials: 'omit'&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="265979ad3bcb7fc584066e714423d899105644dd" translate="yes" xml:space="preserve">
          <source>To just take the first item being dropped, use the &lt;a href=&quot;../datatransfer/getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt; method as with a single item. This is convenient as drop targets which only need to support a single item do not need to do anything extra.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d11a85e806f08aea6f3f08ab0908db05d1302434" translate="yes" xml:space="preserve">
          <source>To learn more about IndexedDB terms, see the &lt;a href=&quot;#definitions&quot;&gt;Definitions&lt;/a&gt; section.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbd0e4622482f63a01fde89a5b8402eb4ce7e9f8" translate="yes" xml:space="preserve">
          <source>To learn more about drag feedback images, see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Drag_Operations#dragfeedback&quot;&gt;Setting the Drag Feedback Image&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db57e1a4c5b72b643b4e5a2e3665ea52ee8d04c7" translate="yes" xml:space="preserve">
          <source>To learn more about how constraints and settings work, see &lt;a href=&quot;media_streams_api/constraints&quot;&gt;Capabilities, constraints, and settings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2072a58337de748cb618983f4b3fe4f5576f762" translate="yes" xml:space="preserve">
          <source>To learn more about how constraints work, see &lt;a href=&quot;../media_streams_api/constraints&quot;&gt;Capabilities, constraints, and settings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819d6ab314290fc9c6f82094b083faad1ef973a8" translate="yes" xml:space="preserve">
          <source>To learn more about how constraints work, see &lt;a href=&quot;media_streams_api/constraints&quot;&gt;Capabilities, constraints, and settings&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7800961e83fd68f4f9b5880a9c4dbf9b6a7d94da" translate="yes" xml:space="preserve">
          <source>To learn more about how request callbacks work, see &lt;a href=&quot;background_tasks_api&quot;&gt;Collaborative Scheduling of Background Tasks&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec7cc228c9fad27bbd090c0e95430ce32c11cf35" translate="yes" xml:space="preserve">
          <source>To learn more about merchant validation, see &lt;a href=&quot;payment_request_api/concepts#Merchant_validation&quot;&gt;Merchant validation&lt;/a&gt; in &lt;a href=&quot;payment_request_api/concepts&quot;&gt;Payment processing concepts&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5444592650322e52ef27451d31b328690a146340" translate="yes" xml:space="preserve">
          <source>To learn more about using the MediaStream Recording API, see &lt;a href=&quot;mediastream_recording_api/using_the_mediastream_recording_api&quot;&gt;Using the MediaStream Recording API&lt;/a&gt;, which shows how to use the API to record audio clips. A second article, &lt;a href=&quot;mediastream_recording_api/recording_a_media_element&quot;&gt;Recording a media element&lt;/a&gt;, describes how to receive a stream from an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element and use the captured stream (in this case, recording it and saving it to a local disk).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c80eb3596e78ce147d31d3afd7ac3678d24e2ff" translate="yes" xml:space="preserve">
          <source>To learn more on using indexes, see &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Using_IndexedDB#Using_an_index&quot;&gt;Using IndexedDB&lt;/a&gt;. For the reference documentation on index, see &lt;a href=&quot;https://developer.mozilla.org/en-US/en/IndexedDB/IDBKeyRange&quot;&gt;IDBKeyRange&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6addbb3281a8af78fdbfa4ae72ddb1a08515896d" translate="yes" xml:space="preserve">
          <source>To learn when other code has toggled full-screen mode on and off, you should establish listeners for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/fullscreenchange&quot;&gt;fullscreenchange&lt;/a&gt;&lt;/code&gt; event on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;. It's also important to listen for &lt;code&gt;fullscreenchange&lt;/code&gt; to be aware when, for example, the user manually toggles full-screen mode, or when the user switches applications, causing your application to temporarily exit full-screen mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eb69383a77fca06b8f2c2bc2302088c97a2f1b8" translate="yes" xml:space="preserve">
          <source>To leave a channel, it is required to call the &lt;a href=&quot;broadcastchannel/close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; method on the object. This disconnects the link between the object and the underlying channel and allows garbage collection to happen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e170ed2eb19236dd7b0bf96eea9f29bb5f0b526" translate="yes" xml:space="preserve">
          <source>To look for elements that include among their classes a single specified class, we just provide that class name when calling &lt;code&gt;getElementsByClassName()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5853f58ee1c108875cf65f62e75cae5a524bac6" translate="yes" xml:space="preserve">
          <source>To make an element &lt;em&gt;draggable&lt;/em&gt; requires adding the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-draggable&quot;&gt;draggable&lt;/a&gt;&lt;/code&gt; attribute plus the &lt;a href=&quot;globaleventhandlers/ondragstart&quot;&gt;&lt;code&gt;ondragstart&lt;/code&gt;&lt;/a&gt; global event handler, as shown in the following code sample</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94ad305eeac81238e09f8fca1fd90fc6373830e9" translate="yes" xml:space="preserve">
          <source>To make another HTML element draggable, three things must be done:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c12813d8b3e30e072a19bbfec633780a823af46" translate="yes" xml:space="preserve">
          <source>To make the motion more real, you can play with the velocity like this, for example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e783820df9859499df9f057cc0e31e16fb6b3f" translate="yes" xml:space="preserve">
          <source>To match against an ID or selectors that do not follow standard CSS syntax (by using a colon or space inappropriately, for example), you must escape the character with a backslash (&lt;code&gt;&quot;\&quot;&lt;/code&gt;). As the backslash is also an escape character in JavaScript, if you are entering a literal string, you must escape it &lt;em&gt;twice&lt;/em&gt; (once for the JavaScript string, and another time for &lt;code&gt;querySelector()&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3be7b37c4b86e9f10fac78deb1accdff4bdd8e" translate="yes" xml:space="preserve">
          <source>To modify styles to a document using CSS syntax, one can insert rules or insert &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; tags whose &lt;code&gt;innerHTML&lt;/code&gt; property is set to the desired CSS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164a9e16d518c2e68cb09d15c71c67845e774c22" translate="yes" xml:space="preserve">
          <source>To monitor the entire subtree for attribute changes, simply set &lt;code&gt;subtree&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f6be876f5a2efb03f7f3eadc2e93104ec624b2" translate="yes" xml:space="preserve">
          <source>To move back one page (the equivalent of calling &lt;code&gt;back()&lt;/code&gt;):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="769c09b2b735cfe9cb5299875d49cc7f496a3800" translate="yes" xml:space="preserve">
          <source>To move backward through history, just do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3eae9cc257ee18133d274ff2b619091f4ad1bab" translate="yes" xml:space="preserve">
          <source>To move forward a page, just like calling &lt;code&gt;forward()&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b931f4474904c061f39fef2c7ba96b7defcf5e8" translate="yes" xml:space="preserve">
          <source>To navigate the opposite way through the child nodes list use &lt;a href=&quot;nextsibling&quot;&gt;Node.nextSibling&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f4bca7d258e0f846fff3844ffb4bca9cfe80416" translate="yes" xml:space="preserve">
          <source>To observe &quot;&lt;code&gt;frame&lt;/code&gt;&quot; performance entry types, the application first creates a &lt;a href=&quot;../performanceobserver&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt; object with a specific frame observer callback. In the following example, two observers for the &quot;&lt;code&gt;frame&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;performance entry type&lt;/code&gt;&lt;/a&gt; are created and the first observer constructor uses inline function syntax.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f32571c1f92556c08e0c1985819d4519b22080" translate="yes" xml:space="preserve">
          <source>To observe &quot;&lt;code&gt;frame&lt;/code&gt;&quot; performance entry types, the application first creates a &lt;a href=&quot;performanceobserver&quot;&gt;&lt;code&gt;PerformanceObserver&lt;/code&gt;&lt;/a&gt; object with a specific frame observer callback (function). Next, &lt;a href=&quot;performanceobserver/observe&quot;&gt;&lt;code&gt;PerformanceObserver.observe()&lt;/code&gt;&lt;/a&gt; is used to specify the set of performance events to observe - in this case, just the &quot;&lt;code&gt;frame&lt;/code&gt;&quot; event type. When the browser adds a new frame to the performance timeline, the specified observer callback will be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68518bcc16630202fa877e1f74cb2fb2fc131e32" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; of all of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; elements contained within the element &lt;code&gt;&quot;myBox&quot;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d405f493cf80b329069a3d81e9c827ba0c1826d0" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; of all of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; elements in the document:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0bdaa8df3e908ef979d4f007684e8a35b2ee291" translate="yes" xml:space="preserve">
          <source>To obtain an &lt;code&gt;HTMLFormElement&lt;/code&gt; object, you can use a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors&quot;&gt;CSS selector&lt;/a&gt; with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ParentNode/querySelector&quot;&gt;&lt;code&gt;querySelector()&lt;/code&gt;&lt;/a&gt;, or you can get a list of all of the forms in the document using its &lt;a href=&quot;document/forms&quot;&gt;&lt;code&gt;forms&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6620362339c1dae448688505ddf1ab3bea2c37b" translate="yes" xml:space="preserve">
          <source>To obtain an &lt;code&gt;ImageData&lt;/code&gt; object containing a copy of the pixel data for a canvas context, you can use the &lt;code&gt;getImageData()&lt;/code&gt; method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f04c7b65230afcad191ee397e7b1a38b6701913" translate="yes" xml:space="preserve">
          <source>To obtain the user's current location, you can call the &lt;a href=&quot;geolocation/getcurrentposition&quot;&gt;&lt;code&gt;getCurrentPosition()&lt;/code&gt;&lt;/a&gt; method. This initiates an asynchronous request to detect the user's position, and queries the positioning hardware to get up-to-date information. When the position is determined, the defined callback function is executed. You can optionally provide a second callback function to be executed if an error occurs. A third, optional, parameter is an options object where you can set the maximum age of the position returned, the time to wait for a request, and if you want high accuracy for the position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dbb74de6bf93a22d5fce8faa8638ee7f48f696a" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;animation.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="299c6d52c8b2982bc920a675cf0b16ada062b377" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;animation.startTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4aadc842ec96b6bc2ededaa36a9c210323d69db" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;animationTimeline.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a3ca096c48ba5905fd249accfa9be5528a06f1f" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;audioCtx.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b21b22590bdcd6b2c8fcce5504a4c65eac5d5386" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;event.timeStamp&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaab0148211ba56838e6fd1fbd0a5e83b6f63c07" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;performance.now()&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d4597cb0ee99e9c825d257360012ef33717f7bf" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;playbackEvent.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a994276130344b02b5cf7207aaf938b929c3c5b3" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;someFile.lastModified&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f971d90d72644a0874a7d21e9710bc27d48328d" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of &lt;code&gt;video.currentTime&lt;/code&gt; might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe93f723dd425d9275f9024f9de6e25ce24732e6" translate="yes" xml:space="preserve">
          <source>To offer protection against timing attacks and fingerprinting, the precision of time stamps might get rounded depending on browser settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be05f7eb739adbd56502345110cc5548182b1514" translate="yes" xml:space="preserve">
          <source>To only obtain the HTML representation of the contents of an element, or to replace the contents of an element, use the property &lt;a href=&quot;innerhtml&quot;&gt;&lt;code&gt;innerHTML&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcc5d102dd30e344a37ce609ccc9436e6a89d4d3" translate="yes" xml:space="preserve">
          <source>To only wait for a lock for a short period of time, use the &lt;code&gt;signal&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91da43f4ea981f58622a0946786895d01a6105c2" translate="yes" xml:space="preserve">
          <source>To overwrite the old value with a new one, use &lt;a href=&quot;set&quot;&gt;&lt;code&gt;Headers.set&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58faa70afda02757702aee53e67917f783413331" translate="yes" xml:space="preserve">
          <source>To pause the timers, all we need to do is remove the ads from the set of visible ads (&lt;code&gt;visibleAds&lt;/code&gt;) and mark them as inactive. To do so, we begin by saving the set of visible ads into a variable known as &lt;code&gt;previouslyVisibleAds&lt;/code&gt; to be sure we can restore them when the user tabs back into the document, and we then empty the &lt;code&gt;visibleAds&lt;/code&gt; set so they won't be treated as visible. Then, for each of the ads that are being suspended, we call our &lt;code&gt;updateAdTimer()&lt;/code&gt; function, which handles updating the ad's total visible time counter, then we set their &lt;code&gt;dataset.lastViewStarted&lt;/code&gt; property to 0, which indicates that the tab's timer isn't running.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e13561c198c4f1c3503c689f7b4020b41ba6e58" translate="yes" xml:space="preserve">
          <source>To prevent automatic capture of frames, so that frames are only captured when &lt;code&gt;requestFrame()&lt;/code&gt; is called, specify a value of 0 for the &lt;a href=&quot;../htmlcanvaselement/capturestream&quot;&gt;&lt;code&gt;captureStream()&lt;/code&gt;&lt;/a&gt; method when creating the stream.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77ceb64cad6e4521a208ebf4f56c86582371c605" translate="yes" xml:space="preserve">
          <source>To prevent the browser's default touch behavior from overriding this application's pointer handling, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action&quot;&gt;&lt;code&gt;touch-action&lt;/code&gt;&lt;/a&gt; property is applied to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fe22a268c7e57738a1d0d00f0e88fbb87e9f4dd" translate="yes" xml:space="preserve">
          <source>To prevent this problem, some browsers (specifically, Chrome and Firefox) have changed the default value of the &lt;code&gt;passive&lt;/code&gt; option to &lt;code&gt;true&lt;/code&gt; for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; events on the document-level nodes &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../document/body&quot;&gt;&lt;code&gt;Document.body&lt;/code&gt;&lt;/a&gt;. This prevents the event listener from being called, so it can't block page rendering while the user is scrolling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b31911f077aaffe600649acf55b25e0e55f754" translate="yes" xml:space="preserve">
          <source>To put the timing information obtained from &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt; into the correct perspective, you need to know more about what sort of load operation occurred. In particular, you need to know:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30551d178876fc9d5081099974898b91921680df" translate="yes" xml:space="preserve">
          <source>To read from the clipboard, you must first have the &lt;code&gt;&quot;clipboard-read&quot;&lt;/code&gt; permission.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483b7cbe3a175b21b83694ababd356000ed895b6" translate="yes" xml:space="preserve">
          <source>To read non-text contents from the clipboard, use the &lt;a href=&quot;read&quot;&gt;&lt;code&gt;read()&lt;/code&gt;&lt;/a&gt; method instead. You can write text to the clipboard using &lt;a href=&quot;writetext&quot;&gt;&lt;code&gt;writeText()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24020a64ccf51d7aca059e9607fd51934f0b07c2" translate="yes" xml:space="preserve">
          <source>To read the records of an existing object store, the transaction can either be in &lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;readwrite&lt;/code&gt; mode. To make changes to an existing object store, the transaction must be in &lt;code&gt;readwrite&lt;/code&gt; mode. You open such transactions with &lt;a href=&quot;../idbdatabase/transaction&quot;&gt;&lt;code&gt;IDBDatabase.transaction&lt;/code&gt;&lt;/a&gt;. The method accepts two parameters: the &lt;code&gt;storeNames&lt;/code&gt; (the scope, defined as an array of object stores that you want to access) and the &lt;code&gt;mode&lt;/code&gt; (&lt;code&gt;readonly&lt;/code&gt; or &lt;code&gt;readwrite&lt;/code&gt;) for the transaction. The method returns a transaction object containing the &lt;a href=&quot;../idbindex/objectstore&quot;&gt;&lt;code&gt;IDBIndex.objectStore&lt;/code&gt;&lt;/a&gt; method, which you can use to access your object store. By default, where no mode is specified, transactions open in &lt;code&gt;readonly&lt;/code&gt; mode.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91c9c64bb43faa8136bb9b326edbde4f81f3deb4" translate="yes" xml:space="preserve">
          <source>To really understand what this does, it may help to look at the image to the right. The first four parameters define the location and size of the slice on the source image. The last four parameters define the rectangle into which to draw the image on the destination canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4785d38ea956fef3a0e9c5c9fee0912357d94cf" translate="yes" xml:space="preserve">
          <source>To recursively remove a directory as well as all of its contents and its subdirectories, call &lt;a href=&quot;../filesystemdirectoryentry/removerecursively&quot;&gt;&lt;code&gt;FileSystemDirectoryEntry.removeRecursively()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="272e24bd1f33f67e327af638858f7aad9f8791d7" translate="yes" xml:space="preserve">
          <source>To remove a single file, or an empty directory, you can also use &lt;a href=&quot;../filesystementry/remove&quot;&gt;&lt;code&gt;FileSystemEntry.remove()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="902ce6e67ba2c8f92a59618d638e3288aa526c1f" translate="yes" xml:space="preserve">
          <source>To remove multiple classes at once you can supply multiple tokens; the order you supply them doesn't have to match the order they appear in the list:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6715f1b0bd9b8b42509dedb07ebcf389035db4c" translate="yes" xml:space="preserve">
          <source>To request a payment, a web page creates a &lt;a href=&quot;paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt; object in response to a user action that initiates a payment, such as clicking a &quot;Purchase&quot; button. The &lt;code&gt;PaymentRequest&lt;/code&gt; allows the web page to exchange information with the user agent while the user provides input to complete the transaction.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e50782f8b12b550c5ed05029b8e96edd411e077" translate="yes" xml:space="preserve">
          <source>To retrieve just the URL as a string, the read-only &lt;a href=&quot;url&quot;&gt;&lt;code&gt;document.URL&lt;/code&gt;&lt;/a&gt; property can also be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0273ed0ad5afbd7a79e9596003c74616c108629a" translate="yes" xml:space="preserve">
          <source>To rotate the rectangle around its own center, we translate the canvas to the center of the rectangle, then rotate the canvas, then translate the canvas back to 0,0, and then draw the rectangle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa7fdc3804ccd892fe24e8cb0318ecf273366d2" translate="yes" xml:space="preserve">
          <source>To see a complete implementation, check out our &lt;a href=&quot;https://mdn.github.io/webaudio-examples/panner-node/&quot;&gt;panner-node example&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/panner-node&quot;&gt;view the source code&lt;/a&gt;) &amp;mdash; this demo transports you to the 2.5D &quot;Room of metal&quot;, where you can play a track on a boom box and then walk around the boom box to see how the sound changes!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61cf51b177c63b7939aa5ea3750780aa655b7ea2" translate="yes" xml:space="preserve">
          <source>To see a more complete implementation, check out one of our MDN Web Audio examples, such as &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-o-matic&lt;/a&gt; or &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c697e889ed266acfe8cc5275c588646edbff803" translate="yes" xml:space="preserve">
          <source>To see a more concrete example, take a look at &lt;a href=&quot;../intersection_observer_api/timing_element_visibility#Handling_intersection_changes&quot;&gt;Handling intersection changes&lt;/a&gt; in &lt;a href=&quot;../intersection_observer_api/timing_element_visibility&quot;&gt;Timing element visibility with the Intersection Observer API&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8271ab1b04012249f31df0650ea8d4e5f1051989" translate="yes" xml:space="preserve">
          <source>To see changes in the network state, use &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element.addEventListener&quot;&gt;addEventListener&lt;/a&gt;&lt;/code&gt; to listen for the events on &lt;code&gt;window.ononline&lt;/code&gt; and &lt;code&gt;window.onoffline&lt;/code&gt;, as in the following example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a76f9e9154ba80f542917ceb850b80ae03bc3ce6" translate="yes" xml:space="preserve">
          <source>To see this example in action, as well as to read the rest of the code from which these snippets were derived, see &lt;a href=&quot;web_audio_api/controlling_multiple_parameters_with_constantsourcenode&quot;&gt;Controlling multiple parameters with ConstantSourceNode.&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cee70c0dc47e09114a27c783a80af4d4118e72c" translate="yes" xml:space="preserve">
          <source>To set a drag data item within the &lt;a href=&quot;../dragevent/datatransfer&quot;&gt;&lt;code&gt;dataTransfer&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;../datatransfer/setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt; method. It takes two arguments, the type of data and the data value. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934ac567fab001983b4e2c14d8e8b1faa6203667" translate="yes" xml:space="preserve">
          <source>To set the value of a Boolean attribute, such as &lt;code&gt;disabled&lt;/code&gt;, you can specify any value. An empty string or the name of the attribute are recommended values. All that matters is that if the attribute is present at all, &lt;em&gt;regardless of its actual value&lt;/em&gt;, its value is considered to be &lt;code&gt;true&lt;/code&gt;. The absence of the attribute means its value is &lt;code&gt;false&lt;/code&gt;. By setting the value of the &lt;code&gt;disabled&lt;/code&gt; attribute to the empty string (&lt;code&gt;&quot;&quot;&lt;/code&gt;), we are setting &lt;code&gt;disabled&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, which results in the button being disabled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="622f6439c4819e75c958e7280d4ff5cca9b3acfb" translate="yes" xml:space="preserve">
          <source>To set things up, we run the &lt;code&gt;startup()&lt;/code&gt; function below when the page loads:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e211c3875781a68ffa25a359b8d736beb5bb1a6" translate="yes" xml:space="preserve">
          <source>To solve this problem, analytics and diagnostics code have historically made a synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; call in an &lt;code&gt;unload&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; event handler to submit the data. The synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; blocks the process of unloading the document, which in turn causes the next navigation appear to be slower. There is nothing the next page can do to avoid this perception of poor page load performance, and the result is that the user perceives that the new web page is slow to load, even though the true issue is with the previous page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f2591f0be493f74a92677d2d835c8081085cc0" translate="yes" xml:space="preserve">
          <source>To stop recording call &lt;a href=&quot;profileend&quot;&gt;&lt;code&gt;Console.profileEnd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8fcef41ccb86ad885d030b01a855f249d28fbb6" translate="yes" xml:space="preserve">
          <source>To stop the &lt;code&gt;MutationObserver&lt;/code&gt; (so that none of its callbacks will be triggered any longer), call &lt;a href=&quot;disconnect&quot;&gt;&lt;code&gt;MutationObserver.disconnect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5db469c5444c9f8380396c064a1a1b98b8d39e" translate="yes" xml:space="preserve">
          <source>To support multi-touch interaction, preserving a pointer's event state during various event phases is required. This application uses three arrays to cache event state, one cache per target element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21350f6849eddeb9249cd0d1f9a412be8266b21e" translate="yes" xml:space="preserve">
          <source>To tell these situations apart, you either call</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="822cbc605c010b13ed4968269f5c5d1af8ef6895" translate="yes" xml:space="preserve">
          <source>To tell these situations apart, you need to call the &lt;a href=&quot;opencursor&quot;&gt;&lt;code&gt;openCursor()&lt;/code&gt;&lt;/a&gt; method with the same key. That method provides a cursor if the record exists, and no cursor if it does not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a385a5df03e8bc7135a08a6cd2c260c9c6ea6f8" translate="yes" xml:space="preserve">
          <source>To test a lot of interfaces in a single page-for example, a &quot;suite&quot; of properties that affect the colors of a web page-you can create a similar test page with a whole console of buttons, textfields, and other HTML elements. The following screenshot gives you some idea of how interfaces can be grouped together for testing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa4b715d79e8667e7e0460d48ed3acef3dfb180" translate="yes" xml:space="preserve">
          <source>To test support, smoothness and power efficiency of a video or audio file, you define the &lt;a href=&quot;mediaconfiguration&quot;&gt;media configuration&lt;/a&gt; you want to test, and then pass the audio or video configuration as the parameter of the &lt;a href=&quot;mediacapabilities&quot;&gt;&lt;code&gt;MediaCapabilities&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;encodingInfo()&lt;/code&gt; and &lt;code&gt;decodingInfo()&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5ecdbf37cf2a4b33d9162f8b079ab9228c89d7c" translate="yes" xml:space="preserve">
          <source>To test your browser's support for the &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface, run the &lt;code&gt;&lt;a href=&quot;http://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb12699875a51dbd5915bcb5d7e1b603c98c7d6" translate="yes" xml:space="preserve">
          <source>To test your browser's support for these interfaces, run the &lt;code&gt;&lt;a href=&quot;http://mdn.github.io/web-performance/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ed18ba66cf75ffe4fc3f980f518a2959889fa2c" translate="yes" xml:space="preserve">
          <source>To test your browser's support for these interfaces, run the &lt;code&gt;&lt;a href=&quot;https://mdn.github.io/dom-examples/performance-apis/perf-api-support.html&quot;&gt;perf-api-support&lt;/a&gt;&lt;/code&gt; application.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20deac92d7041ab7526fd434ef88174b87c4292f" translate="yes" xml:space="preserve">
          <source>To the right of each of the constraint set editors is a second text box which we use to display the current configuration of the track's configurable properties. This display is updated by the function &lt;code&gt;getCurrentSettings()&lt;/code&gt;, which gets the current settings for the audio and video tracks and inserts the corresponding code into the tracks' settings display boxes by setting their &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-value&quot;&gt;value&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3f0c073a7814a8c5b3451be6d283997dc2bbf4d" translate="yes" xml:space="preserve">
          <source>To track an element's visible time, we use two custom data attributes (see &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-data-*&quot;&gt;data-*&lt;/a&gt;&lt;/code&gt;) on every ad:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558cccc9df607bdc028545739a6760ebe48f77fc" translate="yes" xml:space="preserve">
          <source>To track the success or failure of the request, it is necessary to listen for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; events at the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; level.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c90a7c2e3929258bbf448e7940229453bd0285f1" translate="yes" xml:space="preserve">
          <source>To track the success or failure of the request, it is necessary to listen for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edf03f479ef8ccff367c20165497cbb2c55a08e" translate="yes" xml:space="preserve">
          <source>To try this for yourself, you can use the code snippet below. Just paste it into the &lt;code&gt;draw()&lt;/code&gt; function we saw earlier.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9702abfad7fe69c479c73968f365e9ff4f671e" translate="yes" xml:space="preserve">
          <source>To understand these values, take the example of a &lt;code&gt;keyframeEffect&lt;/code&gt; value of &lt;code&gt;blur(2)&lt;/code&gt; working on an underlying property value of &lt;code&gt;blur(3)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3c3573e038851bcad63b8cf1ea6c428da69a37" translate="yes" xml:space="preserve">
          <source>To understand what this algorithm does under the hood, here is an implementation on top of &lt;a href=&quot;fillrect&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.fillRect()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2aecc8ec8a04942ac8be4edc3ee74aa54fb6a7" translate="yes" xml:space="preserve">
          <source>To use &lt;code&gt;getUserMedia()&lt;/code&gt; in an installable app (for example, a &lt;a href=&quot;https://developer.mozilla.org/en-US/Apps/Build/Building_apps_for_Firefox_OS/Firefox_OS_app_beginners_tutorial&quot;&gt;Firefox OS app&lt;/a&gt;), you need to specify one or both of the following fields inside your manifest file:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bca500d0d8a66d380981bb67bc7b151b58b7b07d" translate="yes" xml:space="preserve">
          <source>To use Fetch in unsupported browsers, there is a &lt;a href=&quot;https://github.com/github/fetch&quot;&gt;Fetch Polyfill&lt;/a&gt; available that recreates the functionality for non-supporting browsers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1020d559dc189d2f3541cb99c0b6c9116be09f8f" translate="yes" xml:space="preserve">
          <source>To use linear filtering on half floating-point textures, enable the &lt;a href=&quot;oes_texture_half_float_linear&quot;&gt;&lt;code&gt;OES_texture_half_float_linear&lt;/code&gt;&lt;/a&gt; extension in addition to this extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4614d85595a75727de0cd2736801ef2ceb830d0f" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'accelerometer'&lt;/code&gt; device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92b16033087cc1cf3da48812d30a99d45098cd4" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'accelerometer'&lt;/code&gt;, &lt;code&gt;'gyroscope'&lt;/code&gt;, and &lt;code&gt;'megnetometer'&lt;/code&gt; device sensors through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87695787d6ee339a7e181ba69ec9096cca759f4e" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'accelerometer'&lt;/code&gt;, and &lt;code&gt;'gyroscope'&lt;/code&gt; device sensors through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20fd726ab6b0634f72898eba2f36d5c956a3d043" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'accelerometer'&lt;/code&gt;, device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce31bffcbaf934c909db32593c32c7f320f86d89" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'ambient-light-sensor'&lt;/code&gt; device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d6e0cba536c3045c849e00d7f22c99588f22134" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'gyroscope'&lt;/code&gt; device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4099d707131c09332fd720875d572de1d79051ed" translate="yes" xml:space="preserve">
          <source>To use this sensor, the user must grant permission to the &lt;code&gt;'magnetometer'&lt;/code&gt; device sensor through the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; API.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6dd7a7ec43eaf3f69a48ade343f0111282c6418" translate="yes" xml:space="preserve">
          <source>Toggle a boolean attribute (removing it if it is present and adding it if it is not present) on the specified element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d665e21552450152c70cb783492f879745837aa5" translate="yes" xml:space="preserve">
          <source>Toggles &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub&quot;&gt;subscript&lt;/a&gt; on/off for the selection or at the insertion point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2880cd57d785f44f6522dadc8479e47e146d8cd2" translate="yes" xml:space="preserve">
          <source>Toggles &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup&quot;&gt;superscript&lt;/a&gt; on/off for the selection or at the insertion point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9188981accf009343887b80095c80c422f420980" translate="yes" xml:space="preserve">
          <source>Toggles &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u&quot;&gt;underline&lt;/a&gt; on/off for the selection or at the insertion point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b3f36a6b5484486fe08b1da906125a89307866" translate="yes" xml:space="preserve">
          <source>Toggles a boolean attribute, removing it if it is present and adding it if it is not present, on the specified element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c95aa48a5ace3fb5e42cf0bc6497304898f9d5e7" translate="yes" xml:space="preserve">
          <source>Toggles bold on/off for the selection or at the insertion point. Internet Explorer uses the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong&quot;&gt;&lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt;&lt;/a&gt; tag instead of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b&quot;&gt;&lt;code&gt;&amp;lt;b&amp;gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46907049cae3cb64f14f909b9d8cb6f1e23c8665" translate="yes" xml:space="preserve">
          <source>Toggles italics on/off for the selection or at the insertion point. (Internet Explorer uses the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em&quot;&gt;&lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;&lt;/a&gt; element instead of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i&quot;&gt;&lt;code&gt;&amp;lt;i&amp;gt;&lt;/code&gt;&lt;/a&gt;.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a19287ba4a0318c4bd6815ed34a7e7784a2c71" translate="yes" xml:space="preserve">
          <source>Toggles strikethrough on/off for the selection or at the insertion point.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42ee950ae4004ded951381fd795ce1fe5329f240" translate="yes" xml:space="preserve">
          <source>Toggles the use of HTML tags or CSS for the generated markup. Requires a boolean true/false as a value argument.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b5a3685c61c0b354a58f56d002d673c947a823" translate="yes" xml:space="preserve">
          <source>Toggling a checkbox is the default action of clicking on a checkbox. This example demonstrates how to prevent that from happening:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef407e3d969f67ce1511804512f04a02f39c7022" translate="yes" xml:space="preserve">
          <source>Toggling full-screen mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f6144246a4a4bbbdbaf6a9da94f17b6748eb9d9" translate="yes" xml:space="preserve">
          <source>Toggling fullscreen mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c523912118f2e7f7decafc13dbfdfa845a88e751" translate="yes" xml:space="preserve">
          <source>Toggling the box to &lt;code&gt;display: none&lt;/code&gt; has the effect of aborting its animation. In browsers that support &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/animationcancel&quot;&gt;animationcancel&lt;/a&gt;&lt;/code&gt;, the event is fired and this handler is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de4027b599e3715ab06e5b5c177d78323cf90a49" translate="yes" xml:space="preserve">
          <source>TokenList</source>
          <target state="translated">TokenList</target>
        </trans-unit>
        <trans-unit id="2ef5807cd31460929be03b77fd98f235d9f37cc6" translate="yes" xml:space="preserve">
          <source>TokenList.add</source>
          <target state="translated">TokenList.add</target>
        </trans-unit>
        <trans-unit id="4367a109b895ad0b688bd75c64d5ecf84fe15b6e" translate="yes" xml:space="preserve">
          <source>TokenList.contains</source>
          <target state="translated">TokenList.contains</target>
        </trans-unit>
        <trans-unit id="74feff81c7e351ada2c16d174a3e51eee19f2f6e" translate="yes" xml:space="preserve">
          <source>TokenList.entries</source>
          <target state="translated">TokenList.entries</target>
        </trans-unit>
        <trans-unit id="6af7eb305defe2ece214c8f7d345efef6d527a4e" translate="yes" xml:space="preserve">
          <source>TokenList.forEach</source>
          <target state="translated">TokenList.forEach</target>
        </trans-unit>
        <trans-unit id="a12e72f48f7371840d0358088d81c8ca175b93de" translate="yes" xml:space="preserve">
          <source>TokenList.item</source>
          <target state="translated">TokenList.item</target>
        </trans-unit>
        <trans-unit id="dcaa8631c38d36e9b1cef4e81d3f6894ab48567e" translate="yes" xml:space="preserve">
          <source>TokenList.keys</source>
          <target state="translated">TokenList.keys</target>
        </trans-unit>
        <trans-unit id="6f60389483cb8d09217abb2decfdbcbab99da269" translate="yes" xml:space="preserve">
          <source>TokenList.length</source>
          <target state="translated">TokenList.length</target>
        </trans-unit>
        <trans-unit id="8446ecbe15cbe94d04e2d7920663ecb2fdad5708" translate="yes" xml:space="preserve">
          <source>TokenList.remove</source>
          <target state="translated">TokenList.remove</target>
        </trans-unit>
        <trans-unit id="9cec75b9b3214bb0f8d2738b62914c0ffc544e40" translate="yes" xml:space="preserve">
          <source>TokenList.replace</source>
          <target state="translated">TokenList.replace</target>
        </trans-unit>
        <trans-unit id="21b68f0d7cce0a832bd4838a84641f5627e2d70b" translate="yes" xml:space="preserve">
          <source>TokenList.supports</source>
          <target state="translated">TokenList.supports</target>
        </trans-unit>
        <trans-unit id="b7399a3cd9833e0d5912bbcbdf9fccb67518f17e" translate="yes" xml:space="preserve">
          <source>TokenList.toggle</source>
          <target state="translated">TokenList.toggle</target>
        </trans-unit>
        <trans-unit id="805828f4d00ac23665e28c591a4c36ffa00c1027" translate="yes" xml:space="preserve">
          <source>TokenList.value</source>
          <target state="translated">TokenList.value</target>
        </trans-unit>
        <trans-unit id="a19195005df2e647aea83bf1cc6604582f388a24" translate="yes" xml:space="preserve">
          <source>TokenList.values</source>
          <target state="translated">TokenList.values</target>
        </trans-unit>
        <trans-unit id="9dedab5f940c47ae97fa7819d8008f926343f184" translate="yes" xml:space="preserve">
          <source>Tone buffer format</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4832bc3f64a7f0fb3a06cb261794cb29bbe7bb" translate="yes" xml:space="preserve">
          <source>Tone characters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9530de69fe7f9bc04e841ea13953c5ee55524530" translate="yes" xml:space="preserve">
          <source>Tones are removed from the string as they're played, so only upcoming tones are listed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ecacfdd15d355a899016ed1d74abdb9443b6e16" translate="yes" xml:space="preserve">
          <source>Too many calls are being made on file resources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550795febfde3e3a53917a8be8ca861192a54439" translate="yes" xml:space="preserve">
          <source>Too many file system calls are being made.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fa8cc860c52b268dc6a3adcde7305e9415db5bb" translate="yes" xml:space="preserve">
          <source>Tools</source>
          <target state="translated">Tools</target>
        </trans-unit>
        <trans-unit id="031e864e7f2ba31bc5a0c2c22fc6c517e14b0948" translate="yes" xml:space="preserve">
          <source>Tools required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f139abb7a549a1210b36f7dbf89215ad6c9902" translate="yes" xml:space="preserve">
          <source>Touch</source>
          <target state="translated">Touch</target>
        </trans-unit>
        <trans-unit id="b14e29f39515ea1f3a91e9780bcd6fbd8bafd6c8" translate="yes" xml:space="preserve">
          <source>Touch APIs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7f0884f833f751d0ef4b5804217e883199fbd5" translate="yes" xml:space="preserve">
          <source>Touch Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6bb5c95167c1aa69325ce8641aa1c1772d42f6" translate="yes" xml:space="preserve">
          <source>Touch Events &amp;ndash; Level 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175e73216c4cd99a74029743c4e012a8cd4e3594" translate="yes" xml:space="preserve">
          <source>Touch Events Standard</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bfc03e595b4991409bff71b8dcd3bf2b8109a7" translate="yes" xml:space="preserve">
          <source>Touch Events&lt;br/&gt;&lt;small&gt;The definition of 'pageX' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687ca392db43683b8516eaea199f7362e9e6619d" translate="yes" xml:space="preserve">
          <source>Touch Events&lt;br/&gt;&lt;small&gt;The definition of 'pageY' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d132cef2ce764994d364780fd8bb33a5a585862" translate="yes" xml:space="preserve">
          <source>Touch devices may emulate buttons with configurable gestures (e.g. single touch for primary, two-finger touch for secondary, etc.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5f50825b735c39b9b3d47ee8ac156da4920448" translate="yes" xml:space="preserve">
          <source>Touch events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a4f1d30ab6a480dc9e7eac898c5601db0369ff" translate="yes" xml:space="preserve">
          <source>Touch events.Multi-touch interaction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5852fad8ac8fb4193668e913b1dfdf4e097223" translate="yes" xml:space="preserve">
          <source>Touch events.Supporting both TouchEvent and MouseEvent</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8472feae7a29d09d4a5b89f34bf4dfddc37139" translate="yes" xml:space="preserve">
          <source>Touch events.Using Touch Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3256230dc0cfa980839a5689c4dfcc867dd9fe9b" translate="yes" xml:space="preserve">
          <source>Touch point</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aaf37bbbffb8a4eed008cdcc637a3eeac2fda87" translate="yes" xml:space="preserve">
          <source>Touch.clientX</source>
          <target state="translated">Touch.clientX</target>
        </trans-unit>
        <trans-unit id="7874aebc3575bf79615ac76603824ad526a86582" translate="yes" xml:space="preserve">
          <source>Touch.clientY</source>
          <target state="translated">Touch.clientY</target>
        </trans-unit>
        <trans-unit id="efc86848ffa1de1f0cba18b1786e625d6dc16cd5" translate="yes" xml:space="preserve">
          <source>Touch.constructor</source>
          <target state="translated">Touch.constructor</target>
        </trans-unit>
        <trans-unit id="f74ff42d6fa26ec6544c31ebf73ddb5da85aa18d" translate="yes" xml:space="preserve">
          <source>Touch.force</source>
          <target state="translated">Touch.force</target>
        </trans-unit>
        <trans-unit id="f637664e05dc3cdd9867628d8b5b8f35068b7a72" translate="yes" xml:space="preserve">
          <source>Touch.identifier</source>
          <target state="translated">Touch.identifier</target>
        </trans-unit>
        <trans-unit id="d7fc131458fb293a5a9d29bcfaea7e65b351ba6c" translate="yes" xml:space="preserve">
          <source>Touch.pageX</source>
          <target state="translated">Touch.pageX</target>
        </trans-unit>
        <trans-unit id="6cd84fe4349cc4ebd5ce83d75783f9cb040ca41e" translate="yes" xml:space="preserve">
          <source>Touch.pageY</source>
          <target state="translated">Touch.pageY</target>
        </trans-unit>
        <trans-unit id="44b99d2e604d4b453221dec7d70045cb0ceac761" translate="yes" xml:space="preserve">
          <source>Touch.radiusX</source>
          <target state="translated">Touch.radiusX</target>
        </trans-unit>
        <trans-unit id="32061b0c445fdf625ff8a304b5aa2a18ebabc920" translate="yes" xml:space="preserve">
          <source>Touch.radiusY</source>
          <target state="translated">Touch.radiusY</target>
        </trans-unit>
        <trans-unit id="818202d68aa383229ffa822f009a2c60ca1b5d21" translate="yes" xml:space="preserve">
          <source>Touch.rotationAngle</source>
          <target state="translated">Touch.rotationAngle</target>
        </trans-unit>
        <trans-unit id="882ffc71a8a1a66189ecf1aaabee4199d83d8ccb" translate="yes" xml:space="preserve">
          <source>Touch.screenX</source>
          <target state="translated">Touch.screenX</target>
        </trans-unit>
        <trans-unit id="12b28e4a04a9814c7e4661e6a54c64bbdfbc0dc2" translate="yes" xml:space="preserve">
          <source>Touch.screenY</source>
          <target state="translated">Touch.screenY</target>
        </trans-unit>
        <trans-unit id="db4e9215a239092b850a606ad0be969e4954ce0f" translate="yes" xml:space="preserve">
          <source>Touch.target</source>
          <target state="translated">Touch.target</target>
        </trans-unit>
        <trans-unit id="8643aec25ade5a0d63724773c4956c08030c122a" translate="yes" xml:space="preserve">
          <source>Touch/pointer tests and demos (by Patrick H. Lauke)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8aae770176cc33b9a83f841d31fa9e867b51ec3" translate="yes" xml:space="preserve">
          <source>TouchEvent</source>
          <target state="translated">TouchEvent</target>
        </trans-unit>
        <trans-unit id="e944767755a98bf10e56e99c4bdcbe7208981d01" translate="yes" xml:space="preserve">
          <source>TouchEvent.altKey</source>
          <target state="translated">TouchEvent.altKey</target>
        </trans-unit>
        <trans-unit id="406538d8db3f7d99e482007d4c93c36bea8b5070" translate="yes" xml:space="preserve">
          <source>TouchEvent.changedTouches</source>
          <target state="translated">TouchEvent.changedTouches</target>
        </trans-unit>
        <trans-unit id="d78f1854f403fd253ca8f63909f8bb7b7a06582d" translate="yes" xml:space="preserve">
          <source>TouchEvent.constructor</source>
          <target state="translated">TouchEvent.constructor</target>
        </trans-unit>
        <trans-unit id="1f801541b8139e22f327e46857b8908191aaecd3" translate="yes" xml:space="preserve">
          <source>TouchEvent.ctrlKey</source>
          <target state="translated">TouchEvent.ctrlKey</target>
        </trans-unit>
        <trans-unit id="84ccda2eb4f36cc302c955a8e951bcd0b5fb3e51" translate="yes" xml:space="preserve">
          <source>TouchEvent.metaKey</source>
          <target state="translated">TouchEvent.metaKey</target>
        </trans-unit>
        <trans-unit id="f8220e539c2c49ded5823cc22c7458eb1a4f6664" translate="yes" xml:space="preserve">
          <source>TouchEvent.shiftKey</source>
          <target state="translated">TouchEvent.shiftKey</target>
        </trans-unit>
        <trans-unit id="9687246a4ce2b3b3cdfa86f1f36c7251a2e42c3c" translate="yes" xml:space="preserve">
          <source>TouchEvent.targetTouches</source>
          <target state="translated">TouchEvent.targetTouches</target>
        </trans-unit>
        <trans-unit id="888b90d2b2ad9d1d288afce9f1c4e52b41edf48b" translate="yes" xml:space="preserve">
          <source>TouchEvent.touches</source>
          <target state="translated">TouchEvent.touches</target>
        </trans-unit>
        <trans-unit id="1efa29eabe3ababde0e86df3b6d2edc46db3122e" translate="yes" xml:space="preserve">
          <source>TouchList</source>
          <target state="translated">TouchList</target>
        </trans-unit>
        <trans-unit id="d09156c9be1d15e3b0f97f436ce4d341cf874003" translate="yes" xml:space="preserve">
          <source>TouchList.identifiedTouch</source>
          <target state="translated">TouchList.identifiedTouch</target>
        </trans-unit>
        <trans-unit id="828555fb99c646a48753dd09eb5d5a5e30faf30c" translate="yes" xml:space="preserve">
          <source>TouchList.item</source>
          <target state="translated">TouchList.item</target>
        </trans-unit>
        <trans-unit id="a6c8c630f6f9b27921dbeed62fd88fab00646e43" translate="yes" xml:space="preserve">
          <source>TouchList.length</source>
          <target state="translated">TouchList.length</target>
        </trans-unit>
        <trans-unit id="a4374d014c02cba8f25a4737b83b1e04a7e4cef8" translate="yes" xml:space="preserve">
          <source>Track constraints</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89534f96950b83d6a11af93611d694742b3cbe91" translate="yes" xml:space="preserve">
          <source>Track.enabled</source>
          <target state="translated">Track.enabled</target>
        </trans-unit>
        <trans-unit id="df79bfde8865b2722b088c49820414f9fefc1525" translate="yes" xml:space="preserve">
          <source>Track.id</source>
          <target state="translated">Track.id</target>
        </trans-unit>
        <trans-unit id="b12c2ddb319a5ac000f654599334307327eb1072" translate="yes" xml:space="preserve">
          <source>Track.kind</source>
          <target state="translated">Track.kind</target>
        </trans-unit>
        <trans-unit id="7b270423ff5537ba0a86126a3284d8e35d6cb652" translate="yes" xml:space="preserve">
          <source>Track.label</source>
          <target state="translated">Track.label</target>
        </trans-unit>
        <trans-unit id="440adf6e847cf7e2f58b4f5499e0c2ae1dfcf09f" translate="yes" xml:space="preserve">
          <source>Track.language</source>
          <target state="translated">Track.language</target>
        </trans-unit>
        <trans-unit id="1e0729d4d78a6fa33e81521e2fe65e980de7dcea" translate="yes" xml:space="preserve">
          <source>Track.sourceBuffer</source>
          <target state="translated">Track.sourceBuffer</target>
        </trans-unit>
        <trans-unit id="79c69033d6c05e8e015f81f8b7dbd674b45b2061" translate="yes" xml:space="preserve">
          <source>TrackDefault</source>
          <target state="translated">TrackDefault</target>
        </trans-unit>
        <trans-unit id="1feb4891715d59a524a90b3a3f6756b54c225d40" translate="yes" xml:space="preserve">
          <source>TrackDefault.byteStreamTrackID</source>
          <target state="translated">TrackDefault.byteStreamTrackID</target>
        </trans-unit>
        <trans-unit id="707ffb7d1433ac27e4911682369ac52b7ca57764" translate="yes" xml:space="preserve">
          <source>TrackDefault.constructor</source>
          <target state="translated">TrackDefault.constructor</target>
        </trans-unit>
        <trans-unit id="91b666ee1bbcf1487d8eec4c478377f55378e5c0" translate="yes" xml:space="preserve">
          <source>TrackDefault.kinds</source>
          <target state="translated">TrackDefault.kinds</target>
        </trans-unit>
        <trans-unit id="dc678b0a004f369deb9e43fe2c7b86689be8bbd8" translate="yes" xml:space="preserve">
          <source>TrackDefault.label</source>
          <target state="translated">TrackDefault.label</target>
        </trans-unit>
        <trans-unit id="2bca754714cff2a09178b7b2ed6514fba9541dbf" translate="yes" xml:space="preserve">
          <source>TrackDefault.language</source>
          <target state="translated">TrackDefault.language</target>
        </trans-unit>
        <trans-unit id="f4be94057b120f6782daafd641425e8ca49938c3" translate="yes" xml:space="preserve">
          <source>TrackDefault.type</source>
          <target state="translated">TrackDefault.type</target>
        </trans-unit>
        <trans-unit id="5b3e9ff5cb5be3e26c1d82071e238ffea13c236a" translate="yes" xml:space="preserve">
          <source>TrackDefaultList</source>
          <target state="translated">TrackDefaultList</target>
        </trans-unit>
        <trans-unit id="a98dc1a2c93564708376cc35e97cb9aed8b976a2" translate="yes" xml:space="preserve">
          <source>TrackDefaultList.TrackDefault</source>
          <target state="translated">TrackDefaultList.TrackDefault</target>
        </trans-unit>
        <trans-unit id="5deb4cdcef9c95258804847bcc7e1700a2235676" translate="yes" xml:space="preserve">
          <source>TrackDefaultList.constructor</source>
          <target state="translated">TrackDefaultList.constructor</target>
        </trans-unit>
        <trans-unit id="b7ebf58a9327db0b3b98328c6303a667fcf826b8" translate="yes" xml:space="preserve">
          <source>TrackDefaultList.length</source>
          <target state="translated">TrackDefaultList.length</target>
        </trans-unit>
        <trans-unit id="0fc6a3ac8c37e40b48c4b11f6d349cfac90b907e" translate="yes" xml:space="preserve">
          <source>TrackEvent</source>
          <target state="translated">TrackEvent</target>
        </trans-unit>
        <trans-unit id="04dea882c48cc7b4fb53cde5ffaf56c611ee1ae6" translate="yes" xml:space="preserve">
          <source>TrackEvent.constructor</source>
          <target state="translated">TrackEvent.constructor</target>
        </trans-unit>
        <trans-unit id="12816886c62b1edac78d783c066d96074abbdfab" translate="yes" xml:space="preserve">
          <source>TrackEvent.track</source>
          <target state="translated">TrackEvent.track</target>
        </trans-unit>
        <trans-unit id="342182e3f652d4f8ce4d6e1887548996394450ae" translate="yes" xml:space="preserve">
          <source>TrackList</source>
          <target state="translated">TrackList</target>
        </trans-unit>
        <trans-unit id="5dc741478b35d9882bf78032ac8105ed7151c6bd" translate="yes" xml:space="preserve">
          <source>TrackList.getTrackById</source>
          <target state="translated">TrackList.getTrackById</target>
        </trans-unit>
        <trans-unit id="23bd7fe618cc2e232d559fd3cfca69e04af9dd25" translate="yes" xml:space="preserve">
          <source>TrackList.length</source>
          <target state="translated">TrackList.length</target>
        </trans-unit>
        <trans-unit id="d573baac75fe509faf5d83e404252b13bbd99203" translate="yes" xml:space="preserve">
          <source>TrackList.onaddtrack</source>
          <target state="translated">TrackList.onaddtrack</target>
        </trans-unit>
        <trans-unit id="e34de5665329a94a084fa4879423ad1ffb3e1e5a" translate="yes" xml:space="preserve">
          <source>TrackList.onchange</source>
          <target state="translated">TrackList.onchange</target>
        </trans-unit>
        <trans-unit id="ff22c173088c8c2c0c6fe52379330cf7dcd5438a" translate="yes" xml:space="preserve">
          <source>TrackList.onremovetrack</source>
          <target state="translated">TrackList.onremovetrack</target>
        </trans-unit>
        <trans-unit id="94184ad33c50e7d1245d19c1a72c5b2f32bfd254" translate="yes" xml:space="preserve">
          <source>Tracking Preference Expression (DNT)&lt;br/&gt;&lt;small&gt;The definition of 'Navigator.doNotTrack' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d028b898c7534b5f2b7e7bc05705e6bcb432d52c" translate="yes" xml:space="preserve">
          <source>Tracking new touches</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2486f84c5b861352d61f706160850bb557ffcbd" translate="yes" xml:space="preserve">
          <source>Trailing effect</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e174a1314a69c3301026f4b704cbcd04575c9e" translate="yes" xml:space="preserve">
          <source>TransactionInactiveError</source>
          <target state="translated">TransactionInactiveError</target>
        </trans-unit>
        <trans-unit id="21143d6a433a742628dd0536a7c0932a26499db5" translate="yes" xml:space="preserve">
          <source>Transactions are expected to be short-lived, so the browser can terminate a transaction that takes too long, in order to free up storage resources that the long-running transaction has locked. You can abort the transaction, which rolls back the changes made to the database in the transaction. And you don't even have to wait for the transaction to start or be active to abort it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb010f608db3a7c56aa08c5cde2290778892495" translate="yes" xml:space="preserve">
          <source>Transactions can fail for a fixed number of reasons, all of which (except the user agent crash) will trigger an abort callback:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e33607b6c7584207183d2fe6a1ca79bd2949cf7" translate="yes" xml:space="preserve">
          <source>Transactions can have one of three modes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ecf563e201590ffb502b26667f422fc4ffc61a8" translate="yes" xml:space="preserve">
          <source>Transactions can receive DOM events of three different types: &lt;code&gt;error&lt;/code&gt;, &lt;code&gt;abort&lt;/code&gt;, and &lt;code&gt;complete&lt;/code&gt;. We've talked about the way that &lt;code&gt;error&lt;/code&gt; events bubble, so a transaction receives error events from any requests that are generated from it. A more subtle point here is that the default behavior of an error is to abort the transaction in which it occurred. Unless you handle the error by first calling &lt;code&gt;stopPropagation()&lt;/code&gt; on the error event then doing something else, the entire transaction is rolled back. This design forces you to think about and handle errors, but you can always add a catchall error handler to the database if fine-grained error handling is too cumbersome. If you don't handle an error event or if you call &lt;code&gt;abort()&lt;/code&gt; on the transaction, then the transaction is rolled back and an &lt;code&gt;abort&lt;/code&gt; event is fired on the transaction. Otherwise, after all pending requests have completed, you'll get a &lt;code&gt;complete&lt;/code&gt; event. If you're doing lots of database operations, then tracking the transaction rather than individual requests can certainly aid your sanity.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="790a81471bf6a89f1916eb5e4b4517957afb5735" translate="yes" xml:space="preserve">
          <source>Transcoding assets for Media Source Extensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6990335dee7c8275a45849c6fbbf2d43ebf36e28" translate="yes" xml:space="preserve">
          <source>Transferable</source>
          <target state="translated">Transferable</target>
        </trans-unit>
        <trans-unit id="0b9df50da33316d34131a64455decd232a3ef345" translate="yes" xml:space="preserve">
          <source>Transfers control to an &lt;a href=&quot;offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt; object, either on the main thread or on a worker.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dea51bb13a4467c505ee6181171375f497334d54" translate="yes" xml:space="preserve">
          <source>Transform</source>
          <target state="translated">Transform</target>
        </trans-unit>
        <trans-unit id="1173e255e88366adefba4ee1730d700481cc010c" translate="yes" xml:space="preserve">
          <source>TransformFeedback</source>
          <target state="translated">TransformFeedback</target>
        </trans-unit>
        <trans-unit id="55d325e54a1b77a2d9bab311907575af5bbe0b5f" translate="yes" xml:space="preserve">
          <source>TransformList</source>
          <target state="translated">TransformList</target>
        </trans-unit>
        <trans-unit id="828fc86fafcb0a6bb874ecc5d1a87ecd174a9c2d" translate="yes" xml:space="preserve">
          <source>Transformable</source>
          <target state="translated">Transformable</target>
        </trans-unit>
        <trans-unit id="d685ad7c59aeb1945ef867b52857539b62c1b81c" translate="yes" xml:space="preserve">
          <source>Transformations</source>
          <target state="translated">Transformations</target>
        </trans-unit>
        <trans-unit id="52d1a600424e5f3b36ee484c67ed0543839ec74c" translate="yes" xml:space="preserve">
          <source>Transformed in a no-op</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cef4df4d340703594fc301669e90430e959441b" translate="yes" xml:space="preserve">
          <source>Transforms</source>
          <target state="translated">Transforms</target>
        </trans-unit>
        <trans-unit id="c08c37d419de48ece33c64b69107c6a9b88565b6" translate="yes" xml:space="preserve">
          <source>TransitionEvent</source>
          <target state="translated">TransitionEvent</target>
        </trans-unit>
        <trans-unit id="50f4a4408dca665a93ae56363e719e8fcd608cde" translate="yes" xml:space="preserve">
          <source>TransitionEvent.animationName</source>
          <target state="translated">TransitionEvent.animationName</target>
        </trans-unit>
        <trans-unit id="92bcfb9957536730ce8fad1c5ca8335a024614e9" translate="yes" xml:space="preserve">
          <source>TransitionEvent.constructor</source>
          <target state="translated">TransitionEvent.constructor</target>
        </trans-unit>
        <trans-unit id="4a651e16b7cbb5f64cb88482cc2b1a2ff0ca830f" translate="yes" xml:space="preserve">
          <source>TransitionEvent.elapsedTime</source>
          <target state="translated">TransitionEvent.elapsedTime</target>
        </trans-unit>
        <trans-unit id="8a4b9623f8a931abb86ac03d731874dee756eddd" translate="yes" xml:space="preserve">
          <source>TransitionEvent.pseudoElement</source>
          <target state="translated">TransitionEvent.pseudoElement</target>
        </trans-unit>
        <trans-unit id="b8faf22691e70a6663401b85a31794bc53213abd" translate="yes" xml:space="preserve">
          <source>Translating</source>
          <target state="translated">Translating</target>
        </trans-unit>
        <trans-unit id="7cb338a916152e13525f9822a4d915c168c521f0" translate="yes" xml:space="preserve">
          <source>Transparency</source>
          <target state="translated">Transparency</target>
        </trans-unit>
        <trans-unit id="d21741d8a0d6a4fccc77f68923870aa0cbd107c5" translate="yes" xml:space="preserve">
          <source>Traveling through history</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5549ac8b888e22b01fa637b7351d8e5201d7fba" translate="yes" xml:space="preserve">
          <source>TreeWalker</source>
          <target state="translated">TreeWalker</target>
        </trans-unit>
        <trans-unit id="680cc5e5985955c43317f12bcafcfec466d439a8" translate="yes" xml:space="preserve">
          <source>TreeWalker.root</source>
          <target state="translated">TreeWalker.root</target>
        </trans-unit>
        <trans-unit id="028baf5701d48cdb13c738e6a131ab33745bc2ef" translate="yes" xml:space="preserve">
          <source>Triggered if something goes wrong with the notification; this is usually because the notification couldn't be displayed for some reason.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48dc61ad4f1c14804650d82ec1907bf9207ce3b6" translate="yes" xml:space="preserve">
          <source>Triggered once the notification is closed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2b98e0127654ba9e0cd5d100bbd01bb2cfbe22" translate="yes" xml:space="preserve">
          <source>Triggered when the notification is displayed to the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0977860a8462a106dcea4f70423a441a4c78ea73" translate="yes" xml:space="preserve">
          <source>Triggered when the user clicks on the notification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfc83cecc8da65a85bb8cc18d5563935d5139dd9" translate="yes" xml:space="preserve">
          <source>Triggers a native browser interface to assist the user in completing the fields which have an &lt;a href=&quot;https://html.spec.whatwg.org/#autofill-field-name&quot;&gt;autofill field name&lt;/a&gt; value that is not &lt;code&gt;off&lt;/code&gt; or &lt;code&gt;on&lt;/code&gt;. The form will receive an event once the user has finished with the interface, the event will either be &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/autocomplete&quot;&gt;autocomplete&lt;/a&gt;&lt;/code&gt; when the fields have been filled or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/autocompleteerror&quot;&gt;autocompleteerror&lt;/a&gt;&lt;/code&gt; when there was a problem. &lt;strong&gt;This method has been removed from Chrome and Firefox &amp;mdash; see &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1270740&quot;&gt;bug 1270740&lt;/a&gt; for background information on why.&lt;/strong&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="774efc2aa71c54d89be666d5f2b42da4b148a7da" translate="yes" xml:space="preserve">
          <source>Trimming of whitespace and removal of duplicates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a615983c14f7aaa2046231aeeb0d5fb75859be0a" translate="yes" xml:space="preserve">
          <source>Try Again Later</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e43c5ee2d48668c49033d98cef4f58a3ec2d4a6" translate="yes" xml:space="preserve">
          <source>Try different ways to clear the canvas (&lt;a href=&quot;../../canvasrenderingcontext2d/clearrect&quot;&gt;&lt;code&gt;clearRect()&lt;/code&gt;&lt;/a&gt; vs. &lt;a href=&quot;../../canvasrenderingcontext2d/fillrect&quot;&gt;&lt;code&gt;fillRect()&lt;/code&gt;&lt;/a&gt; vs. resizing the canvas).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5ef7b6b4b3ff809b3174b8c93efd7bdb6e8ae31" translate="yes" xml:space="preserve">
          <source>Try experimenting using the following two test cases:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b00898fb02c5dff5d03e49152b0914d180f76386" translate="yes" xml:space="preserve">
          <source>Try it out</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15d7234f8f051a167fce74d6d9648206449eae32" translate="yes" xml:space="preserve">
          <source>Try the results out below:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22d0f1c2a49edf589c2904ccc62f1513a16d64c5" translate="yes" xml:space="preserve">
          <source>Try this out here:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c497e2c988253665d7e10d4090ed732ec8c8270b" translate="yes" xml:space="preserve">
          <source>Trying to create an object store with a name that already exists (or trying to delete an object store with a name that does not already exist) will throw an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992ea581d183ee70d87d36fd1dd27d9ceb4be114" translate="yes" xml:space="preserve">
          <source>Turn off transparency</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="011368f5bc560fdc5e2de979e44c198a75c3ca1f" translate="yes" xml:space="preserve">
          <source>Turn the &lt;a href=&quot;htmldocument&quot;&gt;&lt;code&gt;HTMLDocument&lt;/code&gt;&lt;/a&gt; interface into a &lt;code&gt;Document&lt;/code&gt; extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fb4d91565d27e5626152fbb57d9d3bb1c76f03" translate="yes" xml:space="preserve">
          <source>Turn the &lt;code&gt;HTMLDocument&lt;/code&gt; interface into a &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; extension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd10b31f9feee6967d1b4fc6b1a244b0bb1dbba4" translate="yes" xml:space="preserve">
          <source>Turns the path currently being built into the current clipping path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="654171647baa6be8557a5d627cf35c7075ebb257" translate="yes" xml:space="preserve">
          <source>Tutorials</source>
          <target state="translated">チュートリアル</target>
        </trans-unit>
        <trans-unit id="689b4a614cfb56259ad52bb3e14436f7789092cc" translate="yes" xml:space="preserve">
          <source>Tutorials &amp;amp; tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4adb1045be004ec1a8bb586601af1ccd1a67fbc" translate="yes" xml:space="preserve">
          <source>Tutorials and guides</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35736bdfc96240673f2f2d009785e3c574517f1f" translate="yes" xml:space="preserve">
          <source>Two exceptional CSS properties are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8be069bcc39e4c3af03327c6b8a5bb8fa50bf39f" translate="yes" xml:space="preserve">
          <source>Two methods creating such an object: &lt;a href=&quot;window/location&quot;&gt;&lt;code&gt;Window.location&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;document/location&quot;&gt;&lt;code&gt;Document.location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4840475e079d6e5a81cf16d81d404d9c855aab3" translate="yes" xml:space="preserve">
          <source>Two objects derive from it : &lt;a href=&quot;cssmediarule&quot;&gt;&lt;code&gt;CSSMediaRule&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;csssupportsrule&quot;&gt;&lt;code&gt;CSSSupportsRule&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ccf65581306c87fe0cbfd2a45a9d821181538b" translate="yes" xml:space="preserve">
          <source>Two values are possible:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74103798f0e2a785683c4aa0060f82273226a78" translate="yes" xml:space="preserve">
          <source>Tying it all together is the JavaScript to draw our framed images:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d95dea7d1bea328045bdc7a3b6102ae0cc9655e" translate="yes" xml:space="preserve">
          <source>Tying it together with JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3deb7456519697ecf4eefc455516c969a3681bae" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="translated">Type</target>
        </trans-unit>
        <trans-unit id="daf531ae2d8315b52c3cf6d6ccd4ce800f697e06" translate="yes" xml:space="preserve">
          <source>Type constants</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb066f4dbec4943be8cbab5c19aee54a31d25541" translate="yes" xml:space="preserve">
          <source>Type of endings on the end of lines. Possible values: &lt;code&gt;butt&lt;/code&gt; (default), &lt;code&gt;round&lt;/code&gt;, &lt;code&gt;square&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516cd49c0949d15c59a96628ad9db1debfa28ba3" translate="yes" xml:space="preserve">
          <source>Type of name property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af8f14bd15271db0f113f7c146e7fa9294b1caa" translate="yes" xml:space="preserve">
          <source>TypeError</source>
          <target state="translated">TypeError</target>
        </trans-unit>
        <trans-unit id="0e3ced9152ebb319d31f440c27bb52b32c3d74e3" translate="yes" xml:space="preserve">
          <source>Typed Arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="831e06c03f1dd990a2ed633ba22453d03ef9310d" translate="yes" xml:space="preserve">
          <source>Typed arrays</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b9e289e2842469d001eccf7ad5d79f3c302dc9" translate="yes" xml:space="preserve">
          <source>Types</source>
          <target state="translated">Types</target>
        </trans-unit>
        <trans-unit id="86497d8e5d5c70024f42d5eb513892a1f0b66b50" translate="yes" xml:space="preserve">
          <source>Types of events available: &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Reference/Events&quot;&gt;Event reference&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d1766d90a76bcdce41947f6333dfc6a9c5066c" translate="yes" xml:space="preserve">
          <source>Typical use of this can be to prevent the download of some assets when the document is solely prerendered, or stop some activities when the document is in the background or minimized.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0c23c51bc2fbd3903bf999e0db471d46339319c" translate="yes" xml:space="preserve">
          <source>Typically a user can press the tab key to move the focus around the page among focusable elements, and use the space bar to activate one (that is, to press a button or toggle a radio button). Which elements are focusable varies depending on the platform and the browser's current configuration. For example, on macOS systems, elements that aren't text input elements are not typically focusable by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7e03eb133bc345d5cc96a7af12f5f46fbf7fdd" translate="yes" xml:space="preserve">
          <source>Typically you will use this by calling &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;show()&lt;/code&gt;&lt;/a&gt;, then entering a loop or recursive function that checks the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; for errors or other reasons to retry the payment request. If a retry is needed, the loop calls &lt;code&gt;retry()&lt;/code&gt;, then loops back to check the response when it comes in. The loop exits only when the user either cancels the payment request or the request is successful.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81a49b7a0477c3cd93f4b56d3f17cb13af6722f" translate="yes" xml:space="preserve">
          <source>Typically, &lt;code&gt;offsetHeight&lt;/code&gt; is a measurement in pixels of the element's CSS height, including any borders, padding, and horizontal scrollbars (if rendered). It does not include the height of pseudo-elements such as &lt;code&gt;::before&lt;/code&gt; or &lt;code&gt;::after&lt;/code&gt;. For the document body object, the measurement includes total linear content height instead of the element's CSS height. Floated elements extending below other linear content are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0847a760c28159454f07b07606e7e0f599947f5" translate="yes" xml:space="preserve">
          <source>Typically, &lt;code&gt;offsetWidth&lt;/code&gt; is a measurement in pixels of the element's CSS width, including any borders, padding, and vertical scrollbars (if rendered). It does not include the width of pseudo-elements such as &lt;code&gt;::before&lt;/code&gt; or &lt;code&gt;::after&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3efe190b09cd4b5fad57693520149076a4c3710" translate="yes" xml:space="preserve">
          <source>Typically, a &lt;code&gt;z&lt;/code&gt; value of 0 represents the plane of the screen. As the value increases, the point moves outward from the screen toward the user. As the value decreases, the point moves farther from the user, with negative values being behind the screen, receding into the distance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5817fa27d4f0e4f090835267807042ea42ce350f" translate="yes" xml:space="preserve">
          <source>Typically, an application may want to perform some cleanup by deleting the file drag data. In this example, the drop event is passed along from drop handler to a custom function called removeDragData. If the browser supports the &lt;a href=&quot;../datatransferitemlist&quot;&gt;&lt;code&gt;DataTransferItemList&lt;/code&gt;&lt;/a&gt; interface, the list's &lt;a href=&quot;../datatransferitemlist/clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method is used to delete the file drag data; otherwise the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../datatransfer/cleardata&quot;&gt;&lt;code&gt;clearData()&lt;/code&gt;&lt;/a&gt; method is used to delete the data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34c0f40a39f5baaa3beda7b5230713cf974be50" translate="yes" xml:space="preserve">
          <source>Typically, an application will include a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; event handler on the drop target element and that handler will turn off the browser's default drag behavior. To add this handler, you need to include a &lt;a href=&quot;../globaleventhandlers/ondragover&quot;&gt;&lt;code&gt;ondragover&lt;/code&gt;&lt;/a&gt; global event handler:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab734e7bc04b28992976c40231afcabb8267353" translate="yes" xml:space="preserve">
          <source>Typically, it's best to use the &lt;a href=&quot;biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; interface to implement higher-order filters. There are several reasons why:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36887723d4f765c83544bdc8368c48f75d4855ac" translate="yes" xml:space="preserve">
          <source>Typically, system notifications refer to the operating system's standard notification mechanism: think for example of how a typical desktop system or mobile device broadcasts notifications.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed4add5ff2b66e48dc8989f0b62c813958c6e3e6" translate="yes" xml:space="preserve">
          <source>Typically, you'll want to call &lt;a href=&quot;beginpath&quot;&gt;&lt;code&gt;beginPath()&lt;/code&gt;&lt;/a&gt; for each new thing you want to stroke. If you don't, the previous sub-paths will remain part of the current path, and get stroked every time you call the &lt;code&gt;stroke()&lt;/code&gt; method. In some cases, however, this may be the desired effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="6edac0870302e237e2e73c002de3c0382c642084" translate="yes" xml:space="preserve">
          <source>UDP Socket API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c808f141e599f3d14a96733c6ce1f223d4d9a15b" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'CompositionEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cc0c8e202eabc04dcdb0bc1d1e891ca64bf51d7" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eef0dfe67d5657b55b9b049bf2ee2c9cf2791b2" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5119b1faf79ef3b4cf469c52b697d3adc84941ea" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardEvent.code' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4527ccf4bdf39d1dc1084bbdf4c74e4453091ee4" translate="yes" xml:space="preserve">
          <source>UI Events&lt;br/&gt;&lt;small&gt;The definition of 'onauxclick' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0959f0369d82a9ae324c11ae7d6e3c44a23a38a1" translate="yes" xml:space="preserve">
          <source>UIEvent</source>
          <target state="translated">UIEvent</target>
        </trans-unit>
        <trans-unit id="c9eb0246ea3943a86fe88d600608856497c2d654" translate="yes" xml:space="preserve">
          <source>UIEvent.constructor</source>
          <target state="translated">UIEvent.constructor</target>
        </trans-unit>
        <trans-unit id="d07d7de5aedb24d1adcd473b94c2254fd9be5c2a" translate="yes" xml:space="preserve">
          <source>UIEvent.detail</source>
          <target state="translated">UIEvent.detail</target>
        </trans-unit>
        <trans-unit id="6f012f0c51a3920f0328105d4de2e50194b3afcc" translate="yes" xml:space="preserve">
          <source>UIEvent.isChar</source>
          <target state="translated">UIEvent.isChar</target>
        </trans-unit>
        <trans-unit id="cc7f08988b49041ffa88a7b63ddcd41bf21f09c0" translate="yes" xml:space="preserve">
          <source>UIEvent.pageX</source>
          <target state="translated">UIEvent.pageX</target>
        </trans-unit>
        <trans-unit id="3ca5ae77a5e68e9fb054c38b1e93995d468c6fd5" translate="yes" xml:space="preserve">
          <source>UIEvent.sourceCapabilities</source>
          <target state="translated">UIEvent.sourceCapabilities</target>
        </trans-unit>
        <trans-unit id="1521b7923697ed84ec9b9d929f75173fb369033e" translate="yes" xml:space="preserve">
          <source>UIEvent.view</source>
          <target state="translated">UIEvent.view</target>
        </trans-unit>
        <trans-unit id="a1c2a9ec94ddda09d4f33a7816a8e70bab16df08" translate="yes" xml:space="preserve">
          <source>URIReference</source>
          <target state="translated">URIReference</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="7071fd1da846e67b9608ee076558e83da329661d" translate="yes" xml:space="preserve">
          <source>URL API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9a76ed3d6a56de9a83d463d9192e04c7c50926" translate="yes" xml:space="preserve">
          <source>URL related interfaces: &lt;a href=&quot;url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;htmlhyperlinkelementutils&quot;&gt;&lt;code&gt;HTMLHyperlinkElementUtils&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c815e2361c42a886201ee95053ca3e65e2639918" translate="yes" xml:space="preserve">
          <source>URL-based payment method identifiers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6809f0101d2926ccfe2322345b181526b9612857" translate="yes" xml:space="preserve">
          <source>URLs may open inside an existing browsing context provided by a standalone web app</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09716c44992b8bceefcd6d77921ff9ec06e2764d" translate="yes" xml:space="preserve">
          <source>USB</source>
          <target state="translated">USB</target>
        </trans-unit>
        <trans-unit id="bedd63da3f774e4e08eb0ff412b0af75cd867d0a" translate="yes" xml:space="preserve">
          <source>USB.getDevices</source>
          <target state="translated">USB.getDevices</target>
        </trans-unit>
        <trans-unit id="bf50fc76a6c3357d85d7758fc1a4de291434eb8a" translate="yes" xml:space="preserve">
          <source>USB.onconnect</source>
          <target state="translated">USB.onconnect</target>
        </trans-unit>
        <trans-unit id="7c27b6768e8259f1c53d7b1bc85d40d6a633a352" translate="yes" xml:space="preserve">
          <source>USB.ondisconnect</source>
          <target state="translated">USB.ondisconnect</target>
        </trans-unit>
        <trans-unit id="9fb0eaffc33d7e2fd28c31667a024bdbef495ddd" translate="yes" xml:space="preserve">
          <source>USB.requestDevice</source>
          <target state="translated">USB.requestDevice</target>
        </trans-unit>
        <trans-unit id="1e32aefb4d9edcd47079fb7b758a99d0e17797cf" translate="yes" xml:space="preserve">
          <source>USBDevice</source>
          <target state="translated">USBDevice</target>
        </trans-unit>
        <trans-unit id="ded448766056f332ae39abaae98834935964262f" translate="yes" xml:space="preserve">
          <source>USBDevice.USBDevice.deviceClass</source>
          <target state="translated">USBDevice.USBDevice.deviceClass</target>
        </trans-unit>
        <trans-unit id="8b447d44c7b4b3c5a9e0c6869973b9808e28e67d" translate="yes" xml:space="preserve">
          <source>USBDevice.claimInterface</source>
          <target state="translated">USBDevice.claimInterface</target>
        </trans-unit>
        <trans-unit id="5cc1842b554831c17346eb740ee1b5cc7b2e6746" translate="yes" xml:space="preserve">
          <source>USBDevice.clearHalt</source>
          <target state="translated">USBDevice.clearHalt</target>
        </trans-unit>
        <trans-unit id="f3e03c4eb5e198a6c159ad35064de72cdf793303" translate="yes" xml:space="preserve">
          <source>USBDevice.close</source>
          <target state="translated">USBDevice.close</target>
        </trans-unit>
        <trans-unit id="80cc96e96a842127894ddca74f60b9107bb10bcd" translate="yes" xml:space="preserve">
          <source>USBDevice.configuration</source>
          <target state="translated">USBDevice.configuration</target>
        </trans-unit>
        <trans-unit id="3c70c931c04974bebe040d019fd07f275e72b10e" translate="yes" xml:space="preserve">
          <source>USBDevice.configurations</source>
          <target state="translated">USBDevice.configurations</target>
        </trans-unit>
        <trans-unit id="ce7ea1d16e4b827a1108fa872bc33d31edb99073" translate="yes" xml:space="preserve">
          <source>USBDevice.controlTransferIn</source>
          <target state="translated">USBDevice.controlTransferIn</target>
        </trans-unit>
        <trans-unit id="207ee9a3576906498d78e7e2d6353196942434bc" translate="yes" xml:space="preserve">
          <source>USBDevice.controlTransferOut</source>
          <target state="translated">USBDevice.controlTransferOut</target>
        </trans-unit>
        <trans-unit id="e226ecf5e5bcae039686d7581ba8da04f862d58d" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceClass</source>
          <target state="translated">USBDevice.deviceClass</target>
        </trans-unit>
        <trans-unit id="fe3846f357c40070ffe59d48456c37de9ba94c5d" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceProtocol</source>
          <target state="translated">USBDevice.deviceProtocol</target>
        </trans-unit>
        <trans-unit id="7df47045df9dfc036a9abd3fd7d2fff4f776eade" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceSubclass</source>
          <target state="translated">USBDevice.deviceSubclass</target>
        </trans-unit>
        <trans-unit id="ee5fa1e24aa70d46cae20b3e8525f0859a011dd8" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceVersionMajor</source>
          <target state="translated">USBDevice.deviceVersionMajor</target>
        </trans-unit>
        <trans-unit id="6efcf9f69afba009e3f042c6631d7625733a09fb" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceVersionMinor</source>
          <target state="translated">USBDevice.deviceVersionMinor</target>
        </trans-unit>
        <trans-unit id="ef90d2e0b7607d7611f9e20adc204675c57fef02" translate="yes" xml:space="preserve">
          <source>USBDevice.deviceVersionSubminor</source>
          <target state="translated">USBDevice.deviceVersionSubminor</target>
        </trans-unit>
        <trans-unit id="f42a5d3b915ed471ae5910b6e1ad47e29aa47d2a" translate="yes" xml:space="preserve">
          <source>USBDevice.isochronousTransferIn</source>
          <target state="translated">USBDevice.isochronousTransferIn</target>
        </trans-unit>
        <trans-unit id="4b6a8d8f03d28da5c9681e836882e706ca97a28f" translate="yes" xml:space="preserve">
          <source>USBDevice.isochronousTransferOut</source>
          <target state="translated">USBDevice.isochronousTransferOut</target>
        </trans-unit>
        <trans-unit id="929928d0fd8b7067bb0cff7816acfc5a3203e679" translate="yes" xml:space="preserve">
          <source>USBDevice.manufacturerName</source>
          <target state="translated">USBDevice.manufacturerName</target>
        </trans-unit>
        <trans-unit id="9dbe62d64fa9ae6de4579353c9e42b9acb277ac8" translate="yes" xml:space="preserve">
          <source>USBDevice.open</source>
          <target state="translated">USBDevice.open</target>
        </trans-unit>
        <trans-unit id="2b6c328313029e051cae05b0d2e235f2663887c0" translate="yes" xml:space="preserve">
          <source>USBDevice.opened</source>
          <target state="translated">USBDevice.opened</target>
        </trans-unit>
        <trans-unit id="2351b69ac14c1b55323bd12bd1780da72a0074af" translate="yes" xml:space="preserve">
          <source>USBDevice.productID</source>
          <target state="translated">USBDevice.productID</target>
        </trans-unit>
        <trans-unit id="9865a10b85eccd62be28acf84ea6561916bd60ba" translate="yes" xml:space="preserve">
          <source>USBDevice.productName</source>
          <target state="translated">USBDevice.productName</target>
        </trans-unit>
        <trans-unit id="ee9e726cc300f274d5a56dbaa5c4ce88ecd30909" translate="yes" xml:space="preserve">
          <source>USBDevice.releaseInterface</source>
          <target state="translated">USBDevice.releaseInterface</target>
        </trans-unit>
        <trans-unit id="3426a119884bb5f5634ad91c56e6710f9f3827dc" translate="yes" xml:space="preserve">
          <source>USBDevice.reset</source>
          <target state="translated">USBDevice.reset</target>
        </trans-unit>
        <trans-unit id="b1b308bcb47fcb7c1bea9ef2c3480502b8759ffe" translate="yes" xml:space="preserve">
          <source>USBDevice.selectAlternateInterface</source>
          <target state="translated">USBDevice.selectAlternateInterface</target>
        </trans-unit>
        <trans-unit id="a256afc1e41867f93edb7865dcbf84e75b4d5be3" translate="yes" xml:space="preserve">
          <source>USBDevice.selectConfiguration</source>
          <target state="translated">USBDevice.selectConfiguration</target>
        </trans-unit>
        <trans-unit id="b51a5ed95b5787898ea6cbd02226ba81ecb6b0f0" translate="yes" xml:space="preserve">
          <source>USBDevice.serialNumber</source>
          <target state="translated">USBDevice.serialNumber</target>
        </trans-unit>
        <trans-unit id="bf7e4ad5d8eb538d4efc8f9ba26ba1df75b08001" translate="yes" xml:space="preserve">
          <source>USBDevice.transferIn</source>
          <target state="translated">USBDevice.transferIn</target>
        </trans-unit>
        <trans-unit id="6616083e8c9688b3ce794d4cb05e0641d188a830" translate="yes" xml:space="preserve">
          <source>USBDevice.transferOut</source>
          <target state="translated">USBDevice.transferOut</target>
        </trans-unit>
        <trans-unit id="6ddf9adfd65d422ad5649eb8e04def26ce70e009" translate="yes" xml:space="preserve">
          <source>USBDevice.usbVersionMajor</source>
          <target state="translated">USBDevice.usbVersionMajor</target>
        </trans-unit>
        <trans-unit id="b43f1c74b422344bafa5ca63b83ddd382fa4af37" translate="yes" xml:space="preserve">
          <source>USBDevice.usbVersionMinor</source>
          <target state="translated">USBDevice.usbVersionMinor</target>
        </trans-unit>
        <trans-unit id="2875d2c30f1a41b8006183f732bc28cb32e496ca" translate="yes" xml:space="preserve">
          <source>USBDevice.usbVersionSubminor</source>
          <target state="translated">USBDevice.usbVersionSubminor</target>
        </trans-unit>
        <trans-unit id="8be8a0a0dfa283600086364c2da6d2616f695d3f" translate="yes" xml:space="preserve">
          <source>USBDevice.vendorID</source>
          <target state="translated">USBDevice.vendorID</target>
        </trans-unit>
        <trans-unit id="b23fdecd247dfe62ea4c499c2ed79042f6b279a5" translate="yes" xml:space="preserve">
          <source>USVString</source>
          <target state="translated">USVString</target>
        </trans-unit>
        <trans-unit id="be2f6c42d784723e163beb17914ca1ac2ee81f02" translate="yes" xml:space="preserve">
          <source>Uncaught exception in request's success/error handler</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd634113094d3e6d202d5500694fea134a2a87ba" translate="yes" xml:space="preserve">
          <source>Under consideration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be1d872508dff2bb8233b60d70cabc15705bcfbc" translate="yes" xml:space="preserve">
          <source>Understanding Success Criterion 2.2.2 | W3C Understanding WCAG 2.0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d43cc0beaceb55dcda5fe8f60544a117ad8a33f" translate="yes" xml:space="preserve">
          <source>Understanding putImageData</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1496b76ec7599c63d18e350cb3ee5f07441b259f" translate="yes" xml:space="preserve">
          <source>Understanding source element size</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98778b7d6c10016dd484c6dfe7bf6e3893a896b9" translate="yes" xml:space="preserve">
          <source>UndoManager and DOMTransaction&lt;br/&gt;&lt;small&gt;The definition of 'Element' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9332e8b734c76c9e98ff25c70db2389f59a4b06d" translate="yes" xml:space="preserve">
          <source>Undoes the last executed command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a9b6db5e999a20349a608ed5b5934e67ff46b5" translate="yes" xml:space="preserve">
          <source>UniformLocation</source>
          <target state="translated">UniformLocation</target>
        </trans-unit>
        <trans-unit id="265f14540fb6ba2b638ac9aec3f9185d74242b78" translate="yes" xml:space="preserve">
          <source>UnitTypes</source>
          <target state="translated">UnitTypes</target>
        </trans-unit>
        <trans-unit id="9769121f10f77079b27eb08e9ffa488cbcc37ed0" translate="yes" xml:space="preserve">
          <source>United Kingdom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8876c7a7b5b332e6a75ce8b7bcde31cf95b0dfd" translate="yes" xml:space="preserve">
          <source>United Nations: UN/LOCODE Country Subdivisions ISO 3166-2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6c43319fee0340d651934b68ad581e42993974b" translate="yes" xml:space="preserve">
          <source>Universal Postal Union: &lt;a href=&quot;http://www.upu.int/en/resources/postcodes/looking-up-a-postcode.html&quot;&gt;Post code lookup service&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e17ffe5df0beae34c227494408d3961b7cc94b" translate="yes" xml:space="preserve">
          <source>Universal Postal Union: &lt;a href=&quot;http://www.upu.int/en/resources/postcodes/universal-postcoder-database.html&quot;&gt;Universal Post*Code&amp;reg; Database&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc7819b34ff87570745fbe461e36a16f80e562ce" translate="yes" xml:space="preserve">
          <source>Unknown</source>
          <target state="translated">Unknown</target>
        </trans-unit>
        <trans-unit id="b6c940caac6018ce695c92a09f1e7a302196d1eb" translate="yes" xml:space="preserve">
          <source>Unknown parameters are ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f644fda1c5f6dc5df04d0d3af30091909916a9c1" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'AbstractWorker' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b097e2ee6b09d662fb99c8ce9db5b2e23ad48557" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'HMDVRDevice' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baa83adb861c39f744136b425f68574dcc5bc652" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'Keyboard' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a909a0163f5375e2dc83f19395fb493b3a795b40" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'KeyboardLayoutMap' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ffea960f8ef40e6eb151e6a6f51228dd9e1e25c" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'MessageEvent' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b57261e2c7a7deba0d3aa240ff11d8f2ee24a9" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'PositionSensorVRDevice' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af064d00bc52a3d48463c04862e0adf984750c1d" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'activeVRDisplays' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72336b343a84838d8c14f8a9d4665d1f99533958" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'data' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b7bbc2c7d66a2bacaeae2044d62a551c3dc3f5e" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'entries' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="168e3411cbe217eca589328f249d03c8a0632879" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'fastSeek()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db667cada355a481312e34aa316968cb73a0724c" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'forEach()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="affd1ed3bcaf51686560c4ed5e2fcecde1e44bec" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc84e2923dc2cf497c493f4804144da05b876d2f" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'getEyeParameters()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15c254abbc759c4f535db5d909e614cdb71d502f" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'getLayoutMap()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ed87606629596508f2846204d8a9b2ad54d4e9" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'getVRDisplays()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0be0d495cb25ece54d7b17fa817f6f52fd23ed3" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'has()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e744fae0a0bfa6934ff056a58d6c8347adacb6a0" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'keyboard' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c1f1699814088afe3d4d25c9ba1dea97363a6c" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'keys' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4c644d27dc98634e4a2b45ff8aeebc0e8e81d8" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'lastEventId' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07df65538d5bfe3e9c62194cc26220dcc0bbf276" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'onencrypted' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6b8b0e1acfa3cf26f2869d6eac0c65c10090fe" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'onkeystatuseschange' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1949af1f074a4a4172cc5ef3cbaf2260978eefb0" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'onmessage' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee637de3e0945fd310d9ee2d94ff9b6b61af2fd2" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'onwaitingforkey' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f20e449109b88afbf64cedfbb2ecb8b7e7238919" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'openKeyCursor()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302bbe0e47a92a0a948bbe46bdf869587db93049" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'origin' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f28db9fdb2d9e22bb611b52e1674ceb203d36461" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'setFieldOfView()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fb19caf69f2bb10e3e227554c7bb67e3da5a8ff" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'size' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94e2a8e8fcc3dbd63f07a0e76bab269da19d81a5" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'source' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d2598b87e673b6313ad6db73f297a180278e3e" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'unlock()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="671cccb13bd40828ee69354e3806d4f06e85a17b" translate="yes" xml:space="preserve">
          <source>Unknown&lt;br/&gt;&lt;small&gt;The definition of 'values' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99b8807fd09d80d54bee9f615412060fb6847a57" translate="yes" xml:space="preserve">
          <source>Unless stated otherwise, nodes based upon &lt;code&gt;AudioScheduledSourceNode&lt;/code&gt; output silence when not playing (that is, before &lt;code&gt;start()&lt;/code&gt; is called and after &lt;code&gt;stop()&lt;/code&gt; is called). Silence is represented, as always, by a stream of samples with the value zero (0).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfdde2dacdc35b840a2519f41b92963ce18d09f3" translate="yes" xml:space="preserve">
          <source>Unless the shapes you'll be drawing fill the complete canvas (for instance a backdrop image), you need to clear any shapes that have been drawn previously. The easiest way to do this is using the &lt;a href=&quot;../../canvasrenderingcontext2d/clearrect&quot;&gt;&lt;code&gt;clearRect()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d33966ed9ada92f9a80144d4c0c2fde9cbfc239" translate="yes" xml:space="preserve">
          <source>Unless you only use exact constraints (which is pretty restrictive, so be sure you mean it!), there's no guarantee exactly what you're going to actually get after the constraints are applied. The values of the constrainable properties as they actually are in the resulting media are referred to as the settings. If you need to know the true format and other properties of the media, you can obtain those settings by calling &lt;a href=&quot;../mediastreamtrack/getsettings&quot;&gt;&lt;code&gt;MediaStreamTrack.getSettings()&lt;/code&gt;&lt;/a&gt;. This returns an object based on the dictionary &lt;a href=&quot;../mediatracksettings&quot;&gt;&lt;code&gt;MediaTrackSettings&lt;/code&gt;&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd03e6169b323b52d76138a62bd7fb7d754a85b" translate="yes" xml:space="preserve">
          <source>Unless your code is privileged (chrome or at least has the UniversalBrowserRead privilege), it may get the value of the &lt;code&gt;general.oscpu.override&lt;/code&gt; preference instead of the true platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af461ec78b9aa28fbd1018ef0dad481e00247f0f" translate="yes" xml:space="preserve">
          <source>Unlike &quot;native&quot; events, which are fired by the DOM and invoke event handlers asynchronously via the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/EventLoop&quot;&gt;event loop&lt;/a&gt;, &lt;code&gt;dispatchEvent&lt;/code&gt; invokes event handlers synchronously. All applicable event handlers will execute and return before the code continues on after the call to &lt;code&gt;dispatchEvent&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22e61b26078e65c4124dfc13bf9f3dc0f12abc01" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;adoptnode&quot;&gt;&lt;code&gt;document.adoptNode()&lt;/code&gt;&lt;/a&gt;, the original node is not removed from its original document. The imported node is a clone of the original.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e13a4e968d98c8046104db9240f969b76df75b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;extractcontents&quot;&gt;&lt;code&gt;Range.extractContents&lt;/code&gt;&lt;/a&gt;, this method does not return a &lt;a href=&quot;../documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt; containing the deleted content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4c2746e096504a37d023f4079aa005c6b3ca40a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SVG&quot;&gt;SVG&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; only supports one primitive shape: rectangles. All other shapes must be created by combining one or more paths, lists of points connected by lines. Luckily, we have an assortment of path drawing functions which make it possible to compose very complex shapes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423041992866b5468a706cd6009bdafe0c908887" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;websockets_api&quot;&gt;WebSockets&lt;/a&gt;, server-sent events are unidirectional; that is, data messages are delivered in one direction, from the server to the client (such as a user's web browser). That makes them an excellent choice when there's no need to send data from the client to the server in message form. For example, &lt;code&gt;EventSource&lt;/code&gt; is a useful approach for handling things like social media status updates, news feeds, or delivering data into a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Client-side_web_APIs/Client-side_storage&quot;&gt;client-side storage&lt;/a&gt; mechanism like &lt;a href=&quot;indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt; or &lt;a href=&quot;web_storage_api&quot;&gt;web storage&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d2b550d95f4f2b0d847723ac7c9e5969494d9a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;textContent&lt;/code&gt;, altering &lt;code&gt;innerText&lt;/code&gt; in Internet Explorer (version 11 and below) removes child nodes from the element and &lt;em&gt;permanently destroys&lt;/em&gt; all descendant text nodes. It is impossible to insert the nodes again into any other element or into the same element anymore.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1de812f3ee9569f1e037c97f41a1c2db2093737" translate="yes" xml:space="preserve">
          <source>Unlike other nodes in the Web Audio API, the options passed into the IIR filter upon creation are not optional. The filter needs these values to work and with the vast range of filters available, there is no default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d92201e4921af274c1c11f28c29a3a0c6aeb44" translate="yes" xml:space="preserve">
          <source>Unlike other timing data available to JavaScript (for example &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Date/now&quot;&gt;&lt;code&gt;Date.now&lt;/code&gt;&lt;/a&gt;), the timestamps returned by &lt;code&gt;Performance.now()&lt;/code&gt; are not limited to one-millisecond resolution. Instead, they represent times as floating-point numbers with up to microsecond precision.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb641c95ae56622484bdcca3574be95ca4398c0a" translate="yes" xml:space="preserve">
          <source>Unlike some other element-lookup methods such as &lt;a href=&quot;queryselector&quot;&gt;&lt;code&gt;Document.querySelector()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;queryselectorall&quot;&gt;&lt;code&gt;Document.querySelectorAll()&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;getElementById()&lt;/code&gt; is only available as a method of the global &lt;code&gt;document&lt;/code&gt; object, and &lt;em&gt;not&lt;/em&gt; available as a method on all element objects in the DOM. Because ID values must be unique throughout the entire document, there is no need for &quot;local&quot; versions of the function.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca92d4fa5c78a87ba044b6e4aa147e6cdda3258" translate="yes" xml:space="preserve">
          <source>Unlike the path functions we'll see in the next section, all three rectangle functions draw immediately to the canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a0ccf349c1b03e7e428eeeb23b8644b9c984c9" translate="yes" xml:space="preserve">
          <source>Unlike the similar methods in the &lt;a href=&quot;fetch_api&quot;&gt;Fetch API&lt;/a&gt;, which only allow the method to be invoked once, these methods can be called multiple times.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c908019fbd84cb936bf702b8703a8d497e9d497b" translate="yes" xml:space="preserve">
          <source>Unloading Documents &amp;mdash; Prompt to unload a document</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b5e862f42525c9c78a64a35e56e78c3b7b47f78" translate="yes" xml:space="preserve">
          <source>Unlocked state</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e86c04230f727e742076adc89b484b1196701beb" translate="yes" xml:space="preserve">
          <source>Unlocks all keys captured by the &lt;code&gt;lock()&lt;/code&gt; method and returns synchronously.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff7d6f6d31ac7f9e6e3c9cf20d201f3dd6b59a0c" translate="yes" xml:space="preserve">
          <source>Unregisters and deletes a specified subscription endpoint. In the updated API, a subscription is unregistered by calling the &lt;a href=&quot;pushsubscription/unsubscribe&quot;&gt;&lt;code&gt;PushSubscription.unsubscribe()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78e09ec6188a192c2a9eddc5bceab97e37952c16" translate="yes" xml:space="preserve">
          <source>Unsigned 64-bit integer number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be8f85bc1819ed778ee37561fb0ee8a2da93ff6" translate="yes" xml:space="preserve">
          <source>Unsized sRGB format that leaves the precision up to the driver.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d661b1dd66970f49681dd792ccf9997de1153eba" translate="yes" xml:space="preserve">
          <source>Unsized sRGB format with unsized alpha component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a875adbf1ca73f154c9a328bcb2f14bafb1c4d" translate="yes" xml:space="preserve">
          <source>Unsupported Data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4643db96309ae86cb866f79b31b33d62ef8c9fc5" translate="yes" xml:space="preserve">
          <source>Until Firefox 26 included, when the vibration pattern was too long or any of its elements too large, Firefox threw an exception instead of returning &lt;code&gt;false&lt;/code&gt; (&lt;a href=&quot;https://bugzil.la/884935&quot;&gt;bug 884935&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c34221e42abc5e12861006a5e56c80f208d729f" translate="yes" xml:space="preserve">
          <source>Until now we have created our own &lt;a href=&quot;drawing_shapes&quot;&gt;shapes&lt;/a&gt; and &lt;a href=&quot;applying_styles_and_colors&quot;&gt;applied styles&lt;/a&gt; to them. One of the more exciting features of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; is the ability to use images. These can be used to do dynamic photo compositing or as backdrops of graphs, for sprites in games, and so forth. External images can be used in any format supported by the browser, such as PNG, GIF, or JPEG. You can even use the image produced by other canvas elements on the same page as the source!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abe09f676cc0e41d5bfea745ebac012101ce686" translate="yes" xml:space="preserve">
          <source>Until now we have made use of the &lt;a href=&quot;../../canvasrenderingcontext2d/clearrect&quot;&gt;&lt;code&gt;clearRect&lt;/code&gt;&lt;/a&gt; method when clearing prior frames. If you replace this method with a semi-transparent &lt;a href=&quot;../../canvasrenderingcontext2d/fillrect&quot;&gt;&lt;code&gt;fillRect&lt;/code&gt;&lt;/a&gt;, you can easily create a trailing effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bb1e903fecea393b864a7b8ae4c8d52db33102" translate="yes" xml:space="preserve">
          <source>Until now we haven't looked at the actual pixels of our canvas. With the &lt;code&gt;ImageData&lt;/code&gt; object you can directly read and write a data array to manipulate pixel data. We will also look into how image smoothing (anti-aliasing) can be controlled and how to save images from your canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11370793caa8b47adf2c09d2687f0a2649190088" translate="yes" xml:space="preserve">
          <source>Up until now we have only seen methods of the drawing context. If we want to apply colors to a shape, there are two important properties we can use: &lt;code&gt;fillStyle&lt;/code&gt; and &lt;code&gt;strokeStyle&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc9e8d3539f308f1421fcf9742177b4a2ff53323" translate="yes" xml:space="preserve">
          <source>Update background color</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="858938f345f2a7488cbb620edbbf0948c7f20b9e" translate="yes" xml:space="preserve">
          <source>Updates the details of an existing &lt;a href=&quot;paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="297e7e12a9ed8f09137c6d2ebb74821686e0259b" translate="yes" xml:space="preserve">
          <source>Updates the most recent entry on the history stack to have the specified data, title, and, if provided, URL. The data is treated as opaque by the DOM; you may specify any JavaScript object that can be serialized. Note that Firefox currently ignores the title parameter; for more information, see &lt;a href=&quot;history_api&quot;&gt;manipulating the browser history&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2bd59c99c1ae3e1ded3800172aa0cda52679fa" translate="yes" xml:space="preserve">
          <source>Updates the specified timing properties of this &lt;code&gt;AnimationEffect&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64d003f1f2fe77808d6454c3dca67781f9e07b1" translate="yes" xml:space="preserve">
          <source>Updates the specified timing properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2005bc376b2e9ab7e86aa370b7aa54ac8864eced" translate="yes" xml:space="preserve">
          <source>Updates the version of the database. Returns immediately and runs a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBTransaction#VERSION_CHANGE&quot;&gt;&lt;code&gt;versionchange&lt;/code&gt;&lt;/a&gt; transaction on the connected database in a separate thread.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa36d331f1fc330361205fca375436302fe3acb8" translate="yes" xml:space="preserve">
          <source>Updates to DataTransfer.types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd5b92131861d10f556d0ec750fccf0f76938cf9" translate="yes" xml:space="preserve">
          <source>Updating an ad's visibility timer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4176b8fd03c37bc759373461590c77c1343853a0" translate="yes" xml:space="preserve">
          <source>Updating an entry in the database</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071934141635d98b2a1c06964cefa278bebe4e6e" translate="yes" xml:space="preserve">
          <source>Updating the display</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1c4914ce870dca908f57254406d29286fbe9abb" translate="yes" xml:space="preserve">
          <source>Updating the settings display</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea1c9bbc90701922424dfa3f2f8b3f406f41e2b" translate="yes" xml:space="preserve">
          <source>Updating the status display</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea0c8f64bd33b24c738e23ac97a29234e9b03274" translate="yes" xml:space="preserve">
          <source>Uploading JSON data</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d72107031f47c9d217a29b655764a850a963986" translate="yes" xml:space="preserve">
          <source>Uploading a file</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="184646850e7101f37ef2ae2d3067a13d69ba40dc" translate="yes" xml:space="preserve">
          <source>Uploading multiple files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b449028e1d0d24e2d64dcc03afe41b534e1209a9" translate="yes" xml:space="preserve">
          <source>Upon receiving a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event, we call &lt;a href=&quot;../geolocation/getcurrentposition&quot;&gt;&lt;code&gt;getCurrentPosition()&lt;/code&gt;&lt;/a&gt; to request the device's current position. This is an asynchronous request, so we provide a callback which receives as in put a &lt;a href=&quot;../position&quot;&gt;&lt;code&gt;Position&lt;/code&gt;&lt;/a&gt; object describing the determined position.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="590e43aad4795ffb782d21afdc6118508fb7abd4" translate="yes" xml:space="preserve">
          <source>Upper bound of the key range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="4cb3c33931330da5bdeebad47d10380dde5c4c5f" translate="yes" xml:space="preserve">
          <source>Usage in JavaScript</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d99b032888bf69448943e3813f272f0f43c556" translate="yes" xml:space="preserve">
          <source>Usage notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c871671b5b8db25a1691caae602ff3ac682d2786" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;arc&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.arc()&lt;/code&gt;&lt;/a&gt; to draw a circular arc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acf552cdef602e34ed7598350d730b3b26b7c92" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;cachestorage/match&quot;&gt;&lt;code&gt;CacheStorage.match()&lt;/code&gt;&lt;/a&gt; to check if a given &lt;a href=&quot;request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; is a key in any of the &lt;a href=&quot;cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; objects that the &lt;code&gt;CacheStorage&lt;/code&gt; object tracks.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2c5500c2895a2c7ce746f458fcf30b41775b1e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;cachestorage/open&quot;&gt;&lt;code&gt;CacheStorage.open()&lt;/code&gt;&lt;/a&gt; to obtain a &lt;a href=&quot;cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="950f1df9d975786d5e151909108f026fba8fce30" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/fillstyle&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.fillStyle&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccf5c8f966dc82712ec8a1e5c0ec226d41fcea86" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/getlinedash&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.getLineDash()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;canvasrenderingcontext2d/setlinedash&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.setLineDash()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98d09483b1e7e9f9565c1d41e15d92ca313d2684" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/globalalpha&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.globalAlpha&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37f37e5ecf5be073a10db72d400db506ee268925" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/globalcompositeoperation&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.globalCompositeOperation&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4592fe07e47d737abbf0b074cb365df73c722f4a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/imagesmoothingenabled&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.imageSmoothingEnabled&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="524fd73f27c61ce5f91e2009d6bd3c5a9e7646d8" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/linecap&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.lineCap&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af7551180e9fdc2a9cbe2cbacf7da684478998fb" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/linedashoffset&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.lineDashOffset&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0ff35842932909c1fe6547cd7f379a2a9175c65" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/linejoin&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.lineJoin&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ae3e310dc3b323d1f800698ee1dd0e4a0b4aaa" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/linewidth&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.lineWidth&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f39a2817ac077efe53a07f568ea8d9fdbcf0b46" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/miterlimit&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.miterLimit&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1107278ef37992a860f7875f88932c3881297f9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/shadowcolor&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.shadowColor&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;canvasrenderingcontext2d/shadowblur&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.shadowBlur&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12ffeadf1c63c398f0d80342de6560843e4192af" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;canvasrenderingcontext2d/strokestyle&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.strokeStyle&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47e397725498fcbda077b9e37c3bae8e5563937f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;element/getattribute&quot;&gt;&lt;code&gt;Element.getAttribute()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecfc21063b8185767ff76a247748a1db1a1ccb5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;element/removeattribute&quot;&gt;&lt;code&gt;Element.removeAttribute()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c06ee41c63f40ecb40433627c448207ebe12a95a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;element/setattribute&quot;&gt;&lt;code&gt;Element.setAttribute()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdf6d46a11769cb3a3f5adf900048e1ddf238d42" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;ellipse&quot;&gt;&lt;code&gt;CanvasRenderingContext2D.ellipse()&lt;/code&gt;&lt;/a&gt; to draw an elliptical arc</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0482922551735a6a7a7897774083d35d9a7e530" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Attr/name&quot;&gt;&lt;code&gt;Attr.name&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f741aa14555f3aec2644f00edbc05ffc20cf55" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Attr/value&quot;&gt;&lt;code&gt;Attr.value&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e143fb74cb1279483029648b1f52f9b7132e21d2" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;fetch()&lt;/code&gt;&lt;/a&gt; to POST JSON-encoded data.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f86419a3463289ed515d2c6c69cdfd160406ee8c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/getAttributeNS&quot;&gt;&lt;code&gt;Element.getAttributeNS()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba603f1f424ad1787444cb1fbc0dd432e2d8806" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/setAttributeNS&quot;&gt;&lt;code&gt;Element.setAttributeNS()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a26b7d80942712a3372c7202d1f58c1e8dcb5f6d" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;window.doNotTrack&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a29ba383c84d15925a42f871530f52904ae908" translate="yes" xml:space="preserve">
          <source>Use cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994cf492f910c014e20d604425e6631cbc12e304" translate="yes" xml:space="preserve">
          <source>Use feature oriented object detection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91bbb6b1ae45b6d982443ab57c314ec9805282f9" translate="yes" xml:space="preserve">
          <source>Use multiple layered canvases for complex scenes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb7f2032a0d0385d2cb6f574614b9064d2c8be6b" translate="yes" xml:space="preserve">
          <source>Use of the asynchronous clipboard read and write methods requires that the user grant the web site or app permission to access the clipboard. This permission must be obtained from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions_API&quot;&gt;Permissions API&lt;/a&gt; using the &lt;code&gt;&quot;clipboard-read&quot;&lt;/code&gt; and/or &lt;code&gt;&quot;clipboard-write&quot;&lt;/code&gt; permissions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f375d4e7e2cad262ee4e37a059efdc4eaba3424" translate="yes" xml:space="preserve">
          <source>Use plain CSS for large background images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38476c9f2aa5cab6b07bd00730045ba89245ec75" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;element/getboundingclientrect&quot;&gt;&lt;code&gt;Element.getBoundingClientRect()&lt;/code&gt;&lt;/a&gt; method instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcb499095fd398fc1a53a5fd534ad632a8bbfc3" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;filltext&quot;&gt;&lt;code&gt;fillText()&lt;/code&gt;&lt;/a&gt; method to fill the text characters rather than having just their outlines drawn.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f0e65ab0d6f1b246caeddd5dc9b60ce5253d00a" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;MIDIInput&lt;/code&gt; interface of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Web_MIDI_API&quot;&gt;Web MIDI API&lt;/a&gt; to access and pass messages to a MIDI input port.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70a6bff3d9213e91055e436def2b8a6f2884669" translate="yes" xml:space="preserve">
          <source>Use the document object to invoke the createTextNode method and create your text node. You just need to pass the text content. The return value is an object that represents the text node.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb36ff23a53e47285031a45560bad83590a7d7bb" translate="yes" xml:space="preserve">
          <source>UseElement</source>
          <target state="translated">UseElement</target>
        </trans-unit>
        <trans-unit id="6b93a7f03c993746af432615c9dc6551bbaccc22" translate="yes" xml:space="preserve">
          <source>Used as the type for the value of &lt;a href=&quot;performance/timing&quot;&gt;&lt;code&gt;timing&lt;/code&gt;&lt;/a&gt;, objects of this type contain timing information that can provide insight into web page performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a4a681748acf3d787da632d1cac48080afcb28" translate="yes" xml:space="preserve">
          <source>Used by the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes#attr-dataset&quot;&gt;dataset&lt;/a&gt;&lt;/code&gt; HTML attribute to represent data for custom attributes added to elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03f907e44fbe0eca397a91e81958dd3a55bbb747" translate="yes" xml:space="preserve">
          <source>Used to asynchronously transfer a small amount of data using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/HTTP&quot;&gt;HTTP&lt;/a&gt; from the User Agent to a web server.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff48fa8ebe6547e382e234475dee14bc1f239ca4" translate="yes" xml:space="preserve">
          <source>Used to return an array of all the values of a header within a &lt;code&gt;Headers&lt;/code&gt; object with a given name; this method has now been deleted from the spec, and &lt;a href=&quot;headers/get&quot;&gt;&lt;code&gt;Headers.get()&lt;/code&gt;&lt;/a&gt; now returns all values instead of just one.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490d1040e1f3ad485ba11bfedb0aec3507f96a8b" translate="yes" xml:space="preserve">
          <source>Used to schedule playback of the audio data contained in the buffer, or to begin playback immediately.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7d86cf7da2c541899b71cb0198b76cbe62d2d88" translate="yes" xml:space="preserve">
          <source>Used to store the interval ID returned by &lt;a href=&quot;../windoworworkerglobalscope/setinterval&quot;&gt;&lt;code&gt;setInterval()&lt;/code&gt;&lt;/a&gt;. This interval will be used to trigger our periodic refreshes of the ads' content.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e4bc785b4c2cdeb18c3a1c8a7155350f98dc60" translate="yes" xml:space="preserve">
          <source>Used to temporarily store the list of visible ads while the document is not visible (for example, if the user has tabbed to another page).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57d9f082a464a27405a10aad94165f27ad268cd7" translate="yes" xml:space="preserve">
          <source>Used with &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/load&quot;&gt;&lt;code&gt;Document.load&lt;/code&gt;&lt;/a&gt; to indicate an asynchronous request.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae2f04ad43660c25b4e8672a9f94dac65a9177d" translate="yes" xml:space="preserve">
          <source>User Timing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="315b4532fd1ac7e2872e387812d4e18b9bf5cb12" translate="yes" xml:space="preserve">
          <source>User Timing (Overview)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5585a1d2c1e5dca5337b84cf734c9103a6d27196" translate="yes" xml:space="preserve">
          <source>User Timing API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87896af2516a2190ebc0ad8584d33f3ee5bf437d" translate="yes" xml:space="preserve">
          <source>User Timing Level 2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="585a691e790339c9099977ecb7b287f22cdd736b" translate="yes" xml:space="preserve">
          <source>User Timing Level 2&lt;br/&gt;&lt;small&gt;The definition of 'Performance extensions' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c60a170f29ebe265f09c749550371794505c658b" translate="yes" xml:space="preserve">
          <source>User Timing Level 2&lt;br/&gt;&lt;small&gt;The definition of 'PerformanceMark' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18bdb130823df1003f07cf6be8afef5d2dc810f5" translate="yes" xml:space="preserve">
          <source>User Timing Level 2&lt;br/&gt;&lt;small&gt;The definition of 'PerformanceMeasure' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9416bdb5dbf6493dabc18b990c7bad122e505ed4" translate="yes" xml:space="preserve">
          <source>User Timing Level 2&lt;br/&gt;&lt;small&gt;The definition of 'clearMarks()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760b185c5d699d651b8872ff5417dadb06d05aef" translate="yes" xml:space="preserve">
          <source>User Timing Level 2&lt;br/&gt;&lt;small&gt;The definition of 'clearMeasures()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ece6605dba4c7ec8a84833af892c29d23c7a73" translate="yes" xml:space="preserve">
          <source>User Timing Level 2&lt;br/&gt;&lt;small&gt;The definition of 'mark()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69adb81c444ad3a43019a220c2faac8c6c2d9d5b" translate="yes" xml:space="preserve">
          <source>User Timing Level 2&lt;br/&gt;&lt;small&gt;The definition of 'measure()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee34584f550a4f899a7d240f291c18e3c662886b" translate="yes" xml:space="preserve">
          <source>User Timing&lt;br/&gt;&lt;small&gt;The definition of 'Performance extensions' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16e6b431ded0a25605704e94d775ddfc9f25022a" translate="yes" xml:space="preserve">
          <source>User Timing&lt;br/&gt;&lt;small&gt;The definition of 'PerformanceMark' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c47360c273fa3504a30a5251842e640dd9efeec" translate="yes" xml:space="preserve">
          <source>User Timing&lt;br/&gt;&lt;small&gt;The definition of 'PerformanceMeasure' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2d8544ba9dc7ed31238306b4d8927f3ad60203c" translate="yes" xml:space="preserve">
          <source>User Timing&lt;br/&gt;&lt;small&gt;The definition of 'clearMarks()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feb8cd3178bfc88947c00449ed6cecd7f20817ed" translate="yes" xml:space="preserve">
          <source>User Timing&lt;br/&gt;&lt;small&gt;The definition of 'clearMeasures()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eb9a3c827761e929839e7472b1c2c073a209b95" translate="yes" xml:space="preserve">
          <source>User Timing&lt;br/&gt;&lt;small&gt;The definition of 'mark()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31c4e4113354a75c55d450c583853d5d84316566" translate="yes" xml:space="preserve">
          <source>User Timing&lt;br/&gt;&lt;small&gt;The definition of 'measure()' in that specification.&lt;/small&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf65146a965d803d03af2df2aec267e43c2f418" translate="yes" xml:space="preserve">
          <source>User agent (default) style sheets</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e18b8f4a1fe4edb1a063790a0b5a6f430f57c09d" translate="yes" xml:space="preserve">
          <source>User agent crash</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f75195efd51e50accd5979aafb2d7c414de478" translate="yes" xml:space="preserve">
          <source>User agents will typically ignore asynchronous &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequests&lt;/code&gt;&lt;/a&gt; made in an unload handler. To solve this problem, analytics and diagnostics code will typically make a synchronous &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; in an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; handler to submit the data. The synchronous &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; forces the browser to delay unloading the document, and makes the next navigation appear to be slower. There is nothing the next page can do to avoid this perception of poor page load performance.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5e595553819dd2cf801dfbf3bc7c4224ed780a" translate="yes" xml:space="preserve">
          <source>User interaction required for dialog box</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f3caeba2c6cfe366aeaedd3ee3c91374fec61e8" translate="yes" xml:space="preserve">
          <source>User media support is disabled on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; on which &lt;code&gt;getUserMedia()&lt;/code&gt; was called. The mechanism by which user media support is enabled and disabled is left up to the individual user agent.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d6330d8c1493e65d044b49476e3fffef46f188a" translate="yes" xml:space="preserve">
          <source>User notes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2765368603cc550d59f15f5f3ea1264ec99c409" translate="yes" xml:space="preserve">
          <source>User notifications reference</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f99ea962c6a80edbefcc2474800402619b5cba" translate="yes" xml:space="preserve">
          <source>User privacy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c543c5aec159cb9544fae73e7b444267de39839" translate="yes" xml:space="preserve">
          <source>UserProximityEvent</source>
          <target state="translated">UserProximityEvent</target>
        </trans-unit>
        <trans-unit id="f2573346f0ef7445b3b35d97e95419fdcbf011ad" translate="yes" xml:space="preserve">
          <source>UserProximityEvent.near</source>
          <target state="translated">UserProximityEvent.near</target>
        </trans-unit>
        <trans-unit id="4cdb83cdb9d531e1199cdc30b7bca612e87d56c7" translate="yes" xml:space="preserve">
          <source>Users can choose to exit full-screen mode simply by pressing the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a61b5963cfa56fe475fe90d6e694b620e9071a82" translate="yes" xml:space="preserve">
          <source>Users can override the developer-specified encoding inside the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type&quot;&gt;Content-Type&lt;/a&gt; header or inline like &lt;code&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/code&gt;, such as with Firefox's</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f0dab06225bb508029811ec1d20576bda0b5326" translate="yes" xml:space="preserve">
          <source>Users may change the configuration of buttons on their pointing device so that if an event's button property is zero, it may not have been caused by the button that is physically left&amp;ndash;most on the pointing device; however, it should behave as if the left button was clicked in the standard button layout.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0a789c11fa32697d5a40cf1fb0e0d939b4a7472" translate="yes" xml:space="preserve">
          <source>Uses a generic event with an &lt;code&gt;error&lt;/code&gt; property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5f4424e3a0b6b45f7e51db9daf3b010d0f4a86" translate="yes" xml:space="preserve">
          <source>Uses the filter's current parameter settings to calculate the response for frequencies specified in the provided array of frequencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7778898bee5a524f22f86ed2e5b4ff70b4922c6" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;AnimationEffectReadOnly&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea1e9de32dba1539ab1d77b83748a7736d3272b5" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;AnimationPlayer&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a303c21469f7a396c908d4ea9b6cc6733cc0a9" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;AudioSourceNode&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef95b44d09d6d731dc1d19a014850a627872f7b8" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;ClientRect&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a3156c38a92f695720d64940ed76d889b05713" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;DataChannel&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf3d9fde87d355c26838afbd1c622a6ad2c78b6" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;attachEvent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5749509d9506871a5e5f43824c9dfccc2abc7f" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;cancelValuesAndHoldAtTime()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="685e11608d4c6aa26c524ef3b8c137ecf2eaff4f" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;charset&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1244f3d5aa8153214ec8bbd37f3f9bb3b73a99f" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;crossorigin&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c23da06d4b47e453303136e7b76e18ed439c90e9" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;deepPath&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c61cba62637806712bff53f301b41a98a90febd" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;detachEvent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61278b33cecead9cd2a577a690512fc9a0404228" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;drawSystemFocusRing&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80e1d9a48f2cf41acd00458dde9acc22efaf96b8" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;experimental-webgl2&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c105bfda1b8d60be1f2361b2274fe757f76f1892" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;experimental-webgl&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04d27426e490be19a3ad5a37b0fed2b580d34b82" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;fireEvent&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96c1b4f1e15db96a076bea65893217bfcf03f089" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;inputEncoding&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ad3569d170519a1f50c9e2de3ac2712a9c1d4c2" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;insertRule&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35e08f81ada3e46250664b1ae45657aa36861cc7" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;mozCancelFullScreen&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ea9fdafe49f28c2614e9f6874f363f6848d2c1" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;mozDashOffset&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9a40779079aff10bbfa6661ac9dc4d76bee6467" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;mozFullScreen&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8d0471928d511db80591ab139dc2c424147959" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;mozFullScreenElement&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a12140af4d63c8078f31690279068d3658f4f4b" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;mozFullScreenEnabled&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdedcf95b53b4eec4ac7e17f5393fa6e59a17d82" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;mozMatchesSelector&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa5cd412eeb34a3bd44819bad873baf99c246461" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;mozNamedAttrMap&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7896c84942c27018edc575d2313dc5c12fcb211f" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;mozRequestFullScreen&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ef7316bda5aae16d5404064d67217db0ae6f47" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;msExitFullscreen&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dffd0744a897cc4514737430858fd9ccd11f280" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;msFullScreenEnabled&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d3e827d859a6583f1e3c42383252164914dda17" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;msMatchesSelector&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df38009629ebc341af846d2b24c511a511fd1102" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;oMatchesSelector&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b639358f0d0c489bfddca1c1f61dfb28c498df" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onMSFullscreenChange&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df37cfbe5bfcba44b32f76965fc131dc28e6d071" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onMSFullscreenError&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66db7288e8f3c2ab326756457bd64598c37ae730" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onmspointercancel&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad317e9352c937254f919cf6bdc6033858495bef" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onmspointerdown&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295463905f7d1f7fc1d4416d5c3c70a6a7cb8b82" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onmspointerenter&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78ef96c6b74e2aef96104468d0593c2ec4086a76" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onmspointerleave&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dc8bd30ac97f39d484ce5f7791047a0c93967d2" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onmspointermove&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7011b992f2182d1290fbbcad9b7e9a94b34ec564" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onmspointerout&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e1824b20726c49361d0c9c744b3608e85c1b43f" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onmspointerover&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55b8c611bb24b77723a2640cd9cc22e49fd47d7b" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onmspointerup&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3590fcaa95dc78052cc7c1869c753c97fafab14e" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onwebkitanimationend&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d93fd7dea3b42d4111ecded9991c73be9e521f0" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onwebkitanimationiteration&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d323817cda75a784436da8fdf8cb50fe127775fe" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onwebkitanimationstart&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0777abcd38016aaf6dc7d9ef8bdc302a45589eb4" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;onwebkittransitionend&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22ed2a92de91bb3cf5f9d377097a0bf9eac84880" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;requireUserMediation&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ae537beb9da7ae1b3618efc62d2acf406e2c29f" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;shippingAddress&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99dc13f34ed909f8f2a698ed02b7d18b81b5746e" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;topLevelOrigin&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311aa0fd4533a613b1d19d4bc019b2ba262494dd" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;transferImageBitmap&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a422c70f891f1265559ce75240fdf4aaf128cc" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;webkitIsFullScreen&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4960d085bfaed5c5080afc0e6754744f13bdde20" translate="yes" xml:space="preserve">
          <source>Uses the non-standard name: &lt;code&gt;webkitMatchesSelector&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8df85129e76c0d5852cf2b13f19a79c9d85e67ea" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;readasarraybuffer&quot;&gt;&lt;code&gt;FileReader.readAsArrayBuffer()&lt;/code&gt;&lt;/a&gt; is recommended.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3de5f550e089e01f6a614e5e9e19bc60b96aef5c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;await&lt;/code&gt; to wait for a promise to be resolved makes it possible to write the code to handle payments particularly cleanly:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facfb43b2774626a0670548e0df3d67e9d43da6c" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;classList&lt;/code&gt; is a convenient alternative to accessing an element's list of classes as a space-delimited string via &lt;a href=&quot;classname&quot;&gt;&lt;code&gt;element.className&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c23f5a4fd55425246f3ab33db5ccf00375f33f8" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;get()&lt;/code&gt; requires that you know which key you want to retrieve. If you want to step through all the values in your object store, then you can use a cursor. Here's what it looks like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b573aad00fe5fe2005607238b05de045a42af201" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;getAttributeNames()&lt;/code&gt; along with &lt;a href=&quot;getattribute&quot;&gt;&lt;code&gt;getAttribute()&lt;/code&gt;&lt;/a&gt;, is a memory efficient and performant alternative to accessing &lt;a href=&quot;attributes&quot;&gt;&lt;code&gt;Element.attributes&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37363f79c1d4047845ef0d39269c85a5ce955faf" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;history.pushState()&lt;/code&gt; changes the referrer that gets used in the HTTP header for &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; objects created after you change the state. The referrer will be the URL of the document whose window is &lt;code&gt;this&lt;/code&gt; at the time of creation of the &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6babf8b6a7e67470b3ba919e46e391efe82dfad3" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;options&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a34a0b4ec6831e79a4e97ff7c88e6ff6d3fa07c0" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;remove()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2039efd4dfb7efb59ae5dbb98a085f1ddbe80fc9" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;replaceWith()&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b08fceb261aef829ef9e76588c6f7b6e8c7f06b7" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;scale&lt;/code&gt; to flip horizontally or vertically</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636961c4408db7df141a54c6c529a02115144624" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;setAttribute()&lt;/code&gt; to modify certain attributes, most notably &lt;code&gt;value&lt;/code&gt; in XUL, works inconsistently, as the attribute specifies the default value. To access or modify the current values, you should use the properties. For example, use &lt;code&gt;Element.value&lt;/code&gt; instead of &lt;code&gt;Element.setAttribute()&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dfb930b420e9c06918d66e2894dd2462a424f785" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;waitUntil()&lt;/code&gt; within a service worker's &lt;code&gt;install&lt;/code&gt; event:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d30986589b28f6fe057f8492aa7753c3697686ac" translate="yes" xml:space="preserve">
          <source>Using CSS animations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53893c8e78828e7340701101a2ec8b690e3d140a" translate="yes" xml:space="preserve">
          <source>Using CSS counters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9213ef2927424b1b444d217a4b6af52a31c77287" translate="yes" xml:space="preserve">
          <source>Using DTMF with WebRTC</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44ba024ed719c4ef8cae67b9917309dca332dbc2" translate="yes" xml:space="preserve">
          <source>Using Fetch</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be7e9981f7cb2dbf2d73e81499a7f7806155589" translate="yes" xml:space="preserve">
          <source>Using FormData objects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="533263ba98568359c7a5abc98637a32c8a3340c3" translate="yes" xml:space="preserve">
          <source>Using HTML5 audio and video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b22f4da5f490d028064d105e9ba9c483afff957" translate="yes" xml:space="preserve">
          <source>Using IndexedDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dcd44bc8819b5617d85649c77189a717ab20f8e" translate="yes" xml:space="preserve">
          <source>Using IndexedDB in chrome</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2551cffa8196f6ec874d503212ac1de6a22bdcf" translate="yes" xml:space="preserve">
          <source>Using JavaScript generators in Firefox</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2328c4051025e74ccead3c38afcaedeff2c8280c" translate="yes" xml:space="preserve">
          <source>Using Light Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786d0e59274892968613753bb1d4f2bd04979fac" translate="yes" xml:space="preserve">
          <source>Using MPEG DASH to create a streaming application (TBD)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9950ad998287a323f0ecfd6805acce67fcb34c5" translate="yes" xml:space="preserve">
          <source>Using MSE to create a basic streaming service (TBD)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f13fcc70d9ed08390e66f2223a924e03f60f97ea" translate="yes" xml:space="preserve">
          <source>Using Pointer Events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7906170205cf48a7e68832c2a1c06afbb7292e4" translate="yes" xml:space="preserve">
          <source>Using SVG paths</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="554921b69e243da082ec6a17f58ab8453d462bd7" translate="yes" xml:space="preserve">
          <source>Using Service Workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63e050f1ce1ac4bc8dc71bbb3815220857ea9429" translate="yes" xml:space="preserve">
          <source>Using Web Audio API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec9537d5e61249a81611ea7b162b810d7c5a08f2" translate="yes" xml:space="preserve">
          <source>Using Web Workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea31c617cfac3d009a20a662de5f162ce85adc97" translate="yes" xml:space="preserve">
          <source>Using WebRTC data channels</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001658be76c2fb857d7d8644b0578562be0db8b5" translate="yes" xml:space="preserve">
          <source>Using XMLHttpRequest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f16cb204e3a66fa495535ed0d4159521c08196e" translate="yes" xml:space="preserve">
          <source>Using XUL panels as drag images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eebc661167943ae086754e655766325117c72025" translate="yes" xml:space="preserve">
          <source>Using a &lt;code&gt;ChannelMergerNode&lt;/code&gt;, it is possible to create outputs with more channels than the rendering hardware is able to process. In that case, when the signal is sent to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/listener&quot;&gt;&lt;code&gt;AudioContext.listener&lt;/code&gt;&lt;/a&gt; object, supernumerary channels will be ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364e99b2fc677f478b299e3b89fd6c0ab63f469d" translate="yes" xml:space="preserve">
          <source>Using a Boolean value</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d69aac7711d44b150ed94de58afeded5969d2d" translate="yes" xml:space="preserve">
          <source>Using a MediaTrackConstraints object</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b5e5113908a51ad8177adf7c30901d77997275c" translate="yes" xml:space="preserve">
          <source>Using a Preloaded Response</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1adb80aeae97e31f738d62405431a8339124b742" translate="yes" xml:space="preserve">
          <source>Using a cursor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5975125a67cd909de7bf144c6ebfbf4dd118e12" translate="yes" xml:space="preserve">
          <source>Using a key generator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba227db47546b508fc92a0ee8651156d3e6d100" translate="yes" xml:space="preserve">
          <source>Using a label element to trigger a hidden file input element</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5eb989e395f154d17deffc132aa5f1eb24b3d3e3" translate="yes" xml:space="preserve">
          <source>Using an HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element as your image source grabs the current frame from the video and uses it as an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8e5089614cbd6af15605700dd46bc151e08d126" translate="yes" xml:space="preserve">
          <source>Using an experimental version of IndexedDB</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="224f5114f496bfc0fda8801e4086dff910d134f1" translate="yes" xml:space="preserve">
          <source>Using an index</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78db790eee53000f8cd726ad76b9af3461ac1c6f" translate="yes" xml:space="preserve">
          <source>Using audio and video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93048c16a2f1ca8cc731c6e5200a63f739edc7c8" translate="yes" xml:space="preserve">
          <source>Using certificates</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb834987c1efaf939c7ba08e7080714a6235d1d" translate="yes" xml:space="preserve">
          <source>Using channel messaging</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97e65530cfb5b66550d09d4f94922fac06cf5b08" translate="yes" xml:space="preserve">
          <source>Using cursors: &lt;a href=&quot;../idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f65e14a9a80a7347e2f22118483fe5e3930dbf" translate="yes" xml:space="preserve">
          <source>Using cursors: &lt;a href=&quot;idbcursor&quot;&gt;&lt;code&gt;IDBCursor&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aee0a990d340259174656749df36c5ddbcda4dc" translate="yes" xml:space="preserve">
          <source>Using data attributes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70c42fa06674a29a0dd3b3e0ed12174c2909f77" translate="yes" xml:space="preserve">
          <source>Using dynamic styling information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7475f6544c048b6a6aef32ec0112c3059f44008f" translate="yes" xml:space="preserve">
          <source>Using files from web applications</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3766c02727dcd92904e0db339c6c960e0c0d8f1d" translate="yes" xml:space="preserve">
          <source>Using frames from a video</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a351b4bb38efb3202e6b4874b95e2ee6a23494" translate="yes" xml:space="preserve">
          <source>Using full-screen mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3918f4dd226015061088e2b6f7d102d17167fe8" translate="yes" xml:space="preserve">
          <source>Using fullscreen mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1062488dcb277bc3eb787b4477d5b2543051efca" translate="yes" xml:space="preserve">
          <source>Using geolocation</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31dca05db608df6538afda796df29aa397f49f21" translate="yes" xml:space="preserve">
          <source>Using geolocation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb9e86cf10b48dbd44608bd452bb9a825f54eb6" translate="yes" xml:space="preserve">
          <source>Using groups in the console</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88bbd30ff0bfaa939339d248d90f8f035e950cc9" translate="yes" xml:space="preserve">
          <source>Using hidden file input elements using the click() method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b603e13c701f7661f7ef4fe6c182f7a81fc4be7" translate="yes" xml:space="preserve">
          <source>Using images</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c8559189cb7558a577e7c6f9690ecc808710de" translate="yes" xml:space="preserve">
          <source>Using images from other domains</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cf7eb6295e541133bbf26e0d9556979489bd452" translate="yes" xml:space="preserve">
          <source>Using images from the same page</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6abde546b4d0c1cfaf274ead4018f3ac4ae561e" translate="yes" xml:space="preserve">
          <source>Using line dashes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f85b603d0aa080c5db10a3c920abefeba789c6" translate="yes" xml:space="preserve">
          <source>Using media queries from code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7f041b795ad7acb292bf215e1dc562a36df4ed" translate="yes" xml:space="preserve">
          <source>Using negative numbers you can do axis mirroring (for example using &lt;code&gt;translate(0,canvas.height); scale(1,-1);&lt;/code&gt; you will have the well-known Cartesian coordinate system, with the origin in the bottom left corner).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aeb79377da2c5b7badaa69f15a79eae661942c9" translate="yes" xml:space="preserve">
          <source>Using object URLs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="803ac2d5ce029e6e0485a363f8d6325767340e17" translate="yes" xml:space="preserve">
          <source>Using orientation sensors requires requsting permissions for multiple device sensors. Becuase the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Permissions&quot;&gt;&lt;code&gt;Permissions&lt;/code&gt;&lt;/a&gt; uses promises, a good way to request permissions is to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/all&quot;&gt;&lt;code&gt;Promise.all&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="333ccb1baa57fd669f3b9b355399f798b67b6b03" translate="yes" xml:space="preserve">
          <source>Using other canvas elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04499109f92cb5e4c9c66377e6f9e86c51ae51a0" translate="yes" xml:space="preserve">
          <source>Using pointer events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ccaa6ecec23ddf5a861e417d481a9f4cc9f1663" translate="yes" xml:space="preserve">
          <source>Using promises</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a3c790c22f33dd19bbca352e2610e1738ac04b1" translate="yes" xml:space="preserve">
          <source>Using quadratic and cubic B&amp;eacute;zier curves can be quite challenging, because unlike vector drawing software like Adobe Illustrator, we don't have direct visual feedback as to what we're doing. This makes it pretty hard to draw complex shapes. In the following example, we'll be drawing some simple organic shapes, but if you have the time and, most of all, the patience, much more complex shapes can be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e8d26c37700cdd613e9e35b11c3217662808b89" translate="yes" xml:space="preserve">
          <source>Using relative URLs in the &lt;code&gt;path&lt;/code&gt; parameter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d536d6e60236c7e07eef5432f92fdd4697fe80" translate="yes" xml:space="preserve">
          <source>Using server-sent events</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab2e1793dad04f2483095b912fc6984339afcb1" translate="yes" xml:space="preserve">
          <source>Using shadows involves just four properties:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04711f6206bed7752d627a9302b98527de31a9c0" translate="yes" xml:space="preserve">
          <source>Using string substitutions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1cedaa0d17ae2437147c9360fc965bdbd61c4c" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element is not very difficult, but you do need a basic understanding of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML&quot;&gt;HTML&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript&quot;&gt;JavaScript&lt;/a&gt;. The &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; element is not supported in some older browsers, but is supported in recent versions of all major browsers. The default size of the canvas is 300 px &amp;times; 150 px (width &amp;times; height). But custom sizes can be defined using the HTML &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; property. In order to draw graphics on the canvas we use a JavaScript context object, which creates graphics on the fly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2470658ccc10a510f44f022f460c23b2e4dcbd0" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-crossorigin&quot;&gt;crossorigin&lt;/a&gt;&lt;/code&gt; attribute of an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img&quot;&gt;&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;&lt;/a&gt; element (reflected by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/crossOrigin&quot;&gt;&lt;code&gt;HTMLImageElement.crossOrigin&lt;/code&gt;&lt;/a&gt; property), you can request permission to load an image from another domain for use in your call to &lt;code&gt;drawImage()&lt;/code&gt;. If the hosting domain permits cross-domain access to the image, the image can be used in your canvas without tainting it; otherwise using the image will &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/CORS_Enabled_Image#What_is_a_.22tainted.22_canvas.3F&quot;&gt;taint the canvas&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df8ebaf12f245df15cf6576ab243b636f7043747" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;addColorStop&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c843f0bdb42a83db72730e338080826dbf94b196" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;addHitRegion&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88272e50a3e88c270f1e35c736d48ff4a2d1adba" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;addPath&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b5629bb2494e917b143991c6b59e73f67b1df7" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;clearHitRegions&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab89d96c39fe8ce3bac5823860793a7009127ce4" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;currentTransform&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ea6267d826b607e2129c70a96ab9fa2172df3f0" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;direction&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3391f1233ba23078d2c01db7292fb1175ca865" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;drawFocusIfNeeded&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb9a2112df1d045dba4c477dbe5866d44815340" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;filter&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52caaa49f01f6519401f5da7e16d0ab2206b54bb" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;font&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb5b24ca8ab6ded87623a552581cba6ed2cebaf5" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;globalAlpha&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b228479b784de38f8fe1f8964d26f9d7391a211e" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;globalCompositeOperation&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9357cfb842afe14b3e118aaa49466ceefb21bdb" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;imageSmoothingEnabled&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5923da5f7d2832e18d8b0220c0d24e5bbd95062" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;lineCap&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c170734658ec5a7b5b63e733b19f39e4dda132b" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;lineDashOffset&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77f3930644da4c277beeeeea5dd5f53b555e1ff4" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;lineJoin&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449253c5b681f6d514c6cace173bd5ca2b8ec41a" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;lineWidth&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebb58d23f8e39a73ec6aa82171936816d135cb4" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;miterLimit&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a426b5e784a48a945e3c49df6521e28b398de677" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;removeHitRegion&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea53689f5ab8f0950cfbf3d7dfc935890c7f4d5" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;resetTransform&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dc9fd30954dececec5b13402dff01b26d5bef63" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;scale&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30944e4fe7ec7cba5e556f4cad3b5b4f3f80d137" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;setTransform&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd9ec0a0c753437e828d168174051c6f8e674f8" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;shadowBlur&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cca9055a43c6073eb23357be245c69fb1b58bb38" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;shadowColor&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fc93eec6fc013e208e65b503b5706faad7afdd1" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;shadowOffsetX&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="543cb6bef0e8a0f5e1d17d1d1d1e8375601c322c" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;shadowOffsetY&lt;/code&gt; property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="848fefd7939a7deecd3998f16236f21e30378d53" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;transform&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="466b85dd8c83639dcd381ac3931f89dc12619d86" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;translate&lt;/code&gt; method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5b0a5601e1f47d748b8781aea6bb9e45585a11" translate="yes" xml:space="preserve">
          <source>Using the API is as simple as obtaining the &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; object using &lt;a href=&quot;../window/performance&quot;&gt;&lt;code&gt;window.performance&lt;/code&gt;&lt;/a&gt; and looking up what you need within the object returned. For example, to measure the perceived loading time for a page:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbf870e763ca2dff2a3a5b51777aef97155b8c9" translate="yes" xml:space="preserve">
          <source>Using the DOM File API in chrome code</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394c8d4a16485b1f74804c970fc8ae1b40fa23c3" translate="yes" xml:space="preserve">
          <source>Using the File API, which was added to the DOM in HTML5, it's now possible for web content to ask the user to select local files and then read the contents of those files. This selection can be done by either using an HTML &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element or by drag and drop.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545c4aae050565b6bbaecbc839444e6a1aa686fa" translate="yes" xml:space="preserve">
          <source>Using the Frame Timing API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e85b660cc81a7b1df3b6b1447c434437ef3d52b" translate="yes" xml:space="preserve">
          <source>Using the Media Capabilities API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57fdfc64fca959f7aa4aeac45928585ddd2f7e16" translate="yes" xml:space="preserve">
          <source>Using the MediaRecorder API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2d925b8495e03f9a6598348acdee4552168ba6" translate="yes" xml:space="preserve">
          <source>Using the MediaStream API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f129f843af09342b0fade707bf5db64e535a157" translate="yes" xml:space="preserve">
          <source>Using the MediaStream Recording API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33e9f24605a5f7491317729cac91e661e3e1894b" translate="yes" xml:space="preserve">
          <source>Using the Notifications API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94121cd8a0ba76b02a0f5eee7b7cd7867ae3fa2d" translate="yes" xml:space="preserve">
          <source>Using the Page Visibility API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8316ca76c818628935cd2cfefaf643979fc3513d" translate="yes" xml:space="preserve">
          <source>Using the Payment Request API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c88668cce11f173b8e79266db94e16cf90dd514" translate="yes" xml:space="preserve">
          <source>Using the Resource Timing API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7430e613f30d7d28109bd3eeede05a95c2bc74f7" translate="yes" xml:space="preserve">
          <source>Using the User Timing API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2285893e745da491af2b81622ea2d7e3107e77e" translate="yes" xml:space="preserve">
          <source>Using the Web Animations API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c705926551268350619223ac95ca2120a4220bd2" translate="yes" xml:space="preserve">
          <source>Using the Web Audio API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ffcc62deb445bb48ad4ad4b96b9901c91386dd" translate="yes" xml:space="preserve">
          <source>Using the document's &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-settings-object&quot;&gt;settings object&lt;/a&gt; run the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-prohibits-mixed-security-contexts-algorithm&quot;&gt;prohibits mixed security contexts algorithm&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a37e38bd4a5476b7e938981974eae2723b59829" translate="yes" xml:space="preserve">
          <source>Using the file list</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0859b1dae77277a62b22fa9bb8bb64ce7abcd42b" translate="yes" xml:space="preserve">
          <source>Using the imageSmoothingQuality property</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="067ee1b8e9d5f4a0edc2f85a88a155023888ba76" translate="yes" xml:space="preserve">
          <source>Using the new API in older browsers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a135636b714927a2ab4003eaf54a340e7dd0b7fd" translate="yes" xml:space="preserve">
          <source>Using the scrollPathIntoView method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4eab42a0be3d474419047aa779719f798624249" translate="yes" xml:space="preserve">
          <source>Using the setAttribute method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="994cf2de245353962c494e1b374f12484822b8a4" translate="yes" xml:space="preserve">
          <source>Using this format, the number of elements in each array does not need to be equal. The provided values will be spaced out independently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb9da3749defa6739f91e043521a249b2ee093cd" translate="yes" xml:space="preserve">
          <source>Using tone buffer strings</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ed99253bceb898d0be7fdaf3259e258814c3cd" translate="yes" xml:space="preserve">
          <source>Using transactions: &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64fba67bfddc3de6dabee9bb6fa9b47baf7d8157" translate="yes" xml:space="preserve">
          <source>Using transactions: &lt;a href=&quot;idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14733bc4d259a24610804e59b689181dd209b337" translate="yes" xml:space="preserve">
          <source>Using web workers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e40f64d5bffda0660d9c0d64c05d20cb22fe5f3" translate="yes" xml:space="preserve">
          <source>Usually you'll use a value between 0.0 and 1.0 to indicate an offset into the first run of the animation at which to begin the animation performance, but any positive, non-infinite value is allowed. Since all animations' iteration indexes start at 0, a value of 0.5 would start the animation halfway through its first iteration or loop. Meanwhile, a value of 1.2 means the animation will begin playback 20% of the way through its second iteration, and so forth.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a74bf1e974105176b6c77661394ecb2eed04692e" translate="yes" xml:space="preserve">
          <source>Utilities allow customization of button actions so that primary may not the the left button on the device, secondary may not be the right button, and so on. The middle (wheel) button, 4th button and 5th button might not be assigned a value, even when they are pressed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f16cdccb3faaa5e67faa6fdb65caa5cf29d51cbb" translate="yes" xml:space="preserve">
          <source>Utility functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008b5f6054cdda4ede16fe81415f7b4c704a1330" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly</source>
          <target state="translated">UtilsReadOnly</target>
        </trans-unit>
        <trans-unit id="48c44a1fb5e9502878fb3b4fe3b3abe06ec686bd" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.hash</source>
          <target state="translated">UtilsReadOnly.hash</target>
        </trans-unit>
        <trans-unit id="048aed1baa1634a144f08eff778dad52cb22678a" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.host</source>
          <target state="translated">UtilsReadOnly.host</target>
        </trans-unit>
        <trans-unit id="5b0dbc5df8acb368f7c5cf66ef32312f4b90492e" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.hostname</source>
          <target state="translated">UtilsReadOnly.hostname</target>
        </trans-unit>
        <trans-unit id="a422e9f32aa8bc7584f10bbdce1c0f004d658240" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.href</source>
          <target state="translated">UtilsReadOnly.href</target>
        </trans-unit>
        <trans-unit id="aa332899aa1286e12badd97ab349228cfd8959f7" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.origin</source>
          <target state="translated">UtilsReadOnly.origin</target>
        </trans-unit>
        <trans-unit id="151860b3c1718d2d98e18a07eb2a7c068373b5dd" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.pathname</source>
          <target state="translated">UtilsReadOnly.pathname</target>
        </trans-unit>
        <trans-unit id="5e3a6f0f43d9260932b8e672127bb8d84722c726" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.port</source>
          <target state="translated">UtilsReadOnly.port</target>
        </trans-unit>
        <trans-unit id="a9e04045577a9e23434c5ef856519181179ff9e1" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.protocol</source>
          <target state="translated">UtilsReadOnly.protocol</target>
        </trans-unit>
        <trans-unit id="b8269c9583c9bb6dbfdef935c90999ccf59fda17" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.search</source>
          <target state="translated">UtilsReadOnly.search</target>
        </trans-unit>
        <trans-unit id="9fc1e069aa5199126665c3296c8f3764c502a866" translate="yes" xml:space="preserve">
          <source>UtilsReadOnly.toString</source>
          <target state="translated">UtilsReadOnly.toString</target>
        </trans-unit>
        <trans-unit id="c9ee5681d3c59f7541c27a38b67edf46259e187b" translate="yes" xml:space="preserve">
          <source>V</source>
          <target state="translated">V</target>
        </trans-unit>
        <trans-unit id="479be0c168b7a5296ea3aeff85512f681d8336d4" translate="yes" xml:space="preserve">
          <source>VRDisplay</source>
          <target state="translated">VRDisplay</target>
        </trans-unit>
        <trans-unit id="923a0ea90a0097876e8f0fab64df50f2e8043889" translate="yes" xml:space="preserve">
          <source>VRDisplay.cancelAnimationFrame</source>
          <target state="translated">VRDisplay.cancelAnimationFrame</target>
        </trans-unit>
        <trans-unit id="35c3facac182e82ea615f7d9cb2afd5810abcca1" translate="yes" xml:space="preserve">
          <source>VRDisplay.capabilities</source>
          <target state="translated">VRDisplay.capabilities</target>
        </trans-unit>
        <trans-unit id="2473c4aa130067865de435d66117a393f6a88459" translate="yes" xml:space="preserve">
          <source>VRDisplay.depthFar</source>
          <target state="translated">VRDisplay.depthFar</target>
        </trans-unit>
        <trans-unit id="8fd03d25b11e3e70497e6f5187ce2f2ab6812d61" translate="yes" xml:space="preserve">
          <source>VRDisplay.depthNear</source>
          <target state="translated">VRDisplay.depthNear</target>
        </trans-unit>
        <trans-unit id="9d40ff19d360e1c71a42f0c139289eaa36365157" translate="yes" xml:space="preserve">
          <source>VRDisplay.displayId</source>
          <target state="translated">VRDisplay.displayId</target>
        </trans-unit>
        <trans-unit id="1f15b8da81d6381a049fd3be133c77e9a9b517ad" translate="yes" xml:space="preserve">
          <source>VRDisplay.displayName</source>
          <target state="translated">VRDisplay.displayName</target>
        </trans-unit>
        <trans-unit id="457cd78625e666d20adeef938f69cbe77c1235b3" translate="yes" xml:space="preserve">
          <source>VRDisplay.exitPresent</source>
          <target state="translated">VRDisplay.exitPresent</target>
        </trans-unit>
        <trans-unit id="a78c5f91c23c79fdcb610b570b8eb795c12d4f87" translate="yes" xml:space="preserve">
          <source>VRDisplay.getEyeParameters</source>
          <target state="translated">VRDisplay.getEyeParameters</target>
        </trans-unit>
        <trans-unit id="9de96784fa6b2631a42f7c13ee806d4fc9c71ad9" translate="yes" xml:space="preserve">
          <source>VRDisplay.getFrameData</source>
          <target state="translated">VRDisplay.getFrameData</target>
        </trans-unit>
        <trans-unit id="7174d3eb7fc9e9a92e89d18b057dc63da1f8d843" translate="yes" xml:space="preserve">
          <source>VRDisplay.getImmediatePose</source>
          <target state="translated">VRDisplay.getImmediatePose</target>
        </trans-unit>
        <trans-unit id="fee5ffa51b5a9e7b6d22eece08efbf050ea1a2f8" translate="yes" xml:space="preserve">
          <source>VRDisplay.getLayers</source>
          <target state="translated">VRDisplay.getLayers</target>
        </trans-unit>
        <trans-unit id="7e474d37751d5fa8b03f6c5468f44b213abf69fd" translate="yes" xml:space="preserve">
          <source>VRDisplay.hardwareUnitId</source>
          <target state="translated">VRDisplay.hardwareUnitId</target>
        </trans-unit>
        <trans-unit id="0d5cffc489556bb42bedf048add9df1e84343fc8" translate="yes" xml:space="preserve">
          <source>VRDisplay.isConnected</source>
          <target state="translated">VRDisplay.isConnected</target>
        </trans-unit>
        <trans-unit id="bf33d6a42b60b54570608c11df8bb928b152541a" translate="yes" xml:space="preserve">
          <source>VRDisplay.ispresenting</source>
          <target state="translated">VRDisplay.ispresenting</target>
        </trans-unit>
        <trans-unit id="c81c04237e9e44333e93dd9130f054f1a375fe01" translate="yes" xml:space="preserve">
          <source>VRDisplay.requestAnimationFrame</source>
          <target state="translated">VRDisplay.requestAnimationFrame</target>
        </trans-unit>
        <trans-unit id="e992607856437e474c468c6898d7fb959b7b3c80" translate="yes" xml:space="preserve">
          <source>VRDisplay.requestPresent</source>
          <target state="translated">VRDisplay.requestPresent</target>
        </trans-unit>
        <trans-unit id="6e1d1d38aa5de6d0b31c044fddfcb3dc7b30cffd" translate="yes" xml:space="preserve">
          <source>VRDisplay.stageParameters</source>
          <target state="translated">VRDisplay.stageParameters</target>
        </trans-unit>
        <trans-unit id="2c0a7d55aad44753e5f4019360937cc6575a02bf" translate="yes" xml:space="preserve">
          <source>VRDisplay.submitFrame</source>
          <target state="translated">VRDisplay.submitFrame</target>
        </trans-unit>
        <trans-unit id="037cd60589c6e5fab0c399a4dba99d05cd8d30d2" translate="yes" xml:space="preserve">
          <source>VRDisplayCapabilities</source>
          <target state="translated">VRDisplayCapabilities</target>
        </trans-unit>
        <trans-unit id="42d12b1e2eb3dd362af091103cfcf2d361b6a1c7" translate="yes" xml:space="preserve">
          <source>VRDisplayCapabilities.canPresent</source>
          <target state="translated">VRDisplayCapabilities.canPresent</target>
        </trans-unit>
        <trans-unit id="5463896dc98ba44bd16d814e95a0fa15c82bbf51" translate="yes" xml:space="preserve">
          <source>VRDisplayCapabilities.hasExternalDisplay</source>
          <target state="translated">VRDisplayCapabilities.hasExternalDisplay</target>
        </trans-unit>
        <trans-unit id="3c1bd33e027bac48ca667ac43d6e1ea2edb3adc9" translate="yes" xml:space="preserve">
          <source>VRDisplayCapabilities.hasOrientation</source>
          <target state="translated">VRDisplayCapabilities.hasOrientation</target>
        </trans-unit>
        <trans-unit id="881772ab5c4001f60a00166f71caee3f8787d492" translate="yes" xml:space="preserve">
          <source>VRDisplayCapabilities.hasPosition</source>
          <target state="translated">VRDisplayCapabilities.hasPosition</target>
        </trans-unit>
        <trans-unit id="04f95325e608c9113633e98641cd98a640ed7f00" translate="yes" xml:space="preserve">
          <source>VRDisplayCapabilities.maxLayers</source>
          <target state="translated">VRDisplayCapabilities.maxLayers</target>
        </trans-unit>
        <trans-unit id="93c1f66508aedbc7b9030900b52cabed0129e8e4" translate="yes" xml:space="preserve">
          <source>VRDisplayEvent</source>
          <target state="translated">VRDisplayEvent</target>
        </trans-unit>
        <trans-unit id="8464c0f3a1bd174f8f44b75358f3f3a914b8eed5" translate="yes" xml:space="preserve">
          <source>VRDisplayEvent.constructor</source>
          <target state="translated">VRDisplayEvent.constructor</target>
        </trans-unit>
        <trans-unit id="5e35084dece1ffe42c1d51cea81ad310937ba05e" translate="yes" xml:space="preserve">
          <source>VRDisplayEvent.display</source>
          <target state="translated">VRDisplayEvent.display</target>
        </trans-unit>
        <trans-unit id="ee4934290a4e08f65bcf728093f72c76a7e121a2" translate="yes" xml:space="preserve">
          <source>VRDisplayEvent.reason</source>
          <target state="translated">VRDisplayEvent.reason</target>
        </trans-unit>
        <trans-unit id="41621878aa36354212cac135108b3c3584aeb054" translate="yes" xml:space="preserve">
          <source>VREyeParameters</source>
          <target state="translated">VREyeParameters</target>
        </trans-unit>
        <trans-unit id="7427122bb78f3804fa860429abc81c726b500e72" translate="yes" xml:space="preserve">
          <source>VREyeParameters.fieldOfView</source>
          <target state="translated">VREyeParameters.fieldOfView</target>
        </trans-unit>
        <trans-unit id="52f1f4b9239a1392c6080d04a4729878588d928c" translate="yes" xml:space="preserve">
          <source>VREyeParameters.maximumFieldOfView</source>
          <target state="translated">VREyeParameters.maximumFieldOfView</target>
        </trans-unit>
        <trans-unit id="ebb9ae89fc65949af81cdfbbfe4d88951e064c58" translate="yes" xml:space="preserve">
          <source>VREyeParameters.minimumFieldOfView</source>
          <target state="translated">VREyeParameters.minimumFieldOfView</target>
        </trans-unit>
        <trans-unit id="0bd3b680358f7976073141f920ab5dee8c1023d8" translate="yes" xml:space="preserve">
          <source>VREyeParameters.offset</source>
          <target state="translated">VREyeParameters.offset</target>
        </trans-unit>
        <trans-unit id="2a648f1025383e20c10c33fc04244f092cf2cee9" translate="yes" xml:space="preserve">
          <source>VREyeParameters.recommendedFieldOfView</source>
          <target state="translated">VREyeParameters.recommendedFieldOfView</target>
        </trans-unit>
        <trans-unit id="6977bc02812d7e3e2d6ed10df4518202faebdda2" translate="yes" xml:space="preserve">
          <source>VREyeParameters.renderHeight</source>
          <target state="translated">VREyeParameters.renderHeight</target>
        </trans-unit>
        <trans-unit id="5a18c43360f669f96122183833f7879f1ffd980e" translate="yes" xml:space="preserve">
          <source>VREyeParameters.renderRect</source>
          <target state="translated">VREyeParameters.renderRect</target>
        </trans-unit>
        <trans-unit id="5f34f7c253aa8ba3dc10a13aa3e0b2dc9ba49ec9" translate="yes" xml:space="preserve">
          <source>VREyeParameters.renderWidth</source>
          <target state="translated">VREyeParameters.renderWidth</target>
        </trans-unit>
        <trans-unit id="b17eeb623d984fea6bb74e67db1958cd995e4301" translate="yes" xml:space="preserve">
          <source>VRFieldOfView</source>
          <target state="translated">VRFieldOfView</target>
        </trans-unit>
        <trans-unit id="0995c23b535df5cbb89a01203643c6aa49d8b647" translate="yes" xml:space="preserve">
          <source>VRFieldOfView.constructor</source>
          <target state="translated">VRFieldOfView.constructor</target>
        </trans-unit>
        <trans-unit id="b7e2c4eb1cb8683f88650cd5ea1979ea018f6e05" translate="yes" xml:space="preserve">
          <source>VRFieldOfView.downDegrees</source>
          <target state="translated">VRFieldOfView.downDegrees</target>
        </trans-unit>
        <trans-unit id="7ca3f01ee4ff5e92969deecc0b780e6ab8ed9854" translate="yes" xml:space="preserve">
          <source>VRFieldOfView.leftDegrees</source>
          <target state="translated">VRFieldOfView.leftDegrees</target>
        </trans-unit>
        <trans-unit id="ed5db0e31958bd79f3f9ebebe1d3f3a5ceb65ccd" translate="yes" xml:space="preserve">
          <source>VRFieldOfView.rightDegrees</source>
          <target state="translated">VRFieldOfView.rightDegrees</target>
        </trans-unit>
        <trans-unit id="dd7c0974ede3c7446f7a5a0f0e0dcf09da7e2722" translate="yes" xml:space="preserve">
          <source>VRFieldOfView.upDegrees</source>
          <target state="translated">VRFieldOfView.upDegrees</target>
        </trans-unit>
        <trans-unit id="f96451540a296f28531d35ee28385daf3d8622c6" translate="yes" xml:space="preserve">
          <source>VRFrameData</source>
          <target state="translated">VRFrameData</target>
        </trans-unit>
        <trans-unit id="0b30a106f7e942670a4f47f9c3f8ffe033a5c818" translate="yes" xml:space="preserve">
          <source>VRFrameData.constructor</source>
          <target state="translated">VRFrameData.constructor</target>
        </trans-unit>
        <trans-unit id="a6603cef2df5ddd2ab60b9f7fda0f033cb82ea17" translate="yes" xml:space="preserve">
          <source>VRFrameData.leftProjectionMatrix</source>
          <target state="translated">VRFrameData.leftProjectionMatrix</target>
        </trans-unit>
        <trans-unit id="ab6c3ae874e98a85e7986f51e0c0462d1e28b66c" translate="yes" xml:space="preserve">
          <source>VRFrameData.leftViewMatrix</source>
          <target state="translated">VRFrameData.leftViewMatrix</target>
        </trans-unit>
        <trans-unit id="1a7dac38436106df4bff0a5327f16aedaf38d5d3" translate="yes" xml:space="preserve">
          <source>VRFrameData.pose</source>
          <target state="translated">VRFrameData.pose</target>
        </trans-unit>
        <trans-unit id="54bfd6286337649ba6d50850ad2e076d9a1fcfe5" translate="yes" xml:space="preserve">
          <source>VRFrameData.rightProjectionMatrix</source>
          <target state="translated">VRFrameData.rightProjectionMatrix</target>
        </trans-unit>
        <trans-unit id="54127c420249df2b89f39fdea6f24708f9df03d9" translate="yes" xml:space="preserve">
          <source>VRFrameData.rightViewMatrix</source>
          <target state="translated">VRFrameData.rightViewMatrix</target>
        </trans-unit>
        <trans-unit id="a0f7bf96ddc8a013434e035bce75c948f6b31cce" translate="yes" xml:space="preserve">
          <source>VRFrameData.timestamp</source>
          <target state="translated">VRFrameData.timestamp</target>
        </trans-unit>
        <trans-unit id="0bdeb5d3c927149a65cce7ef41e6f112c5d54ede" translate="yes" xml:space="preserve">
          <source>VRLayerInit</source>
          <target state="translated">VRLayerInit</target>
        </trans-unit>
        <trans-unit id="89e100682ee86726b8b58f430f1b823ebf7c40ca" translate="yes" xml:space="preserve">
          <source>VRLayerInit.leftBounds</source>
          <target state="translated">VRLayerInit.leftBounds</target>
        </trans-unit>
        <trans-unit id="d59d5da1e803431d5480d8a1f0034967720e1fed" translate="yes" xml:space="preserve">
          <source>VRLayerInit.rightBounds</source>
          <target state="translated">VRLayerInit.rightBounds</target>
        </trans-unit>
        <trans-unit id="cd2cb178fb71ff0124aa92086cefb6875ead1d26" translate="yes" xml:space="preserve">
          <source>VRLayerInit.source</source>
          <target state="translated">VRLayerInit.source</target>
        </trans-unit>
        <trans-unit id="008039b495ba40efd7ce1a3e5342bdf07ec93b05" translate="yes" xml:space="preserve">
          <source>VRPose</source>
          <target state="translated">VRPose</target>
        </trans-unit>
        <trans-unit id="3418c0447aacd5602471ab4ff7533de00d7a0d2d" translate="yes" xml:space="preserve">
          <source>VRPose.angularAcceleration</source>
          <target state="translated">VRPose.angularAcceleration</target>
        </trans-unit>
        <trans-unit id="454507bb264fb11e6c4e7ab375a9e1dee928a46b" translate="yes" xml:space="preserve">
          <source>VRPose.angularVelocity</source>
          <target state="translated">VRPose.angularVelocity</target>
        </trans-unit>
        <trans-unit id="e6f8c85de0da95d95edeea45fd8a2db493b0fcce" translate="yes" xml:space="preserve">
          <source>VRPose.hasOrientation</source>
          <target state="translated">VRPose.hasOrientation</target>
        </trans-unit>
        <trans-unit id="5478467ce9eedb340cd5c23582f405ecab52e750" translate="yes" xml:space="preserve">
          <source>VRPose.hasPosition</source>
          <target state="translated">VRPose.hasPosition</target>
        </trans-unit>
        <trans-unit id="3f9f58b930f8b1481baf2939dbe86cfeda4abfe9" translate="yes" xml:space="preserve">
          <source>VRPose.linearAcceleration</source>
          <target state="translated">VRPose.linearAcceleration</target>
        </trans-unit>
        <trans-unit id="7bbb299b46acfe9fa84b5dce08c38f61d5bee030" translate="yes" xml:space="preserve">
          <source>VRPose.linearVelocity</source>
          <target state="translated">VRPose.linearVelocity</target>
        </trans-unit>
        <trans-unit id="bd2b14bee543ee145c90c04eec51e601cf514013" translate="yes" xml:space="preserve">
          <source>VRPose.orientation</source>
          <target state="translated">VRPose.orientation</target>
        </trans-unit>
        <trans-unit id="8a67af79b739969778b1bffe9d23446ed7697e78" translate="yes" xml:space="preserve">
          <source>VRPose.position</source>
          <target state="translated">VRPose.position</target>
        </trans-unit>
        <trans-unit id="f3cf9ce53fa900e1e0a5c589a7c734ef839e58ed" translate="yes" xml:space="preserve">
          <source>VRPose.timeStamp</source>
          <target state="translated">VRPose.timeStamp</target>
        </trans-unit>
        <trans-unit id="937924b5d00ef5d695132e2faadd079fa8316941" translate="yes" xml:space="preserve">
          <source>VRStageParameters</source>
          <target state="translated">VRStageParameters</target>
        </trans-unit>
        <trans-unit id="790bfd6b0eb34e52bc6cf7e45a0f1ddd6feabe8e" translate="yes" xml:space="preserve">
          <source>VRStageParameters.sittingToStandingTransform</source>
          <target state="translated">VRStageParameters.sittingToStandingTransform</target>
        </trans-unit>
        <trans-unit id="f6b38578349537d97ed403be92a71b513fc95a29" translate="yes" xml:space="preserve">
          <source>VRStageParameters.sizeX</source>
          <target state="translated">VRStageParameters.sizeX</target>
        </trans-unit>
        <trans-unit id="d81610c276d5864eaaa9d159f5b2a4883d70f534" translate="yes" xml:space="preserve">
          <source>VRStageParameters.sizeY</source>
          <target state="translated">VRStageParameters.sizeY</target>
        </trans-unit>
        <trans-unit id="e6ca97067395eb619dca72e3008442218d1b99c7" translate="yes" xml:space="preserve">
          <source>VTTCue</source>
          <target state="translated">VTTCue</target>
        </trans-unit>
        <trans-unit id="7d29d86ff4d163fc744d6ce745be696040b324ee" translate="yes" xml:space="preserve">
          <source>VTTCue.constructor</source>
          <target state="translated">VTTCue.constructor</target>
        </trans-unit>
        <trans-unit id="95f0af8609a19d35aabd8b7a14fb8975fc1c0f1f" translate="yes" xml:space="preserve">
          <source>VTTRegion</source>
          <target state="translated">VTTRegion</target>
        </trans-unit>
        <trans-unit id="9fdd569609fb011d702eae8b22b4bd84debc5ca0" translate="yes" xml:space="preserve">
          <source>Valid date string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ac360b22a024d090d30187cdd2f4324a8effc14" translate="yes" xml:space="preserve">
          <source>Valid duration string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a51c22ff7524a75ef1eeb89554bba40f2bc6d9c" translate="yes" xml:space="preserve">
          <source>Valid global date and time string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2326f1261b9988015f727c569ad635877aaa7c11" translate="yes" xml:space="preserve">
          <source>Valid hex color string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88cecd954402320e0be2800fad41193109cd0fee" translate="yes" xml:space="preserve">
          <source>Valid local date and time string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aff890c8bc06d0926269576df3c0f775c5cd0b3c" translate="yes" xml:space="preserve">
          <source>Valid month string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3572d062689e23beaeea7778ac1f9e53d30f69c" translate="yes" xml:space="preserve">
          <source>Valid name color string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd4b1637b71faf84f67b7ff35fdd2554bd1ea8c6" translate="yes" xml:space="preserve">
          <source>Valid size number string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce8304895d1cab088ed5709fe1be540935eab15" translate="yes" xml:space="preserve">
          <source>Valid time string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3500a073a8c32e7df99f21b00ddf22cf1a10ea7d" translate="yes" xml:space="preserve">
          <source>Valid time-zone offset string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e6d0181d583814bbb4baa0728acfbd3447391d" translate="yes" xml:space="preserve">
          <source>Valid week string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1960fc9e87cf077ed51528c7fb13009c3031f86" translate="yes" xml:space="preserve">
          <source>Valid yearless date string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242cc9162b91c0b54499ac05fdd663dcea97e3ff" translate="yes" xml:space="preserve">
          <source>ValidityState</source>
          <target state="translated">ValidityState</target>
        </trans-unit>
        <trans-unit id="f7d5627ca19ce635672949a891e35d19e53d94f0" translate="yes" xml:space="preserve">
          <source>ValidityState.badInput</source>
          <target state="translated">ValidityState.badInput</target>
        </trans-unit>
        <trans-unit id="f187487f7b9b33904d3060ba2204911af962aabd" translate="yes" xml:space="preserve">
          <source>ValidityState.tooLong</source>
          <target state="translated">ValidityState.tooLong</target>
        </trans-unit>
        <trans-unit id="8dce170de238b1feda2ecd9674ea3ca0d068fbcb" translate="yes" xml:space="preserve">
          <source>Value</source>
          <target state="translated">Value</target>
        </trans-unit>
        <trans-unit id="d86adc7ce80e195a0aed99d87503f7d8470cc90b" translate="yes" xml:space="preserve">
          <source>Value mode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f39e6ab606bf045d1d812add6f4fea454b19d5" translate="yes" xml:space="preserve">
          <source>Value returned by the &lt;a href=&quot;acceptnode&quot;&gt;&lt;code&gt;NodeFilter.acceptNode()&lt;/code&gt;&lt;/a&gt; method when a node should be accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a11994d41334ccb7f91a3d905a8be6ac1bfc31d8" translate="yes" xml:space="preserve">
          <source>Value returned by the &lt;a href=&quot;nodefilter/acceptnode&quot;&gt;&lt;code&gt;NodeFilter.acceptNode()&lt;/code&gt;&lt;/a&gt; method when a node should be accepted.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d586e6f054ce47b4a31ea89af8f152ce76f2529" translate="yes" xml:space="preserve">
          <source>Value to be returned by &lt;a href=&quot;acceptnode&quot;&gt;&lt;code&gt;NodeFilter.acceptNode()&lt;/code&gt;&lt;/a&gt; for nodes to be skipped by the &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; object. The children of skipped nodes are still considered. This is treated as &quot;skip this node but not its children&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9c0898769d21f25d0e20ee4ce085b2a57b9340" translate="yes" xml:space="preserve">
          <source>Value to be returned by &lt;a href=&quot;nodefilter/acceptnode&quot;&gt;&lt;code&gt;NodeFilter.acceptNode()&lt;/code&gt;&lt;/a&gt; for nodes to be skipped by the &lt;a href=&quot;nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; object. The children of skipped nodes are still considered. This is treated as &quot;skip this node but not its children&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99044790f61cfd7d535b50ceeddf1cc6d915be2d" translate="yes" xml:space="preserve">
          <source>Value to be returned by the &lt;a href=&quot;acceptnode&quot;&gt;&lt;code&gt;NodeFilter.acceptNode()&lt;/code&gt;&lt;/a&gt; method when a node should be rejected. The children of rejected nodes are not visited by the &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt; object; this value is treated as &quot;skip this node and all its children&quot;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35162461753e579284a3596a28f270d381b18629" translate="yes" xml:space="preserve">
          <source>Value to be returned by the &lt;a href=&quot;nodefilter/acceptnode&quot;&gt;&lt;code&gt;NodeFilter.acceptNode()&lt;/code&gt;&lt;/a&gt; method when a node should be rejected. For &lt;a href=&quot;treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt;, child nodes are also rejected. For &lt;a href=&quot;nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;, this flag is synonymous with FILTER_SKIP.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c475226b25c4f05694f70e30e1bd2f80c908996" translate="yes" xml:space="preserve">
          <source>Value to use as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cd1bc01710ea3928dd42ebf711ff0dad289ebbc" translate="yes" xml:space="preserve">
          <source>Value to use as &lt;code&gt;&lt;strong&gt;this&lt;/strong&gt;&lt;/code&gt; (i.e the reference &lt;code&gt;Object&lt;/code&gt;) when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e2ee5b2b955bed93a021f0eb7046410b8d13be" translate="yes" xml:space="preserve">
          <source>Value type changed from &lt;code&gt;long&lt;/code&gt; to &lt;code&gt;double&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18d93c9d19a258e996b81297b2711a2908610842" translate="yes" xml:space="preserve">
          <source>Value used as &lt;code&gt;this&lt;/code&gt; when executing &lt;code&gt;callback&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="727b5ae0c7fa13804ea6e3e3b9df39a33c91b08f" translate="yes" xml:space="preserve">
          <source>Value.cssText</source>
          <target state="translated">Value.cssText</target>
        </trans-unit>
        <trans-unit id="31378267f13e0337df901db424ab4a8216bd69bb" translate="yes" xml:space="preserve">
          <source>Value.cssValueType</source>
          <target state="translated">Value.cssValueType</target>
        </trans-unit>
        <trans-unit id="bae239958f2d3e39814ba8c6c4349e809f0bd831" translate="yes" xml:space="preserve">
          <source>ValueList</source>
          <target state="translated">ValueList</target>
        </trans-unit>
        <trans-unit id="e09be315edb216850fa7dae2751a5ddb4c14bc14" translate="yes" xml:space="preserve">
          <source>ValueList.item</source>
          <target state="translated">ValueList.item</target>
        </trans-unit>
        <trans-unit id="124c04f43ed9f827f2a4ad8891448cbf55f71270" translate="yes" xml:space="preserve">
          <source>ValueList.length</source>
          <target state="translated">ValueList.length</target>
        </trans-unit>
        <trans-unit id="b1564f6b1512cbfa3cfcebc9a5badb6b239954f1" translate="yes" xml:space="preserve">
          <source>Values</source>
          <target state="translated">Values</target>
        </trans-unit>
        <trans-unit id="3890e33ce3c467d046abf039e6a7330292b176e0" translate="yes" xml:space="preserve">
          <source>Values and results</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e711dde03e99a72f31700dcc4d4bbcdf4fdc3cf3" translate="yes" xml:space="preserve">
          <source>Values below 1.0 are invalid for the miter limit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9497c3d854f6c00edb20ea6ed58a1131de6de406" translate="yes" xml:space="preserve">
          <source>Values don't need to be sequential nor must they begin with any particular value, they may even be negative, though each browser trims very large values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3dae3fadc1bb7286ecac4b6e4f39d28316e9dfb" translate="yes" xml:space="preserve">
          <source>Values for &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/BatteryManager/chargingTime&quot;&gt;&lt;code&gt;BatteryManager.chargingTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/BatteryManager/dischargingTime&quot;&gt;&lt;code&gt;BatteryManager.dischargingTime&lt;/code&gt;&lt;/a&gt; are always equal to &lt;code&gt;Infinity&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caebff055fd22626ce5a5496b8ac100e3187a32e" translate="yes" xml:space="preserve">
          <source>Variable declarations</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06fb37bf0680a53ee68a30696872a41aba614cb6" translate="yes" xml:space="preserve">
          <source>Various countries use different terms for this. In most of the world, it's known as the &quot;post code&quot; or &quot;postal code.&quot; In the United States, the ZIP code is used. India uses PIN codes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263a7001240e3c27f380021f512b5e25fd0e3e7f" translate="yes" xml:space="preserve">
          <source>Various elliptical arcs</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="097f086c04978393dbbd9aa54de0dc924d52e375" translate="yes" xml:space="preserve">
          <source>Verifying a properly formatted price</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c7acb512a39264a75f2642f66a16c3591fd3400" translate="yes" xml:space="preserve">
          <source>Version 54 or older didn't support parentheses-less one-argument version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ac157023bcc9d38f3e74a31e2f80c54307489fb" translate="yes" xml:space="preserve">
          <source>Version 60 or older didn't support parentheses-less one-argument version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da5dd943a78e1df5e94a8491a1407da6668b2762" translate="yes" xml:space="preserve">
          <source>Version changes while a web app is open in another tab</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4981e61ad4f78705d5158e964ffd9773bbb08a48" translate="yes" xml:space="preserve">
          <source>Versions before Chrome 46 use nearest neighbor instead of linear interpolation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="196af10e60330ffd14acc21321ae424035925c97" translate="yes" xml:space="preserve">
          <source>Versions of Firefox before 26 do not implement the use of several arguments in the add/remove/toggle methods. See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=814014&quot;&gt;https://bugzilla.mozilla.org/show_bug.cgi?id=814014&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af1fb0f330595208d6442cbd9116e64d2c5cd30c" translate="yes" xml:space="preserve">
          <source>VertexArrayObject</source>
          <target state="translated">VertexArrayObject</target>
        </trans-unit>
        <trans-unit id="891915977d55545411cc7a190b45653735f02488" translate="yes" xml:space="preserve">
          <source>Vertical distance the shadow will be offset. Default 0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e22488c22b8c8ea5d0e15d2661f5698d9157146" translate="yes" xml:space="preserve">
          <source>Vertical moving.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8fa85ee1304760d7a470613906be198933966f" translate="yes" xml:space="preserve">
          <source>Vertical position (y coordinate) at which to place the image data in the destination canvas.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59feaa3235125300758b15d8df7f8713432fc66c" translate="yes" xml:space="preserve">
          <source>Vertical position (y coordinate) of the top-left corner from which the image data will be extracted. Defaults to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4e65b93e6862ded147d917bfea5dda6a5864d8" translate="yes" xml:space="preserve">
          <source>Vertical scaling.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f37bcb90ed77abd7cb6d3b80e5bc7b7eb64ebc3" translate="yes" xml:space="preserve">
          <source>Vertical skewing.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f763a22b9c8a6ca1a19cdd3a47c1e186e60e15e3" translate="yes" xml:space="preserve">
          <source>Via &lt;a href=&quot;htmlelement/style&quot;&gt;&lt;code&gt;HTMLElement.style&lt;/code&gt;&lt;/a&gt; which deals with the inline styles of a single element (&amp;lt;elem style=&quot;...&quot;&amp;gt;);</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae41fabb6c4ce58acc671524f1b9307f971e0d7f" translate="yes" xml:space="preserve">
          <source>Via &lt;a href=&quot;window/getcomputedstyle&quot;&gt;window.getComputedStyle&lt;/a&gt;() which exposes the CSSStyleDeclaration object as a &lt;strong&gt;read-only&lt;/strong&gt; interface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dcfcacc5408e5bfbc003e16df11f79479d5b80d" translate="yes" xml:space="preserve">
          <source>Via the &lt;a href=&quot;cssstylesheet&quot;&gt;&lt;code&gt;CSSStyleSheet&lt;/code&gt;&lt;/a&gt; API (e.g. &lt;code&gt;document.styleSheets[0].cssRules[0].style&lt;/code&gt; returns a &lt;code&gt;CSSStyleDeclaration&lt;/code&gt; object on the first CSS rule in the document's first stylesheet).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a262edfcca765aced41dbe8c82f8c49d87e0c49" translate="yes" xml:space="preserve">
          <source>Vibration API</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84bee7b1488f1e88fea6081e11b80da21edf9ec4" translate="yes" xml:space="preserve">
          <source>VideoFacingModeEnum</source>
          <target state="translated">VideoFacingModeEnum</target>
        </trans-unit>
        <trans-unit id="42c538eaf90b9829016b413aa495950314303b6f" translate="yes" xml:space="preserve">
          <source>VideoPlaybackQuality</source>
          <target state="translated">VideoPlaybackQuality</target>
        </trans-unit>
        <trans-unit id="1f7a3fad2e989770af7ee3e0e9f2aa15940b9fe5" translate="yes" xml:space="preserve">
          <source>VideoPlaybackQuality.corruptedVideoFrames</source>
          <target state="translated">VideoPlaybackQuality.corruptedVideoFrames</target>
        </trans-unit>
        <trans-unit id="e8197568d9880230e74f14636362724ba54c8f94" translate="yes" xml:space="preserve">
          <source>VideoPlaybackQuality.creationTime</source>
          <target state="translated">VideoPlaybackQuality.creationTime</target>
        </trans-unit>
        <trans-unit id="df6932865e6ba4f417737a011d432d5545781838" translate="yes" xml:space="preserve">
          <source>VideoPlaybackQuality.droppedVideoFrames</source>
          <target state="translated">VideoPlaybackQuality.droppedVideoFrames</target>
        </trans-unit>
        <trans-unit id="4de7b363b74b923acd6f78e1be843eaeab1f8f13" translate="yes" xml:space="preserve">
          <source>VideoPlaybackQuality.totalFrameDelay</source>
          <target state="translated">VideoPlaybackQuality.totalFrameDelay</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
