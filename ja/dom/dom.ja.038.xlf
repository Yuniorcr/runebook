<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="de6b6a5a55f4a77afb320e3b4be4def705111336" translate="yes" xml:space="preserve">
          <source>The following code gets the precision format of a &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; with a &lt;code&gt;gl.MEDIUM_FLOAT&lt;/code&gt; precision type.</source>
          <target state="translated">次のコードは、の精度フォーマット取得 &lt;code&gt;gl.VERTEX_SHADER&lt;/code&gt; と &lt;code&gt;gl.MEDIUM_FLOAT&lt;/code&gt; の精度タイプ。</target>
        </trans-unit>
        <trans-unit id="76c3b93d88f4df998b0679c3d20ee38299be4f57" translate="yes" xml:space="preserve">
          <source>The following code is taken from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html&quot;&gt;Chrome's Grab Frame - Take Photo Sample&lt;/a&gt;. Since &lt;code&gt;ImageCapture&lt;/code&gt; requires some place to capture an image from, the example below starts with a device's media device (in other words a camera).</source>
          <target state="translated">次のコードは、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/grab-frame-take-photo.html&quot;&gt;ChromeのGrab Frame-Take Photo Sample&lt;/a&gt;から取得したものです。 &lt;code&gt;ImageCapture&lt;/code&gt; は画像をキャプチャするための場所を必要とするため、以下の例はデバイスのメディアデバイス（つまりカメラ）から始まります。</target>
        </trans-unit>
        <trans-unit id="39c8d6dd06d844097a2a28f5005649906b84ca4c" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component&quot;&gt;popup-info-box-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/popup-info-box-web-component/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">次のコードは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/popup-info-box-web-component&quot;&gt;popup-info-box-web-componentの&lt;/a&gt;例から取得したものです（&lt;a href=&quot;https://mdn.github.io/web-components-examples/popup-info-box-web-component/&quot;&gt;これもライブで参照してください&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="d52376d318549331dfe749e666bba226c099e12c" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">次のコードは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-componentの&lt;/a&gt;例から抜粋したものです（&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;実際に見ることもできます&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="b8637c867255f1eb90613948d7d2faa99a9a6978" translate="yes" xml:space="preserve">
          <source>The following code is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;). Note how we use the &lt;a href=&quot;customelementregistry/define&quot;&gt;&lt;code&gt;CustomElementRegistry.define()&lt;/code&gt;&lt;/a&gt; method to define the custom element after creating its class.</source>
          <target state="translated">次のコードは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-componentの&lt;/a&gt;例から抜粋したものです（&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;実際に見ることもできます&lt;/a&gt;）。クラスを作成した後、&lt;a href=&quot;customelementregistry/define&quot;&gt; &lt;code&gt;CustomElementRegistry.define()&lt;/code&gt; &lt;/a&gt;メソッドを使用してカスタム要素を定義する方法に注意してください。</target>
        </trans-unit>
        <trans-unit id="0fa3bd934780dbeadbe97fd790a7aaa6912ed51f" translate="yes" xml:space="preserve">
          <source>The following code sample defines a method on the &lt;code&gt;CubeDemo&lt;/code&gt; object that will create the model matrix. It uses custom functions to create and multiply matrices as defined in the &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;MDN WebGL&lt;/a&gt; shared code. The new function looks like this:</source>
          <target state="translated">次のコードサンプルでは、モデルマトリックスを作成する &lt;code&gt;CubeDemo&lt;/code&gt; オブジェクトのメソッドを定義しています。カスタム関数を使用して、&lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;MDN WebGL&lt;/a&gt;共有コードで定義されている行列を作成および乗算します。新しい関数は次のようになります。</target>
        </trans-unit>
        <trans-unit id="8b6e719942df99d2615faf9f5247f9942c32fba4" translate="yes" xml:space="preserve">
          <source>The following code snippet compares a previously saved pointer id with the identifier of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; event that was just fired.</source>
          <target state="translated">次のコードスニペットは、以前に保存されたポインターIDを、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerdown&quot;&gt;pointerdown&lt;/a&gt;&lt;/code&gt; したばかりのpointerdownイベントの識別子と比較します。</target>
        </trans-unit>
        <trans-unit id="775c66860654f1a482346d46ae04ed76415aed56" translate="yes" xml:space="preserve">
          <source>The following code snippet demonstrates the difference between the values obtained using the element's &lt;code&gt;style&lt;/code&gt; property and that obtained using the &lt;code&gt;getComputedStyle()&lt;/code&gt; method:</source>
          <target state="translated">次のコードスニペットは、要素の &lt;code&gt;style&lt;/code&gt; プロパティを使用して取得した &lt;code&gt;getComputedStyle()&lt;/code&gt; メソッドを使用して取得した値の違いを示しています。</target>
        </trans-unit>
        <trans-unit id="9298bde68914cf6707f3e2d818ffd112c34d4610" translate="yes" xml:space="preserve">
          <source>The following code snippet shows &lt;code&gt;worker.js&lt;/code&gt;, in which an &lt;code&gt;onmessage&lt;/code&gt; handler is used to handle messages from the main script. Inside the handler a calculation is done from which a result message is created; this is then sent back to the main thread using &lt;code&gt;postMessage(workerResult);&lt;/code&gt;</source>
          <target state="translated">次のコードスニペットショーの &lt;code&gt;worker.js&lt;/code&gt; れ、 &lt;code&gt;onmessage&lt;/code&gt; ハンドラがメインスクリプトからのメッセージを処理するために使用されます。ハンドラー内で計算が行われ、そこから結果メッセージが作成されます。これは、 &lt;code&gt;postMessage(workerResult);&lt;/code&gt; を使用してメインスレッドに送り返されます。</target>
        </trans-unit>
        <trans-unit id="f84e1e466d6bde7cf7eb1afd492a36554328cb67" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onclose&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;onclose&lt;/code&gt; ハンドラを示しています。</target>
        </trans-unit>
        <trans-unit id="0a8b4d5b9ae6479895aad9dbd1e192d837527ee0" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onerror&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;onerror&lt;/code&gt; ハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="26c2e6e12bff62f674132dce872aede59a8207ad" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onlanguagechange&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;onlanguagechange&lt;/code&gt; ハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="a5da936e6566ad6f261c704691dd7d2ce78f9b17" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;onoffline&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;onoffline&lt;/code&gt; ハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="4b52b00d0167dbda85b110225e8b485594ec894e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows an &lt;code&gt;ononline&lt;/code&gt; handler set inside a worker:</source>
          <target state="translated">次のコードスニペットは、ワーカー内に設定された &lt;code&gt;ononline&lt;/code&gt; ハンドラーを示しています。</target>
        </trans-unit>
        <trans-unit id="9a575193e3b6b0a60e4c783a9fbc7f6e374694b7" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt; object using the &lt;code&gt;SharedWorker()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">次のコードスニペットは、 &lt;code&gt;SharedWorker()&lt;/code&gt; コンストラクターを使用した&lt;a href=&quot;../sharedworker&quot;&gt; &lt;code&gt;SharedWorker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成と、その後のオブジェクトの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="785eff56b7904ef3540f819687a7da47cd632ad7" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor and setting up of an &lt;code&gt;onerror&lt;/code&gt; handler on the resulting object:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;../worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成と、結果のオブジェクトでの &lt;code&gt;onerror&lt;/code&gt; ハンドラーの設定を示しています。</target>
        </trans-unit>
        <trans-unit id="78b1ae7ceeb12798d5ae473746b5fae9596d9c8e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;../worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. Messages are passed to the worker when the value inside the form input &lt;code&gt;first&lt;/code&gt; changes. A &lt;a href=&quot;../worker/onmessage&quot;&gt;&lt;code&gt;Worker.onmessage&lt;/code&gt;&lt;/a&gt; handler is also present, to deal with messages are passed back from the worker.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;../worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成を示しています。フォーム入力内の値が &lt;code&gt;first&lt;/code&gt; 変更されると、メッセージがワーカーに渡されます。A &lt;a href=&quot;../worker/onmessage&quot;&gt; &lt;code&gt;Worker.onmessage&lt;/code&gt; の&lt;/a&gt;ハンドラは、労働者から戻されたメッセージに対処するために、も存在しています。</target>
        </trans-unit>
        <trans-unit id="a6a4fd75ef54e0087c447be211a279bf142d2036" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor, which is then immediately terminated.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成を示しています。これはすぐに終了します。</target>
        </trans-unit>
        <trans-unit id="a02745d765c6148ec37a0dd6f786382463ff1b85" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. Messages are passed to the worker when the value inside the form input &lt;code&gt;first&lt;/code&gt; changes. An onmessage handler is also present, to deal with messages are passed back from the worker.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成を示しています。フォーム入力内の値が &lt;code&gt;first&lt;/code&gt; 変更されると、メッセージがワーカーに渡されます。onmessageハンドラーも存在し、メッセージを処理するためにワーカーから返されます。</target>
        </trans-unit>
        <trans-unit id="ca44ddd5172033f656a689ae1bb0d67a63839b67" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;code&gt;Worker()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">次のコードスニペットは、 &lt;code&gt;Worker()&lt;/code&gt; コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成とその後のオブジェクトの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="07affcc78a8d1acb22a1aceb23820650d9665a1d" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor and usage of the object:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成とオブジェクトの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="2956808150f3932960cf6d4904d8de0af14e6b77" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; object using the &lt;code&gt;FileReader()&lt;/code&gt; constructor and subsequent usage of the object:</source>
          <target state="translated">次のコードスニペットは、 &lt;code&gt;FileReader()&lt;/code&gt; コンストラクターを使用した &lt;code&gt;&lt;a href=&quot;../filereader&quot;&gt;FileReader&lt;/a&gt;&lt;/code&gt; オブジェクトの作成と、その後のオブジェクトの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="fdecd25957058a333fa80ad0b3860361575d9a02" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;SharedWorker&lt;/code&gt; object using the &lt;a href=&quot;sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. Multiple scripts can then access the worker through a &lt;a href=&quot;../messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt; object accessed using the &lt;code&gt;SharedWorker.port&lt;/code&gt; property &amp;mdash; the port is started using its &lt;code&gt;start()&lt;/code&gt; method:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した &lt;code&gt;SharedWorker&lt;/code&gt; オブジェクトの作成を示しています。次に、 &lt;code&gt;SharedWorker.port&lt;/code&gt; プロパティを使用してアクセスされる&lt;a href=&quot;../messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt;オブジェクトを介して、複数のスクリプトがワーカーにアクセスできます。ポートは、 &lt;code&gt;start()&lt;/code&gt; メソッドを使用して開始されます。</target>
        </trans-unit>
        <trans-unit id="7fef72d3c85f272409a601154a01fc9b4faf6121" translate="yes" xml:space="preserve">
          <source>The following code snippet shows creation of a &lt;code&gt;SharedWorker&lt;/code&gt; object using the &lt;a href=&quot;sharedworker/sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. Both scripts contain this:</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;sharedworker/sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した &lt;code&gt;SharedWorker&lt;/code&gt; オブジェクトの作成を示しています。両方のスクリプトにはこれが含まれています：</target>
        </trans-unit>
        <trans-unit id="3b543166718695298820dc044d5e81c7c0e926bd" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how you can measure a text and get its width.</source>
          <target state="translated">次のコードスニペットは、テキストを測定してその幅を取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3f79234f8c9f517e6c44fae4e48b4d13e779d1bb" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the creation of a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; object using the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. When either of two form inputs (&lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt;) have their values changed, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; events invoke &lt;code&gt;postMessage()&lt;/code&gt; to send the value of both inputs to the current worker.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用した&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;オブジェクトの作成を示しています。2つのフォーム入力（ &lt;code&gt;first&lt;/code&gt; および &lt;code&gt;second&lt;/code&gt; ）のいずれかの値が変更されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/change&quot;&gt;change&lt;/a&gt;&lt;/code&gt; イベントは &lt;code&gt;postMessage()&lt;/code&gt; を呼び出して、両方の入力の値を現在のワーカーに送信します。</target>
        </trans-unit>
        <trans-unit id="b5d39e7325eb2c5b4fcdeb658dbc547caf41bf55" translate="yes" xml:space="preserve">
          <source>The following code snippet will slow down all animations on a page by halving their &lt;a href=&quot;../animation/playbackrate&quot;&gt;&lt;code&gt;Animation.playbackRate&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のコードスニペットは、&lt;a href=&quot;../animation/playbackrate&quot;&gt; &lt;code&gt;Animation.playbackRate&lt;/code&gt; を&lt;/a&gt;半分にすることで、ページ上のすべてのアニメーションを遅くします。</target>
        </trans-unit>
        <trans-unit id="3ca3137616bf2b32c50802fc9cf0145d207d5a43" translate="yes" xml:space="preserve">
          <source>The following code uses &lt;code&gt;navigator.clipboard&lt;/code&gt; to access the system clipboard in order to read the contents of the clipboard.</source>
          <target state="translated">次のコードは、 &lt;code&gt;navigator.clipboard&lt;/code&gt; を使用してシステムのクリップボードにアクセスし、クリップボードの内容を読み取ります。</target>
        </trans-unit>
        <trans-unit id="c346630a666a1c7ab1339f8a30e481800a97a5c4" translate="yes" xml:space="preserve">
          <source>The following code waits until all animations running on the element &lt;code&gt;elem&lt;/code&gt; have finished, then deletes the element from the DOM tree:</source>
          <target state="translated">次のコードは、要素 &lt;code&gt;elem&lt;/code&gt; で実行されているすべてのアニメーションが完了するまで待機してから、要素をDOMツリーから削除します。</target>
        </trans-unit>
        <trans-unit id="b9155d2103e72dd3ab11c30554d60373bb32b44f" translate="yes" xml:space="preserve">
          <source>The following code, if included in a page at the root of a site, would apply to exactly the same pages as the example above. Remember the scope, when included, uses the page's location as its base. Alternatively, if this code were included in a page at &lt;code&gt;example.com/product/description.html&lt;/code&gt;, the scope of &lt;code&gt;'./'&lt;/code&gt; would mean that the service worker only applies to resources under &lt;code&gt;example.com/product&lt;/code&gt;. If I needed to register a service worker on &lt;code&gt;example.com/product/description.html&lt;/code&gt; that applied to all of &lt;code&gt;example.com&lt;/code&gt;, I would leave off the scope as above.</source>
          <target state="translated">次のコードは、サイトのルートにあるページに含まれている場合、上記の例とまったく同じページに適用されます。スコープが含まれている場合は、ページの場所をベースとして使用することに注意してください。または、このコードが &lt;code&gt;example.com/product/description.html&lt;/code&gt; のページに含まれている場合、 &lt;code&gt;'./'&lt;/code&gt; スコープは、サービスワーカーが &lt;code&gt;example.com/product&lt;/code&gt; の下のリソースにのみ適用されることを意味します。私は上のサービスワーカー登録するために必要な場合 &lt;code&gt;example.com/product/description.html&lt;/code&gt; のすべてに適用さ &lt;code&gt;example.com&lt;/code&gt; を、私は上記のようにスコープをオフのままでしょう。</target>
        </trans-unit>
        <trans-unit id="d491fd2b65326bcc2d9548ada2c065f112cca208" translate="yes" xml:space="preserve">
          <source>The following code:</source>
          <target state="translated">以下のコードです。</target>
        </trans-unit>
        <trans-unit id="cb4e5e69ea18c167c5a50d823ab464f0707bbace" translate="yes" xml:space="preserve">
          <source>The following conditions raise an exception:</source>
          <target state="translated">以下の条件で例外が発生します。</target>
        </trans-unit>
        <trans-unit id="ab9ae87765be155d9e9bcac89d20e1e7953183bb" translate="yes" xml:space="preserve">
          <source>The following constants can be used for &lt;em&gt;sfactor&lt;/em&gt; and &lt;em&gt;dfactor&lt;/em&gt;.</source>
          <target state="translated">次の定数は&lt;em&gt;sfactor&lt;/em&gt;と&lt;em&gt;dfactorに&lt;/em&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="ce2850370b8167a2cfb32d9defec8e846c8161a3" translate="yes" xml:space="preserve">
          <source>The following constants can be used for &lt;em&gt;srcRGB&lt;/em&gt;, &lt;em&gt;dstRGB&lt;/em&gt;, &lt;em&gt;srcAlpha&lt;/em&gt;, and &lt;em&gt;dstAlpha&lt;/em&gt;</source>
          <target state="translated">次の定数は、&lt;em&gt;srcRGB&lt;/em&gt;、&lt;em&gt;dstRGB&lt;/em&gt;、&lt;em&gt;srcAlpha&lt;/em&gt;、および&lt;em&gt;dstAlphaに&lt;/em&gt;使用できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1bfd67154540d68c74b98a6321b9be4de6783ead" translate="yes" xml:space="preserve">
          <source>The following constants have been deprecated and should not be used anymore.</source>
          <target state="translated">以下の定数は非推奨となっており、今後は使用しないでください。</target>
        </trans-unit>
        <trans-unit id="07ba7334b6e4056b80922f48347622631221d500" translate="yes" xml:space="preserve">
          <source>The following demonstrates a real-world use of the &lt;code&gt;eachNode&lt;/code&gt; function: searching for text on a web-page. We use a wrapper function named &lt;code&gt;grep&lt;/code&gt; to do the searching:</source>
          <target state="translated">以下は、 &lt;code&gt;eachNode&lt;/code&gt; 関数の実際の使用法を示しています：Webページ上のテキストの検索。検索を行うために、 &lt;code&gt;grep&lt;/code&gt; というラッパー関数を使用します。</target>
        </trans-unit>
        <trans-unit id="41461c74510317c4f6145d3b1224ea046fb95f44" translate="yes" xml:space="preserve">
          <source>The following describes the steps that occur during a drag and drop operation.</source>
          <target state="translated">ここでは、ドラッグ&amp;ドロップ操作中に発生するステップについて説明します。</target>
        </trans-unit>
        <trans-unit id="8ae28d060623c1f98acb168ec0893392f29ec99f" translate="yes" xml:space="preserve">
          <source>The following diagram from the &lt;a href=&quot;http://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt; demonstrates the various baselines supported by the &lt;code&gt;textBaseline&lt;/code&gt; property.</source>
          <target state="translated">&lt;a href=&quot;http://www.whatwg.org/&quot;&gt;WHATWG&lt;/a&gt;の次の図は、 &lt;code&gt;textBaseline&lt;/code&gt; プロパティでサポートされるさまざまなベースラインを示しています。</target>
        </trans-unit>
        <trans-unit id="b2d63726f92cadc2f136766602168941477729be" translate="yes" xml:space="preserve">
          <source>The following documents describe how to use touch events and include example code:</source>
          <target state="translated">以下のドキュメントでは、タッチイベントの使用方法を説明し、コード例を掲載しています。</target>
        </trans-unit>
        <trans-unit id="2ec4d49e2df92aba478e5086879fbc30de9ab5d1" translate="yes" xml:space="preserve">
          <source>The following elements can use the &lt;code&gt;cx&lt;/code&gt; attribute</source>
          <target state="translated">次の要素は &lt;code&gt;cx&lt;/code&gt; 属性を使用できます</target>
        </trans-unit>
        <trans-unit id="2c0a9969617d890fe812be742a41a24d2198c718" translate="yes" xml:space="preserve">
          <source>The following equivalence returns &lt;code&gt;true&lt;/code&gt; if an element is at the end of its scroll, &lt;code&gt;false&lt;/code&gt; if it isn't.</source>
          <target state="translated">以下の等価性は返し &lt;code&gt;true&lt;/code&gt; の要素は、そのスクロールの末尾にある場合 &lt;code&gt;false&lt;/code&gt; になっていない場合。</target>
        </trans-unit>
        <trans-unit id="d411998731f7e0069944923912244d337b11d120" translate="yes" xml:space="preserve">
          <source>The following errors may be thrown when calling this method.</source>
          <target state="translated">このメソッドを呼び出すと、以下のようなエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="5433af10c3012bba69dc3a9a2920d1481b87028b" translate="yes" xml:space="preserve">
          <source>The following errors may be thrown when setting a new value for this property.</source>
          <target state="translated">このプロパティに新しい値を設定すると、以下のエラーが発生することがあります。</target>
        </trans-unit>
        <trans-unit id="3d094cbed75236d22908ba8793257298d72ebb58" translate="yes" xml:space="preserve">
          <source>The following errors may occur; to check for errors after &lt;code&gt;getUniformLocation()&lt;/code&gt; returns, call &lt;a href=&quot;geterror&quot;&gt;&lt;code&gt;getError()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のエラーが発生する可能性があります。 &lt;code&gt;getUniformLocation()&lt;/code&gt; が戻った後にエラーを確認するには、&lt;a href=&quot;geterror&quot;&gt; &lt;code&gt;getError()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="533d186fe2d300e6097dcf59eeeb1fa1a74b191f" translate="yes" xml:space="preserve">
          <source>The following events are listed in the spec, but do not currently seem to be implemented anywhere as yet.</source>
          <target state="translated">以下のイベントは仕様に記載されていますが、現在のところどこにも実装されていないようです。</target>
        </trans-unit>
        <trans-unit id="f4da571c91381cb06a937f12193ffcad883aa639" translate="yes" xml:space="preserve">
          <source>The following events can be triggered on an upload object and used to monitor the state of the upload process:</source>
          <target state="translated">以下のイベントは、アップロード・オブジェクトでトリガーすることができ、アップロード・プロセスの状態を監視するために使用されます。</target>
        </trans-unit>
        <trans-unit id="da7bbaecae40d9f33dd8a209e99744eb1c0c9592" translate="yes" xml:space="preserve">
          <source>The following example (from the &lt;a href=&quot;../navigator/sendbeacon&quot;&gt;sendBeacon docs&lt;/a&gt;) shows a theoretical analytics code that attempts to submit data to a server by using a synchronous XMLHttpRequest in an unload handler. This results in the unloading of the page to be delayed.</source>
          <target state="translated">次の例（&lt;a href=&quot;../navigator/sendbeacon&quot;&gt;sendBeacon docs&lt;/a&gt;から）は、アンロードハンドラーで同期XMLHttpRequestを使用してサーバーにデータを送信しようとする理論的な分析コードを示しています。これにより、ページのアンロードが遅延します。</target>
        </trans-unit>
        <trans-unit id="6eccf72506bb36ad8cc98678d998c82dbb302e72" translate="yes" xml:space="preserve">
          <source>The following example adds a &lt;code&gt;ProgressEvent&lt;/code&gt; to a new &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHTTPRequest&lt;/code&gt;&lt;/a&gt; and uses it to display the status of the request.</source>
          <target state="translated">次の例では、 &lt;code&gt;ProgressEvent&lt;/code&gt; を新しい&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHTTPRequest&lt;/code&gt; に&lt;/a&gt;追加し、それを使用してリクエストのステータスを表示します。</target>
        </trans-unit>
        <trans-unit id="0f16b7c83152a8a728921d0884db42ccfe44c6b7" translate="yes" xml:space="preserve">
          <source>The following example autosaves the contents of a text field, and if the browser is accidentally refreshed, restores the text field content so that no writing is lost.</source>
          <target state="translated">以下の例では、テキストフィールドの内容を自動保存し、ブラウザを誤ってリフレッシュした場合には、テキストフィールドの内容を復元して書き込みが失われないようにしています。</target>
        </trans-unit>
        <trans-unit id="cb6dece3fa9bda3ba581551a33ecb59eac605ce1" translate="yes" xml:space="preserve">
          <source>The following example calls the &lt;code&gt;flashtext()&lt;/code&gt; function once a second until the Stop button is pressed.</source>
          <target state="translated">次の例では、Stopボタンが押されるまで、 &lt;code&gt;flashtext()&lt;/code&gt; 関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="a1a47bfae0d8fb231f36f7aaf8142a231ba68043" translate="yes" xml:space="preserve">
          <source>The following example captures all keypresses.</source>
          <target state="translated">次の例では、すべてのキープレスをキャプチャします。</target>
        </trans-unit>
        <trans-unit id="e38813eaf70fc464620e48f4b1063d81bcb72744" translate="yes" xml:space="preserve">
          <source>The following example captures the &quot;W&quot;, &quot;A&quot;, &quot;S&quot;, and &quot;D&quot; keys. It captures these keys regardless of which modifiers are used with the key press. Assuming a standard US QWERTY layout, registering &lt;code&gt;&quot;KeyW&quot;&lt;/code&gt; ensures that &quot;W&quot;, Shift+&quot;W&quot;, Control+&quot;W&quot;, Control+Shift+&quot;W&quot;, and all other key modifier combinations with &quot;W&quot; are sent to the app. The same applies to for &lt;code&gt;&quot;KeyA&quot;&lt;/code&gt;, &lt;code&gt;&quot;KeyS&quot;&lt;/code&gt; and &lt;code&gt;&quot;KeyD&quot;&lt;/code&gt;.</source>
          <target state="translated">次の例では、「W」、「A」、「S」、および「D」キーをキャプチャします。キーを押すときに使用する修飾子に関係なく、これらのキーをキャプチャします。標準のUS QWERTYレイアウトを想定して、 &lt;code&gt;&quot;KeyW&quot;&lt;/code&gt; を登録すると、「W」、Shift +「W」、Control +「W」、Control + Shift +「W」、および「W」を含む他のすべてのキー修飾子の組み合わせがアプリに送信されます。同じことがのために適用される &lt;code&gt;&quot;KeyA&quot;&lt;/code&gt; 、 &lt;code&gt;&quot;KeyS&quot;&lt;/code&gt; と &lt;code&gt;&quot;KeyD&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="fdf5d1af88595c220201eb81131ed3df7ae8e530" translate="yes" xml:space="preserve">
          <source>The following example causes a newly installed service worker to progress into the &lt;code&gt;activating&lt;/code&gt; state, regardless of whether there is already an active service worker.</source>
          <target state="translated">次の例では、すでにアクティブなService Workerがあるかどうかに関係なく、新しくインストールされたService Workerを &lt;code&gt;activating&lt;/code&gt; 状態に移行させます。</target>
        </trans-unit>
        <trans-unit id="f9106ab353d01668f40b8e4a793e8f32b6125408" translate="yes" xml:space="preserve">
          <source>The following example checks all &lt;code&gt;PerformanceEntry&lt;/code&gt; properties to see if the browser supports them and if so, write their values to the console.</source>
          <target state="translated">次の例では、すべての &lt;code&gt;PerformanceEntry&lt;/code&gt; プロパティをチェックして、ブラウザーがそれらをサポートしているかどうかを確認し、サポートしている場合はそれらの値をコンソールに書き込みます。</target>
        </trans-unit>
        <trans-unit id="d356565ed5f3dd072ee4363f9a0d214d6f62ea99" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;a href=&quot;../formdata&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; object with an appended &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Security/Same-origin_policy#How_to_block_cross-origin_access&quot;&gt;CSRF token&lt;/a&gt;. It then stores the form object in the additionalData parameter, before sending it to server in a call to &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例では、&lt;a href=&quot;https://developer.mozilla.org/docs/Web/Security/Same-origin_policy#How_to_block_cross-origin_access&quot;&gt;CSRFトークンが&lt;/a&gt;追加された&lt;a href=&quot;../formdata&quot;&gt; &lt;code&gt;FormData&lt;/code&gt; &lt;/a&gt;オブジェクトを作成します。次に、&lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; の&lt;/a&gt;呼び出しでサーバーに送信する前に、フォームオブジェクトをadditionalDataパラメータに格納します。</target>
        </trans-unit>
        <trans-unit id="84c8da872076116102ffdc018105267705612bdd" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/submit&quot;&gt;submit&lt;/a&gt;&lt;/code&gt; handler and when that event is fired, the handler calls &lt;code&gt;sendBeacon()&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/submit&quot;&gt;submit&lt;/a&gt;&lt;/code&gt; ハンドラを作成し、そのイベントが発生すると、ハンドラが &lt;code&gt;sendBeacon()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="9b07dfcd216a3258aa9c76afc3be6a9dbea92c4a" translate="yes" xml:space="preserve">
          <source>The following example creates a new media session and assigns action handlers to it:</source>
          <target state="translated">次の例では、新しいメディアセッションを作成し、それにアクションハンドラを割り当てています。</target>
        </trans-unit>
        <trans-unit id="75ff81017b5d4e13126fddb621e00510c8761629" translate="yes" xml:space="preserve">
          <source>The following example demonstrates &lt;code&gt;setInterval()&lt;/code&gt;'s basic syntax.</source>
          <target state="translated">次の例は、 &lt;code&gt;setInterval()&lt;/code&gt; の基本構文を示しています。</target>
        </trans-unit>
        <trans-unit id="b143d34a8bda993f3eeed8ce9d5fe04ce5ca3f4a" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how a popup window can change the URL of the window that opened it. Before attempting to change the URL, it checks that the current window has an opener using the &lt;a href=&quot;opener&quot;&gt;window.opener&lt;/a&gt; property and that the opener isn't closed:</source>
          <target state="translated">次の例は、ポップアップウィンドウがそれを開いたウィンドウのURLを変更する方法を示しています。URLを変更する前に、現在のウィンドウに&lt;a href=&quot;opener&quot;&gt;window.opener&lt;/a&gt;プロパティを使用したオープナーがあること、およびオープナーが閉じられていないことを確認します。</target>
        </trans-unit>
        <trans-unit id="96f439883149adbaf9e9a5fb875500f83926d862" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how invalid text input can be stopped from reaching the input field with &lt;code&gt;preventDefault()&lt;/code&gt;. Nowadays, you should usually use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation&quot;&gt;native HTML form validation&lt;/a&gt; instead.</source>
          <target state="translated">次の例は、 &lt;code&gt;preventDefault()&lt;/code&gt; を使用して無効なテキスト入力が入力フィールドに到達しないようにする方法を示しています。現在、通常は代わりに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/HTML/Forms/Form_validation&quot;&gt;ネイティブHTMLフォーム検証を&lt;/a&gt;使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d115a980cf80419a5e42998b96b2fb220ca24575" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to get the location- or layout-specific string associated with the key that corresponds to the 'W' key on an English QWERTY keyboard.</source>
          <target state="translated">以下の例は、英語の QWERTY キーボードの「W」キーに対応するキーに関連付けられた場所またはレイアウト固有の文字列を取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="6a1f90bebe83ef56f548801b18cc524554e82137" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the usage of these two methods.</source>
          <target state="translated">以下の例では、これら2つの方法の使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="3d6d7a660f7806ffb3fa5307cb73bf74be7fc6bc" translate="yes" xml:space="preserve">
          <source>The following example demonstrates using these three properties.</source>
          <target state="translated">次の例では、これらの 3 つのプロパティを使用してデモを行います。</target>
        </trans-unit>
        <trans-unit id="aad2ea2e1e3c8eaeb54be5a776c3c6ccb948dfbb" translate="yes" xml:space="preserve">
          <source>The following example displays a button to open a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;showModal()&lt;/code&gt; method. From there, either button will close the dialog.</source>
          <target state="translated">次の例では、 &lt;code&gt;showModal()&lt;/code&gt; メソッドを介してフォームを含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt;を開くためのボタンを表示します。そこから、どちらのボタンでもダイアログが閉じます。</target>
        </trans-unit>
        <trans-unit id="7d23059d7a9b94c8e97be5c01cd635ee29b89394" translate="yes" xml:space="preserve">
          <source>The following example displays information about the installed plugin(s).</source>
          <target state="translated">次の例では、インストールされているプラグインの情報を表示します。</target>
        </trans-unit>
        <trans-unit id="81066703b0caadc4fa0ff211f98b6c7251222695" translate="yes" xml:space="preserve">
          <source>The following example extracts the details from the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object to the promise returned from &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;. In a real-world implementation this data would then be sent to a payment server.</source>
          <target state="translated">次の例では、&lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt;オブジェクトから&lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;PaymentRequest.show()&lt;/code&gt; &lt;/a&gt;から返されたpromiseに詳細を抽出します。実際の実装では、このデータは支払いサーバーに送信されます。</target>
        </trans-unit>
        <trans-unit id="25e39a1e409efa9bbcca7b383c65d562cbfabe47" translate="yes" xml:space="preserve">
          <source>The following example extracts the method name from the &lt;a href=&quot;../paymentresponse&quot;&gt;&lt;code&gt;PaymentResponse&lt;/code&gt;&lt;/a&gt; object to the promise returned from &lt;a href=&quot;../paymentrequest/show&quot;&gt;&lt;code&gt;PaymentRequest.show()&lt;/code&gt;&lt;/a&gt;. In a real-world implementation this data would then be sent to a payment server.</source>
          <target state="translated">次の例では、&lt;a href=&quot;../paymentresponse&quot;&gt; &lt;code&gt;PaymentResponse&lt;/code&gt; &lt;/a&gt;オブジェクトから&lt;a href=&quot;../paymentrequest/show&quot;&gt; &lt;code&gt;PaymentRequest.show()&lt;/code&gt; &lt;/a&gt;から返されたpromiseにメソッド名を抽出します。実際の実装では、このデータは支払いサーバーに送信されます。</target>
        </trans-unit>
        <trans-unit id="dbf470caff1de817651b6cf06db79034f566198d" translate="yes" xml:space="preserve">
          <source>The following example finishes all the animations on a single element, regardless of their direction of playback.</source>
          <target state="translated">以下の例では、再生方向に関係なく、1つの要素上のすべてのアニメーションが終了します。</target>
        </trans-unit>
        <trans-unit id="0b71b2fbef0e5f6700dd695b9f07771024e2d970" translate="yes" xml:space="preserve">
          <source>The following example first checks whether a cache called 'v1' exists. If so, we add a list of assets to it. If not (meaning the &lt;code&gt;has()&lt;/code&gt; promise would reject) then we run some kind of cache set-up function.</source>
          <target state="translated">次の例では、最初に「v1」というキャッシュが存在するかどうかを確認します。もしそうなら、それにアセットのリストを追加します。そうでない場合（つまり、 &lt;code&gt;has()&lt;/code&gt; が拒否されることを意味します）、ある種のキャッシュ設定関数を実行します。</target>
        </trans-unit>
        <trans-unit id="a567cd1a114322f599117ece33641e09256a1195" translate="yes" xml:space="preserve">
          <source>The following example function returns the version of the Shockwave Flash plugin.</source>
          <target state="translated">次の例の関数は、Shockwave Flash プラグインのバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="194490be2e10b4b41e6ede90dbe2c0a1d7326b7d" translate="yes" xml:space="preserve">
          <source>The following example goes through all nodes in the body, reduces the set of nodes to elements, simply passes through as acceptable each node (it could reduce the set in the &lt;code&gt;acceptNode()&lt;/code&gt; method instead), and then makes use of tree walker iterator that is created to advance through the nodes (now all elements) and push them into an array.</source>
          <target state="translated">次の例では、本体のすべてのノードを通過し、ノードのセットを要素に減らし、受け入れ可能な各ノードを単に通過さ &lt;code&gt;acceptNode()&lt;/code&gt; 代わりに、acceptNode（）メソッドのセットを減らすことができます）、ツリーウォーカーイテレーターを利用します。ノード（現在はすべての要素）を進み、それらを配列にプッシュするために作成されます。</target>
        </trans-unit>
        <trans-unit id="db3e9a5322525c5d5ca85411ef8409f9bc0d919c" translate="yes" xml:space="preserve">
          <source>The following example hints that the quality of filtering when generating mipmap images should be most efficient instead of best quality.</source>
          <target state="translated">以下の例は、ミップマップ画像を生成する際のフィルタリングの品質が、最高の品質ではなく、最も効率的であることを示唆しています。</target>
        </trans-unit>
        <trans-unit id="35b51224b0799135bdce530675ce5c8453a3b3bc" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a bound key range. Here we declare a &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;);&lt;/code&gt; &amp;mdash; a range between values of &quot;A&quot; and &quot;F&quot;. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve records with keys inside that range. This range includes the values &quot;A&quot; and &quot;F&quot;, as we haven't declared that they should be open bounds. If we used IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;, true, true);, then the range would not include &quot;A&quot; and &quot;F&quot;, only the values between them.</source>
          <target state="translated">次の例は、バインドされたキー範囲の使用方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;);&lt;/code&gt; を宣言しています。 &amp;mdash;「A」と「F」の値の間の範囲。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。つまり、カーソルはその範囲内のキーを持つレコードのみを取得します。この範囲には、「A」と「F」の値が含まれます。これは、これらが開いた境界であることを宣言していないためです。 IDBKeyRange.bound（ &quot;A&quot;、 &quot;F&quot;、true、true）;を使用した場合、範囲には &quot;A&quot;と &quot;F&quot;は含まれず、それらの間の値のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="ddb30353976928d50d5a53d164c7b0047a41ca3e" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;, &quot;W&quot;, true, true);&lt;/code&gt; &amp;mdash; a range that includes everything between &quot;F&quot; and &quot;W&quot; but not including them &amp;mdash; since both the upper and lower bounds have been declared as open (&lt;code&gt;true&lt;/code&gt;). We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value.</source>
          <target state="translated">次の例は、キー範囲の使用方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;, &quot;W&quot;, true, true);&lt;/code&gt; を宣言しています。 &amp;mdash;「F」と「W」の間のすべてを含み、それらを含まない範囲&amp;mdash;上限と下限の両方がオープン（ &lt;code&gt;true&lt;/code&gt; ）として宣言されているため。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。</target>
        </trans-unit>
        <trans-unit id="b204b38aaabde66e48b16c02660e8fb750ae89b6" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a key range. Here we declare a &lt;code&gt;keyRangeValue&lt;/code&gt; as a range between values of &quot;A&quot; and &quot;F&quot;. We open a transaction (using &lt;a href=&quot;idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve records with keys inside that range. This range includes the values &quot;A&quot; and &quot;F&quot;, as we haven't declared that they should be open bounds. If we used IDBKeyRange.bound(&quot;A&quot;, &quot;F&quot;, true, true);, then the range would not include &quot;A&quot; and &quot;F&quot;, only the values between them.</source>
          <target state="translated">次の例は、キー範囲の使用方法を示しています。ここでは、「A」と「F」の値の間の範囲として &lt;code&gt;keyRangeValue&lt;/code&gt; を宣言しています。トランザクション（&lt;a href=&quot;idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。つまり、カーソルはその範囲内のキーを持つレコードのみを取得します。この範囲には、「A」と「F」の値が含まれます。これは、これらが開いた境界であることを宣言していないためです。 IDBKeyRange.bound（ &quot;A&quot;、 &quot;F&quot;、true、true）;を使用した場合、範囲には &quot;A&quot;と &quot;F&quot;は含まれず、それらの間の値のみが含まれます。</target>
        </trans-unit>
        <trans-unit id="02f4b77bc763c2252e0525b61c03dbfe8f753566" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use a lower bound key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.lowerBound(&quot;F&quot;, false);&lt;/code&gt; &amp;mdash; a range that includes the value &quot;F&quot; and everthing after it. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve the record with the key value &quot;F&quot; and all that come after it. If we used &lt;code&gt;IDBKeyRange.lowerBound(&quot;F&quot;, true);&lt;/code&gt;, then the range would not include &quot;F&quot;; only the values after it.</source>
          <target state="translated">次の例は、下限キー範囲を使用する方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.lowerBound(&quot;F&quot;, false);&lt;/code&gt; を宣言しています。 &amp;mdash;値「F」とその後のすべてを含む範囲。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。これは、カーソルがキー値 &quot;F&quot;を持つレコードとその後に続くすべてのレコードのみを取得することを意味します。 &lt;code&gt;IDBKeyRange.lowerBound(&quot;F&quot;, true);&lt;/code&gt; を使用した場合、の場合、範囲には「F」は含まれません。それ以降の値のみ。</target>
        </trans-unit>
        <trans-unit id="eb7b06a83b98a8307c1918f9823f142d4b61cbf5" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use an only key range. Here we declare a &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.only(&quot;A&quot;);&lt;/code&gt; &amp;mdash; a range that only includes the value &quot;A&quot;. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value. This means that the cursor will only retrieve the record with the key value &quot;A&quot;.</source>
          <target state="translated">次の例は、キー範囲のみを使用する方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.only(&quot;A&quot;);&lt;/code&gt; を宣言しています。 &amp;mdash;値「A」のみを含む範囲。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。つまり、カーソルはキー値 &quot;A&quot;のレコードのみを取得します。</target>
        </trans-unit>
        <trans-unit id="f81660c916b5714cab9e857713d7d142f8eca7eb" translate="yes" xml:space="preserve">
          <source>The following example illustrates how you'd use an upper bound key range. Here we declare &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;);&lt;/code&gt; &amp;mdash; a range that includes the value &quot;F&quot; and everything before it. We open a transaction (using &lt;a href=&quot;../idbtransaction&quot;&gt;&lt;code&gt;IDBTransaction&lt;/code&gt;&lt;/a&gt;) and an object store, and open a Cursor with &lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt;&lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt;&lt;/a&gt;, declaring &lt;code&gt;keyRangeValue&lt;/code&gt; as its optional key range value.</source>
          <target state="translated">次の例は、上限キー範囲の使用方法を示しています。ここでは、 &lt;code&gt;keyRangeValue =&amp;nbsp;IDBKeyRange.upperBound(&quot;F&quot;);&lt;/code&gt; を宣言しています。 &amp;mdash;値「F」とその前のすべてを含む範囲。トランザクション（&lt;a href=&quot;../idbtransaction&quot;&gt; &lt;code&gt;IDBTransaction&lt;/code&gt; &lt;/a&gt;を使用）とオブジェクトストアを開き、&lt;a href=&quot;../idbobjectstore/opencursor&quot;&gt; &lt;code&gt;IDBObjectStore.openCursor&lt;/code&gt; &lt;/a&gt;でCursorを開き、 &lt;code&gt;keyRangeValue&lt;/code&gt; をオプションのキー範囲値として宣言します。</target>
        </trans-unit>
        <trans-unit id="4e090a3f27eb36a7c6335c49f3de512b8cd5f335" translate="yes" xml:space="preserve">
          <source>The following example illustrates several features of this interface. It shows the creation of the &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">次の例は、このインターフェースのいくつかの機能を示しています。カスタムシンクとAPI提供のキューイング戦略を使用した &lt;code&gt;WritableStream&lt;/code&gt; の作成を示しています。次に、 &lt;code&gt;sendMessage()&lt;/code&gt; という関数を呼び出し、新しく作成されたストリームと文字列を渡します。この関数内では、ストリームの &lt;code&gt;getWriter()&lt;/code&gt; メソッドを呼び出します。このメソッドは、&lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。 &lt;code&gt;forEach()&lt;/code&gt; 呼び出しは、ストリームに文字列の各チャンクを書き込むために使用されます。最後に、 &lt;code&gt;write()&lt;/code&gt; および &lt;code&gt;close()&lt;/code&gt; は、チャンクおよびストリームの成功または失敗を処理するために処理されるプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="5ed73bdbaf82aa2eccfdf99f72137cfd2afeb74a" translate="yes" xml:space="preserve">
          <source>The following example illustrates several features of this interface. It shows the creation of the &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">次の例は、このインターフェースのいくつかの機能を示しています。カスタムシンクとAPI提供のキューイング戦略を使用した &lt;code&gt;WritableStream&lt;/code&gt; の作成を示しています。次に、 &lt;code&gt;sendMessage()&lt;/code&gt; という関数を呼び出し、新しく作成されたストリームと文字列を渡します。この関数内では、ストリームの &lt;code&gt;getWriter()&lt;/code&gt; メソッドを呼び出します。このメソッドは、&lt;a href=&quot;writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返します。 &lt;code&gt;forEach()&lt;/code&gt; 呼び出しは、ストリームに文字列の各チャンクを書き込むために使用されます。最後に、 &lt;code&gt;write()&lt;/code&gt; および &lt;code&gt;close()&lt;/code&gt; は、チャンクおよびストリームの成功または失敗を処理するために処理されるプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="8660e7e32ee5dde47e9329ee74093427dbff1047" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, recreating a sine wave from a periodic wave.</source>
          <target state="translated">次の例は、 &lt;code&gt;createPeriodicWave()&lt;/code&gt; の簡単な使用法を示しており、周期的な波から正弦波を再作成しています。</target>
        </trans-unit>
        <trans-unit id="bab3fad291454de1fc35966fb217fd19aee0b9a1" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, to create a &lt;a href=&quot;../periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; object containing a simple sine wave.</source>
          <target state="translated">次の例は、単純な正弦波を含む&lt;a href=&quot;../periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するための &lt;code&gt;createPeriodicWave()&lt;/code&gt; の簡単な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="1823a7f0b766ef4dbe854d69b017db28e818b125" translate="yes" xml:space="preserve">
          <source>The following example illustrates simple usage of &lt;code&gt;createPeriodicWave()&lt;/code&gt;, to create a &lt;a href=&quot;periodicwave&quot;&gt;&lt;code&gt;PeriodicWave&lt;/code&gt;&lt;/a&gt; object containing a simple sine wave.</source>
          <target state="translated">次の例は、単純な正弦波を含む&lt;a href=&quot;periodicwave&quot;&gt; &lt;code&gt;PeriodicWave&lt;/code&gt; &lt;/a&gt;オブジェクトを作成するための &lt;code&gt;createPeriodicWave()&lt;/code&gt; の簡単な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="e805d3e838ed10d317e4e32471a16c3d652b48bb" translate="yes" xml:space="preserve">
          <source>The following example illustrates this property's usage.</source>
          <target state="translated">以下の例は、このプロパティの使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="78d6f1a441d319a767fb2ee0acd033b95f92146a" translate="yes" xml:space="preserve">
          <source>The following example illustrates using the resource timing properties to calculate the amount of time the following phases take: redirection (&lt;a href=&quot;../performanceresourcetiming/redirectstart&quot;&gt;&lt;code&gt;redirectStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/redirectend&quot;&gt;&lt;code&gt;redirectEnd&lt;/code&gt;&lt;/a&gt; ), DNS lookup (&lt;a href=&quot;../performanceresourcetiming/domainlookupstart&quot;&gt;&lt;code&gt;domainLookupStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/domainlookupend&quot;&gt;&lt;code&gt;domainLookupEnd&lt;/code&gt;&lt;/a&gt;), TCP handshake (&lt;a href=&quot;../performanceresourcetiming/connectstart&quot;&gt;&lt;code&gt;connectStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/connectend&quot;&gt;&lt;code&gt;connectEnd&lt;/code&gt;&lt;/a&gt;), and response (&lt;a href=&quot;../performanceresourcetiming/responsestart&quot;&gt;&lt;code&gt;responseStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt;&lt;code&gt;responseEnd&lt;/code&gt;&lt;/a&gt;). This example also calculates the time from the start of the fetch and request start phases (&lt;a href=&quot;../performanceresourcetiming/fetchstart&quot;&gt;&lt;code&gt;fetchStart&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../performanceresourcetiming/requeststart&quot;&gt;&lt;code&gt;requestStart&lt;/code&gt;&lt;/a&gt;, respectively), until the response has ended (&lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt;&lt;code&gt;responseEnd&lt;/code&gt;&lt;/a&gt;). This timing data provides a detailed profile of the resource loading phases and this data can be used to help identify performance bottlenecks.</source>
          <target state="translated">次の例は、次のフェーズが取る時間の量を計算するためにリソースタイミング特性を使用して示す：リダイレクション（&lt;a href=&quot;../performanceresourcetiming/redirectstart&quot;&gt; &lt;code&gt;redirectStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/redirectend&quot;&gt; &lt;code&gt;redirectEnd&lt;/code&gt; &lt;/a&gt;）、DNSルックアップ（&lt;a href=&quot;../performanceresourcetiming/domainlookupstart&quot;&gt; &lt;code&gt;domainLookupStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/domainlookupend&quot;&gt; &lt;code&gt;domainLookupEnd&lt;/code&gt; &lt;/a&gt;）、TCPハンドシェーク（&lt;a href=&quot;../performanceresourcetiming/connectstart&quot;&gt; &lt;code&gt;connectStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/connectend&quot;&gt; &lt;code&gt;connectEnd&lt;/code&gt; &lt;/a&gt;）、及び応答（&lt;a href=&quot;../performanceresourcetiming/responsestart&quot;&gt; &lt;code&gt;responseStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt; &lt;code&gt;responseEnd&lt;/code&gt; &lt;/a&gt;） 。この例では、フェッチとリクエストの開始フェーズ（それぞれ&lt;a href=&quot;../performanceresourcetiming/fetchstart&quot;&gt; &lt;code&gt;fetchStart&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../performanceresourcetiming/requeststart&quot;&gt; &lt;code&gt;requestStart&lt;/code&gt; &lt;/a&gt;）の開始から応答が終了する（&lt;a href=&quot;../performanceresourcetiming/responseend&quot;&gt; &lt;code&gt;responseEnd&lt;/code&gt; &lt;/a&gt;）までの時間も計算します。）。このタイミングデータは、リソースの読み込みフェーズの詳細なプロファイルを提供します。このデータは、パフォーマンスのボトルネックを特定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="fe3d3e53544e9413c755229f7715f1249ca26a6f" translate="yes" xml:space="preserve">
          <source>The following example is a little more complex than the ones we've seen above. It draws 12 different arcs all with different angles and fills.</source>
          <target state="translated">次の例は、上で見たものよりも少し複雑です。これは12の異なる角度と塗りつぶしで12の異なる円弧を描いています。</target>
        </trans-unit>
        <trans-unit id="9091b5147a452e35edfa55027dfd27012dfc464a" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">次の例は、WebVR APIを使用して&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;ループの各フレームの単純な&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt;シーンのビューを更新する&lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt;デモからの抜粋です。</target>
        </trans-unit>
        <trans-unit id="8c9e5c16e4e1cba1dac8c0d2f23753d75b3c3ca7" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt; demo, which uses the WebVR API to update the view of a simple &lt;a href=&quot;canvasrenderingcontext2d&quot;&gt;&lt;code&gt;2D canvas&lt;/code&gt;&lt;/a&gt; scene on each frame of a &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; loop.</source>
          <target state="translated">次の例は、WebVR APIを使用して&lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;ループの各フレームの単純な&lt;a href=&quot;canvasrenderingcontext2d&quot;&gt; &lt;code&gt;2D canvas&lt;/code&gt; &lt;/a&gt;シーンのビューを更新する&lt;a href=&quot;http://mdn.github.io/webvr-tests/positionsensorvrdevice/&quot;&gt;positionsensorvrdevice&lt;/a&gt;デモからの抜粋です。</target>
        </trans-unit>
        <trans-unit id="a73ee493927b61af16297c354a50245955261d69" translate="yes" xml:space="preserve">
          <source>The following example is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt; demo (&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;see it live also&lt;/a&gt;). You can see that we use &lt;code&gt;attachShadow()&lt;/code&gt; in the middle of the code to create a shadow root, which we then attach our custom element's contents to.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/word-count-web-component&quot;&gt;word-count-web-component&lt;/a&gt;デモから取得したものです（&lt;a href=&quot;https://mdn.github.io/web-components-examples/word-count-web-component/&quot;&gt;実際にご覧ください&lt;/a&gt;）。コードの途中で &lt;code&gt;attachShadow()&lt;/code&gt; を使用してシャドウルートを作成し、カスタム要素のコンテンツをアタッチすることがわかります。</target>
        </trans-unit>
        <trans-unit id="4e9378cdd85dabef22c84dd593e8f474bb1100ef" translate="yes" xml:space="preserve">
          <source>The following example is taken from the Mozilla VR Team's &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; code &amp;mdash; to be precise, the &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js file&lt;/a&gt;. Early on in the code the &lt;a href=&quot;../hmdvrdevice/geteyeparameters&quot;&gt;&lt;code&gt;HMDVRDevice.getEyeParameters&lt;/code&gt;&lt;/a&gt; method is used to access information about each eye &amp;mdash; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/eyeTranslation&quot;&gt;&lt;code&gt;VREyeParameters.eyeTranslation&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;recommendedfieldofview&quot;&gt;&lt;code&gt;VREyeParameters.recommendedFieldOfView&lt;/code&gt;&lt;/a&gt; &amp;mdash; which are used for rendering calulations later on.</source>
          <target state="translated">次の例は、Mozilla VRチームの&lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt;コード（正確には&lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.jsファイル）&lt;/a&gt;からの抜粋です。コードの早い段階で、&lt;a href=&quot;../hmdvrdevice/geteyeparameters&quot;&gt; &lt;code&gt;HMDVRDevice.getEyeParameters&lt;/code&gt; &lt;/a&gt;メソッドを使用して、各目に関する情報（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VREyeParameters/eyeTranslation&quot;&gt; &lt;code&gt;VREyeParameters.eyeTranslation&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;recommendedfieldofview&quot;&gt; &lt;code&gt;VREyeParameters.recommendedFieldOfView&lt;/code&gt; )&lt;/a&gt;にアクセスします。これらは、後で計算をレンダリングするために使用されます。</target>
        </trans-unit>
        <trans-unit id="4c83038ff4deee70f3d0d107a275cd2c4ed87d96" translate="yes" xml:space="preserve">
          <source>The following example is taken from the Mozilla VR Team's &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt; code &amp;mdash; to be precise, the &lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.js file&lt;/a&gt;. Early on in the code the &lt;code&gt;getEyeParameters()&lt;/code&gt; method is used to access information about each eye, which is then used for rendering calulations later on.</source>
          <target state="translated">次の例は、Mozilla VRチームの&lt;a href=&quot;https://github.com/MozVR/vr-web-examples/tree/master/threejs-vr-boilerplate&quot;&gt;threejs-vr-boilerplate&lt;/a&gt;コード（正確には&lt;a href=&quot;https://github.com/MozVR/vr-web-examples/blob/master/threejs-vr-boilerplate/js/VREffect.js#L28-L29&quot;&gt;VREffect.jsファイル）&lt;/a&gt;からの抜粋です。コードの &lt;code&gt;getEyeParameters()&lt;/code&gt; メソッドを使用して、各目に関する情報にアクセスします。これは、後で計算をレンダリングするために使用されます。</target>
        </trans-unit>
        <trans-unit id="11ca9d29fc77585ce775ce9b31a46f2e7e1505ca" translate="yes" xml:space="preserve">
          <source>The following example logs the product name and serial number of paired devices to the console. For information on pairing devices, see &lt;a href=&quot;requestdevice&quot;&gt;&lt;code&gt;USB.requestDevice()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例では、ペアリングされたデバイスの製品名とシリアル番号をコンソールに記録します。デバイスのペアリングについては、&lt;a href=&quot;requestdevice&quot;&gt; &lt;code&gt;USB.requestDevice()&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4bcd07c1f5c495fd38e7674c48afc61f7ab14e11" translate="yes" xml:space="preserve">
          <source>The following example looks for one of two USB devices. Notice that two product IDs are specified. Both are passed to &lt;code&gt;requestDevice()&lt;/code&gt;. This triggers a user-agent flow that prompts the user to select a device for pairing. Only the selected device is passed to &lt;code&gt;then()&lt;/code&gt;.</source>
          <target state="translated">次の例では、2つのUSBデバイスの1つを探します。2つの製品IDが指定されていることに注意してください。どちらも &lt;code&gt;requestDevice()&lt;/code&gt; に渡されます。これにより、ユーザーエージェントフローがトリガーされ、ペアリングするデバイスを選択するようユーザーに求められます。選択したデバイスのみが &lt;code&gt;then()&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="9c03c947dc1246c1861de8c740f9704078b64672" translate="yes" xml:space="preserve">
          <source>The following example monitors the connection using the &lt;code&gt;change&lt;/code&gt; event and logs changes as they occur.</source>
          <target state="translated">次の例では、 &lt;code&gt;change&lt;/code&gt; イベントを使用して接続を監視し、変更が発生したときにログに記録します。</target>
        </trans-unit>
        <trans-unit id="d303269a86cd7e58b2c609ffa15d7d105cba440d" translate="yes" xml:space="preserve">
          <source>The following example positions a container &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 5 pixels from the top and 10 pixels from the left of the page.</source>
          <target state="translated">次の例では、コンテナ &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; をページの上から5ピクセル、左から10ピクセルに配置しています。</target>
        </trans-unit>
        <trans-unit id="bb2d51b94b9a60b51094f2475685d4009bca7e1d" translate="yes" xml:space="preserve">
          <source>The following example prints the &lt;a href=&quot;node/textcontent&quot;&gt;&lt;code&gt;textContent&lt;/code&gt;&lt;/a&gt; properties of each &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; tag in a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element named &lt;code&gt;&quot;box&quot;&lt;/code&gt;:</source>
          <target state="translated">次の例では、 &lt;code&gt;&quot;box&quot;&lt;/code&gt; という名前の &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 要素内の各 &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; タグの&lt;a href=&quot;node/textcontent&quot;&gt; &lt;code&gt;textContent&lt;/code&gt; &lt;/a&gt;プロパティを出力します。</target>
        </trans-unit>
        <trans-unit id="6115eab559d31910e7acfcf0b01f54a368b902fe" translate="yes" xml:space="preserve">
          <source>The following example provides a box where the lists of items and formats dropped on it are displayed.</source>
          <target state="translated">以下の例では、その上にドロップした項目やフォーマットのリストが表示されるボックスを用意しています。</target>
        </trans-unit>
        <trans-unit id="1dc60c447a843173e8c9bbcaf99edbaf2826f787" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The &lt;code&gt;readyState&lt;/code&gt; of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、別の要求内のオブジェクトストアに更新されたレコード・バックを置きます。2番目のリクエストの &lt;code&gt;readyState&lt;/code&gt; は、開発者コンソールに記録されます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="e0336a4eabdc583e95680a3d0f1c0e8d996a6622" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the 2nd request is logged to the developer console. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、別の要求内のオブジェクトストアに更新されたレコード・バックを置きます。 2番目のリクエストのソースは開発者コンソールに記録されます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="6ae97566e7a056d9130e6a429269fa84ca1510fc" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request. The source of the requests is logged to the developer console &amp;mdash; both originate from the same transaction. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、別の要求内のオブジェクトストアに更新されたレコード・バックを置きます。リクエストのソースは開発者コンソールに記録されます&amp;mdash;どちらも同じトランザクションから発生します。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="0bf0b7548845980c1d5dcad28742d81af7aedc0b" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. Also included at the bottom is an &lt;code&gt;onerror&lt;/code&gt; function that reports what the error was if the request fails. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、オブジェクトストアに更新されたレコード・バックを置きます。また、下部には、リクエストが失敗した場合のエラーを報告する &lt;code&gt;onerror&lt;/code&gt; 関数も含まれています。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="d07e5d312940b7b80d5322d83eef5ba6ff2866f3" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title, &lt;code&gt;onsuccess&lt;/code&gt; gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、所定の録画タイトルを要求し、 &lt;code&gt;onsuccess&lt;/code&gt; から関連するレコードを取得&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つの特性を更新し、オブジェクトストアに更新されたレコード・バックを置きます。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="850f99390f095f5e272ec1904dbe78d472bbe2fc" translate="yes" xml:space="preserve">
          <source>The following example requests a given record title; when that request is successful the &lt;code&gt;onsuccess&lt;/code&gt; function gets the associated record from the &lt;a href=&quot;../idbobjectstore&quot;&gt;&lt;code&gt;IDBObjectStore&lt;/code&gt;&lt;/a&gt; (made available as &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt;), updates one property of the record, and then puts the updated record back into the object store in another request with &lt;code&gt;put()&lt;/code&gt;. For a full working example, see our &lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-do Notifications&lt;/a&gt; app (&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;view example live&lt;/a&gt;.)</source>
          <target state="translated">次の例では、特定のレコードタイトルを要求しています。その要求が成功したとき &lt;code&gt;onsuccess&lt;/code&gt; 機能から、関連するレコードを取得する&lt;a href=&quot;../idbobjectstore&quot;&gt; &lt;code&gt;IDBObjectStore&lt;/code&gt; &lt;/a&gt;（として利用可能 &lt;code&gt;objectStoreTitleRequest.result&lt;/code&gt; ）、レコードの1つのプロパティを更新し、その後で別の要求内のオブジェクトストアに更新されたレコードの背中を置く &lt;code&gt;put()&lt;/code&gt; 。完全に機能する例については、&lt;a href=&quot;https://github.com/mdn/to-do-notifications/&quot;&gt;To-Do通知&lt;/a&gt;アプリ（&lt;a href=&quot;http://mdn.github.io/to-do-notifications/&quot;&gt;ライブの例を表示&lt;/a&gt;）を参照してください。</target>
        </trans-unit>
        <trans-unit id="990f96c3487ac24e580f88dcf924b2bb93b884c0" translate="yes" xml:space="preserve">
          <source>The following example resets the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt;&lt;code&gt;display&lt;/code&gt;&lt;/a&gt; property to its defaults.</source>
          <target state="translated">次の例では、CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/display&quot;&gt; &lt;code&gt;display&lt;/code&gt; &lt;/a&gt;プロパティをデフォルトにリセットします。</target>
        </trans-unit>
        <trans-unit id="a4c1a57c4ca6684fa2f2d56c1548fee41c8ad915" translate="yes" xml:space="preserve">
          <source>The following example returns the data associated with the best-supported format:</source>
          <target state="translated">次の例は、最もサポートされている形式に関連付けられたデータを返します。</target>
        </trans-unit>
        <trans-unit id="2c576708ef5aaa02518bb5f857c48818940df581" translate="yes" xml:space="preserve">
          <source>The following example runs through the attribute nodes for the element in the document with id &quot;paragraph&quot;, and prints each attribute's value.</source>
          <target state="translated">以下の例では、id &quot;paragraph&quot; を持つ文書内の要素の属性ノードを実行し、各属性の値を表示しています。</target>
        </trans-unit>
        <trans-unit id="64636f22e839bb76e65af4be7439cec7abf92938" translate="yes" xml:space="preserve">
          <source>The following example sends payment information to a secure server using the &lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt;. It calls &lt;code&gt;complete()&lt;/code&gt; with an answer appropriate to the status in the response.</source>
          <target state="translated">次の例では、&lt;a href=&quot;../fetch_api&quot;&gt;Fetch API&lt;/a&gt;を使用して支払い情報を安全なサーバーに送信します。応答のステータスに適した応答で &lt;code&gt;complete()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="53abf31adeec8a09dcd20df96daf7c3014d8ae99" translate="yes" xml:space="preserve">
          <source>The following example sets a callback function on the &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; property.</source>
          <target state="translated">次の例では、 &lt;code&gt;onresourcetimingbufferfull&lt;/code&gt; プロパティにコールバック関数を設定します。</target>
        </trans-unit>
        <trans-unit id="d3f7dbc2eb06624059a847a0d173430eea3c2d5d" translate="yes" xml:space="preserve">
          <source>The following example sets up a timeout to clear the payment request that might have been abandoned or neglected.</source>
          <target state="translated">以下の例では、放棄または放置されている可能性のある支払い要求をクリアするためのタイムアウトを設定しています。</target>
        </trans-unit>
        <trans-unit id="177b489e63fd126ecc71555c3891a912111adbae" translate="yes" xml:space="preserve">
          <source>The following example sets up event handlers for pausing and playing:</source>
          <target state="translated">以下の例では、一時停止と再生のイベントハンドラを設定します。</target>
        </trans-unit>
        <trans-unit id="4c5c78a1b0be981f77893b3d54c69156c847461d" translate="yes" xml:space="preserve">
          <source>The following example sets up event handlers, for pausing and playing:</source>
          <target state="translated">以下の例では、一時停止と再生のためのイベントハンドラを設定します。</target>
        </trans-unit>
        <trans-unit id="46edbb0e256976b59fccba6f12043d13b9f70932" translate="yes" xml:space="preserve">
          <source>The following example sets up two simple buttons in a web page and hooks them to the &lt;code&gt;setTimeout()&lt;/code&gt; and &lt;code&gt;clearTimeout()&lt;/code&gt; routines. Pressing the first button will set a timeout which calls an alert dialog after two seconds and stores the timeout id for use by &lt;code&gt;clearTimeout()&lt;/code&gt;. You may optionally cancel this timeout by pressing on the second button.</source>
          <target state="translated">次の例では、Webページに2つのシンプルなボタンを設定し、それらを &lt;code&gt;setTimeout()&lt;/code&gt; および &lt;code&gt;clearTimeout()&lt;/code&gt; ルーチンにフックします。最初のボタンを押すとタイムアウトが設定され、2秒後にアラートダイアログが呼び出され、 &lt;code&gt;clearTimeout()&lt;/code&gt; で使用するタイムアウトIDが保存されます。オプションで、2番目のボタンを押してこのタイムアウトをキャンセルできます。</target>
        </trans-unit>
        <trans-unit id="68d80a26b4b4a08ede321cf5bbcc2808f91817ac" translate="yes" xml:space="preserve">
          <source>The following example shows &quot;id&quot; in an alert dialog.</source>
          <target state="translated">次の例では、アラートダイアログで「id」を表示しています。</target>
        </trans-unit>
        <trans-unit id="ed8d0f3f3df4dbbdb0877d093b925f1c6421132a" translate="yes" xml:space="preserve">
          <source>The following example shows &lt;code&gt;claimInterface()&lt;/code&gt; in the context of connecting to a USB device.</source>
          <target state="translated">次の例は、USBデバイスに接続する場合の &lt;code&gt;claimInterface()&lt;/code&gt; を示しています。</target>
        </trans-unit>
        <trans-unit id="855ee09d899529aa4e90342910c83a3624fafa6f" translate="yes" xml:space="preserve">
          <source>The following example shows a drop handler getting the source element's id from the drag data and then using the id to move the source element to the drop element.</source>
          <target state="translated">次の例は、ドロップハンドラがドラッグデータからソース要素のidを取得し、そのidを使ってソース要素をドロップ要素に移動させています。</target>
        </trans-unit>
        <trans-unit id="d0251c10297ab70e23d75732aa24809f1b880b02" translate="yes" xml:space="preserve">
          <source>The following example shows a pointer capture being released (when a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; event occurs. The browser does this automatically when a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">次の例は、ポインタキャプチャが解放されることを示しています（ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; イベントが発生したとき。ブラウザは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; または &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointercancel&quot;&gt;pointercancel&lt;/a&gt;&lt;/code&gt; イベントが発生したときにこれを自動的に行います。</target>
        </trans-unit>
        <trans-unit id="ba3a2e0ca4ef19be9eb47ce63292c20cb6416871" translate="yes" xml:space="preserve">
          <source>The following example shows a possible use of the &lt;code&gt;size&lt;/code&gt; property:</source>
          <target state="translated">次の例は、 &lt;code&gt;size&lt;/code&gt; プロパティの可能な使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="705a4a5a7a7b30bdae2c02e4e01f6b9d2e1058c9" translate="yes" xml:space="preserve">
          <source>The following example shows a sample definition of the first parameter of the &lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest()&lt;/code&gt;&lt;/a&gt; constructor, the &lt;code&gt;data&lt;/code&gt; property of which contains &lt;code&gt;supportedNetworks&lt;/code&gt; and &lt;code&gt;supportedTypes&lt;/code&gt; properties.</source>
          <target state="translated">次の例が示すの最初のパラメーターのサンプル定義&lt;a href=&quot;../paymentrequest/paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest()&lt;/code&gt; &lt;/a&gt;コンストラクタ、 &lt;code&gt;data&lt;/code&gt; 含まれたプロパティ &lt;code&gt;supportedNetworks&lt;/code&gt; と &lt;code&gt;supportedTypes&lt;/code&gt; の特性を。</target>
        </trans-unit>
        <trans-unit id="5f21bef05c016cada064653ab1afeee017aa62b2" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;a href=&quot;htmldialogelement/showmodal&quot;&gt;&lt;code&gt;HTMLDialogElement.showModal()&lt;/code&gt;&lt;/a&gt; function. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;htmldialogelement/close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; function), or submit the form via the submit button.</source>
          <target state="translated">次の例は、クリックすると&lt;a href=&quot;htmldialogelement/showmodal&quot;&gt; &lt;code&gt;HTMLDialogElement.showModal()&lt;/code&gt; &lt;/a&gt;関数を介してフォームを含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt;を開く簡単なボタンを示しています。そこから[ &lt;em&gt;キャンセル&lt;/em&gt; ]ボタンをクリックしてダイアログを閉じる（&lt;a href=&quot;htmldialogelement/close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt;関数を使用）か、送信ボタンを使用してフォームを送信します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7eec4b00bae065e274bf4292ff9be05ad0c0d68" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;show()&lt;/code&gt; method. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; method), or submit the form via the submit button.</source>
          <target state="translated">次の例は、クリックすると &lt;code&gt;show()&lt;/code&gt; メソッドを介してフォームを含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt;を開く簡単なボタンを示しています。そこから[ &lt;em&gt;キャンセル&lt;/em&gt; ]ボタンをクリックしてダイアログを閉じる（&lt;a href=&quot;close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt;メソッドを使用）か、送信ボタンを使用してフォームを送信します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dc1e841e69d6dcaef8b6a67cf0b94228e3d3d5ea" translate="yes" xml:space="preserve">
          <source>The following example shows a simple button that, when clicked, opens a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt;&lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt;&lt;/a&gt; containing a form via the &lt;code&gt;showModal()&lt;/code&gt; method. From there you can click the &lt;em&gt;Cancel&lt;/em&gt; button to close the dialog (via the &lt;a href=&quot;close&quot;&gt;&lt;code&gt;HTMLDialogElement.close()&lt;/code&gt;&lt;/a&gt; method), or submit the form via the submit button.</source>
          <target state="translated">次の例は、クリックすると &lt;code&gt;showModal()&lt;/code&gt; メソッドを介してフォームを含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog&quot;&gt; &lt;code&gt;&amp;lt;dialog&amp;gt;&lt;/code&gt; &lt;/a&gt;を開く簡単なボタンを示しています。そこから[ &lt;em&gt;キャンセル&lt;/em&gt; ]ボタンをクリックしてダイアログを閉じる（&lt;a href=&quot;close&quot;&gt; &lt;code&gt;HTMLDialogElement.close()&lt;/code&gt; &lt;/a&gt;メソッドを使用）か、送信ボタンを使用してフォームを送信します。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="1dfb22cef2e2a04dc51023e4d17c1de72e8f465b" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code pattern that submits data to a server by using the &lt;code&gt;sendBeacon()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;sendBeacon()&lt;/code&gt; メソッドを使用してサーバーにデータを送信する理論的な分析コードパターンを示しています。</target>
        </trans-unit>
        <trans-unit id="89f75f9fb0dc0323340f2fcc02eca76baa2a4696" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code pattern that submits data to a server using the &lt;code&gt;sendBeacon()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;sendBeacon()&lt;/code&gt; メソッドを使用してサーバーにデータを送信する理論的な分析コードパターンを示しています。</target>
        </trans-unit>
        <trans-unit id="d0f36ea4bdd89f07960216ebd320f28329b5a515" translate="yes" xml:space="preserve">
          <source>The following example shows a theoretical analytics code that attempts to submit data to a server by using a synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; in an unload handler. This results in the unload of the page to be delayed.</source>
          <target state="translated">次の例は、アンロードハンドラーで同期 &lt;code&gt;XMLHttpRequest&lt;/code&gt; を使用してサーバーにデータを送信しようとする理論的な分析コードを示しています。これにより、ページのアンロードが遅延します。</target>
        </trans-unit>
        <trans-unit id="87f8c6dcf867bf56ad304750f42e1a5447693d96" translate="yes" xml:space="preserve">
          <source>The following example shows an existing chat window or creates a new one when the user clicks a notification.</source>
          <target state="translated">次の例では、ユーザーが通知をクリックしたときに既存のチャットウィンドウを表示したり、新しいチャットウィンドウを作成したりしています。</target>
        </trans-unit>
        <trans-unit id="5a87c35f32473ca8c38be4c14c9fc4c23d2ad805" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of a &lt;code&gt;ScriptProcessorNode&lt;/code&gt; to take a track loaded via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt;, process it, adding a bit of white noise to each audio sample of the input track (buffer) and play it through the &lt;a href=&quot;../audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;. For each channel and each sample frame, the &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; function takes the associated &lt;code&gt;audioProcessingEvent&lt;/code&gt; and uses it to loop through each channel of the input buffer, and each sample in each channel, and add a small amount of white noise, before setting that result to be the output sample in each case.</source>
          <target state="translated">次の例は、 &lt;code&gt;ScriptProcessorNode&lt;/code&gt; の基本的な使用方法を示しています&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt;を介してロードされたトラックを取得し、処理して、入力トラック（バッファ）の各オーディオサンプルにホワイトノイズを少し追加し、&lt;a href=&quot;../audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; で再生し&lt;/a&gt;ます。各チャネルおよび各サンプルフレームについて、 &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; 関数は関連付けられた &lt;code&gt;audioProcessingEvent&lt;/code&gt; を取得し、それを使用して入力バッファの各チャネルと各チャネルの各サンプルをループし、少量のホワイトノイズを追加してから、その結果を設定します。それぞれの場合の出力サンプルになります。</target>
        </trans-unit>
        <trans-unit id="cf9a772fd3f90faf43aa600df6c164eeba40d69e" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of a &lt;code&gt;ScriptProcessorNode&lt;/code&gt; to take a track loaded via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt;&lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt;&lt;/a&gt;, process it, adding a bit of white noise to each audio sample of the input track (buffer) and play it through the &lt;a href=&quot;audiodestinationnode&quot;&gt;&lt;code&gt;AudioDestinationNode&lt;/code&gt;&lt;/a&gt;. For each channel and each sample frame, the &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; function takes the associated &lt;code&gt;audioProcessingEvent&lt;/code&gt; and uses it to loop through each channel of the input buffer, and each sample in each channel, and add a small amount of white noise, before setting that result to be the output sample in each case.</source>
          <target state="translated">次の例は、 &lt;code&gt;ScriptProcessorNode&lt;/code&gt; の基本的な使用方法を示しています&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/decodeAudioData&quot;&gt; &lt;code&gt;AudioContext.decodeAudioData()&lt;/code&gt; &lt;/a&gt;を介してロードされたトラックを取得し、処理して、入力トラック（バッファ）の各オーディオサンプルにホワイトノイズを少し追加し、&lt;a href=&quot;audiodestinationnode&quot;&gt; &lt;code&gt;AudioDestinationNode&lt;/code&gt; で再生し&lt;/a&gt;ます。各チャネルおよび各サンプルフレームについて、 &lt;code&gt;scriptNode.onaudioprocess&lt;/code&gt; 関数は関連付けられた &lt;code&gt;audioProcessingEvent&lt;/code&gt; を取得し、それを使用して入力バッファの各チャネルと各チャネルの各サンプルをループし、少量のホワイトノイズを追加してから、その結果を設定します。それぞれの場合の出力サンプルになります。</target>
        </trans-unit>
        <trans-unit id="42ab16254b249cb27fc9204b2d611a2328fb9237" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to connect a &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt; to an &lt;code&gt;AnalyserNode&lt;/code&gt;. While the audio is playing, we collect the frequency data repeatedly with &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; and draw a &quot;winamp bargraph style&quot; to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">次の例は、&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;をAnalyserNodeに接続するための&lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt; &lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt; &lt;/a&gt;基本的な使用方法を示してい &lt;code&gt;AnalyserNode&lt;/code&gt; 。オーディオの再生中、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;を使用して周波数データを繰り返し収集し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt; winvas bargraph style &quot;を&amp;lt;canvas&amp;gt;要素に描画します。</target>
        </trans-unit>
        <trans-unit id="d2f7e3d29f51cfc546fa304e3493e74139e45a64" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;GainNode&lt;/code&gt;, which is then used to mute and unmute the audio when a Mute button is clicked by changing the &lt;code&gt;gain&lt;/code&gt; property value.</source>
          <target state="translated">次の例は、&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示し、GainNodeを作成し &lt;code&gt;GainNode&lt;/code&gt; 。これを使用して、 &lt;code&gt;gain&lt;/code&gt; プロパティ値を変更することにより[ミュート]ボタンがクリックされたときに、オーディオをミュートおよびミュート解除します。</target>
        </trans-unit>
        <trans-unit id="d6e8c9153bd9934791313aa228815e4a1b8ef407" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示し、AnalyserNodeを作成して &lt;code&gt;AnalyserNode&lt;/code&gt; 、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; で&lt;/a&gt;周波数データを繰り返し収集し、現在のオーディオ入力の「winamp bargraphスタイル」出力を描画します。より完全な適用例/情報については、&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="c2ceb5663ea45fa8eb7a948ffd2a87e564f8a58c" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect frequency data repeatedly and draw a &quot;winamp bargraph style&quot; output of the current audio input. For more examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示し、AnalyserNodeを作成して &lt;code&gt;AnalyserNode&lt;/code&gt; 、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; で&lt;/a&gt;周波数データを繰り返し収集し、現在のオーディオ入力の「winamp bargraphスタイル」出力を描画します。その他の例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="60a89ee025ef0ca5ff74a457b786f45f59cfe768" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例が示す基本的な使用方法&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;作成する &lt;code&gt;AnalyserNode&lt;/code&gt; を、その後、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;を繰り返し収集時間領域のデータにし、現在のオーディオ入力の「オシロスコープスタイル」出力を描きます。より完全な適用例/情報については、&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="b99b3956bcc6ea6b5e5e90476bd61de62dbf1a15" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic-float-data/&quot;&gt;Voice-change-O-matic-float-data&lt;/a&gt; demo (see the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic-float-data&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">次の例が示す基本的な使用方法&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;作成する &lt;code&gt;AnalyserNode&lt;/code&gt; を、その後、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;を繰り返し収集時間領域のデータにし、現在のオーディオ入力の「オシロスコープスタイル」出力を描きます。より完全な適用例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic-float-data/&quot;&gt;Voice-change-O-matic-float-data&lt;/a&gt;デモを確認してください（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic-float-data&quot;&gt;ソースコード&lt;/a&gt;も参照してください）。</target>
        </trans-unit>
        <trans-unit id="6db4b9d609d45f2f06fc4a8f52a8bbca8601f9a4" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例が示す基本的な使用方法&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;作成する &lt;code&gt;AnalyserNode&lt;/code&gt; を、その後、&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;を繰り返し収集時間領域のデータにし、現在のオーディオ入力の「オシロスコープスタイル」出力を描きます。より完全な適用例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="3ebd5fd192d61507741492c46c698d926380166c" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For an applied example, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、オシレーターノードを作成するための&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用方法を示しています。適用例については、&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;確認してください（関連コード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;についてはapp.js&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="5f8b77398e7663408d24572e6b6dd698160eb069" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、オシレーターノードを作成するための&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用方法を示しています。適用例/情報については、&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;確認してください（関連コード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;についてはapp.js&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="c96539704fe1ed36695d989f58aad156fb66c366" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create a &lt;code&gt;GainNode&lt;/code&gt;, which is then used to mute and unmute the audio when a Mute button is clicked by changing the &lt;code&gt;gain&lt;/code&gt; property value.</source>
          <target state="translated">次の例は、&lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用法を示し、GainNodeを作成し &lt;code&gt;GainNode&lt;/code&gt; 。これを使用して、 &lt;code&gt;gain&lt;/code&gt; プロパティ値を変更することにより[ミュート]ボタンがクリックされたときに、オーディオをミュートおよびミュート解除します。</target>
        </trans-unit>
        <trans-unit id="a9747c9f8c3bb979569330ffa761f53d29558850" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an &lt;code&gt;AnalyserNode&lt;/code&gt;, then &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例が示す基本的な使用方法&lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;作成する &lt;code&gt;AnalyserNode&lt;/code&gt; を、その後、&lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame&lt;/code&gt; の&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;を繰り返し収集時間領域のデータにし、現在のオーディオ入力の「オシロスコープスタイル」出力を描きます。より完全な適用例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連するコードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="67ce9e5ccb7d7881b13a2c1d3cbd89dbb23060f9" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an &lt;a href=&quot;audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; to create an oscillator node and to start playing a tone on it. For an applied example, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、オシレーターノードを作成し、そのノードでトーンの再生を開始するための&lt;a href=&quot;audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; の&lt;/a&gt;基本的な使用方法を示しています。適用例については、&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモを&lt;/a&gt;確認してください（関連コード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;についてはapp.js&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="c10035dff9da9a9cf27f0e78f7c0f415f921b864" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a Biquad filter node. For a complete working example, check out our &lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt; demo (look at the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">次の例は、Bioquadフィルターノードを作成するためのAudioContextの基本的な使用方法を示しています。完全に機能する例については、&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt;デモを確認してください（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;ソースコード&lt;/a&gt;もご覧ください）。</target>
        </trans-unit>
        <trans-unit id="5e790c8caa2130c5c5f71fc4cdf41b47706aee96" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a Biquad filter node. For a complete working example, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt; demo (look at the &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;source code&lt;/a&gt; too).</source>
          <target state="translated">次の例は、Bioquadフィルターノードを作成するためのAudioContextの基本的な使用方法を示しています。完全に機能する例については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;voice-change-o-matic&lt;/a&gt;デモを確認してください（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic&quot;&gt;ソースコード&lt;/a&gt;もご覧ください）。</target>
        </trans-unit>
        <trans-unit id="d419e6879edf66df35afcb16bc5b46def800d8fc" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a convolver node.</source>
          <target state="translated">以下の例では、AudioContext を使って convolver ノードを作成しています。</target>
        </trans-unit>
        <trans-unit id="ec8b1964f1b8449c90dea469a4e77f282d04d4d9" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a convolver node. The basic premise is that you create an AudioBuffer containing a sound sample to be used as an ambience to shape the convolution (called the &lt;em&gt;impulse response&lt;/em&gt;,) and apply that to the convolver. The example below uses a short sample of a concert hall crowd, so the reverb effect applied is really deep and echoey.</source>
          <target state="translated">次の例は、Convolverノードを作成するためのAudioContextの基本的な使用方法を示しています。基本的な前提は、コンボリューション（&lt;em&gt;インパルス応答&lt;/em&gt;と呼ばれる）を形成するためのアンビエンスとして使用されるサウンドサンプルを含むAudioBufferを作成し、それをコンボルバーに適用することです。以下の例では、コンサートホールの観客の短いサンプルを使用しているため、適用されるリバーブエフェクトは非常に深く、反響しています。</target>
        </trans-unit>
        <trans-unit id="d9c348a7a6d70c6ff50f28ddacbe7e644dc9ef17" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create a wave shaper node. For applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt; demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例では、AudioContextの基本的な使用法を示し、波形整形ノードを作成しています。応用例/詳細については、私たちのチェックアウト&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;ボイスチェンジ-O-Maticの&lt;/a&gt;&lt;a href=&quot;http://mdn.github.io/voice-change-o-matic/&quot;&gt;デモを&lt;/a&gt;（&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js&quot;&gt;app.js参照&lt;/a&gt;関連するコードのために）。</target>
        </trans-unit>
        <trans-unit id="ce1cd519e0fac827e01535358e2b808f81b03596" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an Analyser node, then use requestAnimationFrame() to collect time domain data repeatedly and draw an &quot;oscilloscope style&quot; output of the current audio input. For more complete applied examples/information, check out our &lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt; demo (see &lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.js lines 128&amp;ndash;205&lt;/a&gt; for relevant code).</source>
          <target state="translated">次の例は、AudioContextの基本的な使用法を示し、Analyzerノードを作成し、次にrequestAnimationFrame（）を使用して時間領域データを繰り返し収集し、現在のオーディオ入力の「オシロスコープスタイル」の出力を描画します。より完全な適用例/情報については、&lt;a href=&quot;https://mdn.github.io/voice-change-o-matic/&quot;&gt;Voice-change-O-matic&lt;/a&gt;デモを確認してください（関連コードについては、&lt;a href=&quot;https://github.com/mdn/voice-change-o-matic/blob/gh-pages/scripts/app.js#L128-L205&quot;&gt;app.jsの128〜205行目&lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="544a4cb84984c5d452e79acde5d675be4fe422c5" translate="yes" xml:space="preserve">
          <source>The following example shows basic usage of an AudioContext to create an oscillator node. For applied examples/information, check out our &lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Theremin demo&lt;/a&gt; (&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;see app.js&lt;/a&gt; for relevant code); also see our &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; page for more information.</source>
          <target state="translated">次の例は、オシレーターノードを作成するためのAudioContextの基本的な使用方法を示しています。適用例/情報については、&lt;a href=&quot;http://mdn.github.io/violent-theremin/&quot;&gt;Violent Thereminデモ&lt;/a&gt;（関連コード&lt;a href=&quot;https://github.com/mdn/violent-theremin/blob/gh-pages/scripts/app.js&quot;&gt;についてはapp.js&lt;/a&gt;を参照）を確認してください。詳細については、&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;ページもご覧ください。</target>
        </trans-unit>
        <trans-unit id="6518b2d0b60eee0f55b63cdd4c525befb50caaf1" translate="yes" xml:space="preserve">
          <source>The following example shows both uses of the &lt;code&gt;clearMarks()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;clearMarks()&lt;/code&gt; メソッドの両方の使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="767065d5ac6c188eab3c99130b840193a899a63d" translate="yes" xml:space="preserve">
          <source>The following example shows both uses of the &lt;code&gt;clearMeasures()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;clearMeasures()&lt;/code&gt; メソッドの両方の使用法を示しています。</target>
        </trans-unit>
        <trans-unit id="201d597b58c76c0725b95a0987335fa0f8db3fb1" translate="yes" xml:space="preserve">
          <source>The following example shows feature detection for the Media Session API. It then instantiates a metadata object for the session, and adds event handlers for the user control actions:</source>
          <target state="translated">次の例は、Media Session API の機能検出を示しています。次に、セッション用のメタデータ・オブジェクトをインスタンス化し、ユーザー・コントロール・アクション用のイベント・ハンドラを追加します。</target>
        </trans-unit>
        <trans-unit id="0ac8600345a07c8b847e3a0f363d38d6b1c8692e" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;mark()&lt;/code&gt; is used to create an application-defined &lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;peformance entry&lt;/code&gt;&lt;/a&gt; in the browser's performance entry buffer.</source>
          <target state="translated">次の例は、どのように &lt;code&gt;mark()&lt;/code&gt; を行うかを示しています。アプリケーション定義を作成するために使用される&lt;a href=&quot;../performanceentry&quot;&gt; &lt;code&gt;peformance entry&lt;/code&gt; &lt;/a&gt;ブラウザのパフォーマンス入力バッファです。</target>
        </trans-unit>
        <trans-unit id="3d9634aea270d1ee77918f9ec397709546f2e081" translate="yes" xml:space="preserve">
          <source>The following example shows how &lt;code&gt;measure()&lt;/code&gt; is used to create a new &lt;em&gt;measure&lt;/em&gt;&lt;a href=&quot;../performanceentry&quot;&gt;&lt;code&gt;performance entry&lt;/code&gt;&lt;/a&gt; in the browser's performance entry buffer.</source>
          <target state="translated">次の例は、 &lt;code&gt;measure()&lt;/code&gt; を使用して新しい&lt;em&gt;メジャー&lt;/em&gt;を作成する方法を示しています。&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;../performanceentry&quot;&gt; &lt;code&gt;performance entry&lt;/code&gt; &lt;/a&gt;、ブラウザのパフォーマンスエントリバッファにパフォーマンスエントリ。</target>
        </trans-unit>
        <trans-unit id="e1b60b080c32c75c7a6f4eb54f545aab50566e44" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a &lt;a href=&quot;../urlsearchparams&quot;&gt;&lt;code&gt;URLSearchParams&lt;/code&gt;&lt;/a&gt; object from a URL string.</source>
          <target state="translated">次の例は、 &lt;a href=&quot;../urlsearchparams&quot;&gt; &lt;code&gt;URLSearchParams&lt;/code&gt; &lt;/a&gt;、URL文字列から URLSearchParamsオブジェクトています。</target>
        </trans-unit>
        <trans-unit id="9a14d8066371c9b7c2ac9ca18d0e40d2d88b2902" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an area for receiving dropped files:</source>
          <target state="translated">以下の例では、ドロップしたファイルを受信するための領域を作成します。</target>
        </trans-unit>
        <trans-unit id="8bc204ff21a909d29114194801ae6e06760cad3c" translate="yes" xml:space="preserve">
          <source>The following example shows how to register two observers: the first one registers for several event types and the second observer only registers for one event type.</source>
          <target state="translated">次の例は、2つのオブザーバを登録する方法を示しています:最初のオブザーバは複数のイベントタイプを登録し、2番目のオブザーバは1つのイベントタイプのみを登録します。</target>
        </trans-unit>
        <trans-unit id="e1196fd43be06d94c1ba87b6a6013b1837cb0d45" translate="yes" xml:space="preserve">
          <source>The following example shows how to test for and clear a &lt;code&gt;'stall'&lt;/code&gt; condition in the result of a data transfer.</source>
          <target state="translated">次の例は、データ転送の結果の &lt;code&gt;'stall'&lt;/code&gt; 状態をテストしてクリアする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f9f91198697099e264c7db491f37b9ff589e2137" translate="yes" xml:space="preserve">
          <source>The following example shows how to update the payment sheet as it's being presented to the end-user.</source>
          <target state="translated">次の例は、エンドユーザーに提示されている支払いシートを更新する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2fac85cabdd57f827bd41b560875a5da02180055" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;finish()&lt;/code&gt; method and catch an &lt;code&gt;InvalidState&lt;/code&gt; error.</source>
          <target state="translated">次の例は、 &lt;code&gt;finish()&lt;/code&gt; の使用方法を示しています。メソッド &lt;code&gt;InvalidState&lt;/code&gt; エラーをキャッチする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="9707b001d18380a2a47667559b4f827cc506834d" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;code&gt;mode&lt;/code&gt; option for readers and writers.</source>
          <target state="translated">次の例は、 &lt;code&gt;mode&lt;/code&gt; 、リーダーとライターのモードオプションのます。</target>
        </trans-unit>
        <trans-unit id="24382fee2acb14c7acd876c809360a40dcb6cd0d" translate="yes" xml:space="preserve">
          <source>The following example shows how to use this property.</source>
          <target state="translated">以下の例では、このプロパティの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="f6500a051169147e204ed47e488ed0becdda17cc" translate="yes" xml:space="preserve">
          <source>The following example shows how you could separate a stereo track (say, a piece of music), and process the left and right channel differently. To use them, you need to use the second and third parameters of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt;&lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt;&lt;/a&gt; method, which allow you to specify both the index of the channel to connect from and the index of the channel to connect to.</source>
          <target state="translated">次の例は、ステレオトラック（音楽など）を分離し、左右のチャネルを別々に処理する方法を示しています。それらを使用するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt; &lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt; の&lt;/a&gt; 2番目と3番目のパラメーターを使用する必要があります。メソッド。これにより、接続するチャネルのインデックスと接続するチャネルのインデックスの両方を指定できます。</target>
        </trans-unit>
        <trans-unit id="673d126c604f92225bb72fa3f2e312150b77f3a6" translate="yes" xml:space="preserve">
          <source>The following example shows minimal functionality and focuses instead on showing the complete context of instantiating a &lt;code&gt;PaymentRequest&lt;/code&gt; object.</source>
          <target state="translated">次の例は、最小限の機能を示し、代わりに、インスタンス化の完全なコンテキストを示すことに焦点を当てています &lt;code&gt;PaymentRequest&lt;/code&gt; オブジェクトます。</target>
        </trans-unit>
        <trans-unit id="f2f0a117106320051ec8f4c04032a855363c87e7" translate="yes" xml:space="preserve">
          <source>The following example shows pointer capture being set on an element.</source>
          <target state="translated">次の例では、要素にポインタキャプチャが設定されていることを示しています。</target>
        </trans-unit>
        <trans-unit id="11a920ce7314e8f5f07f05319ec174856a969530" translate="yes" xml:space="preserve">
          <source>The following example shows the basic use of the &lt;code&gt;request()&lt;/code&gt; method with an asynchronous function as the callback. Once the callback is invoked, no other running code on this orign can hold `'my_resource'` until the callback returns.</source>
          <target state="translated">次の例は、 &lt;code&gt;request()&lt;/code&gt; 、コールバックとして非同期関数を request（）メソッド方法を示しています。コールバックが呼び出されると、このorignの他の実行中のコードは、コールバックが戻るまで `'my_resource'`を保持できません。</target>
        </trans-unit>
        <trans-unit id="9778f1dbf547fda12a38deba634bb5652a303a82" translate="yes" xml:space="preserve">
          <source>The following example shows the creation of a &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">次の例は、カスタムシンクとAPI提供のキューイング戦略を使用した &lt;code&gt;WritableStream&lt;/code&gt; の作成を示しています。次に、 &lt;code&gt;sendMessage()&lt;/code&gt; という関数を呼び出し、新しく作成されたストリームと文字列を渡します。この関数内では、&lt;a href=&quot;../writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返すストリームの &lt;code&gt;getWriter()&lt;/code&gt; メソッドを呼び出します。 &lt;code&gt;forEach()&lt;/code&gt; 呼び出しは、ストリームに文字列の各チャンクを書き込むために使用されます。最後に、 &lt;code&gt;write()&lt;/code&gt; および &lt;code&gt;close()&lt;/code&gt; は、チャンクおよびストリームの成功または失敗を処理するために処理されるプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="c13aaf1ca7614e8c48feb2ed74c903915d7d1794" translate="yes" xml:space="preserve">
          <source>The following example shows the creation of a &lt;code&gt;WritableStream&lt;/code&gt; with a custom sink and an API-supplied queueing strategy. It then calls a function called &lt;code&gt;sendMessage()&lt;/code&gt;, passing the newly created stream and a string. Inside this function it calls the stream's &lt;code&gt;getWriter()&lt;/code&gt; method, which returns an instance of &lt;a href=&quot;writablestreamdefaultwriter&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;forEach()&lt;/code&gt; call is used to write each chunk of the string to the stream. Finally, &lt;code&gt;write()&lt;/code&gt; and &lt;code&gt;close()&lt;/code&gt; return promises that are processed to deal with success or failure of chunks and streams.</source>
          <target state="translated">次の例は、カスタムシンクとAPI提供のキューイング戦略を使用した &lt;code&gt;WritableStream&lt;/code&gt; の作成を示しています。次に、 &lt;code&gt;sendMessage()&lt;/code&gt; という関数を呼び出し、新しく作成されたストリームと文字列を渡します。この関数内では、&lt;a href=&quot;writablestreamdefaultwriter&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter&lt;/code&gt; の&lt;/a&gt;インスタンスを返すストリームの &lt;code&gt;getWriter()&lt;/code&gt; メソッドを呼び出します。 &lt;code&gt;forEach()&lt;/code&gt; 呼び出しは、ストリームに文字列の各チャンクを書き込むために使用されます。最後に、 &lt;code&gt;write()&lt;/code&gt; および &lt;code&gt;close()&lt;/code&gt; は、チャンクおよびストリームの成功または失敗を処理するために処理されるプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="7b0fb33f6195c46408861bb4574ab2e64295f35d" translate="yes" xml:space="preserve">
          <source>The following example shows the implementation of a fetch event that uses a preloaded response.</source>
          <target state="translated">以下の例は、プリロードされたレスポンスを使用するフェッチイベントの実装を示しています。</target>
        </trans-unit>
        <trans-unit id="3f3e205fb1239ca5373b0433f4a24433b6e076d8" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;duration&lt;/code&gt; property.</source>
          <target state="translated">次の例は、 &lt;code&gt;duration&lt;/code&gt; プロパティの使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3c712f8b9dace25890e3b31e9196a67834497383" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;entryType&lt;/code&gt; property.</source>
          <target state="translated">次の例は、 &lt;code&gt;entryType&lt;/code&gt; の使用方法を示しています。プロパティのます。</target>
        </trans-unit>
        <trans-unit id="4876b66305b9121a957b8075983954194fde2002" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;height&lt;/code&gt; and &lt;code&gt;width&lt;/code&gt; properties alongside images of varying dimensions:</source>
          <target state="translated">次の例は、さまざまな寸法の画像とともに &lt;code&gt;height&lt;/code&gt; と &lt;code&gt;width&lt;/code&gt; プロパティを使用する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c01a708afcd2a65bcdbd8257238b8b6b86ebdfa1" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;name&lt;/code&gt; property.</source>
          <target state="translated">次の例は、 &lt;code&gt;name&lt;/code&gt; 使用法を示していますプロパティのます。</target>
        </trans-unit>
        <trans-unit id="92845b02be15ab1b985e66dd0b2501507224ed13" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;onkeypress&lt;/code&gt; event during a digitation into a form field in order to filter the typed characters:</source>
          <target state="translated">次の例は、 &lt;code&gt;onkeypress&lt;/code&gt; の使用法を示しています。、入力された文字をフィルタリングするために、フォームフィールドへの入力中にオンキーイベントを。</target>
        </trans-unit>
        <trans-unit id="7f4f376de3fe0171cbc4ffb0b861d12e69f63398" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;onmousemove&lt;/code&gt; event with a javaScript tooltip.</source>
          <target state="translated">次の例は、 &lt;code&gt;onmousemove&lt;/code&gt; の使用法を示しています。 javaScriptツールチップイベントの。</target>
        </trans-unit>
        <trans-unit id="400ba02e6efdd886c269e97431fe228eec477af9" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;startTime&lt;/code&gt; property.</source>
          <target state="translated">次の例は、 &lt;code&gt;startTime&lt;/code&gt; の使用方法を示していますプロパティのます。</target>
        </trans-unit>
        <trans-unit id="f5279b0b84800499bd9b9c03f8ff414dbe27ce85" translate="yes" xml:space="preserve">
          <source>The following example shows the use of the &lt;code&gt;toJSON()&lt;/code&gt; method.</source>
          <target state="translated">次の例は、 &lt;code&gt;toJSON()&lt;/code&gt; の使用方法を示していますメソッドの。</target>
        </trans-unit>
        <trans-unit id="790f6e1e59103e012c1df0838542d78d707ba633" translate="yes" xml:space="preserve">
          <source>The following example shows two uses of the &lt;code&gt;ready&lt;/code&gt; property. The first uses &lt;code&gt;ready&lt;/code&gt; to ensure that the &lt;code&gt;WritableStream&lt;/code&gt; is done writing and thus able to receive data before sending a binary chunk. The second also checks whether the the &lt;code&gt;WritableStream&lt;/code&gt; is done writing, but this time because the writing must be finished before the writer can be closed.</source>
          <target state="translated">次の例は、 &lt;code&gt;ready&lt;/code&gt; プロパティの2つの使用法を示しています。1つ目は、 &lt;code&gt;ready&lt;/code&gt; を使用して、 &lt;code&gt;WritableStream&lt;/code&gt; が書き込みを完了し、バイナリチャンクを送信する前にデータを受信できることを確認します。2番目は、 &lt;code&gt;WritableStream&lt;/code&gt; ががを完了したが、今回は、ライターを閉じる前に書き込みを終了する必要があるためです。</target>
        </trans-unit>
        <trans-unit id="913d88c16faba66028294d185d5390a8ff403089" translate="yes" xml:space="preserve">
          <source>The following example simulates typewriter by first clearing and then slowly typing content into the &lt;a href=&quot;../nodelist&quot;&gt;&lt;code&gt;NodeList&lt;/code&gt;&lt;/a&gt; that matches a specified group of selectors.</source>
          <target state="translated">次の例では、最初に消去してから&lt;a href=&quot;../nodelist&quot;&gt; &lt;code&gt;NodeList&lt;/code&gt; に&lt;/a&gt;コンテンツをゆっくりと入力してタイプライターをシミュレートします、指定したセレクターのグループに一致する。</target>
        </trans-unit>
        <trans-unit id="24c68e32b3009378a12189d166b455d237cb02e7" translate="yes" xml:space="preserve">
          <source>The following example snippet is taken from our expanding-list-web-component example (see it live also). In this case, our custom element extends the &lt;a href=&quot;../htmlulistelement&quot;&gt;&lt;code&gt;HTMLUListElement&lt;/code&gt;&lt;/a&gt;, which represents the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt;&lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">次のサンプルスニペットは、expanding-list-web-componentの例から抜粋したものです（実際にご覧ください）。この場合、カスタム要素は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul&quot;&gt; &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt; &lt;/a&gt;を表す&lt;a href=&quot;../htmlulistelement&quot;&gt; &lt;code&gt;HTMLUListElement&lt;/code&gt; を&lt;/a&gt;拡張します。要素ます。</target>
        </trans-unit>
        <trans-unit id="ccb869b4735a71f30fafd9007990aa5e8154a417" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator and moves it in front of the listener after 1 second, behind the listener after 2 seconds, and back to the listener's position after 3 seconds. Note that in this case, the change will mainly affect the timbre and perceived volume of the sound.</source>
          <target state="translated">以下の例では、発振器を起動し、1秒後にリスナーの前に移動し、2秒後にリスナーの後ろに移動し、3秒後にリスナーの位置に戻っています。この場合、この変化は主に音の音色と知覚される音量に影響を与えることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c8bd99fb6a07ebfd16dffe834746f96fb3de907a" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator and pans it above the listener after 1 second, below the listener after 2 seconds, and back to the center after 3 seconds. Note that in this case, the change will mainly affect the timbre of the oscillator, as it's a simple mono wave.</source>
          <target state="translated">次の例では、オシレーターを起動し、1 秒後にリスナーの上、2 秒後にリスナーの下、3 秒後に中央に戻るようにパンしています。この場合、単純なモノラル波なので、この変化は主にオシレーターの音色に影響します。</target>
        </trans-unit>
        <trans-unit id="ed62b529aaa91ca42671d3cb897ade885b5c2d98" translate="yes" xml:space="preserve">
          <source>The following example starts an oscillator, and pans it to the left after 1 second, to the right after 2 seconds, and back to the center after 3 seconds.</source>
          <target state="translated">以下の例では、発振器を起動し、1秒後に左に、2秒後に右に、3秒後に中央に戻してパンニングしています。</target>
        </trans-unit>
        <trans-unit id="2ebcff91173c5a4d6adfd0be41e2a5a62d5a5d62" translate="yes" xml:space="preserve">
          <source>The following example takes data from a &lt;a href=&quot;../pushevent&quot;&gt;&lt;code&gt;PushEvent&lt;/code&gt;&lt;/a&gt; and displays it on all of the service worker's clients. The data payload of the push message is available in the event object's &lt;code&gt;data&lt;/code&gt; property (&lt;a href=&quot;../pushevent/data&quot;&gt;&lt;code&gt;PushEvent.data&lt;/code&gt;&lt;/a&gt;, which contains a &lt;a href=&quot;../pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; object.)</source>
          <target state="translated">次の例では、&lt;a href=&quot;../pushevent&quot;&gt; &lt;code&gt;PushEvent&lt;/code&gt; &lt;/a&gt;からデータを取得し、それをすべてのService Workerのクライアントに表示します。プッシュメッセージのデータペイロードは、イベントオブジェクトの &lt;code&gt;data&lt;/code&gt; プロパティ（&lt;a href=&quot;../pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; &lt;/a&gt;オブジェクトを含む&lt;a href=&quot;../pushevent/data&quot;&gt; &lt;code&gt;PushEvent.data&lt;/code&gt; &lt;/a&gt;）で利用できます。</target>
        </trans-unit>
        <trans-unit id="9ca190c23e8fe845a41d4cf375a355c8052fa962" translate="yes" xml:space="preserve">
          <source>The following example takes data from a &lt;code&gt;PushEvent&lt;/code&gt; and displays it on all of the service worker's clients.</source>
          <target state="translated">次の例では、 &lt;code&gt;PushEvent&lt;/code&gt; からデータを取得し、それをすべてのService Workerのクライアントに表示します。</target>
        </trans-unit>
        <trans-unit id="9b553504d5b37fce7cd61e0ad37d0e0226ee8ef4" translate="yes" xml:space="preserve">
          <source>The following example takes data from a PushEvent and displays it on all of the service workers' clients.</source>
          <target state="translated">次の例では、PushEvent からデータを取得し、サービスワーカーのすべてのクライアントに表示します。</target>
        </trans-unit>
        <trans-unit id="d1ca73f426d6b3ab4e2caddc6a971035a5770380" translate="yes" xml:space="preserve">
          <source>The following example tests whether a plugin is available for the application/pdf mime type and if so, which plugin that is.</source>
          <target state="translated">以下の例では、アプリケーション/pdf mime タイプで利用可能なプラグインがあるかどうか、ある場合はどのプラグインであるかをテストしています。</target>
        </trans-unit>
        <trans-unit id="7d18190b5ad40d5dba90405dd6dc0bffd8bf922f" translate="yes" xml:space="preserve">
          <source>The following example uses &lt;code&gt;claim()&lt;/code&gt; inside service worker's &quot;&lt;code&gt;activate&lt;/code&gt;&quot; event listener so that clients loaded in the same scope do not need to be reloaded before their fetches will go through this service worker.</source>
          <target state="translated">次の例では、Service Workerの &quot; &lt;code&gt;activate&lt;/code&gt; 内で &lt;code&gt;claim()&lt;/code&gt; 使用しています」イベントリスナーいるため、同じスコープにロードされたクライアントは、フェッチがこのService Workerを通過する前にリロードする必要がありません。</target>
        </trans-unit>
        <trans-unit id="9bf8274744618f824cb8cd33401e03ca3df661b6" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;nextHopProtocol&lt;/code&gt; property.</source>
          <target state="translated">次の例では、 &lt;code&gt;nextHopProtocol&lt;/code&gt; プロパティを使用しています。</target>
        </trans-unit>
        <trans-unit id="98a3e01bb1ea05beb7c5258ae3d9619f2cf3dd15" translate="yes" xml:space="preserve">
          <source>The following example uses the beforeinstallprompt event handler to make an install button operable, by using the event inside a click handler.</source>
          <target state="translated">以下の例では、クリックハンドラ内のイベントを使用して、インストールボタンを操作可能にするために beforeinstallprompt イベントハンドラを使用しています。</target>
        </trans-unit>
        <trans-unit id="deed3fbc5b32cc39c5336ce13ec84c76cdccdbc3" translate="yes" xml:space="preserve">
          <source>The following example uses the default value of &lt;code&gt;scope&lt;/code&gt; (by omitting it). The service worker in this case will control &lt;code&gt;example.com/index.html&lt;/code&gt; as well as pages underneath it, like &lt;code&gt;example.com/product/description.html&lt;/code&gt;.</source>
          <target state="translated">次の例では、 &lt;code&gt;scope&lt;/code&gt; のデフォルト値を使用しています（省略した場合）。この場合、Service Workerは &lt;code&gt;example.com/index.html&lt;/code&gt; とその下のページ（example.com/product/description.htmlなど）を制御し &lt;code&gt;example.com/product/description.html&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="58c2b71b6bda82d8e4f2d04eaa2bfcbb66806236" translate="yes" xml:space="preserve">
          <source>The following example uses this property to test for the existence of a USBConfiguration property to select a configuration before claiming an interface.</source>
          <target state="translated">以下の例では、このプロパティを使用して USBConfiguration プロパティの存在をテストし、インターフェイスを主張する前に構成を選択します。</target>
        </trans-unit>
        <trans-unit id="9868c4aa3a49b3c141a541f1150589eb14c51e29" translate="yes" xml:space="preserve">
          <source>The following example was adapted from &lt;a href=&quot;http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;this blog post&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;http://hacks.mozilla.org/2012/05/dom-mutationobserver-reacting-to-dom-changes-without-killing-browser-performance/&quot;&gt;このブログ投稿を基にしてい&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6d2ef2f48d56b7190c80d6d945b8fbc26eaac266" translate="yes" xml:space="preserve">
          <source>The following example will do something after the user types the word &quot;exit&quot; in any point of a page.</source>
          <target state="translated">次の例では、ユーザーがページの任意のポイントに「exit」という単語を入力した後に何かを行います。</target>
        </trans-unit>
        <trans-unit id="0148dd02e5aba9031325708640951708a88c1671" translate="yes" xml:space="preserve">
          <source>The following example will show the rangeCount every second. Select text in the browser to see it change.</source>
          <target state="translated">以下の例では、1秒ごとにrangeCountが表示されます。ブラウザでテキストを選択すると、その変化を見ることができます。</target>
        </trans-unit>
        <trans-unit id="5d74cac7b141bf68b7b90bb1e9d607b722e6e260" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses &lt;code&gt;getVideoTracks()&lt;/code&gt; to retrieve a track for passing to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt;&lt;code&gt;ImageCapture()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">抽出した次の例では、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeのイメージキャプチャ/写真解像度サンプル&lt;/a&gt;、用途の &lt;code&gt;getVideoTracks()&lt;/code&gt; に渡すためのトラックを取得するには&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ImageCapture/ImageCapture&quot;&gt; &lt;code&gt;ImageCapture()&lt;/code&gt; &lt;/a&gt;コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="4bdb7c10cd1aa2ea9ce4019a8fee2f11d76ccc9e" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities().imageWidth&lt;/code&gt; to modify the size of an input range.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeの画像キャプチャ/写真解像度のサンプル&lt;/a&gt;から抽出されたもので、 &lt;code&gt;getPhotoCapabilities().imageWidth&lt;/code&gt; 結果を使用して入力範囲のサイズを変更します。</target>
        </trans-unit>
        <trans-unit id="735419a02f63cbfe9f099ff618da4b9b89686b25" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; to modify the size of an input range. This example also shows how the &lt;code&gt;ImageCapture&lt;/code&gt; object is created using a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeの画像キャプチャ/写真解像度のサンプル&lt;/a&gt;から抽出されたもので、 &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; の結果を使用して入力範囲のサイズを変更します。この例は、デバイスの&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;から取得した&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;ImageCapture&lt;/code&gt; オブジェクトを作成する方法も示しています。</target>
        </trans-unit>
        <trans-unit id="d47e61ef5db7b087231285e6d30526695006aa9a" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; to modify the size of an input range. This example also shows how the &lt;code&gt;ImageCapture&lt;/code&gt; object is created using a &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeの画像キャプチャ/写真解像度のサンプル&lt;/a&gt;から抽出されたもので、 &lt;code&gt;getPhotoCapabilities()&lt;/code&gt; の結果を使用して入力範囲のサイズを変更します。この例は、デバイスの&lt;a href=&quot;mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;から取得した&lt;a href=&quot;mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;ImageCapture&lt;/code&gt; オブジェクトを作成する方法も示しています。</target>
        </trans-unit>
        <trans-unit id="6f368a60eeb43922f4fe5b4b9f4c49d5bf5d3ded" translate="yes" xml:space="preserve">
          <source>The following example, extracted from &lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chrome's Image Capture / Photo Resolution Sample&lt;/a&gt;, uses the results from &lt;code&gt;getPhotoSettings()&lt;/code&gt; to modify the size of an input range. This example also shows how the ImageCapture object is created using a &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; retrieved from a device's &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://googlechrome.github.io/samples/image-capture/photo-resolution.html&quot;&gt;Chromeの画像キャプチャ/写真解像度のサンプル&lt;/a&gt;から抽出されたもので、 &lt;code&gt;getPhotoSettings()&lt;/code&gt; の結果を使用して入力範囲のサイズを変更します。この例は、デバイスの&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;から取得した&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;を使用してImageCaptureオブジェクトを作成する方法も示しています。</target>
        </trans-unit>
        <trans-unit id="8f8a19722133c1ea455e5abb4fe2f372654ada60" translate="yes" xml:space="preserve">
          <source>The following example, taken from the WebVR spec, finds the first available &lt;code&gt;HMDVRDevice&lt;/code&gt; and its associated &lt;a href=&quot;positionsensorvrdevice&quot;&gt;&lt;code&gt;PositionSensorVRDevice&lt;/code&gt;&lt;/a&gt;, if it has one.</source>
          <target state="translated">次の例は、WebVR仕様から &lt;code&gt;HMDVRDevice&lt;/code&gt; 、最初に使用可能なHMDVRDeviceと、関連付けられている&lt;a href=&quot;positionsensorvrdevice&quot;&gt; &lt;code&gt;PositionSensorVRDevice&lt;/code&gt; &lt;/a&gt;があればそれを見つけます。</target>
        </trans-unit>
        <trans-unit id="27d98c26605ad9ae19e79ccc13cdfb4cd0be16f1" translate="yes" xml:space="preserve">
          <source>The following example, the value of size properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="translated">次の例では、すべての「 &lt;code&gt;resource&lt;/code&gt; 」&lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;イベントのサイズプロパティの値が記録されます。</target>
        </trans-unit>
        <trans-unit id="a74953b245c7e7b2e65fbd4b6752e20e8a1c913a" translate="yes" xml:space="preserve">
          <source>The following example, the value of the size properties of all &quot;&lt;code&gt;resource&lt;/code&gt;&quot; &lt;a href=&quot;../performanceentry/entrytype&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; events are logged.</source>
          <target state="translated">次の例では、すべての「 &lt;code&gt;resource&lt;/code&gt; 」&lt;a href=&quot;../performanceentry/entrytype&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;イベントのサイズプロパティの値が記録されます。</target>
        </trans-unit>
        <trans-unit id="db92b07504cf60573c93d71f7a584f49a40e21bc" translate="yes" xml:space="preserve">
          <source>The following example, which is loosely based on &lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;Intel's Orientation Phone demo&lt;/a&gt;, instantiates an &lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt; with a frequency of 60 times a second. On each reading it uses &lt;a href=&quot;orientationsensor/quaternion&quot;&gt;&lt;code&gt;OrientationSensor.quaternion&lt;/code&gt;&lt;/a&gt; to rotate a visual model of a phone.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;IntelのOrientation Phoneデモ&lt;/a&gt;に大まかに基づいており、1秒あたり60回の頻度で &lt;code&gt;AbsoluteOrientationSensor&lt;/code&gt; をインスタンス化します。読み取りごとに、&lt;a href=&quot;orientationsensor/quaternion&quot;&gt; &lt;code&gt;OrientationSensor.quaternion&lt;/code&gt; &lt;/a&gt;を使用して電話の視覚モデルを回転させます。</target>
        </trans-unit>
        <trans-unit id="faeada3c9f8138ed5c764668bc526abb27d92a55" translate="yes" xml:space="preserve">
          <source>The following example, which is loosely based on &lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;Intel's Orientation Phone demo&lt;/a&gt;, instantiates an &lt;code&gt;RelativeOrientationSensor&lt;/code&gt; with a frequency of 60 times a second. (Note that the Intel demo this is based on uses the &lt;code&gt;AbsoluteOreintationSensor&lt;/code&gt;.) On each reading it uses &lt;a href=&quot;orientationsensor/quaternion&quot;&gt;&lt;code&gt;OrientationSensor.quaternion&lt;/code&gt;&lt;/a&gt; to rotate a visual model of a phone.</source>
          <target state="translated">次の例は、&lt;a href=&quot;https://intel.github.io/generic-sensor-demos/orientation-phone/&quot;&gt;IntelのOrientation Phoneデモ&lt;/a&gt;に大まかに基づいており、1秒あたり60回の頻度で &lt;code&gt;RelativeOrientationSensor&lt;/code&gt; をインスタンス化します。（これに基づくIntelデモは、 &lt;code&gt;AbsoluteOreintationSensor&lt;/code&gt; を使用していることに注意してください。）読み取りごとに、&lt;a href=&quot;orientationsensor/quaternion&quot;&gt; &lt;code&gt;OrientationSensor.quaternion&lt;/code&gt; &lt;/a&gt;を使用して電話の視覚モデルを回転させます。</target>
        </trans-unit>
        <trans-unit id="0e9be9ccf6aaca2db19080340f5bf6effce1617f" translate="yes" xml:space="preserve">
          <source>The following examples are screenshots from the attached file.</source>
          <target state="translated">以下の例は添付ファイルのスクリーンショットです。</target>
        </trans-unit>
        <trans-unit id="febdc7f77ee1e378fdb7983060b04d9078c5548a" translate="yes" xml:space="preserve">
          <source>The following examples show how the mode and name properties are passed in the call to &lt;a href=&quot;lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、&lt;a href=&quot;lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; の&lt;/a&gt;呼び出しでモードと名前のプロパティがどのように渡されるかを示しています。 &lt;code&gt;LockManager&lt;/code&gt; は&lt;a href=&quot;navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="aea84d7771e836ef26e5cfa682717ab7b0670a1e" translate="yes" xml:space="preserve">
          <source>The following examples show how the mode property passed in the call to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;../navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、modeプロパティが&lt;a href=&quot;../lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; の&lt;/a&gt;呼び出しでどのように渡されるかを示しています。 &lt;code&gt;LockManager&lt;/code&gt; は&lt;a href=&quot;../navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="24c1ef3007f1e18404b508ad7b4f8b184159ed4b" translate="yes" xml:space="preserve">
          <source>The following examples show how the name property passed in the call to &lt;a href=&quot;../lockmanager/request&quot;&gt;&lt;code&gt;LockManager.request()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;LockManager&lt;/code&gt; is the object returned by &lt;a href=&quot;../navigator/locks&quot;&gt;&lt;code&gt;navigator.locks&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の例は、nameプロパティが&lt;a href=&quot;../lockmanager/request&quot;&gt; &lt;code&gt;LockManager.request()&lt;/code&gt; の&lt;/a&gt;呼び出しでどのように渡されるかを示しています。 &lt;code&gt;LockManager&lt;/code&gt; は&lt;a href=&quot;../navigator/locks&quot;&gt; &lt;code&gt;navigator.locks&lt;/code&gt; &lt;/a&gt;によって返されるオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="3b63252171bdd483df676b3e519fc5383a295d21" translate="yes" xml:space="preserve">
          <source>The following exceptions can be raised by this method:</source>
          <target state="translated">このメソッドでは、以下の例外を発生させることができます。</target>
        </trans-unit>
        <trans-unit id="94737e1025dd41a1f555fb83fe451a64d957615b" translate="yes" xml:space="preserve">
          <source>The following fairly verbose snippet could be used if you wanted to first check whether notifications are supported, then check if permission has been granted for the current origin to send notifications, then request permission if required, before then sending a notification.</source>
          <target state="translated">以下のかなり冗長なスニペットは、まず最初に通知がサポートされているかどうかをチェックし、次に現在のオリジンが通知を送信するためのパーミッションが付与されているかどうかをチェックし、必要であればパーミッションを要求してから通知を送信したい場合に使用することができます。</target>
        </trans-unit>
        <trans-unit id="97270a71b3f307dbf5b479f5e623f0dfc2c361bd" translate="yes" xml:space="preserve">
          <source>The following features require the &lt;code&gt;UniversalBrowserWrite&lt;/code&gt; privilege, otherwise they will be ignored. Chrome scripts have this privilege automatically, others have to request it from the PrivilegeManager.</source>
          <target state="translated">次の機能には &lt;code&gt;UniversalBrowserWrite&lt;/code&gt; 権限が必要です。それ以外の場合は無視されます。Chromeスクリプトはこの特権を自動的に持ち、他の人はPrivilegeManagerに要求する必要があります。</target>
        </trans-unit>
        <trans-unit id="ffe08c31f8f2de545ea35d64da0c17067c56c848" translate="yes" xml:space="preserve">
          <source>The following fields are initialized to &lt;code&gt;null&lt;/code&gt; if they are not included in the &lt;a href=&quot;candidate&quot;&gt;&lt;code&gt;RTCIceCandidate.candidate&lt;/code&gt;&lt;/a&gt; property: &lt;a href=&quot;foundation&quot;&gt;&lt;code&gt;foundation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;component&quot;&gt;&lt;code&gt;component&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;priority&quot;&gt;&lt;code&gt;priority&lt;/code&gt;&lt;/a&gt; , &lt;a href=&quot;ip&quot;&gt;&lt;code&gt;ip&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;protocol&quot;&gt;&lt;code&gt;protocol&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;port&quot;&gt;&lt;code&gt;port&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;tcptype&quot;&gt;&lt;code&gt;tcpType&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;relatedaddress&quot;&gt;&lt;code&gt;relatedAddress&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;relatedport&quot;&gt;&lt;code&gt;relatedPort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のフィールドがで初期化され &lt;code&gt;null&lt;/code&gt; それらが含まれていない場合&lt;a href=&quot;candidate&quot;&gt; &lt;code&gt;RTCIceCandidate.candidate&lt;/code&gt; の&lt;/a&gt;プロパティ：&lt;a href=&quot;foundation&quot;&gt; &lt;code&gt;foundation&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;component&quot;&gt; &lt;code&gt;component&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;priority&quot;&gt; &lt;code&gt;priority&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;ip&quot;&gt; &lt;code&gt;ip&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;protocol&quot;&gt; &lt;code&gt;protocol&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;port&quot;&gt; &lt;code&gt;port&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;tcptype&quot;&gt; &lt;code&gt;tcpType&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;relatedaddress&quot;&gt; &lt;code&gt;relatedAddress&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;relatedport&quot;&gt; &lt;code&gt;relatedPort&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bca50c7f82bf8444ab26f5ba763468a2fb85b21d" translate="yes" xml:space="preserve">
          <source>The following figure shows the difference between &lt;code&gt;outerHeight&lt;/code&gt; and &lt;code&gt;innerHeight&lt;/code&gt;.</source>
          <target state="translated">次の図は、 &lt;code&gt;outerHeight&lt;/code&gt; と &lt;code&gt;innerHeight&lt;/code&gt; の違いを示しています。</target>
        </trans-unit>
        <trans-unit id="85993a51834b24eb9e0801e8b6f47efb69bf9929" translate="yes" xml:space="preserve">
          <source>The following function adds three data items to the local storage for the current domain, then returns the number of items in the storage:</source>
          <target state="translated">次の関数は、現在のドメインのローカル・ストレージに 3 つのデータ項目を追加し、ストレージ内の項目数を返します。</target>
        </trans-unit>
        <trans-unit id="5481722ed64977b6ae2707736f3839dd2204677e" translate="yes" xml:space="preserve">
          <source>The following function calls a function recursively for each node contained by a root node (including the root itself):</source>
          <target state="translated">以下の関数は、ルートノード(ルート自体を含む)に含まれる各ノードに対して再帰的に関数を呼び出します。</target>
        </trans-unit>
        <trans-unit id="f29118e3cbf3c3119f236d85d72dfd7c5ddd1b19" translate="yes" xml:space="preserve">
          <source>The following function creates three data entries in local storage, then deletes them using &lt;code&gt;clear()&lt;/code&gt;.</source>
          <target state="translated">次の関数は、ローカルストレージに3つのデータエントリを作成し、次に &lt;code&gt;clear()&lt;/code&gt; を使用してそれらを削除します。</target>
        </trans-unit>
        <trans-unit id="8c59f04f94c110412685e25067fd79a7ad968f04" translate="yes" xml:space="preserve">
          <source>The following function creates three data items inside local storage, then removes the &lt;code&gt;image&lt;/code&gt; data item.</source>
          <target state="translated">次の関数は、ローカルストレージ内に3つのデータ項目を作成してから、 &lt;code&gt;image&lt;/code&gt; データ項目を削除します。</target>
        </trans-unit>
        <trans-unit id="c726c324b2ef771544dc8d8843ed7ed613eba477" translate="yes" xml:space="preserve">
          <source>The following function creates three data items inside local storage.</source>
          <target state="translated">以下の関数は、ローカルストレージ内に3つのデータ項目を作成します。</target>
        </trans-unit>
        <trans-unit id="a245266c521a157e3b0ab4ee4747b646579e8db1" translate="yes" xml:space="preserve">
          <source>The following function implements such a strategy. It assumes base64-js imported as &lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;base64js.min.js&quot;/&amp;gt;&lt;/code&gt;. Note that TextEncoderLite only works with UTF-8.</source>
          <target state="translated">次の関数は、このような戦略を実装しています。 &lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot; src=&quot;base64js.min.js&quot;/&amp;gt;&lt;/code&gt; としてインポートされたbase64-jsを想定しています。TextEncoderLiteはUTF-8でのみ機能することに注意してください。</target>
        </trans-unit>
        <trans-unit id="322089a75937578eb39cb596132bbb12324c87f0" translate="yes" xml:space="preserve">
          <source>The following function iterates over the local storage keys and gets the value set for each key:</source>
          <target state="translated">以下の関数は、ローカルストレージのキーを反復処理し、各キーに設定された値を取得します。</target>
        </trans-unit>
        <trans-unit id="e377fff921b5d64d21fb78200793e78ce73ee9f5" translate="yes" xml:space="preserve">
          <source>The following function iterates over the local storage keys:</source>
          <target state="translated">以下の関数は、ローカル・ストレージ・キーを反復処理します。</target>
        </trans-unit>
        <trans-unit id="d280adc56c877d6601ff48aa27747aa07012585b" translate="yes" xml:space="preserve">
          <source>The following function retrieves three data items from local storage, then uses them to set custom styles on a page.</source>
          <target state="translated">以下の関数は、ローカルストレージから3つのデータ項目を取得し、それらを使用してページのカスタムスタイルを設定します。</target>
        </trans-unit>
        <trans-unit id="b7b8bee67da30dc571e12693bb9aa523d6b9439e" translate="yes" xml:space="preserve">
          <source>The following gets the number of explicitly set styles on the following HTML element:</source>
          <target state="translated">以下は、以下のHTML要素に明示的に設定されているスタイルの数を取得します。</target>
        </trans-unit>
        <trans-unit id="c7174a30b7048940e586ca2432c1dfc7530a8b8d" translate="yes" xml:space="preserve">
          <source>The following interfaces all inherit from &lt;code&gt;Node&lt;/code&gt;&amp;rsquo;s methods and properties: &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;attr&quot;&gt;&lt;code&gt;Attr&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt;&lt;code&gt;CharacterData&lt;/code&gt;&lt;/a&gt; (which &lt;a href=&quot;text&quot;&gt;&lt;code&gt;Text&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;comment&quot;&gt;&lt;code&gt;Comment&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;cdatasection&quot;&gt;&lt;code&gt;CDATASection&lt;/code&gt;&lt;/a&gt; inherit), &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction&quot;&gt;&lt;code&gt;ProcessingInstruction&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;documentfragment&quot;&gt;&lt;code&gt;DocumentFragment&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;documenttype&quot;&gt;&lt;code&gt;DocumentType&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt;&lt;code&gt;Notation&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt;&lt;code&gt;Entity&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EntityReference&quot;&gt;&lt;code&gt;EntityReference&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">次のインターフェースはすべて &lt;code&gt;Node&lt;/code&gt; のメソッドとプロパティを継承します：&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;attr&quot;&gt; &lt;code&gt;Attr&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CharacterData&quot;&gt; &lt;code&gt;CharacterData&lt;/code&gt; &lt;/a&gt;（どの&lt;a href=&quot;text&quot;&gt; &lt;code&gt;Text&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;comment&quot;&gt; &lt;code&gt;Comment&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;cdatasection&quot;&gt; &lt;code&gt;CDATASection&lt;/code&gt; が&lt;/a&gt;継承するか）、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ProcessingInstruction&quot;&gt; &lt;code&gt;ProcessingInstruction&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;documentfragment&quot;&gt; &lt;code&gt;DocumentFragment&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;documenttype&quot;&gt; &lt;code&gt;DocumentType&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Notation&quot;&gt; &lt;code&gt;Notation&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Entity&quot;&gt; &lt;code&gt;Entity&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/EntityReference&quot;&gt; &lt;code&gt;EntityReference&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a021cb24ae8e384026dfa371fdd382f37c5e9ffd" translate="yes" xml:space="preserve">
          <source>The following interfaces are included in the spec for purposes such as defining features used in multiple other places, or to serve as bases for multiple interfaces which can all be used as values of the same properties. You wouldn't directly use these in web development work, but they may be interesting for library authors to understand how the technology works so their implementations can be more effective, or for browser engineers looking for an easier reference than the spec provides.</source>
          <target state="translated">以下のインタフェースは、他の複数の場所で使用される機能を定義したり、同じプロパティの値として使用できる複数のインタフェースのベースとなることを目的として、この仕様に含まれています。これらを直接Web開発の仕事で使うことはありませんが、ライブラリの作者が技術の仕組みを理解して実装をより効果的にするために利用したり、仕様書よりも簡単なリファレンスを探しているブラウザエンジニアにとっては興味深いものになるかもしれません。</target>
        </trans-unit>
        <trans-unit id="07134442d211d7db7601d0757b95753d772d781b" translate="yes" xml:space="preserve">
          <source>The following interfaces were defined in old versions of the Web Audio API spec, but are now obsolete and have been replaced by other interfaces.</source>
          <target state="translated">以下のインターフェースは、Web Audio API仕様の古いバージョンで定義されていましたが、現在では廃止され、他のインターフェースに置き換えられています。</target>
        </trans-unit>
        <trans-unit id="a9a470057028792dfc9fc1d7fcfc260bd063a1b3" translate="yes" xml:space="preserve">
          <source>The following is a brief list of common APIs in web and XML page scripting using the DOM.</source>
          <target state="translated">以下は、DOM を使用した Web や XML ページスクリプティングにおける共通の API の簡単なリストです。</target>
        </trans-unit>
        <trans-unit id="2a0d98bd8137ccf5a2b1fe68d9d1408d675977e0" translate="yes" xml:space="preserve">
          <source>The following is a collection of tips to improve canvas performance.</source>
          <target state="translated">キャンバスの性能を上げるためのコツをまとめました。</target>
        </trans-unit>
        <trans-unit id="44e9a24b4cb089c24adbfa0962b3605667b65759" translate="yes" xml:space="preserve">
          <source>The following line creates an empty &lt;code&gt;FormData&lt;/code&gt; object and prepopulates it with key/value pairs from a form:</source>
          <target state="translated">次の行は、空の &lt;code&gt;FormData&lt;/code&gt; オブジェクトを作成し、フォームのキーと値のペアを事前に入力します。</target>
        </trans-unit>
        <trans-unit id="cde7c8cddf7ea566e202267a9500398411eeee16" translate="yes" xml:space="preserve">
          <source>The following line creates an empty &lt;code&gt;FormData&lt;/code&gt; object:</source>
          <target state="translated">次の行は、空の &lt;code&gt;FormData&lt;/code&gt; オブジェクトを作成します。</target>
        </trans-unit>
        <trans-unit id="81786697aa2915baa6eb1367d4520712fcfd6a90" translate="yes" xml:space="preserve">
          <source>The following line of code fetches the first file in the node's file list as a &lt;a href=&quot;file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object:</source>
          <target state="translated">次のコード行は、ノードのファイルリストの最初のファイルを&lt;a href=&quot;file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトとしてフェッチします。</target>
        </trans-unit>
        <trans-unit id="426e6e385386c94cdacea844c2a1f319cf0e51fe" translate="yes" xml:space="preserve">
          <source>The following logs &quot;x&quot; to the console.</source>
          <target state="translated">以下はコンソールに「×」のログを記録します。</target>
        </trans-unit>
        <trans-unit id="963c5a6e0aa3be83f64697774ff54e0d5e933af8" translate="yes" xml:space="preserve">
          <source>The following method has been added: &lt;code&gt;requestAutocomplete()&lt;/code&gt;.</source>
          <target state="translated">次のメソッドが追加されました： &lt;code&gt;requestAutocomplete()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dcbe7ab86dddca8525df7d71f73e7feaee0ef08e" translate="yes" xml:space="preserve">
          <source>The following method was obsoleted long ago and was never implemented in all major browsers.</source>
          <target state="translated">以下の方法はかなり前に陳腐化しており、すべての主要なブラウザで実装されることはありませんでした。</target>
        </trans-unit>
        <trans-unit id="e2935dacf46c413c9b6802dd367e7e4a0743412c" translate="yes" xml:space="preserve">
          <source>The following methods and properties control how lines are drawn.</source>
          <target state="translated">以下のメソッドとプロパティは、線の描画方法を制御します。</target>
        </trans-unit>
        <trans-unit id="7a183f23fcb5b911e13e7161d484ab51c50cf954" translate="yes" xml:space="preserve">
          <source>The following methods are provided for drawing text. See also the &lt;a href=&quot;textmetrics&quot;&gt;&lt;code&gt;TextMetrics&lt;/code&gt;&lt;/a&gt; object for text properties.</source>
          <target state="translated">テキストを描画するために、以下のメソッドが提供されています。テキストプロパティについては、&lt;a href=&quot;textmetrics&quot;&gt; &lt;code&gt;TextMetrics&lt;/code&gt; &lt;/a&gt;オブジェクトも参照してください。</target>
        </trans-unit>
        <trans-unit id="26c5f80976aa0be20738820e4fd8d05bdd5546d7" translate="yes" xml:space="preserve">
          <source>The following methods can be used to manipulate paths of objects.</source>
          <target state="translated">オブジェクトのパスを操作するには、以下のメソッドを使用することができます。</target>
        </trans-unit>
        <trans-unit id="e4d1432c2dbf68bc107ddaffb6824018b2b6a47d" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt; and &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">次のメソッドが追加されました： &lt;code&gt;checkValidity()&lt;/code&gt; および &lt;code&gt;setCustomValidity()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ff83193d8b7ea273739091d1b8a35da05b1c896f" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt;, &lt;code&gt;setCustomValidity()&lt;/code&gt;, and &lt;code&gt;setSelectionRange()&lt;/code&gt;.</source>
          <target state="translated">次のメソッドが追加されました： &lt;code&gt;checkValidity()&lt;/code&gt; 、 &lt;code&gt;setCustomValidity()&lt;/code&gt; 、および &lt;code&gt;setSelectionRange()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="347b28106a91303e7112d8d47d1611f7c438ea69" translate="yes" xml:space="preserve">
          <source>The following methods have been added: &lt;code&gt;checkValidity()&lt;/code&gt;, &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">次のメソッドが追加されました： &lt;code&gt;checkValidity()&lt;/code&gt; 、 &lt;code&gt;setCustomValidity()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5a677c389659993fbee65633d9d269505fc3e2b0" translate="yes" xml:space="preserve">
          <source>The following methods have been added: checkValidity(), setCustomValidity(), setSelectionRange(), stepUp(), and stepDown().</source>
          <target state="translated">checkValidity()、setCustomValidity()、setSelectionRange()、stepUp()、stepDown()のメソッドが追加されました。</target>
        </trans-unit>
        <trans-unit id="844b0ae147b2e4a66f7638c3b13f724b9789d4c4" translate="yes" xml:space="preserve">
          <source>The following methods have been deprecated:</source>
          <target state="translated">以下のメソッドは非推奨となりました。</target>
        </trans-unit>
        <trans-unit id="7e23c0fb22ffdd5bcbd559ff503b4cc560f6235a" translate="yes" xml:space="preserve">
          <source>The following more complex example will, 1 second from now, start playing 10 seconds worth of sound starting 3 seconds into the audio buffer.</source>
          <target state="translated">次のより複雑な例では、今から1秒後に、オーディオバッファに3秒を開始する10秒分のサウンドの再生を開始します。</target>
        </trans-unit>
        <trans-unit id="0ce8afa470b4e22e25f79b369d753eab44f0ce8d" translate="yes" xml:space="preserve">
          <source>The following new functions can be used in GLSL shader code, if this extension is enabled:</source>
          <target state="translated">この拡張機能が有効になっていれば、以下の新しい関数をGLSLシェーダコードで使用することができます。</target>
        </trans-unit>
        <trans-unit id="6bb6ed2aea11e5dbc04bcda8f08fcc90ca8f615d" translate="yes" xml:space="preserve">
          <source>The following non-standard properties and methods were removed in Gecko 7 (Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4): &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileName&quot;&gt;&lt;code&gt;File.fileName&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize&quot;&gt;&lt;code&gt;File.fileSize&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary&quot;&gt;&lt;code&gt;File.getAsBinary()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL&quot;&gt;&lt;code&gt;File.getAsDataURL()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText&quot;&gt;&lt;code&gt;File.getAsText(string encoding)&lt;/code&gt;&lt;/a&gt; (&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=661876&quot;&gt;bug 661876&lt;/a&gt;). Standard properties &lt;a href=&quot;file/name&quot;&gt;&lt;code&gt;File.name&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;blob/size&quot;&gt;&lt;code&gt;Blob.size&lt;/code&gt;&lt;/a&gt;, and methods on &lt;a href=&quot;filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt; should be used instead.</source>
          <target state="translated">次の非標準のプロパティとメソッドはGecko 7（Firefox 7.0 / Thunderbird 7.0 / SeaMonkey 2.4）で削除されました：&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileName&quot;&gt; &lt;code&gt;File.fileName&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/fileSize&quot;&gt; &lt;code&gt;File.fileSize&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsBinary&quot;&gt; &lt;code&gt;File.getAsBinary()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsDataURL&quot;&gt; &lt;code&gt;File.getAsDataURL()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/File/getAsText&quot;&gt; &lt;code&gt;File.getAsText(string encoding)&lt;/code&gt; &lt;/a&gt;（&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=661876&quot;&gt;バグ661876&lt;/a&gt;）。&lt;a href=&quot;file/name&quot;&gt; &lt;code&gt;File.name&lt;/code&gt; &lt;/a&gt;、標準プロパティFile.name、&lt;a href=&quot;blob/size&quot;&gt; &lt;code&gt;Blob.size&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;filereader&quot;&gt; &lt;code&gt;FileReader&lt;/code&gt; の&lt;/a&gt;メソッドを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7999e22162b843d28c2c7d7dadc1ae47ec77a0f9" translate="yes" xml:space="preserve">
          <source>The following options are currently not shipped anywhere, but will be added in the near future.</source>
          <target state="translated">以下のオプションは現在どこにも出荷されていませんが、近いうちに追加される予定です。</target>
        </trans-unit>
        <trans-unit id="0bca0b366d186075a610ccacd7763ba77630576a" translate="yes" xml:space="preserve">
          <source>The following options are listed in the most up-to-date spec, but are not supported in any browsers yet. It is advisable to keep checking back regularly to see if the status of these has updated, and let us know if you find any out of date information.</source>
          <target state="translated">以下のオプションは最新の仕様で記載されていますが、まだどのブラウザでもサポートされていません。これらのステータスが更新されているかどうかを定期的にチェックし、古い情報を見つけたらお知らせください。</target>
        </trans-unit>
        <trans-unit id="dab6ae7d177978b8ad4a5f7a04acf9f23d4f35e0" translate="yes" xml:space="preserve">
          <source>The following polyfill for both &lt;code&gt;classList&lt;/code&gt; and &lt;code&gt;DOMTokenList&lt;/code&gt; ensures &lt;strong&gt;full&lt;/strong&gt; compliance (coverage) for all standard methods and properties of &lt;code&gt;Element.prototype.classList&lt;/code&gt; for &lt;strong&gt;IE10&lt;/strong&gt;-&lt;strong&gt;IE11 &lt;/strong&gt;browsers plus &lt;em&gt;nearly&lt;/em&gt; compliant behavior for &lt;strong&gt;IE 6-9&lt;/strong&gt;. Check it out:</source>
          <target state="translated">両方のために、以下のポリフィル &lt;code&gt;classList&lt;/code&gt; と &lt;code&gt;DOMTokenList&lt;/code&gt; は保証さ&lt;strong&gt;いっぱい&lt;/strong&gt;のすべての標準メソッドとプロパティのためのコンプライアンス（カバレッジ） &lt;code&gt;Element.prototype.classList&lt;/code&gt; 用&lt;strong&gt;IE10&lt;/strong&gt; - &lt;strong&gt;IE11&lt;/strong&gt;のブラウザプラス&lt;em&gt;に近い&lt;/em&gt;ため準拠の動作&lt;strong&gt;IE 6-9&lt;/strong&gt;。見てみな：</target>
        </trans-unit>
        <trans-unit id="b40c6195c1bf4082ae2e2c16ad99c64b92884a32" translate="yes" xml:space="preserve">
          <source>The following properties and methods provide general information and functionality to deal with the WebGL context:</source>
          <target state="translated">以下のプロパティとメソッドは、WebGL コンテキストを扱うための一般的な情報と機能を提供します。</target>
        </trans-unit>
        <trans-unit id="8cac2f579b1df11f92fc2cf3f414c007ee1107cd" translate="yes" xml:space="preserve">
          <source>The following properties are now &lt;code&gt;long&lt;/code&gt;, instead of &lt;code&gt;DOMString&lt;/code&gt;: &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, and &lt;code&gt;vspace&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは、 &lt;code&gt;DOMString&lt;/code&gt; ではなく &lt;code&gt;long&lt;/code&gt; になりました： &lt;code&gt;height&lt;/code&gt; 、 &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;hspace&lt;/code&gt; 、 &lt;code&gt;vspace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="540ae2db3a026ae0b18dc8bb97dbd4a7b77d125d" translate="yes" xml:space="preserve">
          <source>The following properties are now &lt;code&gt;unsigned long&lt;/code&gt;, instead of &lt;code&gt;long&lt;/code&gt;: &lt;code&gt;height&lt;/code&gt;, and &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが今している &lt;code&gt;unsigned long&lt;/code&gt; 型の代わりに、 &lt;code&gt;long&lt;/code&gt; ： &lt;code&gt;height&lt;/code&gt; 、および &lt;code&gt;width&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4bccfa5536c7256b5d16ac87aaa01c85ef8ce1cf" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;aLink&lt;/code&gt;, &lt;code&gt;bgColor&lt;/code&gt;, &lt;code&gt;background&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;text&lt;/code&gt;, and &lt;code&gt;vLink&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;aLink&lt;/code&gt; 、 &lt;code&gt;bgColor&lt;/code&gt; 、 &lt;code&gt;background&lt;/code&gt; 、 &lt;code&gt;link&lt;/code&gt; 、 &lt;code&gt;text&lt;/code&gt; 、および &lt;code&gt;vLink&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a28057a0939cfe25855eb347f2adca794ea2098c" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;archive&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;code&lt;/code&gt;, &lt;code&gt;codeBase&lt;/code&gt;, &lt;code&gt;codeType&lt;/code&gt;, &lt;code&gt;declare&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, &lt;code&gt;standby&lt;/code&gt;, and &lt;code&gt;vspace&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;align&lt;/code&gt; 、 &lt;code&gt;archive&lt;/code&gt; 、 &lt;code&gt;border&lt;/code&gt; 、 &lt;code&gt;code&lt;/code&gt; 、 &lt;code&gt;codeBase&lt;/code&gt; 、 &lt;code&gt;codeType&lt;/code&gt; 、 &lt;code&gt;declare&lt;/code&gt; 、 &lt;code&gt;hspace&lt;/code&gt; 、 &lt;code&gt;standby&lt;/code&gt; 、および &lt;code&gt;vspace&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="40e41974a4b98c8371ff98df7e6df6de6a9955b2" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;coords&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;rev&lt;/code&gt;, and &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;charset&lt;/code&gt; 、 &lt;code&gt;coords&lt;/code&gt; 、 &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;rev&lt;/code&gt; 、および &lt;code&gt;shape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="033de105010b52742d2a10e0342cba893c4f499d" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;charset&lt;/code&gt;, &lt;code&gt;rev&lt;/code&gt;, and &lt;code&gt;shape&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;charset&lt;/code&gt; 、 &lt;code&gt;rev&lt;/code&gt; 、および &lt;code&gt;shape&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="485a8f05dc0f225d0a0ceedea0acef1e0e685a9a" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;htmlFor,&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;htmlFor,&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0596aede7b1e37bc1664dc66a6995aed451bd02a" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;border&lt;/code&gt;, &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;hspace&lt;/code&gt;, &lt;code&gt;vspace&lt;/code&gt;, and &lt;code&gt;longdesc&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;border&lt;/code&gt; 、 &lt;code&gt;align&lt;/code&gt; 、 &lt;code&gt;hspace&lt;/code&gt; 、 &lt;code&gt;vspace&lt;/code&gt; 、および &lt;code&gt;longdesc&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f412282e5e7b092d0b22291afbc7c828c2654ad" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;scrolling&lt;/code&gt;, &lt;code&gt;marginWidth&lt;/code&gt;, &lt;code&gt;marginHeight&lt;/code&gt;, &lt;code&gt;longDesc&lt;/code&gt;, &lt;code&gt;frameBorder&lt;/code&gt;, and &lt;code&gt;align&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;scrolling&lt;/code&gt; 、 &lt;code&gt;marginWidth&lt;/code&gt; 、 &lt;code&gt;marginHeight&lt;/code&gt; 、 &lt;code&gt;longDesc&lt;/code&gt; 、 &lt;code&gt;frameBorder&lt;/code&gt; 、および &lt;code&gt;align&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ede688820ee2b35999d497dfdc00136c858b23b4" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;valueType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;type&lt;/code&gt; および &lt;code&gt;valueType&lt;/code&gt; のプロパティは廃止されました。</target>
        </trans-unit>
        <trans-unit id="b3b8f0eeb230be61b2fe7e4de9ebb4b606f844a6" translate="yes" xml:space="preserve">
          <source>The following properties are now obsolete: align and useMap.</source>
          <target state="translated">以下のプロパティは廃止されました。</target>
        </trans-unit>
        <trans-unit id="ad77311e62c8dfe88fd1e4714b17641bb468b386" translate="yes" xml:space="preserve">
          <source>The following properties are obsolete and should no longer be used, but may still be present in some browser versions.</source>
          <target state="translated">以下のプロパティは廃止されたもので、もはや使用されるべきではありませんが、ブラウザのバージョンによってはまだ存在している可能性があります。</target>
        </trans-unit>
        <trans-unit id="dd659134cecfb8ed19671e5846f553a38447d2fe" translate="yes" xml:space="preserve">
          <source>The following properties control how text is laid out.</source>
          <target state="translated">以下のプロパティは、テキストがどのようにレイアウトされるかを制御します。</target>
        </trans-unit>
        <trans-unit id="fcc56d9d42e1aeac5f778c3ec9e184c2ade16b45" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;crossorigin&lt;/code&gt;, &lt;code&gt;naturalWidth&lt;/code&gt;, &lt;code&gt;naturalHeight&lt;/code&gt;, and &lt;code&gt;complete&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;crossorigin&lt;/code&gt; 、 &lt;code&gt;naturalWidth&lt;/code&gt; 、 &lt;code&gt;naturalHeight&lt;/code&gt; 、および &lt;code&gt;complete&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="45af66c5828b7df3ca154ed8cfcacdfa24beb299" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;disabled&lt;/code&gt;, &lt;code&gt;elements&lt;/code&gt;, &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;valdiationMessage&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, and &lt;code&gt;willValidate&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;disabled&lt;/code&gt; 、 &lt;code&gt;elements&lt;/code&gt; 、 &lt;code&gt;name&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、 &lt;code&gt;valdiationMessage&lt;/code&gt; 、 &lt;code&gt;validity&lt;/code&gt; 、および &lt;code&gt;willValidate&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="9106c2f83ca823c1dbb62a4c66db05e31bee862e" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;hash&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;relList&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;text&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;hash&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;hostname&lt;/code&gt; 、 &lt;code&gt;media&lt;/code&gt; 、 &lt;code&gt;pathname&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;protocol&lt;/code&gt; 、 &lt;code&gt;relList&lt;/code&gt; 、 &lt;code&gt;search&lt;/code&gt; 、および &lt;code&gt;text&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e5ce65405e3d1bf1df9d794039e6605f1b36dd9f" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;onafterprint&lt;/code&gt;, &lt;code&gt;onbeforeprint&lt;/code&gt;, &lt;code&gt;onbeforeunload&lt;/code&gt;, &lt;code&gt;onblur&lt;/code&gt;, &lt;code&gt;onerror&lt;/code&gt;, &lt;code&gt;onfocus&lt;/code&gt;, &lt;code&gt;onhashchange&lt;/code&gt;, &lt;code&gt;onload&lt;/code&gt;, &lt;code&gt;onmessage&lt;/code&gt;, &lt;code&gt;onoffline&lt;/code&gt;, &lt;code&gt;ononline&lt;/code&gt;, &lt;code&gt;onpopstate&lt;/code&gt;, &lt;code&gt;onresize&lt;/code&gt;, &lt;code&gt;onstorage&lt;/code&gt;, and &lt;code&gt;onunload&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;onafterprint&lt;/code&gt; 、 &lt;code&gt;onbeforeprint&lt;/code&gt; 、 &lt;code&gt;onbeforeunload&lt;/code&gt; 、 &lt;code&gt;onblur&lt;/code&gt; 、 &lt;code&gt;onerror&lt;/code&gt; 、 &lt;code&gt;onfocus&lt;/code&gt; 、 &lt;code&gt;onhashchange&lt;/code&gt; 、 &lt;code&gt;onload&lt;/code&gt; 、 &lt;code&gt;onmessage&lt;/code&gt; 、 &lt;code&gt;onoffline&lt;/code&gt; 、 &lt;code&gt;ononline&lt;/code&gt; 、 &lt;code&gt;onpopstate&lt;/code&gt; 、 &lt;code&gt;onresize&lt;/code&gt; 、 &lt;code&gt;onstorage&lt;/code&gt; 、および &lt;code&gt;onunload&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a68891bf522f8b6bd307ffd86d58976d54b29f94" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;rel&lt;/code&gt;, &lt;code&gt;relList&lt;/code&gt;, &lt;code&gt;media&lt;/code&gt;, &lt;code&gt;hreflang&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;hostname&lt;/code&gt;, &lt;code&gt;pathname&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;search&lt;/code&gt;, and &lt;code&gt;hash&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;rel&lt;/code&gt; 、 &lt;code&gt;relList&lt;/code&gt; 、 &lt;code&gt;media&lt;/code&gt; 、 &lt;code&gt;hreflang&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、 &lt;code&gt;host&lt;/code&gt; 、 &lt;code&gt;hostname&lt;/code&gt; 、 &lt;code&gt;pathname&lt;/code&gt; 、 &lt;code&gt;port&lt;/code&gt; 、 &lt;code&gt;protocol&lt;/code&gt; 、 &lt;code&gt;search&lt;/code&gt; 、および &lt;code&gt;hash&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="baf05f7eb800ee38c56a3a8baa12017aced053a3" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;relList&lt;/code&gt;, and &lt;code&gt;sizes&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;relList&lt;/code&gt; 、および &lt;code&gt;sizes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="549966605855e353cd122e4b189c5c5bd1960ada" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;srcdoc&lt;/code&gt;, &lt;code&gt;sandbox&lt;/code&gt;, and &lt;code&gt;contentWindow&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;srcdoc&lt;/code&gt; 、 &lt;code&gt;sandbox&lt;/code&gt; 、および &lt;code&gt;contentWindow&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="232b67171d17ab56813888110c8e2cc90c47eaca" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;srcset&lt;/code&gt;, &lt;code&gt;currentSrc&lt;/code&gt; and &lt;code&gt;sizes&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;srcset&lt;/code&gt; 、 &lt;code&gt;currentSrc&lt;/code&gt; 、および &lt;code&gt;sizes&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a3a7dc190265feccf6bf2c4c5bc88c02a907e808" translate="yes" xml:space="preserve">
          <source>The following properties have been added: &lt;code&gt;typeMustMatch&lt;/code&gt;, &lt;code&gt;contentWindow&lt;/code&gt;, &lt;code&gt;willValidate&lt;/code&gt;, &lt;code&gt;validity&lt;/code&gt;, and &lt;code&gt;validationMessage&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;typeMustMatch&lt;/code&gt; 、 &lt;code&gt;contentWindow&lt;/code&gt; 、 &lt;code&gt;willValidate&lt;/code&gt; 、 &lt;code&gt;validity&lt;/code&gt; 、および &lt;code&gt;validationMessage&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="927bd4b56683a253cd71c65593ef09d3afb2d262" translate="yes" xml:space="preserve">
          <source>The following properties have been added: autocomplete, autofocus, dirName, files, formAction, formEncType, formMethod, formNoValidate, formTarget, height, indeterminate, labels, list, max, min, multiple, pattern, placeholder, required, selectionDirection, selectionEnd, selectionStart, step, validationMessage, validity, valueAsDate, valueAsNumber, width, and willValidate.</source>
          <target state="translated">次のプロパティが追加されました:autocomplete、autofocus、dirName、files、formAction、formEncType、formMethod、formNoValidate、formTarget、height、不確定、label、list、max、min、multiple、pattern、placeholder、required、selectDirection、selectEnd、selectStart、step、validationMessage、validation、valueAsDate、valueAsNumber、width、およびwillValidate。</target>
        </trans-unit>
        <trans-unit id="b9c33d1fdbc81019ebb51db1cee10b3e7c4d247b" translate="yes" xml:space="preserve">
          <source>The following properties have been deprecated. Where available, the appropriate replacement is provided.</source>
          <target state="translated">以下のプロパティは非推奨となっています。利用可能な場合は、適切な代替品が提供されます。</target>
        </trans-unit>
        <trans-unit id="6ceac8a5e280ec3f9c80acfd40b4e66ef249da1e" translate="yes" xml:space="preserve">
          <source>The following properties have been obsoleted: &lt;code&gt;align&lt;/code&gt;, &lt;code&gt;axis&lt;/code&gt;, &lt;code&gt;bgColor&lt;/code&gt;, &lt;code&gt;height&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;ch&lt;/code&gt;, &lt;code&gt;chOff&lt;/code&gt;, &lt;code&gt;noWrap&lt;/code&gt;, and &lt;code&gt;vAlign&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;align&lt;/code&gt; 、 &lt;code&gt;axis&lt;/code&gt; 、 &lt;code&gt;bgColor&lt;/code&gt; 、 &lt;code&gt;height&lt;/code&gt; 、 &lt;code&gt;width&lt;/code&gt; 、 &lt;code&gt;ch&lt;/code&gt; 、 &lt;code&gt;chOff&lt;/code&gt; 、 &lt;code&gt;noWrap&lt;/code&gt; 、および &lt;code&gt;vAlign&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ba7ec829e748cc25bede51fb0e2a5704ec26a816" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;allowFullscreen&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;allowFullscreen&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="ae9ec60baa162331f203be7299ebce783b46bc75" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;control&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="f4ea2922e4142c8c188c4d96c3856b3948ab5596" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;download&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;download&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="980d30ca747c998299ab98797c9d5b281e41f2b7" translate="yes" xml:space="preserve">
          <source>The following property has been added: &lt;code&gt;scoped&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが追加されました： &lt;code&gt;scoped&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="8a8340e636b5f60ab51b727a2f2f98697c0a645b" translate="yes" xml:space="preserve">
          <source>The following property has been removed: &lt;code&gt;profile&lt;/code&gt;.</source>
          <target state="translated">次のプロパティが削除されました： &lt;code&gt;profile&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a004dfcc4e2fb6306e02db51b6e2aa8c9926ea1b" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;align&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;align&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="cd8bdb68205c26b3479df47bb389f878b2a56a31" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;nohref&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;nohref&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b201f43503b0631e93f31e7e2f9c5f1eafd78cfb" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;scheme&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;scheme&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="bf1b9d2030a0ad21d36ec803f5cf39fd22de9f2a" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;type&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="25ae194a75b8f2ff70996b25da37203a84313673" translate="yes" xml:space="preserve">
          <source>The following property is now obsolete: &lt;code&gt;width&lt;/code&gt;.</source>
          <target state="translated">次のプロパティは廃止されました： &lt;code&gt;width&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2a66d5ab9a4ebbed41a434981b6a6e2112f4a86a" translate="yes" xml:space="preserve">
          <source>The following requests both audio and video without any specific requirements:</source>
          <target state="translated">以下、音声と動画の両方を特になしにお願いします。</target>
        </trans-unit>
        <trans-unit id="8d449485bc3e48e7ba6cfba963eddbf84784d3f7" translate="yes" xml:space="preserve">
          <source>The following sample is not optimized. It does not make use of .NET 4.5 Websocket support.</source>
          <target state="translated">以下のサンプルは最適化されていません。.NET 4.5 Websocketのサポートを利用していません。</target>
        </trans-unit>
        <trans-unit id="a4390c0b3b9e6eb1850207aad3e4d78393d8f404" translate="yes" xml:space="preserve">
          <source>The following script illustrates the use of &lt;code&gt;createJavaScriptNode()&lt;/code&gt;:</source>
          <target state="translated">次のスクリプトは、 &lt;code&gt;createJavaScriptNode()&lt;/code&gt; の使用方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2efc08fc5fafa2d1a99ec29aaeae8e8165d2599f" translate="yes" xml:space="preserve">
          <source>The following shows how to specify a basic and advanced set of constraints. It specifies that the page or web app needs a width between 640 and 1280 and a height between 480 and 720, with the later number in each pair being preferred. The advanced property further specifies that an image size of 1920 by 1280 is the preferred or an aspect ratio of 1.333 if that is not available. Note that these constraints also illustrate what the spec refers to as a &lt;em&gt;backoff strategy&lt;/em&gt;.</source>
          <target state="translated">以下は、制約の基本セットと詳細セットを指定する方法を示しています。これは、ページまたはWebアプリが640〜1280の幅と480〜720の高さを必要とすることを指定します。各ペアの後半の数値が優先されます。さらに、詳細プロパティは、1920 x 1280の画像サイズが推奨されるか、それが利用できない場合は1.333のアスペクト比であることを指定します。これらの制約は、仕様が&lt;em&gt;バックオフ戦略&lt;/em&gt;と呼ぶものも示していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="9fcee6ef9722b7fbb31ee3dc2c9420a162e09331" translate="yes" xml:space="preserve">
          <source>The following simple code snippet, registers a single handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; events. When the &lt;code&gt;src&lt;/code&gt; element is touched, the element's width and height will be calculate based on the touch point's &lt;code&gt;radiusX&lt;/code&gt; and &lt;code&gt;radiusY&lt;/code&gt; values and the element will then be rotated using the touch point's &lt;code&gt;rotationAngle&lt;/code&gt;.</source>
          <target state="translated">次の簡単なコードスニペットは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchstart&quot;&gt;touchstart&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchmove&quot;&gt;touchmove&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; イベントの単一のハンドラーを登録します。場合 &lt;code&gt;src&lt;/code&gt; 要素がタッチされ、要素の幅と高さを計算し、タッチポイントのに基づいて説明する &lt;code&gt;radiusX&lt;/code&gt; と &lt;code&gt;radiusY&lt;/code&gt; 値および要素は、次に、タッチポイントの使用回転される &lt;code&gt;rotationAngle&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6bbdb29db1d0c94109f1a7c92a3292460db82004" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video chunk by chunk as fast as possible, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次の簡単な例では、ビデオチャンクを可能な限り高速にチャンクごとにロードし、できるだけ早く再生します。この例はNick Desaulniersによって作成され、&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;ここでライブで表示&lt;/a&gt;できます（詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードすることもできます）。</target>
        </trans-unit>
        <trans-unit id="e9daee8c94d2e723d971c30ced2186df50e1d60f" translate="yes" xml:space="preserve">
          <source>The following simple example loads a video with &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt;, playing it as soon as it can. This example was written by Nick Desaulniers and can be &lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;viewed live here&lt;/a&gt; (you can also &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次の簡単な例では、&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;を使用して動画を読み込み、できるだけ早く再生します。この例はNick Desaulniersによって作成され、&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;ここでライブで表示&lt;/a&gt;できます（詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードすることもできます）。</target>
        </trans-unit>
        <trans-unit id="1a55e4d8bfb84a88b63ff842a0ace53c76094e91" translate="yes" xml:space="preserve">
          <source>The following simple example registers a service worker example, an then adds an event handler to a button so you can explicitly update the service worker whenever desired:</source>
          <target state="translated">次の簡単な例では、サービス ワーカーの例を登録し、ボタンにイベント ハンドラを追加して、サービス ワーカーをいつでも明示的に更新できるようにしています。</target>
        </trans-unit>
        <trans-unit id="617fc251290155a680172f5f4801ef9cb2ba30f6" translate="yes" xml:space="preserve">
          <source>The following simple example registers a service worker example, but then immediately unregisters it again:</source>
          <target state="translated">以下の簡単な例では、サービスワーカーの例を登録しますが、すぐに再び登録を解除します。</target>
        </trans-unit>
        <trans-unit id="b51fb322fb3194ebc213fd36c4afcd7969fb5f83" translate="yes" xml:space="preserve">
          <source>The following simple example shows a function that can be used to set a custom field of view with four specified degree values for up, right, down and left. The &lt;a href=&quot;../vrfieldofview/vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView()&lt;/code&gt;&lt;/a&gt; constructor is used to create a &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; object from the supplied values, which is then fed into the &lt;code&gt;setFieldOfView()&lt;/code&gt; method (the default &lt;code&gt;zNear&lt;/code&gt; and &lt;code&gt;zFar&lt;/code&gt; values are always used, in this case.)</source>
          <target state="translated">次の簡単な例は、上、右、下、左の4つの指定された度の値でカスタム視野を設定するために使用できる関数を示しています。&lt;a href=&quot;../vrfieldofview/vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView()&lt;/code&gt; &lt;/a&gt;コンストラクタを作成するために使用され&lt;a href=&quot;../vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView&lt;/code&gt; の&lt;/a&gt;その後に供給され、供給された値からオブジェクトを &lt;code&gt;setFieldOfView()&lt;/code&gt; メソッド（デフォルト &lt;code&gt;zNear&lt;/code&gt; と &lt;code&gt;zFar&lt;/code&gt; 値は常にこの場合には、使用されています。）</target>
        </trans-unit>
        <trans-unit id="5a7d41c5f1fb0748bc1a09a0e883699ed5b53cd4" translate="yes" xml:space="preserve">
          <source>The following simple example shows a function that can be used to set a custom field of view with four specified degree values for up, right, down and left. The &lt;code&gt;VRFieldOfView()&lt;/code&gt; constructor is used to create a &lt;a href=&quot;../vrfieldofview&quot;&gt;&lt;code&gt;VRFieldOfView&lt;/code&gt;&lt;/a&gt; object from the supplied values, which is then fed into the &lt;a href=&quot;../hmdvrdevice/setfieldofview&quot;&gt;&lt;code&gt;HMDVRDevice.setFieldOfView&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">次の簡単な例は、上、右、下、左の4つの指定された度の値でカスタム視野を設定するために使用できる関数を示しています。 &lt;code&gt;VRFieldOfView()&lt;/code&gt; コンストラクタを作成するために使用され&lt;a href=&quot;../vrfieldofview&quot;&gt; &lt;code&gt;VRFieldOfView&lt;/code&gt; の&lt;/a&gt;その後に供給され、供給された値からオブジェクトを&lt;a href=&quot;../hmdvrdevice/setfieldofview&quot;&gt; &lt;code&gt;HMDVRDevice.setFieldOfView&lt;/code&gt; の&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit id="7f3908dd528be5154d6daac0a0350f268b9df9c3" translate="yes" xml:space="preserve">
          <source>The following simple example shows how to create an &lt;code&gt;AudioBuffer&lt;/code&gt; and fill it with random white noise. You can find the full source code at our &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;webaudio-examples&lt;/a&gt; repository; a &lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;running live&lt;/a&gt; version is also available.</source>
          <target state="translated">次の簡単な例は、 &lt;code&gt;AudioBuffer&lt;/code&gt; を作成し、ランダムなホワイトノイズで埋める方法を示しています。完全なソースコードは、&lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;webaudio-examples&lt;/a&gt;リポジトリにあります。&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;実行中のライブ&lt;/a&gt;バージョンも入手可能です。</target>
        </trans-unit>
        <trans-unit id="0aaed96607a9eb8989fd88d3b37348479fa11ee0" translate="yes" xml:space="preserve">
          <source>The following simple example shows how you could separate a stereo track (say, a piece of music), and process the left and right channel differently. To use them, you need to use the second and third parameters of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt;&lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt;&lt;/a&gt; method, which allow you to specify the index of the channel to connect from and the index of the channel to connect to.</source>
          <target state="translated">次の簡単な例は、ステレオトラック（音楽など）を分離し、左右のチャネルを別々に処理する方法を示しています。それらを使用するには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioNode/connect(AudioNode)&quot;&gt; &lt;code&gt;AudioNode.connect(AudioNode)&lt;/code&gt; &lt;/a&gt;メソッドの2番目と3番目のパラメーターを使用する必要があります。これにより、接続元のチャネルのインデックスと接続先のチャネルのインデックスを指定できます。</target>
        </trans-unit>
        <trans-unit id="1ec998ed871fe631ecf6cff26f43ec1a15898cfa" translate="yes" xml:space="preserve">
          <source>The following sized formats become &lt;strong&gt;color-renderable&lt;/strong&gt;:</source>
          <target state="translated">次のサイズのフォーマットは、&lt;strong&gt;カラーレンダリング可能に&lt;/strong&gt;なります。</target>
        </trans-unit>
        <trans-unit id="a334cac117a121f75de4d55a7d0d4d6eb76a64a1" translate="yes" xml:space="preserve">
          <source>The following snippet (see our &lt;a href=&quot;http://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDevice example&lt;/a&gt;) returns an array of all the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt;&lt;code&gt;VRDevice&lt;/code&gt;&lt;/a&gt;s connected to your computer via &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt;&lt;code&gt;Navigator.getVRDevices()&lt;/code&gt;&lt;/a&gt;. For each connected device it then prints out the &lt;code&gt;hardwareUnitId&lt;/code&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt;&lt;code&gt;VRDevice.deviceId&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt;&lt;code&gt;VRDevice.deviceName&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のスニペット（&lt;a href=&quot;http://mdn.github.io/webvr-tests/vrdevice/&quot;&gt;VRDeviceの例を&lt;/a&gt;参照）は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getVRDevices&quot;&gt; &lt;code&gt;Navigator.getVRDevices()&lt;/code&gt; を&lt;/a&gt;介してコンピューターに接続されているすべての&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay&quot;&gt; &lt;code&gt;VRDevice&lt;/code&gt; &lt;/a&gt;の配列を返します。次に、接続されたデバイスごとに、 &lt;code&gt;hardwareUnitId&lt;/code&gt; 、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceId&quot;&gt; &lt;code&gt;VRDevice.deviceId&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDevice/deviceName&quot;&gt; &lt;code&gt;VRDevice.deviceName&lt;/code&gt; を出力し&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="457f5d04c88565917f43dfac13214bd074e2fa88" translate="yes" xml:space="preserve">
          <source>The following snippet accesses the current domain's local &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object and adds a data item to it using &lt;a href=&quot;../storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のスニペットは、現在のドメインのローカル&lt;a href=&quot;../storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt;オブジェクトにアクセスし、&lt;a href=&quot;../storage/setitem&quot;&gt; &lt;code&gt;Storage.setItem()&lt;/code&gt; &lt;/a&gt;を使用してそれにデータ項目を追加します。</target>
        </trans-unit>
        <trans-unit id="fed9e87e119969d675a88209e404113a28406dd4" translate="yes" xml:space="preserve">
          <source>The following snippet accesses the current domain's session &lt;a href=&quot;../storage&quot;&gt;&lt;code&gt;Storage&lt;/code&gt;&lt;/a&gt; object and adds a data item to it using &lt;a href=&quot;../storage/setitem&quot;&gt;&lt;code&gt;Storage.setItem()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のスニペットは、現在のドメインのセッション&lt;a href=&quot;../storage&quot;&gt; &lt;code&gt;Storage&lt;/code&gt; &lt;/a&gt;オブジェクトにアクセスし、&lt;a href=&quot;../storage/setitem&quot;&gt; &lt;code&gt;Storage.setItem()&lt;/code&gt; &lt;/a&gt;を使用してそれにデータ項目を追加します。</target>
        </trans-unit>
        <trans-unit id="ba0244756728a50c0765beef0b4721b1698b3625" translate="yes" xml:space="preserve">
          <source>The following snippet comes from &lt;a href=&quot;../service_worker_api/using_service_workers#Install_and_activate.3A_populating_your_cache&quot;&gt;Using Service Workers&lt;/a&gt;; go there for more details.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;../service_worker_api/using_service_workers#Install_and_activate.3A_populating_your_cache&quot;&gt;サービスワーカーの使用&lt;/a&gt;からのものです。詳細については、そこに行ってください。</target>
        </trans-unit>
        <trans-unit id="240c5a73fff654922ff506bc2264d123bdd90528" translate="yes" xml:space="preserve">
          <source>The following snippet comes from &lt;a href=&quot;../service_worker_api/using_service_workers#Updating_your_service_worker&quot;&gt;Using Service Workers&lt;/a&gt;; go there for more details.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;../service_worker_api/using_service_workers#Updating_your_service_worker&quot;&gt;サービスワーカーの使用&lt;/a&gt;からのものです。詳細については、そこに行ってください。</target>
        </trans-unit>
        <trans-unit id="de570ef0cc4fd015eda992f4688f44ba889a97c9" translate="yes" xml:space="preserve">
          <source>The following snippet fires a notification; a simple &lt;code&gt;options&lt;/code&gt; object is created, then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">次のスニペットは通知を発生させます。単純な &lt;code&gt;options&lt;/code&gt; オブジェクトが作成され、 &lt;code&gt;Notification()&lt;/code&gt; コンストラクタを使用して通知が発生します。</target>
        </trans-unit>
        <trans-unit id="2514c9568e3a7b89e3d9c897679c74245d0200c3" translate="yes" xml:space="preserve">
          <source>The following snippet is based on a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次のスニペットは、Nick Desaulniersが作成した簡単な例に基づいています（&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;デモ全体をライブ&lt;/a&gt;で表示するか、詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードしてください）。</target>
        </trans-unit>
        <trans-unit id="72325033b7e522f00c5fb59a2aee669eb1445c62" translate="yes" xml:space="preserve">
          <source>The following snippet is excerpted from our &lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;Speech synthesiser demo&lt;/a&gt;.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/web-speech-api/tree/master/speak-easy-synthesis&quot;&gt;スピーチシンセサイザーのデモ&lt;/a&gt;からの抜粋です。</target>
        </trans-unit>
        <trans-unit id="df97881cdcc699da0872492a819dff3185d0ccb3" translate="yes" xml:space="preserve">
          <source>The following snippet is from a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次のスニペットは、Nick Desaulniersによって書かれた簡単な例からのものです（&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;完全なデモをライブ&lt;/a&gt;で表示するか、詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードしてください）。</target>
        </trans-unit>
        <trans-unit id="2d3422ae4b7d1141eefbeae98d1ff9ed4b5faff0" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to create a notification that also triggers a device vibration; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">次のスニペットは、デバイスのバイブレーションもトリガーする通知を作成することを目的としています。単純な &lt;code&gt;options&lt;/code&gt; オブジェクトが作成され、 &lt;code&gt;Notification()&lt;/code&gt; コンストラクタを使用して通知が発生します。</target>
        </trans-unit>
        <trans-unit id="1f9b70c1893a9f85337dc0f6282c583f813de3bd" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to fire a notification that renotifies the user after it has been replaced; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">次のスニペットは、交換後にユーザーに再通知する通知を発行することを目的としています。単純な &lt;code&gt;options&lt;/code&gt; オブジェクトが作成され、 &lt;code&gt;Notification()&lt;/code&gt; コンストラクタを使用して通知が発生します。</target>
        </trans-unit>
        <trans-unit id="54a960e1233f36c8039008ae1581c185d1566349" translate="yes" xml:space="preserve">
          <source>The following snippet is intended to fire a silent notification; a simple &lt;code&gt;options&lt;/code&gt; object is created, and then the notification is fired using the &lt;code&gt;Notification()&lt;/code&gt; constructor.</source>
          <target state="translated">次のスニペットは、サイレント通知を起動することを目的としています。単純な &lt;code&gt;options&lt;/code&gt; オブジェクトが作成され、 &lt;code&gt;Notification()&lt;/code&gt; コンストラクタを使用して通知が発生します。</target>
        </trans-unit>
        <trans-unit id="43c6c8734f601a5eed0db097efa6b6695a66a1b5" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from a simple example written by Nick Desaulniers (&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;view the full demo live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;download the source&lt;/a&gt; for further investigation.)</source>
          <target state="translated">次のスニペットは、Nick Desaulniersによって書かれた簡単な例から抜粋したものです（&lt;a href=&quot;http://nickdesaulniers.github.io/netfix/demo/bufferAll.html&quot;&gt;デモ全体をライブ&lt;/a&gt;で見るか、詳細な調査のために&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferAll.html&quot;&gt;ソース&lt;/a&gt;をダウンロードしてください）。</target>
        </trans-unit>
        <trans-unit id="beb73a2cb8b33cc2c1b40bb31d4d41bbf7c64336" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;code&gt;onstatechange&lt;/code&gt; hander is used to log the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt;&lt;code&gt;state&lt;/code&gt;&lt;/a&gt; to the console every time it changes.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から取得したものです（&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;実際に実行されていることを確認してください&lt;/a&gt;） &lt;code&gt;onstatechange&lt;/code&gt; は、変更されるたびに現在の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/State&quot;&gt; &lt;code&gt;state&lt;/code&gt; &lt;/a&gt;をコンソールに記録するために使用されます。</target>
        </trans-unit>
        <trans-unit id="38c6adaeda835cb4f4b23b37a7a925fd9aa8ae00" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;a href=&quot;../audiocontext/suspend&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;code&gt;resume()&lt;/code&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から取得したものです（&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;ライブで実行されているのを確認してください&lt;/a&gt;）。一時停止/再開ボタンをクリックすると、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt;が照会されます。 &lt;code&gt;running&lt;/code&gt; 場合は、&lt;a href=&quot;../audiocontext/suspend&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt;が呼び出されます。 &lt;code&gt;suspended&lt;/code&gt; 場合は、 &lt;code&gt;resume()&lt;/code&gt; が呼び出されます。どちらの場合も、ボタンのテキストラベルは、promiseが解決されると適切に更新されます。</target>
        </trans-unit>
        <trans-unit id="91143cc5df98401da6439e3a0f4134788f38b5f0" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the suspend/resume button is clicked, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt;&lt;code&gt;AudioContext.state&lt;/code&gt;&lt;/a&gt; is queried &amp;mdash; if it is &lt;code&gt;running&lt;/code&gt;, &lt;code&gt;suspend()&lt;/code&gt; is called; if it is &lt;code&gt;suspended&lt;/code&gt;, &lt;a href=&quot;../baseaudiocontext/resume&quot;&gt;&lt;code&gt;resume()&lt;/code&gt;&lt;/a&gt; is called. In each case, the text label of the button is updated as appropriate once the promise resolves.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/audiocontext-states/settings&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から取得したものです（&lt;a href=&quot;http://mdn.github.io/audiocontext-states/&quot;&gt;ライブで実行されているのを確認してください&lt;/a&gt;）。一時停止/再開ボタンをクリックすると、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/state&quot;&gt; &lt;code&gt;AudioContext.state&lt;/code&gt; &lt;/a&gt;が照会されます。 &lt;code&gt;running&lt;/code&gt; 場合は、 &lt;code&gt;suspend()&lt;/code&gt; が呼び出されます。 &lt;code&gt;suspended&lt;/code&gt; 場合は、&lt;a href=&quot;../baseaudiocontext/resume&quot;&gt; &lt;code&gt;resume()&lt;/code&gt; &lt;/a&gt;が呼び出されます。どちらの場合も、ボタンのテキストラベルは、promiseが解決されると適切に更新されます。</target>
        </trans-unit>
        <trans-unit id="278711f80cd4f70bd587e31deb1ba93ca8206029" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/slotchange&quot;&gt;slotchange example&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/web-components-examples/slotchange/&quot;&gt;see it live also&lt;/a&gt;).</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/slotchange&quot;&gt;slotchangeの例&lt;/a&gt;から抜粋したものです（実際に&lt;a href=&quot;https://mdn.github.io/web-components-examples/slotchange/&quot;&gt;ご覧ください&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="f43d25a9601cb720c4f6f5fb7d2a5b4e47df6467" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/onstatechange&quot;&gt;&lt;code&gt;AudioContext.onstatechange&lt;/code&gt;&lt;/a&gt; hander is used to log the current state to the console every time it changes.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/webaudio-examples&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から抜粋したものです（&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;実際に実行されていることを確認してください&lt;/a&gt;）&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/onstatechange&quot;&gt; &lt;code&gt;AudioContext.onstatechange&lt;/code&gt; &lt;/a&gt;は、変更されるたびに現在の状態をコンソールに記録するために使用されます。</target>
        </trans-unit>
        <trans-unit id="2cc52709cb8d1588f44ef12f2f804dc6f1d560dc" translate="yes" xml:space="preserve">
          <source>The following snippet is taken from our &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audiocontext-states/index.html&quot;&gt;AudioContext states demo&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;see it running live&lt;/a&gt;.) When the stop button is clicked, &lt;code&gt;close()&lt;/code&gt; is called. When the promise resolves, the example is reset to its beginning state.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audiocontext-states/index.html&quot;&gt;AudioContextの状態のデモ&lt;/a&gt;から取得したものです（&lt;a href=&quot;https://mdn.github.io/webaudio-examples/audiocontext-states/&quot;&gt;ライブで実行されていることを確認してください&lt;/a&gt;）。停止ボタンをクリックすると、 &lt;code&gt;close()&lt;/code&gt; が呼び出されます。promiseが解決すると、例は開始状態にリセットされます。</target>
        </trans-unit>
        <trans-unit id="4fe202609423894409975fd964be992d57404a90" translate="yes" xml:space="preserve">
          <source>The following snippet requests permission from the user, then logs a different result to the console depending on the users' choice.</source>
          <target state="translated">以下のスニペットは、ユーザーに許可を要求し、ユーザーの選択に応じて異なる結果をコンソールに記録します。</target>
        </trans-unit>
        <trans-unit id="9014c78a57a156cfb97e3754e18015825789076c" translate="yes" xml:space="preserve">
          <source>The following snippet shows the results of testing for the existence of &lt;code&gt;username&lt;/code&gt; in the &lt;code&gt;FormData&lt;/code&gt; object, before and after appending a &lt;code&gt;username&lt;/code&gt; value to it with &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">次のスニペットショーの存在を試験した結果 &lt;code&gt;username&lt;/code&gt; で &lt;code&gt;FormData&lt;/code&gt; 追加する前と後に、対象 &lt;code&gt;username&lt;/code&gt; とそれに値を&lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="14ce2d252042d387adc5b9436e0a2bb3a7228baf" translate="yes" xml:space="preserve">
          <source>The following snippets are taken from our &lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/life-cycle-callbacks&quot;&gt;life-cycle-callbacks&lt;/a&gt; example (&lt;a href=&quot;https://mdn.github.io/web-components-examples/life-cycle-callbacks&quot;&gt;see it live also&lt;/a&gt;), which creates an element that displays a square of a size and color specified in the element's attributes.</source>
          <target state="translated">次のスニペットは、&lt;a href=&quot;https://github.com/mdn/web-components-examples/tree/master/life-cycle-callbacks&quot;&gt;ライフサイクルコールバックの&lt;/a&gt;例（&lt;a href=&quot;https://mdn.github.io/web-components-examples/life-cycle-callbacks&quot;&gt;ライブも参照&lt;/a&gt;）から抜粋したもので、要素の属性で指定されたサイズと色の正方形を表示する要素を作成します。</target>
        </trans-unit>
        <trans-unit id="67ef3f9dc7d5caba906229758a1ef9d8bfceaa22" translate="yes" xml:space="preserve">
          <source>The following special attributes may also be specified:</source>
          <target state="translated">また、以下の特殊属性を指定することもできます。</target>
        </trans-unit>
        <trans-unit id="2f96fae6ce5ceff5ac67507957a759cce4424df0" translate="yes" xml:space="preserve">
          <source>The following strings are permitted values for the facing mode. These may represent separate cameras, or they may represent directions in which an adjustable camera can be pointed.</source>
          <target state="translated">以下の文字列は、フェーシングモードに許可された値です。これらは別々のカメラを表している場合もあれば、調整可能なカメラを向ける方向を表している場合もあります。</target>
        </trans-unit>
        <trans-unit id="b869ceb7f13de7970a1ce24e07ddc38b172a5db1" translate="yes" xml:space="preserve">
          <source>The following strings represent the possible orientation requirements you may specify.</source>
          <target state="translated">以下の文字列は、指定可能な方向の要件を表しています。</target>
        </trans-unit>
        <trans-unit id="099adc8329d830f794c00acd033b1da0b448b1ab" translate="yes" xml:space="preserve">
          <source>The following strings will be displayed in the user's console:</source>
          <target state="translated">ユーザーのコンソールには、以下の文字列が表示されます。</target>
        </trans-unit>
        <trans-unit id="2f172756246c880f3029487fd72e505a75fca45a" translate="yes" xml:space="preserve">
          <source>The following table briefly describes these data types.</source>
          <target state="translated">以下の表では、これらのデータ型について簡単に説明します。</target>
        </trans-unit>
        <trans-unit id="587d2f2a8aaeeadc0c0001bb3f9aa1f4b4a19bea" translate="yes" xml:space="preserve">
          <source>The following table shows the different ways the keys are supplied:</source>
          <target state="translated">以下の表は、キーの供給方法の違いを示しています。</target>
        </trans-unit>
        <trans-unit id="37eab136705d14ae80a537b8e821daf9f9baf8e4" translate="yes" xml:space="preserve">
          <source>The following table shows the return values for different elements:</source>
          <target state="translated">以下の表は、異なる要素の戻り値を示しています。</target>
        </trans-unit>
        <trans-unit id="6939c3cf5d5b611835b8cd9c48b653edb97f3222" translate="yes" xml:space="preserve">
          <source>The following tables show what code values are used for each native scancode or virtual keycode on major platforms. Because some browsers choose to interpret physical keys differently, there are some differences in which keys map to which codes. These tables show those variations when known.</source>
          <target state="translated">以下の表は、主要なプラットフォーム上でネイティブスキャンコードや仮想キーコードに使用されるコード値を示しています。ブラウザによっては物理キーの解釈が異なるため、どのキーがどのコードに対応するかに違いがあります。これらの表は、それらの違いがわかっている場合に示しています。</target>
        </trans-unit>
        <trans-unit id="af4521bc495383ef37b6bffc2fc840203d23a965" translate="yes" xml:space="preserve">
          <source>The following tags are the HTML tags allowed in a cue and require opening and closing tags (e.g. &lt;code&gt;&amp;lt;b&amp;gt;text&amp;lt;/b&amp;gt;&lt;/code&gt;).</source>
          <target state="translated">次のタグは、キューで使用できるHTMLタグであり、開始タグと終了タグが必要です（例： &lt;code&gt;&amp;lt;b&amp;gt;text&amp;lt;/b&amp;gt;&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="dff431f40d7ff60d18d6833fbddc178194c47f3a" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.confirm and DOM:window.alert Dialog boxes are modal windows; they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window).</source>
          <target state="translated">以下のテキストは、この記事の DOM:window.confirm と DOM:window.alert の間で共有されています。 ダイアログボックスはモーダルウィンドウであり、ダイアログボックスが閉じられるまで、ユーザーがプログラムの残りのインターフェイスにアクセスすることを防ぎます。このため、ダイアログボックス(またはモーダルウィンドウ)を作成する関数を使いすぎてはいけません。</target>
        </trans-unit>
        <trans-unit id="cc96ab269e85a3c2dc2cf5a1982bf7fae6b0eacb" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.prompt and DOM:window.alert Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window). And regardless, there are very good reasons to &lt;a href=&quot;http://alistapart.com/article/neveruseawarning&quot;&gt;avoid using dialog boxes for confirmation&lt;/a&gt;.</source>
          <target state="translated">次のテキストは、この記事で共有されています。DOM：window.promptとDOM：window.alertダイアログボックスはモーダルウィンドウです。ダイアログボックスが閉じるまで、ユーザーはプログラムの残りのインターフェイスにアクセスできません。このため、ダイアログボックス（またはモーダルウィンドウ）を作成する関数を使いすぎないでください。&lt;a href=&quot;http://alistapart.com/article/neveruseawarning&quot;&gt;とにかく、確認のためにダイアログボックスを使用&lt;/a&gt;しないようにするのには十分な理由があります。</target>
        </trans-unit>
        <trans-unit id="15e06a226e5cbfcfe7eeef8afee245aef503569f" translate="yes" xml:space="preserve">
          <source>The following text is shared between this article, DOM:window.prompt and DOM:window.confirm Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box (or modal window).</source>
          <target state="translated">以下のテキストは、この記事、DOM:window.prompt と DOM:window.confirm の間で共有されています。 ダイアログボックスはモーダルウィンドウです-ダイアログボックスが閉じられるまで、ユーザーがプログラムの残りのインターフェイスにアクセスすることを防ぎます。このため、ダイアログボックス(またはモーダルウィンドウ)を作成する関数を使いすぎてはいけません。</target>
        </trans-unit>
        <trans-unit id="4a320c8e0d82a5ff008d8131b1a9708ec9aa9d7d" translate="yes" xml:space="preserve">
          <source>The following types are also permitted as descendants of the root node, in addition to &lt;code&gt;Node&lt;/code&gt; and &lt;code&gt;Attr&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; および &lt;code&gt;Attr&lt;/code&gt; に加えて、ルートノードの子孫として次のタイプも許可されます。</target>
        </trans-unit>
        <trans-unit id="44df6ec9f734ad3e2857bb208a65af405d15858b" translate="yes" xml:space="preserve">
          <source>The following types are used in &lt;a href=&quot;../webgl_api&quot;&gt;WebGL&lt;/a&gt; interfaces.</source>
          <target state="translated">以下のタイプは、&lt;a href=&quot;../webgl_api&quot;&gt;WebGL&lt;/a&gt;インターフェースで使用されます。</target>
        </trans-unit>
        <trans-unit id="12f6529433316717f49ccef56d04b522bdd179f1" translate="yes" xml:space="preserve">
          <source>The following would set up a simple audio graph, featuring an &lt;code&gt;AudioDestinationNode&lt;/code&gt; with &lt;code&gt;maxChannelCount&lt;/code&gt; of 2:</source>
          <target state="translated">次の例では、 &lt;code&gt;maxChannelCount&lt;/code&gt; が2の &lt;code&gt;AudioDestinationNode&lt;/code&gt; を特徴とするシンプルなオーディオグラフを設定します。</target>
        </trans-unit>
        <trans-unit id="c3dfc201b0ad1a5f86d4eaab4e4f4a4ab7820a4a" translate="yes" xml:space="preserve">
          <source>The font source. This can be either:</source>
          <target state="translated">フォントのソース。これはどちらでも構いません。</target>
        </trans-unit>
        <trans-unit id="51e1c1c17699a8587a876e229f70d9cdefa7b050" translate="yes" xml:space="preserve">
          <source>The form controls in the returned collection are in the same order in which they appear in the form by following a preorder, depth-first traversal of the tree. This is called &lt;strong&gt;tree order&lt;/strong&gt;.</source>
          <target state="translated">返されたコレクション内のフォームコントロールは、ツリーのプレオーダーの深さ優先トラバーサルに従うことにより、フォームに表示される順序と同じです。これは&lt;strong&gt;ツリー順&lt;/strong&gt;と呼ばれ&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="124a0f04f43a018ba98a8d22bd1275aa2d6b26a9" translate="yes" xml:space="preserve">
          <source>The form that this legend belongs to. If the legend has a fieldset element as its parent, then this attribute returns the same value as the &lt;strong&gt;form&lt;/strong&gt; attribute on the parent fieldset element. Otherwise, it returns null.</source>
          <target state="translated">この伝説が属する形。凡例に親としてfieldset要素がある場合、この属性は親fieldset要素の&lt;strong&gt;form&lt;/strong&gt;属性と同じ値を返します。それ以外の場合は、nullを返します。</target>
        </trans-unit>
        <trans-unit id="70f3b6ba6a96241580d1a54f82c3d94867d47693" translate="yes" xml:space="preserve">
          <source>The format of the ID string is not defined by the specification, so you cannot reliably make any assumptions about the contents of the string, or assume that the format of the string will remain unchanged for a given object type.</source>
          <target state="translated">ID文字列のフォーマットは仕様では定義されていないので、文字列の内容を確実に仮定したり、与えられたオブジェクトタイプに対して文字列のフォーマットが変更されないと仮定したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="b8a4ee2e37ccf04ab80c411770e74d74cd1d9357" translate="yes" xml:space="preserve">
          <source>The format of the string must follow one of the following HTML microsyntax:</source>
          <target state="translated">文字列のフォーマットは、以下のHTMLマイクロシンタックスのいずれかに従わなければなりません。</target>
        </trans-unit>
        <trans-unit id="b07887490e8e70b0a98f842832497826704c2208" translate="yes" xml:space="preserve">
          <source>The format of the string must follow one of the following HTML microsyntaxes:</source>
          <target state="translated">文字列のフォーマットは、以下のHTMLマイクロシンタックスのいずれかに従わなければなりません。</target>
        </trans-unit>
        <trans-unit id="cd54e78ac53c76fd1d9c1efce5fd1406ad0f9364" translate="yes" xml:space="preserve">
          <source>The format of this message (as is the case with everything you do when handling signaling) is entirely up to you, depending on your needs; you can provide other information as required.</source>
          <target state="translated">このメッセージのフォーマットは(シグナリングを処理するときに行うすべてのことと同様に)、必要に応じて完全にあなた次第です。</target>
        </trans-unit>
        <trans-unit id="1d6a24afb0dece7dca5485bc27e2ff6b4f4a4a3b" translate="yes" xml:space="preserve">
          <source>The formats are Unicode strings giving the type or format of the data, generally given by a MIME type. Some values that are not MIME types are special-cased for legacy reasons (for example &quot;&lt;code&gt;text&lt;/code&gt;&quot;).</source>
          <target state="translated">フォーマットは、データのタイプまたはフォーマットを指定するUnicode文字列であり、通常はMIMEタイプによって指定されます。MIMEタイプではない一部の値は、従来の理由で特殊なケースになっています（「 &lt;code&gt;text&lt;/code&gt; 」など）。</target>
        </trans-unit>
        <trans-unit id="0087f6fd7646cd44d6104055d0b94fe848721be5" translate="yes" xml:space="preserve">
          <source>The formula for the blending color can be described like this: color(RGBA) = (sourceColor * &lt;em&gt;sfactor&lt;/em&gt;) + (destinationColor * &lt;em&gt;dfactor&lt;/em&gt;). The RBGA values are between 0 and 1.</source>
          <target state="translated">混合色の式は次のように記述できます：color（RGBA）=（sourceColor * &lt;em&gt;sfactor&lt;/em&gt;）+（destinationColor * &lt;em&gt;dfactor&lt;/em&gt;）。RBGA値は0から1の間です。</target>
        </trans-unit>
        <trans-unit id="6818150b763e509afd9bc5e39880ecc483e16e2e" translate="yes" xml:space="preserve">
          <source>The formulas for the blending factors can be described like this (all RGBA values are between 0 and 1):</source>
          <target state="translated">ブレンド係数の計算式は、このように記述することができます(RGBAの値はすべて0から1の間にあります)。</target>
        </trans-unit>
        <trans-unit id="e3e901979eacdd6ab73765b7b88f936e346f65f1" translate="yes" xml:space="preserve">
          <source>The forward properties represent the 3D coordinate position of the listener's forward direction (e.g. the direction they are facing in), while the up properties represent the 3D coordinate position of the top of the listener's head. These two together can nicely set the direction.</source>
          <target state="translated">前方のプロパティは、リスナーの前方方向(例えば、リスナーが向いている方向)の3D座標位置を表し、上方のプロパティは、リスナーの頭頂部の3D座標位置を表します。この2つを合わせることで、きれいに方向を設定することができます。</target>
        </trans-unit>
        <trans-unit id="041c138364aae62ecff69158e7c7a54a6fd35776" translate="yes" xml:space="preserve">
          <source>The four arguments work as follows.</source>
          <target state="translated">4つの引数は以下のように機能します。</target>
        </trans-unit>
        <trans-unit id="1011d851c082a9b956ab13e54bd720393d521e67" translate="yes" xml:space="preserve">
          <source>The fragment is not &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;percent-decoded&lt;/a&gt;. If the URL does not have a fragment identifier, this property contains an empty string, &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">フラグメントは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/percent-encoding&quot;&gt;パーセントデコードされ&lt;/a&gt;ません。URLにフラグメント識別子がない場合、このプロパティには空の文字列 &lt;code&gt;&quot;&quot;&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="e3af9acb9c95cf8e0f793580905b93e7a1b87001" translate="yes" xml:space="preserve">
          <source>The fragment shader</source>
          <target state="translated">フラグメントシェーダ</target>
        </trans-unit>
        <trans-unit id="3df0104722963f36d878a0873d227d82b7fdd249" translate="yes" xml:space="preserve">
          <source>The fragment shader likewise needs to be updated:</source>
          <target state="translated">フラグメントシェーダも同様に更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="64fa5fd9f42ec961467a9058b9d13d5c91b99add" translate="yes" xml:space="preserve">
          <source>The fragment shader now needs to be updated to take into account the lighting value computed by the vertex shader:</source>
          <target state="translated">フラグメントシェーダは、頂点シェーダによって計算された照明値を考慮して更新する必要があります。</target>
        </trans-unit>
        <trans-unit id="5a612e7bbe8d0fe6988d26a61483b15a1bc0a8f2" translate="yes" xml:space="preserve">
          <source>The frame should subsequently be rendered using the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; and matrices provided by the last call to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GetFrameData&quot;&gt;&lt;code&gt;getFrameData()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">フレームはその後、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GetFrameData&quot;&gt; &lt;code&gt;getFrameData()&lt;/code&gt; &lt;/a&gt;への最後の呼び出しによって提供された&lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; &lt;/a&gt;およびマトリックスを使用してレンダリングされます。</target>
        </trans-unit>
        <trans-unit id="2b3d3dea05d6834ea613bf164db65c8fe6e7da20" translate="yes" xml:space="preserve">
          <source>The frequency (in &lt;a href=&quot;https://en.wikipedia.org/wiki/hertz&quot;&gt;hertz&lt;/a&gt;) of the periodic waveform. Its default is 440.</source>
          <target state="translated">周期的な波形の周波数（&lt;a href=&quot;https://en.wikipedia.org/wiki/hertz&quot;&gt;ヘルツ単位&lt;/a&gt;）。デフォルトは440です。</target>
        </trans-unit>
        <trans-unit id="d484ec59c9af026e80edb2fe0d23c7da19757ee1" translate="yes" xml:space="preserve">
          <source>The frequency with the maximal &lt;a href=&quot;http://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;group delay&lt;/a&gt;, that is, the frequency where the center of the phase transition occurs.</source>
          <target state="translated">最大&lt;a href=&quot;http://en.wikipedia.org/wiki/Group_delay_and_phase_delay&quot;&gt;群遅延の&lt;/a&gt;ある周波数、つまり、相転移の中心が発生する周波数。</target>
        </trans-unit>
        <trans-unit id="0fce4873ad033b593cf32077135a92543ed925f8" translate="yes" xml:space="preserve">
          <source>The full &lt;code&gt;RTCStatsReport&lt;/code&gt; interface is made up of a mapping of strings to subdictionaries which contain the statistics for each category, such as ICE candidate or media stream statistics. Each of these subdictionaries has in common the following values:</source>
          <target state="translated">完全な &lt;code&gt;RTCStatsReport&lt;/code&gt; インターフェイスは、ICE候補やメディアストリーム統計など、各カテゴリの統計を含むサブディクショナリへの文字列のマッピングで構成されています。これらの各サブディクショナリには、共通して次の値があります。</target>
        </trans-unit>
        <trans-unit id="ffa910ae7144ef34b200855cd6208b4a0b52608a" translate="yes" xml:space="preserve">
          <source>The function can be defined to take an &lt;code&gt;event&lt;/code&gt; parameter. &lt;a href=&quot;http://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;The return value is treated in a special way, described in the HTML specification&lt;/a&gt;.</source>
          <target state="translated">関数は、 &lt;code&gt;event&lt;/code&gt; パラメータを取るように定義できます。&lt;a href=&quot;http://dev.w3.org/html5/spec/webappapis.html#the-event-handler-processing-algorithm&quot;&gt;戻り値は、HTML仕様で説明されている特別な方法で処理されます&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="99f1ad93ba06b0d818b5733ec2a57a841c9efb3c" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until Chrome 58.</source>
          <target state="translated">この関数は安全でないコンテキストでは存在しません。これはChrome 58まで施行されていませんでした。</target>
        </trans-unit>
        <trans-unit id="b834639c76d4175964d23be8eebc0c701bc271ae" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until Opera 45.</source>
          <target state="translated">この関数は安全でないコンテキストでは存在しません。これはOpera 45まで施行されていませんでした。</target>
        </trans-unit>
        <trans-unit id="7d289fbe4c0a20118120133713010873ee91a8b8" translate="yes" xml:space="preserve">
          <source>The function does not exist in insecure contexts. This was not enforced until version 58.</source>
          <target state="translated">この関数は安全でないコンテキストでは存在しません。これはバージョン 58 まで施行されていませんでした。</target>
        </trans-unit>
        <trans-unit id="13779048c72a0341f84d6e3b9c7129317fe74d21" translate="yes" xml:space="preserve">
          <source>The function should return &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt;, which causes the TreeWalker to return the node, &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt;, which causes the TreeWalker to ignore the entire subtree, or &lt;code&gt;NodeFilter.FILTER_SKIP&lt;/code&gt;.</source>
          <target state="translated">この関数は返すべき &lt;code&gt;NodeFilter.FILTER_ACCEPT&lt;/code&gt; TreeWalkerのノード、戻りさせ、 &lt;code&gt;NodeFilter.FILTER_REJECT&lt;/code&gt; TreeWalkerの全体サブツリー、または無視させ、 &lt;code&gt;NodeFilter.FILTER_SKIP&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="9cc7d21d3594f11e9287cbb36ea5d03221e53307" translate="yes" xml:space="preserve">
          <source>The function that is repeatedly invoked (read/write). It is called with three arguments: &lt;em&gt;index&lt;/em&gt; (the iterative index of each invocation), &lt;em&gt;length&lt;/em&gt; (the number of total invocations assigned to the daemon - finite or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;) and backwards (a boolean expressing whether the &lt;em&gt;index&lt;/em&gt; is decreasing or not) &amp;ndash; see above. If the &lt;code&gt;myDaemon.task&lt;/code&gt; function returns a &lt;code&gt;false&lt;/code&gt; value the &lt;em&gt;daemon&lt;/em&gt; is paused.</source>
          <target state="translated">繰り返し呼び出される関数（読み取り/書き込み）。3つの引数で呼び出されます：&lt;em&gt;インデックス&lt;/em&gt;（各呼び出しの反復インデックス）、&lt;em&gt;長さ&lt;/em&gt;（デーモンに割り当てられた呼び出しの総数-有限または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;）および逆方向（&lt;em&gt;インデックス&lt;/em&gt;が減少しているかどうかを表すブール値）&amp;ndash;上記を参照。場合 &lt;code&gt;myDaemon.task&lt;/code&gt; の関数が返す &lt;code&gt;false&lt;/code&gt; 値を&lt;em&gt;デーモンが&lt;/em&gt;一時停止されています。</target>
        </trans-unit>
        <trans-unit id="ff919696a16860f3c446ef35472c58705a8c1296" translate="yes" xml:space="preserve">
          <source>The function that is repeatedly invoked . &lt;strong&gt;It is called with three parameters&lt;/strong&gt;: &lt;em&gt;index&lt;/em&gt; (the iterative index of each invocation), &lt;em&gt;length&lt;/em&gt; (the number of total invocations assigned to the &lt;em&gt;daemon&lt;/em&gt; - finite or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt;) and &lt;em&gt;backwards&lt;/em&gt; (a boolean expressing whether the &lt;em&gt;index&lt;/em&gt; is increasing or decreasing). It is something like &lt;em&gt;callback&lt;/em&gt;.call(&lt;em&gt;thisObject&lt;/em&gt;, &lt;em&gt;index&lt;/em&gt;, &lt;em&gt;length&lt;/em&gt;, &lt;em&gt;backwards&lt;/em&gt;). &lt;strong&gt;If the callback function returns a &lt;code&gt;false&lt;/code&gt; value the &lt;em&gt;daemon&lt;/em&gt; is paused&lt;/strong&gt;.</source>
          <target state="translated">繰り返し呼び出される関数。&lt;strong&gt;これは、3つのパラメーターで呼び出されます&lt;/strong&gt;：&lt;em&gt;インデックス&lt;/em&gt;（各呼び出しの反復インデックス）、&lt;em&gt;長さ&lt;/em&gt;（&lt;em&gt;デーモンに&lt;/em&gt;割り当てられた呼び出しの合計数-有限または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;）および&lt;em&gt;逆方向&lt;/em&gt;（&lt;em&gt;インデックス&lt;/em&gt;が増加しているか減少しているかを表すブール値）。これは、&lt;em&gt;callback&lt;/em&gt; .call（&lt;em&gt;thisObject&lt;/em&gt;、&lt;em&gt;index&lt;/em&gt;、&lt;em&gt;length&lt;/em&gt;、&lt;em&gt;逆方向&lt;/em&gt;）のようなものです。&lt;strong&gt;コールバック関数が &lt;code&gt;false&lt;/code&gt; 値を返す場合、&lt;em&gt;デーモン&lt;/em&gt;は一時停止してい&lt;/strong&gt;ます。</target>
        </trans-unit>
        <trans-unit id="2c512c5c25a4008fb0fa7e237ea0d8bc60871432" translate="yes" xml:space="preserve">
          <source>The function that we will be using is part of the &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;utility functions&lt;/a&gt;. It takes an array of matrices and multiplies them together. In WebGL shader code, this is built into the language and the * operator can be used. Additionally this example uses a scale and translate function which return matrices as defined above.</source>
          <target state="translated">ここで使用する&lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;関数&lt;/a&gt;は、ユーティリティ関数の一部です。それは行列の配列を取り、それらを一緒に乗算します。WebGLシェーダーコードでは、これは言語に組み込まれており、*演算子を使用できます。さらに、この例では、上記で定義された行列を返すスケール関数と変換関数を使用しています。</target>
        </trans-unit>
        <trans-unit id="f8f3b51a9e8bb8d9b3e6e122bcfcfc0d2161b028" translate="yes" xml:space="preserve">
          <source>The function to be executed (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/function&quot;&gt;function&lt;/a&gt;).</source>
          <target state="translated">実行する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/function&quot;&gt;関数&lt;/a&gt;（function）。</target>
        </trans-unit>
        <trans-unit id="39c8e71128af91596336eb452e7286ea0d2aa576" translate="yes" xml:space="preserve">
          <source>The function to call when it's time to update your animation for the next repaint. The callback function is passed one single argument, a &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;DOMHighResTimeStamp&lt;/code&gt;&lt;/a&gt; returned from &lt;a href=&quot;../performance/now&quot;&gt;&lt;code&gt;performance.now()&lt;/code&gt;&lt;/a&gt;, indicating the point in time when &lt;code&gt;requestAnimationFrame()&lt;/code&gt; starts to execute callback functions.</source>
          <target state="translated">次の再描画のためにアニメーションを更新するときに呼び出される関数。コールバック関数には、単一の引数、&lt;a href=&quot;../performance/now&quot;&gt; &lt;code&gt;performance.now()&lt;/code&gt; &lt;/a&gt;から返される&lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;DOMHighResTimeStamp&lt;/code&gt; &lt;/a&gt;が渡され、 &lt;code&gt;requestAnimationFrame()&lt;/code&gt; がコールバック関数の実行を開始する時点を示します。</target>
        </trans-unit>
        <trans-unit id="118ddaf0d7e0d038f313fb7b5e3733d8da360196" translate="yes" xml:space="preserve">
          <source>The function to execute for each element, taking three arguments:</source>
          <target state="translated">3つの引数を取り、各要素に対して実行する関数。</target>
        </trans-unit>
        <trans-unit id="4bc7abcba83af8b98f18914055591a42c5efab95" translate="yes" xml:space="preserve">
          <source>The function was called with an empty list of store names.</source>
          <target state="translated">この関数は、店舗名の空のリストで呼び出されました。</target>
        </trans-unit>
        <trans-unit id="1663bc9a623697e9b83a522640506562341c8556" translate="yes" xml:space="preserve">
          <source>The function we'll be using as our task handler&amp;mdash;that is, the function that will be used as the value of the task object's &lt;code&gt;handler&lt;/code&gt; property&amp;mdash;is &lt;code&gt;logTaskHandler&lt;/code&gt;(). It's a simple function that outputs a bunch of stuff to the log for each task. In your own application, you'd replace this code with whatever task it is you wish to perform during idle time. Just remember that anything you want to do that changes the DOM needs to be handled through &lt;a href=&quot;window/requestanimationframe&quot;&gt;&lt;code&gt;requestAnimationFrame()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">タスクハンドラーとして使用する関数、つまりタスクオブジェクトの &lt;code&gt;handler&lt;/code&gt; プロパティの値として使用される関数は、 &lt;code&gt;logTaskHandler&lt;/code&gt; （）です。これは、各タスクのログに大量のデータを出力する単純な関数です。独自のアプリケーションでは、このコードをアイドル時間中に実行したいタスクに置き換えます。 DOMを変更するためにやりたいことはすべて、&lt;a href=&quot;window/requestanimationframe&quot;&gt; &lt;code&gt;requestAnimationFrame()&lt;/code&gt; で&lt;/a&gt;処理する必要があることを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="018b1f6ee20d9b15c623644706ca5374bf085d12" translate="yes" xml:space="preserve">
          <source>The functions are used to log event activity to the application window, to support debugging and learning about the event flow.</source>
          <target state="translated">この関数は、イベントのアクティビティをアプリケーションウィンドウに記録するために使用され、デバッグやイベントフローの学習をサポートします。</target>
        </trans-unit>
        <trans-unit id="17b2e9fd5d662441712345f7eb618e097ccd34a4" translate="yes" xml:space="preserve">
          <source>The functions invoked inside the constructor simply return the required object parameters:</source>
          <target state="translated">コンストラクタ内で呼び出された関数は、必要なオブジェクトのパラメータを返すだけです。</target>
        </trans-unit>
        <trans-unit id="20d85c0c3b2679dda5186febb3376fe7275c45ee" translate="yes" xml:space="preserve">
          <source>The gain is a unitless value, changing with time, that is multiplied to each corresponding sample of all input channels. If modified, the new gain is instantly applied, causing unaesthetic 'clicks' in the resulting audio. To prevent this from happening, never change the value directly but use the exponential interpolation methods on the &lt;a href=&quot;audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">ゲインは単位のない値で、時間とともに変化し、すべての入力チャネルの対応する各サンプルに乗算されます。変更すると、新しいゲインが即座に適用され、結果のオーディオに美的でない「クリック」が発生します。これが起こらないようにするには、値を直接変更するのではなく、&lt;a href=&quot;audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; &lt;/a&gt;インターフェースで指数補間法を使用してください。</target>
        </trans-unit>
        <trans-unit id="eaabf74fc177ea1394fb602c44a4fe5fd06cc393" translate="yes" xml:space="preserve">
          <source>The gathering state indicates whether or not the ICE agent has begun gathering candidates, and if so, whether or not gathering has finished. Its possible values are:</source>
          <target state="translated">収集状態はICEエージェントが候補者の収集を開始したかどうかを示し、開始した場合は収集が終了したかどうかを示す。値は以下の通りである。</target>
        </trans-unit>
        <trans-unit id="785a9fed1f671752be81692bc482955696c534a2" translate="yes" xml:space="preserve">
          <source>The generated object is 100 pixels wide and 50 pixels tall, making 5,000 pixels in all. Each pixel within an &lt;code&gt;ImageData&lt;/code&gt; object consists of four array values, so the object's &lt;a href=&quot;../imagedata/data&quot;&gt;&lt;code&gt;data&lt;/code&gt;&lt;/a&gt; property has a length of 4 &amp;times; 5,000, or 20,000.</source>
          <target state="translated">生成されたオブジェクトは幅100ピクセル、高さ50ピクセルで、全体で5,000ピクセルになります。 &lt;code&gt;ImageData&lt;/code&gt; オブジェクト内の各ピクセルは4つの配列値で構成されているため、オブジェクトの&lt;a href=&quot;../imagedata/data&quot;&gt; &lt;code&gt;data&lt;/code&gt; &lt;/a&gt;プロパティの長さは4&amp;times;5,000、つまり20,000です。</target>
        </trans-unit>
        <trans-unit id="67bea8f0b32d9137a521d9e2514558f1502e539a" translate="yes" xml:space="preserve">
          <source>The generic syntax skeleton looks like this:</source>
          <target state="translated">一般的な構文のスケルトンは次のようになります。</target>
        </trans-unit>
        <trans-unit id="0aeecffd6a3d66a9905b2dbf4cd36162a802c40f" translate="yes" xml:space="preserve">
          <source>The geolocation object</source>
          <target state="translated">ジオロケーションオブジェクト</target>
        </trans-unit>
        <trans-unit id="7b75b60fdb1488ade59db9302acd940a599daa7e" translate="yes" xml:space="preserve">
          <source>The given URL does not match another URL. (Legacy code value: &lt;code&gt;21&lt;/code&gt; and legacy constant name: &lt;code&gt;URL_MISMATCH_ERR&lt;/code&gt;)</source>
          <target state="translated">指定されたURLは別のURLと一致しません。（レガシーコード値： &lt;code&gt;21&lt;/code&gt; およびレガシー定数名： &lt;code&gt;URL_MISMATCH_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="628bfb259be7a4fa1db2d527e3b85167e6cdad06" translate="yes" xml:space="preserve">
          <source>The global limit is a &quot;soft limit&quot; since there's a chance that some space will be freed and the operation can continue.</source>
          <target state="translated">グローバルリミットは、ある程度のスペースが解放されて動作を継続できる可能性があるので、「ソフトリミット」となります。</target>
        </trans-unit>
        <trans-unit id="36c3c80fb28b9c6e79d4ea20192420f8464a8db0" translate="yes" xml:space="preserve">
          <source>The global scope of workers. This objects defines &lt;a href=&quot;#workerscope&quot;&gt;worker-specific functions&lt;/a&gt;.</source>
          <target state="translated">労働者のグローバルスコープ。このオブジェクトは、&lt;a href=&quot;#workerscope&quot;&gt;ワーカー固有の機能を&lt;/a&gt;定義します。</target>
        </trans-unit>
        <trans-unit id="7c077e2bc8896d8e1a3ac81c57a3fa9085b0fa6f" translate="yes" xml:space="preserve">
          <source>The grammar</source>
          <target state="translated">文法は</target>
        </trans-unit>
        <trans-unit id="a8587c7b422a4ad7c17d1f12c5019e4a8e5d5ad9" translate="yes" xml:space="preserve">
          <source>The grammar format used is &lt;a href=&quot;http://www.w3.org/TR/jsgf/&quot;&gt;JSpeech Grammar Format&lt;/a&gt; (&lt;strong&gt;JSGF&lt;/strong&gt;) &amp;mdash; you can find a lot more about it at the previous link to its spec. However, for now let's just run through it quickly:</source>
          <target state="translated">使用されている文法フォーマットは&lt;a href=&quot;http://www.w3.org/TR/jsgf/&quot;&gt;JSpeech Grammar Format&lt;/a&gt;（&lt;strong&gt;JSGF&lt;/strong&gt;）です。これについては、その仕様への以前のリンクでさらに詳しく説明しています。ただし、今のところ、簡単に見ていきましょう。</target>
        </trans-unit>
        <trans-unit id="ff7126ef3f8a2e144f217353ede8f0f395dc857c" translate="yes" xml:space="preserve">
          <source>The grid</source>
          <target state="translated">グリッド</target>
        </trans-unit>
        <trans-unit id="b94977a7bcdf0de930dedcd030e9115ea68daa7b" translate="yes" xml:space="preserve">
          <source>The group ID is not usable across multiple browsing sessions. However, it can be used to ensure that audio input and output are both being performed on the same headset, for example, or to ensure that the built-in camera and microphone on a phone are being used for video conferencing purposes.</source>
          <target state="translated">グループ ID は、複数のブラウジングセッションにまたがって使用することはできません。しかし、例えば、音声入力と音声出力の両方が同じヘッドセットで行われていることを確認したり、電話の内蔵カメラとマイクがビデオ会議の目的で使用されていることを確認するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="49f2ad6a68766544272001845469929b3d0171ee" translate="yes" xml:space="preserve">
          <source>The group limit is also called the &quot;hard limit&quot;: it doesn't trigger origin eviction.</source>
          <target state="translated">グループリミットは「ハードリミット」とも呼ばれます。</target>
        </trans-unit>
        <trans-unit id="0df9f5bce3448710ec4c641e898d60e69be1ba01" translate="yes" xml:space="preserve">
          <source>The gyroscope is typically read in the &lt;a href=&quot;../sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">ジャイロスコープは通常、&lt;a href=&quot;../sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt;イベントコールバックで読み取られます。以下の例では、これは1秒に60回発生します。</target>
        </trans-unit>
        <trans-unit id="882926dabaed7a6bcbafe8d08a874c87f2d765cd" translate="yes" xml:space="preserve">
          <source>The gyroscope is typically read in the &lt;a href=&quot;sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">ジャイロスコープは通常、&lt;a href=&quot;sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt;イベントコールバックで読み取られます。以下の例では、これは1秒に60回発生します。</target>
        </trans-unit>
        <trans-unit id="cf1e30de157aad7c9c8ca63b30b4c4456e03753a" translate="yes" xml:space="preserve">
          <source>The handle returned by the &lt;a href=&quot;requestanimationframe&quot;&gt;&lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; call that you want to unregister.</source>
          <target state="translated">登録を解除する&lt;a href=&quot;requestanimationframe&quot;&gt; &lt;code&gt;VRDisplay.requestAnimationFrame()&lt;/code&gt; &lt;/a&gt;呼び出しによって返されたハンドル。</target>
        </trans-unit>
        <trans-unit id="6a6911c94143ab79b4594c2e64266e7249222c2f" translate="yes" xml:space="preserve">
          <source>The handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; event is free to process the drag data in an application specific way. Typically, an application will use the &lt;a href=&quot;datatransfer/getdata&quot;&gt;&lt;code&gt;getData()&lt;/code&gt;&lt;/a&gt; method to retrieve drag items and process them accordingly. Additionally, application semantics may differ depending on the value of the &lt;a href=&quot;datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; and/or the state of modifier keys.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; イベントのハンドラーは、アプリケーション固有の方法でドラッグデータを自由に処理できます。通常、アプリケーションは&lt;a href=&quot;datatransfer/getdata&quot;&gt; &lt;code&gt;getData()&lt;/code&gt; &lt;/a&gt;メソッドを使用してドラッグアイテムを取得し、それに応じて処理します。さらに、アプリケーションのセマンティクスは、&lt;a href=&quot;datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt;の値や修飾キーの状態によって異なります。</target>
        </trans-unit>
        <trans-unit id="028e597e68ef221f6fab8aec24401ac514256c42" translate="yes" xml:space="preserve">
          <source>The handshake is the &quot;Web&quot; in WebSockets. It's the bridge from HTTP to WS. In the handshake, details of the connection are negotiated, and either party can back out before completion if the terms are unfavorable. The server must be careful to understand everything the client asks for, otherwise security issues will be introduced.</source>
          <target state="translated">ハンドシェイクはWebSocketsの「Web」です。HTTPからWSへの橋渡し役です。ハンドシェイクでは、接続の詳細がネゴシエートされ、条件が悪ければ、どちらかの当事者が完了する前にバックアウトすることができます。サーバは、クライアントが要求することをすべて理解していないと、セキュリティ上の問題が発生します。</target>
        </trans-unit>
        <trans-unit id="acb45443dc0323133b5342c3b627edc96183ba35" translate="yes" xml:space="preserve">
          <source>The hashchange event</source>
          <target state="translated">ハッシュチェンジイベント</target>
        </trans-unit>
        <trans-unit id="8fef2e5095e098313bf831bb7ab07cc47c996341" translate="yes" xml:space="preserve">
          <source>The header</source>
          <target state="translated">ヘッダ</target>
        </trans-unit>
        <trans-unit id="8fc9ed6d785e10be433289507738b0c8578d5508" translate="yes" xml:space="preserve">
          <source>The header cell applies to all cells in the current column group that do not already have a scope applied to them. This value is only allowed if the cell is in a column group.</source>
          <target state="translated">ヘッダセルは、現在の列グループ内のすべてのセルに適用され、スコープがまだ適用されていないセルに適用されます。この値は、そのセルがカラムグループ内にある場合にのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="cb07d9fb73079b2efbc4310a05e51e58116d85c3" translate="yes" xml:space="preserve">
          <source>The header cell applies to all cells in the current row group that do not already have a scope applied to them. This value is only allowed if the cell is in a row group.</source>
          <target state="translated">ヘッダセルは、現在の行グループ内のすべてのセルに適用され、スコープがまだ適用されていないセルに適用されます。この値は、そのセルが行グループ内にある場合にのみ許可されます。</target>
        </trans-unit>
        <trans-unit id="5cf0c4b4afe871220746a968aa309813a16018ab" translate="yes" xml:space="preserve">
          <source>The header cell applies to the following cells in the same column (or columns, if &lt;code&gt;colspan&lt;/code&gt; is used as well), until either the end of the column or another &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; in the column establishes a new scope.</source>
          <target state="translated">ヘッダーセルは、列の末尾または列の別の &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; が新しいスコープを確立するまで、同じ列（または &lt;code&gt;colspan&lt;/code&gt; が使用されている場合は列）の次のセルに適用されます。</target>
        </trans-unit>
        <trans-unit id="ec11a0b2eb6ccf34714b1e6169b4ff4756556640" translate="yes" xml:space="preserve">
          <source>The header cell applies to the following cells in the same row (or rows, if &lt;code&gt;rowspan&lt;/code&gt; is used as well), until either the end of the row or another &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; in the same row establishes a new scope.</source>
          <target state="translated">ヘッダーセルは、行の終わりまたは同じ行の別の &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; が新しいスコープを確立するまで、同じ行（または &lt;code&gt;rowspan&lt;/code&gt; が使用されている場合は行）の次のセルに適用されます。</target>
        </trans-unit>
        <trans-unit id="21bc35e4e8cd01a607804d0ab8a46f86c9af6f92" translate="yes" xml:space="preserve">
          <source>The header cell has no predefined scope; the user agent will establish the scope based on contextual clues.</source>
          <target state="translated">ヘッダーセルには事前に定義されたスコープがありません。ユーザーエージェントは、コンテキストの手がかりに基づいてスコープを確立します。</target>
        </trans-unit>
        <trans-unit id="677f5ec4023059fe1cfc57a225bb79b0add95606" translate="yes" xml:space="preserve">
          <source>The header is fairly simple, since for this example all it contains is some text. Its style looks like this:</source>
          <target state="translated">この例では、ヘッダーにはテキストが含まれているだけなので、ヘッダーはかなりシンプルです。スタイルは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="070f1e647da215ad888d0969167e0dcbf3485a21" translate="yes" xml:space="preserve">
          <source>The height (magnitude on the Y axis), in CSS pixels, of the contact geometry of the pointer.</source>
          <target state="translated">ポインタの接触ジオメトリの高さ(Y軸上の大きさ)をCSSピクセルで指定します。</target>
        </trans-unit>
        <trans-unit id="e39ca26ed973f60fcff1f9e24234b9045aee728c" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;DOMRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRect&lt;/code&gt; の高さ。</target>
        </trans-unit>
        <trans-unit id="34f838a2061b900af071c9a9c5fa3d0a55bdb78d" translate="yes" xml:space="preserve">
          <source>The height of the &lt;code&gt;DOMRectReadOnly&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DOMRectReadOnly&lt;/code&gt; の高さ。</target>
        </trans-unit>
        <trans-unit id="fb7b31ed73aeb5d6b461284454c9ec84b76c6859" translate="yes" xml:space="preserve">
          <source>The height of the bounds.</source>
          <target state="translated">境界線の高さ。</target>
        </trans-unit>
        <trans-unit id="1ce51c099997a2e659e72e34569a70ace26de77f" translate="yes" xml:space="preserve">
          <source>The height of the event's contact area (in CSS pixels).</source>
          <target state="translated">イベントの接触領域の高さ(CSSピクセル)。</target>
        </trans-unit>
        <trans-unit id="23019d9c8925de1387057b03ae5baf8ae91adfad" translate="yes" xml:space="preserve">
          <source>The height of the image (i.e., the value for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-height&quot;&gt;height&lt;/a&gt;&lt;/code&gt; attribute).</source>
          <target state="translated">画像の高さ（つまり、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-height&quot;&gt;height&lt;/a&gt;&lt;/code&gt; 属性の値）。</target>
        </trans-unit>
        <trans-unit id="9900bf4be748cebf8b3eed614db614bccb7cdd5e" translate="yes" xml:space="preserve">
          <source>The height of the image in pixels.</source>
          <target state="translated">画像の高さをピクセル単位で表示します。</target>
        </trans-unit>
        <trans-unit id="546400b2a914b39dbbc597d9bd690245f06c22c7" translate="yes" xml:space="preserve">
          <source>The height of the offscreen canvas.</source>
          <target state="translated">画面外のキャンバスの高さ。</target>
        </trans-unit>
        <trans-unit id="2302805078772e9435c24e06666e909f706716c3" translate="yes" xml:space="preserve">
          <source>The height of the rectangle from which the &lt;code&gt;ImageBitmap&lt;/code&gt; will be extracted. This value can be negative.</source>
          <target state="translated">&lt;code&gt;ImageBitmap&lt;/code&gt; が抽出される長方形の高さ。この値は負になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="fc436760d672f74e02a879dcb3da36a5090ce866" translate="yes" xml:space="preserve">
          <source>The height of the rectangle from which the &lt;code&gt;ImageData&lt;/code&gt; will be extracted. Positive values are down, and negative are up.</source>
          <target state="translated">&lt;code&gt;ImageData&lt;/code&gt; が抽出される長方形の高さ。正の値は下がり、負の値は上がります。</target>
        </trans-unit>
        <trans-unit id="7a63ab000024777ce854d706337a587e757dfa56" translate="yes" xml:space="preserve">
          <source>The height of the rule.</source>
          <target state="translated">ルールの高さ。</target>
        </trans-unit>
        <trans-unit id="b6139595ac3e62eb729d43ca2875adf7e1fee739" translate="yes" xml:space="preserve">
          <source>The height of the sub-rectangle of the source &lt;code&gt;image&lt;/code&gt; to draw into the destination context.</source>
          <target state="translated">宛先コンテキストに描画するソース &lt;code&gt;image&lt;/code&gt; のサブ長方形の高さ。</target>
        </trans-unit>
        <trans-unit id="e2c78b354aa26985893add977f22ad35048def0e" translate="yes" xml:space="preserve">
          <source>The height to draw the &lt;code&gt;image&lt;/code&gt; in the destination canvas. This allows scaling of the drawn image. If not specified, the image is not scaled in height when drawn.</source>
          <target state="translated">宛先キャンバスに &lt;code&gt;image&lt;/code&gt; を描画する高さ。これにより、描画されたイメージのスケーリングが可能になります。指定しない場合、描画時に画像の高さが調整されません。</target>
        </trans-unit>
        <trans-unit id="42b9482f137b42f6d2c2652741f341496a9b4ed5" translate="yes" xml:space="preserve">
          <source>The height to give the new &lt;code&gt;ImageData&lt;/code&gt; object. A negative value flips the rectangle around the horizontal axis.</source>
          <target state="translated">新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトに与える高さ。負の値は、水平軸を中心に長方形を反転します。</target>
        </trans-unit>
        <trans-unit id="5492b1fbeab33f939d26d4ab7f3557d9f700297f" translate="yes" xml:space="preserve">
          <source>The higher &lt;code&gt;firCount&lt;/code&gt; is, the more often frames were dropped, which may be an indication that the media's bit rate is too high for the available bandwidth, or that the receiving device is overburdened and is therefore unable to process the incoming data.</source>
          <target state="translated">&lt;code&gt;firCount&lt;/code&gt; が高いほど、フレームがドロップされる頻度が高くなります。これは、メディアのビットレートが使用可能な帯域幅に対して高すぎるか、受信側のデバイスが過負荷になっているために着信データを処理できないことを示している可能性があります。</target>
        </trans-unit>
        <trans-unit id="f88e0162e2a2462c00ce9015a13e8b520b542a07" translate="yes" xml:space="preserve">
          <source>The history of VR</source>
          <target state="translated">VRの歴史</target>
        </trans-unit>
        <trans-unit id="5bd28d46e0ce015344fed89ff0108f67372f94a0" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate of a point, relative to the left edge of the current &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;viewport&lt;/a&gt;.</source>
          <target state="translated">現在の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/viewport&quot;&gt;ビューポートの&lt;/a&gt;左端を基準とした、ポイントの水平座標。</target>
        </trans-unit>
        <trans-unit id="6aaedd7be22a6bd8de7d1ac18c3d2120e179a4ed" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate of a point.</source>
          <target state="translated">点の水平座標。</target>
        </trans-unit>
        <trans-unit id="8a5adefafdc8be83181d5593e5a6132f1fe3fe1b" translate="yes" xml:space="preserve">
          <source>The human-readable description of the connected database.</source>
          <target state="translated">接続されたデータベースの人間が読める記述。</target>
        </trans-unit>
        <trans-unit id="65a2c610333142a8ac66463288fd361b6973e7cf" translate="yes" xml:space="preserve">
          <source>The idea of notification tags is that more than one notification can share the same tag, linking them together. One notification can then be programmatically replaced with another to avoid the users' screen being filled up with a huge number of similar notifications.</source>
          <target state="translated">通知タグのアイデアは、複数の通知が同じタグを共有し、それらを一緒にリンクすることができます。1つの通知は、ユーザーの画面が膨大な数の類似した通知で埋め尽くされるのを避けるために、プログラム的に別のものと置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="6d3310c1441dcc638e3bc51207608ab6fbe78712" translate="yes" xml:space="preserve">
          <source>The identification tag of the media stream with which the candidate is associated, or &lt;code&gt;null&lt;/code&gt; if there is no associated media stream. The default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">候補が関連付けられているメディアストリームの識別タグ。関連付けられているメディアストリームがない場合は &lt;code&gt;null&lt;/code&gt; 。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="3e5030f2cabe76d4a4a1d8e8d27b94ee979f5e73" translate="yes" xml:space="preserve">
          <source>The identifier is a name that identifies the cue. It can be used to reference the cue from a script. It must not contain a newline and cannot contain the string &quot;&lt;code&gt;--&amp;gt;&quot;&lt;/code&gt;. It must end with a single newline. They do not have to be unique, although it is common to number them (e.g. 1, 2, 3, ...).</source>
          <target state="translated">識別子は、キューを識別する名前です。スクリプトからキューを参照するために使用できます。改行を含めることはできません。また、文字列 &quot; &lt;code&gt;--&amp;gt;&quot;&lt;/code&gt; 含めることはできません。単一の改行で終了する必要があります。番号を付けることは一般的ですが（1、2、3など）、一意である必要はありません。</target>
        </trans-unit>
        <trans-unit id="abfd34fa21b846f4eec39755053ebd711ae26a9f" translate="yes" xml:space="preserve">
          <source>The identifier of the repeated action you want to cancel. This ID was returned by the corresponding call to &lt;code&gt;setInterval()&lt;/code&gt;.</source>
          <target state="translated">キャンセルする繰り返しアクションの識別子。このIDは、対応する &lt;code&gt;setInterval()&lt;/code&gt; の呼び出しによって返されました。</target>
        </trans-unit>
        <trans-unit id="76a322d4de247e544cb9e52b7a9b0cafb87e2323" translate="yes" xml:space="preserve">
          <source>The identifier of the timeout you want to cancel. This ID was returned by the corresponding call to &lt;code&gt;setTimeout()&lt;/code&gt;.</source>
          <target state="translated">キャンセルするタイムアウトの識別子。このIDは、 &lt;code&gt;setTimeout()&lt;/code&gt; への対応する呼び出しによって返されました。</target>
        </trans-unit>
        <trans-unit id="ef36f77da7251a3dee31b989a9d6c62f25e71ebc" translate="yes" xml:space="preserve">
          <source>The identifier to check, i.e. the name of the cookie (&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;string&lt;/a&gt;)</source>
          <target state="translated">チェックする識別子、つまりクッキーの名前（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String&quot;&gt;文字列&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit id="9021370e68fe07a54e9f9e4d4c20d66c9630c558" translate="yes" xml:space="preserve">
          <source>The identity provider wasn't able to provide an identity assertion.</source>
          <target state="translated">ID プロバイダは ID アサーションを提供できなかった。</target>
        </trans-unit>
        <trans-unit id="2ccf402b00c180cce436af6f758ac17c8e150db8" translate="yes" xml:space="preserve">
          <source>The image has no image data.</source>
          <target state="translated">画像には画像データがありません。</target>
        </trans-unit>
        <trans-unit id="0e06aae1f6a88dfa00da74e1b74dbc26f3890839" translate="yes" xml:space="preserve">
          <source>The image is not loaded yet. Use &lt;code&gt;.complete === true&lt;/code&gt; and &lt;code&gt;.onload&lt;/code&gt; to determine when it is ready.</source>
          <target state="translated">画像はまだ読み込まれていません。使用は &lt;code&gt;.complete === true&lt;/code&gt; と &lt;code&gt;.onload&lt;/code&gt; それは準備ができているときを決定します。</target>
        </trans-unit>
        <trans-unit id="f7d5758180a3d86c68a04955618213723b58b935" translate="yes" xml:space="preserve">
          <source>The image will typically be an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image&quot;&gt;&lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt;&lt;/a&gt; element but it can also be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; or any other image element. The method's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; coordinates are offsets where the image should appear relative to the mouse pointer.</source>
          <target state="translated">画像は通常&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/image&quot;&gt; &lt;code&gt;&amp;lt;image&amp;gt;&lt;/code&gt; &lt;/a&gt;要素になりますが、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;やその他の画像要素にすることもできます。メソッドの &lt;code&gt;x&lt;/code&gt; 座標と &lt;code&gt;y&lt;/code&gt; 座標は、マウスポインターに対して画像が表示される位置のオフセットです。</target>
        </trans-unit>
        <trans-unit id="47c1b19dc684abb15f884cd0bba62b2d663ffb2b" translate="yes" xml:space="preserve">
          <source>The implementation may have stripped out insignificant whitespace while parsing the selector. If set to a selector string which cannot be parsed, a SyntaxError is thrown.</source>
          <target state="translated">実装では、セレクタの解析中に重要でない空白が削除されている可能性があります。解析できないセレクタ文字列に設定すると、SyntaxError がスローされます。</target>
        </trans-unit>
        <trans-unit id="7f0011b9907260bfee190baa50c6baacc569b8f6" translate="yes" xml:space="preserve">
          <source>The implementation of our shim for &lt;a href=&quot;window/cancelidlecallback&quot;&gt;&lt;code&gt;cancelIdleCallback()&lt;/code&gt;&lt;/a&gt; is much simpler:</source>
          <target state="translated">&lt;a href=&quot;window/cancelidlecallback&quot;&gt; &lt;code&gt;cancelIdleCallback()&lt;/code&gt; の&lt;/a&gt;シムの実装は、はるかに簡単です。</target>
        </trans-unit>
        <trans-unit id="41c1664c417a216c50b1ba1a8b515b50603428ab" translate="yes" xml:space="preserve">
          <source>The implementation of the code needed to interface with a particular payment method provider in order to process payments.</source>
          <target state="translated">コードの実装は、支払いを処理するために、特定の支払い方法のプロバイダとインターフェースする必要がありました。</target>
        </trans-unit>
        <trans-unit id="f7680068b3f6bac7238e497f47fcbff52227c588" translate="yes" xml:space="preserve">
          <source>The implementation status of pointer events in browsers is &lt;a href=&quot;http://caniuse.com/#search=pointer&quot;&gt;relatively low&lt;/a&gt; with IE11 and Edge having complete implementations. Firefox's implementation has been withdrawn because of &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;bug 1166347&lt;/a&gt;.</source>
          <target state="translated">ブラウザーでのポインターイベントの実装ステータスは&lt;a href=&quot;http://caniuse.com/#search=pointer&quot;&gt;比較的低く&lt;/a&gt;、IE11とEdgeは完全な実装を備えています。&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=1166347&quot;&gt;バグ1166347の&lt;/a&gt;ため、Firefoxの実装は中止されました。</target>
        </trans-unit>
        <trans-unit id="46a3565092409d0134c9059a403ebe25cd44703a" translate="yes" xml:space="preserve">
          <source>The imported node is not yet included in the document tree. To include it, you need to call an insertion method such as &lt;a href=&quot;../node/appendchild&quot;&gt;&lt;code&gt;appendChild()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../node/insertbefore&quot;&gt;&lt;code&gt;insertBefore()&lt;/code&gt;&lt;/a&gt; with a node that &lt;em&gt;is&lt;/em&gt; currently in the document tree.</source>
          <target state="translated">インポートされたノードはまだドキュメントツリーに含まれていません。それを含めるには、次のような挿入方法を呼び出す必要があります&lt;a href=&quot;../node/appendchild&quot;&gt; &lt;code&gt;appendChild()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../node/insertbefore&quot;&gt; &lt;code&gt;insertBefore()&lt;/code&gt; &lt;/a&gt;ノードで&lt;em&gt;ある&lt;/em&gt;ドキュメントツリーに現在。</target>
        </trans-unit>
        <trans-unit id="61647f41eded3642881c1b974f211c024664fd3c" translate="yes" xml:space="preserve">
          <source>The incoming stream is attached to the &lt;code&gt;&quot;received_video&quot;&lt;/code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, and the &quot;Hang Up&quot; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; element is enabled so the user can hang up the call.</source>
          <target state="translated">着信ストリームが &lt;code&gt;&quot;received_video&quot;&lt;/code&gt; &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素に添付され、「 Hang Up」&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;要素が有効になっているため、ユーザーは通話を切ることができます。</target>
        </trans-unit>
        <trans-unit id="c8d2af1c11e53111323437c66cd6ebf95226234c" translate="yes" xml:space="preserve">
          <source>The index is a persistent key-value storage where the value part of its records is the key part of a record in the referenced object store. The records in an index are automatically populated whenever records in the referenced object store are inserted, updated, or deleted. Each record in an index can point to only one record in its referenced object store, but several indexes can reference the same object store. When the object store changes, all indexes that refers to the object store are automatically updated.</source>
          <target state="translated">インデックスは、そのレコードの値の部分が、参照されているオブジェクト・ストアのレコードのキーの部分である永続的なキー-値ストレージです。インデックス内のレコードは、参照されているオブジェクト・ストア内のレコードが挿入、更新、削除されるたびに自動的に生成されます。インデックス内の各レコードは、その参照されているオブジェクトストア内の1つのレコードのみを指すことができますが、複数のインデックスが同じオブジェクトストアを参照することができます。オブジェクトストアが変更されると、そのオブジェクトストアを参照しているすべてのインデックスが自動的に更新されます。</target>
        </trans-unit>
        <trans-unit id="5caf3eae625b862e9744df6202e03dcfa974da91" translate="yes" xml:space="preserve">
          <source>The index is not in the allowed range. For example, this can be thrown by the &lt;a href=&quot;range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt; object. (Legacy code value: &lt;code&gt;1&lt;/code&gt; and legacy constant name: &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt;)</source>
          <target state="translated">インデックスは許可された範囲内にありません。たとえば、これは&lt;a href=&quot;range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt;オブジェクトによってスローされます。（レガシーコード値： &lt;code&gt;1&lt;/code&gt; およびレガシー定数名： &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="ecc7fb0e3966e29d229b56d8007d3ec84e459e4c" translate="yes" xml:space="preserve">
          <source>The index of one of the interfaces supported by the device. Interfaces are device-specific.</source>
          <target state="translated">デバイスがサポートするインターフェースの1つのインデックス。インターフェースはデバイス固有のものです。</target>
        </trans-unit>
        <trans-unit id="b67062da059f5db8635cd18c0d9e2971deb6f05c" translate="yes" xml:space="preserve">
          <source>The index of the &lt;a href=&quot;../touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; object to retrieve. The index is a number in the range of 0 to one less than the length of the &lt;a href=&quot;../touchlist&quot;&gt;&lt;code&gt;TouchList&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">取得する&lt;a href=&quot;../touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトのインデックス。インデックスは、0から&lt;a href=&quot;../touchlist&quot;&gt; &lt;code&gt;TouchList&lt;/code&gt; の&lt;/a&gt;長さより1小さい範囲の数値です。</target>
        </trans-unit>
        <trans-unit id="7bf862af2bbac6295dbdd6c94670c47269d08e98" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the NodeList.</source>
          <target state="translated">NodeList で処理されている現在の要素のインデックス。</target>
        </trans-unit>
        <trans-unit id="cc1ff8860b10df902ebff81881a58b531468f649" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed in the array.</source>
          <target state="translated">配列内で処理されている現在の要素のインデックス.</target>
        </trans-unit>
        <trans-unit id="b83dc200bf061d713d7d8b647e7347cc792a810c" translate="yes" xml:space="preserve">
          <source>The index of the current element being processed.</source>
          <target state="translated">処理されている現在の要素のインデックス。</target>
        </trans-unit>
        <trans-unit id="ab857101f2b25c7f314198c13aafd59e6c6393d3" translate="yes" xml:space="preserve">
          <source>The index of the currently selected track, if any, or &lt;code&gt;&amp;minus;1&lt;/code&gt; otherwise. .</source>
          <target state="translated">現在選択されているトラックがある場合はそのインデックス、そうでない場合は &lt;code&gt;&amp;minus;1&lt;/code&gt; 。。</target>
        </trans-unit>
        <trans-unit id="66059b748974278daf492b3a6150404e9c015c3b" translate="yes" xml:space="preserve">
          <source>The index position of the &lt;a href=&quot;../sourcebuffer&quot;&gt;&lt;code&gt;SourceBuffer&lt;/code&gt;&lt;/a&gt; object you want to return.</source>
          <target state="translated">返す&lt;a href=&quot;../sourcebuffer&quot;&gt; &lt;code&gt;SourceBuffer&lt;/code&gt; &lt;/a&gt;オブジェクトのインデックス位置。</target>
        </trans-unit>
        <trans-unit id="91de6b281bf82a8409c27eac6824e59cd36e2e76" translate="yes" xml:space="preserve">
          <source>The index position of the &lt;a href=&quot;../trackdefault&quot;&gt;&lt;code&gt;TrackDefault&lt;/code&gt;&lt;/a&gt; object you want to return.</source>
          <target state="translated">&lt;a href=&quot;../trackdefault&quot;&gt; &lt;code&gt;TrackDefault&lt;/code&gt; &lt;/a&gt;するTrackDefaultオブジェクトのインデックス位置。</target>
        </trans-unit>
        <trans-unit id="d5ec857e15b7ca94530a52d181920354c38b8c9a" translate="yes" xml:space="preserve">
          <source>The index, or its object store, has been deleted; or the current transaction is not an upgrade transaction. You can only rename indexes during upgrade transactions; that is, when the mode is &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt;.</source>
          <target state="translated">インデックスまたはそのオブジェクトストアが削除されました。または、現在のトランザクションはアップグレードトランザクションではありません。インデックスの名前を変更できるのは、アップグレードトランザクション中のみです。つまり、モードが &lt;code&gt;&quot;versionchange&quot;&lt;/code&gt; の場合です。</target>
        </trans-unit>
        <trans-unit id="b2e60486c580d0a0bb60584736ac5bf86565a28c" translate="yes" xml:space="preserve">
          <source>The information is accessed through the &lt;code&gt;&lt;strong&gt;mediaCapabilities&lt;/strong&gt;&lt;/code&gt; property of the &lt;a href=&quot;navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">情報には、&lt;a href=&quot;navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt;インターフェースの &lt;code&gt;&lt;strong&gt;mediaCapabilities&lt;/strong&gt;&lt;/code&gt; プロパティを介してアクセスします。</target>
        </trans-unit>
        <trans-unit id="69293766aa78b7800b75687b2f6f7b0b2a2a9c12" translate="yes" xml:space="preserve">
          <source>The information provided is based on the last ten seconds of media received.</source>
          <target state="translated">提供される情報は、受信したメディアの最後の10秒に基づいています。</target>
        </trans-unit>
        <trans-unit id="02ce20c8ea65e30641ca7f36e374b0dea6906590" translate="yes" xml:space="preserve">
          <source>The information we need to exchange is the Offer and Answer which just contains the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; mentioned below.</source>
          <target state="translated">交換する必要がある情報は、オファーとアンサーです。これには、下記の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt;のみが含まれています。</target>
        </trans-unit>
        <trans-unit id="9ad1ac79a38eff40c368d0d2da3eb4074d7fc087" translate="yes" xml:space="preserve">
          <source>The initTimeEvent method is used to initialize the value of a TimeEvent created through the DocumentEvent interface. This method may only be called before the TimeEvent has been dispatched via the dispatchEvent method, though it may be called multiple times during that phase if necessary.</source>
          <target state="translated">initTimeEvent メソッドは、DocumentEvent インターフェースを通して作成された TimeEvent の値を初期化するために使用されます。このメソッドは、TimeEvent が dispatchEvent メソッドを介してディスパッチされる前にのみ呼び出すことができますが、必要に応じてそのフェーズの間に複数回呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="2c435ff3251bf15470a0a76bcc9fd6141fb6f630" translate="yes" xml:space="preserve">
          <source>The initial definition of the API of WebRTC.</source>
          <target state="translated">WebRTCのAPIの初期定義。</target>
        </trans-unit>
        <trans-unit id="8d02431012098639b8c2598302c6373f95779f46" translate="yes" xml:space="preserve">
          <source>The initial definition of the object conveying the stream of media content.</source>
          <target state="translated">メディアコンテンツのストリームを伝えるオブジェクトの初期定義。</target>
        </trans-unit>
        <trans-unit id="4ea3961ad5d4b44133d07b3a491c8034f4eb66d1" translate="yes" xml:space="preserve">
          <source>The initial definition on how to obtain stream of content from DOM Elements</source>
          <target state="translated">DOM要素からコンテンツのストリームを取得する方法の初期定義</target>
        </trans-unit>
        <trans-unit id="b471c326596744d46e1159b88da83e7372151dd8" translate="yes" xml:space="preserve">
          <source>The initial value of &lt;code&gt;timestampOffset&lt;/code&gt; is 0.</source>
          <target state="translated">&lt;code&gt;timestampOffset&lt;/code&gt; の初期値は0です。</target>
        </trans-unit>
        <trans-unit id="bd7b4e609456ff4e052c1246bd502b94de2628c1" translate="yes" xml:space="preserve">
          <source>The initial view (i.e., before magnification and panning) of the current innermost SVG document fragment can be either the &quot;standard&quot; view, i.e., based on attributes on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt;&lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt;&lt;/a&gt; element such as &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot;&gt;viewBox&lt;/a&gt;&lt;/code&gt;) or on a &quot;custom&quot; view (i.e., a hyperlink into a particular &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&quot;&gt;&lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt;&lt;/a&gt; or other element). If the initial view is the &quot;standard&quot; view, then this attribute is &lt;code&gt;false&lt;/code&gt;. If the initial view is a &quot;custom&quot; view, then this attribute is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">現在の最も内側のSVGドキュメントフラグメントの初期ビュー（つまり、拡大とパンの前）は、「標準」ビュー（つまり、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/viewBox&quot;&gt;viewBox&lt;/a&gt;&lt;/code&gt; などの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg&quot;&gt; &lt;code&gt;&amp;lt;svg&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の属性に基づく）または「カスタム」ビュー（つまり、特定の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view&quot;&gt; &lt;code&gt;&amp;lt;view&amp;gt;&lt;/code&gt; &lt;/a&gt;または他の要素へのハイパーリンク）。初期ビューが「標準」ビューの場合、この属性は &lt;code&gt;false&lt;/code&gt; です。初期ビューが「カスタム」ビューの場合、この属性は &lt;code&gt;true&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="66363a709ecb12db93fee7fad2250201826e6040" translate="yes" xml:space="preserve">
          <source>The input/output read operation failed (No legacy code value and constant name).</source>
          <target state="translated">入出力の読み取り操作に失敗しました(レガシーコードの値と定数名がありません)。</target>
        </trans-unit>
        <trans-unit id="45132766641fa0600b00a0d2ded9649fae31c043" translate="yes" xml:space="preserve">
          <source>The install event is fired when an install is successfully completed. The install event is generally used to populate your browser&amp;rsquo;s offline caching capabilities with the assets you need to run your app offline. To do this, we use Service Worker&amp;rsquo;s brand new storage API &amp;mdash; &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;cache&lt;/code&gt;&lt;/a&gt; &amp;mdash; a global object on the service worker that allows us to store assets delivered by responses, and keyed by their requests. This API works in a similar way to the browser&amp;rsquo;s standard cache, but it is specific to your domain. It persists until you tell it not to &amp;mdash; again, you have full control.</source>
          <target state="translated">インストールが正常に完了すると、インストールイベントが発生します。インストールイベントは通常、アプリをオフラインで実行するために必要なアセットをブラウザのオフラインキャッシュ機能に入力するために使用されます。これを行うには、Service Workerの新しいストレージAPI（&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;cache&lt;/code&gt; &lt;/a&gt;）を使用します。これは、Service Workerのグローバルオブジェクトであり、応答によって配信され、リクエストによってキー設定されたアセットを保存できます。このAPIはブラウザの標準キャッシュと同様に機能しますが、ドメインに固有です。それはあなたがそれをしないと言うまで持続します&amp;mdash;再び、あなたは完全なコントロールを持っています。</target>
        </trans-unit>
        <trans-unit id="8f6d533575dca4b047f9a9e8eac8a1e0c1821662" translate="yes" xml:space="preserve">
          <source>The instrument by which payment is submitted, such as a credit card or online payment service.</source>
          <target state="translated">クレジットカードやオンライン決済サービスなど、支払いが提出される手段。</target>
        </trans-unit>
        <trans-unit id="f9787a36b74dcb77f1c6d92e71cf0fb1018f2122" translate="yes" xml:space="preserve">
          <source>The interface &lt;a href=&quot;idbopendbrequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; is derived from &lt;code&gt;IDBRequest&lt;/code&gt;.</source>
          <target state="translated">インターフェイス&lt;a href=&quot;idbopendbrequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; &lt;/a&gt;はIDBRequestから派生してい &lt;code&gt;IDBRequest&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1586ceae149c3f1f6571cc12c6a6b49b07b42a07" translate="yes" xml:space="preserve">
          <source>The interface also supports the following properties which are listed in the order in which they are recorded for the fetching of a single resource. An alphabetical listing is shown in the navigation, at left.</source>
          <target state="translated">インターフェースはまた、単一のリソースのフェッチのために記録されている順にリストされている以下のプロパティをサポートしています。アルファベット順のリストは、左のナビゲーションに示されています。</target>
        </trans-unit>
        <trans-unit id="348c57b421d51d4da2f638e38a4d72e871bea062" translate="yes" xml:space="preserve">
          <source>The interface also supports the following properties:</source>
          <target state="translated">また、このインターフェイスは以下のプロパティをサポートしています。</target>
        </trans-unit>
        <trans-unit id="1ab0596d2edf9246a634d5554a2710557598c081" translate="yes" xml:space="preserve">
          <source>The interface consists of master controls, which allow us to play/stop the sequencer, and adjust the BPM (beats per minute) to speed up or slow down the &quot;music&quot;.</source>
          <target state="translated">インターフェイスはマスターコントロールで構成されており、シーケンサーの再生/停止、BPM(1分間のビート)を調整して &quot;音楽 &quot;を速くしたり遅くしたりすることができます。</target>
        </trans-unit>
        <trans-unit id="407842243ba3bfd86b2b17daa56df451116b6929" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvaspattern&quot;&gt;&lt;code&gt;CanvasPattern&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../canvaspattern&quot;&gt; &lt;code&gt;CanvasPattern&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c31415fa45bbade510bd4d6eb4a7a29db463afb" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">それを定義するインターフェース、&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dbce26c8a8f32df63eeba5225e888721c01c1242" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="09bc4849716b6bd03cd6699c6ad0bde1c67085ee" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../htmlcanvaselement&quot;&gt; &lt;code&gt;HTMLCanvasElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="739586ffbfb11d860f8093ebc9cd864ebac8e295" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース、&lt;a href=&quot;../htmlmediaelement&quot;&gt; &lt;code&gt;HTMLMediaElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="88c2747119091f7708a563c0d930d015d391ab25" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../htmltrackelement&quot;&gt;&lt;code&gt;HTMLTrackElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../htmltrackelement&quot;&gt; &lt;code&gt;HTMLTrackElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cee15d4f73fca209487f4be41a66596304378c12" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../mediaerror&quot;&gt;&lt;code&gt;MediaError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../mediaerror&quot;&gt; &lt;code&gt;MediaError&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e3b6598e7db413a16e827a1e5b1ed5436e574fc8" translate="yes" xml:space="preserve">
          <source>The interface defining it, &lt;a href=&quot;../path2d&quot;&gt;&lt;code&gt;Path2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それを定義するインターフェース&lt;a href=&quot;../path2d&quot;&gt; &lt;code&gt;Path2D&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="a366dd3834caf1e7c9e93372fddb5bccacf7de70" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../htmlcanvaselement&quot;&gt;&lt;code&gt;HTMLCanvasElement&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース、&lt;a href=&quot;../htmlcanvaselement&quot;&gt; &lt;code&gt;HTMLCanvasElement&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f3cd20f50462042424e847a898746f78f51a51e" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../imagebitmap&quot;&gt;&lt;code&gt;ImageBitmap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドを定義するインターフェース&lt;a href=&quot;../imagebitmap&quot;&gt; &lt;code&gt;ImageBitmap&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e4295c90e14090be33103d6861da7bb56bf248b5" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../imagebitmaprenderingcontext&quot;&gt;&lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース&lt;a href=&quot;../imagebitmaprenderingcontext&quot;&gt; &lt;code&gt;ImageBitmapRenderingContext&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c30b008ac3791f8827753a507fcfe3c4fc386c27" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース&lt;a href=&quot;../offscreencanvas&quot;&gt; &lt;code&gt;OffscreenCanvas&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1844e07a1a6cb93faf1e42a489322e1cbfdbffcf" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../offscreencanvas&quot;&gt;&lt;code&gt;OffscreenCanvas&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このメソッドを定義するインターフェース&lt;a href=&quot;../offscreencanvas&quot;&gt; &lt;code&gt;OffscreenCanvas&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="75da6d6c041ca38f1711d4b22d5473ccf737b5d1" translate="yes" xml:space="preserve">
          <source>The interface defining this method, &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース、&lt;a href=&quot;../webglrenderingcontext&quot;&gt; &lt;code&gt;WebGLRenderingContext&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e5a1185a313900e50ffa7fca7f64bedc7fc9bde" translate="yes" xml:space="preserve">
          <source>The interface defining this method: &lt;a href=&quot;../canvasgradient&quot;&gt;&lt;code&gt;CanvasGradient&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース：&lt;a href=&quot;../canvasgradient&quot;&gt; &lt;code&gt;CanvasGradient&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6159ab1a0e001b753fc80c7503d37d685addf47" translate="yes" xml:space="preserve">
          <source>The interface defining this method: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このメソッドを定義するインターフェース：&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f381c85144455856c15264cce5dfcba6dcd6f67" translate="yes" xml:space="preserve">
          <source>The interface defining this property: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">このプロパティを定義するインターフェース：&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4190f636c5f94b490aa753630bd1fc1f86fe89df" translate="yes" xml:space="preserve">
          <source>The interface defining this property: &lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt;&lt;code&gt;CanvasRenderingContext2D&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティを定義するインターフェース：&lt;a href=&quot;../canvasrenderingcontext2d&quot;&gt; &lt;code&gt;CanvasRenderingContext2D&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d6463c0a91e8eaae381c941ec9ed922d50a6c4e2" translate="yes" xml:space="preserve">
          <source>The interface for the owner object</source>
          <target state="translated">オーナーオブジェクトのインターフェイス</target>
        </trans-unit>
        <trans-unit id="5298f0cfd7036ab1542876f1fa2864e22dcc0aae" translate="yes" xml:space="preserve">
          <source>The interface implementing this property: &lt;a href=&quot;../htmltableelement&quot;&gt;&lt;code&gt;HTMLTableElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティを実装するインターフェース：&lt;a href=&quot;../htmltableelement&quot;&gt; &lt;code&gt;HTMLTableElement&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="05b96684055565c7a89cea05b0d9d61d21d96ecd" translate="yes" xml:space="preserve">
          <source>The interface it belongs to, &lt;a href=&quot;../geolocation&quot;&gt;&lt;code&gt;Geolocation&lt;/code&gt;&lt;/a&gt;, and the way to access it &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigatorGeolocation/geolocation&quot;&gt;&lt;code&gt;NavigatorGeolocation.geolocation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが属しているインターフェース&lt;a href=&quot;../geolocation&quot;&gt; &lt;code&gt;Geolocation&lt;/code&gt; &lt;/a&gt;、およびそれにアクセスする方法&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigatorGeolocation/geolocation&quot;&gt; &lt;code&gt;NavigatorGeolocation.geolocation&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aeb1f85c339e16e7c965aae2f5ca47cc37388bac" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodefilter&quot;&gt;&lt;code&gt;NodeFilter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが属しているインターフェース：&lt;a href=&quot;../nodefilter&quot;&gt; &lt;code&gt;NodeFilter&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="6c38f187e583de7f72fe36b4490afbf568450741" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">それが属するインターフェース：&lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec55632ee4a409f9ef75bd8ec5c856999d7648be" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが属するインターフェース：&lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7278619e61c8579f78d86e03f7781b1579084fe7" translate="yes" xml:space="preserve">
          <source>The interface it belongs to: &lt;a href=&quot;../url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが属するインターフェース：&lt;a href=&quot;../url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="f381c2c684cf9744f3fc05c0b0410d18eb80c8fb" translate="yes" xml:space="preserve">
          <source>The interface of the &lt;a href=&quot;credential_management_api&quot;&gt;Credential Management API&lt;/a&gt; provides information about a username/password pair. In supporting browsers an instance of this class may be passed in the &lt;code&gt;credential&lt;/code&gt; member of the &lt;code&gt;init&lt;/code&gt; object for global &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;fetch&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;credential_management_api&quot;&gt;Credential Management API&lt;/a&gt;のインターフェースは、ユーザー名/パスワードのペアに関する情報を提供します。サポートするブラウザでは、このクラスのインスタンスをグローバル&lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;fetch&lt;/code&gt; &lt;/a&gt;ために &lt;code&gt;init&lt;/code&gt; オブジェクトの &lt;code&gt;credential&lt;/code&gt; メンバーに渡すことができます。</target>
        </trans-unit>
        <trans-unit id="b2b0cd221411d551c9e4eeb01dec1aca55f7b759" translate="yes" xml:space="preserve">
          <source>The interface of the object it creates: &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">それが作成するオブジェクトのインターフェース：&lt;a href=&quot;../treewalker&quot;&gt; &lt;code&gt;TreeWalker&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c3e7077536882ebea4c9419888860140f265d8d7" translate="yes" xml:space="preserve">
          <source>The interface of the promise returned by the &lt;a href=&quot;mediacapabilities&quot;&gt;&lt;code&gt;mediaCapabilities&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt;&lt;code&gt;encodingInfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt;&lt;code&gt;decodingInfo()&lt;/code&gt;&lt;/a&gt; methods; returning whether the media configuration tested is supported, smooth, and powerEfficient.</source>
          <target state="translated">&lt;a href=&quot;mediacapabilities&quot;&gt; &lt;code&gt;mediaCapabilities&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt; &lt;code&gt;encodingInfo()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;mediacapabilities/encodinginfo&quot;&gt; &lt;code&gt;decodingInfo()&lt;/code&gt; &lt;/a&gt;メソッドとdecodeInfo （）メソッドによって返されるpromiseのインターフェース。テストされたメディア構成がサポートされ、スムーズで、powerEfficientかどうかを返します。</target>
        </trans-unit>
        <trans-unit id="95ffc84a9a04373960151e54ae5381df48ae073b" translate="yes" xml:space="preserve">
          <source>The interface of the promise returned by the the &lt;a href=&quot;../mediacapabilities&quot;&gt;&lt;code&gt;mediaCapabilities&lt;/code&gt;&lt;/a&gt;'s &lt;a href=&quot;encodinginfo&quot;&gt;&lt;code&gt;encodingInfo()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;encodinginfo&quot;&gt;&lt;code&gt;decodingInfo()&lt;/code&gt;&lt;/a&gt; methods returning whether the media configuration tested is supported, smooth, and powerEfficient.</source>
          <target state="translated">テストされたメディア構成がサポートされ、スムーズで、powerEfficientであるかどうかを返す&lt;a href=&quot;../mediacapabilities&quot;&gt; &lt;code&gt;mediaCapabilities&lt;/code&gt; &lt;/a&gt;の&lt;a href=&quot;encodinginfo&quot;&gt; &lt;code&gt;encodingInfo()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;encodinginfo&quot;&gt; &lt;code&gt;decodingInfo()&lt;/code&gt; &lt;/a&gt;メソッドとdecodeInfo （）メソッドによって返されるpromiseのインターフェース。</target>
        </trans-unit>
        <trans-unit id="8bf30b04ea044cef865f5f8ff8a4fd68b9d4ee67" translate="yes" xml:space="preserve">
          <source>The interface of the returned value, &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">戻り値のインターフェース&lt;a href=&quot;../location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e242217621f1167956579e10892d15e6cd7edea4" translate="yes" xml:space="preserve">
          <source>The interface of the the &lt;a href=&quot;webrtc_api&quot;&gt;WebRTC API&lt;/a&gt; provides an object represents a certificate that an &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; uses to authenticate.</source>
          <target state="translated">&lt;a href=&quot;webrtc_api&quot;&gt;WebRTC API&lt;/a&gt;のインターフェースは、&lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;が認証に使用する証明書を表すオブジェクトを提供します。</target>
        </trans-unit>
        <trans-unit id="41db531f6013fb6ea8d50a1a010693a900161ee9" translate="yes" xml:space="preserve">
          <source>The interface that represents errors thrown by the MediaStream Recording API. Its &lt;a href=&quot;mediarecordererrorevent/error&quot;&gt;&lt;code&gt;error&lt;/code&gt;&lt;/a&gt; property is a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; that specifies that error occurred.</source>
          <target state="translated">MediaStream Recording APIによってスローされたエラーを表すインターフェース。その&lt;a href=&quot;mediarecordererrorevent/error&quot;&gt; &lt;code&gt;error&lt;/code&gt; &lt;/a&gt;プロパティは、エラーが発生したことを指定する&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="539b691936c73ffac3bc933b434b424fe2c3cb42" translate="yes" xml:space="preserve">
          <source>The interface this property belongs to: &lt;a href=&quot;../nodeiterator&quot;&gt;&lt;code&gt;NodeIterator&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティが属するインターフェイス：&lt;a href=&quot;../nodeiterator&quot;&gt; &lt;code&gt;NodeIterator&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="618038d08d9fea210e7695c10467fcf20ae5b8e9" translate="yes" xml:space="preserve">
          <source>The interface this property belongs to: &lt;a href=&quot;../treewalker&quot;&gt;&lt;code&gt;TreeWalker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティが属するインターフェイス：&lt;a href=&quot;../treewalker&quot;&gt; &lt;code&gt;TreeWalker&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="66dfcc0a5dcfffa02636c957cfa59eb0ba675baf" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;../domhighrestimestamp&quot;&gt;&lt;code&gt;high-resolution timestamps&lt;/code&gt;&lt;/a&gt; for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc. The interface also includes other properties that provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">インターフェースのプロパティは、リダイレクトの開始時間と終了時間、フェッチの開始時間、DNSルックアップの開始時間と終了時間、応答の開始時間と終了時間などのネットワークイベントの&lt;a href=&quot;../domhighrestimestamp&quot;&gt; &lt;code&gt;high-resolution timestamps&lt;/code&gt; &lt;/a&gt;を含む&lt;em&gt;リソース読み込みタイムライン&lt;/em&gt;を作成します。フェッチされたリソースのサイズと、フェッチを開始したリソースの&lt;em&gt;タイプ&lt;/em&gt;に関するデータ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8095ea3ad68881483ee7d7cad0e3a6d13c5fb792" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;domhighrestimestamp&quot;&gt;&lt;code&gt;high-resolution timestamps&lt;/code&gt;&lt;/a&gt; for network events such as redirect start and end times, fetch start, DNS lookup start and end times, response start and end times, etc.. Additionally, the interface extends &lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;PerformanceEntry&lt;/code&gt;&lt;/a&gt; with other properties which provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">インターフェイスのプロパティは、リダイレクトの開始時間と終了時間、フェッチの開始時間、DNSルックアップの開始時間と終了時間、応答の開始時間と終了時間などのネットワークイベントの&lt;a href=&quot;domhighrestimestamp&quot;&gt; &lt;code&gt;high-resolution timestamps&lt;/code&gt; &lt;/a&gt;を含む&lt;em&gt;リソース読み込みタイムライン&lt;/em&gt;を作成します。さらに、インターフェースは&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;PerformanceEntry&lt;/code&gt; &lt;/a&gt;を拡張してフェッチされたリソースのサイズと、フェッチを開始したリソースの&lt;em&gt;タイプ&lt;/em&gt;に関するデータを提供する他のプロパティ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="96b06f86d0b86353bdba641db118148b7c60b0ee" translate="yes" xml:space="preserve">
          <source>The interface's properties create a &lt;em&gt;resource loading timeline&lt;/em&gt; with &lt;a href=&quot;domhighrestimestamp&quot;&gt;high-resolution timestamps&lt;/a&gt; for network events such as redirect start and end times, DNS lookup start and end times, request start, response start and end times, etc. The interface also includes other properties that provide data about the size of the fetched resource as well as the &lt;em&gt;type&lt;/em&gt; of resource that initiated the fetch.</source>
          <target state="translated">インターフェイスのプロパティは、リダイレクトの開始時間と終了時間、DNSルックアップの開始時間と終了時間、要求の開始時間、応答の開始時間と終了時間などのネットワークイベントの&lt;a href=&quot;domhighrestimestamp&quot;&gt;高解像度タイムスタンプ&lt;/a&gt;を含む&lt;em&gt;リソース読み込みタイムライン&lt;/em&gt;を作成します。フェッチされたリソースのサイズと、フェッチを開始したリソースの&lt;em&gt;タイプ&lt;/em&gt;に関するデータ。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="336b8c0f074dee4820ed71b35fa86bb4dd1b46c6" translate="yes" xml:space="preserve">
          <source>The interface:</source>
          <target state="translated">インターフェースです。</target>
        </trans-unit>
        <trans-unit id="84091c643115a9215d55c9d55a348492976290d7" translate="yes" xml:space="preserve">
          <source>The interfaces described in this document are defined in the &lt;code&gt;High Resolution Time&lt;/code&gt; standard which has two levels:</source>
          <target state="translated">このドキュメントで説明されているインターフェイスは、2つのレベルを持つ &lt;code&gt;High Resolution Time&lt;/code&gt; 標準で定義されています。</target>
        </trans-unit>
        <trans-unit id="33e8d4b6156f7fd7db871b356ca9b2ea71c92e97" translate="yes" xml:space="preserve">
          <source>The interfaces described in this document are defined in the &lt;strong&gt;Performance Timeline&lt;/strong&gt; standard which has two levels:</source>
          <target state="translated">このドキュメントで説明されているインターフェイスは、次の2つのレベルがある&lt;strong&gt;Performance Timeline&lt;/strong&gt;標準で定義されています。</target>
        </trans-unit>
        <trans-unit id="09380fbe60824f1b7236f80ede7d4e2372d6bade" translate="yes" xml:space="preserve">
          <source>The interfaces related to the &lt;code&gt;WebGLRenderingContext&lt;/code&gt; are referenced under &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/WebGL&quot;&gt;WebGL&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WebGLRenderingContext&lt;/code&gt; に関連するインターフェースは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/WebGL&quot;&gt;WebGLで&lt;/a&gt;参照されます。</target>
        </trans-unit>
        <trans-unit id="aaff9627d1120f1f8f30d0dbb36b911b3d4e842f" translate="yes" xml:space="preserve">
          <source>The interfaces that it allows to be use as image sources are the following:</source>
          <target state="translated">画像ソースとして使用できるインターフェースは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="17d96adbf82ef27098abb4d0cc3dcafb077bf739" translate="yes" xml:space="preserve">
          <source>The intersection root and root margin</source>
          <target state="translated">交差点の根元と根元の余白</target>
        </trans-unit>
        <trans-unit id="05ea4a2920b10c138f7ace947447c5f1da2d100c" translate="yes" xml:space="preserve">
          <source>The interval that this operation is allowed to take to acquire locks on all the objects stores and indexes identified in &lt;code&gt;storeNames&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;storeNames&lt;/code&gt; で識別されたすべてのオブジェクトストアとインデックスのロックを取得するためにこの操作が許可される間隔。</target>
        </trans-unit>
        <trans-unit id="3eb926157324dcd68c93c19d08b965f35645ebd6" translate="yes" xml:space="preserve">
          <source>The introduction of new input mechanisms results in increased application complexity to handle various input events, such as key events, mouse events, pen/stylus events, and touch events. To help address this problem, the &lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot;&gt;Pointer Events standard&lt;/a&gt;&lt;em&gt;defines events and related interfaces for handling hardware agnostic pointer input from devices including a mouse, pen, touchscreen, etc.&lt;/em&gt;. That is, the abstract &lt;em&gt;pointer&lt;/em&gt; creates a unified input model that can represent a contact point for a finger, pen/stylus or mouse.</source>
          <target state="translated">新しい入力メカニズムの導入により、キーイベント、マウスイベント、ペン/スタイラスイベント、タッチイベントなどのさまざまな入力イベントを処理するためのアプリケーションの複雑さが増しています。この問題に対処するために、&lt;a href=&quot;http://www.w3.org/TR/pointerevents/&quot;&gt;ポインターイベント標準&lt;/a&gt;&lt;em&gt;は、マウス、ペン、タッチスクリーンなどのデバイスからのハードウェアに依存しないポインター入力を処理するためのイベントと関連インターフェイスを定義しています&lt;/em&gt;。つまり、抽象&lt;em&gt;ポインター&lt;/em&gt;は、指、ペン/スタイラス、またはマウスの接触点を表すことができる統一された入力モデルを作成します。</target>
        </trans-unit>
        <trans-unit id="abb9f95510dfcd52f47283d63812d3b38ccfdc76" translate="yes" xml:space="preserve">
          <source>The issue</source>
          <target state="translated">問題点</target>
        </trans-unit>
        <trans-unit id="8f8da4b4e8269a0c03a44e750d7550c096ec982b" translate="yes" xml:space="preserve">
          <source>The item may not be dropped.</source>
          <target state="translated">アイテムを落とすことはできません。</target>
        </trans-unit>
        <trans-unit id="65a44245b173376cd7e34a331aa502b23a71bdbf" translate="yes" xml:space="preserve">
          <source>The item you wish to update (or insert).</source>
          <target state="translated">更新(挿入)したい項目。</target>
        </trans-unit>
        <trans-unit id="12b90b70e812db945fca73c7ee81205442fcf32a" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;CSSValueList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;CSSValueList&lt;/code&gt; の項目には、0から始まる整数インデックスを介してアクセスできます。</target>
        </trans-unit>
        <trans-unit id="19014f936c326668ea2ca49937a45a65d80c8fe3" translate="yes" xml:space="preserve">
          <source>The items in the collection of nodes are objects and not strings. To get data from node objects, use their properties (e.g. &lt;code&gt;elementNodeReference.childNodes[1].nodeName&lt;/code&gt; to get the name, etc.).</source>
          <target state="translated">ノードのコレクションの項目はオブジェクトであり、文字列ではありません。ノードオブジェクトからデータを取得するには、それらのプロパティを使用します（たとえば、 &lt;code&gt;elementNodeReference.childNodes[1].nodeName&lt;/code&gt; 名前を取得するなど）。</target>
        </trans-unit>
        <trans-unit id="1ed765510dec72b93a3437e7a05cf08d7bf7037b" translate="yes" xml:space="preserve">
          <source>The key = &lt;strong&gt;z&lt;/strong&gt;</source>
          <target state="translated">キー= &lt;strong&gt;z&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5e5f1dbfe9dee996a1a03522a884acd5b831e3d6" translate="yes" xml:space="preserve">
          <source>The key bits to take away from this are:</source>
          <target state="translated">ここで重要なのは、次のようなことです。</target>
        </trans-unit>
        <trans-unit id="f4210dbf3b02cfa151ceac0a8d8faa5e79054d7b" translate="yes" xml:space="preserve">
          <source>The key change here is that instead of fetching the vertex color, we're fetching the texture coordinates and passing them to the vertex shader; this will indicate the location within the texture corresponding to the vertex.</source>
          <target state="translated">ここでの重要な変更点は、頂点のカラーを取得する代わりに、テクスチャの座標を取得して頂点シェーダに渡すことです。</target>
        </trans-unit>
        <trans-unit id="839ae84ae813d9ba3e334df960d534e9bfc5051f" translate="yes" xml:space="preserve">
          <source>The key difference here is that for each vertex, we pass its color using a &lt;code&gt;varying&lt;/code&gt; to the fragment shader.</source>
          <target state="translated">ここでの主な違いは、頂点ごとに、 &lt;code&gt;varying&lt;/code&gt; を使用してフラグメントシェーダーに色を渡すことです。</target>
        </trans-unit>
        <trans-unit id="f15e79e3ad726a6eba111ac63901e860731ca800" translate="yes" xml:space="preserve">
          <source>The key for the record at the cursor's &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_position&quot;&gt;position&lt;/a&gt;.</source>
          <target state="translated">カーソルの&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB#gloss_position&quot;&gt;位置に&lt;/a&gt;あるレコードのキー。</target>
        </trans-unit>
        <trans-unit id="192aee5c47f2716449ab102e49cc31ce4a4e0518" translate="yes" xml:space="preserve">
          <source>The key for the stored record.</source>
          <target state="translated">保存されているレコードのキー。</target>
        </trans-unit>
        <trans-unit id="6f2c3975f2000d1b80af15edb055b357b5add06a" translate="yes" xml:space="preserve">
          <source>The key has only one version, or can't be distinguished between the left and right versions of the key, and was not pressed on the numeric keypad or a key that is considered to be part of the keypad.</source>
          <target state="translated">キーのバージョンが1つしかないか、左右のバージョンの区別がつかず、テンキーやテンキーの一部と思われるキーを押していなかった。</target>
        </trans-unit>
        <trans-unit id="34cb9fcb12f5003653d832e173841dd3cb519bd3" translate="yes" xml:space="preserve">
          <source>The key here is connecting the graph correctly, and also starting both oscillators:</source>
          <target state="translated">ここで重要なのは、グラフを正しく接続することと、両方の発振器を起動することです。</target>
        </trans-unit>
        <trans-unit id="a4d85226d43fbca0da6814f3a48caaef559ad393" translate="yes" xml:space="preserve">
          <source>The key is greater than or equal to this cursor's position and this cursor's direction is &lt;code&gt;prev&lt;/code&gt; or &lt;code&gt;prevunique&lt;/code&gt;.</source>
          <target state="translated">キーはこのカーソルの位置以上で、このカーソルの方向は &lt;code&gt;prev&lt;/code&gt; または &lt;code&gt;prevunique&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0aa6707942ff8ec6cfcc98023af97c687bbc7ff2" translate="yes" xml:space="preserve">
          <source>The key is less than or equal to this cursor's position and the cursor's direction is &lt;code&gt;next&lt;/code&gt; or &lt;code&gt;nextunique&lt;/code&gt;.</source>
          <target state="translated">キーはこのカーソルの位置以下であり、カーソルの方向は &lt;code&gt;next&lt;/code&gt; または &lt;code&gt;nextunique&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c9f8e7e7f111ec47f68e534f4a806fa00ac2b734" translate="yes" xml:space="preserve">
          <source>The key is not a valid key.</source>
          <target state="translated">そのキーは有効なキーではありません。</target>
        </trans-unit>
        <trans-unit id="89ba803d9ccc0b7d292ec0a987eb694cd130f540" translate="yes" xml:space="preserve">
          <source>The key of an element to search for in the map.</source>
          <target state="translated">地図で探す要素のキー。</target>
        </trans-unit>
        <trans-unit id="6682ef34c8531cbce3f2f9c8c513065b078d1f42" translate="yes" xml:space="preserve">
          <source>The key of the item to return from the map.</source>
          <target state="translated">マップから戻るアイテムのキー。</target>
        </trans-unit>
        <trans-unit id="8e743125121265e42aca612b4ad4320cba650c60" translate="yes" xml:space="preserve">
          <source>The key of the record to be deleted, or an &lt;a href=&quot;../idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt; to delete all records with keys in range.</source>
          <target state="translated">削除するレコードのキー、またはキーが範囲内にあるすべてのレコードを削除する&lt;a href=&quot;../idbkeyrange&quot;&gt; &lt;code&gt;IDBKeyRange&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="36621c09eecc06761cbf034dbf2e1364e45c1975" translate="yes" xml:space="preserve">
          <source>The key or key range provided contains an invalid key or is null.</source>
          <target state="translated">提供されたキーまたはキー範囲には無効なキーが含まれているか、NULL です。</target>
        </trans-unit>
        <trans-unit id="5469e34fb81e65f021a705f22386fe5d2d22c0b5" translate="yes" xml:space="preserve">
          <source>The key or key range provided contains an invalid key.</source>
          <target state="translated">提供されたキーまたはキー範囲には無効なキーが含まれています。</target>
        </trans-unit>
        <trans-unit id="1d94fa87b9cd3f44b1cd4de7b5f7ab503a505876" translate="yes" xml:space="preserve">
          <source>The key or key range that identifies the record to be counted.</source>
          <target state="translated">カウントされるレコードを識別するキーまたはキー範囲。</target>
        </trans-unit>
        <trans-unit id="bccb616f056dc7cd3fe50b9d7cf455a16187b2c6" translate="yes" xml:space="preserve">
          <source>The key or key range that identifies the record to be retrieved.</source>
          <target state="translated">取得するレコードを識別するキーまたはキー範囲。</target>
        </trans-unit>
        <trans-unit id="2688e8757b682681e72208df33c54ad3285da191" translate="yes" xml:space="preserve">
          <source>The key parameter may have any of the following conditions:</source>
          <target state="translated">キーパラメータは、以下のいずれかの条件を持つことができます。</target>
        </trans-unit>
        <trans-unit id="867a8ea3be0506e9509bb10dc676ea2f56df51ae" translate="yes" xml:space="preserve">
          <source>The key parameter was provided but does not contain a valid key.</source>
          <target state="translated">キー・パラメータが提供されましたが、有効なキーが含まれていません。</target>
        </trans-unit>
        <trans-unit id="e42629fcd872de243cb3908c73e213a0e269aad3" translate="yes" xml:space="preserve">
          <source>The key path for the index to use. Note that it is possible to create an index with an empty &lt;code&gt;keyPath&lt;/code&gt;, and also to pass in a sequence (array) as a &lt;code&gt;keyPath&lt;/code&gt;.</source>
          <target state="translated">使用するインデックスのキーパス。空の &lt;code&gt;keyPath&lt;/code&gt; でインデックスを作成し、シーケンス（配列）を &lt;code&gt;keyPath&lt;/code&gt; として渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="a9b765cfcdb4ca0356039bb9aebc8b845126d242" translate="yes" xml:space="preserve">
          <source>The key path of the current index is logged to the console: it should be returned as &lt;code&gt;lName&lt;/code&gt;.</source>
          <target state="translated">現在のインデックスの &lt;code&gt;lName&lt;/code&gt; はコンソールに記録されます。lNameとして返される必要があります。</target>
        </trans-unit>
        <trans-unit id="151e23165d553ba4ff3ecc0a0349dbe861efb206" translate="yes" xml:space="preserve">
          <source>The key path used by the new index.</source>
          <target state="translated">新しいインデックスが使用するキーパス。</target>
        </trans-unit>
        <trans-unit id="361a2fde03ec7860c0bc7c8d8b89dd0fdd31282a" translate="yes" xml:space="preserve">
          <source>The key range to be queried. If a single valid key is passed, this will default to a range containing only that key. If nothing is passed, this will default to a key range that selects all the records in this object store.</source>
          <target state="translated">クエリするキーの範囲。1つの有効なキーが渡された場合、そのキーのみを含む範囲がデフォルトとなります。何も渡されなかった場合は、このオブジェクト・ストア内のすべてのレコードを選択するキーの範囲がデフォルトとなります。</target>
        </trans-unit>
        <trans-unit id="67daf28bdc41bbc759694518b484a008fc29e251" translate="yes" xml:space="preserve">
          <source>The key range to use as the cursor's range.</source>
          <target state="translated">カーソルの範囲として使用するキー範囲。</target>
        </trans-unit>
        <trans-unit id="af33071c7b4e2359c4c00ff74c68b1babd5d82fd" translate="yes" xml:space="preserve">
          <source>The key that identifies the record to be retrieved.</source>
          <target state="translated">取得するレコードを識別するキーです。</target>
        </trans-unit>
        <trans-unit id="6b4b46b53d9839db99a9425a11064ea9909b7ee7" translate="yes" xml:space="preserve">
          <source>The key to be used to identify the record.</source>
          <target state="translated">レコードを識別するために使用されるキーです。</target>
        </trans-unit>
        <trans-unit id="1fdf6e9c95d583e5e0876a5868e648cbfc84c1b6" translate="yes" xml:space="preserve">
          <source>The key to position the cursor at.</source>
          <target state="translated">カーソルの位置を決めるキーです。</target>
        </trans-unit>
        <trans-unit id="c682fc397e753d1c0d868d1c003d23412ed998cb" translate="yes" xml:space="preserve">
          <source>The key to use to identify the record. If unspecified, it results to null.</source>
          <target state="translated">レコードを識別するために使用するキー。指定しない場合は null となります。</target>
        </trans-unit>
        <trans-unit id="30075c2a6927cfea55a7e4d8986e1253d1981fde" translate="yes" xml:space="preserve">
          <source>The key to use to identify the record. If unspecified, it results to null. If the object store has a key generator (e.g. autoincrement) the key of the object must be passed in to update the object.</source>
          <target state="translated">レコードを識別するために使用するキー。指定しない場合は null となります。オブジェクトストアにキージェネレータ (autoincrement など)がある場合は、オブジェクトを更新するためにオブジェクトのキーを渡さなければなりません。</target>
        </trans-unit>
        <trans-unit id="493cf1d1e74b75f78372abc1912fe52be61208c4" translate="yes" xml:space="preserve">
          <source>The key to which to move the cursor's position.</source>
          <target state="translated">カーソルの位置を移動させるキーです。</target>
        </trans-unit>
        <trans-unit id="b3bad5a1e956a0e4867df06685c0d2e87567135f" translate="yes" xml:space="preserve">
          <source>The key was a button on a game controller or a joystick on a mobile device.</source>
          <target state="translated">キーはゲームコントローラーのボタンか、モバイル機器のジョイスティックでした。</target>
        </trans-unit>
        <trans-unit id="cc57735dfcc679de2c5685a62b981f145801bc35" translate="yes" xml:space="preserve">
          <source>The key was on a mobile device; this can be on either a physical keypad or a virtual keyboard.</source>
          <target state="translated">キーはモバイルデバイス上にあり、これは物理的なキーパッドまたは仮想キーボード上のいずれかである可能性があります。</target>
        </trans-unit>
        <trans-unit id="40527e4fceb3e2126b2c515e200b6cf73051521c" translate="yes" xml:space="preserve">
          <source>The key was on the numeric keypad, or has a virtual key code that corresponds to the numeric keypad.</source>
          <target state="translated">キーがテンキー上にあったか、テンキーに対応する仮想キーコードを持っていた。</target>
        </trans-unit>
        <trans-unit id="d24c02cba586837216f3b2068b4e2937fc5de0f8" translate="yes" xml:space="preserve">
          <source>The key was the left-hand version of the key; for example, the left-hand</source>
          <target state="translated">鍵は左手版のもので、例えば、左手の</target>
        </trans-unit>
        <trans-unit id="e5a9032c9d30fc7148705d2f2591409eec53addf" translate="yes" xml:space="preserve">
          <source>The key was the right-hand version of the key; for example, the right-hand</source>
          <target state="translated">鍵は右手のバージョンで、例えば、右手の</target>
        </trans-unit>
        <trans-unit id="1270c174b220e24a3377e4ba802e78a3a9be3dff" translate="yes" xml:space="preserve">
          <source>The key whose value is changing as a result of this event.</source>
          <target state="translated">このイベントの結果として値が変更されるキー。</target>
        </trans-unit>
        <trans-unit id="7192b4a1edb91d4b777660c729182dd1560ada81" translate="yes" xml:space="preserve">
          <source>The key whose value you want returned</source>
          <target state="translated">値を返してほしいキー</target>
        </trans-unit>
        <trans-unit id="adfb14ab21961c3042507b76d9f886f75c9c8318" translate="yes" xml:space="preserve">
          <source>The key whose value you want returned.</source>
          <target state="translated">値を返してほしいキー。</target>
        </trans-unit>
        <trans-unit id="b5f93027642b2967f7ba552cb5a6794d0446bf37" translate="yes" xml:space="preserve">
          <source>The key's new value.</source>
          <target state="translated">キーの新しい値。</target>
        </trans-unit>
        <trans-unit id="bcb57f63776a7d4a6c9afed5f91254aadbad8b98" translate="yes" xml:space="preserve">
          <source>The key's old value.</source>
          <target state="translated">キーの古い値。</target>
        </trans-unit>
        <trans-unit id="7f76c6b2c5bda1e950d51d378999359849f255f5" translate="yes" xml:space="preserve">
          <source>The keyboard</source>
          <target state="translated">キーボード</target>
        </trans-unit>
        <trans-unit id="785d40c49ae7d183fa7a21b102146104261dc8e8" translate="yes" xml:space="preserve">
          <source>The keyframeEffect is &lt;strong&gt;accumulated&lt;/strong&gt; on to the underlying value: &lt;code&gt;blur(5)&lt;/code&gt;.</source>
          <target state="translated">keyframeEffectは、基になる値 &lt;code&gt;blur(5)&lt;/code&gt; に&lt;strong&gt;累積&lt;/strong&gt;されます。</target>
        </trans-unit>
        <trans-unit id="94f16f5a41187e1166716ffaebeac3bd28482ca2" translate="yes" xml:space="preserve">
          <source>The keypress event &lt;strong&gt;should&lt;/strong&gt; be raised when the user presses a key on the keyboard. However, not all browsers fire keypress events for certain keys.</source>
          <target state="translated">keypressイベント&lt;strong&gt;は&lt;/strong&gt;、ユーザーがキーボードのキーを押したときに発生します。ただし、すべてのブラウザが特定のキーに対してkeypressイベントを発生させるわけではありません。</target>
        </trans-unit>
        <trans-unit id="cbf8e170c7f694cba63b8fa37d8f9d2871be0083" translate="yes" xml:space="preserve">
          <source>The keyup event is raised when the user releases a key that's been pressed.</source>
          <target state="translated">キーアップイベントは、ユーザーが押したキーを離したときに発生します。</target>
        </trans-unit>
        <trans-unit id="b55d97857332acbb459f32cabcf215ae7557960e" translate="yes" xml:space="preserve">
          <source>The kind of change that took place (either a change to the list of children or a change to an attribute) is detected by looking at the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/type&quot;&gt;&lt;code&gt;mutation.type&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">発生した変更の種類（子のリストの変更または属性の変更）は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MutationRecord/type&quot;&gt; &lt;code&gt;mutation.type&lt;/code&gt; &lt;/a&gt;プロパティを調べることで検出されます。</target>
        </trans-unit>
        <trans-unit id="5c48a2ceab27ce3680069083dc2cbd28009ca936" translate="yes" xml:space="preserve">
          <source>The kinds available for audio tracks are:</source>
          <target state="translated">オーディオトラックに利用できる種類は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="d53bb75ade94ed31212d22e391697e1ff2a3679f" translate="yes" xml:space="preserve">
          <source>The kinds available for video tracks are:</source>
          <target state="translated">ビデオトラックに利用可能な種類は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="7b361bd7e0d5d74ac8813cc9735af5840eca145c" translate="yes" xml:space="preserve">
          <source>The label and/or protocol string is too long; these cannot be longer than 65,535 bytes (bytes, rather than characters).</source>
          <target state="translated">ラベルおよび/またはプロトコル文字列が長すぎます。</target>
        </trans-unit>
        <trans-unit id="2320addd9492913e5914aec07c23611ab7bc6d67" translate="yes" xml:space="preserve">
          <source>The language code of the notification as specified in the constructor's &lt;code&gt;options&lt;/code&gt; parameter.</source>
          <target state="translated">コンストラクタの &lt;code&gt;options&lt;/code&gt; パラメータで指定された通知の言語コード。</target>
        </trans-unit>
        <trans-unit id="4bc1c1f724790abf32447f656dfb92df32bd125f" translate="yes" xml:space="preserve">
          <source>The language code returned by this property is defined in the &lt;a href=&quot;https://www.ietf.org/rfc/bcp/bcp47.txt&quot;&gt;&lt;em&gt;Tags for Identifying Languages (BCP47)&lt;/em&gt;&lt;/a&gt; IETF document. Common examples include &quot;en&quot; for English, &quot;ja&quot; for Japanese, &quot;es&quot; for Spanish and so on. The default value of this attribute is &lt;code&gt;unknown&lt;/code&gt;. Note that this attribute, though valid at the individual element level described here, is most often specified for the root element of the document.</source>
          <target state="translated">このプロパティによって返される言語コードは、言語&lt;a href=&quot;https://www.ietf.org/rfc/bcp/bcp47.txt&quot;&gt;&lt;em&gt;を識別するため&lt;/em&gt;&lt;/a&gt;の&lt;em&gt;タグ（BCP47）&lt;/em&gt; IETFドキュメントで定義されています。一般的な例には、英語の「en」、日本語の「ja」、スペイン語の「es」などがあります。この属性のデフォルト値は &lt;code&gt;unknown&lt;/code&gt; です。この属性は、ここで説明する個々の要素レベルで有効ですが、ほとんどの場合、ドキュメントのルート要素に指定されています。</target>
        </trans-unit>
        <trans-unit id="4987e96e6986297fb2f725f49d7c23b05097dbf0" translate="yes" xml:space="preserve">
          <source>The language itself is specified using a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; representing a &lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47 language tag&lt;/a&gt;. See the Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2 letter language codes&lt;/a&gt; page for a simple reference.</source>
          <target state="translated">言語自体は、&lt;a href=&quot;http://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47言語タグを&lt;/a&gt;表す&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;を使用して指定されます。簡単なリファレンスについては、Sitepoint &lt;a href=&quot;http://www.sitepoint.com/web-foundations/iso-2-letter-language-codes/&quot;&gt;ISO 2文字の言語コードの&lt;/a&gt;ページを参照してください。</target>
        </trans-unit>
        <trans-unit id="a8e4087ba337405b3a9b453774b84a0685fedf98" translate="yes" xml:space="preserve">
          <source>The language was not supported.</source>
          <target state="translated">言語には対応していませんでした。</target>
        </trans-unit>
        <trans-unit id="b0b07dd7d614eeb60bd3cf2fd1aa603997a5de3e" translate="yes" xml:space="preserve">
          <source>The last bit of code adds a handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event on the stop button using &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">コードの最後のビットは、&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt;を使用して停止ボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのハンドラーを追加します。</target>
        </trans-unit>
        <trans-unit id="5b066a32955a10ad46e892f98de6f1d37f7ec635" translate="yes" xml:space="preserve">
          <source>The last box has thresholds each 25%.</source>
          <target state="translated">最後のボックスには25%ずつ閾値があります。</target>
        </trans-unit>
        <trans-unit id="79033c5a78365c5cdff3b580d1a7e54abdb7ecd0" translate="yes" xml:space="preserve">
          <source>The last candidate to be signaled this way by the remote peer will be a special candidate denoting end-of-candidates. Out of interest, end-of-candidates may be manually indicated as follows:</source>
          <target state="translated">リモートピアからこのようにシグナルされる最後の候補は、エンドオブカンディデートを示す特別な候補となる。興味のない方は、以下のように手動でエンドオブカ ンディデートを表示してもよい。</target>
        </trans-unit>
        <trans-unit id="9d87f88141eadb5bdabe7b1e1d4e09d8f17dbba8" translate="yes" xml:space="preserve">
          <source>The last color stop in each of the four gradients uses a fully transparent color. If you want to have a nice transition from this to the previous color stop, both colors should be equal. This isn't very obvious from the code because it uses two different CSS color methods as a demonstration, but in the first gradient &lt;code&gt;#019F62 = rgba(1,159,98,1)&lt;/code&gt;.</source>
          <target state="translated">4つのグラデーションのそれぞれの最後のカラーストップは、完全に透明なカラーを使用します。これから前のカラーストップにうまく移行したい場合は、両方のカラーが等しいはずです。これは、2つの異なるCSSカラーメソッドをデモとして使用しているため、コードからは明らかではありませんが、最初のグラデーションでは &lt;code&gt;#019F62 = rgba(1,159,98,1)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="d20b5925dc805c0f499ab58420f0ed328ac07175" translate="yes" xml:space="preserve">
          <source>The last keyframe says that the animation's final frame should draw the animation rotated 90&amp;deg; to the right from its original orientation.</source>
          <target state="translated">最後のキーフレームは、アニメーションの最終フレームが、元の方向から右に90度回転したアニメーションを描画する必要があることを示しています。</target>
        </trans-unit>
        <trans-unit id="cb70956ca1253ba3077f035042b417412983bf93" translate="yes" xml:space="preserve">
          <source>The last line contained in this function is a &lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt;&lt;/a&gt; call, which runs the &lt;code&gt;reportGamepads()&lt;/code&gt; function after a 1 second delay. Why do we need to do this? First of all, VR controllers will only be ready after their associated VR headset is active, so we need to invoke this after &lt;code&gt;getVRDisplays()&lt;/code&gt; has been called and returned the display information. Second, the Gamepad API is much older than the WebVR API, and not promise-based. As you'll see later, the &lt;code&gt;getGamepads()&lt;/code&gt; method is synchronous, and just returns the &lt;code&gt;Gamepad&lt;/code&gt; objects immediately &amp;mdash; it doesn't wait for the controller to be ready to report information. Unless you wait for a little while, returned information may not be accurate (at least, this is what we found in our tests).</source>
          <target state="translated">この関数に含まれる最後の行は&lt;a href=&quot;../windoworworkerglobalscope/settimeout&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.setTimeout()&lt;/code&gt; &lt;/a&gt;呼び出しで、1秒の遅延後に &lt;code&gt;reportGamepads()&lt;/code&gt; 関数を実行します。なぜこれを行う必要があるのですか？まず第一に、VRコントローラーは、関連付けられたVRヘッドセットがアクティブになった後にのみ準備が整うので、 &lt;code&gt;getVRDisplays()&lt;/code&gt; が呼び出されて表示情報を返した後にこれを呼び出す必要があります。第二に、ゲームパッドAPIはWebVR APIよりもはるかに古く、プロミスベースではありません。後で見るように、 &lt;code&gt;getGamepads()&lt;/code&gt; メソッドは同期的で、 &lt;code&gt;Gamepad&lt;/code&gt; 返すだけです。オブジェクトは即座に&amp;mdash;コントローラーが情報を報告する準備ができるのを待ちません。しばらく待たないと、返された情報が正確でない可能性があります（少なくとも、これはテストで見つかりました）。</target>
        </trans-unit>
        <trans-unit id="7d599ed7b8a42f11652d468a0d232ab7c33dc2e5" translate="yes" xml:space="preserve">
          <source>The last line could be simplified to:</source>
          <target state="translated">最後の一行は簡略化して</target>
        </trans-unit>
        <trans-unit id="2d77e50ae88c50271c2cb28136fc36f82e901256" translate="yes" xml:space="preserve">
          <source>The last of three properties that declare the USB protocol version supported by the device.</source>
          <target state="translated">デバイスがサポートする USB プロトコルのバージョンを宣言する 3 つのプロパティのうち、最後のもの。</target>
        </trans-unit>
        <trans-unit id="34baddfe12a5a5f50b24934516856a87dbc3b0a2" translate="yes" xml:space="preserve">
          <source>The last part of the code simply updates the &lt;code&gt;pitch&lt;/code&gt;/&lt;code&gt;rate&lt;/code&gt; values displayed in the UI, each time the slider positions are moved.</source>
          <target state="translated">コードの最後の部分は、スライダーの位置が移動するたびに、UIに表示される &lt;code&gt;pitch&lt;/code&gt; / &lt;code&gt;rate&lt;/code&gt; 値を更新するだけです。</target>
        </trans-unit>
        <trans-unit id="ec856fb858019878d9f8ced26d4113caf7988f3a" translate="yes" xml:space="preserve">
          <source>The last part of the rendering loop involves us calling &lt;a href=&quot;../vrdisplay/submitframe&quot;&gt;&lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt;&lt;/a&gt; &amp;mdash; now all the work has been done and we've rendered the display on the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt;, this method then submits the frame to the VR display so it is displayed on there as well.</source>
          <target state="translated">レンダリングループの最後の部分では、&lt;a href=&quot;../vrdisplay/submitframe&quot;&gt; &lt;code&gt;VRDisplay.submitFrame()&lt;/code&gt; を&lt;/a&gt;呼び出す必要があります。これですべての作業が完了し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; に&lt;/a&gt;表示をレンダリングしました。このメソッドは、フレームをVRディスプレイに送信して表示します。そこにも。</target>
        </trans-unit>
        <trans-unit id="9195c9bfab4b64ce7140326bf3e1629cbed43290" translate="yes" xml:space="preserve">
          <source>The last significant piece of the puzzle: code that displays, for the user's reference, a list of the constrainable properties which their browser supports. Each property is a link to its documentation on MDN for the user's convenience. See the &lt;a href=&quot;../mediadevices/getsupportedconstraints#Example&quot;&gt;Example&lt;/a&gt; in &lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;MediaDevices.getSupportedConstraints()&lt;/a&gt; for details on how this code works.</source>
          <target state="translated">パズルの最後の重要な部分：ユーザーの参照のために、ブラウザーがサポートする制約可能なプロパティのリストを表示するコード。各プロパティは、ユーザーの便宜のためにMDNに関するドキュメントへのリンクです。参照の&lt;a href=&quot;../mediadevices/getsupportedconstraints#Example&quot;&gt;例&lt;/a&gt;で&lt;a href=&quot;../mediadevices/getsupportedconstraints&quot;&gt;MediaDevices.getSupportedConstraints（）&lt;/a&gt;このコードがどのように動作するかの詳細については、を。</target>
        </trans-unit>
        <trans-unit id="d89deff0bfa30d0a2451b9502c471d2517af2c6c" translate="yes" xml:space="preserve">
          <source>The last step of filling in the w component can actually be accomplished with a simple matrix. Start with the identity matrix:</source>
          <target state="translated">w 成分を埋める最後のステップは,実際には単純な行列で行うことができます.まず、identity 行列から始めます。</target>
        </trans-unit>
        <trans-unit id="067ca26823af4dc05a63d5370f6423572c52d1d6" translate="yes" xml:space="preserve">
          <source>The last thing the callback does is call &lt;code&gt;setTimeout()&lt;/code&gt; to schedule itself to be called again as soon as possible. In the real world, you would probably schedule this to be done based on knowledge of the video's frame rate.</source>
          <target state="translated">コールバックが行う最後のことは、 &lt;code&gt;setTimeout()&lt;/code&gt; を呼び出して、できるだけ早く自分自身が再び呼び出されるようにスケジュールすることです。現実の世界では、おそらくビデオのフレームレートの知識に基づいてこれを実行するようにスケジュールします。</target>
        </trans-unit>
        <trans-unit id="f134de0e4ce37ae41c15bc1d8855fb82ffe86c05" translate="yes" xml:space="preserve">
          <source>The last thing to do here is set the &lt;code&gt;initialRun&lt;/code&gt; variable to &lt;code&gt;false&lt;/code&gt;, as the initial run is now over.</source>
          <target state="translated">ここで最後に行うのは、初期実行が終了したので、 &lt;code&gt;initialRun&lt;/code&gt; 変数を &lt;code&gt;false&lt;/code&gt; に設定することです。</target>
        </trans-unit>
        <trans-unit id="dc25d4ee0d1e230ce2778ef0b95f0e68cfa9d621" translate="yes" xml:space="preserve">
          <source>The last thing we need to do in order to begin connecting our peers is to create a connection offer.</source>
          <target state="translated">仲間とのつながりを始めるために最後にやるべきことは、つながりのオファーを作ることです。</target>
        </trans-unit>
        <trans-unit id="75b96b94809c6003406d03408c5e923b24267fba" translate="yes" xml:space="preserve">
          <source>The last two handlers are there to handle cases where speech was recognised that wasn't in the defined grammar, or an error occured. &lt;a href=&quot;../speechrecognition/onnomatch&quot;&gt;&lt;code&gt;SpeechRecognition.onnomatch&lt;/code&gt;&lt;/a&gt; seems to be supposed to handle the first case mentioned, although note that at the moment it doesn't seem to fire correctly in Firefox or Chrome; it just returns whatever was recognised anyway:</source>
          <target state="translated">最後の2つのハンドラーは、定義された文法にない音声が認識された場合、またはエラーが発生した場合を処理するためにあります。&lt;a href=&quot;../speechrecognition/onnomatch&quot;&gt; &lt;code&gt;SpeechRecognition.onnomatch&lt;/code&gt; &lt;/a&gt;は、最初に言及したケースを処理するように思われますが、現時点では、FirefoxまたはChromeでは正しく起動されないようです。とにかく認識されたものを返すだけです：</target>
        </trans-unit>
        <trans-unit id="d4fbd2e17b097cdc2fc2bd3589cc6e2ce286eeb5" translate="yes" xml:space="preserve">
          <source>The last way is to generate your own sound, which can be done with either an &lt;a href=&quot;../oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt; or by creating a buffer and populating it with your own data. Check out the &lt;a href=&quot;advanced_techniques&quot;&gt;tutorial here for creating your own instrument&lt;/a&gt; for information on creating sounds with oscillators and buffers.</source>
          <target state="translated">最後の方法は、独自のサウンドを生成することです。これは、&lt;a href=&quot;../oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;を使用するか、バッファーを作成して独自のデータを入力することで実行できます。オシレーターとバッファーでサウンドを&lt;a href=&quot;advanced_techniques&quot;&gt;作成する方法について&lt;/a&gt;は、こちらのチュートリアルで独自の楽器を作成してください。</target>
        </trans-unit>
        <trans-unit id="0df62567dddb9a61427aa37a6b9f83b2a0940019" translate="yes" xml:space="preserve">
          <source>The latest spec has updated this method to a promise-based syntax that works like this:</source>
          <target state="translated">最新の仕様では、このメソッドは次のように動作するプロミスベースの構文に更新されています。</target>
        </trans-unit>
        <trans-unit id="c112df114cea7aee58c85eec22260049a206b052" translate="yes" xml:space="preserve">
          <source>The left (&lt;code&gt;L&lt;/code&gt; and &lt;code&gt;SL&lt;/code&gt;), right (&lt;code&gt;R&lt;/code&gt; and &lt;code&gt;SR&lt;/code&gt;) and central channels are all mixed together. The surround channels are slightly attenuated and the regular lateral channels are power-compensated to make them count as a single channel by multiplying by &lt;code&gt;&amp;radic;2/2&lt;/code&gt;. The subwoofer (&lt;code&gt;LFE&lt;/code&gt;) channel is lost.</source>
          <target state="translated">左（ &lt;code&gt;L&lt;/code&gt; と &lt;code&gt;SL&lt;/code&gt; ）、右（ &lt;code&gt;R&lt;/code&gt; と &lt;code&gt;SR&lt;/code&gt; ）、および中央チャンネルはすべて一緒に混合されます。サラウンドチャネルはわずかに減衰され、通常のラテラルチャネルは電力補償されて、 &lt;code&gt;&amp;radic;2/2&lt;/code&gt; を掛けて1つのチャネルとしてカウントされます。サブウーファー（ &lt;code&gt;LFE&lt;/code&gt; ）チャネルが失われた。</target>
        </trans-unit>
        <trans-unit id="8b361aef24ec293ed9fdf21d200a82b14e7ebefb" translate="yes" xml:space="preserve">
          <source>The left offset of the bounds.</source>
          <target state="translated">バウンズの左のオフセット。</target>
        </trans-unit>
        <trans-unit id="3deffa6bdd6f1859714ee9f5419eb48e584052f7" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/ms536956(v=vs.71)&quot;&gt;onpropertychange&lt;/a&gt;&lt;/code&gt; event can be used to create a living &lt;code&gt;classList&lt;/code&gt; mockup thanks to a &lt;code&gt;Element.prototype.className&lt;/code&gt; property that fires the specified event once it is changed.</source>
          <target state="translated">指定されたイベントが変更されると発生する &lt;code&gt;Element.prototype.className&lt;/code&gt; プロパティにより、レガシーの &lt;code&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/windows/ms536956(v=vs.71)&quot;&gt;onpropertychange&lt;/a&gt;&lt;/code&gt; イベントを使用して、生きている &lt;code&gt;classList&lt;/code&gt; モックアップを作成できます。</target>
        </trans-unit>
        <trans-unit id="991ee95f476371686a49139b801d252cad4655db" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.navigation&lt;/code&gt; read-only property returns a &lt;a href=&quot;../performancenavigation&quot;&gt;&lt;code&gt;PerformanceNavigation&lt;/code&gt;&lt;/a&gt; object representing the type of navigation that occurs in the given browsing context, such as the number of redirections needed to fetch the resource.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.navigation&lt;/code&gt; 読み取り専用プロパティは、リソースのフェッチに必要なリダイレクトの数など、特定のブラウジングコンテキストで発生するナビゲーションのタイプを表す&lt;a href=&quot;../performancenavigation&quot;&gt; &lt;code&gt;PerformanceNavigation&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="b669d6807ccf1cfbe482bbddfbc335eb55e21a3d" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.timing&lt;/code&gt; read-only property returns a &lt;a href=&quot;../performancetiming&quot;&gt;&lt;code&gt;PerformanceTiming&lt;/code&gt;&lt;/a&gt; object containing latency-related performance information.</source>
          <target state="translated">レガシーの &lt;code&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.timing&lt;/code&gt; 読み取り専用プロパティは、レイテンシ関連のパフォーマンス情報を含む&lt;a href=&quot;../performancetiming&quot;&gt; &lt;code&gt;PerformanceTiming&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="226101c19f1d7ea020442ab860991c2ced0375ce" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectCount&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned short&lt;/code&gt; representing the number of REDIRECTs done before reaching the page.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectCount&lt;/code&gt; 読み取り専用プロパティは、ページに到達する前に行われたREDIRECTの数を表す &lt;code&gt;unsigned short&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="1d7651c61cf6df6c99b779f1cb47c197f52e4637" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.type&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned short&lt;/code&gt; containing a constant describing how the navigation to this page was done. Possible values are:</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceNavigation&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.type&lt;/code&gt; 読み取り専用プロパティは、このページへのナビゲーションがどのように行われたかを説明する定数を含む &lt;code&gt;unsigned short&lt;/code&gt; を返します。可能な値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7751a05a46cb461f6928cc01ccc6bfb41b3b59d0" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.connectEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment end time is given. If a persistent connection is used, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.connectEnd&lt;/code&gt; 読み取り専用プロパティは、接続がネットワークで開かれるUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。トランスポート層がエラーを報告し、接続の確立が再度開始された場合、最後の接続確立の終了時間が示されます。永続的な接続が使用されている場合、値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。すべての安全な接続ハンドシェイクまたはSOCKS認証が終了すると、接続は開いたと見なされます。</target>
        </trans-unit>
        <trans-unit id="5e8518f5d3524cb6abc645f41c2a0b56e1cd3a61" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.connectStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establisment start time is given. If a persistent connection is used, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.connectStart&lt;/code&gt; 読み取り専用プロパティは、接続を開く要求がネットワークに送信されるUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。トランスポート層がエラーを報告し、接続の確立が再度開始された場合、最後の接続確立開始時刻が示されます。永続的な接続が使用されている場合、値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。</target>
        </trans-unit>
        <trans-unit id="ac255ec52b31ad62e317bef3cb4616880f070f84" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domComplete&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'complete'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domComplete&lt;/code&gt; は読み取り専用のプロパティが返す &lt;code&gt;unsigned long long&lt;/code&gt; 型パーサがその時にあるメイン文書、上の作業が終わったら、UNIXエポックからのミリ秒で、瞬間を表す&lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;に変わり &lt;code&gt;'complete'&lt;/code&gt; と対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされます。</target>
        </trans-unit>
        <trans-unit id="f464d3a9b36a7555db972e109e729df0662b306a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domContentLoadedEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in milliseconds since the UNIX epoch, right after all the scripts that need to be executed as soon as possible, in order or not, has been executed.</source>
          <target state="translated">レガシーの &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domContentLoadedEventEnd&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。可能な限り早く実行する必要があるすべてのスクリプトが実行された直後に実行されます。</target>
        </trans-unit>
        <trans-unit id="118852e6cd5d77518b33a873ce86e3ef63d53f22" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domContentLoadedEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, right before the parser sent the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; event, that is right after all the scripts that need to be executed right after parsing has been executed.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domContentLoadedEventStart&lt;/code&gt; 読み取り専用プロパティは、パーサーが &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; イベントを送信する直前の、UNIXエポックからの瞬間をミリ秒単位で表す、 &lt;code&gt;unsigned long long&lt;/code&gt; 返します。これは、解析直後に実行する必要のあるすべてのスクリプトの直後です。実行されました。</target>
        </trans-unit>
        <trans-unit id="c7bf348d5e545c8dee00a32759e591a7412fc209" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domInteractive&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser finished its work on the main document, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'interactive'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domInteractive&lt;/code&gt; は読み取り専用のプロパティが返す &lt;code&gt;unsigned long long&lt;/code&gt; 型パーサがその時にあるメイン文書、上の作業が終わったら、UNIXエポックからのミリ秒で、瞬間を表す&lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;への変更 &lt;code&gt;'interactive'&lt;/code&gt; と対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされます。</target>
        </trans-unit>
        <trans-unit id="03dfd3ffba9e555ad75bac281e9a2e746728a5c4" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domLoading&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the parser started its work, that is when its &lt;a href=&quot;../document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'loading'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domLoading&lt;/code&gt; 読み取り専用プロパティは、パーサーが作業を開始したとき、つまり&lt;a href=&quot;../document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;'loading'&lt;/code&gt; に変化し、対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントが発生したときの、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。投げた。</target>
        </trans-unit>
        <trans-unit id="d608e73cb2b1f6a7e9fe499082775a5dd0b0d623" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domainLookupEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レガシーの &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domainLookupEnd&lt;/code&gt; 読み取り専用プロパティは、ドメインのルックアップが終了したUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。永続的な接続が使用されている場合、または情報がキャッシュまたはローカルリソースに格納されている場合、値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。</target>
        </trans-unit>
        <trans-unit id="adf40546d2d607c3a1be0c577385207611bcc1ec" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.domainLookupStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.domainLookupStart&lt;/code&gt; 読み取り専用プロパティは、ドメインルックアップが開始されるUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。永続的な接続が使用されている場合、または情報がキャッシュまたはローカルリソースに格納されている場合、値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。</target>
        </trans-unit>
        <trans-unit id="ee2a8b4fb6a44cb3f9127070711872c829f618bd" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.fetchStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the browser is ready to fetch the document using an HTTP request. This moment is &lt;em&gt;before&lt;/em&gt; the check to any application cache.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.fetchStart&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位の &lt;code&gt;unsigned long long&lt;/code&gt; 表すunsigned long longを返し、ブラウザーはHTTPリクエストを使用してドキュメントをフェッチする準備ができています。この瞬間は、アプリケーションキャッシュのチェックの&lt;em&gt;前&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="cb673292bb1c1718569717750f71aa718fdfc0d4" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.loadEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.loadEventEnd&lt;/code&gt; 読み取り専用プロパティは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントハンドラーが終了したとき、つまり、ロードイベントが完了したときの、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。このイベントがまだ送信されていないか、まだ完了していない場合は、 &lt;code&gt;0.&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="d605e5d9b460554f7b34223da6b5c6fa81d776b2" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.loadEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event was sent for the current document. If this event has not yet been sent, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.loadEventStart&lt;/code&gt; 読み取り専用プロパティは、現在のドキュメントに対して &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントが送信された瞬間を、UNIXエポックからのミリ秒単位で表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。このイベントがまだ送信されていない場合は、 &lt;code&gt;0.&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="cb18e8242f4599f9e6e56706171236c04003fc27" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.navigationStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, right after the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as &lt;a href=&quot;fetchstart&quot;&gt;&lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.navigationStart&lt;/code&gt; 読み取り専用プロパティは、同じ参照コンテキストで前のドキュメントでアンロードのプロンプトが終了した直後の、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。以前のドキュメントがない場合、この値は&lt;a href=&quot;fetchstart&quot;&gt; &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; &lt;/a&gt;と同じになります。</target>
        </trans-unit>
        <trans-unit id="71ea8521182e56178fca35d3d97284c7e660d2c9" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectEnd&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位で、最後のHTTPリダイレクトが完了した瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。つまり、HTTP応答の最後のバイトが受信されたときです。リダイレクトがない場合、またはリダイレクトの1つが同じオリジンでない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="be97e9a3c9498cb11974bb502b92e931ff7d7ca2" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.redirectStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the first HTTP redirect starts. If there is no redirect, or if one of the redirect is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.redirectStart&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位で、最初のHTTPリダイレクトが開始する瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。リダイレクトがない場合、またはリダイレクトの1つが同じオリジンでない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c2ee882c39baa6766799112f8d4f188d261ec2df" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.requestStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.</source>
          <target state="translated">レガシーの &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.requestStart&lt;/code&gt; 読み取り専用プロパティは、ブラウザーがサーバーまたはキャッシュから実際のドキュメントを取得するリクエストを送信したときの、UNIXエポックからのミリ秒単位の &lt;code&gt;unsigned long long&lt;/code&gt; 表すunsigned long longを返します。要求の開始後にトランスポート層で障害が発生し、接続が再開された場合、このプロパティは新しい要求に対応する時間に設定されます。</target>
        </trans-unit>
        <trans-unit id="161423cb0f8696c0a1f22f2f2509456ff7852724" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.responseEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, when the browser received the last byte of the response, or when the connection is closed if this happened first, from the server from a cache or from a local resource.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.responseEnd&lt;/code&gt; 読み取り専用プロパティは、ブラウザーが応答の最後のバイトを受信したとき、またはこれが最初に発生した場合にサーバーから接続が閉じられたときの、UNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。キャッシュまたはローカルリソースから。</target>
        </trans-unit>
        <trans-unit id="995636fd3adbd5e1e1bf4c159a6e0d6cecc105ee" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.responseStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment in time (in milliseconds since the UNIX epoch) when the browser received the first byte of the response from the server, cache, or local resource.</source>
          <target state="translated">レガシー &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.responseStart&lt;/code&gt; 読み取り専用プロパティは、ブラウザーがサーバー、キャッシュ、またはローカルリソースから応答の最初のバイトを受信した瞬間（UNIXエポックからのミリ秒）を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="3391ab6e530362c3c546a8edb123c7074511744a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.secureConnectionStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, where the secure connection handshake starts. If no such connection is requested, it returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.secureConnectionStart&lt;/code&gt; 読み取り専用プロパティは、安全な接続ハンドシェイクが開始されるUNIXエポックからのミリ秒単位の瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。そのような接続が要求されていない場合は、 &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e978baf26aacb3860584a49e53518cf8203dc79a" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.unloadEventEnd&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.unloadEventEnd&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位で、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; イベントハンドラーが終了する瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。前のドキュメントがない場合、または前のドキュメント、または必要なリダイレクトの1つが同じ生成元でない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1c346cfcad772624e21c3caae0f1ba82de16086e" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.unloadEventStart&lt;/code&gt; read-only property returns an &lt;code&gt;unsigned long long&lt;/code&gt; representing the moment, in miliseconds since the UNIX epoch, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event has been thrown. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">従来の &lt;code&gt;&lt;strong&gt;PerformanceTiming&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.unloadEventStart&lt;/code&gt; 読み取り専用プロパティは、UNIXエポックからのミリ秒単位で &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; イベントがスローされた瞬間を表す &lt;code&gt;unsigned long long&lt;/code&gt; を返します。前のドキュメントがない場合、または前のドキュメント、または必要なリダイレクトの1つが同じ生成元でない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="a09c9e0ff5b7eff186935e496eb51661102e5db9" translate="yes" xml:space="preserve">
          <source>The legacy &lt;code&gt;PerformanceNavigation&lt;/code&gt; interface represents information about how the navigation to the current document was done.</source>
          <target state="translated">従来の &lt;code&gt;PerformanceNavigation&lt;/code&gt; インターフェイスは、現在のドキュメントへのナビゲーションがどのように行われたかに関する情報を表します。</target>
        </trans-unit>
        <trans-unit id="03cf84e2a1418f35c66f1abc2a0ea73dfbc1221b" translate="yes" xml:space="preserve">
          <source>The legacy miscelleanous encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16be'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16le'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;'x-user-defined'&lt;/code&gt;.</source>
          <target state="translated">従来のその他のエンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16be'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/UTF-16#Byte_order_encoding_schemes&quot;&gt;'utf-16le'&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;'x-user-defined'&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="107e2f36965d453dab08ad335ad94a668a4f286b" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Chinese (simplified) encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GBK&quot;&gt;'gbk'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GB_18030&quot;&gt;'gb18030'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HZ_(character_encoding)&quot;&gt;'hz-gb-2312'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のマルチバイト中国語（簡体字）エンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GBK&quot;&gt;'gbk'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GB_18030&quot;&gt;'gb18030'&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/HZ_(character_encoding)&quot;&gt;'hz-gb-2312'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a8a5835a2e8a1f5ec7e27d5bae3f4d80218d0e9" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Chinese (traditional) encoding: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Big5&quot;&gt;'big5'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のマルチバイト中国語（伝統的）エンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Big5&quot;&gt;'big5'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5f451bd6ace68cc71d8226268b330cdb99242f9f" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Japanese encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP&quot;&gt;'euc-jp'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP&quot;&gt;'iso-2022-jp'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shift%20JIS&quot;&gt;'shift-jis'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のマルチバイト日本語エンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-JP&quot;&gt;'euc-jp'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-JP&quot;&gt;'iso-2022-jp'&lt;/a&gt;&lt;/code&gt; 、および &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Shift%20JIS&quot;&gt;'shift-jis'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a2776496780c85245ee819a70dbb614637574ce6" translate="yes" xml:space="preserve">
          <source>The legacy multi-byte Korean encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR&quot;&gt;'euc-kr'&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR&quot;&gt;'iso-2022-kr'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のマルチバイト韓国語エンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Extended_Unix_Code#EUC-KR&quot;&gt;'euc-kr'&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_2022#ISO-2022-KR&quot;&gt;'iso-2022-kr'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="992cfc9bc19b3fba8793b0bb64fa18ad6effc447" translate="yes" xml:space="preserve">
          <source>The legacy single-byte encodings: &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_page_866&quot;&gt;'ibm866'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-2&quot;&gt;'iso-8859-2'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-3&quot;&gt;'iso-8859-3'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-4&quot;&gt;'iso-8859-4'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-5&quot;&gt;'iso-8859-5'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-6&quot;&gt;'iso-8859-6'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-7&quot;&gt;'iso-8859-7'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-8&quot;&gt;'iso-8859-8'&lt;/a&gt;'&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8859-8-I&quot;&gt;'iso-8859-8i'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-10&quot;&gt;'iso-8859-10'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-13&quot;&gt;'iso-8859-13'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-14&quot;&gt;'iso-8859-14'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-15&quot;&gt;'iso-8859-15'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-16&quot;&gt;'iso-8859-16'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-R&quot;&gt;'koi8-r'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-U&quot;&gt;'koi8-u'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mac%20OS%20Roman&quot;&gt;'macintosh'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-874&quot;&gt;'windows-874'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1250&quot;&gt;'windows-1250'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1251&quot;&gt;'windows-1251'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1252&quot;&gt;'windows-1252'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1253&quot;&gt;'windows-1253'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1254&quot;&gt;'windows-1254'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1255&quot;&gt;'windows-1255'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1256&quot;&gt;'windows-1256'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1257&quot;&gt;'windows-1257'&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1258&quot;&gt;'windows-1258'&lt;/a&gt;&lt;/code&gt;, or &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Macintosh%20Cyrillic%20encoding&quot;&gt;'x-mac-cyrillic'&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">従来のシングルバイトエンコーディング： &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Code_page_866&quot;&gt;'ibm866'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-2&quot;&gt;'iso-8859-2'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-3&quot;&gt;'iso-8859-3'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-4&quot;&gt;'iso-8859-4'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-5&quot;&gt;'iso-8859-5'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-6&quot;&gt;'iso-8859-6'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-7&quot;&gt;'iso-8859-7'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-8&quot;&gt;'iso-8859-8'&lt;/a&gt;'&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO-8859-8-I&quot;&gt;'iso-8859-8i'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-10&quot;&gt;'iso-8859-10'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-13&quot;&gt;'iso-8859-13'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-14&quot;&gt;'iso-8859-14'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-15&quot;&gt;'iso-8859-15'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/ISO/IEC_8859-16&quot;&gt;'iso-8859-16'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-R&quot;&gt;'koi8-r'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/KOI8-U&quot;&gt;'koi8-u'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Mac%20OS%20Roman&quot;&gt;'macintosh'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-874&quot;&gt;'windows-874'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1250&quot;&gt;'windows-1250'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1251&quot;&gt;'windows-1251'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1252&quot;&gt;'windows-1252'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1253&quot;&gt;'windows-1253'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1254&quot;&gt;'windows-1254'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1255&quot;&gt;'windows-1255'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1256&quot;&gt;'windows-1256'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1257&quot;&gt;'windows-1257'&lt;/a&gt;&lt;/code&gt; 、 &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Windows-1258&quot;&gt;'windows-1258'&lt;/a&gt;&lt;/code&gt; 、または &lt;code&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Macintosh%20Cyrillic%20encoding&quot;&gt;'x-mac-cyrillic'&lt;/a&gt;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3573556a9ad431ddcfbdd8000f2d7338da0ca8fc" translate="yes" xml:space="preserve">
          <source>The length of time in milliseconds that the animation's effects will run. This is equal to the &lt;a href=&quot;../effecttiming/duration&quot;&gt;iteration duration&lt;/a&gt; multiplied by the &lt;a href=&quot;../effecttiming/iterations&quot;&gt;iteration count&lt;/a&gt;.</source>
          <target state="translated">アニメーションの効果が実行される時間（ミリ秒）。これは、&lt;a href=&quot;../effecttiming/duration&quot;&gt;反復期間&lt;/a&gt;に&lt;a href=&quot;../effecttiming/iterations&quot;&gt;反復カウントを&lt;/a&gt;掛けたものに等しい。</target>
        </trans-unit>
        <trans-unit id="5862e03466770c37062a2f977ebc77f035c1474d" translate="yes" xml:space="preserve">
          <source>The length of time, in milliseconds, to wait between tones. The browser will enforce a minimum value of 30 ms (that is, if you specify a lower value, 30 ms will be used instead); the default is 70 ms.</source>
          <target state="translated">音が鳴るまでの待ち時間をミリ秒単位で指定します。ブラウザは最小値として 30 ms を強制します (これより低い値を指定した場合は 30 ms が代わりに使用されます)。</target>
        </trans-unit>
        <trans-unit id="0111f2ae0e188a0206cb4c68143ee4ad23564f60" translate="yes" xml:space="preserve">
          <source>The letters A-D</source>
          <target state="translated">A-Dの文字</target>
        </trans-unit>
        <trans-unit id="62c01630e4e7a2c34fddf0b6ea92c9b52e9bb15b" translate="yes" xml:space="preserve">
          <source>The level of the ambient light in &lt;a href=&quot;https://en.wikipedia.org/wiki/lux&quot;&gt;lux&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://en.wikipedia.org/wiki/lux&quot;&gt;ルクス単位&lt;/a&gt;の環境光のレベル。</target>
        </trans-unit>
        <trans-unit id="5d20631ddcf8499c56ada461011dd7fb5e5aa65c" translate="yes" xml:space="preserve">
          <source>The lifetime of a service worker registration is beyond that of the &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; objects that represent them within the lifetime of their corresponding service worker clients. The browser maintains a persistent list of active &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; objects.</source>
          <target state="translated">Service Worker登録のライフタイムは、対応するService Workerクライアントのライフタイム内でそれらを表す &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; オブジェクトのライフタイムを超えています。ブラウザは、アクティブな &lt;code&gt;ServiceWorkerRegistration&lt;/code&gt; オブジェクトの永続的なリストを維持します。</target>
        </trans-unit>
        <trans-unit id="45f0e24c51a82152e5c4cc0b26a57a9b47fb7fe9" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;let [kind, type, direction] = device.kind.match(/(\w+)(input|output)/i);&lt;/code&gt; deserves special notice. This uses &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;destructuring assignment&lt;/a&gt; (a new feature of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla&quot;&gt;ECMAScript 6&lt;/a&gt;) to assign the values of the first three items in the array returned by &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt;&lt;code&gt;String.match()&lt;/code&gt;&lt;/a&gt; to the variables &lt;code&gt;kind&lt;/code&gt;, &lt;code&gt;type&lt;/code&gt;, and &lt;code&gt;direction&lt;/code&gt;. We do this because the value of &lt;a href=&quot;../mediadeviceinfo/kind&quot;&gt;&lt;code&gt;MediaDeviceInfo.kind&lt;/code&gt;&lt;/a&gt; is a single string that includes both the media type and the direction the media flows, such as &quot;audioinput&quot; or &quot;videooutput&quot;. This line, then, pulls out the type (&quot;audio&quot; or &quot;video&quot;) and direction (&quot;input&quot; or &quot;output&quot;) so they can be used to construct the string displayed in the list.</source>
          <target state="translated">行 &lt;code&gt;let [kind, type, direction] = device.kind.match(/(\w+)(input|output)/i);&lt;/code&gt; 特別な注意が必要です。これは、構造化&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&quot;&gt;割り当て&lt;/a&gt;（&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/New_in_JavaScript/ECMAScript_6_support_in_Mozilla&quot;&gt;ECMAScript 6の&lt;/a&gt;新機能）を使用して、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match&quot;&gt; &lt;code&gt;String.match()&lt;/code&gt; &lt;/a&gt;によって返された配列の最初の3つの項目の値を変数 &lt;code&gt;kind&lt;/code&gt; 、 &lt;code&gt;type&lt;/code&gt; 、および &lt;code&gt;direction&lt;/code&gt; に割り当てます。&lt;a href=&quot;../mediadeviceinfo/kind&quot;&gt; &lt;code&gt;MediaDeviceInfo.kind&lt;/code&gt; &lt;/a&gt;の値が「audioinput」や「videooutput」など、メディアタイプとメディアフローの方向の両方を含む単一の文字列です。次に、この行はタイプ（「オーディオ」または「ビデオ」）および方向（「入力」または「出力」）を引き出し、リストに表示される文字列を作成するために使用できます。</target>
        </trans-unit>
        <trans-unit id="477ed0b11b70ecb616e18cd2d328c9322fbe0907" translate="yes" xml:space="preserve">
          <source>The line begins at (30, 50) and ends at (150, 100).</source>
          <target state="translated">(30,50)で始まり、(150,100)で終わるラインです。</target>
        </trans-unit>
        <trans-unit id="37afa4f4a4e5a0440375bf5c79eeec6928c43daf" translate="yes" xml:space="preserve">
          <source>The line height is the height of the first line of the cue as it appears on the video</source>
          <target state="translated">ラインの高さは、ビデオに表示されるキューの最初のラインの高さです。</target>
        </trans-unit>
        <trans-unit id="a35b61b88bc9c4a13be7c851bb1aa48c22507f5f" translate="yes" xml:space="preserve">
          <source>The line number in the document or worker at which the violation occurred.</source>
          <target state="translated">違反が発生した文書またはワーカーの行番号。</target>
        </trans-unit>
        <trans-unit id="ef5b420f030b6e7986aba8ce5f7fdd36c3e3b8af" translate="yes" xml:space="preserve">
          <source>The line number of the script file on which the error occurred.</source>
          <target state="translated">エラーが発生したスクリプトファイルの行番号。</target>
        </trans-unit>
        <trans-unit id="092a475fe70500fefe52960a23f4d3ec27b6a092" translate="yes" xml:space="preserve">
          <source>The line on the left uses the default &lt;code&gt;&quot;butt&quot;&lt;/code&gt; option. It's drawn completely flush with the guides. The second is set to use the &lt;code&gt;&quot;round&quot;&lt;/code&gt; option. This adds a semicircle to the end that has a radius half the width of the line. The line on the right uses the &lt;code&gt;&quot;square&quot;&lt;/code&gt; option. This adds a box with an equal width and half the height of the line thickness.</source>
          <target state="translated">左側の線はデフォルトの &lt;code&gt;&quot;butt&quot;&lt;/code&gt; オプションを使用しています。ガイドと完全に同じ高さに描かれています。2番目は、 &lt;code&gt;&quot;round&quot;&lt;/code&gt; オプションを使用するように設定されています。これにより、線の幅の半分の半径を持つ半円が端に追加されます。右側の線は &lt;code&gt;&quot;square&quot;&lt;/code&gt; オプションを使用しています。これにより、同じ太さと線の太さの半分の高さのボックスが追加されます。</target>
        </trans-unit>
        <trans-unit id="b0645312db6f85fd07e3d592af78842c6105586d" translate="yes" xml:space="preserve">
          <source>The line on the left uses the default &lt;code&gt;butt&lt;/code&gt; option. You'll notice that it's drawn completely flush with the guides. The second is set to use the &lt;code&gt;round&lt;/code&gt; option. This adds a semicircle to the end that has a radius half the width of the line. The line on the right uses the &lt;code&gt;square&lt;/code&gt; option. This adds a box with an equal width and half the height of the line thickness.</source>
          <target state="translated">左側の線はデフォルトの &lt;code&gt;butt&lt;/code&gt; オプションを使用しています。あなたはそれが完全にガイドと同じ高さに描かれていることに気付くでしょう。2番目は、 &lt;code&gt;round&lt;/code&gt; オプションを使用するように設定されています。これにより、線の幅の半分の半径を持つ半円が端に追加されます。右側の線は &lt;code&gt;square&lt;/code&gt; オプションを使用しています。これにより、同じ太さと線の太さの半分の高さのボックスが追加されます。</target>
        </trans-unit>
        <trans-unit id="13a263019ac0aaa3ee14c6b3a09d74fcc05aca0e" translate="yes" xml:space="preserve">
          <source>The line width is the thickness of the stroke centered on the given path. In other words, the area that's drawn extends to half the line width on either side of the path. Because canvas coordinates do not directly reference pixels, special care must be taken to obtain crisp horizontal and vertical lines.</source>
          <target state="translated">線幅は、与えられたパスを中心としたストロークの太さです。言い換えれば、描かれた領域はパスの両側の線幅の半分まで広がっているということになります。キャンバス座標は直接ピクセルを参照しないので、鮮明な水平線と垂直線を得るためには特別な注意が必要です。</target>
        </trans-unit>
        <trans-unit id="7d4d358573d94c8aafa5daa3567d2132ed11770a" translate="yes" xml:space="preserve">
          <source>The lines are separated by semi-colons, just like in JavaScript.</source>
          <target state="translated">行の区切りはJavaScriptと同じようにセミコロンで区切っています。</target>
        </trans-unit>
        <trans-unit id="02118de50ed60268754384b2c843ee4cf1c8e67e" translate="yes" xml:space="preserve">
          <source>The list of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Supported_media_formats&quot;&gt;supported media formats&lt;/a&gt; varies from one browser to the other. You should either provide your video in a single format that all the relevant browsers supports, or provide multiple video sources in enough different formats that all the browsers you need to support are covered.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Supported_media_formats&quot;&gt;サポートされるメディア形式&lt;/a&gt;のリストは、ブラウザによって異なります。関連するすべてのブラウザがサポートする単一の形式でビデオを提供するか、サポートする必要のあるすべてのブラウザがカバーされる十分に異なる形式で複数のビデオソースを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="e1693d38a2f7928031b482f2ef043dde59e03fc2" translate="yes" xml:space="preserve">
          <source>The list of available style sheet sets is constructed by enumerating all the style sheets available for the document, in the order in which they're listed in the &lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt;&lt;code&gt;document.styleSheets&lt;/code&gt;&lt;/a&gt; attribute, adding the &lt;code&gt;title&lt;/code&gt; of each style sheet that has a title to the list. Duplicates are dropped from the list (using a case-sensitive comparison).</source>
          <target state="translated">使用可能なスタイルシートセットのリストは、ドキュメントで使用可能なすべてのスタイルシートを、&lt;a href=&quot;../documentorshadowroot/stylesheets&quot;&gt; &lt;code&gt;document.styleSheets&lt;/code&gt; &lt;/a&gt;属性にリストされている順に列挙し、リストに &lt;code&gt;title&lt;/code&gt; ある各スタイルシートのタイトルを追加することによって構築されます。。重複はリストから削除されます（大文字と小文字を区別する比較を使用）。</target>
        </trans-unit>
        <trans-unit id="d263f9f26ecf473c5a3d74ba8cf9500edc40b3e4" translate="yes" xml:space="preserve">
          <source>The list of constraints specified is empty, or has all constraints set to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">指定された制約のリストが空であるか、すべての制約が &lt;code&gt;false&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="72948574fa12a24463e3081733218f5291115e49" translate="yes" xml:space="preserve">
          <source>The list of properties available in the DOM from the style property is given on the &lt;a href=&quot;../css&quot;&gt;DOM CSS Properties List&lt;/a&gt; page.</source>
          <target state="translated">styleプロパティからDOMで使用可能なプロパティのリストは、&lt;a href=&quot;../css&quot;&gt;DOM CSSプロパティリスト&lt;/a&gt;ページに記載されています。</target>
        </trans-unit>
        <trans-unit id="1bfba7ac40ca9fdf5c9d26ec20a2b75f900b9f06" translate="yes" xml:space="preserve">
          <source>The list of visibility ratio thresholds, &lt;code&gt;threshold&lt;/code&gt;, is constructed by the function &lt;code&gt;buildThresholdList()&lt;/code&gt;. The threshold list is built programmatically in this example since there are a number of them and the number is intended to be adjustable.</source>
          <target state="translated">可視率のしきい値のリストである &lt;code&gt;threshold&lt;/code&gt; は、関数 &lt;code&gt;buildThresholdList()&lt;/code&gt; によって作成されます。この例では、しきい値のリストがプログラムで作成されています。これは、しきい値の数があり、その数を調整できるようにするためです。</target>
        </trans-unit>
        <trans-unit id="06210b70a8536de4f71e03b381abdc28211268e5" translate="yes" xml:space="preserve">
          <source>The listener's position is described using right-hand Cartesian coordinates; its movement using a velocity vector and the direction the listener's head is pointing using two direction vectors: up and front. These respectively define the direction of the top of the listener's head, and the direction the listener's nose is pointing, and are at right angles to one another.</source>
          <target state="translated">リスナーの位置は、右手の直交座標を用いて記述され、その動きは速度ベクトルを用いて、リスナーの頭の向きは2つの方向ベクトルを用いて記述されます:上と正面です。これらはそれぞれ、リスナーの頭頂部の方向とリスナーの鼻の方向を定義し、互いに直角になっています。</target>
        </trans-unit>
        <trans-unit id="d4640acdb58d1270750109ae28847b261ca9c88d" translate="yes" xml:space="preserve">
          <source>The local ICE layer calls your &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event handler, when it needs you to transmit an ICE candidate to the other peer, through your signaling server. See &lt;a href=&quot;#Sending_ICE_candidates&quot;&gt;Sending ICE candidates&lt;/a&gt; for more information and to see the code for this example.</source>
          <target state="translated">ローカルICEレイヤーは、ICE候補を他のピアに信号サーバー経由で送信する必要がある場合、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; イベントハンドラーを呼び出します。詳細およびこの例のコードを確認するには、&lt;a href=&quot;#Sending_ICE_candidates&quot;&gt;ICE候補の送信&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="4fa8c69ec3a7daad8be107622d6157361df6e93c" translate="yes" xml:space="preserve">
          <source>The local candidates are placed in this list by the ICE agent prior to being delivered to the local client's code in an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event so that the client can forward the candidates to the remote peer.</source>
          <target state="translated">ローカル候補は、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; イベントでローカルクライアントのコードに配信される前にICEエージェントによってこのリストに配置されるため、クライアントは候補をリモートピアに転送できます。</target>
        </trans-unit>
        <trans-unit id="48939c0961945566e9ad37510e1ebc83a1bfd876" translate="yes" xml:space="preserve">
          <source>The local name of a node is that part of the node's qualified name that comes after the colon. Qualified names are typically used in XML as part of the namespace(s) of the particular XML documents. For example, in the qualified name &lt;code&gt;ecomm:partners&lt;/code&gt;, &lt;code&gt;partners&lt;/code&gt; is the local name and &lt;code&gt;ecomm&lt;/code&gt; is the prefix:</source>
          <target state="translated">ノードのローカル名は、コロンの後に続くノードの修飾名の一部です。修飾名は通常、特定のXMLドキュメントの名前空間の一部としてXMLで使用されます。たとえば、修飾名 &lt;code&gt;ecomm:partners&lt;/code&gt; では、 &lt;code&gt;partners&lt;/code&gt; はローカル名で、 &lt;code&gt;ecomm&lt;/code&gt; はプレフィックスです。</target>
        </trans-unit>
        <trans-unit id="9894ff5ab94b599a4bd21fe23e5557558bbaa572" translate="yes" xml:space="preserve">
          <source>The local name of an attribute is the part of the attribute's qualified name that comes after the colon. Qualified names are typically used in XML as part of the namespace(s) of the particular XML documents.</source>
          <target state="translated">属性のローカル名は、属性の修飾名のうちコロンの後に来る部分です。クォリフィケートされた名前は、通常、XMLでは特定のXML文書の名前空間の一部として使用されます。</target>
        </trans-unit>
        <trans-unit id="f8ad3b0c9be1740e06da2c958db670ffc36f94f4" translate="yes" xml:space="preserve">
          <source>The local peer has called &lt;a href=&quot;rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;, passing in SDP representing an offer (usually created by calling &lt;a href=&quot;rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt;), and the offer has been applied successfully.</source>
          <target state="translated">ローカルピアが&lt;a href=&quot;rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt;を呼び出し、オファー（通常は&lt;a href=&quot;rtcpeerconnection/createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt; を&lt;/a&gt;呼び出して作成されたもの）を表すSDPを渡し、オファーが正常に適用されました。</target>
        </trans-unit>
        <trans-unit id="73249b5dbeb86886c9f0e12966fe130c85f3e6c1" translate="yes" xml:space="preserve">
          <source>The local peer has called &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;, passing in SDP representing an offer (usually created by calling &lt;a href=&quot;createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt;), and the offer has been applied successfully.</source>
          <target state="translated">ローカルピアが&lt;a href=&quot;setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; &lt;/a&gt;を呼び出し、オファー（通常は&lt;a href=&quot;createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt; を&lt;/a&gt;呼び出して作成されたもの）を表すSDPを渡し、オファーが正常に適用されました。</target>
        </trans-unit>
        <trans-unit id="9df847875183441e1cfcc8ad128184dadf03c816" translate="yes" xml:space="preserve">
          <source>The local peer's parameters are obtained during ICE signaling and delivered to the transport when the client calls &lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ローカルピアのパラメータは、ICEシグナリング中に取得され、クライアントが&lt;a href=&quot;../rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; を&lt;/a&gt;呼び出すときにトランスポートに配信されます。</target>
        </trans-unit>
        <trans-unit id="2a6b18930e5cc08c5493485efbaefddcc36d1e48" translate="yes" xml:space="preserve">
          <source>The location to navigate to.</source>
          <target state="translated">移動する場所です。</target>
        </trans-unit>
        <trans-unit id="57860de82518d9575939e660631360117b717167" translate="yes" xml:space="preserve">
          <source>The lower bound of the key range (can be any type.)</source>
          <target state="translated">キー範囲の下限(型は問いません。</target>
        </trans-unit>
        <trans-unit id="8d66711d0d6e0828d7c46faee8a8803f353dd965" translate="yes" xml:space="preserve">
          <source>The lower key and upper key match and either of the bounds are open.</source>
          <target state="translated">下キーと上キーが一致し、どちらかのバウンドが開いています。</target>
        </trans-unit>
        <trans-unit id="f4c7d1d301b02118147d2b782b6439c5782279db" translate="yes" xml:space="preserve">
          <source>The lower key is greater than the upper key.</source>
          <target state="translated">下のキーは上のキーよりも大きい。</target>
        </trans-unit>
        <trans-unit id="c977243b46f7734a44196ead2f2e57feedf64b68" translate="yes" xml:space="preserve">
          <source>The lower limit of the frequencies getting a boost or an attenuation.</source>
          <target state="translated">ブーストまたは減衰を受ける周波数の下限値。</target>
        </trans-unit>
        <trans-unit id="d9f3568bf0e3a79b60a4049714e5b835ed33b348" translate="yes" xml:space="preserve">
          <source>The lower or upper parameters were not passed a valid key.</source>
          <target state="translated">下位または上位パラメータに有効なキーが渡されませんでした。</target>
        </trans-unit>
        <trans-unit id="666282dd9013ac3fb3dacb0d78fcccbf911c5605" translate="yes" xml:space="preserve">
          <source>The lower value of the key range is one of the following:</source>
          <target state="translated">キー範囲の下限値は、以下のいずれかとなります。</target>
        </trans-unit>
        <trans-unit id="174e1995c8be6a65a03fada9b4c3cc5b4dda69df" translate="yes" xml:space="preserve">
          <source>The lower-bound value is included in the key range.</source>
          <target state="translated">下限値はキー範囲に含まれています。</target>
        </trans-unit>
        <trans-unit id="4443343ffa1f9b20fb822eb5311d2e4a9c5b941b" translate="yes" xml:space="preserve">
          <source>The lower-bound value is not included in the key range.</source>
          <target state="translated">下限値はキー範囲に含まれません。</target>
        </trans-unit>
        <trans-unit id="c983310e34bf9a666dd86059ec7c5deff14a17d8" translate="yes" xml:space="preserve">
          <source>The magic of workers happens via the &lt;a href=&quot;../worker/postmessage&quot;&gt;&lt;code&gt;postMessage()&lt;/code&gt;&lt;/a&gt; method and the &lt;a href=&quot;../worker/onmessage&quot;&gt;&lt;code&gt;onmessage&lt;/code&gt;&lt;/a&gt; event handler. When you want to send a message to the worker, you post messages to it like this (&lt;a href=&quot;https://github.com/mdn/simple-web-worker/blob/gh-pages/main.js&quot;&gt;main.js&lt;/a&gt;):</source>
          <target state="translated">ワーカーの魔法は、&lt;a href=&quot;../worker/postmessage&quot;&gt; &lt;code&gt;postMessage()&lt;/code&gt; &lt;/a&gt;メソッドと&lt;a href=&quot;../worker/onmessage&quot;&gt; &lt;code&gt;onmessage&lt;/code&gt; &lt;/a&gt;イベントハンドラーによって発生します。ワーカーにメッセージを送信する場合、次のようにメッセージを投稿します（&lt;a href=&quot;https://github.com/mdn/simple-web-worker/blob/gh-pages/main.js&quot;&gt;main.js&lt;/a&gt;）。</target>
        </trans-unit>
        <trans-unit id="c7ffa0ef7609d44507f1d7bddc1aa44fa62be967" translate="yes" xml:space="preserve">
          <source>The magnetometer is typically read in the &lt;a href=&quot;../sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">磁力計は通常、&lt;a href=&quot;../sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt;イベントコールバックで読み取られます。以下の例では、これは1秒に60回発生します。</target>
        </trans-unit>
        <trans-unit id="dd8d69532b752303e53144e7a73e1ab89550b2a5" translate="yes" xml:space="preserve">
          <source>The magnetometer is typically read in the &lt;a href=&quot;sensor/onreading&quot;&gt;&lt;code&gt;Sensor.onreading&lt;/code&gt;&lt;/a&gt; event callback. In the example below this occurs sixty times a second.</source>
          <target state="translated">磁力計は通常、&lt;a href=&quot;sensor/onreading&quot;&gt; &lt;code&gt;Sensor.onreading&lt;/code&gt; &lt;/a&gt;イベントコールバックで読み取られます。以下の例では、これは1秒に60回発生します。</target>
        </trans-unit>
        <trans-unit id="704e038bce4362b9bdb846d5892e6de198e910dc" translate="yes" xml:space="preserve">
          <source>The main line of the previous clip space vertex shader contained this code:</source>
          <target state="translated">前のクリップスペース頂点シェーダのメイン行には、このコードが含まれていました。</target>
        </trans-unit>
        <trans-unit id="36f7febc49eb8185b489c7e9b8baf95cfa07b600" translate="yes" xml:space="preserve">
          <source>The main payment processing code is found in the &lt;code&gt;process()&lt;/code&gt; method, up next.</source>
          <target state="translated">メインの支払い処理コードは、次の &lt;code&gt;process()&lt;/code&gt; メソッドにあります。</target>
        </trans-unit>
        <trans-unit id="802317ec842d239b2f3c7e031676c78705a6566d" translate="yes" xml:space="preserve">
          <source>The main program</source>
          <target state="translated">メインプログラム</target>
        </trans-unit>
        <trans-unit id="c6c849adda2c882f0e0a0eb435b3972fbdf1a11d" translate="yes" xml:space="preserve">
          <source>The main program shares with us the attribute &lt;code&gt;aVertexPosition&lt;/code&gt;, which is the position of the vertex in whatever coordinate system it's using. We need to convert these values so that both components of the position are in the range -1.0 to 1.0. This can be done easily enough by multiplying by a scaling factor that's based on the context's aspect ratio. We'll see that computation shortly.</source>
          <target state="translated">メインプログラムは、属性 &lt;code&gt;aVertexPosition&lt;/code&gt; を共有しています。これは、使用している座標系における頂点の位置です。位置の両方のコンポーネントが-1.0〜1.0の範囲になるように、これらの値を変換する必要があります。これは、コンテキストのアスペクト比に基づくスケーリングファクターを掛けることで簡単に実行できます。その計算については後ほど説明します。</target>
        </trans-unit>
        <trans-unit id="d7a9d4e7965a253527c2e565484564736f74e116" translate="yes" xml:space="preserve">
          <source>The main scope that spawned the worker can send back information to the thread that spawned it using the &lt;a href=&quot;../worker/postmessage&quot;&gt;&lt;code&gt;Worker.postMessage&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">ワーカーを生成したメインスコープは、&lt;a href=&quot;../worker/postmessage&quot;&gt; &lt;code&gt;Worker.postMessage&lt;/code&gt; &lt;/a&gt;メソッドを使用して、ワーカーを生成したスレッドに情報を返すことができます。</target>
        </trans-unit>
        <trans-unit id="1e79c1ddce9f81ca4e9dde371657740b90f9811f" translate="yes" xml:space="preserve">
          <source>The main steps to drag and drop are to define a &lt;em&gt;drop zone&lt;/em&gt; (i.e. a target element for the file drop) and to define event handlers for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; events. These steps are described below, including example code snippets. The full source code is available in &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/drag-and-drop&quot;&gt;MDN's drag-and-drop repository&lt;/a&gt; (pull requests and/or issues are welcome).</source>
          <target state="translated">ドラッグアンドドロップの主な手順は、&lt;em&gt;ドロップゾーン&lt;/em&gt;（つまり、ファイルドロップのターゲット要素）を定義し、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt; イベントと &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラーを定義することです。これらの手順は、サンプルコードスニペットを含め、以下で説明されています。完全なソースコードは、&lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/drag-and-drop&quot;&gt;MDNのドラッグアンドドロップリポジトリで&lt;/a&gt;入手できます（プル要求や問題は大歓迎です）。</target>
        </trans-unit>
        <trans-unit id="905bcb5547b24baec24797aaffcc7be56521f429" translate="yes" xml:space="preserve">
          <source>The main thing you &lt;em&gt;can't&lt;/em&gt; do in a Worker is directly affect the parent page. This includes manipulating the DOM and using that page's objects. You have to do it indirectly, by sending a message back to the main script via &lt;a href=&quot;../dedicatedworkerglobalscope/postmessage&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope.postMessage&lt;/code&gt;&lt;/a&gt;, then actioning the changes from there.</source>
          <target state="translated">Workerで実行&lt;em&gt;できない&lt;/em&gt;主なこと&lt;em&gt;は&lt;/em&gt;、親ページに直接影響することです。これには、DOMの操作とそのページのオブジェクトの使用が含まれます。&lt;a href=&quot;../dedicatedworkerglobalscope/postmessage&quot;&gt; &lt;code&gt;DedicatedWorkerGlobalScope.postMessage&lt;/code&gt; &lt;/a&gt;を介してメインスクリプトにメッセージを送り、そこから変更を実行することにより、間接的に行う必要があります。</target>
        </trans-unit>
        <trans-unit id="480d7f4cf58717bd86f63559acfa416a454d8461" translate="yes" xml:space="preserve">
          <source>The main thread of a Web browser is centered around its event loop. This code draws any pending updates to the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; currently being displayed, runs any JavaScript code the page needs to run, accepts events from input devices, and dispatches those events to the elements that should receive them. In addition, the event loop handles interactions with the operating system, updates to the browser's own user interface, and so forth. It's an extremely busy chunk of code, and your main JavaScript code may run right inside this thread along with all of this. Certainly most if not all code that is capable of making changes to the DOM is running in the main thread, since it's common for user interface changes to only be available to the main thread.</source>
          <target state="translated">Webブラウザーのメインスレッドは、そのイベントループに集中しています。このコードは、現在表示されている&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;保留中の更新を描画し、ページの実行に必要なJavaScriptコードを実行し、入力デバイスからイベントを受け入れ、それらを受け取る要素にそれらのイベントをディスパッチします。さらに、イベントループは、オペレーティングシステムとのやり取り、ブラウザーの独自のユーザーインターフェイスの更新などを処理します。これは非常に多忙なコードの塊であり、メインのJavaScriptコードはこのすべてと一緒にこのスレッド内で実行される可能性があります。 DOMに変更を加えることができるすべてのコードではないにしても、ほとんどのコードがメインスレッドで実行されています。</target>
        </trans-unit>
        <trans-unit id="4ec4188ab91cf3d28a4c5a8c02bf5c380b30832c" translate="yes" xml:space="preserve">
          <source>The major version number of the device in a semantic versioning scheme.</source>
          <target state="translated">意味的バージョニング方式におけるデバイスのメジャーバージョン番号。</target>
        </trans-unit>
        <trans-unit id="07eb43421fb35163dda51a2b8120618054cfbfef" translate="yes" xml:space="preserve">
          <source>The manner in which these values are generated is not mandated by the specification, although it does make recommendations. You should not make any assumptions based on the value of &lt;code&gt;ssrc&lt;/code&gt; other than that any two objects with the same &lt;code&gt;ssrc&lt;/code&gt; value refer to the same source. See &lt;a href=&quot;https://tools.ietf.org/html/rfc3550#section-8&quot;&gt;RFC 3550, section 8&lt;/a&gt; for additional information about &lt;code&gt;ssrc&lt;/code&gt;.</source>
          <target state="translated">これらの値が生成される方法は、推奨事項ではありますが、仕様では必須ではありません。同じ &lt;code&gt;ssrc&lt;/code&gt; 値を持つ2つのオブジェクトが同じソースを参照することを除いて、 &lt;code&gt;ssrc&lt;/code&gt; の値に基づいて仮定を行うことはできません。 &lt;code&gt;ssrc&lt;/code&gt; の詳細については&lt;a href=&quot;https://tools.ietf.org/html/rfc3550#section-8&quot;&gt;、RFC 3550のセクション8&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="6ce3cd4b0e79e5ef9015a9209e1a15733ad9700b" translate="yes" xml:space="preserve">
          <source>The manufacturer-defined code that identifies a USB device.</source>
          <target state="translated">USBデバイスを識別するメーカー定義のコード。</target>
        </trans-unit>
        <trans-unit id="b4a768dec06feb43bb4ac5f220fda09ad49214d6" translate="yes" xml:space="preserve">
          <source>The manufacturer-defined name that identifies a USB device.</source>
          <target state="translated">USBデバイスを識別するメーカー定義の名称です。</target>
        </trans-unit>
        <trans-unit id="c2fc170c6301b3e548a88034c34b076247d39032" translate="yes" xml:space="preserve">
          <source>The manufacturer-defined serial number for the specific USB device.</source>
          <target state="translated">特定のUSBデバイスのメーカー定義のシリアル番号。</target>
        </trans-unit>
        <trans-unit id="6f82b6ab8d84d6d7fcc7b08e6abd8dd1c7f156ee" translate="yes" xml:space="preserve">
          <source>The marching ants effect is an animation technique often found in selection tools of computer graphics programs. It helps the user to distinguish the selection border from the image background by animating the border.</source>
          <target state="translated">行進アリ効果はコンピュータグラフィックスプログラムの選択ツールによく見られるアニメーション技法です。境界線をアニメーション化することで選択範囲の境界線を画像の背景と区別することができます。</target>
        </trans-unit>
        <trans-unit id="8f6fee7a13e23b8b887faf6e6098d50fc04155dc" translate="yes" xml:space="preserve">
          <source>The matrix that represents this transformation. The matrix object is live, meaning that any changes made to the &lt;code&gt;SVGTransform&lt;/code&gt; object are immediately reflected in the matrix object and vice versa. In case the matrix object is changed directly (i.e., without using the methods on the &lt;code&gt;SVGTransform&lt;/code&gt; interface itself) then the type of the &lt;code&gt;SVGTransform&lt;/code&gt; changes to &lt;code&gt;SVG_TRANSFORM_MATRIX&lt;/code&gt;.</source>
          <target state="translated">この変換を表す行列。マトリックスオブジェクトはライブです。つまり、 &lt;code&gt;SVGTransform&lt;/code&gt; オブジェクトに加えられた変更はマトリックスオブジェクトにすぐに反映され、その逆も同様です。マトリックスオブジェクトが直接変更された場合（つまり、 &lt;code&gt;SVGTransform&lt;/code&gt; インターフェース自体のメソッドを使用しない場合）、 &lt;code&gt;SVGTransform&lt;/code&gt; のタイプはSVG_TRANSFORM_MATRIXに変更され &lt;code&gt;SVG_TRANSFORM_MATRIX&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="1af99f1e6713178d3348525f1edc3e9b9390778d" translate="yes" xml:space="preserve">
          <source>The max scope for a service worker is the location of the worker.</source>
          <target state="translated">サービスワーカーの最大スコープは、ワーカーの場所です。</target>
        </trans-unit>
        <trans-unit id="d5dbc29fafe409fbba2094fdf23904a9804dfd5d" translate="yes" xml:space="preserve">
          <source>The maximum amount of time, in seconds, that the audio signal can be delayed by. Must be less than 180 seconds, and defaults to 1 second if not specified.</source>
          <target state="translated">オーディオ信号を遅延させることができる最大時間を秒単位で指定します。180 秒未満でなければならず、指定しない場合はデフォルトで 1 秒となります。</target>
        </trans-unit>
        <trans-unit id="adbd910933106246733b38e7def0ed875fefed16" translate="yes" xml:space="preserve">
          <source>The maximum browser storage space is dynamic &amp;mdash; it is based on your hard drive size. The &lt;strong&gt;global limit&lt;/strong&gt; is calculated as 50% of free disk space. In Firefox, an internal browser tool called the Quota Manager keeps track of how much disk space each origin is using up, and deletes data if necessary.</source>
          <target state="translated">ブラウザの最大ストレージ容量は動的です。ハードドライブのサイズに基づいています。&lt;strong&gt;グローバル制限は、&lt;/strong&gt;空きディスク容量の50％として計算されます。Firefoxでは、Quota Managerと呼ばれる内部ブラウ​​ザツールが、各オリジンが使用しているディスク容量を追跡し、必要に応じてデータを削除します。</target>
        </trans-unit>
        <trans-unit id="95ff8f14af1f40f7276379908bf8b0418788b615" translate="yes" xml:space="preserve">
          <source>The maximum number of draw buffers.</source>
          <target state="translated">ドローバッファの最大数。</target>
        </trans-unit>
        <trans-unit id="1a47fcd06b07219a6677a63761ae3b44926bcf1c" translate="yes" xml:space="preserve">
          <source>The maximum number of entries possible in the vertex attribute list.</source>
          <target state="translated">頂点属性リストで可能な最大エントリ数。</target>
        </trans-unit>
        <trans-unit id="6c834049227bbb93c02d8fe361e4d226ff4e61e9" translate="yes" xml:space="preserve">
          <source>The maximum number of framebuffer color attachment points.</source>
          <target state="translated">フレームバッファカラーの最大添付点数。</target>
        </trans-unit>
        <trans-unit id="e64d74b8a0e14810c00b9ce9bee12b0801b51055" translate="yes" xml:space="preserve">
          <source>The maximum number of milliseconds that attempts to transfer a message may take in unreliable mode. While this value is a 16-bit unsigned number, each user agent may clamp it to whatever maximum it deems appropriate. &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">メッセージの転送を試行する最大ミリ秒数は、信頼性の低いモードでかかる場合があります。この値は16ビットの符号なしの数値ですが、各ユーザーエージェントは適切と思われる最大値にクランプできます。 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dad7777d4717cb863ed50ef0e2cb6868d1f7fea7" translate="yes" xml:space="preserve">
          <source>The maximum number of pixels wide the text may be once rendered. If not specified, there is no limit to the width of the text. However, if this value is provided, the user agent will adjust the kerning, select a more horizontally condensed font (if one is available or can be generated without loss of quality), or scale down to a smaller font size in order to fit the text in the specified width.</source>
          <target state="translated">テキストが一度にレンダリングされる幅の最大ピクセル数。指定しない場合,テキストの幅に制限はない。しかし,この値が提供される場合,ユーザエージェントは,指定された幅にテキストを収めるために,カーニングを調整するか,より水平方向に凝縮されたフォントを選択するか(フォントが利用可能であるか,又は品質を損なうことなく生成することができる場合),又はより小さいフォントサイズにスケールダウンする。</target>
        </trans-unit>
        <trans-unit id="effbcabd51c9dae3b2e8645e1d142d0132027bde" translate="yes" xml:space="preserve">
          <source>The maximum number of times the browser will try to send a message before giving up, or &lt;code&gt;null&lt;/code&gt; if not set when &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt; was called. The default is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ブラウザが諦める前にメッセージを送信しようとする最大回数&lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt; &lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに設定されていない場合は &lt;code&gt;null&lt;/code&gt; 。デフォルトは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="c262bd4ecd3a64741e39a167832c785b6c7bf5b5" translate="yes" xml:space="preserve">
          <source>The maximum number of times the user agent should attempt to retransmit a message which fails the first time in unreliable mode. While this value is a16-bit unsigned number, each user agent may clamp it to whatever maximum it deems appropriate. &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">信頼できないモードでユーザーエージェントが最初に失敗したメッセージの再送信を試行する最大回数。この値は16ビットの符号なしの数値ですが、各ユーザーエージェントは適切と思われる最大値にクランプできます。 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e016f34e56112321999863e24b57d9c332d880e5" translate="yes" xml:space="preserve">
          <source>The maximum number of vertex attributes depends on the graphics card, and you can call &lt;code&gt;gl.getParameter(gl.MAX_VERTEX_ATTRIBS)&lt;/code&gt; to get this value. On high-end graphics cards, the maximum is 16, on lower-end graphics cards, the value will be lower.</source>
          <target state="translated">頂点属性の最大数はグラフィックスカードによって異なり、 &lt;code&gt;gl.getParameter(gl.MAX_VERTEX_ATTRIBS)&lt;/code&gt; を呼び出してこの値を取得できます。ハイエンドのグラフィックカードでは、最大値は16で、ローエンドのグラフィックカードでは、値は低くなります。</target>
        </trans-unit>
        <trans-unit id="f21eb0eb3b402a71a47572c01ea1eabf8a6b51df" translate="yes" xml:space="preserve">
          <source>The maximum offset that the window can be scrolled to horizontally, that is the document width minus the viewport width.</source>
          <target state="translated">ウィンドウを水平方向にスクロールできる最大のオフセット、つまりドキュメントの幅からビューポートの幅を引いたもの。</target>
        </trans-unit>
        <trans-unit id="05d035eddab5243ca794205f37eaecd0338441de" translate="yes" xml:space="preserve">
          <source>The maximum offset that the window can be scrolled to vertically (i.e., the document height minus the viewport height).</source>
          <target state="translated">ウィンドウを垂直方向にスクロールできる最大のオフセット(すなわち、ドキュメントの高さからビューポートの高さを引いたもの)。</target>
        </trans-unit>
        <trans-unit id="8bb2a591e4eb4c24fd95dfecea80fd249c6a1986" translate="yes" xml:space="preserve">
          <source>The maximum sensing distance the sensor is able to report, in centimeters.</source>
          <target state="translated">センサーが報告できる最大検出距離をセンチメートル単位で表示します。</target>
        </trans-unit>
        <trans-unit id="252e11ffd05ab5c96123955476e7f066f7e44ec3" translate="yes" xml:space="preserve">
          <source>The maximum width the text may be once rendered. If not specified, there is no limit to the width of the text. However, if this value is provided, the user agent will adjust the kerning, select a more horizontally condensed font (if one is available or can be generated without loss of quality), or scale down to a smaller font size in order to fit the text in the specified width.</source>
          <target state="translated">テキストが一度にレンダリングされる最大の幅。指定しない場合,テキストの幅に制限はない。しかし,この値が提供される場合,ユーザエージェントは,指定された幅にテキストを収めるために,カーニングを調整するか,より水平方向に凝縮されたフォントを選択するか(利用可能であるか,又は品質を損なうことなく生成することができる場合),又はより小さいフォントサイズに縮小する。</target>
        </trans-unit>
        <trans-unit id="1132fa61a29b2eaedc14d95e7932d887639fbc74" translate="yes" xml:space="preserve">
          <source>The meaning of the different parameters depending of the type of the filter (detune has the same meaning regardless, so isn't listed below)</source>
          <target state="translated">フィルターの種類によって異なるパラメータの意味(デチューンは関係なく同じ意味を持つので以下には記載していません)。</target>
        </trans-unit>
        <trans-unit id="0252ad21257f9e53deb267580ea418e2e71c3c2e" translate="yes" xml:space="preserve">
          <source>The mechanism by which data is stored in the database. The object store persistently holds records, which are key-value pairs. Records within an object store are sorted according to the &lt;em&gt;&lt;a href=&quot;#gloss_key&quot;&gt;keys&lt;/a&gt;&lt;/em&gt; in an ascending order.</source>
          <target state="translated">データがデータベースに格納されるメカニズム。オブジェクトストアは、キーと値のペアであるレコードを永続的に保持します。オブジェクトストア内のレコードは、&lt;em&gt;&lt;a href=&quot;#gloss_key&quot;&gt;キー&lt;/a&gt;&lt;/em&gt;に従って昇順で並べ替えられ&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="dd8a62aa0c04a7621eb281c63a2aa75428708203" translate="yes" xml:space="preserve">
          <source>The media ID of the m-line associated with this transceiver. This association is established, when possible, whenever either a local or remote description is applied. This field is &lt;code&gt;null&lt;/code&gt; if neither a local or remote description has been applied, or if its associated m-line is rejected by either a remote offer or any answer.</source>
          <target state="translated">このトランシーバーに関連付けられているm-lineのメディアID。この関連付けは、可能であれば、ローカルまたはリモートの説明が適用されるたびに確立されます。ローカルまたはリモートのいずれの説明も適用されていない場合、または関連するm行がリモートのオファーまたは回答によって拒否された場合、このフィールドは &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="81a3274a31ed4a4f1f015ac6a8f1c7dc3db42b22" translate="yes" xml:space="preserve">
          <source>The media source (which may be specified as a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../mediasource&quot;&gt;&lt;code&gt;MediaSource&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt;, for example) doesn't represent a supported media format.</source>
          <target state="translated">メディアソース（たとえば、&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../mediasource&quot;&gt; &lt;code&gt;MediaSource&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;として指定される場合があります）は、サポートされているメディア形式を表していません。</target>
        </trans-unit>
        <trans-unit id="5f2a648297419ce869e8e95a69826bb154d31e40" translate="yes" xml:space="preserve">
          <source>The merchant code would look like this:</source>
          <target state="translated">マーチャントコードは以下のようになります。</target>
        </trans-unit>
        <trans-unit id="5c3183040e96411587800cc9203c3ac5c53d6756" translate="yes" xml:space="preserve">
          <source>The merchant&amp;mdash;either a person or an organization&amp;mdash;whose web site or app wishes to receive money through the Payment Request API.</source>
          <target state="translated">マーチャント（個人または組織のいずれか）のWebサイトまたはアプリは、Payment Request APIを通じてお金を受け取りたいと考えています。</target>
        </trans-unit>
        <trans-unit id="6539481fabc8f536396f816755ac1f2d074fd520" translate="yes" xml:space="preserve">
          <source>The mere use of cryptography doesn't make your system secure. Security is a &lt;strong&gt;process&lt;/strong&gt; that constantly evaluates the risks a system incurs in its context of use. The context and the risks experienced evolve over time.</source>
          <target state="translated">暗号化を使用するだけでは、システムが安全になるわけではありません。セキュリティは、システムがその使用のコンテキストで被るリスクを常に評価する&lt;strong&gt;プロセス&lt;/strong&gt;です。コンテキストと発生するリスクは、時間とともに進化します。</target>
        </trans-unit>
        <trans-unit id="f66900b23610bab381ac53f2de5cb0285f0eb3e6" translate="yes" xml:space="preserve">
          <source>The message being sent. For this initial port transfering this message could be an empty string but in this example it is set to &lt;code&gt;'init'&lt;/code&gt;.</source>
          <target state="translated">送信されるメッセージ。この初期ポート転送では、このメッセージは空の文字列になる可能性がありますが、この例では &lt;code&gt;'init'&lt;/code&gt; に設定されています。</target>
        </trans-unit>
        <trans-unit id="754314fd7f1670c82cfe8dc00183c744205e1d09" translate="yes" xml:space="preserve">
          <source>The message object passed into this function is converted into a JSON string by calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;code&gt;JSON.stringify()&lt;/code&gt;&lt;/a&gt;, then we call the WebSocket connection's &lt;a href=&quot;../websocket/send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; function to transmit the message to the server.</source>
          <target state="translated">この関数に渡されたメッセージオブジェクトは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt; &lt;code&gt;JSON.stringify()&lt;/code&gt; を&lt;/a&gt;呼び出すことによってJSON文字列に変換され、次にWebSocket接続の&lt;a href=&quot;../websocket/send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;関数を呼び出してメッセージをサーバーに送信します。</target>
        </trans-unit>
        <trans-unit id="62e86ba2df8ae85a50bdd76d659c9bed540e1ef6" translate="yes" xml:space="preserve">
          <source>The message to send to the service worker. This can be any &lt;a href=&quot;../web_workers_api/structured_clone_algorithm&quot;&gt;structured-clonable type&lt;/a&gt;.</source>
          <target state="translated">サービスワーカーに送信するメッセージ。これは、&lt;a href=&quot;../web_workers_api/structured_clone_algorithm&quot;&gt;構造化されたクローン可能なタイプ&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="f3b5e1f2518be907d12e2f59292e9cf379b0c387" translate="yes" xml:space="preserve">
          <source>The message type: &lt;code&gt;&quot;new-ice-candidate&quot;&lt;/code&gt;.</source>
          <target state="translated">メッセージタイプ： &lt;code&gt;&quot;new-ice-candidate&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="c9be92ac70300041d900b7fd5c862af6d886dbec" translate="yes" xml:space="preserve">
          <source>The message type: &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt;.</source>
          <target state="translated">メッセージタイプ： &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4d8759a7f5578df4eac35d9b73d76eed68186b7f" translate="yes" xml:space="preserve">
          <source>The message type; either &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; or &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt;.</source>
          <target state="translated">メッセージタイプ。 &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; または &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt; のいずれか。</target>
        </trans-unit>
        <trans-unit id="e80e0a99bb97f2a82d0f10e40cade43bf03bf33e" translate="yes" xml:space="preserve">
          <source>The message you want to send through the channel. This can be of any basic data type. Multiple data items can be sent as an array.</source>
          <target state="translated">チャンネルを通じて送信したいメッセージ。これは任意の基本的なデータ型にすることができます。複数のデータ項目を配列として送信することができます。</target>
        </trans-unit>
        <trans-unit id="7e404607496198deb2758f024173487082498be0" translate="yes" xml:space="preserve">
          <source>The metadata parameters are as follows:</source>
          <target state="translated">メタデータのパラメータは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="9f0d87a73198bd6d2d0d12c2c7e0b2e35b683f9a" translate="yes" xml:space="preserve">
          <source>The method &lt;a href=&quot;../document/getelementsbyclassname&quot;&gt;&lt;code&gt;getElementsByClassName()&lt;/code&gt;&lt;/a&gt; on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface works essentially the same way, except it acts on the entire document, starting at the document root.</source>
          <target state="translated">方法&lt;a href=&quot;../document/getelementsbyclassname&quot;&gt; &lt;code&gt;getElementsByClassName()&lt;/code&gt; &lt;/a&gt;上の&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;がドキュメントルートから始まる、ドキュメント全体に作用以外インターフェースは、本質的に同じように動作します。</target>
        </trans-unit>
        <trans-unit id="2e73c405a65e8de5c5da828c4f2f31b7a761c0c4" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;detach()&lt;/code&gt; has been changed to be a no-op.</source>
          <target state="translated">メソッド &lt;code&gt;detach()&lt;/code&gt; は何もしないように変更されました。</target>
        </trans-unit>
        <trans-unit id="7f3a7e91eb523d15518ac3260276523462f0b8c3" translate="yes" xml:space="preserve">
          <source>The method &lt;code&gt;getContext()&lt;/code&gt; now returns a &lt;a href=&quot;renderingcontext&quot;&gt;&lt;code&gt;RenderingContext&lt;/code&gt;&lt;/a&gt; rather than an opaque &lt;code&gt;object&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getContext()&lt;/code&gt; メソッドは、不透明な &lt;code&gt;object&lt;/code&gt; ではなく&lt;a href=&quot;renderingcontext&quot;&gt; &lt;code&gt;RenderingContext&lt;/code&gt; を&lt;/a&gt;返すようになりました。</target>
        </trans-unit>
        <trans-unit id="8086caba394faa71b2db85e0d218842082b02478" translate="yes" xml:space="preserve">
          <source>The method can raise an IDBDatabaseException with the following code:</source>
          <target state="translated">このメソッドは、以下のコードでIDBDatabaseExceptionを発生させることができます。</target>
        </trans-unit>
        <trans-unit id="3f9212e4582ab50d3b113f1004a808c6add18578" translate="yes" xml:space="preserve">
          <source>The method is a no-op in the absence of the possibility of synchronizing between multiple GL contexts.</source>
          <target state="translated">このメソッドは、複数のGLコンテキスト間で同期する可能性がない場合にはノーオペとなります。</target>
        </trans-unit>
        <trans-unit id="792460f39712788df87e1a43336d78e6d7859cc6" translate="yes" xml:space="preserve">
          <source>The method now throws an NOT_FOUND_ERR exception if the item of the &lt;code&gt;before&lt;/code&gt; parameter is not a child of this element.</source>
          <target state="translated">&lt;code&gt;before&lt;/code&gt; パラメータのアイテムがこの要素の子でない場合、メソッドはNOT_FOUND_ERR例外をスローするようになりました。</target>
        </trans-unit>
        <trans-unit id="98e87576ca4bfe3c4d7b35ff2c5552438e3978bf" translate="yes" xml:space="preserve">
          <source>The method returns an &lt;a href=&quot;../idbopendbrequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; object immediately, and performs the open operation asynchronously. If the operation is successful, a &lt;code&gt;success&lt;/code&gt; event is fired on the request object that is returned from this method, with its &lt;code&gt;result&lt;/code&gt; attribute set to the new &lt;a href=&quot;../idbdatabase&quot;&gt;&lt;code&gt;IDBDatabase&lt;/code&gt;&lt;/a&gt; object for the connection.</source>
          <target state="translated">このメソッドは&lt;a href=&quot;../idbopendbrequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; &lt;/a&gt;オブジェクトをすぐに返し、オープン操作を非同期で実行します。操作が成功すると、このメソッドから返された要求オブジェクトで &lt;code&gt;success&lt;/code&gt; イベントが発生し、その &lt;code&gt;result&lt;/code&gt; 属性が接続の新しい&lt;a href=&quot;../idbdatabase&quot;&gt; &lt;code&gt;IDBDatabase&lt;/code&gt; &lt;/a&gt;オブジェクトに設定されます。</target>
        </trans-unit>
        <trans-unit id="6c4451e51d192830e817844ac8042367b7070fa8" translate="yes" xml:space="preserve">
          <source>The method returns immediately. If the assertion cannot be generated, an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/idpassertionerror&quot;&gt;idpassertionerror&lt;/a&gt;&lt;/code&gt; will be sent to the object.</source>
          <target state="translated">メソッドはすぐに戻ります。アサーションを生成できない場合、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/idpassertionerror&quot;&gt;idpassertionerror&lt;/a&gt;&lt;/code&gt; がオブジェクトに送信されます。</target>
        </trans-unit>
        <trans-unit id="6dc6ceefe431b60b8e0eb97493e2bdcac061da69" translate="yes" xml:space="preserve">
          <source>The method sets the position of the cursor to the appropriate key, based on the specified direction.</source>
          <target state="translated">このメソッドは、指定された方向に基づいて、カーソルの位置を適切なキーに設定します。</target>
        </trans-unit>
        <trans-unit id="5e1fee4c579d24826555b16f7a61416ab5e13deb" translate="yes" xml:space="preserve">
          <source>The method sets the position of the cursor to the appropriate record, based on the specified direction.</source>
          <target state="translated">このメソッドは、指定された方向に基づいて、カーソルの位置を適切なレコードに設定します。</target>
        </trans-unit>
        <trans-unit id="419e717589549d5f3260ce01c3c51f57fb4867e2" translate="yes" xml:space="preserve">
          <source>The method takes the name of the store as well as a parameter object that lets you define important optional properties. You can use the property to uniquely identify individual objects in the store. As the property is an identifier, it should be unique to every object, and every object should have that property.</source>
          <target state="translated">このメソッドは、ストアの名前と重要なオプションのプロパティを定義できるパラメータ・オブジェクトを受け取ります。このプロパティを使用して、ストア内の個々のオブジェクトを一意に識別することができます。プロパティは識別子なので、すべてのオブジェクトに対して一意でなければならず、すべてのオブジェクトはそのプロパティを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="43182a05591f34206706429f8e80271516ee0422" translate="yes" xml:space="preserve">
          <source>The method throws an exception in 2 different ways:</source>
          <target state="translated">このメソッドは2つの方法で例外をスローします。</target>
        </trans-unit>
        <trans-unit id="1df1a062e7ab747a7c40892bbec3b4672ee48dcc" translate="yes" xml:space="preserve">
          <source>The method was not called from a &lt;code&gt;versionchange&lt;/code&gt; transaction mode callback, i.e. from inside a &lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt;&lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">メソッドは、 &lt;code&gt;versionchange&lt;/code&gt; トランザクションモードコールバックから、つまり&lt;a href=&quot;../idbopendbrequest/onupgradeneeded&quot;&gt; &lt;code&gt;IDBOpenDBRequest.onupgradeneeded&lt;/code&gt; &lt;/a&gt;ハンドラー内から呼び出されませんでした。</target>
        </trans-unit>
        <trans-unit id="aff1d90015ff50ae33a88b207c2a65853c418071" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;blur()&lt;/code&gt; and &lt;code&gt;focus()&lt;/code&gt;, as well as the properties &lt;code&gt;tabindex&lt;/code&gt; and &lt;code&gt;accessKey&lt;/code&gt;, are now defined on &lt;a href=&quot;htmlelement&quot;&gt;&lt;code&gt;HTMLElement&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド &lt;code&gt;blur()&lt;/code&gt; と &lt;code&gt;focus()&lt;/code&gt; 、およびプロパティ &lt;code&gt;tabindex&lt;/code&gt; と &lt;code&gt;accessKey&lt;/code&gt; が&lt;a href=&quot;htmlelement&quot;&gt; &lt;code&gt;HTMLElement&lt;/code&gt; で&lt;/a&gt;定義されました。</target>
        </trans-unit>
        <trans-unit id="8021b7414aae72b178563155d6103fd9d81b2caf" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;insertBefore()&lt;/code&gt;, &lt;code&gt;replaceChild()&lt;/code&gt;, &lt;code&gt;removeChild()&lt;/code&gt;, and &lt;code&gt;appendChild()&lt;/code&gt; returns one more kind of error (&lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt;) if called on a &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メソッド &lt;code&gt;insertBefore()&lt;/code&gt; 、 &lt;code&gt;replaceChild()&lt;/code&gt; 、 &lt;code&gt;removeChild()&lt;/code&gt; 、および &lt;code&gt;appendChild()&lt;/code&gt; は、&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; で&lt;/a&gt;呼び出された場合、もう1種類のエラー（ &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; ）を返します。</target>
        </trans-unit>
        <trans-unit id="12048f1e1aecb992ad80ceb8992e7e789058924b" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;insertCell&lt;/code&gt; and &lt;code&gt;deleteCell&lt;/code&gt; can raise exceptions.</source>
          <target state="translated">メソッド &lt;code&gt;insertCell&lt;/code&gt; および &lt;code&gt;deleteCell&lt;/code&gt; は例外を発生させる可能性があります。</target>
        </trans-unit>
        <trans-unit id="fb35df80d3f81641733624217cac7f06d0a27329" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;insertRow&lt;/code&gt; and &lt;code&gt;deleteRow&lt;/code&gt; can raise exceptions.</source>
          <target state="translated">メソッド &lt;code&gt;insertRow&lt;/code&gt; および &lt;code&gt;deleteRow&lt;/code&gt; は例外を発生させる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3e4c67a6ed65873458b5a2b9dc7401f8650d5634" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;item()&lt;/code&gt;, &lt;code&gt;namedItem()&lt;/code&gt;, &lt;code&gt;checkValidity()&lt;/code&gt; and &lt;code&gt;setCustomValidity()&lt;/code&gt;.</source>
          <target state="translated">メソッド &lt;code&gt;item()&lt;/code&gt; 、 &lt;code&gt;namedItem()&lt;/code&gt; 、 &lt;code&gt;checkValidity()&lt;/code&gt; および &lt;code&gt;setCustomValidity()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6d8cd5d911532e61b5b687de5fd8d4211079fb48" translate="yes" xml:space="preserve">
          <source>The methods &lt;code&gt;previousNode()&lt;/code&gt; and &lt;code&gt;nextNode()&lt;/code&gt; don't raise an exception any more.</source>
          <target state="translated">メソッド &lt;code&gt;previousNode()&lt;/code&gt; および &lt;code&gt;nextNode()&lt;/code&gt; は、例外を発生させなくなりました。</target>
        </trans-unit>
        <trans-unit id="e1fe714f72b15f30b50089a2270e1cfbc3a7d64f" translate="yes" xml:space="preserve">
          <source>The methods used for region are listed below along with description of their functionality:</source>
          <target state="translated">以下に領域に使用されるメソッドとその機能の説明を示します。</target>
        </trans-unit>
        <trans-unit id="b2eb43b3acce03002d4c7bdb71cbcb5d03523d6f" translate="yes" xml:space="preserve">
          <source>The methods used in WebVTT are those which are used to alter the cue or region as the attributes for both interfaces are different. We can categorize them for better understanding relating to each interface in WebVTT:</source>
          <target state="translated">WebVTTで使用されるメソッドは、両インターフェースの属性が異なるため、キューや領域を変更するために使用されるメソッドです。これらを分類することで、WebVTTの各インタフェースに関連した理解を深めることができます。</target>
        </trans-unit>
        <trans-unit id="dd215e0754fcd855ffb2baaa1c5203e0c65ed148" translate="yes" xml:space="preserve">
          <source>The methods which are available in this interface are:</source>
          <target state="translated">このインターフェイスで利用できるメソッドは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="e077b5dad83bced571617281082915357b4a1da4" translate="yes" xml:space="preserve">
          <source>The mid-element of the array is applied to any signal value of &lt;code&gt;0&lt;/code&gt;, the first one to signal values of &lt;code&gt;-1&lt;/code&gt;, and the last to signal values of &lt;code&gt;1&lt;/code&gt;; values lower than &lt;code&gt;-1&lt;/code&gt; or greater than &lt;code&gt;1&lt;/code&gt; are treated like &lt;code&gt;-1&lt;/code&gt; or &lt;code&gt;1&lt;/code&gt; respectively.</source>
          <target state="translated">アレイの中間要素は、任意の信号値に適用される &lt;code&gt;0&lt;/code&gt; の信号値に対して最初の &lt;code&gt;-1&lt;/code&gt; の値を通知するために、最後の &lt;code&gt;1&lt;/code&gt; 。 &lt;code&gt;-1&lt;/code&gt; より小さい値または &lt;code&gt;1&lt;/code&gt; より大きい値は、それぞれ &lt;code&gt;-1&lt;/code&gt; または &lt;code&gt;1&lt;/code&gt; のように扱われます。</target>
        </trans-unit>
        <trans-unit id="008119ade4fbf91d99559499fd66994144f056f9" translate="yes" xml:space="preserve">
          <source>The middle of the frequency range getting a boost or an attenuation.</source>
          <target state="translated">周波数範囲の中間でブーストまたは減衰を得ること。</target>
        </trans-unit>
        <trans-unit id="870447a1d3f20dbbae80ca89ec229e04fb1ef9ef" translate="yes" xml:space="preserve">
          <source>The mimeType to check.</source>
          <target state="translated">チェックするmimeType。</target>
        </trans-unit>
        <trans-unit id="4920d17bd324064e15c675f15fa1570d84df31be" translate="yes" xml:space="preserve">
          <source>The mimimal size is clamped to prevent the window from being too small for the user to interact with.</source>
          <target state="translated">ミミマルサイズは、ウィンドウが小さくなりすぎてユーザーが対話できないようにクランプされています。</target>
        </trans-unit>
        <trans-unit id="33aeb3ee0e28ecee7ccb6b846e87f581d2444f50" translate="yes" xml:space="preserve">
          <source>The minimum sensing distance the sensor is able to report, in centimeters. Ususally zero.</source>
          <target state="translated">センサーが報告することができる最小の検出距離をセンチメートル単位で指定します。通常はゼロ。</target>
        </trans-unit>
        <trans-unit id="708032fcd05ef00e677b6e9853012278d8c42047" translate="yes" xml:space="preserve">
          <source>The minor version number of the device in a semantic versioning scheme.</source>
          <target state="translated">意味的バージョニング方式におけるデバイスのマイナーバージョン番号。</target>
        </trans-unit>
        <trans-unit id="1ba3f190ae158a54076b7dfaf84f1471aa5ac3ec" translate="yes" xml:space="preserve">
          <source>The mobile web contains two viewports, the layout viewport and the visual viewport. The layout viewport covers all the elements on a page and the visual viewport is what is actually visible on the screen. When the user pinch-zooms into the page, the visual viewport shrinks but the layout viewport is unchanged. User-interface features like the on-screen keyboard (OSK) can shrink the visual viewport without affecting the layout viewport.</source>
          <target state="translated">モバイルウェブには、レイアウトビューポートとビジュアルビューポートの2つのビューポートがあります。レイアウトビューポートはページ上のすべての要素をカバーし、ビジュアルビューポートは画面上に実際に表示されるものです。ユーザーがページ内にピンチズームすると、ビジュアルビューポートは縮小しますが、レイアウトビューポートは変更されません。オンスクリーンキーボード(OSK)のようなユーザーインターフェース機能は、レイアウトビューポートに影響を与えずにビジュアルビューポートを縮小することができます。</target>
        </trans-unit>
        <trans-unit id="16e0a24740e1044f614e52f8c2f71687caa951ab" translate="yes" xml:space="preserve">
          <source>The mode for isolating access to data in the object stores that are in the scope of the transaction. For possible values, see the Constants section below. The default value is &lt;code&gt;&lt;a href=&quot;#const_read_only&quot;&gt;readonly&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">トランザクションのスコープ内にあるオブジェクトストアのデータへのアクセスを分離するためのモード。可能な値については、以下の定数セクションを参照してください。デフォルト値は &lt;code&gt;&lt;a href=&quot;#const_read_only&quot;&gt;readonly&lt;/a&gt;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="91bd11604baa6a9b96ddc8b730e3024d18a6c5ef" translate="yes" xml:space="preserve">
          <source>The mode for isolating access to the data in this object store. For possible values, see &lt;a href=&quot;https://developer.mozilla.org/en/indexeddb/idbobjectstoresync#Constants&quot;&gt;Constants&lt;/a&gt;.</source>
          <target state="translated">このオブジェクトストアのデータへのアクセスを分離するためのモード。可能な値については、「&lt;a href=&quot;https://developer.mozilla.org/en/indexeddb/idbobjectstoresync#Constants&quot;&gt;定数&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="67ebd22cbfb46b161186595a7d7b290c265fc9f7" translate="yes" xml:space="preserve">
          <source>The mode of the &lt;code&gt;ShadowRoot&lt;/code&gt; &amp;mdash; either &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt;. This defines whether or not the shadow root's internal features are accessible from JavaScript.</source>
          <target state="translated">&lt;code&gt;ShadowRoot&lt;/code&gt; のモード&amp;mdash; &lt;code&gt;open&lt;/code&gt; または &lt;code&gt;closed&lt;/code&gt; 。これは、シャドウルートの内部機能にJavaScriptからアクセスできるかどうかを定義します。</target>
        </trans-unit>
        <trans-unit id="ea243867052b61f577640a83f6f036cdd659b244" translate="yes" xml:space="preserve">
          <source>The mode that is used to access the object store.</source>
          <target state="translated">オブジェクトストアへのアクセスに使用されるモード。</target>
        </trans-unit>
        <trans-unit id="b6ac017886a26e333fec21967eb931a57d6a603a" translate="yes" xml:space="preserve">
          <source>The mode value is initially set when the &lt;code&gt;SourceBuffer&lt;/code&gt; is created using &lt;code&gt;MediaSource.addSourceBuffer()&lt;/code&gt;. If timestamps already exist for the media segments, then the value will be set to &lt;code&gt;segments&lt;/code&gt;; if they don't, then the value will be set to &lt;code&gt;sequence&lt;/code&gt;.</source>
          <target state="translated">モード値は、 &lt;code&gt;SourceBuffer&lt;/code&gt; が &lt;code&gt;MediaSource.addSourceBuffer()&lt;/code&gt; を使用して作成されるときに最初に設定されます。メディアセグメントのタイムスタンプがすでに存在する場合、値は &lt;code&gt;segments&lt;/code&gt; に設定されます。そうでない場合、値は &lt;code&gt;sequence&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="1dd924237a564aa100cf33a71e524e35ee23b6c8" translate="yes" xml:space="preserve">
          <source>The model, view, and projection matrices</source>
          <target state="translated">モデル行列、ビュー行列、投影行列</target>
        </trans-unit>
        <trans-unit id="f96c5a1b2cfe017ee611ea9c129286a49379ff35" translate="yes" xml:space="preserve">
          <source>The modification requested is not allowed. For example, the app might be trying to move a directory into its own child or moving a file into its parent directory without changing its name.</source>
          <target state="translated">要求された変更は許可されていません。たとえば、アプリがディレクトリを自分の子ディレクトリに移動しようとしたり、名前を変更せずにファイルを親ディレクトリに移動しようとしている場合があります。</target>
        </trans-unit>
        <trans-unit id="05b698946e2e80d91166bcb1ed660dc71c87930a" translate="yes" xml:space="preserve">
          <source>The more nodes in a graph, the higher the latency will be. For example, if your graph has a latency of 500ms, when the source node plays a sound, it will take half a second until that sound can be heard on your speakers (or even longer because of latency in the underlying audio device). Therefore, if you need to have interactive audio, keep the graph as small as possible, and put user-controlled audio nodes at the end of a graph. For example, a volume control (&lt;code&gt;GainNode&lt;/code&gt;) should be the last node so that volume changes take immediate effect.</source>
          <target state="translated">グラフのノードが多いほど、レイテンシは高くなります。たとえば、グラフのレイテンシが500ミリ秒の場合、ソースノードがサウンドを再生すると、そのサウンドがスピーカーで聞こえるまで0.5秒かかります（または、基になるオーディオデバイスのレイテンシのためにさらに長くなります）。したがって、インタラクティブオーディオが必要な場合は、グラフをできるだけ小さくし、ユーザー制御のオーディオノードをグラフの最後に配置します。たとえば、ボリュームコントロール（ &lt;code&gt;GainNode&lt;/code&gt; ）を最後のノードにして、ボリュームの変更がすぐに反映されるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="2cf23f703bb8c909726676a975800b5933914fba" translate="yes" xml:space="preserve">
          <source>The most appropriate error code for the condition. See &lt;a href=&quot;#Error_codes&quot;&gt;Error codes&lt;/a&gt; for possible values.</source>
          <target state="translated">状態に最も適切なエラーコード。可能な値については、&lt;a href=&quot;#Error_codes&quot;&gt;エラーコード&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="45c7013ed7617359c166554319be2f4dbbd0b54b" translate="yes" xml:space="preserve">
          <source>The most common example you'll see of this property being used is to get access to the &lt;a href=&quot;../customelementregistry/define&quot;&gt;&lt;code&gt;CustomElementRegistry.define()&lt;/code&gt;&lt;/a&gt; method to define and register a new custom element, e.g.:</source>
          <target state="translated">このプロパティが使用されている最も一般的な例は、&lt;a href=&quot;../customelementregistry/define&quot;&gt; &lt;code&gt;CustomElementRegistry.define()&lt;/code&gt; &lt;/a&gt;メソッドにアクセスして、新しいカスタム要素を定義および登録することです。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="8a68ff7c3aa8b6805f38d9e550a4fbccb010c233" translate="yes" xml:space="preserve">
          <source>The most common kind of rule:</source>
          <target state="translated">最も一般的な種類のルールです。</target>
        </trans-unit>
        <trans-unit id="80c4e38078ecbddf24b6927ba0c2438a7fdaf843" translate="yes" xml:space="preserve">
          <source>The most common patterns for using &lt;code&gt;show()&lt;/code&gt; involve either the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt;/&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await&quot;&gt;await&lt;/a&gt;&lt;/code&gt; syntax or the use of &lt;code&gt;show().then().catch()&lt;/code&gt; to handle the response and any possible rejection. Those look like this:</source>
          <target state="translated">&lt;code&gt;show()&lt;/code&gt; を使用するための最も一般的なパターンには、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function&quot;&gt;async&lt;/a&gt;&lt;/code&gt; / &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/await&quot;&gt;await&lt;/a&gt;&lt;/code&gt; 構文、または &lt;code&gt;show().then().catch()&lt;/code&gt; を使用した応答と可能性のある拒否の処理があります。これらは次のようになります。</target>
        </trans-unit>
        <trans-unit id="b62738e824ed2ee339ba0ed168844be119b495e3" translate="yes" xml:space="preserve">
          <source>The most common response properties you'll use are:</source>
          <target state="translated">あなたが使用する最も一般的なレスポンスのプロパティは、次のとおりです。</target>
        </trans-unit>
        <trans-unit id="ecdd373464acbb5fd9b3eae3c4ccd62f9643c8b3" translate="yes" xml:space="preserve">
          <source>The most common use case for this method (and even then, probably not a very common use case) is to replace the set of ICE servers to be used. Two potential scenarios in which this might be done:</source>
          <target state="translated">この方法の最も一般的なユースケースは(それにしても、おそらくあまり一般的ではないだろうが)、使用するICEサーバのセットを置き換えることである。これが行われる可能性のある2つの潜在的なシナリオがあります。</target>
        </trans-unit>
        <trans-unit id="c83329b4795bbefcceb5bcc05efa21cd20e33538" translate="yes" xml:space="preserve">
          <source>The most common use of this attribute is to specify a link to an external style sheet: the property is set to &lt;code&gt;stylesheet&lt;/code&gt;, and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-href&quot;&gt;href&lt;/a&gt;&lt;/code&gt; attribute is set to the URL of an external style sheet to format the page.</source>
          <target state="translated">この属性の最も一般的な使用法は、外部スタイルシートへのリンクを指定することです。プロパティは &lt;code&gt;stylesheet&lt;/code&gt; に設定され、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link#attr-href&quot;&gt;href&lt;/a&gt;&lt;/code&gt; 属性はページをフォーマットする外部スタイルシートのURLに設定されます。</target>
        </trans-unit>
        <trans-unit id="e398a9391fc684e02828d032c92cc20d2e346921" translate="yes" xml:space="preserve">
          <source>The most correct or the highest quality option should be used.</source>
          <target state="translated">最も正しい、または最高品質のオプションを使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="d21d77a4943a1f6f4ef32794304a8644f07880ba" translate="yes" xml:space="preserve">
          <source>The most efficient behavior should be used.</source>
          <target state="translated">最も効率的な行動をとるべきです。</target>
        </trans-unit>
        <trans-unit id="34d5c80a5a895c15204bae38b1ea44fa5c1d74e2" translate="yes" xml:space="preserve">
          <source>The most frequently-used feature of the console is logging of text and other data. There are four categories of output you can generate, using the &lt;a href=&quot;console/log&quot;&gt;&lt;code&gt;console.log()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;console/info&quot;&gt;&lt;code&gt;console.info()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;console/warn&quot;&gt;&lt;code&gt;console.warn()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;console/error&quot;&gt;&lt;code&gt;console.error()&lt;/code&gt;&lt;/a&gt; methods respectively. Each of these results in output styled differently in the log, and you can use the filtering controls provided by your browser to only view the kinds of output that interest you.</source>
          <target state="translated">コンソールで最も頻繁に使用される機能は、テキストやその他のデータのロギングです。&lt;a href=&quot;console/log&quot;&gt; &lt;code&gt;console.log()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;console/info&quot;&gt; &lt;code&gt;console.info()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;console/warn&quot;&gt; &lt;code&gt;console.warn()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;console/error&quot;&gt; &lt;code&gt;console.error()&lt;/code&gt; &lt;/a&gt;メソッドをそれぞれ使用して、生成できる出力の4つのカテゴリがあります。これらの結果はそれぞれ、ログのスタイルが異なる出力になり、ブラウザーが提供するフィルター制御を使用して、関心のある種類の出力のみを表示できます。</target>
        </trans-unit>
        <trans-unit id="3cf09065f1f4c754fc74c4fe4762c455ed1e118a" translate="yes" xml:space="preserve">
          <source>The most important thing to note here is that the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column&quot;&gt;&lt;code&gt;grid-column&lt;/code&gt;&lt;/a&gt; is set to 1, to place the sidebar on the left-hand side of the screen. If you change this to -1, it will appear on the right (although some other elements will need some adjustments made to their margins to get the spacing just right). The &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row&quot;&gt;&lt;code&gt;grid-row&lt;/code&gt;&lt;/a&gt; is set to 2, to place it alongside the site body.</source>
          <target state="translated">ここで注意すべき最も重要なことは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column&quot;&gt; &lt;code&gt;grid-column&lt;/code&gt; &lt;/a&gt;が1に設定され、サイドバーが画面の左側に配置されることです。これを-1に変更すると、右側に表示されます（ただし、他の一部の要素では、間隔を正しくするためにマージンを調整する必要があります）。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row&quot;&gt; &lt;code&gt;grid-row&lt;/code&gt; &lt;/a&gt;、サイト本体と一緒にそれを置くために、2に設定されています。</target>
        </trans-unit>
        <trans-unit id="f870ba056b605d8d304234d481b77038918732f7" translate="yes" xml:space="preserve">
          <source>The most important thing to understand before we get started is that even though we're only rendering a square plane object in this example, we're still drawing in 3D space. It's just we're drawing a square and we're putting it directly in front of the camera perpendicular to the view direction. We need to define the shaders that will create the color for our simple scene as well as draw our object. These will establish how the square plane appears on the screen.</source>
          <target state="translated">始める前に理解しておくべき最も重要なことは、この例では正方形の平面オブジェクトをレンダリングしているだけですが、3D空間で描画しているということです。正方形を描いているだけで、カメラの前でビューの方向に垂直に配置しています。この単純なシーンの色を作成し、オブジェクトを描画するシェーダを定義する必要があります。これらのシェーダは、画面上に正方形の平面がどのように表示されるかを決定します。</target>
        </trans-unit>
        <trans-unit id="3cc23ee89804a1cef0e9b3a74597a43b98a0f4f8" translate="yes" xml:space="preserve">
          <source>The most important thing to understand is that most constraints aren't requirements; instead, they're requests. There are exceptions, and we'll get to those shortly.</source>
          <target state="translated">理解すべき最も重要なことは、ほとんどの制約は要求ではなく、代わりに要求であるということです。例外もあり、それについては後ほど説明します。</target>
        </trans-unit>
        <trans-unit id="9fbd1bb2e6586bb6ec16b7773f74d89a808cfe84" translate="yes" xml:space="preserve">
          <source>The most obvious use of the &lt;code&gt;connect()&lt;/code&gt; method is to direct the audio output from one node into the audio input of another node for further processing. For example, you might send the audio from a &lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt;&lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt;&lt;/a&gt;&amp;mdash;that is, the audio from an HTML5 media element such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt;&amp;mdash;through a band pass filter implemented using a &lt;a href=&quot;../biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; to reduce noise before then sending the audio along to the speakers.</source>
          <target state="translated">&lt;code&gt;connect()&lt;/code&gt; メソッドの最も明らかな使用法は、あるノードからのオーディオ出力を別のノードのオーディオ入力に送り、さらに処理することです。たとえば、&lt;a href=&quot;../mediaelementaudiosourcenode&quot;&gt; &lt;code&gt;MediaElementAudioSourceNode&lt;/code&gt; &lt;/a&gt;からオーディオ、つまり&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;などのHTML5メディア要素からのオーディオを、&lt;a href=&quot;../biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; &lt;/a&gt;を使用して実装されたバンドパスフィルターを介して送信してから、ノイズを低減してからスピーカーにオーディオを送信します。</target>
        </trans-unit>
        <trans-unit id="9c8ca7cfd10b18a375a899fc96fd43f124d6c331" translate="yes" xml:space="preserve">
          <source>The most simple example just starts the audio buffer playing from the beginning &amp;mdash; you don't need to specify any parameters in this case:</source>
          <target state="translated">最も単純な例では、オーディオバッファーの再生を最初から開始します。この場合、パラメーターを指定する必要はありません。</target>
        </trans-unit>
        <trans-unit id="a496838dc4fbf63316b6890d8e9bc8c961e0ebb0" translate="yes" xml:space="preserve">
          <source>The mouseout event is raised when the mouse leaves an element (e.g, when the mouse moves off of an image in the web page, the mouseout event is raised for that image element).</source>
          <target state="translated">マウスアウトイベントは、マウスが要素から離れると発生します(例えば、ウェブページ内の画像からマウスが離れると、その画像要素に対してマウスアウトイベントが発生します)。</target>
        </trans-unit>
        <trans-unit id="7d05d2e1de76dd1d01f96e2ca576630ffad70dfd" translate="yes" xml:space="preserve">
          <source>The mouseover event is raised when the user moves the mouse over a particular element.</source>
          <target state="translated">mouseover イベントは、ユーザーが特定の要素の上にマウスを移動させたときに発生します。</target>
        </trans-unit>
        <trans-unit id="e7c096260da6763e8ec8cc0696281a7dfcbf9a59" translate="yes" xml:space="preserve">
          <source>The mouseover, mouseout, mouseenter, and mouseleave events are never prevented (even if the pointer is down).</source>
          <target state="translated">マウスオーバー、マウスアウト、マウスエンター、マウスリーヴのイベントは、決して防止されません(ポインタがダウンしていても)。</target>
        </trans-unit>
        <trans-unit id="f538ebb30d806685dd762f181bd15f6f4dfec9e8" translate="yes" xml:space="preserve">
          <source>The mouseup event is raised when the user releases the mouse button.</source>
          <target state="translated">マウスアップイベントは、ユーザーがマウスボタンを離したときに発生します。</target>
        </trans-unit>
        <trans-unit id="86e24397b09b262693ec9e89cf114beb996d8e36" translate="yes" xml:space="preserve">
          <source>The multi-entry status of the index is logged to the console: it should be returned as &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">インデックスのマルチエントリステータスはコンソールに記録されます。falseとして返される必要があり &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="56ac0f2dafbc15b4e214b6ea17d782828fd0a419" translate="yes" xml:space="preserve">
          <source>The mutating operation was attempted in a &quot;readonly&quot; transaction (No legacy code value and constant name).</source>
          <target state="translated">突然変異操作は &quot;読み取り専用&quot; トランザクションで試行されました (レガシーコード値と定数名がありません)。</target>
        </trans-unit>
        <trans-unit id="bf11a1e3c49f4f2d9d99ded2c9a8f5aedef0dc08" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;className&lt;/code&gt; is used for this property instead of &lt;code&gt;class&lt;/code&gt; because of conflicts with the &quot;class&quot; keyword in many languages which are used to manipulate the DOM.</source>
          <target state="translated">DOMの操作に使用される多くの言語の「class」キーワードとの競合のため、 &lt;code&gt;class&lt;/code&gt; ではなく、このプロパティに &lt;code&gt;className&lt;/code&gt; という名前が使用されています。</target>
        </trans-unit>
        <trans-unit id="56694a61b91b70b99f6dd6682d9039f6d71627b4" translate="yes" xml:space="preserve">
          <source>The name for the database.</source>
          <target state="translated">データベースの名前です。</target>
        </trans-unit>
        <trans-unit id="49144086d2aeb48f6d9abbeebab7c601abdb76ee" translate="yes" xml:space="preserve">
          <source>The name of a custom data attribute begins with &lt;code&gt;&quot;data-&quot;&lt;/code&gt;. It must contain only letters, numbers and the following characters: dash (&lt;code&gt;-&lt;/code&gt;), dot (&lt;code&gt;.&lt;/code&gt;), colon (&lt;code&gt;:&lt;/code&gt;), underscore (&lt;code&gt;_&lt;/code&gt;). Moreover, it should not contain ASCII capital letters (&lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;).</source>
          <target state="translated">カスタムデータ属性の名前は &lt;code&gt;&quot;data-&quot;&lt;/code&gt; で始まります。それが唯一の文字、数字、次の文字含まれている必要があります：ダッシュ（ &lt;code&gt;-&lt;/code&gt; （）、ドット &lt;code&gt;.&lt;/code&gt; ）、コロン（ &lt;code&gt;:&lt;/code&gt; ）、アンダースコア（ &lt;code&gt;_&lt;/code&gt; ）。さらに、ASCIIの大文字（ &lt;code&gt;A&lt;/code&gt; から &lt;code&gt;Z&lt;/code&gt; ）を含めないでください。</target>
        </trans-unit>
        <trans-unit id="f191f3deeb9987c8aaec81537cdc44ea43dde1ee" translate="yes" xml:space="preserve">
          <source>The name of a custom data attribute in HTML begins with &lt;code&gt;data-&lt;/code&gt;. It must contain only letters, numbers and the following characters: dash (&lt;code&gt;-&lt;/code&gt;), dot (&lt;code&gt;.&lt;/code&gt;), colon (&lt;code&gt;:&lt;/code&gt;), underscore (&lt;code&gt;_&lt;/code&gt;) -- but NOT any ASCII capital letters (&lt;code&gt;A&lt;/code&gt; to &lt;code&gt;Z&lt;/code&gt;).</source>
          <target state="translated">HTMLのカスタムデータ属性の名前は、 &lt;code&gt;data-&lt;/code&gt; で始まります。それが唯一の文字、数字、以下の文字が含まれている必要があります：ダッシュ（ &lt;code&gt;-&lt;/code&gt; ）、ドット（ &lt;code&gt;.&lt;/code&gt; 、コロン）（ ： &lt;code&gt;:&lt;/code&gt; アンダースコア（ &lt;code&gt;_&lt;/code&gt; ） -ではなく、任意のASCII大文字（ &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;Z&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="af439ef7df49a7aedc6a2a3ad1f51843e4062ee0" translate="yes" xml:space="preserve">
          <source>The name of a custom data attribute in JavaScript is the name of the same HTML attribute but in camelCase and with no dashes, dots, etc.</source>
          <target state="translated">JavaScriptでのカスタムデータ属性の名前は、同じHTML属性の名前ですが、キャメルケースで、ダッシュやドットなどを使用していません。</target>
        </trans-unit>
        <trans-unit id="7e61ef84301095ddfafaf7c6237e6b7bb466bb2d" translate="yes" xml:space="preserve">
          <source>The name of a lock is given by script when the lock is requested. The name is selected by the developer to represent some abstract resource for which use is being coordinated across multiple tabs, workers, or other code within the origin. For example, if only one tab of a web application should be synchronizing network resources with an offline database, it could use a lock name such as &lt;code&gt;&quot;net_db_sync&quot;&lt;/code&gt;.</source>
          <target state="translated">ロックの名前は、ロックが要求されたときにスクリプトによって指定されます。この名前は、複数のタブ、ワーカー、またはオリジン内の他のコード間で使用が調整されているいくつかの抽象的なリソースを表すために開発者によって選択されます。たとえば、Webアプリケーションの1つのタブだけがネットワークリソースをオフラインデータベースと同期する必要がある場合、 &lt;code&gt;&quot;net_db_sync&quot;&lt;/code&gt; などのロック名を使用できます。</target>
        </trans-unit>
        <trans-unit id="5faed4e72eb1cc9ae314eea93e5ee35081590f09" translate="yes" xml:space="preserve">
          <source>The name of a new index.</source>
          <target state="translated">新しいインデックスの名前。</target>
        </trans-unit>
        <trans-unit id="fc81631b41d62e5dee7f362382d3d0175bbae5d2" translate="yes" xml:space="preserve">
          <source>The name of a new object store.</source>
          <target state="translated">新しいオブジェクトストアの名前です。</target>
        </trans-unit>
        <trans-unit id="0b8e17043257860fa0968eb5dc7bf2c031180ea3" translate="yes" xml:space="preserve">
          <source>The name of a property.</source>
          <target state="translated">物件の名前です。</target>
        </trans-unit>
        <trans-unit id="5a699b308daf4c4328bb5238e8e622fff8265eb7" translate="yes" xml:space="preserve">
          <source>The name of an existing object store to remove.</source>
          <target state="translated">削除する既存のオブジェクトストアの名前。</target>
        </trans-unit>
        <trans-unit id="b2df965a00ee99218a4409824395f56e7f71b81d" translate="yes" xml:space="preserve">
          <source>The name of entity reference</source>
          <target state="translated">エンティティ参照の名前</target>
        </trans-unit>
        <trans-unit id="9161d67feccefeee181c6791f9bb625ec49f2985" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header whose values you want to retrieve from the &lt;code&gt;Headers&lt;/code&gt; object. If the given name is not the name of an HTTP header, this method throws a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Headers&lt;/code&gt; オブジェクトから値を取得するHTTPヘッダーの名前。指定された名前がHTTPヘッダーの名前でない場合、このメソッドは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="b39ef7df35ce44c0fd60cbd4c4b90dced33c9297" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header you want to add to the &lt;code&gt;Headers&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Headers&lt;/code&gt; オブジェクトに追加するHTTPヘッダーの名前。</target>
        </trans-unit>
        <trans-unit id="4ab6682eef6bf93552744df1b02b363d33331511" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header you want to delete from the &lt;code&gt;Headers&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Headers&lt;/code&gt; オブジェクトから削除するHTTPヘッダーの名前。</target>
        </trans-unit>
        <trans-unit id="7af33c4f0c8b2fcaf82e831b2364797c4932d101" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header you want to set to a new value. If the given name is not the name of an HTTP header, this method throws a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">新しい値に設定するHTTPヘッダーの名前。指定された名前がHTTPヘッダーの名前でない場合、このメソッドは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="459f3295fea5e4783501f297836e36705cb5ee40" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header you want to test for. If the given name is not the name of an HTTP header, this method throws a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">テストするHTTPヘッダーの名前。指定された名前がHTTPヘッダーの名前でない場合、このメソッドは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; を&lt;/a&gt;スローします。</target>
        </trans-unit>
        <trans-unit id="c48404d4d87f3acc4a1e4e1e0463012e8abef52c" translate="yes" xml:space="preserve">
          <source>The name of the cache you want to delete.</source>
          <target state="translated">削除したいキャッシュの名前です。</target>
        </trans-unit>
        <trans-unit id="db900f0dacefb18bcf6674f57f661adaec976229" translate="yes" xml:space="preserve">
          <source>The name of the cache you want to open.</source>
          <target state="translated">開きたいキャッシュの名前です。</target>
        </trans-unit>
        <trans-unit id="d2fc1ada6101beb982beee76d196e982acd883b7" translate="yes" xml:space="preserve">
          <source>The name of the color of the rule.</source>
          <target state="translated">ルールの色の名前です。</target>
        </trans-unit>
        <trans-unit id="fc581b28360ad7e686c159ce66da558b68e3cc4b" translate="yes" xml:space="preserve">
          <source>The name of the connected database.</source>
          <target state="translated">接続されているデータベースの名前です。</target>
        </trans-unit>
        <trans-unit id="b46395c90e04c0899e9d58655c03f503a7e2143b" translate="yes" xml:space="preserve">
          <source>The name of the custom element whose constructor you want to return a reference to.</source>
          <target state="translated">参照を返したいカスタム要素のコンストラクタの名前。</target>
        </trans-unit>
        <trans-unit id="40b65fb1da2d2d0b71472bf6eb06d4d870e0f2a9" translate="yes" xml:space="preserve">
          <source>The name of the database you want to delete. Note that attempting to delete a database that doesn't exist does not throw an exception, in contrast to &lt;a href=&quot;../idbdatabase/deleteobjectstore&quot;&gt;&lt;code&gt;IDBDatabase.deleteObjectStore()&lt;/code&gt;&lt;/a&gt;, which does throw an exception if the named object store does not exist.</source>
          <target state="translated">削除するデータベースの名前。名前付きオブジェクトストアが存在しない場合に例外をスローする&lt;a href=&quot;../idbdatabase/deleteobjectstore&quot;&gt; &lt;code&gt;IDBDatabase.deleteObjectStore()&lt;/code&gt; &lt;/a&gt;とは対照的に、存在しないデータベースを削除しようとしても例外はスローされません。</target>
        </trans-unit>
        <trans-unit id="37576df4686b177205cb7f6611ca417d2ed725a4" translate="yes" xml:space="preserve">
          <source>The name of the database.</source>
          <target state="translated">データベースの名前です。</target>
        </trans-unit>
        <trans-unit id="5350b0aa9d6ec37ea537858a3bbfa73b178ac4bc" translate="yes" xml:space="preserve">
          <source>The name of the entry to retrieve.</source>
          <target state="translated">取得するエントリの名前。</target>
        </trans-unit>
        <trans-unit id="47e223e8c5fe87dc2f017ef2eabcb21daf87ceb2" translate="yes" xml:space="preserve">
          <source>The name of the event (case-insensitive).</source>
          <target state="translated">イベントの名前(大文字小文字を区別しません)。</target>
        </trans-unit>
        <trans-unit id="b35a2b903389479f8fd59f26e80baffeb41a71d3" translate="yes" xml:space="preserve">
          <source>The name of the event.</source>
          <target state="translated">イベント名です。</target>
        </trans-unit>
        <trans-unit id="92dc753e53ca04efed0bcbbc253b9fabbec28ec9" translate="yes" xml:space="preserve">
          <source>The name of the existing index to remove.</source>
          <target state="translated">削除する既存のインデックスの名前。</target>
        </trans-unit>
        <trans-unit id="88876793d17cca1f03a79f66549eee4503d00336" translate="yes" xml:space="preserve">
          <source>The name of the field whose data is contained in &lt;code&gt;value&lt;/code&gt;.</source>
          <target state="translated">データが &lt;code&gt;value&lt;/code&gt; に含まれるフィールドの名前。</target>
        </trans-unit>
        <trans-unit id="26c3f034ccd50a10581653fcbf34a38b999dc669" translate="yes" xml:space="preserve">
          <source>The name of the header whose value is to be set.</source>
          <target state="translated">値を設定するヘッダの名前。</target>
        </trans-unit>
        <trans-unit id="bcc0587243522bb44ac3f76625883fc7e9d7535c" translate="yes" xml:space="preserve">
          <source>The name of the index is logged to the console: it should be returned as &lt;code&gt;lName&lt;/code&gt;.</source>
          <target state="translated">インデックスの名前はコンソールに記録されます。それは &lt;code&gt;lName&lt;/code&gt; として返されます。</target>
        </trans-unit>
        <trans-unit id="a239b29992b94a2369abfe5f5fa657c7a88959fb" translate="yes" xml:space="preserve">
          <source>The name of the index to create. Note that it is possible to create an index with an empty name.</source>
          <target state="translated">作成するインデックスの名前。空の名前でインデックスを作成することも可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="309bf1a783b0b51c51b38cc4d749641a30fc81fa" translate="yes" xml:space="preserve">
          <source>The name of the index to open.</source>
          <target state="translated">開くインデックスの名前。</target>
        </trans-unit>
        <trans-unit id="5a2b9c1abeb2c7a84b51cd096ca4b6f96e5423cd" translate="yes" xml:space="preserve">
          <source>The name of the key you want to delete.</source>
          <target state="translated">削除したいキーの名前です。</target>
        </trans-unit>
        <trans-unit id="51582f80d3dacc9bab4de97eb72e88776ad05329" translate="yes" xml:space="preserve">
          <source>The name of the new object store to be created. Note that it is possible to create an object store with an empty name.</source>
          <target state="translated">作成する新しいオブジェクト・ストアの名前です。空の名前でオブジェクトストアを作成することも可能であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="6064b261a51e7a71aab6fa3a4eda6668bb583154" translate="yes" xml:space="preserve">
          <source>The name of the object store referenced by this index.</source>
          <target state="translated">このインデックスによって参照されるオブジェクトストアの名前。</target>
        </trans-unit>
        <trans-unit id="a09cabbd532284fd9f1763704878336dbed3ecd5" translate="yes" xml:space="preserve">
          <source>The name of the object store to open.</source>
          <target state="translated">開くオブジェクトストアの名前。</target>
        </trans-unit>
        <trans-unit id="b0609ff4b29a67e9bcbb017197f66cb97a507e96" translate="yes" xml:space="preserve">
          <source>The name of the object store you want to delete.</source>
          <target state="translated">削除したいオブジェクトストアの名前です。</target>
        </trans-unit>
        <trans-unit id="1a811105e51e3b087c38561c509a1162ebe0221f" translate="yes" xml:space="preserve">
          <source>The name of the parameter to append.</source>
          <target state="translated">追加するパラメータの名前。</target>
        </trans-unit>
        <trans-unit id="3535909a65b914eac6d651985bca3ba2095996e1" translate="yes" xml:space="preserve">
          <source>The name of the parameter to be deleted.</source>
          <target state="translated">削除するパラメータの名前です。</target>
        </trans-unit>
        <trans-unit id="03f29c02d11f28091d6be4057058ff92700af6b9" translate="yes" xml:space="preserve">
          <source>The name of the parameter to find.</source>
          <target state="translated">検索するパラメータの名前。</target>
        </trans-unit>
        <trans-unit id="4730be470c40ca8957558d1969d78ab2de91ab32" translate="yes" xml:space="preserve">
          <source>The name of the parameter to return.</source>
          <target state="translated">返すパラメータの名前。</target>
        </trans-unit>
        <trans-unit id="c8ab0e1fdc033df1b8cd057f1c707fc1f394915b" translate="yes" xml:space="preserve">
          <source>The name of the parameter to set.</source>
          <target state="translated">設定するパラメータの名前です。</target>
        </trans-unit>
        <trans-unit id="f473b51a98d9dd3a878cf1daf4528aceb12f26af" translate="yes" xml:space="preserve">
          <source>The name of the performance entry when the metric was created.</source>
          <target state="translated">メトリックが作成されたときのパフォーマンス・エントリの名前。</target>
        </trans-unit>
        <trans-unit id="efefc9a9b3c19a15360e92276c1213b327afaf82" translate="yes" xml:space="preserve">
          <source>The name of the plugin.</source>
          <target state="translated">プラグインの名前です。</target>
        </trans-unit>
        <trans-unit id="18e4ad01858ade4a62658a9b001f0689dc97f145" translate="yes" xml:space="preserve">
          <source>The name of the property to retrieve all values of.</source>
          <target state="translated">すべての値を取得するプロパティの名前です。</target>
        </trans-unit>
        <trans-unit id="5febba2ce1d517443777897fe4d29c46735fd633" translate="yes" xml:space="preserve">
          <source>The name of the property to retrieve the value of.</source>
          <target state="translated">値を取得するプロパティの名前です。</target>
        </trans-unit>
        <trans-unit id="0949391ba21ff5dfad6984ed7fff7f85f5fb0016" translate="yes" xml:space="preserve">
          <source>The name of the requested object store.</source>
          <target state="translated">要求されたオブジェクトストアの名前。</target>
        </trans-unit>
        <trans-unit id="8ef15486243f1900b6c6b4de89a2ac18babcc9e4" translate="yes" xml:space="preserve">
          <source>The name of the script file in which the error occurred.</source>
          <target state="translated">エラーが発生したスクリプトファイルの名前。</target>
        </trans-unit>
        <trans-unit id="337442d543636aab977b8b8b9cf6ff26260ab3bb" translate="yes" xml:space="preserve">
          <source>The name of the style sheets to enable. All style sheets with a title that match this name will be enabled, while all others that have a title will be disabled. Specify an empty string for the &lt;code&gt;name&lt;/code&gt; parameter to disable all alternate and preferred style sheets (but not the persistent style sheets; that is, those with no &lt;code&gt;title&lt;/code&gt; attribute).</source>
          <target state="translated">有効にするスタイルシートの名前。この名前に一致するタイトルを持つすべてのスタイルシートが有効になり、タイトルを持つ他のすべてのスタイルシートは無効になります。 &lt;code&gt;name&lt;/code&gt; パラメーターに空の文字列を指定して、すべての代替および優先スタイルシートを無効にします（ただし、永続的なスタイルシートは無効になりません。つまり、 &lt;code&gt;title&lt;/code&gt; 属性のないスタイルシートです）。</target>
        </trans-unit>
        <trans-unit id="63af431ea5cd341830d2625e05fbc74110d3d4a3" translate="yes" xml:space="preserve">
          <source>The name of the sub-protocol being used on the &lt;a href=&quot;../rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt;, if any; otherwise, the empty string (&quot;&quot;). &lt;code&gt;&quot;&quot;&lt;/code&gt; This string may not be longer than 65,535 &lt;em&gt;bytes&lt;/em&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;で使用されているサブプロトコルの名前（存在する場合）。それ以外の場合は、空の文字列（ &quot;&quot;）。 &lt;code&gt;&quot;&quot;&lt;/code&gt; この文字列は65,535 &lt;em&gt;バイト&lt;/em&gt;以下にする必要があり&lt;em&gt;ます&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="40467e3c2d88111d3eb2b2ad84a27a235f4aaaaf" translate="yes" xml:space="preserve">
          <source>The name of the timer to log to the console.</source>
          <target state="translated">コンソールにログを記録するタイマーの名前です。</target>
        </trans-unit>
        <trans-unit id="b768212273b7d8ae91c0fdcc39170cc729b94c5f" translate="yes" xml:space="preserve">
          <source>The name of the timer to stop. Once stopped, the elapsed time is automatically displayed in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Web_Console&quot;&gt;Web Console&lt;/a&gt;.</source>
          <target state="translated">停止するタイマーの名前。停止すると、経過時間が自動的に&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Web_Console&quot;&gt;Webコンソールに&lt;/a&gt;表示されます。</target>
        </trans-unit>
        <trans-unit id="6ae21042be6059d83527c4d79748ad82013273e5" translate="yes" xml:space="preserve">
          <source>The name of the user we wish to call.</source>
          <target state="translated">呼び出したいユーザーの名前です。</target>
        </trans-unit>
        <trans-unit id="5a0d5594c93396b42bb08315eeb16c59974b0b84" translate="yes" xml:space="preserve">
          <source>The name of the window is used primarily for setting targets for hyperlinks and forms. Windows do not need to have names.</source>
          <target state="translated">ウィンドウの名前は、主にハイパーリンクやフォームのターゲットを設定するために使用されます。ウィンドウは名前を持つ必要はありません。</target>
        </trans-unit>
        <trans-unit id="00cf9c79f89c16623bc0b9b769fe70a0be30a0ad" translate="yes" xml:space="preserve">
          <source>The name of this index.</source>
          <target state="translated">このインデックスの名前。</target>
        </trans-unit>
        <trans-unit id="6812f5dba332b8ae530720f8765ca073e0ee2713" translate="yes" xml:space="preserve">
          <source>The name of this object store.</source>
          <target state="translated">このオブジェクトストアの名前。</target>
        </trans-unit>
        <trans-unit id="1ec70812c80b4216a571bc94438dd6cc7e796cc9" translate="yes" xml:space="preserve">
          <source>The name that the &lt;a href=&quot;sharedworker&quot;&gt;&lt;code&gt;SharedWorker&lt;/code&gt;&lt;/a&gt; was (optionally) given when it was created using the &lt;a href=&quot;sharedworker/sharedworker&quot;&gt;&lt;code&gt;SharedWorker()&lt;/code&gt;&lt;/a&gt; constructor. This is mainly useful for debugging purposes.</source>
          <target state="translated">&lt;a href=&quot;sharedworker/sharedworker&quot;&gt; &lt;code&gt;SharedWorker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して作成されたときに（オプションで）&lt;a href=&quot;sharedworker&quot;&gt; &lt;code&gt;SharedWorker&lt;/code&gt; &lt;/a&gt;に付けられた名前。これは主にデバッグ目的で役立ちます。</target>
        </trans-unit>
        <trans-unit id="8b77eaa466a870baece6dd0002677a8dc3b07bba" translate="yes" xml:space="preserve">
          <source>The name that the &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt; was (optionally) given when it was created using the &lt;a href=&quot;worker/worker&quot;&gt;&lt;code&gt;Worker()&lt;/code&gt;&lt;/a&gt; constructor. This is mainly useful for debugging purposes.</source>
          <target state="translated">&lt;a href=&quot;worker/worker&quot;&gt; &lt;code&gt;Worker()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して作成されたときに（オプションで）&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;に付けられた名前。これは主にデバッグ目的で役立ちます。</target>
        </trans-unit>
        <trans-unit id="aa70c24cf2e18fd6af5bcd6c338b80a7b5a0b5e1" translate="yes" xml:space="preserve">
          <source>The name to give the new timer. This will identify the timer; use the same name when calling &lt;a href=&quot;timeend&quot;&gt;&lt;code&gt;console.timeEnd()&lt;/code&gt;&lt;/a&gt; to stop the timer and get the time output to the console.</source>
          <target state="translated">新しいタイマーに付ける名前。これはタイマーを識別します。&lt;a href=&quot;timeend&quot;&gt; &lt;code&gt;console.timeEnd()&lt;/code&gt; &lt;/a&gt;を呼び出すときに同じ名前を使用してタイマーを停止し、時間の出力をコンソールに取得します。</target>
        </trans-unit>
        <trans-unit id="25188bad61495ac8f60aacb43aeb2c320740adfc" translate="yes" xml:space="preserve">
          <source>The name to give the profile. Optional.</source>
          <target state="translated">プロファイルに与える名前。省略可能。</target>
        </trans-unit>
        <trans-unit id="4c49b2ac7ac83d00f8aaf6f728d88b984153468c" translate="yes" xml:space="preserve">
          <source>The name to give the profile. This parameter is optional.</source>
          <target state="translated">プロファイルに与える名前。このパラメータはオプションです。</target>
        </trans-unit>
        <trans-unit id="16c4bc94e516291b8c5d17b0b6a990e28bfe7559" translate="yes" xml:space="preserve">
          <source>The name used when the mark was created by calling &lt;a href=&quot;../performance/mark&quot;&gt;&lt;code&gt;performance.mark()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">マークが&lt;a href=&quot;../performance/mark&quot;&gt; &lt;code&gt;performance.mark()&lt;/code&gt; を&lt;/a&gt;呼び出して作成されたときに使用された名前。</target>
        </trans-unit>
        <trans-unit id="838dc6e111eae7cef4026ed07221ad39a502215f" translate="yes" xml:space="preserve">
          <source>The names of object stores and indexes in the scope of the new transaction.</source>
          <target state="translated">新しいトランザクションのスコープ内のオブジェクト・ストアとインデックスの名前。</target>
        </trans-unit>
        <trans-unit id="13b94e897c9e7de9dd0bd902e97e07660e36b890" translate="yes" xml:space="preserve">
          <source>The names of object stores that are in the scope of the new transaction, declared as an array of strings. Specify only the object stores that you need to access.</source>
          <target state="translated">文字列の配列として宣言された、新しいトランザクションの範囲内にあるオブジェクト・ストアの名前。アクセスする必要のあるオブジェクトストアのみを指定します。</target>
        </trans-unit>
        <trans-unit id="1b148bf6c2154e221d5f873a46a06b19e3a57ce5" translate="yes" xml:space="preserve">
          <source>The names of the object stores that exist in the connected database.</source>
          <target state="translated">接続されたデータベースに存在するオブジェクトストアの名前。</target>
        </trans-unit>
        <trans-unit id="d48612e32f98189c984135c6b7bd7b77a3741b9a" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element, or &lt;code&gt;null&lt;/code&gt; if it is no namespace.</source>
          <target state="translated">要素の名前空間URI 。名前空間がない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="457e025186b382a0024d70d33719323024f08878" translate="yes" xml:space="preserve">
          <source>The namespace URI of this node, or &lt;code&gt;null&lt;/code&gt; if it is no namespace.</source>
          <target state="translated">このノードの名前空間URI 。名前空間がない場合は &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="e6b4c6ee546596096d21013047b9bae350fe74da" translate="yes" xml:space="preserve">
          <source>The network interface being used by the connection has gone offline.</source>
          <target state="translated">接続で使用されているネットワークインターフェースがオフラインになりました。</target>
        </trans-unit>
        <trans-unit id="9363b670c347648656a42eb773ff642a82b832d5" translate="yes" xml:space="preserve">
          <source>The new &lt;a href=&quot;../element&quot;&gt;&lt;code&gt;Element&lt;/code&gt;&lt;/a&gt;。</source>
          <target state="translated">新しい&lt;a href=&quot;../element&quot;&gt; &lt;code&gt;Element&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d0185167bbade6a4056e8a851ff1d1a7faf12479" translate="yes" xml:space="preserve">
          <source>The new &lt;code&gt;RTCRtpSender&lt;/code&gt; is created with the specified &lt;code&gt;track&lt;/code&gt; and set of &lt;code&gt;stream&lt;/code&gt;(s).</source>
          <target state="translated">新しい &lt;code&gt;RTCRtpSender&lt;/code&gt; は、指定された &lt;code&gt;track&lt;/code&gt; と &lt;code&gt;stream&lt;/code&gt; セットで作成されます。</target>
        </trans-unit>
        <trans-unit id="5a4ea7ffdfc0e2b404670f896194da101e547bf8" translate="yes" xml:space="preserve">
          <source>The new URL can be any URL in the same origin as the current URL. In contrast, setting &lt;code&gt;window.location&lt;/code&gt; keeps you at the same &lt;a href=&quot;document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; only if you modify only the hash.</source>
          <target state="translated">新しいURLは、現在のURLと同じオリジンの任意のURLにすることができます。対照的に、 &lt;code&gt;window.location&lt;/code&gt; を設定すると、ハッシュのみを変更する場合にのみ、同じ&lt;a href=&quot;document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt;維持されます。</target>
        </trans-unit>
        <trans-unit id="539ad34597e9f74c4f204eccaec09b1b0af03fcd" translate="yes" xml:space="preserve">
          <source>The new URL to which the window is navigating.</source>
          <target state="translated">ウィンドウが移動する新しい URL。</target>
        </trans-unit>
        <trans-unit id="579cabb526c788080d203a5db8635a90cc132f17" translate="yes" xml:space="preserve">
          <source>The new ad's element object is returned to the caller in case it's needed.</source>
          <target state="translated">新しい広告の要素オブジェクトが必要になった場合に備えて呼び出し元に返されます。</target>
        </trans-unit>
        <trans-unit id="6a238c2c950ec79e7cd3c611817922c367e685ab" translate="yes" xml:space="preserve">
          <source>The new candidate is then passed into &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;RTCPeerConnection.addIceCandidate()&lt;/code&gt;&lt;/a&gt; to add the candidate to the list of candidates for WebRTC to consider using for the connection being established.</source>
          <target state="translated">次に、新しい候補が&lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt; &lt;code&gt;RTCPeerConnection.addIceCandidate()&lt;/code&gt; &lt;/a&gt;に渡され、WebRTCが確立中の接続に使用することを検討するための候補のリストに候補が追加されます。</target>
        </trans-unit>
        <trans-unit id="9c1ec9484f4f7063944e7de5893341a0637b76b2" translate="yes" xml:space="preserve">
          <source>The new element will be given an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/is&quot;&gt;is&lt;/a&gt;&lt;/code&gt; attribute whose value is the custom element's tag name.</source>
          <target state="translated">新しい要素には、カスタム要素のタグ名を値とする &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/is&quot;&gt;is&lt;/a&gt;&lt;/code&gt; 属性が与えられます。</target>
        </trans-unit>
        <trans-unit id="4fa69383511027c5851d8d49ce933a80085d6c89" translate="yes" xml:space="preserve">
          <source>The new keyword can be used for defining a new VTTRegion object which can then be used for containing the multiple cues. There are several properties of VTTRegion which are width, lines, regionAnchorX, RegionAnchorY, viewportAnchorX, viewportAnchorY and scroll that can be used to specify the look and feel of this VTT region. The interface code is given below which can be used to expose the WebVTT regions in DOM API:</source>
          <target state="translated">新しいキーワードを使用して、新しい VTTRegion オブジェクトを定義することができます。VTTRegion には、幅、線、regionAnchorX、RegionAnchorY、viewportAnchorX、viewportAnchorY、スクロールといったいくつかのプロパティがあり、これらを使用して VTT リージョンの外観や使用感を指定することができます。以下に、DOM API で WebVTT リージョンを公開するためのインターフェースコードを示します。</target>
        </trans-unit>
        <trans-unit id="840c66f2689e9a1e68da13ee95dcef4fe3c1b5ad" translate="yes" xml:space="preserve">
          <source>The new list element is inserted into the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; block by calling its &lt;a href=&quot;../node/appendchild&quot;&gt;&lt;code&gt;Node.appendChild()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../node/appendchild&quot;&gt; &lt;code&gt;Node.appendChild()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことにより、新しいリスト要素が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;ブロックに挿入されます。</target>
        </trans-unit>
        <trans-unit id="c846d51d76fa98dbbb92191a4f726dea259edd23" translate="yes" xml:space="preserve">
          <source>The new node is inserted at the start boundary point of the &lt;code&gt;Range&lt;/code&gt;. If the new node is to be added to a text &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt;, that &lt;code&gt;Node&lt;/code&gt; is split at the insertion point, and the insertion occurs between the two text nodes.</source>
          <target state="translated">新しいノードが &lt;code&gt;Range&lt;/code&gt; の開始境界点に挿入されます。新しいノードをテキスト&lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;追加する場合、その &lt;code&gt;Node&lt;/code&gt; は挿入ポイントで分割され、2つのテキストノード間に挿入が行われます。</target>
        </trans-unit>
        <trans-unit id="8c4792cabb7d7bb5cc3ba4eacdfc1fd7b82098c3" translate="yes" xml:space="preserve">
          <source>The new node that will be a clone of &lt;code&gt;node&lt;/code&gt;</source>
          <target state="translated">ノードのクローンとなる新しい &lt;code&gt;node&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5da44118b2d5be093cd46d507491f81e619d14f2" translate="yes" xml:space="preserve">
          <source>The new speed to set. This may be a positive number (to speed up or slow down the animation), a negative number (to make it play backwards), or zero (to effectively pause the animation).</source>
          <target state="translated">設定する新しい速度。これは正の数値(アニメーションをスピードアップまたはスローにする)、負の数値(逆再生にする)、またはゼロ(アニメーションを効果的に一時停止にする)のいずれかです。</target>
        </trans-unit>
        <trans-unit id="2a326d6af17214e34ec51a6b3ac122e82f39e2e9" translate="yes" xml:space="preserve">
          <source>The new track has a resolution which is outside the bounds of the bounds of the current track; that is, the new track is either wider or taller than the current one.</source>
          <target state="translated">新しいトラックは、現在のトラックの境界の外にある解像度を持っています;つまり、新しいトラックは、現在のトラックよりも広いか高いかのどちらかです。</target>
        </trans-unit>
        <trans-unit id="a35c10acc77306cf39dd1c5b921c77b1c1aeabc8" translate="yes" xml:space="preserve">
          <source>The new track is a video track and its raw or pre-encoded state differs from that of the original track.</source>
          <target state="translated">新しいトラックはビデオトラックであり、その生または事前にエンコードされた状態は元のトラックのそれとは異なります。</target>
        </trans-unit>
        <trans-unit id="45750fc8b4357bdc38ec2a975a019006f4b134ac" translate="yes" xml:space="preserve">
          <source>The new track is an audio track with a different number of channels fom the original.</source>
          <target state="translated">新しいトラックは、オリジナルとは異なるチャンネル数のオーディオトラックです。</target>
        </trans-unit>
        <trans-unit id="efef25e593b0da5f3dfec542d81bff21e6a41e0f" translate="yes" xml:space="preserve">
          <source>The new track's &lt;code&gt;kind&lt;/code&gt; doesn't match the original track.</source>
          <target state="translated">新しいトラックの &lt;code&gt;kind&lt;/code&gt; が元のトラックと一致しません。</target>
        </trans-unit>
        <trans-unit id="d806897953eb68508b516ed3cc220f49d7b92d8b" translate="yes" xml:space="preserve">
          <source>The new track's frame rate is high enough to cause the codec's block rate to be exceeded.</source>
          <target state="translated">新曲のフレームレートが高いので、コーデックのブロックレートを超えてしまいます。</target>
        </trans-unit>
        <trans-unit id="402ee2ab24381413721c14320afac76912f1ba90" translate="yes" xml:space="preserve">
          <source>The new transceiver is added to the &lt;code&gt;RTCPeerConnection&lt;/code&gt;'s set of transceivers.</source>
          <target state="translated">新しいトランシーバーが &lt;code&gt;RTCPeerConnection&lt;/code&gt; のトランシーバーセットに追加されます。</target>
        </trans-unit>
        <trans-unit id="92065811249e2bd91bad760c6f4803d4bddd912d" translate="yes" xml:space="preserve">
          <source>The new transceiver's &lt;a href=&quot;../rtcrtptransceiver/direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt;.</source>
          <target state="translated">新しいトランシーバーの&lt;a href=&quot;../rtcrtptransceiver/direction&quot;&gt; &lt;code&gt;direction&lt;/code&gt; &lt;/a&gt;は &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="6c93f3e0fb7d3c2702127b650c054a029d209739" translate="yes" xml:space="preserve">
          <source>The new transceiver's preferred directionality. This value is used to initialize the new &lt;a href=&quot;../rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../rtcrtptransceiver/direction&quot;&gt;&lt;code&gt;RTCRtpTransceiver.direction&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">新しいトランシーバーの優先方向性。この値は、新しい&lt;a href=&quot;../rtcrtptransceiver&quot;&gt; &lt;code&gt;RTCRtpTransceiver&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../rtcrtptransceiver/direction&quot;&gt; &lt;code&gt;RTCRtpTransceiver.direction&lt;/code&gt; &lt;/a&gt;プロパティを初期化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="11187903d26379d5762e7b1dbd6a1c0ebad50a9f" translate="yes" xml:space="preserve">
          <source>The new transceiver's preferred directionality. This value is used to initialize the new &lt;a href=&quot;rtcrtptransceiver&quot;&gt;&lt;code&gt;RTCRtpTransceiver&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;rtcrtptransceiver/direction&quot;&gt;&lt;code&gt;RTCRtpTransceiver.direction&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">新しいトランシーバーの優先方向性。この値は、新しい&lt;a href=&quot;rtcrtptransceiver&quot;&gt; &lt;code&gt;RTCRtpTransceiver&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;rtcrtptransceiver/direction&quot;&gt; &lt;code&gt;RTCRtpTransceiver.direction&lt;/code&gt; &lt;/a&gt;プロパティを初期化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="8eec9458ef2a4b65f1084d0345f2ac175cd33808" translate="yes" xml:space="preserve">
          <source>The new value of the &lt;code&gt;key&lt;/code&gt;. The &lt;code&gt;newValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; when the change has been invoked by storage &lt;code&gt;clear()&lt;/code&gt; method or the &lt;code&gt;key&lt;/code&gt; has been removed from the storage. &lt;strong&gt;Read only.&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;key&lt;/code&gt; の新しい値。 &lt;code&gt;newValue&lt;/code&gt; にはある &lt;code&gt;null&lt;/code&gt; 変化がストレージによって呼び出されたときに &lt;code&gt;clear()&lt;/code&gt; メソッドまたは &lt;code&gt;key&lt;/code&gt; ストレージから除去されています。&lt;strong&gt;読み取り専用。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="217049ea4a1b5442891d8daf7f5c98748ed66721" translate="yes" xml:space="preserve">
          <source>The new value to be stored at the current position.</source>
          <target state="translated">現在の位置に格納される新しい値。</target>
        </trans-unit>
        <trans-unit id="e29f5e5ce5fec3f6e04a00b7b0a94444747aad58" translate="yes" xml:space="preserve">
          <source>The new value you want to set.</source>
          <target state="translated">設定したい新しい値。</target>
        </trans-unit>
        <trans-unit id="633f8b0dc446df9331047c4bf78086249f7e7be5" translate="yes" xml:space="preserve">
          <source>The new version of the database in a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/versionchange&quot;&gt;versionchange&lt;/a&gt;&lt;/code&gt; transaction.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/versionchange&quot;&gt;versionchange&lt;/a&gt;&lt;/code&gt; トランザクションでのデータベースの新しいバージョン。</target>
        </trans-unit>
        <trans-unit id="1426dba996e4f807d689717ce43dd5d434e4c567" translate="yes" xml:space="preserve">
          <source>The new way to do it is to use the &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBOpenDBRequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; interface which has now the &lt;code&gt;onblocked&lt;/code&gt; handler and the newly needed &lt;code&gt;onupgradeneeded&lt;/code&gt; one.</source>
          <target state="translated">これを行う新しい方法は、 &lt;code&gt;onblocked&lt;/code&gt; ハンドラーと新しく必要な &lt;code&gt;onupgradeneeded&lt;/code&gt; ハンドラーを持つ&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/IDBOpenDBRequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; &lt;/a&gt;インターフェイスを使用することです。</target>
        </trans-unit>
        <trans-unit id="72bf85d4a2f1c9f59cef6f38d94fc4035595a399" translate="yes" xml:space="preserve">
          <source>The newly constructed &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">新しく構築された&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;インスタンス。</target>
        </trans-unit>
        <trans-unit id="ce4dc16a693828f887903f8961519c639e9c32eb" translate="yes" xml:space="preserve">
          <source>The newly created object store.</source>
          <target state="translated">新しく作成されたオブジェクトストア。</target>
        </trans-unit>
        <trans-unit id="ac5941a057f01f0f816ad5e4bcdf4ed275f60244" translate="yes" xml:space="preserve">
          <source>The newly inserted rule's index within the stylesheet's rule-list.</source>
          <target state="translated">スタイルシートのルールリスト内に新しく挿入されたルールのインデックス。</target>
        </trans-unit>
        <trans-unit id="2d3d5f7a61cc2524505406b7aad16bd3403c449a" translate="yes" xml:space="preserve">
          <source>The next bit of the code has nothing to do with WebVR &amp;mdash; it just updates the rotation of the cube on each frame:</source>
          <target state="translated">コードの次のビットは、WebVRとは何の関係もありません。各フレームのキューブの回転を更新するだけです。</target>
        </trans-unit>
        <trans-unit id="65519c09e710e352187cdb3c00a68d28a0aacfdd" translate="yes" xml:space="preserve">
          <source>The next change is to &lt;code&gt;initTexture()&lt;/code&gt;, which becomes much simpler, since it no longer needs to load an image file. Instead, all it does is create an empty texture object, put a single pixel in it, and set its filtering for later use:</source>
          <target state="translated">次の変更は &lt;code&gt;initTexture()&lt;/code&gt; です。これは、イメージファイルをロードする必要がなくなるため、はるかに簡単になります。代わりに、空のテクスチャオブジェクトを作成し、その中に1つのピクセルを配置し、後で使用するためにそのフィルタリングを設定します。</target>
        </trans-unit>
        <trans-unit id="f0202001eca2bf3e9f1851e14c0c4b4c27773429" translate="yes" xml:space="preserve">
          <source>The next example creates a new &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; which will use a single &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt; server which has multiple URLs. This is useful if the server is, for example, available both on &quot;turn&quot; and &quot;turns&quot; schemes, or if there's a fallback address available for the server.</source>
          <target state="translated">次の例では、複数のURLを持つ単一の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/TURN&quot;&gt;TURN&lt;/a&gt;サーバーを使用する新しい&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;を作成します。これは、たとえば、サーバーが「ターン」スキームと「ターン」スキームの両方で使用できる場合、またはサーバーで使用できるフォールバックアドレスがある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="fd45cc34cd12b844846552fec5fe3a73f8d5375e" translate="yes" xml:space="preserve">
          <source>The next example logs an object to the console, with the object's fields expandable using disclosure widgets:</source>
          <target state="translated">次の例では、開示ウィジェットを使用してオブジェクトのフィールドを拡張可能な状態でコンソールにログを記録します。</target>
        </trans-unit>
        <trans-unit id="13ad29effe67c8f33ffe9812a49f0487f9aee43f" translate="yes" xml:space="preserve">
          <source>The next example removes the first child node inside the element with the id &lt;code&gt;&quot;foo&quot;&lt;/code&gt; if foo has child nodes.</source>
          <target state="translated">次の例では、fooに子ノードがある場合、IDが &lt;code&gt;&quot;foo&quot;&lt;/code&gt; 要素内の最初の子ノードを削除します。</target>
        </trans-unit>
        <trans-unit id="0d19656e75ba5dc7e1cec8a6982e6c2e37696889" translate="yes" xml:space="preserve">
          <source>The next example scans through all of the media's audio tracks, enabling any that are in the user's preferred language (taken from a variable &lt;code&gt;userLanguage&lt;/code&gt;) and disabling any others.</source>
          <target state="translated">次の例では、メディアのすべてのオーディオトラックをスキャンして、ユーザーの優先言語の変数を &lt;code&gt;userLanguage&lt;/code&gt; （変数userLanguageから取得）、その他のオーディオトラックを無効にします。</target>
        </trans-unit>
        <trans-unit id="0c47f03e1d3ef3a2b8b77834e6b8dad39f04dd7c" translate="yes" xml:space="preserve">
          <source>The next example scans through all of the media's video tracks, activating the first video track that is in the user's preferred language (taken from a variable &lt;code&gt;userLanguage&lt;/code&gt;).</source>
          <target state="translated">次の例では、メディアのすべてのビデオトラックをスキャンして、ユーザーの優先言語（変数 &lt;code&gt;userLanguage&lt;/code&gt; から取得）の最初のビデオトラックをアクティブ化します。</target>
        </trans-unit>
        <trans-unit id="21047ccf34653b836795eafe4c0713c7c696d1f4" translate="yes" xml:space="preserve">
          <source>The next parameter is &lt;a href=&quot;../pannernode/distancemodel&quot;&gt;&lt;code&gt;distanceModel&lt;/code&gt;&lt;/a&gt; &amp;mdash; this can only be set to &lt;code&gt;linear&lt;/code&gt;, &lt;code&gt;inverse&lt;/code&gt;, or &lt;code&gt;exponential&lt;/code&gt;. These are different algorithms, which are used to reduce the volume of the audio source as it moves away from the listener. We'll use &lt;code&gt;linear&lt;/code&gt;, as it is simple:</source>
          <target state="translated">次のパラメーターは&lt;a href=&quot;../pannernode/distancemodel&quot;&gt; &lt;code&gt;distanceModel&lt;/code&gt; です。&lt;/a&gt;これは、 &lt;code&gt;linear&lt;/code&gt; 、 &lt;code&gt;inverse&lt;/code&gt; 、または &lt;code&gt;exponential&lt;/code&gt; にのみ設定できます。これらはさまざまなアルゴリズムであり、リスナーから離れるにつれてオーディオソースの音量を下げるために使用されます。シンプルなので、 &lt;code&gt;linear&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="15ed184ff5047c101069cceae6da1ae03fc4378a" translate="yes" xml:space="preserve">
          <source>The next part of our code defines the grammar we want our app to recognise. The following variable is defined to hold our grammar:</source>
          <target state="translated">コードの次の部分では、アプリが認識する文法を定義します。次の変数は文法を保持するために定義されています。</target>
        </trans-unit>
        <trans-unit id="20c5bd50accbaf6aace02193948327b480652af3" translate="yes" xml:space="preserve">
          <source>The next rendering step involves:</source>
          <target state="translated">次のレンダリングステップでは、次のようになります。</target>
        </trans-unit>
        <trans-unit id="9a7cc7c90fa1054937c90cd941077ed878ccf86a" translate="yes" xml:space="preserve">
          <source>The next step is to connect the local peer to the remote by telling the remote peer about it. This is done by calling &lt;code&gt;remoteConnection.&lt;/code&gt;&lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt;&lt;/a&gt;. Now the &lt;code&gt;remoteConnection&lt;/code&gt; knows about the connection that's being built.</source>
          <target state="translated">次のステップは、ローカルピアをリモートピアに接続することです。これは、 &lt;code&gt;remoteConnection.&lt;/code&gt; を呼び出すことによって行われます。&lt;a href=&quot;../rtcpeerconnection/setremotedescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setRemoteDescription()&lt;/code&gt; &lt;/a&gt;。これで、 &lt;code&gt;remoteConnection&lt;/code&gt; は構築中の接続を認識します。</target>
        </trans-unit>
        <trans-unit id="11b84909e4a19511978db4e47091968fb73d78e5" translate="yes" xml:space="preserve">
          <source>The next step is to set up each connection with ICE candidate listeners; these will be called when there's a new ICE candidate to tell the other side about.</source>
          <target state="translated">次のステップでは、ICE候補のリスナーとの接続を設定します。</target>
        </trans-unit>
        <trans-unit id="6e4d5d6650cca3e73d30618fd74a55a7f0d066ac" translate="yes" xml:space="preserve">
          <source>The next task is to get the media stream:</source>
          <target state="translated">次の作業は、メディアストリームを取得することです。</target>
        </trans-unit>
        <trans-unit id="0f43be3acc5d2494e1fc3ee3625b416ac549dff7" translate="yes" xml:space="preserve">
          <source>The next thing to do is define a speech recogntion instance to control the recognition for our application. This is done using the &lt;a href=&quot;../speechrecognition/speechrecognition&quot;&gt;&lt;code&gt;SpeechRecognition()&lt;/code&gt;&lt;/a&gt; constructor. We also create a new speech grammar list to contain our grammar, using the &lt;a href=&quot;../speechgrammarlist/speechgrammarlist&quot;&gt;&lt;code&gt;SpeechGrammarList()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">次に、アプリケーションの認識を制御する音声認識インスタンスを定義します。これは、&lt;a href=&quot;../speechrecognition/speechrecognition&quot;&gt; &lt;code&gt;SpeechRecognition()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して行われます。また、&lt;a href=&quot;../speechgrammarlist/speechgrammarlist&quot;&gt; &lt;code&gt;SpeechGrammarList()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して、文法を含む新しい音声文法リストを作成します。</target>
        </trans-unit>
        <trans-unit id="c3824c4838eae2055b86dee46d4ca585aeb2cb2d" translate="yes" xml:space="preserve">
          <source>The next thing we do is to get the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose&quot;&gt;&lt;code&gt;GamepadPose&lt;/code&gt;&lt;/a&gt; object for the controller stored in gpPose (by querying &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/pose&quot;&gt;&lt;code&gt;Gamepad.pose&lt;/code&gt;&lt;/a&gt;), and also store the current gamepad position and orientation for this frame in variables so they are easuy to access later. We also display the post stats for this frame in the DOM using the &lt;code&gt;displayPoseStats()&lt;/code&gt; function. All of this is only done if &lt;code&gt;gp&lt;/code&gt; actually has a value (if a gamepad is connected), which stops the demo erroring if we don't have our gamepad connected.</source>
          <target state="translated">次に、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GamepadPose&quot;&gt; &lt;code&gt;GamepadPose&lt;/code&gt; &lt;/a&gt;格納されたコントローラーのGamepadPoseオブジェクトを取得し（Gamepad.poseを照会&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/pose&quot;&gt; &lt;code&gt;Gamepad.pose&lt;/code&gt; &lt;/a&gt;）、このフレームの現在のゲームパッドの位置と向きを変数に格納して、後で簡単にアクセスできるようにします。また、 &lt;code&gt;displayPoseStats()&lt;/code&gt; 関数を使用して、このフレームの投稿統計をDOMに表示します。これはすべて、 &lt;code&gt;gp&lt;/code&gt; が実際に値を持っている場合にのみ行われ（ゲームパッドが接続されている場合）、ゲームパッドが接続されていない場合、デモのエラーを停止します。</target>
        </trans-unit>
        <trans-unit id="663e3eed70f1f941e5633d693cfe0793f1eeaf27" translate="yes" xml:space="preserve">
          <source>The next transformation method is scaling. We use it to increase or decrease the units in our canvas grid. This can be used to draw scaled down or enlarged shapes and bitmaps.</source>
          <target state="translated">次の変換方法はスケーリングです。キャンバスグリッドの単位を増減させるために使用します。これを使って、縮小または拡大した図形やビットマップを描くことができます。</target>
        </trans-unit>
        <trans-unit id="012703a15a96c6194e0dbc04cc3672e74e8792ec" translate="yes" xml:space="preserve">
          <source>The next type of paths available are &lt;a href=&quot;http://en.wikipedia.org/wiki/B%C3%A9zier_curve&quot;&gt;B&amp;eacute;zier curves&lt;/a&gt;, available in both cubic and quadratic varieties. These are generally used to draw complex organic shapes.</source>
          <target state="translated">利用可能なパスの次のタイプは、3次と2次の両方の種類で利用可能な&lt;a href=&quot;http://en.wikipedia.org/wiki/B%C3%A9zier_curve&quot;&gt;ベジェ曲線&lt;/a&gt;です。これらは通常、複雑な有機的な形状を描くために使用されます。</target>
        </trans-unit>
        <trans-unit id="3fa592d27c05f5411a28ad4e0ac50fcbfb25d43a" translate="yes" xml:space="preserve">
          <source>The nice people here have manually copied my files up so you can take a &lt;a href=&quot;http://mdn.github.io/canvas-raycaster/&quot;&gt;look&lt;/a&gt;, and for your hacking enjoyment I've posted the individual file contents as code listings (see below).</source>
          <target state="translated">ここの素敵な人々が私のファイルを手動でコピーして、&lt;a href=&quot;http://mdn.github.io/canvas-raycaster/&quot;&gt;見てみる&lt;/a&gt;ことができるようにしました。ハッキングを楽しむために、個々のファイルの内容をコードリストとして投稿しました（以下を参照）。</target>
        </trans-unit>
        <trans-unit id="0b40fcb029eb6031f4d4868c8631a407b81900a5" translate="yes" xml:space="preserve">
          <source>The node at the end of the selection.</source>
          <target state="translated">選択範囲の最後にあるノード。</target>
        </trans-unit>
        <trans-unit id="c1cdcdf50a0da67ee27c86ece93e4489e849eae9" translate="yes" xml:space="preserve">
          <source>The node at the start of the selection.</source>
          <target state="translated">選択範囲の先頭にあるノード。</target>
        </trans-unit>
        <trans-unit id="94ff982dcdbbe3ee2be9fad06dabc0e6dc11f360" translate="yes" xml:space="preserve">
          <source>The node from another document to be adopted.</source>
          <target state="translated">採用される別のドキュメントからのノード。</target>
        </trans-unit>
        <trans-unit id="809eb12f5474532f889f8314a845fe38f3cbfad8" translate="yes" xml:space="preserve">
          <source>The node has already been started. This error occurs even if the node is no longer running because of a prior call to &lt;a href=&quot;stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ノードはすでに開始されています。このエラーは、以前に&lt;a href=&quot;stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; を&lt;/a&gt;呼び出したためにノードが実行されなくなった場合でも発生します。</target>
        </trans-unit>
        <trans-unit id="968c415bc9c75715f17f21b9990e84eba89bd96f" translate="yes" xml:space="preserve">
          <source>The node has not been started by calling &lt;a href=&quot;start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ノードは&lt;a href=&quot;start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; を&lt;/a&gt;呼び出して開始されていません。</target>
        </trans-unit>
        <trans-unit id="dc72a0a777cf8ffb325722d8957a047fcbdac979" translate="yes" xml:space="preserve">
          <source>The node is incorrect or has an incorrect ancestor for this operation. (Legacy code value: &lt;code&gt;24&lt;/code&gt; and legacy constant name: &lt;code&gt;INVALID_NODE_TYPE_ERR&lt;/code&gt;)</source>
          <target state="translated">ノードが正しくないか、この操作の祖先が正しくありません。（レガシーコード値： &lt;code&gt;24&lt;/code&gt; およびレガシー定数名： &lt;code&gt;INVALID_NODE_TYPE_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="c6883deacf638ae90698998c5be88561cdf8e852" translate="yes" xml:space="preserve">
          <source>The node on which &lt;code&gt;disconnect()&lt;/code&gt; was called isn't connected to the specified &lt;code&gt;destination&lt;/code&gt; node.</source>
          <target state="translated">その上にノード &lt;code&gt;disconnect()&lt;/code&gt; と呼ばれていたが、指定に接続されていない &lt;code&gt;destination&lt;/code&gt; ノード。</target>
        </trans-unit>
        <trans-unit id="dc4383580a21a9ef270eb317400cbc0620df78be" translate="yes" xml:space="preserve">
          <source>The node that is being looked for in the selection.</source>
          <target state="translated">選択範囲内で探しているノード。</target>
        </trans-unit>
        <trans-unit id="a2edcd220b6cb4996b2a95ad076949481309186c" translate="yes" xml:space="preserve">
          <source>The node to append to the given parent node (commonly an element).</source>
          <target state="translated">与えられた親ノード(通常は要素)に追加するノード。</target>
        </trans-unit>
        <trans-unit id="e9dc71ddb7062d632c41576ac73ba173546fc776" translate="yes" xml:space="preserve">
          <source>The node to be cloned.</source>
          <target state="translated">クローン化されるノード。</target>
        </trans-unit>
        <trans-unit id="90bd1a54c9951a6d42790e923276fbc879c682b9" translate="yes" xml:space="preserve">
          <source>The node tree hierarchy is not correct. (Legacy code value: &lt;code&gt;3&lt;/code&gt; and legacy constant name: &lt;code&gt;HIERARCHY_REQUEST_ERR&lt;/code&gt;)</source>
          <target state="translated">ノードツリーの階層が正しくありません。（レガシーコード値： &lt;code&gt;3&lt;/code&gt; およびレガシー定数名： &lt;code&gt;HIERARCHY_REQUEST_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="f15ae65dda0578f798d658904d73c7b6186a648f" translate="yes" xml:space="preserve">
          <source>The node within which the focus will be moved.</source>
          <target state="translated">フォーカスを移動させるノード。</target>
        </trans-unit>
        <trans-unit id="26b005b3bbe7fb4c66ce067c48a62f263bd56461" translate="yes" xml:space="preserve">
          <source>The non-standard, read-only &lt;a href=&quot;../uievent&quot;&gt;&lt;code&gt;UIEvent&lt;/code&gt;&lt;/a&gt; property &lt;code&gt;&lt;strong&gt;pageX&lt;/strong&gt;&lt;/code&gt; returns the horizontal coordinate of the event relative to the whole document.</source>
          <target state="translated">非標準の読み取り専用&lt;a href=&quot;../uievent&quot;&gt; &lt;code&gt;UIEvent&lt;/code&gt; &lt;/a&gt;プロパティ &lt;code&gt;&lt;strong&gt;pageX&lt;/strong&gt;&lt;/code&gt; は、ドキュメント全体に対するイベントの水平座標を返します。</target>
        </trans-unit>
        <trans-unit id="02939acfae0d8f4e472aa7548d6dabcdf81fff36" translate="yes" xml:space="preserve">
          <source>The normalized pressure of the pointer input in the range 0 to 1, where 0 and 1 represent the minimum and maximum pressure the hardware is capable of detecting, respectively.</source>
          <target state="translated">0から1の範囲のポインタ入力の正規化された圧力であり、ここで0と1はそれぞれハードウェアが検出可能な最小圧力と最大圧力を表す。</target>
        </trans-unit>
        <trans-unit id="cedfb91c735d5f0fc82f351c59d515e3521dbb9b" translate="yes" xml:space="preserve">
          <source>The normalized pressure of the pointer input in the range of 0 to 1, where 0 and 1 represent the minimum and maximum pressure the hardware is capable of detecting, respectively. For hardware that does not support pressure, including but not limited to mouse, the value MUST be 0.5 when the pointer is active and 0 otherwise.</source>
          <target state="translated">0 から 1 の範囲のポインタ入力の正規化された圧力で、0 と 1 はそれぞれハードウェアが検出可能な最小圧力と最大圧力を表す。マウスを含むがこれに限定されない、圧力をサポートしないハードウェアの場合、ポインタがアクティブなときは 0.5、そうでないときは 0 でなければならない(MUST)。</target>
        </trans-unit>
        <trans-unit id="c0402e0afc8d72e4c4288b51d7bc18e4d986bc21" translate="yes" xml:space="preserve">
          <source>The normalized tangential pressure of the pointer input (also known as barrel pressure or &lt;a href=&quot;https://en.wikipedia.org/wiki/Cylinder_stress&quot;&gt;cylinder stress&lt;/a&gt;) in the range -1 to 1, where 0 is the neutral position of the control.</source>
          <target state="translated">ポインター入力の正規化された接線圧力（バレル圧力または&lt;a href=&quot;https://en.wikipedia.org/wiki/Cylinder_stress&quot;&gt;シリンダーストレスと&lt;/a&gt;も呼ばれます）の範囲は-1〜1で、0はコントロールの中立位置です。</target>
        </trans-unit>
        <trans-unit id="47c50361f3d8ceec1a7eef1c2413f29988de3097" translate="yes" xml:space="preserve">
          <source>The notation name</source>
          <target state="translated">表記名</target>
        </trans-unit>
        <trans-unit id="799789fa4113cd5d8f51e40e3f0dfd6ad373d33a" translate="yes" xml:space="preserve">
          <source>The notification's data can be any arbitrary data that you want associated with the notification.</source>
          <target state="translated">通知のデータは、通知に関連付けたい任意のデータにすることができます。</target>
        </trans-unit>
        <trans-unit id="b3cb8e920e8e785aa3dbf9236c0c65418d32abd6" translate="yes" xml:space="preserve">
          <source>The notification's timestamp can represent the time, in milliseconds since 00:00:00 UTC on 1 January 1970, of the event for which the notification was created, or it can be an arbitrary timestamp that you want associated with the notification. For example, a timestamp for an upcoming meeting could be set in the future, whereas a timestamp for a missed message could be set in the past.</source>
          <target state="translated">通知のタイムスタンプは、通知が作成されたイベントの1970年1月1日00:00:00:00 UTCからの時間をミリ秒単位で表すことができます。例えば、予定されている会議のタイムスタンプは未来に設定することができ、一方、見逃したメッセージのタイムスタンプは過去に設定することができます。</target>
        </trans-unit>
        <trans-unit id="9997e9506c6c92a6d9395c300e0f75b460dc5d9b" translate="yes" xml:space="preserve">
          <source>The notifications API spec lists four events that are triggered on the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt; instance:</source>
          <target state="translated">通知API仕様には、&lt;a href=&quot;../notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt;インスタンスでトリガーされる4つのイベントがリストされています。</target>
        </trans-unit>
        <trans-unit id="96861bce60a01b6634a460d7f9744dbcce397d6a" translate="yes" xml:space="preserve">
          <source>The number of &lt;a href=&quot;touch&quot;&gt;&lt;code&gt;Touch&lt;/code&gt;&lt;/a&gt; objects in the &lt;code&gt;TouchList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TouchList&lt;/code&gt; 内の&lt;a href=&quot;touch&quot;&gt; &lt;code&gt;Touch&lt;/code&gt; &lt;/a&gt;オブジェクトの数。</target>
        </trans-unit>
        <trans-unit id="efbe8d22cec5001fbddeffd29213ce19d70f32d2" translate="yes" xml:space="preserve">
          <source>The number of &lt;strong&gt;logical processor cores&lt;/strong&gt; is a way to measure the number of threads which can effectively be run at once without them having to share CPUs. Modern computers have multiple physical cores in their CPU (two or four cores is typical), but each physical core is also usually able to run more than one thread at a time using advanced scheduling techniques. So a four-core CPU may return 8. The browser may, however, choose to reduce the number in order to represent more accurately the number of &lt;a href=&quot;worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;s that can run at once</source>
          <target state="translated">&lt;strong&gt;論理プロセッサコア&lt;/strong&gt;の数は、CPUを共有しなくても効果的に一度に実行できるスレッドの数を測定する方法です。最近のコンピューターは、CPUに複数の物理コアを備えています（2つまたは4つのコアが一般的です）が、通常、各物理コアは、高度なスケジューリング技術を使用して一度に複数のスレッドを実行することもできます。したがって、4コアCPUは8を返すことがあります。ただし、ブラウザは、一度に実行できる&lt;a href=&quot;worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; &lt;/a&gt;の数をより正確に表すために、数を減らすことを選択する場合があります。</target>
        </trans-unit>
        <trans-unit id="cde37db42c5afb4694a3dd03d1036c28df2c9dcf" translate="yes" xml:space="preserve">
          <source>The number of a device-specific configuration.</source>
          <target state="translated">デバイス固有の設定の番号。</target>
        </trans-unit>
        <trans-unit id="c3743f459177be40ccaf2ee7d8738e95bf91a284" translate="yes" xml:space="preserve">
          <source>The number of a device-specific endpoint (buffer).</source>
          <target state="translated">デバイス固有のエンドポイント(バッファ)の番号。</target>
        </trans-unit>
        <trans-unit id="1d002abf050fca12fc7759562d22c94648bba9ac" translate="yes" xml:space="preserve">
          <source>The number of alternatives contained in the result depends on what the &lt;a href=&quot;../speechrecognition/maxalternatives&quot;&gt;&lt;code&gt;SpeechRecognition.maxAlternatives&lt;/code&gt;&lt;/a&gt; property was set to when the speech recognition was first initiated.</source>
          <target state="translated">結果に含まれる選択肢の数は、音声認識が最初に開始されたときに&lt;a href=&quot;../speechrecognition/maxalternatives&quot;&gt; &lt;code&gt;SpeechRecognition.maxAlternatives&lt;/code&gt; &lt;/a&gt;プロパティが何に設定されたかによって異なります。</target>
        </trans-unit>
        <trans-unit id="5d9fd7e7639d716312f6bec4cf90bd88bd5bb17a" translate="yes" xml:space="preserve">
          <source>The number of audio channels available on a signal is frequently presented in a numeric format, such as 2.0 or 5.1. This is called &lt;a href=&quot;https://en.wikipedia.org/wiki/Surround_sound#Channel_notation&quot;&gt;channel notation&lt;/a&gt;. The first number is the total number of audio channels that the signal includes. The number after the period indicates the number of those channels which are reserved for low-frequency effect (LFE) outputs; these are often referred to as &lt;strong&gt;subwoofers&lt;/strong&gt;.</source>
          <target state="translated">信号で使用可能なオーディオチャネルの数は、2.0や5.1などの数値形式で示されることがよくあります。これは&lt;a href=&quot;https://en.wikipedia.org/wiki/Surround_sound#Channel_notation&quot;&gt;チャネル表記&lt;/a&gt;と呼ばれます。最初の数値は、信号に含まれるオーディオチャネルの総数です。ピリオドの後の数字は、低周波効果（LFE）出力用に予約されているチャネルの数を示しています。これらはしばしば&lt;strong&gt;サブウーファー&lt;/strong&gt;と呼ばれます。</target>
        </trans-unit>
        <trans-unit id="7fe85c7a0d030fcceac26b8abe5be1fcb346257f" translate="yes" xml:space="preserve">
          <source>The number of bits of precision that can be represented. For integer formats this value is always 0.</source>
          <target state="translated">表現できる精度のビット数。整数形式の場合、この値は常に0です。</target>
        </trans-unit>
        <trans-unit id="a2f70db77214b8e14904d7fde6bafc3f7d6ff7ca" translate="yes" xml:space="preserve">
          <source>The number of bits used to hold the query result for the given target.</source>
          <target state="translated">指定されたターゲットに対するクエリ結果を保持するために使用されるビット数。</target>
        </trans-unit>
        <trans-unit id="e2372431c7c6369969d5fcd302aac0df1bb1bf52" translate="yes" xml:space="preserve">
          <source>The number of bytes of data currently queued to be sent over the data channel but have not yet been sent.</source>
          <target state="translated">現在、データチャネルを介して送信するためにキューに入れられているが、まだ送信されていないデータのバイト数。</target>
        </trans-unit>
        <trans-unit id="e722b81dc5743a37af0f80cb552971786f1eba8c" translate="yes" xml:space="preserve">
          <source>The number of bytes of queued data.</source>
          <target state="translated">キューに入っているデータのバイト数。</target>
        </trans-unit>
        <trans-unit id="db37c948e1aed3d7c8be314c3f63262188772145" translate="yes" xml:space="preserve">
          <source>The number of channels in the input audio stream that you want to output separately; the default is 6 if this parameter is not specified.</source>
          <target state="translated">このパラメータが指定されていない場合、デフォルトは 6 です。</target>
        </trans-unit>
        <trans-unit id="ce3851a5e81392c527f3e4cfe6b84a169c922f97" translate="yes" xml:space="preserve">
          <source>The number of channels in the input audio streams, which the output stream will contain; the default is 6 if this parameter is not specified.</source>
          <target state="translated">このパラメータが指定されていない場合、デフォルトは 6 です。</target>
        </trans-unit>
        <trans-unit id="8727f7a0aa727a53b1337a81d3b5169512171492" translate="yes" xml:space="preserve">
          <source>The number of channels is defined by the value of &lt;code&gt;channelCount&lt;/code&gt;.</source>
          <target state="translated">チャネルの数は、 &lt;code&gt;channelCount&lt;/code&gt; の値によって定義されます。</target>
        </trans-unit>
        <trans-unit id="53b2b59a5a427b0fd8bc91ed6151b86e8406fbd2" translate="yes" xml:space="preserve">
          <source>The number of channels is equal to the maximum number of channels of all connections, &lt;em&gt;clamped&lt;/em&gt; to the value of &lt;code&gt;channelCount&lt;/code&gt;.</source>
          <target state="translated">チャネル数は、すべての接続の最大チャネル数と等しく、 &lt;code&gt;channelCount&lt;/code&gt; の値に&lt;em&gt;固定さ&lt;/em&gt;れます。</target>
        </trans-unit>
        <trans-unit id="87d7f172a1bfb2bb4c825471186eeca818175e51" translate="yes" xml:space="preserve">
          <source>The number of channels is equal to the maximum number of channels of all connections. In this case, &lt;code&gt;channelCount&lt;/code&gt; is ignored and only up-mixing happens.</source>
          <target state="translated">チャネル数は、すべての接続の最大チャネル数と同じです。この場合、 &lt;code&gt;channelCount&lt;/code&gt; は無視され、アップミックスのみが発生します。</target>
        </trans-unit>
        <trans-unit id="316b488011d1c33c2acbd70862fce7d5e5c93ad0" translate="yes" xml:space="preserve">
          <source>The number of child nodes from the start of the anchor node that should be excluded from the selection. So for example, if the value is 0 the whole node is included. If the value is 1, the whole node minus the first child node is included. And so on.</source>
          <target state="translated">アンカーノードの先頭から選択対象から除外すべき子ノードの数を指定します。例えば、値が0の場合はノード全体が含まれます。値が1の場合は、ノード全体から最初の子ノードを引いたものが含まれます。といった具合です。</target>
        </trans-unit>
        <trans-unit id="4f29def6d08d013ccd4b1fa29404e2946a5ef95f" translate="yes" xml:space="preserve">
          <source>The number of child nodes from the start of the focus node that should be included in the selection. So for example, if the value is 0 the whole node is excluded. If the value is 1, the first child node is included. And so on.</source>
          <target state="translated">フォーカスノードの先頭から選択範囲に含めるべき子ノードの数を指定します。例えば、値が0の場合はノード全体が除外されます。値が1の場合は、最初の子ノードが含まれます。といった具合です。</target>
        </trans-unit>
        <trans-unit id="7501fca47effe759dca92624c170b5ae3c0f3032" translate="yes" xml:space="preserve">
          <source>The number of degrees downwards that the field of view extends in.</source>
          <target state="translated">視野が広がる下方向への度数。</target>
        </trans-unit>
        <trans-unit id="46910ba7e3a0368f44f1280afb3db3400f84e007" translate="yes" xml:space="preserve">
          <source>The number of degrees downwards that the field of view will extend in.</source>
          <target state="translated">視野が何度下に伸びるかを表します。</target>
        </trans-unit>
        <trans-unit id="d0074a9613f198f2ef03c10663dcfd55bdcf88b3" translate="yes" xml:space="preserve">
          <source>The number of degrees of rotation to apply to the described ellipse to align with the contact area between the user and the touch surface.</source>
          <target state="translated">前記ユーザと前記タッチ面との接触領域に整列するように前記楕円体に適用する回転の度数。</target>
        </trans-unit>
        <trans-unit id="0ab6cea78975eba961bf1ca0548dbff9f4ec6ffa" translate="yes" xml:space="preserve">
          <source>The number of degrees to the left that the field of view extends in.</source>
          <target state="translated">視野が広がる左への度数。</target>
        </trans-unit>
        <trans-unit id="cb2aa593abed15545234b7422320dbb8a4e13834" translate="yes" xml:space="preserve">
          <source>The number of degrees to the left that the field of view will extend in.</source>
          <target state="translated">視野が伸びる左への度数。</target>
        </trans-unit>
        <trans-unit id="7b7e2849aad1e4f1ce0c53430509b4b794b109cc" translate="yes" xml:space="preserve">
          <source>The number of degrees to the right that the field of view extends in.</source>
          <target state="translated">視野が広がる右への度数。</target>
        </trans-unit>
        <trans-unit id="550f2003b355dd55c3d46e032a5b378145ddbd40" translate="yes" xml:space="preserve">
          <source>The number of degrees to the right that the field of view will extend in.</source>
          <target state="translated">視野が伸びるのは右に何度になるか。</target>
        </trans-unit>
        <trans-unit id="0bd10870e4038b238c6c20c6ca218f7a001ae936" translate="yes" xml:space="preserve">
          <source>The number of degrees upwards that the field of view extends in.</source>
          <target state="translated">視野が広がる上の角度の数。</target>
        </trans-unit>
        <trans-unit id="ef440326158da6519189c3064eda19981619f0f1" translate="yes" xml:space="preserve">
          <source>The number of degrees upwards that the field of view will extend in.</source>
          <target state="translated">視野が何度上に伸びるかを表します。</target>
        </trans-unit>
        <trans-unit id="df69abc3b244a0603971a2251fdb1225667d2929" translate="yes" xml:space="preserve">
          <source>The number of drag data items in the list, or 0 if the list is empty or disabled. The drag item list is considered to be disabled if the item list's &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object is not associated with a drag data store.</source>
          <target state="translated">リスト内のドラッグデータアイテムの数。リストが空または無効の場合は0。項目リストの&lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt;オブジェクトがドラッグデータストアに関連付けられていない場合、ドラッグ項目リストは無効であると見なされます。</target>
        </trans-unit>
        <trans-unit id="a3a4a4db116235bcb3dda1ac04352387aacd4096" translate="yes" xml:space="preserve">
          <source>The number of filters does not specifiy the number of devices shown by the user agent. For example, if only a USB device with product ID 0xa800 is found, then only one device will be listed by the user agent. On the other hand if the user agent finds two of the first listed device and one of the second, then all three devices will be listed.</source>
          <target state="translated">フィルタの数は、ユーザーエージェントが表示するデバイスの数を指定するものではありません。例えば、製品ID 0xa800のUSBデバイスのみが見つかった場合、ユーザーエージェントは1つのデバイスのみを表示します。一方、ユーザエージェントが最初にリストされたデバイスのうち2つと2つ目のデバイスのうち1つを見つけた場合、3つのデバイスがすべてリストされます。</target>
        </trans-unit>
        <trans-unit id="18170293f5095a67ef38fea447bf5dd5bc8bd221" translate="yes" xml:space="preserve">
          <source>The number of form controls within the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;. This is the same as the number of the elements in the &lt;a href=&quot;../htmlformcontrolscollection&quot;&gt;&lt;code&gt;HTMLFormControlsCollection&lt;/code&gt;&lt;/a&gt; returned by the &lt;a href=&quot;elements&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 内のフォームコントロールの数。これは、&lt;a href=&quot;elements&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt;プロパティによって返される&lt;a href=&quot;../htmlformcontrolscollection&quot;&gt; &lt;code&gt;HTMLFormControlsCollection&lt;/code&gt; &lt;/a&gt;内の要素の数と同じです。</target>
        </trans-unit>
        <trans-unit id="59c20253be6ba0943de342b6137ed6b43a01c42a" translate="yes" xml:space="preserve">
          <source>The number of frames which have been</source>
          <target state="translated">をしたフレーム数を表示しています。</target>
        </trans-unit>
        <trans-unit id="e56391c93683cf30c12252d6fe04e0d4bc26bcb5" translate="yes" xml:space="preserve">
          <source>The number of input channels in the audio stream.</source>
          <target state="translated">オーディオストリームの入力チャンネル数。</target>
        </trans-unit>
        <trans-unit id="3b0ec35c37c9bedffdb792ad75088830399024d2" translate="yes" xml:space="preserve">
          <source>The number of items in the array.</source>
          <target state="translated">配列に含まれる項目の数。</target>
        </trans-unit>
        <trans-unit id="f1f798cd1bcf3388c5823cb438fa9a19c9ecc858" translate="yes" xml:space="preserve">
          <source>The number of items in the list.</source>
          <target state="translated">リストの項目数です。</target>
        </trans-unit>
        <trans-unit id="14967b2ef3b1fe9b7ffd1ce55242babd2bea97b9" translate="yes" xml:space="preserve">
          <source>The number of milliseconds each iteration of the animation takes to complete. Defaults to 0. Although this is technically optional, keep in mind that your animation will not run if this value is 0.</source>
          <target state="translated">アニメーションの各反復が完了するまでにかかる時間をミリ秒単位で指定します。デフォルトは0です。 これは技術的には任意ですが、この値が0の場合はアニメーションが実行されないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="683d96cd7dd20529422424bcd56ff146cc833ec6" translate="yes" xml:space="preserve">
          <source>The number of milliseconds long a single beginning-to-end iteration of the animation should take. The default is &lt;code&gt;&quot;auto&quot;&lt;/code&gt;. This value must not be negative; otherwise, it can have any value (including positive infinity).</source>
          <target state="translated">アニメーションの最初から最後までの1回の反復にかかるミリ秒数。デフォルトは &lt;code&gt;&quot;auto&quot;&lt;/code&gt; です。この値は負であってはなりません。それ以外の場合は、任意の値（正の無限大を含む）を持つことができます。</target>
        </trans-unit>
        <trans-unit id="933193f6294ca35c147f2a1056e9aadfc757cc70" translate="yes" xml:space="preserve">
          <source>The number of milliseconds over which the browser may continue to attempt to transmit the message until it either succeeds or gives up. If not set when &lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt;&lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt;&lt;/a&gt; was called to create the data channel, this value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ブラウザーが成功または中止するまでメッセージの送信を試行し続けるミリ秒数。データチャネルを作成するために&lt;a href=&quot;../rtcpeerconnection/createdatachannel&quot;&gt; &lt;code&gt;RTCPeerConnection.createDataChannel()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに設定されていない場合、この値は &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1256524eb6ce59ebd55b08ea767551f33ddef37c" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to delay after the end of an animation. This is primarily of use when sequencing animations based on the end time of another animation. Defaults to 0.</source>
          <target state="translated">アニメーションの終了後に遅延させるミリ秒数。これは主に、他のアニメーションの終了時間に基づいてアニメーションをシーケンスする場合に使用します。デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="5b0b349358d28f59ed583a58b44daf964a8a37ac" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to delay the start of the animation. Defaults to 0.</source>
          <target state="translated">アニメーションの開始を遅らせるミリ秒数。デフォルトは0です。</target>
        </trans-unit>
        <trans-unit id="9b57f1d889b2d42a982c0ce5d8fb6b4bc0a01764" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to record into each &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;. If this parameter isn't included, the entire media duration is recorded into a single &lt;code&gt;Blob&lt;/code&gt; unless the &lt;a href=&quot;requestdata&quot;&gt;&lt;code&gt;requestData()&lt;/code&gt;&lt;/a&gt; method is called to obtain the &lt;code&gt;Blob&lt;/code&gt; and trigger the creation of a new &lt;code&gt;Blob&lt;/code&gt; into which the media continues to be recorded.</source>
          <target state="translated">各&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;に記録するミリ秒数。このパラメーターが含まれていない場合、&lt;a href=&quot;requestdata&quot;&gt; &lt;code&gt;requestData()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して &lt;code&gt;Blob&lt;/code&gt; を取得し、メディアが引き続き記録される新しい &lt;code&gt;Blob&lt;/code&gt; の作成をトリガーしない限り、メディア全体の時間は単一の &lt;code&gt;Blob&lt;/code&gt; に記録されます。</target>
        </trans-unit>
        <trans-unit id="e1440568a832c81fa0471dec58a38037eeda2255" translate="yes" xml:space="preserve">
          <source>The number of nodes in the &lt;code&gt;NodeList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NodeList&lt;/code&gt; 内のノードの数。</target>
        </trans-unit>
        <trans-unit id="bb66f479fd694f60bd95e9d9addd7c2e255c45da" translate="yes" xml:space="preserve">
          <source>The number of output channels in the audio stream.</source>
          <target state="translated">オーディオストリームの出力チャンネル数。</target>
        </trans-unit>
        <trans-unit id="35755bdfbe4453b2f7ad8307c4b580060bf7cf64" translate="yes" xml:space="preserve">
          <source>The number of plugins in the array.</source>
          <target state="translated">配列に含まれるプラグインの数。</target>
        </trans-unit>
        <trans-unit id="bf3abe5e2ae81f6b42746080da17d103008fc35b" translate="yes" xml:space="preserve">
          <source>The number of properties. See the &lt;a href=&quot;cssstyledeclaration/item&quot;&gt;&lt;code&gt;item()&lt;/code&gt;&lt;/a&gt; method below.</source>
          <target state="translated">プロパティの数。以下の&lt;a href=&quot;cssstyledeclaration/item&quot;&gt; &lt;code&gt;item()&lt;/code&gt; &lt;/a&gt;メソッドを参照してください。</target>
        </trans-unit>
        <trans-unit id="4a9bdbffe9a45f7451205b35bbf5f321fdc77574" translate="yes" xml:space="preserve">
          <source>The number of queued outgoing data bytes below which the buffer is considered to be &quot;low.&quot;</source>
          <target state="translated">バッファが &quot;Low &quot;であるとみなされるキューに入っている送信データのバイト数を指定します。</target>
        </trans-unit>
        <trans-unit id="2eb105ff5f5eadd6b4563b9796ca85032d69171f" translate="yes" xml:space="preserve">
          <source>The number of texture units is implementation dependent, you can get this number with the help of the &lt;code&gt;MAX_COMBINED_TEXTURE_IMAGE_UNITS&lt;/code&gt; constant. It is, per specification, at least 8.</source>
          <target state="translated">テクスチャユニットの数は実装に依存します &lt;code&gt;MAX_COMBINED_TEXTURE_IMAGE_UNITS&lt;/code&gt; 定数を使用してこの数を取得できます。仕様ごとに、少なくとも8です。</target>
        </trans-unit>
        <trans-unit id="5f6b3a5cc4cf1a0e8fc8c41986e1cb18dceec66e" translate="yes" xml:space="preserve">
          <source>The number of times the animation should repeat. Defaults to &lt;code&gt;1&lt;/code&gt;, and can also take a value of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt;&lt;code&gt;Infinity&lt;/code&gt;&lt;/a&gt; to make it repeat for as long as the element exists.</source>
          <target state="translated">アニメーションを繰り返す回数。デフォルトは &lt;code&gt;1&lt;/code&gt; であり、要素が存在する限り、値を&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity&quot;&gt; &lt;code&gt;Infinity&lt;/code&gt; &lt;/a&gt;にして繰り返すこともできます。</target>
        </trans-unit>
        <trans-unit id="38991625820099d023e9148b47a9c204d93a1987" translate="yes" xml:space="preserve">
          <source>The number of times the receiver notified the sender that one or more RTP packets has been lost by sending a Negative ACKnowledgement (NACK, also called &quot;Generic NACK&quot;) packet to the sender. This value is only available to the receiver.</source>
          <target state="translated">ネガティブ ACKnowledgement (NACK、「ジェネリック NACK」とも呼ばれる)パケットを送信することで、1 つ以上の RTP パケットが失われたことを受信者が送信者に通知した回数。この値は受信者のみが利用可能です。</target>
        </trans-unit>
        <trans-unit id="2a21953e3a4e85719ea4c37affda6a15a2b60aeb" translate="yes" xml:space="preserve">
          <source>The number of times the receiver notified the sender that one or more consecutive (in scan order) encoded video macroblocks have been lost or corrupted; this notification is sent by the receiver to the sender using a Slice Loss Indication (SLI) packet. This is a fairly technical part of how codecs work and while the higher this value is, the more errors occurred in the stream, generally most of the time this value is only interesting to very intensively hardcore media developers.</source>
          <target state="translated">1 つ以上の連続した (スキャン順の)エンコードされたビデオマクロブロックが失われたか破損していることを、受信機が送信機に通知した回数。これは、コーデックがどのように動作するかのかなり技術的な部分であり、この値が高いほど、ストリームで発生したエラーが多くなりますが、一般的には、ほとんどの場合、この値は、非常に集中的にハードコアなメディア開発者にとってのみ興味深いものとなります。</target>
        </trans-unit>
        <trans-unit id="421b9982b9e3ff143738678a8bf895b051ff6a4a" translate="yes" xml:space="preserve">
          <source>The number of times the receiving end of the stream sent a Picture Loss Indiciation (PLI) packet to the sender, indicating that it has lost some amount of encoded video data for one or more frames. Only the receiver has this value, and it's only valid for video tracks.</source>
          <target state="translated">ストリームの受信側が送信者にピクチャーロスインディシエーション(PLI)パケットを送信した回数で、1 フレーム以上のエンコードされたビデオデータをある程度失ったことを示す。受信側のみがこの値を持ち、ビデオトラックに対してのみ有効です。</target>
        </trans-unit>
        <trans-unit id="ae4c2c7c0a5e8ef2c588a984c110b2351007c57c" translate="yes" xml:space="preserve">
          <source>The number of times this animation has looped, starting from &lt;code&gt;0&lt;/code&gt;. Returns &lt;code&gt;null&lt;/code&gt; if the animation is not running or its &lt;code&gt;KeyframeEffect&lt;/code&gt; isn't associated with an &lt;code&gt;Animation&lt;/code&gt;.</source>
          <target state="translated">このアニメーションがループした回数 &lt;code&gt;0&lt;/code&gt; から始まります。アニメーションが実行されていない場合、またはその &lt;code&gt;KeyframeEffect&lt;/code&gt; が &lt;code&gt;Animation&lt;/code&gt; に関連付けられていない場合は、 &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="f5edd6f4b0d754a9fd396af9085a3caf16f65cae" translate="yes" xml:space="preserve">
          <source>The number of times to move the cursor forward.</source>
          <target state="translated">カーソルを前進させる回数です。</target>
        </trans-unit>
        <trans-unit id="a54cd64e3c383cb5275ae9259806946b89d14fc4" translate="yes" xml:space="preserve">
          <source>The number of touch points in &lt;code&gt;touchList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;touchList&lt;/code&gt; 内のタッチポイントの数。</target>
        </trans-unit>
        <trans-unit id="356ca446a244fdf26d6766442fee3e9bbc58af35" translate="yes" xml:space="preserve">
          <source>The number of tracks in the list.</source>
          <target state="translated">リストに含まれるトラックの数。</target>
        </trans-unit>
        <trans-unit id="016575cd042a7bb1dd546840a9fc38b06e82e6a4" translate="yes" xml:space="preserve">
          <source>The number records to return. If this value exceeds the number of records in the query, the browser will only retrieve the first item. If it is lower than &lt;code&gt;0&lt;/code&gt; or greater than &lt;code&gt;2&lt;sup&gt;32&lt;/sup&gt;-1&lt;/code&gt; a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt;&lt;code&gt;TypeError&lt;/code&gt;&lt;/a&gt; exception will be thrown.</source>
          <target state="translated">返すレコード数。この値がクエリのレコード数を超える場合、ブラウザは最初のアイテムのみを取得します。 &lt;code&gt;0&lt;/code&gt; 未満または &lt;code&gt;2&lt;sup&gt;32&lt;/sup&gt;-1&lt;/code&gt; より大きい場合、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError&quot;&gt; &lt;code&gt;TypeError&lt;/code&gt; &lt;/a&gt;例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="9fbcf07bdcf7563a103853f672eb70cef2430cad" translate="yes" xml:space="preserve">
          <source>The object URL is a string identifying the &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object. Each time you call &lt;a href=&quot;../url/createobjecturl&quot;&gt;&lt;code&gt;window.URL.createObjectURL()&lt;/code&gt;&lt;/a&gt;, a unique object URL is created even if you've created an object URL for that file already. Each of these must be released. While they are released automatically when the document is unloaded, if your page uses them dynamically you should release them explicitly by calling &lt;a href=&quot;../url/revokeobjecturl&quot;&gt;&lt;code&gt;window.URL.revokeObjectURL()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">オブジェクトURLは、&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトを識別する文字列です。&lt;a href=&quot;../url/createobjecturl&quot;&gt; &lt;code&gt;window.URL.createObjectURL()&lt;/code&gt; &lt;/a&gt;を呼び出すたびに、そのファイルのオブジェクトURLをすでに作成している場合でも、一意のオブジェクトURLが作成されます。これらのそれぞれを解放する必要があります。ドキュメントがアンロードされると自動的に解放されますが、ページで動的に使用する場合は、&lt;a href=&quot;../url/revokeobjecturl&quot;&gt; &lt;code&gt;window.URL.revokeObjectURL()&lt;/code&gt; を&lt;/a&gt;呼び出して明示的に解放する必要があります。</target>
        </trans-unit>
        <trans-unit id="8f7e1152eec6e565328f5aa0532375cefa4fb5d9" translate="yes" xml:space="preserve">
          <source>The object can not be cloned. (Legacy code value: &lt;code&gt;25&lt;/code&gt; and legacy constant name: &lt;code&gt;DATA_CLONE_ERR&lt;/code&gt;)</source>
          <target state="translated">オブジェクトは複製できません。（レガシーコード値： &lt;code&gt;25&lt;/code&gt; およびレガシー定数名： &lt;code&gt;DATA_CLONE_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="41fae5493a7c616ab9a91eca1fab3576993b28b2" translate="yes" xml:space="preserve">
          <source>The object cannot be found here. (Legacy code value: &lt;code&gt;8&lt;/code&gt; and legacy constant name: &lt;code&gt;NOT_FOUND_ERR&lt;/code&gt;)</source>
          <target state="translated">オブジェクトがここに見つかりません。（レガシーコード値： &lt;code&gt;8&lt;/code&gt; およびレガシー定数名： &lt;code&gt;NOT_FOUND_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="86e52dcd4de5c09e6c89741d56c0a004960e3ca0" translate="yes" xml:space="preserve">
          <source>The object cannot be modified in this way. (Legacy code value: &lt;code&gt;13&lt;/code&gt; and legacy constant name: &lt;code&gt;INVALID_MODIFICATION_ERR&lt;/code&gt;)</source>
          <target state="translated">この方法でオブジェクトを変更することはできません。（レガシーコード値： &lt;code&gt;13&lt;/code&gt; およびレガシー定数名： &lt;code&gt;INVALID_MODIFICATION_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="b9cac598d3cb6c14b988bfdaef4cf39d84105039" translate="yes" xml:space="preserve">
          <source>The object cannot be modified. (Legacy code value: &lt;code&gt;7&lt;/code&gt; and legacy constant name: &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt;)</source>
          <target state="translated">オブジェクトは変更できません。（レガシーコード値： &lt;code&gt;7&lt;/code&gt; およびレガシー定数名： &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="81cbc7340c035ecf29968c2df345ce1301f54757" translate="yes" xml:space="preserve">
          <source>The object does not support the operation or argument. (Legacy code value: &lt;code&gt;15&lt;/code&gt; and legacy constant name: &lt;code&gt;INVALID_ACCESS_ERR&lt;/code&gt;)</source>
          <target state="translated">オブジェクトは操作または引数をサポートしていません。（レガシーコード値： &lt;code&gt;15&lt;/code&gt; およびレガシー定数名： &lt;code&gt;INVALID_ACCESS_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="73e925e320c0509a668a953ed018af76dc69754b" translate="yes" xml:space="preserve">
          <source>The object is an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats&quot;&gt;&lt;code&gt;RTCIceCandidateStats&lt;/code&gt;&lt;/a&gt; object containing statistics about the remote candidate's &lt;a href=&quot;rtcicetransport&quot;&gt;&lt;code&gt;RTCIceTransport&lt;/code&gt;&lt;/a&gt;. This may include information such as the type of network, the protocol, the URL, the type of relay being used, and so forth.</source>
          <target state="translated">オブジェクトは、リモート候補者の&lt;a href=&quot;rtcicetransport&quot;&gt; &lt;code&gt;RTCIceTransport&lt;/code&gt; &lt;/a&gt;に関する統計を含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidateStats&quot;&gt; &lt;code&gt;RTCIceCandidateStats&lt;/code&gt; &lt;/a&gt;オブジェクトです。これには、ネットワークのタイプ、プロトコル、URL、使用されているリレーのタイプなどの情報が含まれる場合があります。</target>
        </trans-unit>
        <trans-unit id="7c6ae28269d9e29e115132558c93ddd2fafe921d" translate="yes" xml:space="preserve">
          <source>The object is in an invalid state. (Legacy code value: &lt;code&gt;11&lt;/code&gt; and legacy constant name: &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt;)</source>
          <target state="translated">オブジェクトは無効な状態です。（レガシーコード値： &lt;code&gt;11&lt;/code&gt; およびレガシー定数名： &lt;code&gt;INVALID_STATE_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="6ca2f8f0ae3d4e10b27e048cfe6f6e4cb6004495" translate="yes" xml:space="preserve">
          <source>The object is in the wrong &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;. (Legacy code value: &lt;code&gt;4&lt;/code&gt; and legacy constant name: &lt;code&gt;WRONG_DOCUMENT_ERR&lt;/code&gt;)</source>
          <target state="translated">オブジェクトが間違った&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; にあり&lt;/a&gt;ます。（レガシーコード値： &lt;code&gt;4&lt;/code&gt; およびレガシー定数名： &lt;code&gt;WRONG_DOCUMENT_ERR&lt;/code&gt; ）</target>
        </trans-unit>
        <trans-unit id="3978375f83b944580de7065e78bec8922da32a80" translate="yes" xml:space="preserve">
          <source>The object is one of the types based on &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCMediaHandlerStats&quot;&gt;&lt;code&gt;RTCMediaHandlerStats&lt;/code&gt;&lt;/a&gt;: for audio tracks, the type is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSenderAudioTrackAttachmentStats&quot;&gt;&lt;code&gt;RTCSenderAudioTrackAttachmentStats&lt;/code&gt;&lt;/a&gt; and for video tracks, the type is &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSenderVideoTrackAttachmentStats&quot;&gt;&lt;code&gt;RTCSenderVideoTrackAttachmentStats&lt;/code&gt;&lt;/a&gt;. The data within provides statistics related to a particular &lt;a href=&quot;mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt;'s attachment to an &lt;a href=&quot;rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt;; also included are the media level metrics that go along with the track.</source>
          <target state="translated">オブジェクトは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCMediaHandlerStats&quot;&gt; &lt;code&gt;RTCMediaHandlerStats&lt;/code&gt; に&lt;/a&gt;基づくタイプの1つです。オーディオトラックの場合、タイプは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSenderAudioTrackAttachmentStats&quot;&gt; &lt;code&gt;RTCSenderAudioTrackAttachmentStats&lt;/code&gt; &lt;/a&gt;で、ビデオトラックの場合、タイプは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCSenderVideoTrackAttachmentStats&quot;&gt; &lt;code&gt;RTCSenderVideoTrackAttachmentStats&lt;/code&gt; &lt;/a&gt;です。内のデータは、&lt;a href=&quot;rtcrtpsender&quot;&gt; &lt;code&gt;RTCRtpSender&lt;/code&gt; &lt;/a&gt;への特定の&lt;a href=&quot;mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; &lt;/a&gt;のアタッチメントに関連する統計を提供します。トラックに沿ったメディアレベルのメトリックも含まれます。</target>
        </trans-unit>
        <trans-unit id="1c75ada1ffa819b6f9057a46434b696786ccc78a" translate="yes" xml:space="preserve">
          <source>The object passed from the other window.</source>
          <target state="translated">他のウィンドウから渡されたオブジェクト。</target>
        </trans-unit>
        <trans-unit id="f37d3e43ab8f456f4feae06e2b3bd3228c9eecc7" translate="yes" xml:space="preserve">
          <source>The object retrieved by &lt;code&gt;getImageData()&lt;/code&gt; has a width of 200 and a height of 100, for a total of 20,000 pixels. Of those pixels, most are either transparent or taken from off the canvas; only 5,000 of them are opaque black (the color of the drawn rectangle).</source>
          <target state="translated">&lt;code&gt;getImageData()&lt;/code&gt; によって取得されたオブジェクトの幅は200、高さは100で、合計20,000ピクセルです。それらのピクセルのうち、ほとんどが透明であるか、キャンバスから外されています。そのうちの5,000個だけが不透明な黒（描画された長方形の色）です。</target>
        </trans-unit>
        <trans-unit id="42de8b2cfbf68fb7e9c63862f1622149f1254cea" translate="yes" xml:space="preserve">
          <source>The object store auto increments.</source>
          <target state="translated">オブジェクトストアはオートインクリメントします。</target>
        </trans-unit>
        <trans-unit id="fda742e1752774a961d8045105bec267b1cfe6a7" translate="yes" xml:space="preserve">
          <source>The object store does not auto increment.</source>
          <target state="translated">オブジェクトストアはオートインクリメントしません。</target>
        </trans-unit>
        <trans-unit id="3c929b26fdf46f1f74a7d8927013c89493657808" translate="yes" xml:space="preserve">
          <source>The object store has been deleted.</source>
          <target state="translated">オブジェクトストアが削除されました。</target>
        </trans-unit>
        <trans-unit id="6ca655228ef3bf7c1e2128141577be66e6cda2fe" translate="yes" xml:space="preserve">
          <source>The object store uses in-line keys but no key generator, and the object store's key path does not yield a valid key.</source>
          <target state="translated">オブジェクト・ストアはインライン・キーを使用していますが、キー・ジェネレータは使用しておらず、オブジェクト・ストアのキー・パスは有効なキーを生成しません。</target>
        </trans-unit>
        <trans-unit id="2a6cc858beb1a5a3a5f24d5ae53d0d0e9fed447d" translate="yes" xml:space="preserve">
          <source>The object store uses in-line keys or has a key generator, and a key parameter was provided.</source>
          <target state="translated">オブジェクト・ストアはインライン・キーを使用するか、キー・ジェネレータを持っており、キー・パラメータが提供されていました。</target>
        </trans-unit>
        <trans-unit id="c9fcdb5e3a217f30d32be711a73880f9b1cd885f" translate="yes" xml:space="preserve">
          <source>The object store uses out-of-line keys and has no key generator, and no key parameter was provided.</source>
          <target state="translated">オブジェクト・ストアは行外キーを使用し、キー・ジェネレータを持たず、キー・パラメータも提供されませんでした。</target>
        </trans-unit>
        <trans-unit id="ed6ec6ff89052c855205d2217f930d346ed64965" translate="yes" xml:space="preserve">
          <source>The object store's transaction mode is read-only.</source>
          <target state="translated">オブジェクト ストアのトランザクション モードは読み取り専用です。</target>
        </trans-unit>
        <trans-unit id="c2348a73fe3a748d9936ced47f683fe80779fa30" translate="yes" xml:space="preserve">
          <source>The object to deliver to the main thread; this will be in the data field in the event delivered to the &lt;a href=&quot;../worker/onmessage&quot;&gt;&lt;code&gt;Worker.onmessage&lt;/code&gt;&lt;/a&gt; handler. This may be any value or JavaScript object handled by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm&quot;&gt;structured clone&lt;/a&gt; algorithm, which includes cyclical references.</source>
          <target state="translated">メインスレッドに配信するオブジェクト。これは、&lt;a href=&quot;../worker/onmessage&quot;&gt; &lt;code&gt;Worker.onmessage&lt;/code&gt; &lt;/a&gt;ハンドラーに配信されるイベントのデータフィールドにあります。これは、循環参照を含む、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm&quot;&gt;構造化クローン&lt;/a&gt;アルゴリズムで処理される任意の値またはJavaScriptオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="ca21df3908f16a4852714eba69f3663943f64b31" translate="yes" xml:space="preserve">
          <source>The object to deliver to the worker; this will be in the data field in the event delivered to the &lt;a href=&quot;../dedicatedworkerglobalscope/onmessage&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope.onmessage&lt;/code&gt;&lt;/a&gt; handler. This may be any value or JavaScript object handled by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm&quot;&gt;structured clone&lt;/a&gt; algorithm, which includes cyclical references.</source>
          <target state="translated">ワーカーに配信するオブジェクト。これは、&lt;a href=&quot;../dedicatedworkerglobalscope/onmessage&quot;&gt; &lt;code&gt;DedicatedWorkerGlobalScope.onmessage&lt;/code&gt; &lt;/a&gt;ハンドラーに配信されるイベントのデータフィールドにあります。これは、循環参照を含む、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm&quot;&gt;構造化クローン&lt;/a&gt;アルゴリズムで処理される任意の値またはJavaScriptオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="249b91ba9ef524769ba27e86619f3d0a6099186e" translate="yes" xml:space="preserve">
          <source>The object which receives a notification (an object that implements the &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; interface) when an event of the specified type occurs. This must be an object implementing the &lt;a href=&quot;../eventlistener&quot;&gt;&lt;code&gt;EventListener&lt;/code&gt;&lt;/a&gt; interface, or a JavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Functions&quot;&gt;function&lt;/a&gt;. See &lt;a href=&quot;#The_event_listener_callback&quot;&gt;The event listener callback&lt;/a&gt; for details on the callback itself.</source>
          <target state="translated">指定されたタイプのイベントが発生したときに通知を受け取るオブジェクト（&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;インターフェースを実装するオブジェクト）。これは、&lt;a href=&quot;../eventlistener&quot;&gt; &lt;code&gt;EventListener&lt;/code&gt; &lt;/a&gt;インターフェースを実装するオブジェクト、またはJavaScript &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Guide/Functions&quot;&gt;関数である&lt;/a&gt;必要があります。参照&lt;a href=&quot;#The_event_listener_callback&quot;&gt;イベントリスナーコールバック&lt;/a&gt;コールバック自体の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="bce9159c2d6fe858047e20c068733851ba27ad2c" translate="yes" xml:space="preserve">
          <source>The observer, &lt;code&gt;adObserver&lt;/code&gt;, is created by calling &lt;code&gt;IntersectionObserver&lt;/code&gt;'s constructor, passing in the callback function, &lt;code&gt;intersectionCallback&lt;/code&gt;, and our options.</source>
          <target state="translated">オブザーバー、 &lt;code&gt;adObserver&lt;/code&gt; は、呼び出すことによって作成された &lt;code&gt;IntersectionObserver&lt;/code&gt; コールバック関数に渡す、のコンストラクタを &lt;code&gt;intersectionCallback&lt;/code&gt; 、そして私たちのオプション。</target>
        </trans-unit>
        <trans-unit id="a85392ca2b70414aaaeaf5ff6593c900b04900ae" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;fullscreen&lt;/code&gt; read-only property reports whether or not the document is currently displaying content in full-screen mode.</source>
          <target state="translated">廃止された&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;インターフェースの &lt;code&gt;fullscreen&lt;/code&gt; 読み取り専用プロパティは、ドキュメントが全画面モードでコンテンツを現在表示しているかどうかを報告します。</target>
        </trans-unit>
        <trans-unit id="0594ff94db8c16e94bffb9865a0292e4fe1c2af8" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; method &lt;code&gt;&lt;strong&gt;sendAsBinary()&lt;/strong&gt;&lt;/code&gt; is a variant of the &lt;a href=&quot;send&quot;&gt;&lt;code&gt;send()&lt;/code&gt;&lt;/a&gt; method that sends binary data. The &lt;code&gt;send()&lt;/code&gt; method now supports binary data and should now be used instead.</source>
          <target state="translated">廃止された&lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;メソッド &lt;code&gt;&lt;strong&gt;sendAsBinary()&lt;/strong&gt;&lt;/code&gt; は、バイナリデータを送信する&lt;a href=&quot;send&quot;&gt; &lt;code&gt;send()&lt;/code&gt; &lt;/a&gt;メソッドのバリアントです。 &lt;code&gt;send()&lt;/code&gt; メソッドは現在、バイナリデータをサポートしており、今代わりに使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="74921b809a01d66286cf0670a5bd4703031c8f14" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;&lt;strong&gt;HTMLFontElement.size&lt;/strong&gt;&lt;/code&gt; property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; that reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-size&quot;&gt;size&lt;/a&gt;&lt;/code&gt; HTML attribute. It contains either an integer number in the range of 1-7 or a relative value to increase/decrease the value of the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont#attr-size&quot;&gt;size&lt;/a&gt;&lt;/code&gt; attribute of the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont&quot;&gt;&lt;code&gt;&amp;lt;basefont&amp;gt;&lt;/code&gt;&lt;/a&gt; element.</source>
          <target state="translated">廃止された &lt;code&gt;&lt;strong&gt;HTMLFontElement.size&lt;/strong&gt;&lt;/code&gt; プロパティは、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-size&quot;&gt;size&lt;/a&gt;&lt;/code&gt; HTML属性を反映する&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;です。1〜7の範囲の整数、または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont&quot;&gt; &lt;code&gt;&amp;lt;basefont&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont#attr-size&quot;&gt;size&lt;/a&gt;&lt;/code&gt; 属性の値を増減する相対値のいずれかが含まれます。</target>
        </trans-unit>
        <trans-unit id="2e7be84e3af9393fc180766abb232ba0af18d4bf" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;&lt;strong&gt;HTMLFontElement&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.color&lt;/code&gt; property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; that reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-color&quot;&gt;color&lt;/a&gt;&lt;/code&gt; HTML attribute, containing either a named color or a color specified in the hexadecimal #RRGGBB format.</source>
          <target state="translated">時代遅れ &lt;code&gt;&lt;strong&gt;HTMLFontElement&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.color&lt;/code&gt; プロパティがある&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;反映し &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-color&quot;&gt;color&lt;/a&gt;&lt;/code&gt; 名前の色または16進数#RRGGBB形式で指定された色のいずれかを含む、HTML属性を。</target>
        </trans-unit>
        <trans-unit id="7fe27bd9758fd119b2da7f345f4c3ad45aebf69b" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;&lt;strong&gt;HTMLFontElement&lt;/strong&gt;&lt;/code&gt;&lt;code&gt;.face&lt;/code&gt; property is a &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt; that reflects the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-face&quot;&gt;face&lt;/a&gt;&lt;/code&gt; HTML attribute, containing a comma-separated list of one or more font names.</source>
          <target state="translated">廃止された &lt;code&gt;&lt;strong&gt;HTMLFontElement&lt;/strong&gt;&lt;/code&gt; &lt;code&gt;.face&lt;/code&gt; プロパティは、1つ以上のフォント名のコンマ区切りのリストを含む、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font#attr-face&quot;&gt;face&lt;/a&gt;&lt;/code&gt; HTML属性を反映する&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="b92ec60bc7209da5c1a6ac560678c2854a061e9f" translate="yes" xml:space="preserve">
          <source>The obsolete &lt;code&gt;supportedTypes&lt;/code&gt; property of the &lt;a href=&quot;../basiccardrequest&quot;&gt;&lt;code&gt;BasicCardRequest&lt;/code&gt;&lt;/a&gt; dictionary can optionally be provided to specify an array of &lt;a href=&quot;../domstring&quot;&gt;&lt;code&gt;DOMString&lt;/code&gt;&lt;/a&gt;s representing the card types that the retailer supports (e.g. &lt;code&gt;credit&lt;/code&gt;, &lt;code&gt;debit&lt;/code&gt;, &lt;code&gt;prepaid&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;../basiccardrequest&quot;&gt; &lt;code&gt;BasicCardRequest&lt;/code&gt; &lt;/a&gt;ディクショナリの廃止された &lt;code&gt;supportedTypes&lt;/code&gt; プロパティをオプションで提供して、小売業者がサポートするカードタイプを表す&lt;a href=&quot;../domstring&quot;&gt; &lt;code&gt;DOMString&lt;/code&gt; &lt;/a&gt;の配列を指定できます（例： &lt;code&gt;credit&lt;/code&gt; 、 &lt;code&gt;debit&lt;/code&gt; 、 &lt;code&gt;prepaid&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="9893659d36bb2f180e6292097ac0f1ab645b848b" translate="yes" xml:space="preserve">
          <source>The of the organization that manufactured the USB device.</source>
          <target state="translated">USBデバイスを製造した組織の。</target>
        </trans-unit>
        <trans-unit id="1b2f2ba65ea12009f5170e42f4790316dd4a4a81" translate="yes" xml:space="preserve">
          <source>The offer sent by the remote peer has been applied and an answer has been created (usually by calling &lt;a href=&quot;createanswer&quot;&gt;&lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt;&lt;/a&gt;) and applied by calling &lt;a href=&quot;setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;. This provisional answer describes the supported media formats and so forth, but may not have a complete set of ICE candidates included. Further candidates will be delivered separately later.</source>
          <target state="translated">リモートピアによって送信されたオファーが適用され、回答が作成され（通常は&lt;a href=&quot;createanswer&quot;&gt; &lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt; &lt;/a&gt;を呼び出すことによって）、&lt;a href=&quot;setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって適用されます。この暫定的な回答では、サポートされているメディア形式などについて説明していますが、ICE候補の完全なセットが含まれていない場合があります。さらなる候補者は後で個別に配信されます。</target>
        </trans-unit>
        <trans-unit id="bbe9f4020efdf896252cc2a50e221643e18bd276" translate="yes" xml:space="preserve">
          <source>The offer sent by the remote peer has been applied and an answer has been created (usually by calling &lt;a href=&quot;rtcpeerconnection/createanswer&quot;&gt;&lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt;&lt;/a&gt;) and applied by calling &lt;a href=&quot;rtcpeerconnection/setlocaldescription&quot;&gt;&lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt;&lt;/a&gt;. This provisional answer describes the supported media formats and so forth, but may not have a complete set of ICE candidates included. Further candidates will be delivered separately later.</source>
          <target state="translated">リモートピアによって送信されたオファーが適用され、回答が作成され（通常は&lt;a href=&quot;rtcpeerconnection/createanswer&quot;&gt; &lt;code&gt;RTCPeerConnection.createAnswer()&lt;/code&gt; &lt;/a&gt;を呼び出すことによって）、&lt;a href=&quot;rtcpeerconnection/setlocaldescription&quot;&gt; &lt;code&gt;RTCPeerConnection.setLocalDescription()&lt;/code&gt; を&lt;/a&gt;呼び出すことによって適用されます。この暫定的な回答では、サポートされているメディア形式などについて説明していますが、ICE候補の完全なセットが含まれていない場合があります。さらなる候補者は後で個別に配信されます。</target>
        </trans-unit>
        <trans-unit id="111d2bfb525534634dd62f73706ae977f66ed481" translate="yes" xml:space="preserve">
          <source>The offer/answer process is performed both when a call is first established, but also any time the call's format or other configuration needs to change. Regardless of whether it's a new call, or reconfiguring an existing one, these are the basic steps which must occur to exchange the offer and answer, leaving out the ICE layer for the moment:</source>
          <target state="translated">オファー/アンサープロセスは、呼が最初に確立されたときだけでなく、呼の形式やその他の設定を変更する 必要があるときにも実行される。新規呼であるか、既存の呼の再設定であるかにかかわらず、以下は、オファーとアンサーを交換するために発生しなければならない基本的なステップであり、とりあえずICEレイヤーを除いたものである。</target>
        </trans-unit>
        <trans-unit id="6e32e34135f643e8fcd7544e168050ebb59b751d" translate="yes" xml:space="preserve">
          <source>The official usg.org-assigned vendor ID.</source>
          <target state="translated">usg.orgが割り当てた公式のベンダーIDです。</target>
        </trans-unit>
        <trans-unit id="24e803145b9d98a608511667c57d9fe7a77eea28" translate="yes" xml:space="preserve">
          <source>The offset in &lt;code&gt;node&lt;/code&gt; to which the selection will be collapsed. If not specified, the default value &lt;code&gt;0&lt;/code&gt; is used.</source>
          <target state="translated">選択範囲が縮小される &lt;code&gt;node&lt;/code&gt; のオフセット。指定しない場合、デフォルト値 &lt;code&gt;0&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="f56e753b1ca7812a24749c03c753ac54306a50cf" translate="yes" xml:space="preserve">
          <source>The offset into &lt;a href=&quot;../node&quot;&gt;&lt;code&gt;Node&lt;/code&gt;&lt;/a&gt; of the point to compare with the &lt;a href=&quot;../range&quot;&gt;&lt;code&gt;Range&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../range&quot;&gt; &lt;code&gt;Range&lt;/code&gt; &lt;/a&gt;と比較するポイントの&lt;a href=&quot;../node&quot;&gt; &lt;code&gt;Node&lt;/code&gt; &lt;/a&gt;へのオフセット。</target>
        </trans-unit>
        <trans-unit id="fde1ca73714bba267261a69533ebe9489f587767" translate="yes" xml:space="preserve">
          <source>The offset is added before the depth test is performed and before the value is written into the depth buffer.</source>
          <target state="translated">オフセットは、デプステストが実行される前に、デプスバッファに値が書き込まれる前に追加されます。</target>
        </trans-unit>
        <trans-unit id="9e481b8af02f52e81213732763dbbea8c2add144" translate="yes" xml:space="preserve">
          <source>The offset of the keyframe specified as a number between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt; inclusive or &lt;code&gt;null&lt;/code&gt;. This is equivalent to specifying start and end states in percentages in CSS stylesheets using &lt;code&gt;@keyframes&lt;/code&gt;. If this value is &lt;code&gt;null&lt;/code&gt; or missing, the keyframe will be evenly spaced between adjacent keyframes.</source>
          <target state="translated">&lt;code&gt;0.0&lt;/code&gt; と &lt;code&gt;1.0&lt;/code&gt; の間の数値または &lt;code&gt;null&lt;/code&gt; として指定されたキーフレームのオフセット。これは、 &lt;code&gt;@keyframes&lt;/code&gt; を使用してCSSスタイルシートでパーセンテージで開始状態と終了状態を指定することと同じです。この値が &lt;code&gt;null&lt;/code&gt; または欠落している場合、キーフレームは隣接するキーフレーム間で等間隔になります。</target>
        </trans-unit>
        <trans-unit id="79f5ceec885154cec885d1378c05c0548931aa0a" translate="yes" xml:space="preserve">
          <source>The offset of the keyframe specified as a number between &lt;code&gt;0.0&lt;/code&gt; and &lt;code&gt;1.0&lt;/code&gt; inclusive or &lt;code&gt;null&lt;/code&gt;. This is equivalent to specifying start and end states in percentages in CSS stylesheets using &lt;code&gt;@keyframes&lt;/code&gt;. This will be &lt;code&gt;null&lt;/code&gt; if the keyframe is automatically spaced using &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect/spacing&quot;&gt;&lt;code&gt;KeyframeEffect.spacing&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0.0&lt;/code&gt; と &lt;code&gt;1.0&lt;/code&gt; の間の数値または &lt;code&gt;null&lt;/code&gt; として指定されたキーフレームのオフセット。これは、 &lt;code&gt;@keyframes&lt;/code&gt; を使用してCSSスタイルシートでパーセンテージで開始状態と終了状態を指定することと同じです。 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/KeyframeEffect/spacing&quot;&gt;&lt;code&gt;KeyframeEffect.spacing&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; を使用してキーフレームの間隔が自動的に設定されている場合、これは &lt;code&gt;null&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="5cd4f2ab48e17112b71398072dacc08e800c8cca" translate="yes" xml:space="preserve">
          <source>The offset position within &lt;code&gt;node&lt;/code&gt; where the focus will be moved to. If not specified, the default value &lt;code&gt;0&lt;/code&gt; is used.</source>
          <target state="translated">フォーカスが移動する &lt;code&gt;node&lt;/code&gt; 内のオフセット位置。指定しない場合、デフォルト値 &lt;code&gt;0&lt;/code&gt; が使用されます。</target>
        </trans-unit>
        <trans-unit id="03a1f964afec1e47c0b816a8b459524bf9701772" translate="yes" xml:space="preserve">
          <source>The older &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getUserMedia&quot;&gt;&lt;code&gt;navigator.getUserMedia()&lt;/code&gt;&lt;/a&gt; legacy API.</source>
          <target state="translated">古い&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/navigator/getUserMedia&quot;&gt; &lt;code&gt;navigator.getUserMedia()&lt;/code&gt; &lt;/a&gt;レガシーAPI。</target>
        </trans-unit>
        <trans-unit id="832c380434eda11f499f15ae8a9a20d93f60664e" translate="yes" xml:space="preserve">
          <source>The onanimationiteration event handler is then set up. It simply sets the box's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state&quot;&gt;&lt;code&gt;animation-play-state&lt;/code&gt;&lt;/a&gt; to &quot;paused&quot;, then updates the text displayed in the button to indicate that clicking the button will start playing the next iteration of theanimation.</source>
          <target state="translated">次に、onanimationiterationイベントハンドラが設定されます。これは単にボックスの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/animation-play-state&quot;&gt; &lt;code&gt;animation-play-state&lt;/code&gt; &lt;/a&gt;を「一時停止」に設定し、ボタンに表示されるテキストを更新して、ボタンをクリックするとアニメーションの次の反復の再生が開始されることを示します。</target>
        </trans-unit>
        <trans-unit id="0d21a2361b4f732de35d1e16271c34e025268511" translate="yes" xml:space="preserve">
          <source>The one value that needs explaining is the vertical offset position we are drawing each bar at: &lt;code&gt;HEIGHT-barHeight/2&lt;/code&gt;. I am doing this because I want each bar to stick up from the bottom of the canvas, not down from the top, as it would if we set the vertical position to 0. Therefore, we instead set the vertical position each time to the height of the canvas minus &lt;code&gt;barHeight/2&lt;/code&gt;, so therefore each bar will be drawn from partway down the canvas, down to the bottom.</source>
          <target state="translated">説明が必要な1つの値は、各バーを描画している垂直オフセット位置です： &lt;code&gt;HEIGHT-barHeight/2&lt;/code&gt; 。これは、垂直位置を0に設定する場合のように、各バーをキャンバスの上から下にではなく下から突き上げるためです。したがって、代わりに垂直位置を高さに設定しますキャンバスのマイナス &lt;code&gt;barHeight/2&lt;/code&gt; なので、各バーはキャンバスの途中から下に向かって描画されます。</target>
        </trans-unit>
        <trans-unit id="d7348ea1897117e0e7cee3c6764e3ab4c250bf9e" translate="yes" xml:space="preserve">
          <source>The only other primitive shapes are &lt;em&gt;paths&lt;/em&gt;. A path is a list of points, connected by segments of lines that can be of different shapes, curved or not, of different width and of different color. A path, or even a subpath, can be closed. To make shapes using paths takes some extra steps:</source>
          <target state="translated">他の唯一のプリミティブ形状は&lt;em&gt;パス&lt;/em&gt;です。パスはポイントのリストであり、カーブの有無にかかわらず、幅や色が異なるラインのセグメントで接続されています。パス、またはサブパスでさえ閉じることができます。パスを使用してシェイプを作成するには、いくつかの追加手順が必要です。</target>
        </trans-unit>
        <trans-unit id="acc018782ccdf0859068674cb7de7de18ec0f15b" translate="yes" xml:space="preserve">
          <source>The only sequence which is not allowed within a CDATA section is the closing sequence of a CDATA section itself:</source>
          <target state="translated">CDATAセクション内で許可されていないシーケンスは、CDATAセクション自体の終了シーケンスのみです。</target>
        </trans-unit>
        <trans-unit id="3e2afd4b63f2d2858899c24174b1f432775e3ff0" translate="yes" xml:space="preserve">
          <source>The only thing left is to look up the location of the &lt;code&gt;aVertexNormal&lt;/code&gt; attribute and the &lt;code&gt;uNormalMatrix&lt;/code&gt; uniform.</source>
          <target state="translated">残っているのは、 &lt;code&gt;aVertexNormal&lt;/code&gt; 属性と &lt;code&gt;uNormalMatrix&lt;/code&gt; ユニフォームの場所を調べることだけです。</target>
        </trans-unit>
        <trans-unit id="e40c3ebc54c0141d8469216656c62834914e3618" translate="yes" xml:space="preserve">
          <source>The only thing left to do is give the app a try: &lt;a href=&quot;https://codepen.io/Rumyra/pen/qyMzqN/&quot;&gt;Check out the final demo here on Codepen&lt;/a&gt;.</source>
          <target state="translated">あとは、アプリを試してみるだけです&lt;a href=&quot;https://codepen.io/Rumyra/pen/qyMzqN/&quot;&gt;。Codepenの最後のデモをご覧ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="403a936dc672ca16b0bb8117c4a03f5890a664f9" translate="yes" xml:space="preserve">
          <source>The only thing we do here is disable the &quot;Connect&quot; button when the local peer is connected and enable the &quot;Disconnect&quot; button when the remote peer connects.</source>
          <target state="translated">ここでやることは、ローカルピアが接続されているときは「接続」ボタンを無効にし、リモートピアが接続されているときは「切断」ボタンを有効にすることだけです。</target>
        </trans-unit>
        <trans-unit id="2018dda0f784765af37643b59b129e7e5a67961f" translate="yes" xml:space="preserve">
          <source>The only trouble we have now is that if the request doesn&amp;rsquo;t match anything in the cache, and the network is not available, our request will still fail. Let&amp;rsquo;s provide a default fallback so that whatever happens, the user will at least get something:</source>
          <target state="translated">唯一の問題は、リクエストがキャッシュ内の何にも一致せず、ネットワークが利用できない場合でも、リクエストが失敗することです。デフォルトのフォールバックを提供して、何が起こってもユーザーが少なくとも何かを取得できるようにします。</target>
        </trans-unit>
        <trans-unit id="6fdb86250d8e6038a297f5d9f0ab96029b639bf5" translate="yes" xml:space="preserve">
          <source>The only way to read content from a Blob is to use a &lt;a href=&quot;filereader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt;. The following code reads the content of a Blob as a typed array.</source>
          <target state="translated">Blobからコンテンツを読み取る唯一の方法は、&lt;a href=&quot;filereader&quot;&gt; &lt;code&gt;FileReader&lt;/code&gt; &lt;/a&gt;を使用することです。次のコードは、Blobのコンテンツを型付き配列として読み取ります。</target>
        </trans-unit>
        <trans-unit id="adb00994e9836c05570c6bb074bd80d894e97fd0" translate="yes" xml:space="preserve">
          <source>The opcode field defines how to interpret the payload data: 0x0 for continuation,&lt;code&gt;0x1&lt;/code&gt; for text (which is always encoded in UTF-8), &lt;code&gt;0x2&lt;/code&gt; for binary, and other so-called &quot;control codes&quot; that will be discussed later. In this version of WebSockets, &lt;code&gt;0x3&lt;/code&gt; to &lt;code&gt;0x7&lt;/code&gt; and &lt;code&gt;0xB&lt;/code&gt; to &lt;code&gt;0xF&lt;/code&gt; have no meaning.</source>
          <target state="translated">オペコード・フィールド定義は、どのペイロード・データを解釈する：継続するための0x0の、 &lt;code&gt;0x1&lt;/code&gt; の（常にUTF-8でエンコードされた）テキストの、 &lt;code&gt;0x2&lt;/code&gt; のバイナリのための、および後述する他のいわゆる「制御コード」。 WebSocketを、このバージョンでは &lt;code&gt;0x3&lt;/code&gt; のへ &lt;code&gt;0x7&lt;/code&gt; と &lt;code&gt;0xB&lt;/code&gt; に &lt;code&gt;0xF&lt;/code&gt; の意味を持ちません。</target>
        </trans-unit>
        <trans-unit id="c9e12b46f409c9b71bc1b1142e057fc26beab9dc" translate="yes" xml:space="preserve">
          <source>The open request doesn't open the database or start the transaction right away. The call to the &lt;code&gt;open()&lt;/code&gt; function returns an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBOpenDBRequest&quot;&gt;&lt;code&gt;IDBOpenDBRequest&lt;/code&gt;&lt;/a&gt; object with a result (success) or error value that you handle as an event. Most other asynchronous functions in IndexedDB do the same thing - return an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBRequest&quot;&gt;&lt;code&gt;IDBRequest&lt;/code&gt;&lt;/a&gt; object with the result or error. The result for the open function is an instance of an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase&quot;&gt;IDBDatabase&lt;/a&gt;.&lt;/code&gt;</source>
          <target state="translated">オープンリクエストはデータベースをオープンしたり、トランザクションをすぐに開始したりしません。 &lt;code&gt;open()&lt;/code&gt; 関数を呼び出すと、イベントとして処理する結果（成功）またはエラー値を含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBOpenDBRequest&quot;&gt; &lt;code&gt;IDBOpenDBRequest&lt;/code&gt; &lt;/a&gt;オブジェクトが返されます。IndexedDBの他のほとんどの非同期関数は同じことを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBRequest&quot;&gt; &lt;code&gt;IDBRequest&lt;/code&gt; &lt;/a&gt;ます- 結果またはエラーを含むIDBRequestオブジェクトを返します。open関数の結果は、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase&quot;&gt;IDBDatabase&lt;/a&gt;.&lt;/code&gt; インスタンスです。</target>
        </trans-unit>
        <trans-unit id="ce3f8c4ab4b6f1e5d468aacb1d779b7775772ed8" translate="yes" xml:space="preserve">
          <source>The operation by which reading and writing on a database is done. Every request represents one read or write operation.</source>
          <target state="translated">データベースへの読み書きが行われる操作。各リクエストは1つの読み書き操作を表します。</target>
        </trans-unit>
        <trans-unit id="cf37381e707e8fdeba0614fd2136073d8a9f3b77" translate="yes" xml:space="preserve">
          <source>The operation cannot be performed on the current state of the interface object. For example, the state that was cached in an interface object has changed since it was last read from disk.</source>
          <target state="translated">この操作は、インターフェイス・オブジェクトの現在の状態に対しては実行できません。例えば、インターフェイス・オブジェクトにキャッシュされていた状態が、最後にディスクから読み込まれてから変更された場合などです。</target>
        </trans-unit>
        <trans-unit id="b7c47802c079abbd299dfab071cef95657b06551" translate="yes" xml:space="preserve">
          <source>The operation couldn't be completed at this time because no synthesis engine was available (For example, the user may need to install or configure a synthesis engine.)</source>
          <target state="translated">合成エンジンが利用できないため、この時点で操作を完了できませんでした(例えば、合成エンジンのインストールや設定が必要な場合があります)。</target>
        </trans-unit>
        <trans-unit id="6152893c28d81b680ef3a0d86057695683a244c5" translate="yes" xml:space="preserve">
          <source>The operation couldn't be completed at this time because some required network communication failed.</source>
          <target state="translated">この時点では、必要なネットワーク通信に失敗したため、操作を完了できませんでした。</target>
        </trans-unit>
        <trans-unit id="e1ae4f8b303a4ed549d2aa8354267b7fb3548f8c" translate="yes" xml:space="preserve">
          <source>The operation couldn't be completed at this time because the user-agent couldn't access the audio output device (for example, the user may need to correct this by closing another application.)</source>
          <target state="translated">ユーザーエージェントが音声出力装置にアクセスできなかったため、この時点で操作を完了できませんでした(例えば、他のアプリケーションを閉じるなどして修正する必要があるかもしれません)。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
