<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="dom">
    <body>
      <group id="dom">
        <trans-unit id="a53e08ee8aa6ac62cf922d2234ff6a1c6f09852a" translate="yes" xml:space="preserve">
          <source>When invoked, will empty all keys out of the storage.</source>
          <target state="translated">起動されると、ストレージからすべてのキーを空にします。</target>
        </trans-unit>
        <trans-unit id="7c6de2a28bfed4b9ba32899cd8c2429a452cb375" translate="yes" xml:space="preserve">
          <source>When invoking this method directly, no submit event is raised (in particular, the form's &lt;code&gt;onsubmit&lt;/code&gt; event handler is not run), and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot;&gt;constraint validation&lt;/a&gt; is not triggered either.</source>
          <target state="translated">このメソッドを直接呼び出すと、送信イベントは発生せず（特に、フォームの &lt;code&gt;onsubmit&lt;/code&gt; イベントハンドラーは実行されません）、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/HTML/HTML5/Constraint_validation&quot;&gt;制約の検証&lt;/a&gt;もトリガーされません。</target>
        </trans-unit>
        <trans-unit id="62d45ca92f9517f71a3f209b5b95a09ac458d113" translate="yes" xml:space="preserve">
          <source>When it gets this request, the &lt;strong&gt;server&lt;/strong&gt; should send a pretty odd-looking (but still HTTP) response that looks like this (remember each header ends with &lt;code&gt;\r\n&lt;/code&gt; and put an extra &lt;code&gt;\r\n&lt;/code&gt; after the last one):</source>
          <target state="translated">このリクエストを受け取ると、&lt;strong&gt;サーバー&lt;/strong&gt;は次のようなかなり奇妙な（しかしまだHTTP）応答を送信する必要があります（各ヘッダーが &lt;code&gt;\r\n&lt;/code&gt; 終わり、最後のヘッダーの後に追加の &lt;code&gt;\r\n&lt;/code&gt; を置くことを忘れないでください）：</target>
        </trans-unit>
        <trans-unit id="1c1692e30bcef2404cee756389d9cea218936288" translate="yes" xml:space="preserve">
          <source>When it takes a positive value it is a real gain, when negative it is an attenuation.</source>
          <target state="translated">それが正の値を取るとき、それは実質的な利得であり、負の値を取るとき、それは減衰です。</target>
        </trans-unit>
        <trans-unit id="0ae5bee557d9c9272e102b88fbfad4d5a969d111" translate="yes" xml:space="preserve">
          <source>When its value changes, as the user's preferred languages are changed a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/languagechange&quot;&gt;languagechange&lt;/a&gt;&lt;/code&gt; event is fired on the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;Window&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">その値が変更されると、ユーザーの優先言語が変更されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/languagechange&quot;&gt;languagechange&lt;/a&gt;&lt;/code&gt; イベントが&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;Window&lt;/code&gt; &lt;/a&gt;オブジェクトで発生します。</target>
        </trans-unit>
        <trans-unit id="90cf237ff8e56b11687a19c6737df3ce64a1017c" translate="yes" xml:space="preserve">
          <source>When looping is enabled, the sound begins playing at the time specified as the start point when &lt;a href=&quot;start&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; is called. When the time specified by the &lt;a href=&quot;loopend&quot;&gt;&lt;code&gt;loopEnd&lt;/code&gt;&lt;/a&gt; property is reached, playback continues at the time specified by &lt;a href=&quot;loopstart&quot;&gt;&lt;code&gt;loopStart&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">ループが有効になっている場合、&lt;a href=&quot;start&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに開始点として指定された時間にサウンドの再生が開始されます。&lt;a href=&quot;loopend&quot;&gt; &lt;code&gt;loopEnd&lt;/code&gt; &lt;/a&gt;プロパティで指定された時間に達すると、loopStartで指定された時間で再生が続行され&lt;a href=&quot;loopstart&quot;&gt; &lt;code&gt;loopStart&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f6a2d424ecb60622519388a142a990319875abb6" translate="yes" xml:space="preserve">
          <source>When moving a directory, the move is always recursive; you can't leave out subfolders.</source>
          <target state="translated">ディレクトリを移動するとき、移動は常に再帰的に行われます。</target>
        </trans-unit>
        <trans-unit id="f1bf6915fcb0876cbfb452bd4523b334fcdef515" translate="yes" xml:space="preserve">
          <source>When new tracks are added to the &lt;code&gt;RTCPeerConnection&lt;/code&gt;&amp;mdash; either by calling its &lt;a href=&quot;../rtcpeerconnection/addtrack&quot;&gt;&lt;code&gt;addTrack()&lt;/code&gt;&lt;/a&gt; method or because of renegotiation of the stream's format&amp;mdash;a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event is set to the &lt;code&gt;RTCPeerConnection&lt;/code&gt; for each track added to the connection. Making use of newly added media requires implementing a handler for the &lt;code&gt;track&lt;/code&gt; event. A common need is to attach the incoming media to an appropriate HTML element. In our example, we add the track's stream to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element that displays the incoming video:</source>
          <target state="translated">新しいトラックが追加されたとき &lt;code&gt;RTCPeerConnection&lt;/code&gt; -その呼び出すことによってのいずれか&lt;a href=&quot;../rtcpeerconnection/addtrack&quot;&gt; &lt;code&gt;addTrack()&lt;/code&gt; &lt;/a&gt;メソッドのため、またはストリームのフォーマットの再ネゴシエーションの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; イベントに設定されている &lt;code&gt;RTCPeerConnection&lt;/code&gt; 接続に加えトラック毎。新しく追加されたメディアを利用するには、 &lt;code&gt;track&lt;/code&gt; イベントのハンドラーを実装する必要があります。一般的なニーズは、着信メディアを適切なHTML要素に添付することです。この例では、着信ビデオを表示する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にトラックのストリームを追加します。</target>
        </trans-unit>
        <trans-unit id="8fa282965910599814d2e295744e01e2115ba58e" translate="yes" xml:space="preserve">
          <source>When no pages are using the current version, the new worker activates and becomes responsible for fetches.</source>
          <target state="translated">現在のバージョンを使用しているページがない場合、新しいワーカーが起動し、フェッチの責任者となります。</target>
        </trans-unit>
        <trans-unit id="7b667f6155d8918de818445c7301cf5daf675998" translate="yes" xml:space="preserve">
          <source>When numbers are extremely large (or extremely small) on computers they begin to become less and less precise because there are only so many ones and zeros that are used to represent them. The more operations that are done on larger numbers, the more and more errors accumulate into the result. When dividing by w, this can effectively increase the precision of very large numbers by operating on two potentially smaller, less error-prone numbers.</source>
          <target state="translated">コンピュータ上で数値が極端に大きくなると(または極端に小さくなると)、数値を表現するのに使われる1と0の数が非常に多くなるため、精度が低下していきます。大きな数に対してより多くの演算を行えば行うほど、結果にはより多くの誤差が蓄積されます。wで割る場合、これは、潜在的に小さく、誤差の少ない2つの数を操作することで、非常に大きな数の精度を効果的に向上させることができます。</target>
        </trans-unit>
        <trans-unit id="081a8cdbc8e662c681be1eefd201a61d32f6a8d4" translate="yes" xml:space="preserve">
          <source>When only one argument is present: Toggle the class value; i.e., if the class exists then remove it and return &lt;code&gt;false&lt;/code&gt;, if not, then add it and return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">引数が1つしかない場合：クラス値を切り替えます。つまり、クラスが存在する場合はそれを削除して &lt;code&gt;false&lt;/code&gt; を返し、存在しない場合は追加して &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="ad839b2f539650a13de37b86845dc0102ff323ec" translate="yes" xml:space="preserve">
          <source>When our button is clicked, we prevent the form from submitting as normal and then send the value entered in our text input to the IFrame via the &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">ボタンがクリックされると、フォームが通常どおり送信されないようにし、テキスト入力に入力された値を&lt;a href=&quot;../messagechannel&quot;&gt; &lt;code&gt;MessageChannel&lt;/code&gt; を&lt;/a&gt;介してIFrameに送信します。</target>
        </trans-unit>
        <trans-unit id="37586336583587a213a08db4df01979dde4b3ffc" translate="yes" xml:space="preserve">
          <source>When passed a key name and value, will add that key to the storage, or update that key's value if it already exists.</source>
          <target state="translated">キー名と値を渡すと、そのキーをストレージに追加します。</target>
        </trans-unit>
        <trans-unit id="be2997d2b3ccc462a2263e8660cd2a4d0fa0ffe7" translate="yes" xml:space="preserve">
          <source>When passed a key name, will remove that key from the storage.</source>
          <target state="translated">キー名を渡すと、そのキーをストレージから削除します。</target>
        </trans-unit>
        <trans-unit id="7a49270cc6131e60ab2563477a2294fb09d3b2ca" translate="yes" xml:space="preserve">
          <source>When passed a key name, will return that key's value.</source>
          <target state="translated">キー名を渡すと、そのキーの値を返します。</target>
        </trans-unit>
        <trans-unit id="1113729c3b7579559ff96b61dada291309f8c0be" translate="yes" xml:space="preserve">
          <source>When passed a number n, this method will return the name of the nth key in the storage.</source>
          <target state="translated">数値 n を渡すと、このメソッドはストレージ内の n 番目のキーの名前を返します。</target>
        </trans-unit>
        <trans-unit id="8095e25b62d000e13eb6255863c379be3b074531" translate="yes" xml:space="preserve">
          <source>When passed a valid media configuration, it returns a promise with information as to whether the media type is supported, and whether decoding such media would be smooth and power efficient.</source>
          <target state="translated">有効なメディア設定が渡されると、メディアタイプがサポートされているかどうか、そのようなメディアのデコードがスムーズで電力効率が良いかどうかの情報を持つ約束を返します。</target>
        </trans-unit>
        <trans-unit id="d7cc6fdf4f61b0a31f3b2ea3f41b6a93345e0d8e" translate="yes" xml:space="preserve">
          <source>When passed a valid media configuration, it returns a promise with information as to whether the media type is supported, and whether encoding such media would be smooth and power efficient.</source>
          <target state="translated">有効なメディア設定を渡すと、メディアタイプがサポートされているかどうか、そのようなメディアのエンコードがスムーズで電力効率が良いかどうかなどの情報を含むプロミスを返します。</target>
        </trans-unit>
        <trans-unit id="b5dbb8016e4e618bf1d6de3834052f9e1c14f2dd" translate="yes" xml:space="preserve">
          <source>When playing sound on the web, it's important to allow the user to control it. Depending on the use case, there's a myriad of options, but we'll provide functionality to play/pause the sound, alter the track's volume, and pan it from left to right.</source>
          <target state="translated">ウェブ上でサウンドを再生する場合、ユーザーがコントロールできるようにすることが重要です。用途にもよりますが、音の再生/一時停止、トラックの音量変更、左から右へのパンなどの機能を提供します。</target>
        </trans-unit>
        <trans-unit id="25caa96ed56e35d7d2b9bc8eaa2fad4a2feb8036" translate="yes" xml:space="preserve">
          <source>When pointer capture is set, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerover&quot;&gt;&lt;code&gt;pointerover&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerout&quot;&gt;&lt;code&gt;pointerout&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerenter&quot;&gt;&lt;code&gt;pointerenter&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerleave&quot;&gt;&lt;code&gt;pointerleave&lt;/code&gt;&lt;/a&gt; events are only generated when crossing the boundary of the element that has capture set since other elements can no longer be targeted by the pointer. This has the effect of suppressing these events on all other elements.</source>
          <target state="translated">ポインタキャプチャが設定されている場合、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerover&quot;&gt; &lt;code&gt;pointerover&lt;/code&gt; は&lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerout&quot;&gt; &lt;code&gt;pointerout&lt;/code&gt; の&lt;/a&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerenter&quot;&gt; &lt;code&gt;pointerenter&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/PointerEvent/pointerleave&quot;&gt; &lt;code&gt;pointerleave&lt;/code&gt; &lt;/a&gt;他の要素はもはやポインタによって標的とすることができるので、キャプチャが設定されていない要素の境界を横断するときにイベントにのみ生成されます。これは、他のすべての要素でこれらのイベントを抑制する効果があります。</target>
        </trans-unit>
        <trans-unit id="803eb401ef9424c0dd1a55a8c44174f01a800482" translate="yes" xml:space="preserve">
          <source>When possible, avoid polling &lt;code&gt;muted&lt;/code&gt; to monitor the track's muting status. Instead, add event listeners for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mute&quot;&gt;mute&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unmute&quot;&gt;unmute&lt;/a&gt;&lt;/code&gt; events.</source>
          <target state="translated">可能であれば、トラックのミューティング状態を監視するために &lt;code&gt;muted&lt;/code&gt; たポーリングを回避します。代わりに、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mute&quot;&gt;mute&lt;/a&gt;&lt;/code&gt; イベントとミュート &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unmute&quot;&gt;unmute&lt;/a&gt;&lt;/code&gt; イベントのイベントリスナーを追加します。</target>
        </trans-unit>
        <trans-unit id="b1912c7e2a7ad62198a0f08bd99551faf6ff11ae" translate="yes" xml:space="preserve">
          <source>When preparing to open an &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, you can change the codec parameters from the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent's&lt;/a&gt; default configuration by calling &lt;code&gt;setCodecParameters()&lt;/code&gt;&lt;em&gt;before&lt;/em&gt; calling either &lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt;&lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt;&lt;code&gt;createAnswer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;を開く準備をするとき、&lt;a href=&quot;../rtcpeerconnection/createoffer&quot;&gt; &lt;code&gt;RTCPeerConnection.createOffer()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../rtcpeerconnection/createanswer&quot;&gt; &lt;code&gt;createAnswer()&lt;/code&gt; を&lt;/a&gt;呼び出す&lt;em&gt;前に&lt;/em&gt; &lt;code&gt;setCodecParameters()&lt;/code&gt; を呼び出すことにより、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザーエージェントの&lt;/a&gt;デフォルト設定からコーデックパラメータを変更できます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4ee6493009b6431b9980b49942a6355d2a9ef723" translate="yes" xml:space="preserve">
          <source>When problems occur (such as a network timeout or issues pertaining to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS&quot;&gt;access control&lt;/a&gt;), an error event is generated. You can take action on this programmatically by implementing the &lt;code&gt;onerror&lt;/code&gt; callback on the EventSource object:</source>
          <target state="translated">ネットワークタイムアウトや&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS&quot;&gt;アクセス制御&lt;/a&gt;に関する問題などの問題が発生すると、エラーイベントが生成されます。EventSourceオブジェクトに &lt;code&gt;onerror&lt;/code&gt; コールバックを実装することにより、プログラムでこれを実行できます。</target>
        </trans-unit>
        <trans-unit id="43967ee727b9fa7d551a4702810bf536a051500b" translate="yes" xml:space="preserve">
          <source>When put all together with the rest of the HTML and the CSS not shown above, it looks and works like this:</source>
          <target state="translated">残りのHTMLと上に表示されていないCSSと一緒にまとめてみると、こんな感じになります。</target>
        </trans-unit>
        <trans-unit id="1d22a87170e59c2c29ea0fb54d09a04db32671bb" translate="yes" xml:space="preserve">
          <source>When reading the description (returned by &lt;a href=&quot;../rtcpeerconnection/localdescription&quot;&gt;&lt;code&gt;RTCPeerConnection.localDescription&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../rtcpeerconnection/remotedescription&quot;&gt;&lt;code&gt;RTCPeerConnection.remoteDescription&lt;/code&gt;&lt;/a&gt;), the returned value is the value of &lt;code&gt;pendingLocalDescription&lt;/code&gt;/&lt;code&gt;pendingRemoteDescription&lt;/code&gt; if there's a pending description (that is, the pending description isn't &lt;code&gt;null&lt;/code&gt;); otherwise, the current description (&lt;code&gt;currentLocalDescription&lt;/code&gt;/&lt;code&gt;currentRemoteDescription&lt;/code&gt;) is returned.</source>
          <target state="translated">説明（&lt;a href=&quot;../rtcpeerconnection/localdescription&quot;&gt; &lt;code&gt;RTCPeerConnection.localDescription&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../rtcpeerconnection/remotedescription&quot;&gt; &lt;code&gt;RTCPeerConnection.remoteDescription&lt;/code&gt; &lt;/a&gt;によって返される）を読み取るとき、保留中の説明がある（つまり、保留中の説明が &lt;code&gt;null&lt;/code&gt; ではない）場合、戻り値は &lt;code&gt;pendingLocalDescription&lt;/code&gt; / &lt;code&gt;pendingRemoteDescription&lt;/code&gt; の値です。それ以外の場合は、現在の説明（ &lt;code&gt;currentLocalDescription&lt;/code&gt; / &lt;code&gt;currentRemoteDescription&lt;/code&gt; ）が返されます。</target>
        </trans-unit>
        <trans-unit id="8612bf8e013b9fd3e94709a3077ed536e8f96a80" translate="yes" xml:space="preserve">
          <source>When recording has stopped, the &lt;code&gt;state&lt;/code&gt; property returns a value of &quot;inactive&quot;, and a stop event is fired. We register an event handler for this using &lt;a href=&quot;../mediarecorder/onstop&quot;&gt;&lt;code&gt;mediaRecorder.onstop&lt;/code&gt;&lt;/a&gt;, and finalize our blob there from all the chunks we have received:</source>
          <target state="translated">記録が停止すると、 &lt;code&gt;state&lt;/code&gt; プロパティは「非アクティブ」の値を返し、停止イベントが発生します。このために&lt;a href=&quot;../mediarecorder/onstop&quot;&gt; &lt;code&gt;mediaRecorder.onstop&lt;/code&gt; &lt;/a&gt;を使用してイベントハンドラーを登録し、受け取ったすべてのチャンクからBLOBをファイナライズします。</target>
        </trans-unit>
        <trans-unit id="cdeaeeb318f26705d3a5c755ea0f3c87fa0ffab4" translate="yes" xml:space="preserve">
          <source>When retrieving a dropped link, you should ensure you handle the case where multiple links may have been dragged, including any comments that appear in the data. For convenience, the special type &lt;code&gt;URL&lt;/code&gt; may be used to refer to the first valid link within the data for the &lt;code&gt;text/uri-list&lt;/code&gt; type. You should not add data using the &lt;code&gt;URL&lt;/code&gt; type; attempting to do so will just set the value of the &lt;code&gt;text/uri-list&lt;/code&gt; type instead.</source>
          <target state="translated">ドロップされたリンクを取得するときは、データに表示されるコメントを含め、複数のリンクがドラッグされた可能性がある場合に対処する必要があります。便宜上、特別なタイプの &lt;code&gt;URL&lt;/code&gt; を使用して、 &lt;code&gt;text/uri-list&lt;/code&gt; タイプのデータ内の最初の有効なリンクを参照できます。 &lt;code&gt;URL&lt;/code&gt; タイプを使用してデータを追加しないでください。そうしようとすると、代わりに &lt;code&gt;text/uri-list&lt;/code&gt; タイプの値が設定されます。</target>
        </trans-unit>
        <trans-unit id="696d52160b1e3be1741d07cdf9d07723c2cf0c7f" translate="yes" xml:space="preserve">
          <source>When set to &lt;var&gt;no or 0&lt;/var&gt;, this feature removes the system close command icon and system close menu item. It will only work for dialog windows (&lt;code&gt;dialog&lt;/code&gt; feature set). &lt;code&gt;close=no&lt;/code&gt; will override &lt;code&gt;minimizable=yes&lt;/code&gt;.</source>
          <target state="translated">&lt;var&gt;no or 0&lt;/var&gt; 設定すると、この機能により、システムの閉じるコマンドアイコンとシステムの閉じるメニュー項目が削除されます。ダイアログウィンドウ（ &lt;code&gt;dialog&lt;/code&gt; 機能セット）でのみ機能します。 &lt;code&gt;close=no&lt;/code&gt; は &lt;code&gt;minimizable=yes&lt;/code&gt; をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="15ee8d812737b39143c7fb57d7614507069983a4" translate="yes" xml:space="preserve">
          <source>When setting &lt;code&gt;responseType&lt;/code&gt; to a particular value, the author should make sure that the server is actually sending a response compatible with that format. If the server returns data that is not compatible with the &lt;code&gt;responseType&lt;/code&gt; that was set, the value of &lt;a href=&quot;response&quot;&gt;&lt;code&gt;response&lt;/code&gt;&lt;/a&gt; will be &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;responseType&lt;/code&gt; を特定の値に設定する場合、作成者はサーバーがその形式と互換性のある応答を実際に送信していることを確認する必要があります。互換性のないサーバリターンデータ場合 &lt;code&gt;responseType&lt;/code&gt; 設定された、の値&lt;a href=&quot;response&quot;&gt; &lt;code&gt;response&lt;/code&gt; &lt;/a&gt;になり &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a590456297f1f8daa1809fc0ea3649d7f02dce02" translate="yes" xml:space="preserve">
          <source>When setting our coefficients, the &lt;code&gt;feedforward&lt;/code&gt; values can't all be set to zero, otherwise nothing would be sent to the filter. Something like this is acceptable:</source>
          <target state="translated">係数を設定するとき、 &lt;code&gt;feedforward&lt;/code&gt; 値をすべてゼロに設定することはできません。そうしないと、フィルターに何も送信されません。このようなものは許容されます：</target>
        </trans-unit>
        <trans-unit id="2319f30338438d879bc2e193b33159ccd9fe8936" translate="yes" xml:space="preserve">
          <source>When setting the value of &lt;code&gt;direction&lt;/code&gt;, the following exceptions can occur:</source>
          <target state="translated">&lt;code&gt;direction&lt;/code&gt; の値を設定すると、次の例外が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="98988dc7aa1cb1eb0462f1becd5ffb24aa01eb7d" translate="yes" xml:space="preserve">
          <source>When starting the signaling process, an &lt;strong&gt;offer&lt;/strong&gt; is created by the user initiating the call. This offer includes a session description, in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt; format, and needs to be delivered to the receiving user, which we'll call the &lt;strong&gt;callee&lt;/strong&gt;. The callee responds to the offer with an &lt;strong&gt;answer&lt;/strong&gt; message, also containing an SDP description. Our signaling server will use WebSocket to transmit offer messages with the type &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt;, and answer messages with the type &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt;. These messages have the following fields:</source>
          <target state="translated">シグナリングプロセスを開始すると、コールを開始したユーザーによって&lt;strong&gt;オファー&lt;/strong&gt;が作成されます。このオファーには、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/SDP&quot;&gt;SDP&lt;/a&gt;形式のセッションの説明が含まれており、受信ユーザーに配信する必要があります。これを&lt;strong&gt;呼び出し先&lt;/strong&gt;と呼びます。呼び出し先は、SDPの説明を含む&lt;strong&gt;応答&lt;/strong&gt;メッセージでオファーに&lt;strong&gt;応答し&lt;/strong&gt;ます。シグナリングサーバーは、WebSocketを使用して、タイプが &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; のオファーメッセージとタイプが &lt;code&gt;&quot;video-answer&quot;&lt;/code&gt; の応答メッセージを送信します。これらのメッセージには次のフィールドがあります。</target>
        </trans-unit>
        <trans-unit id="81bc27e6843e09c3f87f20bab3f68914edebd437" translate="yes" xml:space="preserve">
          <source>When testing you can get around the HTTPS restriction by checking the &quot;Enable Service Workers over HTTP (when toolbox is open)&quot; option in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Settings&quot;&gt;Firefox Developer Tools settings&lt;/a&gt;.</source>
          <target state="translated">テストする場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Settings&quot;&gt;Firefox開発者ツールの設定で&lt;/a&gt; [HTTPを介してService Workersを有効にする（ツールボックスが開いている場合）]オプションをオンにすることで、HTTPS制限を回避できます。</target>
        </trans-unit>
        <trans-unit id="3dce835c28213f3bb867cdb69f7c2acf000e9f3c" translate="yes" xml:space="preserve">
          <source>When that happens, we know the video has started playing, so we call our &lt;code&gt;getCurrentSettings()&lt;/code&gt; function (described above) to display the actual settings that the browser decided upon after considering our constraints and the capabilities of the hardware.</source>
          <target state="translated">これが発生すると、ビデオの再生が開始されたことがわかりますので、 &lt;code&gt;getCurrentSettings()&lt;/code&gt; 関数（上記）を呼び出して、ハードウェアの制約と機能を考慮した後、ブラウザーが決定した実際の設定を表示します。</target>
        </trans-unit>
        <trans-unit id="170458374de8d9d34b21effc3f5cd7cf1d8ede7e" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../datatransfer&quot;&gt;&lt;code&gt;DataTransfer&lt;/code&gt;&lt;/a&gt; object is created, &lt;code&gt;dropEffect&lt;/code&gt; is set to a string value. On getting, it returns its current value. On setting, if the new value is one of the values listed below, then the property's current value will be set to the new value and other values will be ignored.</source>
          <target state="translated">とき&lt;a href=&quot;../datatransfer&quot;&gt; &lt;code&gt;DataTransfer&lt;/code&gt; &lt;/a&gt;オブジェクトが作成され、 &lt;code&gt;dropEffect&lt;/code&gt; プロパティは、文字列値に設定されています。取得すると、現在の値を返します。設定時に、新しい値が下記の値のいずれかである場合、プロパティの現在の値は新しい値に設定され、他の値は無視されます。</target>
        </trans-unit>
        <trans-unit id="1e4a897014deee64b512b044886966ea42c42661" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; object's ICE connection state changes to &lt;code&gt;&quot;failed&quot;&lt;/code&gt;, you should try to trigger an &lt;a href=&quot;../webrtc_api/session_lifetime#ICE_restart&quot;&gt;ICE restart&lt;/a&gt;.</source>
          <target state="translated">とき&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; の&lt;/a&gt;オブジェクトのICE接続状態に変わり &lt;code&gt;&quot;failed&quot;&lt;/code&gt; 、あなたがトリガするようにしてください&lt;a href=&quot;../webrtc_api/session_lifetime#ICE_restart&quot;&gt;ICEの再起動を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5f2e55a38c36655d933210552203f47251809730" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;fetch request&lt;/a&gt; is initiated, we pass in the &lt;code&gt;AbortSignal&lt;/code&gt; as an option inside the request's options object (see &lt;code&gt;{signal}&lt;/code&gt;, below). This associates the signal and controller with the fetch request and allows us to abort it by calling &lt;a href=&quot;abort&quot;&gt;&lt;code&gt;AbortController.abort()&lt;/code&gt;&lt;/a&gt;, as seen below in the second event listener.</source>
          <target state="translated">場合&lt;a href=&quot;../windoworworkerglobalscope/fetch&quot;&gt;フェッチ要求が&lt;/a&gt;開始され、我々は渡し &lt;code&gt;AbortSignal&lt;/code&gt; （参照要求のオプション・オブジェクト内のオプションとして &lt;code&gt;{signal}&lt;/code&gt; 以下）。これにより、信号とコントローラーがフェッチ要求に関連付けられ、以下の2番目のイベントリスナーに示されているように、&lt;a href=&quot;abort&quot;&gt; &lt;code&gt;AbortController.abort()&lt;/code&gt; を&lt;/a&gt;呼び出すことで信号とコントローラーを中止できます。</target>
        </trans-unit>
        <trans-unit id="bfb74bd244de5d5466e811370eee97f905789dcf" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;fetch request&lt;/a&gt; is initiated, we pass in the &lt;code&gt;AbortSignal&lt;/code&gt; as an option inside the request's options object (see &lt;code&gt;{signal}&lt;/code&gt;, below). This associates the signal and controller with the fetch request and allows us to abort it by calling &lt;a href=&quot;abortcontroller/abort&quot;&gt;&lt;code&gt;AbortController.abort()&lt;/code&gt;&lt;/a&gt;, as seen below in the second event listener.</source>
          <target state="translated">場合&lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;フェッチ要求が&lt;/a&gt;開始され、我々は渡し &lt;code&gt;AbortSignal&lt;/code&gt; （参照要求のオプション・オブジェクト内のオプションとして &lt;code&gt;{signal}&lt;/code&gt; 以下）。これにより、信号とコントローラーがフェッチ要求に関連付けられ、以下の2番目のイベントリスナーに示されているように、&lt;a href=&quot;abortcontroller/abort&quot;&gt; &lt;code&gt;AbortController.abort()&lt;/code&gt; を&lt;/a&gt;呼び出すことで信号とコントローラーを中止できます。</target>
        </trans-unit>
        <trans-unit id="0b4be292eea0d62bed233f932a55f02cfb7dc31c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt; offer is received by the remote peer, it calls its &lt;code&gt;holdEnded()&lt;/code&gt; method:</source>
          <target state="translated">場合 &lt;code&gt;&quot;sendrecv&quot;&lt;/code&gt; オファーがリモートピアによって受信され、その呼び出し &lt;code&gt;holdEnded()&lt;/code&gt; メソッドを：</target>
        </trans-unit>
        <trans-unit id="6e0833b39914236c0c18fdf6c35e8d2ad6272fdb" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event handler terminated, that is when the load event is completed. If this event has not yet been sent, or is not yet completed, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">ときに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントハンドラが終了し、ロードイベントが完了すると、それはです。このイベントがまだ送信されていないか、まだ完了していない場合は、 &lt;code&gt;0.&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="155be4bdc0e49aedda66d74b36e03f99a0570c78" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event was sent for the current document. If this event has not yet been sent, it returns &lt;code&gt;0.&lt;/code&gt;</source>
          <target state="translated">現在のドキュメントに対して &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントが送信されたとき。このイベントがまだ送信されていない場合は、 &lt;code&gt;0.&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="6cd684a1da502ba55e06034dbbe608b4c135ecec" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousedown&quot;&gt;mousedown&lt;/a&gt;&lt;/code&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Mouseover&quot;&gt;&lt;code&gt;mouseover&lt;/code&gt;&lt;/a&gt; event occurs on a key, we want to start playing the corresponding note. The &lt;code&gt;notePressed()&lt;/code&gt; function is used as the event handler for these events.</source>
          <target state="translated">ときに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/mousedown&quot;&gt;mousedown&lt;/a&gt;&lt;/code&gt; または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Mouseover&quot;&gt; &lt;code&gt;mouseover&lt;/code&gt; &lt;/a&gt;イベントがキーに発生し、我々は対応するノートの再生を開始します。 &lt;code&gt;notePressed()&lt;/code&gt; 関数は、これらのイベントのイベントハンドラとして使用されています。</target>
        </trans-unit>
        <trans-unit id="42ebd58fc29230c0a260ba3031de970a3c61db76" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event handler finishes. If there is no previous document, or if the previous document, or one of the needed redirects, is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; イベントハンドラーが終了したとき。前のドキュメントがない場合、または前のドキュメント、または必要なリダイレクトの1つが同じ生成元でない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="cc03a551d332d5cd1fa1a4ddf2018e191917b767" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event has been thrown, indicating the time at which the previous document in the window began to unload. If there is no previous document, or if the previous document or one of the needed redirects is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">ときに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; イベントは、ウィンドウ内の前のドキュメントがアンロードに開始された時刻を示す、スローされました。前のドキュメントがない場合、または前のドキュメントまたは必要なリダイレクトの1つが同じ生成元でない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2a47d8b540256fcfc3d14f8c14a13539b4826781" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;close&lt;/dfn&gt;()&lt;/code&gt; method is called on a &lt;a href=&quot;../presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; begins the process of closing the connection by sending an empty &lt;code&gt;closeMessage&lt;/code&gt; with the &lt;code&gt;closeReason&lt;/code&gt; set to &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="translated">場合 &lt;code&gt;&lt;dfn&gt;close&lt;/dfn&gt;()&lt;/code&gt; メソッドは、上で呼び出され&lt;a href=&quot;../presentationconnection&quot;&gt; &lt;code&gt;PresentationConnection&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザエージェントは&lt;/a&gt;空送信することによって、接続を閉じる処理始まる &lt;code&gt;closeMessage&lt;/code&gt; を有する &lt;code&gt;closeReason&lt;/code&gt; 用に設定 &lt;code&gt;closed&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="42ffa15d469d09132a6b45fcbd902817e8aa2270" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; method is called, the user agent &lt;em&gt;MUST&lt;/em&gt; run the following steps:</source>
          <target state="translated">とき &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; メソッドが呼び出されると、ユーザエージェントは、&lt;em&gt;しなければならない&lt;/em&gt;、次の手順を実行します。</target>
        </trans-unit>
        <trans-unit id="4391a06c9d0f2338a7c223835dc8fc4b32ce1dd6" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; method is called, the user agent &lt;em&gt;MUST&lt;/em&gt; run the steps as the link.</source>
          <target state="translated">とき &lt;code&gt;&lt;dfn&gt;getAvailability&lt;/dfn&gt;()&lt;/code&gt; メソッドが呼び出されると、ユーザエージェントは、&lt;em&gt;しなければならない&lt;/em&gt;リンクとしてのステップを実行します。</target>
        </trans-unit>
        <trans-unit id="15baee29e476d71d5e423c6e177f7644e49dc536" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;reconnect&lt;/dfn&gt;(presentationId)&lt;/code&gt; method is called on a &lt;code&gt;PresentationRequest&lt;/code&gt;&lt;var&gt;presentationRequest&lt;/var&gt;, the &lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-user-agents&quot;&gt;user agent&lt;/a&gt;&lt;em&gt;MUST&lt;/em&gt; run the following steps to</source>
          <target state="translated">ときに &lt;code&gt;&lt;dfn&gt;reconnect&lt;/dfn&gt;(presentationId)&lt;/code&gt; メソッドが呼び出された上 &lt;code&gt;PresentationRequest&lt;/code&gt; &lt;var&gt;presentationRequest&lt;/var&gt; 、&lt;a href=&quot;https://www.w3.org/TR/presentation-api/#dfn-user-agents&quot;&gt;ユーザーエージェントは、&lt;/a&gt;&lt;em&gt;しなければならない&lt;/em&gt;のは、次の手順を実行します。</target>
        </trans-unit>
        <trans-unit id="2fea13ca177f96f2cce88b05d8eb364696e1f353" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;&lt;dfn&gt;terminate&lt;/dfn&gt;()&lt;/code&gt; method is called on a &lt;a href=&quot;../presentationconnection&quot;&gt;&lt;code&gt;PresentationConnection&lt;/code&gt;&lt;/a&gt;, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; begins the process of terminating the presentation. The exact process differs depending on whether &lt;code&gt;terminate()&lt;/code&gt; is called in the controlling or the presenting context.</source>
          <target state="translated">ときに &lt;code&gt;&lt;dfn&gt;terminate&lt;/dfn&gt;()&lt;/code&gt; メソッドは、上で呼び出され&lt;a href=&quot;../presentationconnection&quot;&gt; &lt;code&gt;PresentationConnection&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;ユーザエージェントは、&lt;/a&gt;プレゼンテーションを終了するプロセスを開始します。正確なプロセスは、 &lt;code&gt;terminate()&lt;/code&gt; が制御コンテキストで呼び出されるか、現在のコンテキストで呼び出されるかによって異なります。</target>
        </trans-unit>
        <trans-unit id="afab87a55a2cbb60584dec7012dd16c616599150" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;VRDisplay&lt;/code&gt; is not presenting a scene, this is functionally equivalent to &lt;a href=&quot;../window/requestanimationframe&quot;&gt;&lt;code&gt;Window.requestAnimationFrame&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;VRDisplay&lt;/code&gt; がシーンを表示していない場合、これは機能的に&lt;a href=&quot;../window/requestanimationframe&quot;&gt; &lt;code&gt;Window.requestAnimationFrame&lt;/code&gt; &lt;/a&gt;と同等です。</target>
        </trans-unit>
        <trans-unit id="9bacba41f7f222545591f6432c766b199d19e287" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;VRDisplay&lt;/code&gt; is presenting, the callback is called at its native refresh rate.</source>
          <target state="translated">とき &lt;code&gt;VRDisplay&lt;/code&gt; が提示され、コールバックがその本来のリフレッシュレートで呼ばれています。</target>
        </trans-unit>
        <trans-unit id="ce9c61230318f6b91dfe6f655b2ab29cd51199b8" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;mode&lt;/code&gt; of a shadow root is &quot;&lt;code&gt;closed&lt;/code&gt;&quot;, the shadow root&amp;rsquo;s implementation internals are inaccessible and unchangeable from JavaScript&amp;mdash;in the same way the implementation internals of, for example, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element are inaccessible and unchangeable from JavaScript.</source>
          <target state="translated">とき &lt;code&gt;mode&lt;/code&gt; 影の根のが「 &lt;code&gt;closed&lt;/code&gt; 」、影のルートの実装の内部からアクセスできないと不変ですJavaScriptに同じ方法の実装の内部、例えば、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にはアクセスできないとJavaScriptから不変です。</target>
        </trans-unit>
        <trans-unit id="fc4934e8bd3a8da0e29e9d7f7b1ef67047ec5e45" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;oninstall&lt;/code&gt; handler completes, the service worker is considered installed.</source>
          <target state="translated">とき &lt;code&gt;oninstall&lt;/code&gt; ハンドラが完了すると、サービス従事者がインストールと考えられています。</target>
        </trans-unit>
        <trans-unit id="cf22449b85a37cdd14b29a36f972942979bbe90b" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;onunmute&lt;/code&gt; event handler is called, the track's &lt;a href=&quot;muted&quot;&gt;&lt;code&gt;muted&lt;/code&gt;&lt;/a&gt; flag is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">とき &lt;code&gt;onunmute&lt;/code&gt; イベントハンドラが呼び出され、トラックの&lt;a href=&quot;muted&quot;&gt; &lt;code&gt;muted&lt;/code&gt; &lt;/a&gt;フラグがある &lt;code&gt;false&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="60dc0f2a025f4d10adf32869bc65b2b714c66281" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;requestData()&lt;/code&gt; method is invoked, the browser queues a task that runs the following steps:</source>
          <target state="translated">とき &lt;code&gt;requestData()&lt;/code&gt; メソッドが呼び出されると、ブラウザは、次の手順を実行するタスクをキューイングします：</target>
        </trans-unit>
        <trans-unit id="90885fc32dbfbad8b23af1666efeb791aeccac8b" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;resume()&lt;/code&gt; method is invoked, the browser queues a task that runs the following steps:</source>
          <target state="translated">場合には &lt;code&gt;resume()&lt;/code&gt; メソッドが呼び出されると、ブラウザは、次の手順を実行するタスクをキューイングします：</target>
        </trans-unit>
        <trans-unit id="d86262e8364e3cf4d9684f7eb30500de8684042d" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;startRendering()&lt;/code&gt; promise resolves, rendering has completed and the output &lt;code&gt;AudioBuffer&lt;/code&gt; is returned out of the promise.</source>
          <target state="translated">とき &lt;code&gt;startRendering()&lt;/code&gt; 約束の解決さ、レンダリングが完了し、出力 &lt;code&gt;AudioBuffer&lt;/code&gt; は約束のうち返されます。</target>
        </trans-unit>
        <trans-unit id="c37cbd465b80e0d4ec473469eefaf3ae4e0eb9c3" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;stop()&lt;/code&gt; method is invoked, the UA queues a task that runs the following steps:</source>
          <target state="translated">ときに &lt;code&gt;stop()&lt;/code&gt; メソッドが呼び出され、UAは、次の手順を実行するタスクをキューイングします：</target>
        </trans-unit>
        <trans-unit id="e63c9a36b0456d2f72f7188fa624ad4d35c38d6a" translate="yes" xml:space="preserve">
          <source>When the IFrame has loaded, we register an &lt;code&gt;onclick&lt;/code&gt; handler for our button and an &lt;code&gt;onmessage&lt;/code&gt; handler for &lt;a href=&quot;../messagechannel/port1&quot;&gt;&lt;code&gt;MessageChannel.port1&lt;/code&gt;&lt;/a&gt;. Finally we transfer &lt;a href=&quot;../messagechannel/port2&quot;&gt;&lt;code&gt;MessageChannel.port2&lt;/code&gt;&lt;/a&gt; to the IFrame using the &lt;a href=&quot;../window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">IFrameが読み込まれたら、ボタンの &lt;code&gt;onclick&lt;/code&gt; ハンドラーと&lt;a href=&quot;../messagechannel/port1&quot;&gt; &lt;code&gt;MessageChannel.port1&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;onmessage&lt;/code&gt; ハンドラーを登録します。最後に、&lt;a href=&quot;../window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;メソッドを使用して&lt;a href=&quot;../messagechannel/port2&quot;&gt; &lt;code&gt;MessageChannel.port2&lt;/code&gt; &lt;/a&gt;をIFrameに転送します。</target>
        </trans-unit>
        <trans-unit id="dc1fb33c3cdd6daf218a397fb6256d6ed43ebfc8" translate="yes" xml:space="preserve">
          <source>When the IFrame has loaded, we register an &lt;code&gt;onmessage&lt;/code&gt; handler for &lt;a href=&quot;messagechannel/port1&quot;&gt;&lt;code&gt;MessageChannel.port1&lt;/code&gt;&lt;/a&gt; and transfer &lt;a href=&quot;messagechannel/port2&quot;&gt;&lt;code&gt;MessageChannel.port2&lt;/code&gt;&lt;/a&gt; to the IFrame using the &lt;a href=&quot;window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; method along with a message.</source>
          <target state="translated">IFrameが読み込まれたら、&lt;a href=&quot;messagechannel/port1&quot;&gt; &lt;code&gt;MessageChannel.port1&lt;/code&gt; の&lt;/a&gt; &lt;code&gt;onmessage&lt;/code&gt; ハンドラーを登録し、メッセージとともに&lt;a href=&quot;window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;メソッドを使用して&lt;a href=&quot;messagechannel/port2&quot;&gt; &lt;code&gt;MessageChannel.port2&lt;/code&gt; &lt;/a&gt;をIFrameに転送します。</target>
        </trans-unit>
        <trans-unit id="a7e4ad3a03781aabf88e28bcd4efb42210025bdc" translate="yes" xml:space="preserve">
          <source>When the MediaRecorder is recording, the &lt;a href=&quot;../mediarecorder/state&quot;&gt;&lt;code&gt;MediaRecorder.state&lt;/code&gt;&lt;/a&gt; property will return a value of &quot;recording&quot;.</source>
          <target state="translated">MediaRecorderが記録しているとき、&lt;a href=&quot;../mediarecorder/state&quot;&gt; &lt;code&gt;MediaRecorder.state&lt;/code&gt; &lt;/a&gt;プロパティは「recording」の値を返します。</target>
        </trans-unit>
        <trans-unit id="2bf78d4d77467531848593da2c12d66578716e7f" translate="yes" xml:space="preserve">
          <source>When the Pointer lock state changes&amp;mdash;for example, when calling &lt;a href=&quot;element/requestpointerlock&quot;&gt;&lt;code&gt;requestPointerLock()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;document/exitpointerlock&quot;&gt;&lt;code&gt;exitPointerLock()&lt;/code&gt;&lt;/a&gt;, the user pressing the ESC key, etc.&amp;mdash;the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; event is dispatched to the &lt;code&gt;document&lt;/code&gt;. This is a simple event and contains no extra data.</source>
          <target state="translated">場合ポインタロック状態の変化-例えば、呼び出すとき&lt;a href=&quot;element/requestpointerlock&quot;&gt; &lt;code&gt;requestPointerLock()&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;document/exitpointerlock&quot;&gt; &lt;code&gt;exitPointerLock()&lt;/code&gt; &lt;/a&gt;、ESCキーを押すユーザは、等- &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockchange&quot;&gt;pointerlockchange&lt;/a&gt;&lt;/code&gt; のイベントにディスパッチされる &lt;code&gt;document&lt;/code&gt; 。これは単純なイベントであり、追加のデータは含まれていません。</target>
        </trans-unit>
        <trans-unit id="4ea347fd70c4fb3150ede93f0a7797537c904ffe" translate="yes" xml:space="preserve">
          <source>When the Promise returned by &lt;code&gt;getUserMedia()&lt;/code&gt; is resolved, the preview &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; attribute is set to be the input stream, which causes the video being captured by the user's camera to be displayed in the preview box. Since the &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; element is muted, the audio won't play. The &quot;Download&quot; button's link is then set to refer to the stream as well. Then, in line 8, we arrange for &lt;code&gt;preview.captureStream()&lt;/code&gt; to call &lt;code&gt;preview.mozCaptureStream()&lt;/code&gt; so that our code will work on Firefox, on which the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/captureStream&quot;&gt;&lt;code&gt;MediaRecorder.captureStream()&lt;/code&gt;&lt;/a&gt; method is prefixed. Then a new &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; which resolves when the preview video starts to play is created and returned.</source>
          <target state="translated">&lt;code&gt;getUserMedia()&lt;/code&gt; によって返されたPromise が解決されると、プレビュー&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-srcobject&quot;&gt;srcobject&lt;/a&gt;&lt;/code&gt; 属性が入力ストリームに設定され、ユーザーのカメラでキャプチャされているビデオがプレビューボックスに表示されます。以来 &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; 要素がミュートされ、音声が再生されません。 [ダウンロード]ボタンのリンクは、ストリームも参照するように設定されます。その後、8行目では、我々は手配 &lt;code&gt;preview.captureStream()&lt;/code&gt; 呼び出すこと &lt;code&gt;preview.mozCaptureStream()&lt;/code&gt; 我々のコードは、その上のFirefox上で動作するように&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/captureStream&quot;&gt; &lt;code&gt;MediaRecorder.captureStream()&lt;/code&gt; &lt;/a&gt;メソッドが付けられます。その後、新しい&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt; プレビュービデオの再生が開始されたときに解決され、作成されて返されます。</target>
        </trans-unit>
        <trans-unit id="a615e8d216a008e09a0aaa6303aef7ad3335f0ba" translate="yes" xml:space="preserve">
          <source>When the amount of a target element which is visible within the root element crosses one of the visibility thresholds,</source>
          <target state="translated">ルート要素内で可視化されているターゲット要素の量が、可視化しきい値のいずれかを超えたときに、ルート要素内で可視化されているターゲット要素の量が、可視化しきい値のいずれかを超えたとき。</target>
        </trans-unit>
        <trans-unit id="32d7fed74aa3c9bf9e7b2463d00efc4b82768b3f" translate="yes" xml:space="preserve">
          <source>When the audio is played to the end, it loops, but you can control how long the loops last by altering &lt;code&gt;loopStart&lt;/code&gt; and &lt;code&gt;loopEnd&lt;/code&gt;. For example, if you set their values to 20 and 25, respectively, the audio will start to loop between 20 and 25 seconds in to the track.</source>
          <target state="translated">オーディオが最後まで再生されるとループしますが、 &lt;code&gt;loopStart&lt;/code&gt; と &lt;code&gt;loopEnd&lt;/code&gt; を変更することで、ループの継続時間を制御できます。たとえば、値をそれぞれ20と25に設定すると、オーディオはトラックの20秒と25秒の間でループし始めます。</target>
        </trans-unit>
        <trans-unit id="e24b0cc32d22e2488193cf1bd94e74f452949ea5" translate="yes" xml:space="preserve">
          <source>When the audio is played to the end, it loops, but you can control how long the loops last by altering &lt;code&gt;loopStart&lt;/code&gt; and &lt;code&gt;loopEnd&lt;/code&gt;. For example, if you set their values to 20 and 25, respectively, then begin playback, the sound will play normally until it reaches the 25 second mark. Then the current play position will loop back to the 20 second mark and continue playing until the 25 second mark, ad infinitum (or at least until &lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt; is called).</source>
          <target state="translated">オーディオが最後まで再生されるとループしますが、 &lt;code&gt;loopStart&lt;/code&gt; と &lt;code&gt;loopEnd&lt;/code&gt; を変更することで、ループの継続時間を制御できます。たとえば、値をそれぞれ20と25に設定して再生を開始すると、25秒のマークに達するまでサウンドは通常どおり再生されます。その後、現在の再生位置は20秒のマークにループバックし、25秒のマークまで無限に（または、少なくとも&lt;a href=&quot;../audioscheduledsourcenode/stop&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt;が呼び出されるまで）再生を続けます。</target>
        </trans-unit>
        <trans-unit id="39d3f50da9c0d82ba411371bee723b13d4be77b5" translate="yes" xml:space="preserve">
          <source>When the available disk space is filled up, the quota manager will start clearing out data based on an LRU policy &amp;mdash; the least recently used origin will be deleted first, then the next one, until the browser is no longer over the limit.</source>
          <target state="translated">利用可能なディスク領域がいっぱいになると、クォータマネージャーはLRUポリシーに基づいてデータの消去を開始します。ブラウザーが制限を超えなくなるまで、最も使用頻度の低いオリジンが最初に削除され、次に次のオリジンが削除されます。</target>
        </trans-unit>
        <trans-unit id="f0b279040d65102fcafc743e176713b9b8be7341" translate="yes" xml:space="preserve">
          <source>When the browser adds a new &quot;&lt;code&gt;frame&lt;/code&gt;&quot; entry to the performance timeline, both of the observer callbacks will be invoked.</source>
          <target state="translated">ブラウザが新しい「 &lt;code&gt;frame&lt;/code&gt; 」エントリをパフォーマンスタイムラインに追加すると、両方のオブザーバーコールバックが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="c4cbb2e1cb16505ffea56fb85c6e49a6dda278ae" translate="yes" xml:space="preserve">
          <source>When the browser detects that the target element (in our case, the one with the ID &lt;code&gt;&quot;box&quot;&lt;/code&gt;) has been unveiled or obscured such that its visibility ratio crosses one of the thresholds in our list, it calls our handler function, &lt;code&gt;handleIntersect()&lt;/code&gt;:</source>
          <target state="translated">ターゲット要素（この例ではID &lt;code&gt;&quot;box&quot;&lt;/code&gt; の要素）が明らかにされた、または不明瞭になって、可視性の比率がリスト内のしきい値の1つと交差したことをブラウザーが検出すると、ハンドラー関数 &lt;code&gt;handleIntersect()&lt;/code&gt; を呼び出します：</target>
        </trans-unit>
        <trans-unit id="8496a9863ad494d02d25096932d5f3577a3b859f" translate="yes" xml:space="preserve">
          <source>When the browser is ready to fetch the document using an HTTP request. This moment is &lt;em&gt;before&lt;/em&gt; the check to any application cache.</source>
          <target state="translated">ブラウザがHTTPリクエストを使用してドキュメントをフェッチする準備ができたとき。この瞬間は、アプリケーションキャッシュのチェックの&lt;em&gt;前&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="350a1fd062dc804995b1031003ef6f2de0f91e04" translate="yes" xml:space="preserve">
          <source>When the browser received the first byte of the response, from the server from a cache, or from a local resource.</source>
          <target state="translated">ブラウザがレスポンスの最初のバイトをキャッシュからサーバから、またはローカルリソースから受信した場合。</target>
        </trans-unit>
        <trans-unit id="105409482e116bc47983c4229d28d9dda32f73db" translate="yes" xml:space="preserve">
          <source>When the browser received the last byte of the response, or when the connection is closed if this happened first, from the server, the cache, or from a local resource.</source>
          <target state="translated">ブラウザがレスポンスの最後のバイトを受信したとき、または、サーバー、キャッシュ、またはローカルリソースのいずれかから先に発生した場合は接続が終了したとき。</target>
        </trans-unit>
        <trans-unit id="50ba4ed179b7791a1be1374a91e79aeb1d381644" translate="yes" xml:space="preserve">
          <source>When the browser sent the request to obtain the actual document, from the server or from a cache. If the transport layer fails after the start of the request and the connection is reopened, this property will be set to the time corresponding to the new request.</source>
          <target state="translated">ブラウザが実際の文書を取得するために要求を送信したとき,サーバから,あるいはキャッシュから。リクエストの開始後にトランスポート層が失敗して接続が再開された場合,このプロパティは新しいリクエストに対応する時間に設定される。</target>
        </trans-unit>
        <trans-unit id="beb363aa3681e984cec0e93d51cec6346c056a16" translate="yes" xml:space="preserve">
          <source>When the browser shuts down (because the user chose the Quit or Exit option), the disk containing the database is removed unexpectedly, or permissions are lost to the database store, the following things happen:</source>
          <target state="translated">ブラウザがシャットダウンしたとき(ユーザーが Quit または Exit オプションを選択したため)、データベースを含むディスクが予期せず削除されたとき、またはデータベースストアのパーミッションが失われたとき、次のようなことが起こります。</target>
        </trans-unit>
        <trans-unit id="61efc49afc4e840226c8362204bfe6b25d174615" translate="yes" xml:space="preserve">
          <source>When the button is clicked, the oscillator starts, and the &lt;code&gt;MediaRecorder&lt;/code&gt; is started. When the button is stopped, the oscillator and&lt;code&gt; MediaRecorder&lt;/code&gt; both stop. Stopping the &lt;code&gt;MediaRecorder&lt;/code&gt; causes the &lt;code&gt;dataavailable&lt;/code&gt; event to fire, and the event data is pushed into the &lt;code&gt;chunks&lt;/code&gt; array. After that, the &lt;code&gt;stop&lt;/code&gt; event fires, a new &lt;code&gt;blob&lt;/code&gt; is made of type opus &amp;mdash; which contains the data in the &lt;code&gt;chunks&lt;/code&gt; array, and a new window (tab) is then opened that points to a URL created from the blob.</source>
          <target state="translated">ボタンをクリックすると、オシレーターが起動し、 &lt;code&gt;MediaRecorder&lt;/code&gt; が起動します。ボタンが停止すると、オシレーターと &lt;code&gt; MediaRecorder&lt;/code&gt; の両方が停止します。 &lt;code&gt;MediaRecorder&lt;/code&gt; を停止すると、 &lt;code&gt;dataavailable&lt;/code&gt; イベントが発生し、イベントデータが &lt;code&gt;chunks&lt;/code&gt; 配列にプッシュされます。その後、 &lt;code&gt;stop&lt;/code&gt; イベントが発生し、 &lt;code&gt;chunks&lt;/code&gt; 配列のデータを含むopus型の新しい &lt;code&gt;blob&lt;/code&gt; が作成され、そのblobから作成されたURLを指す新しいウィンドウ（タブ）が開きます。</target>
        </trans-unit>
        <trans-unit id="533788242fd866bfaf98a429979be6b6c17e1071" translate="yes" xml:space="preserve">
          <source>When the button is pressed, the current position, orientation, etc. of the sensor/head mounted display is set to be 0 &amp;mdash; this makes the method useful for calibration when an app is first loaded.</source>
          <target state="translated">ボタンを押すと、センサー/ヘッドマウントディスプレイの現在の位置や向きなどが0に設定されます。これにより、アプリが最初に読み込まれたときのキャリブレーションにこのメソッドが役立ちます。</target>
        </trans-unit>
        <trans-unit id="aa3d1042776a40be3f647ebe46e6279e0edfe9dc" translate="yes" xml:space="preserve">
          <source>When the caller's &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICE layer comes up with a new candidate to propose, it issues an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event to &lt;code&gt;callerPC&lt;/code&gt;. The &lt;code&gt;icecandidate&lt;/code&gt; event handler's job is to transmit the candidate to the receiver. In our example, we are directly controlling both the caller and the receiver, so we can just directly add the candidate to the receiver by calling its &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;addIceCandidate()&lt;/code&gt;&lt;/a&gt; method. That's handled by &lt;code&gt;handleCallerIceEvent()&lt;/code&gt;:</source>
          <target state="translated">呼び出し元の &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICEレイヤーが提案する新しい候補を提示すると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; イベントを &lt;code&gt;callerPC&lt;/code&gt; に発行します。 &lt;code&gt;icecandidate&lt;/code&gt; のイベントハンドラの仕事は、受信機に候補者を送信することです。この例では、呼び出し側と受信側の両方を直接制御しているため、&lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt; &lt;code&gt;addIceCandidate()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで、候補を受信側に直接追加できます。これは、 &lt;code&gt;handleCallerIceEvent()&lt;/code&gt; によって処理されます。</target>
        </trans-unit>
        <trans-unit id="18d29ea866555b83f31f522311de83636997435a" translate="yes" xml:space="preserve">
          <source>When the calling &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; begins to receive media (after the microphone's stream is added to it), a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; event is delivered to the caller, letting it know that it's time to start negotiating the connection with the receiver. As previously mentioned, our example is simplified somewhat because we control both the caller and the receiver, so &lt;code&gt;handleCallerNegotiationNeeded()&lt;/code&gt; is able to quickly construct the connection by chaining the required calls together for both the caller and receiver, as shown below.</source>
          <target state="translated">呼び出すとき&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; は、&lt;/a&gt;（マイクの流れがそれに追加された後）メディアを受信し始め、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/negotiationneeded&quot;&gt;negotiationneeded&lt;/a&gt;&lt;/code&gt; イベントは、それが受信機との接続のネゴシエーションを開始する時が来たことを知らせる、呼び出し側に配信されます。前述のように、呼び出し側と受信側の両方を制御するため、この例は多少簡略化されています。以下に示すように、 &lt;code&gt;handleCallerNegotiationNeeded()&lt;/code&gt; は、呼び出し側と受信側の両方に必要な呼び出しをチェーンすることで接続をすばやく構築できます。</target>
        </trans-unit>
        <trans-unit id="c8cca7d1c8177e7f4f8aa1998030d5e56bd42c09" translate="yes" xml:space="preserve">
          <source>When the canvas is initialized or &lt;code&gt;beginPath()&lt;/code&gt; is called, you typically will want to use the &lt;code&gt;moveTo()&lt;/code&gt; function to place the starting point somewhere else. We could also use &lt;code&gt;moveTo()&lt;/code&gt; to draw unconnected paths. Take a look at the smiley face below.</source>
          <target state="translated">キャンバスが初期化されるか &lt;code&gt;beginPath()&lt;/code&gt; が呼び出されると、通常は &lt;code&gt;moveTo()&lt;/code&gt; 関数を使用して開始点を別の場所に配置します。 &lt;code&gt;moveTo()&lt;/code&gt; を使用して、接続されていないパスを描画することもできます。下のスマイリーフェイスを見てください。</target>
        </trans-unit>
        <trans-unit id="53eb8eba2a3daab13bf34be7e700aa658187cd56" translate="yes" xml:space="preserve">
          <source>When the connection is opened network. If the transport layer reports an error and the connection establishment is started again, the last connection establishment end time is given. If a persistent connection is used, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;. A connection is considered as opened when all secure connection handshake, or SOCKS authentication, is terminated.</source>
          <target state="translated">接続が開かれたネットワーク。トランスポート層がエラーを報告し、接続確立が再び開始された場合、最後の接続確立終了時刻が示されます。永続的な接続が使用されている場合、値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。すべての安全な接続ハンドシェイクまたはSOCKS認証が終了すると、接続は開いたと見なされます。</target>
        </trans-unit>
        <trans-unit id="76c9c3d99b351f029d70d5db9fd9568e6eb3a785" translate="yes" xml:space="preserve">
          <source>When the container does not scroll, but has overflowing children, these checks determine if the container can scroll:</source>
          <target state="translated">コンテナがスクロールしないが、オーバーフローしている子がある場合、これらのチェックは、コンテナがスクロールできるかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="f999374b8edb4032b0a23c52bc5ae64b0f926872" translate="yes" xml:space="preserve">
          <source>When the current port receives a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MIDIMessage&quot;&gt;&lt;code&gt;MIDIMessage&lt;/code&gt;&lt;/a&gt; it triggers a call to this event handler.</source>
          <target state="translated">現在のポートが&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MIDIMessage&quot;&gt; &lt;code&gt;MIDIMessage&lt;/code&gt; &lt;/a&gt;を受信すると、このイベントハンドラーへの呼び出しをトリガーします。</target>
        </trans-unit>
        <trans-unit id="612eb0282a020d53d02c4e2675af913b08ae504d" translate="yes" xml:space="preserve">
          <source>When the device proximity sensor detects a change between the device and an object, it notifies the browser of that change. When the browser gets such a notification, it fires a &lt;a href=&quot;deviceproximityevent&quot;&gt;&lt;code&gt;DeviceProximityEvent&lt;/code&gt;&lt;/a&gt; for any change, and a &lt;a href=&quot;userproximityevent&quot;&gt;&lt;code&gt;UserProximityEvent&lt;/code&gt;&lt;/a&gt; event in the case of a more rough change.</source>
          <target state="translated">デバイス近接センサーは、デバイスとオブジェクト間の変化を検出すると、その変化をブラウザーに通知します。ブラウザがこのような通知を受け取ると、それが発火&lt;a href=&quot;deviceproximityevent&quot;&gt; &lt;code&gt;DeviceProximityEvent&lt;/code&gt; を&lt;/a&gt;変更するために、そして&lt;a href=&quot;userproximityevent&quot;&gt; &lt;code&gt;UserProximityEvent&lt;/code&gt; の&lt;/a&gt;よりラフな変更の場合にイベント。</target>
        </trans-unit>
        <trans-unit id="6307cceb0ab0826ee9ad7c09c446be851e147976" translate="yes" xml:space="preserve">
          <source>When the dial button is clicked, &lt;code&gt;connectAndDial()&lt;/code&gt; is called. This starts building the WebRTC connection in preparation for sending the DTMF codes.</source>
          <target state="translated">ダイヤルボタンがクリックされると、 &lt;code&gt;connectAndDial()&lt;/code&gt; が呼び出されます。これにより、DTMFコードを送信する準備として、WebRTC接続の構築が始まります。</target>
        </trans-unit>
        <trans-unit id="c7f73abc508f8682c32e1f3e323ea5afcdb1d543" translate="yes" xml:space="preserve">
          <source>When the domain lookup is finished. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">ドメインの検索が終了したとき。永続的な接続が使用されている場合、または情報がキャッシュまたはローカルリソースに格納されている場合、値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="6ad592848fdf8928a7eb321d91c7c9a32dae5882" translate="yes" xml:space="preserve">
          <source>When the domain lookup starts. If a persistent connection is used, or the information is stored in a cache or a local resource, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">ドメインルックアップが開始されたとき。永続的な接続が使用されている場合、または情報がキャッシュまたはローカルリソースに格納されている場合、値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="9ce1a04e3c286d36884562c0642e05dc2a986176" translate="yes" xml:space="preserve">
          <source>When the element does not have a first child, then &lt;code&gt;firstChild&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. The element is still appended to the parent, after the last child. Since the parent element did not have a first child, it did not have a last child either. Consequently, the new element is the only element, after insertion.</source>
          <target state="translated">要素に最初の子がない場合、 &lt;code&gt;firstChild&lt;/code&gt; は &lt;code&gt;null&lt;/code&gt; です。要素は最後の子の後に親に追加されます。親要素には最初の子がないため、最後の子もありませんでした。したがって、挿入後の新しい要素は唯一の要素です。</target>
        </trans-unit>
        <trans-unit id="8eff7324c9524a5ccfee088b6bad52429f10f081" translate="yes" xml:space="preserve">
          <source>When the first HTTP redirect starts. If there is no redirect, or if one of the redirects is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">最初のHTTPリダイレクトが開始したとき。リダイレクトがない場合、またはリダイレクトの1つが同じオリジンでない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="ffba0997651e82706a57373f5ce453c0458a27a8" translate="yes" xml:space="preserve">
          <source>When the following code is used inside a service worker to respond to a push messages by sending the data received via &lt;a href=&quot;../pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; to the main context via a &lt;a href=&quot;../channel_messaging_api&quot;&gt;channel message&lt;/a&gt;, the event object of &lt;code&gt;onmessage&lt;/code&gt; will be a &lt;code&gt;ExtendableMessageEvent&lt;/code&gt;.</source>
          <target state="translated">次のコードを介して受信したデータを送信することにより、プッシュメッセージに応答するサービスワーカー内で使用される場合&lt;a href=&quot;../pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; を&lt;/a&gt;介して主コンテキストに&lt;a href=&quot;../channel_messaging_api&quot;&gt;チャネル・メッセージ&lt;/a&gt;のイベントオブジェクト &lt;code&gt;onmessage&lt;/code&gt; あろう &lt;code&gt;ExtendableMessageEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="a84bb2c2165f75feccb7fb59ab1acd531f76be6e" translate="yes" xml:space="preserve">
          <source>When the following code is used inside a service worker to respond to a push messages by sending the data received via &lt;a href=&quot;pushmessagedata&quot;&gt;&lt;code&gt;PushMessageData&lt;/code&gt;&lt;/a&gt; to the main context via a &lt;a href=&quot;channel_messaging_api&quot;&gt;channel message&lt;/a&gt;, the event object of &lt;code&gt;onmessage&lt;/code&gt; will be a &lt;code&gt;ExtendableMessageEvent&lt;/code&gt;.</source>
          <target state="translated">次のコードを介して受信したデータを送信することにより、プッシュメッセージに応答するサービスワーカー内で使用される場合&lt;a href=&quot;pushmessagedata&quot;&gt; &lt;code&gt;PushMessageData&lt;/code&gt; を&lt;/a&gt;介して主コンテキストに&lt;a href=&quot;channel_messaging_api&quot;&gt;チャネル・メッセージ&lt;/a&gt;のイベントオブジェクト &lt;code&gt;onmessage&lt;/code&gt; あろう &lt;code&gt;ExtendableMessageEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="2f311172178989f9d4dc13b5188cf4041e8ebf5b" translate="yes" xml:space="preserve">
          <source>When the following code is used inside the main thread to set up a message channel between it and a service worker for sending messages between the two, the event object of &lt;code&gt;onmessage&lt;/code&gt; will be a &lt;code&gt;ServiceWorkerMessageEvent&lt;/code&gt;.</source>
          <target state="translated">以下のコードは二つの間でメッセージを送信することと、サービス員との間のメッセージ・チャネルをセットアップするためにメインスレッド内で使用される場合のイベントオブジェクト &lt;code&gt;onmessage&lt;/code&gt; あろう &lt;code&gt;ServiceWorkerMessageEvent&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="3bac4700ec5c761184b42bc84aedc27117745e7b" translate="yes" xml:space="preserve">
          <source>When the form is submitted, an event handler is run that puts the entered values into a ScrollToOptions dictionary, and then invokes the &lt;a href=&quot;../window/scrollto&quot;&gt;&lt;code&gt;Window.ScrollTo()&lt;/code&gt;&lt;/a&gt; method, passing the dictionary as a parameter:</source>
          <target state="translated">フォームが送信されると、入力された値をScrollToOptions辞書に入れるイベントハンドラーが実行され、&lt;a href=&quot;../window/scrollto&quot;&gt; &lt;code&gt;Window.ScrollTo()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、辞書をパラメーターとして渡します。</target>
        </trans-unit>
        <trans-unit id="699cc75134158d3a793326f96977d944bea59451" translate="yes" xml:space="preserve">
          <source>When the form is submitted, an event handler is run that puts the entered values into a ScrollToOptions dictionary, and then invokes the &lt;a href=&quot;window/scrollto&quot;&gt;&lt;code&gt;Window.ScrollTo()&lt;/code&gt;&lt;/a&gt; method, passing the dictionary as a parameter:</source>
          <target state="translated">フォームが送信されると、入力された値をScrollToOptions辞書に入れるイベントハンドラーが実行され、&lt;a href=&quot;window/scrollto&quot;&gt; &lt;code&gt;Window.ScrollTo()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、辞書をパラメーターとして渡します。</target>
        </trans-unit>
        <trans-unit id="902216d2ce5fc2ca7a98151ccb8cbfac79f84472" translate="yes" xml:space="preserve">
          <source>When the function returns &lt;code&gt;true&lt;/code&gt;, this prevents the firing of the default event handler.</source>
          <target state="translated">関数が &lt;code&gt;true&lt;/code&gt; を返す場合、これはデフォルトのイベントハンドラーの起動を防ぎます。</target>
        </trans-unit>
        <trans-unit id="ba06b9cdd699f177726e7f57bcdcd3cd88b9d315" translate="yes" xml:space="preserve">
          <source>When the intial message is received from the main page via the &lt;a href=&quot;../window/postmessage&quot;&gt;&lt;code&gt;window.postMessage&lt;/code&gt;&lt;/a&gt; method, we run the &lt;code&gt;initPort&lt;/code&gt; function. This saves the transfered port and register an onmessage handler that will be called each time a message is passed through our &lt;a href=&quot;../messagechannel&quot;&gt;&lt;code&gt;MessageChannel&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メインページから&lt;a href=&quot;../window/postmessage&quot;&gt; &lt;code&gt;window.postMessage&lt;/code&gt; &lt;/a&gt;メソッドを介して初期メッセージを受信すると、 &lt;code&gt;initPort&lt;/code&gt; 関数を実行します。これにより、転送されたポートが保存され、メッセージが&lt;a href=&quot;../messagechannel&quot;&gt; &lt;code&gt;MessageChannel&lt;/code&gt; &lt;/a&gt;を介して渡されるたびに呼び出されるonmessageハンドラーが登録されます。</target>
        </trans-unit>
        <trans-unit id="dfa418df41a8e2c804b46c47c170e8d2746bbbba" translate="yes" xml:space="preserve">
          <source>When the key is first depressed, the &lt;code&gt;keydown&lt;/code&gt; event is sent.</source>
          <target state="translated">キーが最初に押されたときに、 &lt;code&gt;keydown&lt;/code&gt; イベントが送信されます。</target>
        </trans-unit>
        <trans-unit id="9bf05f6fc0519d8976526ddb13344e76d19faee8" translate="yes" xml:space="preserve">
          <source>When the last HTTP redirect is completed, that is when the last byte of the HTTP response has been received. If there is no redirect, or if one of the redirects is not of the same origin, the value returned is &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">最後のHTTPリダイレクトが完了したとき、つまりHTTP応答の最後のバイトが受信されたときです。リダイレクトがない場合、またはリダイレクトの1つが同じオリジンでない場合、返される値は &lt;code&gt;0&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="9b57ce896dfd5cd7a4903a914d77303cd695f765" translate="yes" xml:space="preserve">
          <source>When the light sensor of a device detects a change in the light level, it notifies the browser of that change. When the browser gets such a notification, it fires a &lt;a href=&quot;devicelightevent&quot;&gt;&lt;code&gt;DeviceLightEvent&lt;/code&gt;&lt;/a&gt; event that provides information about the exact light intensity (in lux units).</source>
          <target state="translated">デバイスの光センサーが光レベルの変化を検出すると、その変化をブラウザーに通知します。ブラウザーがそのような通知を&lt;a href=&quot;devicelightevent&quot;&gt; &lt;code&gt;DeviceLightEvent&lt;/code&gt; &lt;/a&gt;、正確な光度（ルクス単位）に関する情報を提供するDeviceLightEventイベントを発生させます。</target>
        </trans-unit>
        <trans-unit id="560082e7dcd947cb29a93eede56e926881ba8fc5" translate="yes" xml:space="preserve">
          <source>When the local peer experiences an open or close event, the &lt;code&gt;handleSendChannelStatusChange()&lt;/code&gt; method is called:</source>
          <target state="translated">ローカルピアでopenまたはcloseイベントが発生すると、 &lt;code&gt;handleSendChannelStatusChange()&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="27a889f8a007c01abcb4faf6d63d40c5a15a91a5" translate="yes" xml:space="preserve">
          <source>When the local user clicks the interface widget to disable hold mode, the &lt;code&gt;disableHold()&lt;/code&gt; method is called to begin the process of restoring normal functionality.</source>
          <target state="translated">ローカルユーザーがインターフェースウィジェットをクリックしてホールドモードを無効にすると、 &lt;code&gt;disableHold()&lt;/code&gt; メソッドが呼び出され、通常の機能を復元するプロセスが開始されます。</target>
        </trans-unit>
        <trans-unit id="ebac40f6a72793796b91bcfc5c8b72b1f2b17b70" translate="yes" xml:space="preserve">
          <source>When the local user decides to enable hold mode, the &lt;code&gt;enableHold()&lt;/code&gt; method below is called. It accepts as input a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; containing the audio to play while the call is on hold.</source>
          <target state="translated">ローカルユーザーがホールドモードを有効にすることを決定すると、以下の &lt;code&gt;enableHold()&lt;/code&gt; メソッドが呼び出されます。コールが保留中に再生するオーディオを含む&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;を入力として受け入れます。</target>
        </trans-unit>
        <trans-unit id="d7f09e809f3f680076d45cee843a01c1fe3f673e" translate="yes" xml:space="preserve">
          <source>When the media stream ends, any media data not already delivered to your &lt;code&gt;ondataavailable&lt;/code&gt; handler is passed in a single &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">メディアストリームが終了すると、 &lt;code&gt;ondataavailable&lt;/code&gt; ハンドラーにまだ配信されていないメディアデータは、単一の&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; で&lt;/a&gt;渡されます。</target>
        </trans-unit>
        <trans-unit id="200a112377c2d0da736664ec1a452098ea2f0425" translate="yes" xml:space="preserve">
          <source>When the mode is &lt;code&gt;&quot;showing&quot;&lt;/code&gt;, text tracks are performed differently depending on their &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt;. In general:</source>
          <target state="translated">モードが &lt;code&gt;&quot;showing&quot;&lt;/code&gt; 場合、テキストトラックはその&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/TextTrack/kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt;応じて異なる方法で実行されます。一般に：</target>
        </trans-unit>
        <trans-unit id="9b66bfe8f53f6ad854aabf7ab0116c143bf98838" translate="yes" xml:space="preserve">
          <source>When the mouse is unlocked, the system cursor can exit and re-enter the browser window. If that happens, &lt;a href=&quot;mouseevent/movementx&quot;&gt;&lt;code&gt;movementX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mouseevent/movementy&quot;&gt;&lt;code&gt;movementY&lt;/code&gt;&lt;/a&gt; could be set to zero.</source>
          <target state="translated">マウスのロックが解除されると、システムカーソルが終了してブラウザウィンドウに再び入ることができます。その場合は、&lt;a href=&quot;mouseevent/movementx&quot;&gt; &lt;code&gt;movementX&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;mouseevent/movementy&quot;&gt; &lt;code&gt;movementY&lt;/code&gt; &lt;/a&gt;をゼロに設定できます。</target>
        </trans-unit>
        <trans-unit id="f915c69d3f7277d60c1e7e7d9711fc6729338a13" translate="yes" xml:space="preserve">
          <source>When the number of channels doesn't match between an input and an output, up- or down-mixing happens according the following rules. This can be somewhat controlled by setting the &lt;a href=&quot;../audionode/channelinterpretation&quot;&gt;&lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;speakers&lt;/code&gt; or &lt;code&gt;discrete&lt;/code&gt;:</source>
          <target state="translated">チャネル数が入力と出力の間で一致しない場合、アップミックスまたはダウンミックスは次のルールに従って行われます。これは、&lt;a href=&quot;../audionode/channelinterpretation&quot;&gt; &lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt; &lt;/a&gt;プロパティを &lt;code&gt;speakers&lt;/code&gt; または &lt;code&gt;discrete&lt;/code&gt; 設定することで多少制御できます。</target>
        </trans-unit>
        <trans-unit id="91cf2afc707473bc973d50d6ca2efd4285a74d39" translate="yes" xml:space="preserve">
          <source>When the number of channels doesn't match between an input and an output, up- or down-mixing happens according the following rules. This can be somewhat controlled by setting the &lt;a href=&quot;channelinterpretation&quot;&gt;&lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt;&lt;/a&gt; property to &lt;code&gt;speakers&lt;/code&gt; or &lt;code&gt;discrete&lt;/code&gt;:</source>
          <target state="translated">チャネル数が入力と出力の間で一致しない場合、アップミックスまたはダウンミックスは次のルールに従って行われます。これは、&lt;a href=&quot;channelinterpretation&quot;&gt; &lt;code&gt;AudioNode.channelInterpretation&lt;/code&gt; &lt;/a&gt;プロパティを &lt;code&gt;speakers&lt;/code&gt; または &lt;code&gt;discrete&lt;/code&gt; 設定することで多少制御できます。</target>
        </trans-unit>
        <trans-unit id="8ad483e8bf409e425b58e8efd619abdc5050a0c3" translate="yes" xml:space="preserve">
          <source>When the observer (callback) is invoked, the callback's parameters include a &lt;em&gt;&lt;a href=&quot;performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt;&lt;/em&gt; that contains only &lt;em&gt;observed&lt;/em&gt;&lt;a href=&quot;performanceentry&quot;&gt;&lt;code&gt;performance entries&lt;/code&gt;&lt;/a&gt;. That is, the list contains entries only for the event types that were specified when the observer's &lt;a href=&quot;performanceobserver/observe&quot;&gt;&lt;code&gt;observe()&lt;/code&gt;&lt;/a&gt; method was invoked. The &lt;a href=&quot;performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt; interface has the same three &lt;code&gt;getEntries*()&lt;/code&gt; methods as the &lt;a href=&quot;performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; interface. However, note there is one key difference with these methods; the &lt;a href=&quot;performanceobserverentrylist&quot;&gt;&lt;code&gt;performance observer entry list&lt;/code&gt;&lt;/a&gt; versions are used to retrieve &lt;em&gt;observed&lt;/em&gt; performance entries within the observer callback.</source>
          <target state="translated">オブザーバー（コールバック）が呼び出されると、コールバックのパラメーターには、&lt;em&gt;&lt;a href=&quot;performanceobserverentrylist&quot;&gt; &lt;code&gt;performance observer entry list&lt;/code&gt; &lt;/a&gt;&lt;/em&gt;&lt;em&gt;された&lt;/em&gt;&lt;a href=&quot;performanceentry&quot;&gt; &lt;code&gt;performance entries&lt;/code&gt; &lt;/a&gt;のみを含む&lt;em&gt;パフォーマンスオブザーバーエントリリスト&lt;/em&gt;が含ま&lt;em&gt;れ&lt;/em&gt;ます。つまり、リストには、オブザーバーの&lt;a href=&quot;performanceobserver/observe&quot;&gt; &lt;code&gt;observe()&lt;/code&gt; &lt;/a&gt;メソッドが呼び出されたときに指定されたイベントタイプのエントリのみが含まれます。&lt;a href=&quot;performanceobserverentrylist&quot;&gt; &lt;code&gt;performance observer entry list&lt;/code&gt; &lt;/a&gt;インタフェースは、同じ3つ持っ &lt;code&gt;getEntries*()&lt;/code&gt; などのメソッド&lt;a href=&quot;performance&quot;&gt; &lt;code&gt;Performance&lt;/code&gt; &lt;/a&gt;インターフェイスを。ただし、これらの方法には1つの重要な違いがあることに注意してください。&lt;a href=&quot;performanceobserverentrylist&quot;&gt; &lt;code&gt;performance observer entry list&lt;/code&gt; &lt;/a&gt;バージョンでは、取得するために使用されている&lt;em&gt;観測された&lt;/em&gt;観測者のコールバック内のパフォーマンスのエントリを。</target>
        </trans-unit>
        <trans-unit id="7175f21e5a2e17845e87b2f7b83e601c87827619" translate="yes" xml:space="preserve">
          <source>When the offer arrives, the callee's &lt;code&gt;handleVideoOfferMsg()&lt;/code&gt; function is called with the &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; message that was received. This function needs to do two things. First, it needs to create its own &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; and add the tracks containing the audio and video from its microphone and webcam to that. Second, it needs to process the received offer, constructing and sending its answer.</source>
          <target state="translated">オファーが到着すると、 &lt;code&gt;handleVideoOfferMsg()&lt;/code&gt; 者のhandleVideoOfferMsg（）関数が、受信された &lt;code&gt;&quot;video-offer&quot;&lt;/code&gt; メッセージを使用して呼び出されます。この関数は2つのことを行う必要があります。最初に、独自の&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;を作成し、マイクとWebカメラからのオーディオとビデオを含むトラックを追加する必要があります。次に、受け取ったオファーを処理し、回答を作成して送信する必要があります。</target>
        </trans-unit>
        <trans-unit id="b0bec275fd0f6273c0d0acf797afd767ae95035d" translate="yes" xml:space="preserve">
          <source>When the opened database doesn't exist yet, the value of &lt;code&gt;oldVersion&lt;/code&gt; is 0.</source>
          <target state="translated">開いているデータベースがまだ存在しない場合、 &lt;code&gt;oldVersion&lt;/code&gt; の値は0です。</target>
        </trans-unit>
        <trans-unit id="ee5c225e0694b3df91bd7af04aec1826c22c80d2" translate="yes" xml:space="preserve">
          <source>When the page content finishes loading (e.g. on &lt;code&gt;DOMContentLoaded&lt;/code&gt;).</source>
          <target state="translated">ページのコンテンツの読み込みが &lt;code&gt;DOMContentLoaded&lt;/code&gt; とき（DOMContentLoadedなど）。</target>
        </trans-unit>
        <trans-unit id="8e922759a0f9be599e7731ead610cb8c60760586" translate="yes" xml:space="preserve">
          <source>When the page is loaded, this code is run to set up an event listener to watch for the</source>
          <target state="translated">ページがロードされると、このコードが実行され、イベントリスナーを設定して</target>
        </trans-unit>
        <trans-unit id="14f06ff227348a175a5ecda369bb2dfb11462ebf" translate="yes" xml:space="preserve">
          <source>When the page loads, the &lt;code&gt;startup()&lt;/code&gt; function shown below should be called by our &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; element's &lt;code&gt;onload&lt;/code&gt; attribute (but in the example we use a button to trigger it, due to limitations of the MDN live example system).</source>
          <target state="translated">ページが読み込まれると、以下に示す &lt;code&gt;startup()&lt;/code&gt; 関数が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の &lt;code&gt;onload&lt;/code&gt; 属性によって呼び出されます（ただし、この例では、MDNライブサンプルシステムの制限により、ボタンを使用してトリガーします）。</target>
        </trans-unit>
        <trans-unit id="f8d059be663cdcd4a12850cd2f6a0c99689b6fdf" translate="yes" xml:space="preserve">
          <source>When the page loads, this code runs to set up and run the example:</source>
          <target state="translated">ページがロードされると、このコードが実行され、サンプルの設定と実行が行われます。</target>
        </trans-unit>
        <trans-unit id="8986747220e0569aa52b83a6cd262503f62f9870" translate="yes" xml:space="preserve">
          <source>When the page loads, we do some basic setup: we fetch references to the dial button and the log output box elements, and we use &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt; to add an event listener to the dial button so that clicking it calls the &lt;code&gt;connectAndDial()&lt;/code&gt; function to begin the connection process.</source>
          <target state="translated">ページが読み込まれると、基本的な設定を行います。ダイヤルボタンとログ出力ボックスの要素への参照をフェッチし、&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt;を使用してイベントリスナーをダイヤルボタンに追加し、クリックすると &lt;code&gt;connectAndDial()&lt;/code&gt; 関数が呼び出されるようにします。接続プロセスを開始します。</target>
        </trans-unit>
        <trans-unit id="839549cedee1215fb2d0d740f0fd133bdc03411a" translate="yes" xml:space="preserve">
          <source>When the parameter's value finishes following the curve, its value is guaranteed to match the last value in the set of values specified in the &lt;code&gt;values&lt;/code&gt; parameter.</source>
          <target state="translated">パラメータの値が曲線に従って終了すると、その値は、 &lt;code&gt;values&lt;/code&gt; パラメータで指定された値のセットの最後の値と一致することが保証されます。</target>
        </trans-unit>
        <trans-unit id="3134eb9034ba0688c09d8933a0459e0314d97425" translate="yes" xml:space="preserve">
          <source>When the parser finished its work on the main document, that is when its &lt;a href=&quot;document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'complete'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">パーサーがメインドキュメントでの作業を完了したとき、つまり、&lt;a href=&quot;document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;'complete'&lt;/code&gt; 変更され、対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされたとき。</target>
        </trans-unit>
        <trans-unit id="f808803da015941c4bf2374be53dabc0ea78103f" translate="yes" xml:space="preserve">
          <source>When the parser finished its work on the main document, that is when its &lt;a href=&quot;document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'interactive'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">パーサーがメインドキュメントでの作業を完了したとき、つまり、その&lt;a href=&quot;document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;'interactive'&lt;/code&gt; に変更され、対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされたとき。</target>
        </trans-unit>
        <trans-unit id="dbb3c5d76fb79c825556e2cee9e32a2b42390e41" translate="yes" xml:space="preserve">
          <source>When the parser started its work, that is when its &lt;a href=&quot;document/readystate&quot;&gt;&lt;code&gt;Document.readyState&lt;/code&gt;&lt;/a&gt; changes to &lt;code&gt;'loading'&lt;/code&gt; and the corresponding &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event is thrown.</source>
          <target state="translated">パーサーが作業を開始したとき、つまり、&lt;a href=&quot;document/readystate&quot;&gt; &lt;code&gt;Document.readyState&lt;/code&gt; &lt;/a&gt;が &lt;code&gt;'loading'&lt;/code&gt; 変化し、対応する &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントがスローされたときです。</target>
        </trans-unit>
        <trans-unit id="21ee0794ad950a44e9f58b2c0a55f4df23b09dd1" translate="yes" xml:space="preserve">
          <source>When the port is started, both scripts post messages to the worker and handle messages sent from it using &lt;code&gt;port.postMessage()&lt;/code&gt; and &lt;code&gt;port.onmessage&lt;/code&gt;, respectively:</source>
          <target state="translated">ポートが開始されると、両方のスクリプトがメッセージをワーカーに送信し、ワーカーから送信されたメッセージをそれぞれ &lt;code&gt;port.postMessage()&lt;/code&gt; および &lt;code&gt;port.onmessage&lt;/code&gt; を使用して処理します。</target>
        </trans-unit>
        <trans-unit id="88d47ec674ecb886615c0be510f12c1e0ec92e38" translate="yes" xml:space="preserve">
          <source>When the preview video begins to play, we know there's media to record, so we respond by calling the &lt;code&gt;&lt;a href=&quot;#Starting_media_recording&quot;&gt;startRecording()&lt;/a&gt;&lt;/code&gt; function we created earlier, passing in the preview video stream (as the source media to be recorded) and &lt;code&gt;recordingTimeMS&lt;/code&gt; as the number of milliseconds of media to record. As mentioned before, &lt;code&gt;startRecording()&lt;/code&gt; returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; whose resolution handler is called (receiving as input an array of &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects containing the chunks of recorded media data) once recording has completed.</source>
          <target state="translated">プレビュービデオの再生が始まると、記録するメディアがあることがわかります。そのため、先に作成した &lt;code&gt;&lt;a href=&quot;#Starting_media_recording&quot;&gt;startRecording()&lt;/a&gt;&lt;/code&gt; 関数を呼び出して（記録するソースメディアとして）プレビュービデオストリームを渡し、数として &lt;code&gt;recordingTimeMS&lt;/code&gt; を渡します。記録するメディアのミリ秒。前述のように、 &lt;code&gt;startRecording()&lt;/code&gt; すると、startRecording（）は解決ハンドラーが呼び出された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;を返します（入力として、記録されたメディアデータのチャンクを含む&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;オブジェクトの配列を受け取ります）。</target>
        </trans-unit>
        <trans-unit id="d28c7be1ba200f05c9f79e1058a1e236de27ea78" translate="yes" xml:space="preserve">
          <source>When the problem is reported, the user agent may focus the element and change the scrolling position of the document or perform some other action that brings the element to the user's attention. User agents may report more than one constraint violation if this element suffers from multiple problems at once. If the element is not rendered, then the user agent may report the error for the running script instead of notifying the user.</source>
          <target state="translated">問題が報告されると、ユーザエージェントは、要素に焦点を当て、文書のスクロール位置を変更するか、または要素をユーザの注意を引く何らかの他のアクションを実行してもよい。ユーザエージェントは、この要素が一度に複数の問題に苦しむ場合、複数の制約違反を報告してもよい。要素がレンダリングされない場合,ユーザエージェントは,ユーザに通知する代わりに,実行中のスクリプトに対してエラーを報告してもよい。</target>
        </trans-unit>
        <trans-unit id="cd399f4e43d1fbff3051d2f3cc9db341694f374e" translate="yes" xml:space="preserve">
          <source>When the promise is fulfilled, the fulfillment handler receives a value of &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">promiseが履行されると、履行ハンドラーは &lt;code&gt;undefined&lt;/code&gt; の値を受け取ります。</target>
        </trans-unit>
        <trans-unit id="1a97df6b10a130f07c83f20a008316d901cdbda8" translate="yes" xml:space="preserve">
          <source>When the prompt for unload terminates on the previous document in the same browsing context. If there is no previous document, this value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">アンロードのプロンプトが同じブラウジングコンテキストの前のドキュメントで終了したとき。以前のドキュメントがない場合、この値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="adad6cb70dcae1a052aa53cd9c1eeeba06043a37" translate="yes" xml:space="preserve">
          <source>When the receiver begins to receive media, an event is delivered to the receiver's &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;receiverPC&lt;/code&gt;. As explained in &lt;a href=&quot;#Starting_the_connection_process&quot;&gt;Starting the connection process&lt;/a&gt;, the current WebRTC specification uses the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; event for this, but some browsers haven't been updated to support this yet, so we also need to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; event. The &lt;code&gt;handleReceiverTrackEvent()&lt;/code&gt; and &lt;code&gt;handleReceiverAddStreamEvent()&lt;/code&gt; methods, shown below, handle these.</source>
          <target state="translated">レシーバーがメディアの受信を開始すると、イベントがレシーバーの&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;である &lt;code&gt;receiverPC&lt;/code&gt; に配信されます。&lt;a href=&quot;#Starting_the_connection_process&quot;&gt;接続プロセスの開始で&lt;/a&gt;説明したように、現在のWebRTC仕様はこれに &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/track&quot;&gt;track&lt;/a&gt;&lt;/code&gt; イベントを使用していますが、一部のブラウザーはこれをサポートするようにまだ更新されていないため、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/addstream&quot;&gt;addstream&lt;/a&gt;&lt;/code&gt; イベントも処理する必要があります。 &lt;code&gt;handleReceiverTrackEvent()&lt;/code&gt; と &lt;code&gt;handleReceiverAddStreamEvent()&lt;/code&gt; 以下に示す方法は、これらを処理します。</target>
        </trans-unit>
        <trans-unit id="537c5b67511ced3deaf928994ad8df896145f723" translate="yes" xml:space="preserve">
          <source>When the receiver's &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICE layer comes up with a new candidate to propose, it issues an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; event to &lt;code&gt;receiverPC&lt;/code&gt;. The &lt;code&gt;icecandidate&lt;/code&gt; event handler's job is to transmit the candidate to the caller. In our example, we are directly controlling both the caller and the receiver, so we can just directly add the candidate to the caller by calling its &lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt;&lt;code&gt;addIceCandidate()&lt;/code&gt;&lt;/a&gt; method. That's handled by &lt;code&gt;handleReceiverIceEvent()&lt;/code&gt;.</source>
          <target state="translated">受信者の &lt;code&gt;RTCPeerConnection&lt;/code&gt; ICEレイヤーが提案する新しい候補を &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icecandidate&quot;&gt;icecandidate&lt;/a&gt;&lt;/code&gt; 、icecandidateイベントを &lt;code&gt;receiverPC&lt;/code&gt; に発行します。 &lt;code&gt;icecandidate&lt;/code&gt; のイベントハンドラの仕事は、呼び出し側に候補者を送信することです。この例では、呼び出し側と受信側の両方を直接制御しているため、&lt;a href=&quot;../rtcpeerconnection/addicecandidate&quot;&gt; &lt;code&gt;addIceCandidate()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すことで、候補を呼び出し側に直接追加できます。これは、 &lt;code&gt;handleReceiverIceEvent()&lt;/code&gt; によって処理されます。</target>
        </trans-unit>
        <trans-unit id="3e08a7dedbb40b64e048a6926edb37c0ec6a93f0" translate="yes" xml:space="preserve">
          <source>When the request to open a connection is sent to the network. If the transport layer reports an error and the connection establishment is started again, the last connection establishment start time is given. If a persistent connection is used, the value will be the same as &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt;.</source>
          <target state="translated">接続を開く要求がネットワークに送信されたとき。トランスポート層がエラーを報告し、接続確立が再び開始された場合、最後の接続確立開始時刻が示されます。永続的な接続が使用されている場合、値は &lt;code&gt;PerformanceTiming.fetchStart&lt;/code&gt; と同じになります。</target>
        </trans-unit>
        <trans-unit id="6330942dde22ea4f2ab3c7b78ab71f7dcc0e416d" translate="yes" xml:space="preserve">
          <source>When the sample is ready to play, the program sets up the UI so it is ready to go.</source>
          <target state="translated">サンプルが再生できる状態になると、プログラムがUIを設定してくれるので、すぐに再生できるようになります。</target>
        </trans-unit>
        <trans-unit id="fd95af1279863fef4276b2646716dcbc0614ae30" translate="yes" xml:space="preserve">
          <source>When the scissor test is enabled, only pixels within the scissor box can be modified by drawing commands.</source>
          <target state="translated">シザーテストを有効にすると、描画コマンドでシザーボックス内のピクセルのみを修正できるようになります。</target>
        </trans-unit>
        <trans-unit id="03fc356dce5942faad0d83681aaba03d171f758a" translate="yes" xml:space="preserve">
          <source>When the script is run, we set up an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; event listener, so that once the page is fully loaded, our &lt;code&gt;startup()&lt;/code&gt; function is called.</source>
          <target state="translated">スクリプトが実行されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; イベントリスナーが設定され、ページが完全に読み込まれると、 &lt;code&gt;startup()&lt;/code&gt; 関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="b0a37825790ba0caa1e8e247362ba97814c0ef39" translate="yes" xml:space="preserve">
          <source>When the second &lt;code&gt;restore()&lt;/code&gt; statement is called, the original state (the one we set up before the first call to &lt;code&gt;save&lt;/code&gt;) is restored and the last rectangle is once again drawn in black.</source>
          <target state="translated">2番目の &lt;code&gt;restore()&lt;/code&gt; ステートメントが呼び出されると、元の状態（ &lt;code&gt;save&lt;/code&gt; への最初の呼び出しの前に設定した状態）が復元され、最後の長方形がもう一度黒で描画されます。</target>
        </trans-unit>
        <trans-unit id="fc7bf41b6462d43688e17f92d02accf760e77236" translate="yes" xml:space="preserve">
          <source>When the secure connection handshake starts. If no such connection is requested, it returns &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">セキュア接続ハンドシェイクが開始したとき。そのような接続が要求されていない場合は、 &lt;code&gt;0&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="33155266d0c1586320b9d2840caac0f2b71eeadf" translate="yes" xml:space="preserve">
          <source>When the shift key is pressed, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event is first fired, and the &lt;code&gt;key&lt;/code&gt; property value is set to be the string &lt;code&gt;&quot;Shift&quot;&lt;/code&gt;. As we keep holding this key, the keydown event does not continue to fire repeatedly because it produced no character key.</source>
          <target state="translated">Shiftキーが押されると、最初に &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントが発生し、 &lt;code&gt;key&lt;/code&gt; プロパティの値は文字列 &lt;code&gt;&quot;Shift&quot;&lt;/code&gt; に設定されます。このキーを押し続けると、keydownイベントは文字キーを生成しなかったため、繰り返し発生しなくなります。</target>
        </trans-unit>
        <trans-unit id="c33925f313b9963274b88c6fe522b5dbd1c593f0" translate="yes" xml:space="preserve">
          <source>When the shift key is pressed, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event is first fired, and the &lt;code&gt;key&lt;/code&gt; property value is set to the string &lt;code&gt;&quot;Shift&quot;&lt;/code&gt;. As we keep holding this key, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; event does not continue to fire repeatedly because it does not produce a character key.</source>
          <target state="translated">Shiftキーが押されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントが発生し、 &lt;code&gt;key&lt;/code&gt; プロパティ値が文字列 &lt;code&gt;&quot;Shift&quot;&lt;/code&gt; に設定されます。このキーを押し続けると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/keydown&quot;&gt;keydown&lt;/a&gt;&lt;/code&gt; イベントは文字キーを生成しないため、繰り返し発生しなくなります。</target>
        </trans-unit>
        <trans-unit id="edb11773ee8c2aacfc99893b3087a6f719b5dae2" translate="yes" xml:space="preserve">
          <source>When the source stream ends, &lt;code&gt;state&lt;/code&gt; is set to &lt;code&gt;&quot;inactive&quot;&lt;/code&gt; and data gathering stops. A final &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;code&gt;MediaRecorder&lt;/code&gt;, followed by a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">ソースストリームが終了すると、 &lt;code&gt;state&lt;/code&gt; が &lt;code&gt;&quot;inactive&quot;&lt;/code&gt; 設定され、データ収集が停止します。最終 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; イベントがに送信され &lt;code&gt;MediaRecorder&lt;/code&gt; 続いて、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/stop&quot;&gt;stop&lt;/a&gt;&lt;/code&gt; イベント。</target>
        </trans-unit>
        <trans-unit id="6feee11ede65732d796f8f44eec1bdd622f546c7" translate="yes" xml:space="preserve">
          <source>When the stream is done (&lt;code&gt;if (done)&lt;/code&gt;), we run &lt;code&gt;reader.cancel()&lt;/code&gt; to cancel the stream, signalling that we don't need to use it any more.</source>
          <target state="translated">ストリームが完了し &lt;code&gt;if (done)&lt;/code&gt; ）、 &lt;code&gt;reader.cancel()&lt;/code&gt; を実行してストリームをキャンセルし、これ以上使用する必要がないことを通知します。</target>
        </trans-unit>
        <trans-unit id="c9605836e46f30a630e4532dbbfb1b2329dc5df4" translate="yes" xml:space="preserve">
          <source>When the stream is obtained, it's attached to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element so that it's visible on screen, and we grab the audio track and video track into the variables &lt;code&gt;audioTrack&lt;/code&gt; and &lt;code&gt;videoTrack&lt;/code&gt;.</source>
          <target state="translated">ストリームが取得されると、画面に表示されるように&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素にアタッチされ、オーディオトラックとビデオトラックを変数 &lt;code&gt;audioTrack&lt;/code&gt; と &lt;code&gt;videoTrack&lt;/code&gt; に取り込みます。</target>
        </trans-unit>
        <trans-unit id="44380c5f983cc0aa64cc8e5f12f59ade351d3e24" translate="yes" xml:space="preserve">
          <source>When the user begins a drag by clicking and dragging from the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/vbox&quot;&gt;vbox&lt;/a&gt;&lt;/code&gt; above, the &lt;code&gt;startDrag()&lt;/code&gt; function below is called.</source>
          <target state="translated">ユーザーが上の &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XUL/vbox&quot;&gt;vbox&lt;/a&gt;&lt;/code&gt; をクリックしてドラッグすることでドラッグを開始すると、以下の &lt;code&gt;startDrag()&lt;/code&gt; 関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a727dd034a906afe61a84778788e2557337f530d" translate="yes" xml:space="preserve">
          <source>When the user clicks on a username they want to call, the &lt;code&gt;invite()&lt;/code&gt; function is invoked as the event handler for that &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">ユーザーが呼び出したいユーザー名をクリックすると、 &lt;code&gt;invite()&lt;/code&gt; 関数がその &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラーとして呼び出されます。</target>
        </trans-unit>
        <trans-unit id="1a9cb607dc7ab7c1e6a20774f9edcd5040f0b611" translate="yes" xml:space="preserve">
          <source>When the user clicks the &quot;Connect&quot; button, the &lt;code&gt;connectPeers()&lt;/code&gt; method is called. We're going to break this up and look at it a bit at a time, for clarity.</source>
          <target state="translated">ユーザーが「接続」ボタンをクリックすると、 &lt;code&gt;connectPeers()&lt;/code&gt; メソッドが呼び出されます。わかりやすくするために、これを分割して少しずつ見ていきます。</target>
        </trans-unit>
        <trans-unit id="6cf9ab1ead49e14d7101b88104637155345dba0b" translate="yes" xml:space="preserve">
          <source>When the user clicks the &quot;Disconnect&quot; button, the &lt;code&gt;disconnectPeers()&lt;/code&gt; method previously set as that button's handler is called.</source>
          <target state="translated">ユーザーが「切断」ボタンをクリックすると、そのボタンのハンドラーとして以前に設定された &lt;code&gt;disconnectPeers()&lt;/code&gt; メソッドが呼び出されます。</target>
        </trans-unit>
        <trans-unit id="38f71e84f14303251b25fa9bc7c263c60c6e12ea" translate="yes" xml:space="preserve">
          <source>When the user clicks the &quot;Hang Up&quot; button to end the call, the &lt;code&gt;hangUpCall()&lt;/code&gt; function is called:</source>
          <target state="translated">ユーザーが[Hang Up]ボタンをクリックして通話を終了すると、 &lt;code&gt;hangUpCall()&lt;/code&gt; 関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="a0560da4e829067e55910d706beed3eb7c32acaf" translate="yes" xml:space="preserve">
          <source>When the user clicks the OK button, text entered in the input field is returned. If the user clicks OK without entering any text, an empty string is returned. If the user clicks the Cancel button, this function returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ユーザーが[OK]ボタンをクリックすると、入力フィールドに入力されたテキストが返されます。ユーザーがテキストを入力せずに[OK]をクリックすると、空の文字列が返されます。ユーザーが[キャンセル]ボタンをクリックすると、この関数は &lt;code&gt;null&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="0da7af71e9afccd4774acf1db4d7f301071f054e" translate="yes" xml:space="preserve">
          <source>When the user clicks the play/pause toggle button while the oscillators aren't playing, the &lt;code&gt;startOscillators()&lt;/code&gt; function gets called.</source>
          <target state="translated">オシレーターが再生されていないときにユーザーが再生/一時停止トグルボタンをクリックすると、 &lt;code&gt;startOscillators()&lt;/code&gt; 関数が呼び出されます。</target>
        </trans-unit>
        <trans-unit id="85a5b4ec0d907d93592cb3b8ce597a8b5f7e9392" translate="yes" xml:space="preserve">
          <source>When the user lifts a finger off the surface, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; event is sent. We handle this event by calling the &lt;code&gt;handleEnd()&lt;/code&gt; function below. Its job is to draw the last line segment for the touch that ended and remove the touch point from the ongoing touch list.</source>
          <target state="translated">ユーザーが指を表面から &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerup&quot;&gt;pointerup&lt;/a&gt;&lt;/code&gt; と、pointerupイベントが送信されます。このイベントを処理するには、以下の &lt;code&gt;handleEnd()&lt;/code&gt; 関数を呼び出します。その仕事は、終了したタッチの最後の線分を描画し、進行中のタッチリストからタッチポイントを削除することです。</target>
        </trans-unit>
        <trans-unit id="6dbd3f962c7dae65fbc32df1e5d887467a22b95e" translate="yes" xml:space="preserve">
          <source>When the user lifts a finger off the surface, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; event is sent. We handle this by calling the &lt;code&gt;handleEnd()&lt;/code&gt; function below. Its job is to draw the last line segment for each touch that ended and remove the touch point from the ongoing touch list.</source>
          <target state="translated">ユーザーが指を表面から &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/touchend&quot;&gt;touchend&lt;/a&gt;&lt;/code&gt; と、touchendイベントが送信されます。これを処理するには、以下の &lt;code&gt;handleEnd()&lt;/code&gt; 関数を呼び出します。その仕事は、終了した各タッチの最後の線分を描画し、進行中のタッチリストからタッチポイントを削除することです。</target>
        </trans-unit>
        <trans-unit id="71d928d3e6a835e3c077144d6aedf206b3dd2962" translate="yes" xml:space="preserve">
          <source>When the user minimizes the window or switches to another tab, the API sends a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; event to let listeners know the state of the page has changed. You can detect the event and perform some actions or behave differently. For example, if your web app is playing a video, it can pause the video when the user puts the tab into the background, and resume playback when the user returns to the tab. The user doesn't lose their place in the video, the video's soundtrack doesn't interfere with audio in the new foreground tab, and the user doesn't miss any of the video in the meantime.</source>
          <target state="translated">ユーザーがウィンドウを最小化するか別のタブに切り替えると、APIは &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; イベントを送信して、ページの状態が変更されたことをリスナーに通知します。イベントを検出して、いくつかのアクションを実行したり、動作を変えることができます。たとえば、Webアプリがビデオを再生している場合、ユーザーがタブをバックグラウンドに置くとビデオを一時停止し、ユーザーがタブに戻ったときに再生を再開できます。ユーザーはビデオ内で場所を失うことはなく、ビデオのサウンドトラックが新しい前景タブのオーディオに干渉することはありません。その間、ユーザーはビデオを見逃しません。</target>
        </trans-unit>
        <trans-unit id="e9767aacd80e0e11093c6182eb78d14ae45fcb58" translate="yes" xml:space="preserve">
          <source>When the user presses the &quot;Send&quot; button, the sendMessage() method we've established as the handler for the button's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event is called. That method is simple enough:</source>
          <target state="translated">ユーザーが「送信」ボタンを押すと、ボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのハンドラーとして設定したsendMessage（）メソッドが呼び出されます。その方法は十分に単純です。</target>
        </trans-unit>
        <trans-unit id="691a84eb7e0015fcfba268cd3a31b2d0b4a6aad7" translate="yes" xml:space="preserve">
          <source>When the user releases the key, the &lt;code&gt;keyup&lt;/code&gt; event is sent.</source>
          <target state="translated">ユーザーがキーを &lt;code&gt;keyup&lt;/code&gt; と、keyupイベントが送信されます。</target>
        </trans-unit>
        <trans-unit id="046dc1872cb2544b6c632950577d726593ff414e" translate="yes" xml:space="preserve">
          <source>When the user releases the mouse, the drag and drop operation ends. If the mouse was released over an element that is a valid drop target, that is, one that cancelled the last &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event, and then the drop will be successful, and a &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event will fire at the target. Otherwise, the drag operation is cancelled, and no &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event is fired.</source>
          <target state="translated">ユーザーがマウスを離すと、ドラッグアンドドロップ操作が終了します。有効なドロップターゲット、つまり最後の &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; または &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントをキャンセルした要素の上でマウスが離された場合、ドロップは成功し、 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントがターゲットで発生します。それ以外の場合、ドラッグ操作はキャンセルされ、 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントは発生しません。</target>
        </trans-unit>
        <trans-unit id="90cd70947355aae5353dbe81d9dacd074974261d" translate="yes" xml:space="preserve">
          <source>When the user selects a file, the &lt;code&gt;handleFiles()&lt;/code&gt; function gets called with a &lt;a href=&quot;../filelist&quot;&gt;&lt;code&gt;FileList&lt;/code&gt;&lt;/a&gt; object containing &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; objects representing the files selected by the user.</source>
          <target state="translated">ユーザーがファイルを選択すると、 &lt;code&gt;handleFiles()&lt;/code&gt; 関数が、ユーザーが選択したファイルを表す&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトを含む&lt;a href=&quot;../filelist&quot;&gt; &lt;code&gt;FileList&lt;/code&gt; &lt;/a&gt;オブジェクトで呼び出されます。</target>
        </trans-unit>
        <trans-unit id="8204c07806596cca627eedd95b13c66cb1a8f3e1" translate="yes" xml:space="preserve">
          <source>When the value of this property changes a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; event fires on the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このプロパティの値が変更されると、&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt;オブジェクトで &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/readystatechange&quot;&gt;readystatechange&lt;/a&gt;&lt;/code&gt; イベントが発生します。</target>
        </trans-unit>
        <trans-unit id="23287c04cee6187c8575338ae4ce1445f08cebdf" translate="yes" xml:space="preserve">
          <source>When the value of this property changes, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このプロパティの値が変更されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/visibilitychange&quot;&gt;visibilitychange&lt;/a&gt;&lt;/code&gt; イベントが&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; に&lt;/a&gt;送信されます。</target>
        </trans-unit>
        <trans-unit id="4aabbed96dc4375bad394b2d3431585bafa5eb9e" translate="yes" xml:space="preserve">
          <source>When the visibility of the specified element crosses over one of the observer's visibility thresholds (as listed in &lt;a href=&quot;thresholds&quot;&gt;&lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt;&lt;/a&gt;, the observer's callback is executed with an &lt;a href=&quot;../intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; representing the intersection change which occurred. Note that this design allows multiple elements' intersection changes to be processed by a single call to the callback using an array of &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; objects.</source>
          <target state="translated">指定された要素の可視性がオブザーバーの可視性しきい値の1つを超えると（&lt;a href=&quot;thresholds&quot;&gt; &lt;code&gt;IntersectionObserver.thresholds&lt;/code&gt; &lt;/a&gt;にリストされているように）、オブザーバーのコールバックは、発生した交差変更を表す&lt;a href=&quot;../intersectionobserverentry&quot;&gt; &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; で&lt;/a&gt;実行されます。この設計では、複数の要素の交差変更を許可しています。 &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; オブジェクトの配列を使用してコールバックを1回呼び出すことで処理されます。</target>
        </trans-unit>
        <trans-unit id="d2941bdb6d2957bace5c69002a5658260596873c" translate="yes" xml:space="preserve">
          <source>When there is an error caused by calling &lt;a href=&quot;element/requestpointerlock&quot;&gt;&lt;code&gt;requestPointerLock()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;document/exitpointerlock&quot;&gt;&lt;code&gt;exitPointerLock()&lt;/code&gt;&lt;/a&gt;, the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; event is dispatched to the &lt;code&gt;document&lt;/code&gt;. This is a simple event and contains no extra data.</source>
          <target state="translated">呼び出すことによって生じる誤差がある場合&lt;a href=&quot;element/requestpointerlock&quot;&gt; &lt;code&gt;requestPointerLock()&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;document/exitpointerlock&quot;&gt; &lt;code&gt;exitPointerLock()&lt;/code&gt; は&lt;/a&gt;、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/pointerlockerror&quot;&gt;pointerlockerror&lt;/a&gt;&lt;/code&gt; のイベントがに派遣され &lt;code&gt;document&lt;/code&gt; 。これは単純なイベントであり、追加のデータは含まれていません。</target>
        </trans-unit>
        <trans-unit id="33c0c76361bf9f839d684610f50b7454c7d59ae1" translate="yes" xml:space="preserve">
          <source>When there is no selection, the active element is the page's &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt;&lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">何も選択されていない場合、アクティブな要素はページの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/body&quot;&gt; &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;null&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="939ca88904b6a1bf7a85b5630413d3f6b194d620" translate="yes" xml:space="preserve">
          <source>When these transferable objects are transferred, they are 'neutered' on the previous context &amp;mdash; the one they previously belonged to. For instance a port, when is sent, cannot be used anymore by the original context. Note that the only two objects that can currently be transferred are &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらの転送可能なオブジェクトが転送されると、それらは以前のコンテキスト（以前はそれらが属していたもの）で「無効」になります。たとえば、ポートが送信されると、元のコンテキストでは使用できなくなります。現在転送できるオブジェクトは、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; の&lt;/a&gt; 2つだけであることに注意してください。</target>
        </trans-unit>
        <trans-unit id="04293ceb4c72045381c1033f9d03a53a9fc46188" translate="yes" xml:space="preserve">
          <source>When this event is processed, the target's border is set to &lt;code&gt;dashed&lt;/code&gt; to provide a clear visual indication the element has received a move event.</source>
          <target state="translated">このイベントが処理されると、ターゲットの境界が &lt;code&gt;dashed&lt;/code&gt; に設定され、要素が移動イベントを受け取ったことを視覚的に明確に示します。</target>
        </trans-unit>
        <trans-unit id="55306c9e63cf68f3a0947c7106d9b313abd34896" translate="yes" xml:space="preserve">
          <source>When this event returns (or sets the &lt;code&gt;returnValue&lt;/code&gt; property to) a value other than &lt;code&gt;null&lt;/code&gt; or &lt;code&gt;undefined&lt;/code&gt;, the user is prompted to confirm the page unload. In some browsers, the return value of the event is displayed in this dialog. Starting with Firefox 44, Chrome 51, Opera 38 and Safari 9.1, a generic string not under the control of the webpage will be shown instead of the returned string. For example, Firefox displays the string &quot;This page is asking you to confirm that you want to leave - data you have entered may not be saved.&quot; (See &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=588292&quot;&gt;bug 588292&lt;/a&gt;), and Chrome displays the string &quot;Do you want to leave this site? Changes you made may not be saved&quot; (see &lt;a href=&quot;https://www.chromestatus.com/feature/5349061406228480&quot;&gt;Chrome Platform Status&lt;/a&gt;).</source>
          <target state="translated">このイベントが &lt;code&gt;null&lt;/code&gt; または &lt;code&gt;undefined&lt;/code&gt; 以外の値を返す（または &lt;code&gt;returnValue&lt;/code&gt; プロパティを設定する）と、ユーザーはページのアンロードを確認するように求められます。一部のブラウザーでは、イベントの戻り値がこのダイアログに表示されます。 Firefox 44、Chrome 51、Opera 38、およびSafari 9.1以降、返された文字列の代わりに、Webページの制御下にない一般的な文字列が表示されます。たとえば、Firefoxは「このページは、あなたが去ることを確認するように求めています-入力したデータは保存されないかもしれません。」という文字列を表示します。 （&lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=588292&quot;&gt;バグ588292を&lt;/a&gt;参照）、Chromeは「このサイトから移動しますか？行った変更が保存されない可能性があります」という文字列を表示します（&lt;a href=&quot;https://www.chromestatus.com/feature/5349061406228480&quot;&gt;Chromeプラットフォームのステータスを&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="b675ce375b683ebfefb729b81a7eb5944f8b8e72" translate="yes" xml:space="preserve">
          <source>When this example is executed, it begins by collecting references to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element as well as the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt;&lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;&lt;/a&gt; used to toggle playback on and off. It then sets up an event handler for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; event on the play toggle button and attempts to automatically begin playback by calling &lt;code&gt;playVideo()&lt;/code&gt;.</source>
          <target state="translated">この例が実行されると、最初に&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素への参照と、再生のオンとオフを切り替えるために使用される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button&quot;&gt; &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt; &lt;/a&gt;への参照を収集します。次に、再生トグルボタンの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/click&quot;&gt;click&lt;/a&gt;&lt;/code&gt; イベントのイベントハンドラーを設定し、 &lt;code&gt;playVideo()&lt;/code&gt; を呼び出して自動的に再生を開始しようとします。</target>
        </trans-unit>
        <trans-unit id="d6963259b1639a97714b25bf71859ceda2efe355" translate="yes" xml:space="preserve">
          <source>When this is a new document created dynamically.</source>
          <target state="translated">これが動的に作成された新規ドキュメントの場合。</target>
        </trans-unit>
        <trans-unit id="a7cc7af49aee2c249093e11831d780c2917df107" translate="yes" xml:space="preserve">
          <source>When this property is used, font loading has a timeline with three periods. The lengths of the first two periods depend on the value of the property and the user agent. (See below.)</source>
          <target state="translated">こ のプ ロ パテ ィ を使用す る と 、 フ ォ ン ト 読み込みは 3 つの期間を持つ タ イ ム ラ イ ン を持ち ます。最初の 2 つの期間の長さは、プロパティの値とユーザーエージェントに依存します。(以下を参照)。</target>
        </trans-unit>
        <trans-unit id="d3b8d4c5e0bbbf65d205f57082e9e093bfa6a136" translate="yes" xml:space="preserve">
          <source>When this property's value changes, a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/connectionstatechange&quot;&gt;connectionstatechange&lt;/a&gt;&lt;/code&gt; event is sent to the &lt;a href=&quot;../rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; instance.</source>
          <target state="translated">このプロパティの値が変更されると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/connectionstatechange&quot;&gt;connectionstatechange&lt;/a&gt;&lt;/code&gt; イベントが&lt;a href=&quot;../rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;インスタンスに送信されます。</target>
        </trans-unit>
        <trans-unit id="72fcf2f3217fcc81de10c510d68d0a69d72945d4" translate="yes" xml:space="preserve">
          <source>When this routine is called, the video element is displaying the most recent frame of video data, which looks like this:</source>
          <target state="translated">このルーチンが呼び出されると、video 要素には、以下のような動画データの最新フレームが表示されます。</target>
        </trans-unit>
        <trans-unit id="12da763f4582496e5d8fcc3f5219d4d93ab09a37" translate="yes" xml:space="preserve">
          <source>When this script gets executed, the image starts loading.</source>
          <target state="translated">このスクリプトが実行されると、画像の読み込みが開始されます。</target>
        </trans-unit>
        <trans-unit id="79065f4bd450dbbee8cbd4937d33d44eccde0b47" translate="yes" xml:space="preserve">
          <source>When time runs out, if there are still tasks left in the list, we call &lt;a href=&quot;window/requestidlecallback&quot;&gt;&lt;code&gt;requestIdleCallback()&lt;/code&gt;&lt;/a&gt; again so that we can continue to process the tasks the next time there's idle time available. If the queue is empty, we set taskHandle to 0 to indicate that we don't have a callback scheduled. That way, we'll know to request a callback next time &lt;code&gt;enqueueTask()&lt;/code&gt; is called.</source>
          <target state="translated">時間がなくなると、まだリストにタスクが残っている場合は、&lt;a href=&quot;window/requestidlecallback&quot;&gt; &lt;code&gt;requestIdleCallback()&lt;/code&gt; を&lt;/a&gt;再度呼び出して、次にアイドル時間があるときにタスクの処理を続行できるようにします。キューが空の場合は、taskHandleを0に設定して、コールバックがスケジュールされていないことを示します。そうすれば、次に &lt;code&gt;enqueueTask()&lt;/code&gt; が呼び出されたときにコールバックを要求することがわかります。</target>
        </trans-unit>
        <trans-unit id="0aac95d000954a3d204a1d1969ae467ca96ea7d4" translate="yes" xml:space="preserve">
          <source>When two or more pointer device types are being used concurrently, multiple pointers (one for each pointerType) are considered primary. For example, a touch contact and a mouse cursor moved simultaneously will produce pointers that are both considered primary. If there are multiple primary pointers, these pointers will all produce &lt;em&gt;compatibility mouse events&lt;/em&gt; (see &lt;a href=&quot;../pointer_events&quot;&gt;&lt;code&gt;Pointer_events&lt;/code&gt;&lt;/a&gt; for more information about pointer, mouse and touch interaction).</source>
          <target state="translated">2つ以上のポインターデバイスタイプが同時に使用されている場合、複数のポインター（各pointerTypeに1つ）がプライマリと見なされます。たとえば、タッチ接触とマウスカーソルを同時に動かすと、両方がプライマリと見なされるポインタが生成されます。複数のプライマリポインターがある場合、これらのポインターはすべて&lt;em&gt;互換性のあるマウスイベントを&lt;/em&gt;生成し&lt;em&gt;ます&lt;/em&gt;（ポインター、マウス、タッチ操作の詳細については、&lt;a href=&quot;../pointer_events&quot;&gt; &lt;code&gt;Pointer_events&lt;/code&gt; &lt;/a&gt;を参照してください）。</target>
        </trans-unit>
        <trans-unit id="79146cc2fed45810d8933ee53b7f0d75b48acaa3" translate="yes" xml:space="preserve">
          <source>When two users running Firefox are communicating on a data channel, the message size limit is much larger than when Firefox and Chrome are communicating because Firefox implements a now deprecated technique for sending large messages in multiple SCTP messages, which Chrome does not. Chrome will instead see a series of messages that it believes are complete, and will deliver them to the receiving &lt;code&gt;RTCDataChannel&lt;/code&gt; as multiple messages.</source>
          <target state="translated">Firefoxを実行している2人のユーザーがデータチャネルで通信している場合、Firefoxは複数のSCTPメッセージで大きなメッセージを送信するための非推奨の手法を実装しているため、FirefoxとChromeが通信している場合よりもメッセージサイズの制限がはるかに大きくなります。代わりに、Chromeは完全であると考える一連のメッセージを確認し、それらを複数のメッセージとして受信 &lt;code&gt;RTCDataChannel&lt;/code&gt; に配信します。</target>
        </trans-unit>
        <trans-unit id="03ab3dc0897982abbf51b2d2f98ed4e141beaa2d" translate="yes" xml:space="preserve">
          <source>When user privacy is a concern, It is important that any web app implementation will invalidate cookie data after a certain timeout and won't rely on the browser clearing session cookies</source>
          <target state="translated">ユーザーのプライバシーが懸念される場合、ウェブアプリの実装では、一定のタイムアウト後にクッキーデータを無効にし、ブラウザがセッションクッキーをクリアすることに頼らないことが重要です。</target>
        </trans-unit>
        <trans-unit id="d2e5e3cd9b9145fc3fafcf8fa78521b8237792c4" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;attributeOldValue&lt;/code&gt;, setting the &lt;a href=&quot;attributes&quot;&gt;&lt;code&gt;attributes&lt;/code&gt;&lt;/a&gt; option to &lt;code&gt;true&lt;/code&gt; is optional.</source>
          <target state="translated">&lt;code&gt;attributeOldValue&lt;/code&gt; を使用する場合、&lt;a href=&quot;attributes&quot;&gt; &lt;code&gt;attributes&lt;/code&gt; &lt;/a&gt;オプションの &lt;code&gt;true&lt;/code&gt; への設定はオプションです。</target>
        </trans-unit>
        <trans-unit id="3c2c8af7b21e55d22c72205444d7779f95b876bc" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;fill&lt;/code&gt; (or &lt;a href=&quot;../../canvasrenderingcontext2d/clip&quot;&gt;&lt;code&gt;clip&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../../canvasrenderingcontext2d/ispointinpath&quot;&gt;&lt;code&gt;isPointinPath&lt;/code&gt;&lt;/a&gt;) you can optionally provide a fill rule algorithm by which to determine if a point is inside or outside a path and thus if it gets filled or not. This is useful when a path intersects itself or is nested.</source>
          <target state="translated">使用する場合 &lt;code&gt;fill&lt;/code&gt; （または&lt;a href=&quot;../../canvasrenderingcontext2d/clip&quot;&gt; &lt;code&gt;clip&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;../../canvasrenderingcontext2d/ispointinpath&quot;&gt; &lt;code&gt;isPointinPath&lt;/code&gt; を&lt;/a&gt;）必要に応じて、それが満たされていない又は取得した場合ポイントは、内部または経路外したがってかどうかを決定することにより、塗りつぶしルールアルゴリズムを提供することができます。これは、パスがそれ自体と交差するか、ネストされている場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="5525b44cb435301e9e2d96a565462e3b7e7bd0de" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt; and the &lt;a href=&quot;../ext_color_buffer_float&quot;&gt;&lt;code&gt;EXT_color_buffer_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;と&lt;a href=&quot;../ext_color_buffer_float&quot;&gt; &lt;code&gt;EXT_color_buffer_float&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="c3a9d9ab629bb1bafb9d6af3f01a8328b78f7c95" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, a &lt;code&gt;gl.INVALID_OPERATION&lt;/code&gt; error is thrown if this vertex attribute is defined as a integer in the vertex shader (e.g. &lt;code&gt;uvec4&lt;/code&gt; or &lt;code&gt;ivec4&lt;/code&gt;, instead of &lt;code&gt;vec4&lt;/code&gt;).</source>
          <target state="translated">使用する際に&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGLの2コンテキストを&lt;/a&gt;、 &lt;code&gt;gl.INVALID_OPERATION&lt;/code&gt; のこの頂点属性（例えば頂点シェーダの整数として定義されている場合にエラーが発生し &lt;code&gt;uvec4&lt;/code&gt; 又は &lt;code&gt;ivec4&lt;/code&gt; 代わりに、 &lt;code&gt;vec4&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="ef8a8674d827d3157a103d101c1065fd8d184038" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following value is available additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;を使用する場合、次の値を追加で使用できます。</target>
        </trans-unit>
        <trans-unit id="7fec16d0a877f1230719ce7d2e45502118b7fcce" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following values are available additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;を使用する場合、次の値を追加で使用できます。</target>
        </trans-unit>
        <trans-unit id="cffddfb39d31b7f924328b8a24c9e1e7b124cdb2" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following values are possible additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;を使用する場合、次の値も追加で使用できます。</target>
        </trans-unit>
        <trans-unit id="901bd858af36cd2f860d3cc5cf18b06261148069" translate="yes" xml:space="preserve">
          <source>When using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2 context&lt;/a&gt;, the following values can be returned additionally:</source>
          <target state="translated">&lt;a href=&quot;../webgl2renderingcontext&quot;&gt;WebGL 2コンテキスト&lt;/a&gt;を使用する場合、次の値が追加で返される可能性があります。</target>
        </trans-unit>
        <trans-unit id="cfc5a807a16d8763a6af26723eb7f8de518d16c2" translate="yes" xml:space="preserve">
          <source>When using a user agent where no constructor has been implemented yet, it is possible to access such an object using the &lt;a href=&quot;url&quot;&gt;&lt;code&gt;Window.URL&lt;/code&gt;&lt;/a&gt; properties (prefixed with Webkit-based browser as &lt;code&gt;Window.webkitURL&lt;/code&gt;).</source>
          <target state="translated">コンストラクターがまだ実装されていないユーザーエージェントを使用する場合、&lt;a href=&quot;url&quot;&gt; &lt;code&gt;Window.URL&lt;/code&gt; &lt;/a&gt;プロパティ（Webkitベースのブラウザーに &lt;code&gt;Window.webkitURL&lt;/code&gt; がプレフィックスとして付いています）を使用して、そのようなオブジェクトにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="6059ede8763193571c8298041ada7ceb08b9b717" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../angle_instanced_arrays&quot;&gt;&lt;code&gt;ANGLE_instanced_arrays&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../angle_instanced_arrays&quot;&gt; &lt;code&gt;ANGLE_instanced_arrays&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="e240042b8c5547c103948c7d0738bdd865ac9dc0" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../ext_blend_minmax&quot;&gt;&lt;code&gt;EXT_blend_minmax&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../ext_blend_minmax&quot;&gt; &lt;code&gt;EXT_blend_minmax&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="71829a009bdbb443a69713bbf6ee5fb36b746c77" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../ext_srgb&quot;&gt;&lt;code&gt;EXT_sRGB&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../ext_srgb&quot;&gt; &lt;code&gt;EXT_sRGB&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="7e7f33789e2adf6a8f07c9c64b3d7ff1a06208b7" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../oes_element_index_uint&quot;&gt;&lt;code&gt;OES_element_index_uint&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../oes_element_index_uint&quot;&gt; &lt;code&gt;OES_element_index_uint&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="098c02e50b889a98a266cefa28187523880306a1" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../oes_standard_derivatives&quot;&gt;&lt;code&gt;OES_standard_derivatives&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../oes_standard_derivatives&quot;&gt; &lt;code&gt;OES_standard_derivatives&lt;/code&gt; &lt;/a&gt;拡張を使用する場合：</target>
        </trans-unit>
        <trans-unit id="5878b2b9f9491e09388f470dce3148619add20d1" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../oes_texture_half_float&quot;&gt;&lt;code&gt;OES_texture_half_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../oes_texture_half_float&quot;&gt; &lt;code&gt;OES_texture_half_float&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="076f5831e432985cd0dab8de24bd154c44f98b1a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../rtcpeerconnection/rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection()&lt;/code&gt;&lt;/a&gt; constructor, we will specify an &lt;a href=&quot;../rtcconfiguration&quot;&gt;&lt;code&gt;RTCConfiguration&lt;/code&gt;&lt;/a&gt;-compliant object providing configuration parameters for the connection. We use only one of these in this example: &lt;code&gt;iceServers&lt;/code&gt;. This is an array of objects describing STUN and/or TURN servers for the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt; layer to use when attempting to establish a route between the caller and the callee. These servers are used to determine the best route and protocols to use when communicating between the peers, even if they're behind a firewall or using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/NAT&quot;&gt;NAT&lt;/a&gt;.</source>
          <target state="translated">使用している場合&lt;a href=&quot;../rtcpeerconnection/rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection()&lt;/code&gt; &lt;/a&gt;コンストラクタを、我々は指定されます&lt;a href=&quot;../rtcconfiguration&quot;&gt; &lt;code&gt;RTCConfiguration&lt;/code&gt; &lt;/a&gt;接続するための設定パラメータを提供準拠のオブジェクトを。この例では、 &lt;code&gt;iceServers&lt;/code&gt; の 1つのみを使用します。これは、発信者と着信者の間にルートを確立しようとするときに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/ICE&quot;&gt;ICE&lt;/a&gt;レイヤーが使用するSTUNサーバーまたはTURNサーバー、あるいはその両方を記述するオブジェクトの配列です。これらのサーバーは、ファイアウォールの背後にある場合や&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/NAT&quot;&gt;NAT&lt;/a&gt;を使用している場合でも、ピア間の通信に使用する最適なルートとプロトコルを決定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="151e0be03dfc6be359a3a921b91810424de829bd" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_color_buffer_float&quot;&gt;&lt;code&gt;WEBGL_color_buffer_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_color_buffer_float&quot;&gt; &lt;code&gt;WEBGL_color_buffer_float&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="f49ea6b64d516fee7209a8df82fcb44a2847417a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_astc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_astc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_astc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_astc&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="19823bedcb0c759e981165e869c32a435dc8cf88" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_atc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_atc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_atc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_atc&lt;/code&gt; &lt;/a&gt;拡張を使用する場合：</target>
        </trans-unit>
        <trans-unit id="fa6ec0efb0979f86b9941a490dfa61c365c83a90" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_etc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_etc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_etc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_etc&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="13ceb5fa832db0a0aae7e9ef04d05aa0613e5dad" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_etc1&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_etc1&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_etc1&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_etc1&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="58f4f58fcbe5f1fe8252165cb77b50c134490559" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_pvrtc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_pvrtc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_pvrtc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_pvrtc&lt;/code&gt; &lt;/a&gt;拡張を使用する場合：</target>
        </trans-unit>
        <trans-unit id="38a9d850924d40adf91cade1e57a5f780ea720d5" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_s3tc&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_s3tc&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_s3tc&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_s3tc&lt;/code&gt; &lt;/a&gt;拡張を使用する場合：</target>
        </trans-unit>
        <trans-unit id="7c6eca164002431deb6ae22b534fe06cd95bec1a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_compressed_texture_s3tc_srgb&quot;&gt;&lt;code&gt;WEBGL_compressed_texture_s3tc_srgb&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_compressed_texture_s3tc_srgb&quot;&gt; &lt;code&gt;WEBGL_compressed_texture_s3tc_srgb&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="e36293671aea26271a85137a0ba2bd84259355ed" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_depth_texture&quot;&gt;&lt;code&gt;WEBGL_depth_texture&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_depth_texture&quot;&gt; &lt;code&gt;WEBGL_depth_texture&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="1f392a7166e8e2ca483c3f6e047ee57b892fc9a3" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;../webgl_draw_buffers&quot;&gt;&lt;code&gt;WEBGL_draw_buffers&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;../webgl_draw_buffers&quot;&gt; &lt;code&gt;WEBGL_draw_buffers&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="0552f1ae794471fbf65586e2e2f7c6e7ef59bda7" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method it is possible to use the third optional parameter to pass a filename inside the &lt;code&gt;Content-Disposition&lt;/code&gt; header that is sent to the server. When no filename is specified (or the parameter isn't supported), the name &quot;blob&quot; is used.</source>
          <target state="translated">使用する際に&lt;a href=&quot;append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;メソッドをその内部にファイル名を渡すために第三のオプションのパラメータを使用することができる &lt;code&gt;Content-Disposition&lt;/code&gt; サーバに送信されるヘッダ。ファイル名が指定されていない場合（またはパラメーターがサポートされていない場合）、「blob」という名前が使用されます。</target>
        </trans-unit>
        <trans-unit id="8698e9a59e52f4976079a9d3a23753b4f05b604a" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float&quot;&gt;&lt;code&gt;OES_texture_float&lt;/code&gt;&lt;/a&gt; extension:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/OES_texture_float&quot;&gt; &lt;code&gt;OES_texture_float&lt;/code&gt; &lt;/a&gt;拡張機能を使用する場合：</target>
        </trans-unit>
        <trans-unit id="488c629de7c8b1461d0e2a3edf0b7719602ab347" translate="yes" xml:space="preserve">
          <source>When using the deprecated callback-based version of &lt;code&gt;setLocalDescription()&lt;/code&gt;, the following exceptions may occur:</source>
          <target state="translated">廃止予定のコールバックベースのバージョンの &lt;code&gt;setLocalDescription()&lt;/code&gt; を使用すると、次の例外が発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="4c11852cf7f6d35f27feb76f547f683d816548a6" translate="yes" xml:space="preserve">
          <source>When using the deprecated callback-based version of &lt;code&gt;setRemoteDescription()&lt;/code&gt;, the following exceptions may occur:</source>
          <target state="translated">廃止予定のコールバックベースのバージョンの &lt;code&gt;setRemoteDescription()&lt;/code&gt; を使用すると、次の例外が発生する場合があります。</target>
        </trans-unit>
        <trans-unit id="0f7a2d9bc03cf525798c002ab65cb112b9a6cf49" translate="yes" xml:space="preserve">
          <source>When using the inline HTML markup (&lt;code&gt;&amp;lt;body onerror=&quot;alert('an error occurred')&quot;&amp;gt;&lt;/code&gt;), the HTML specification requires arguments passed to &lt;code&gt;onerror&lt;/code&gt; to be named &lt;code&gt;event&lt;/code&gt;, &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;lineno&lt;/code&gt;, &lt;code&gt;colno&lt;/code&gt;, &lt;code&gt;error&lt;/code&gt;. In browsers that have not implemented this requirement, they can still be obtained via &lt;code&gt;arguments[0]&lt;/code&gt; through &lt;code&gt;arguments[2]&lt;/code&gt;.</source>
          <target state="translated">インラインHTMLマークアップ（ &lt;code&gt;&amp;lt;body onerror=&quot;alert('an error occurred')&quot;&amp;gt;&lt;/code&gt; ）を使用する場合、HTML仕様では、 &lt;code&gt;onerror&lt;/code&gt; に渡す引数に &lt;code&gt;event&lt;/code&gt; 、 &lt;code&gt;source&lt;/code&gt; 、 &lt;code&gt;lineno&lt;/code&gt; 、 &lt;code&gt;colno&lt;/code&gt; 、 &lt;code&gt;error&lt;/code&gt; という名前を付ける必要があります。この要件を実装していないブラウザでも、それらは &lt;code&gt;arguments[0]&lt;/code&gt; から &lt;code&gt;arguments[2]&lt;/code&gt; を介して取得できます。</target>
        </trans-unit>
        <trans-unit id="28da46c0755b3ffe2198514ad0b3aa40f4e11454" translate="yes" xml:space="preserve">
          <source>When viewing a document, an element with focus is always the &lt;a href=&quot;../documentorshadowroot/activeelement&quot;&gt;active element&lt;/a&gt; in the document, but an active element does not necessarily have focus. For example, an active element within a popup window that is not the foreground does not have focus.</source>
          <target state="translated">ドキュメントを表示する場合、フォーカスのある要素は常にドキュメント内の&lt;a href=&quot;../documentorshadowroot/activeelement&quot;&gt;アクティブな要素&lt;/a&gt;ですが、アクティブな要素にフォーカスがあるとは限りません。たとえば、前景ではないポップアップウィンドウ内のアクティブな要素にはフォーカスがありません。</target>
        </trans-unit>
        <trans-unit id="a4ef80d4e5aef04ff5ba6df1ae55c5427bace4b5" translate="yes" xml:space="preserve">
          <source>When we come to call the &lt;code&gt;imgLoad()&lt;/code&gt; function, we call it with the url to the image we want to load, as we might expect, but the rest of the code is a little different:</source>
          <target state="translated">我々は呼び出すために来るとき &lt;code&gt;imgLoad()&lt;/code&gt; 関数を、私たちが想像のとおり、我々は、我々がロードしたい画像へのURLでそれを呼び出すが、コードの残りの部分は少し異なります。</target>
        </trans-unit>
        <trans-unit id="daa8612a0c9c45f58a41457196952f1438a32ef4" translate="yes" xml:space="preserve">
          <source>When we come to run the function, we do the following. This is because Firefox doesn't support &lt;a href=&quot;../speechsynthesis/onvoiceschanged&quot;&gt;&lt;code&gt;SpeechSynthesis.onvoiceschanged&lt;/code&gt;&lt;/a&gt;, and will just return a list of voices when &lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt;&lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt;&lt;/a&gt; is fired. With Chrome however, you have to wait for the event to fire before populating the list, hence the if statement seen below.</source>
          <target state="translated">関数を実行するときは、次のことを行います。これは、Firefoxが&lt;a href=&quot;../speechsynthesis/onvoiceschanged&quot;&gt; &lt;code&gt;SpeechSynthesis.onvoiceschanged&lt;/code&gt; を&lt;/a&gt;サポートしておらず、&lt;a href=&quot;../speechsynthesis/getvoices&quot;&gt; &lt;code&gt;SpeechSynthesis.getVoices()&lt;/code&gt; &lt;/a&gt;が呼び出されたときに音声のリストを返すだけだからです。ただしChromeでは、リストが生成される前にイベントが発生するのを待つ必要があるため、以下のifステートメントを使用します。</target>
        </trans-unit>
        <trans-unit id="0c95a9e8c24eeb31488c12c1c3406c5ae1c457e9" translate="yes" xml:space="preserve">
          <source>When we want to explicitly set a key&amp;rsquo;s offset from the other keys, we can specify an offset directly in the object, separated from the declaration with a comma. In the above example, to make sure that Alice&amp;rsquo;s color changes at 30% (not 50%) for the color change, we are giving it &lt;code&gt;offset: 0.3&lt;/code&gt;.</source>
          <target state="translated">他のキーからのキーのオフセットを明示的に設定したい場合は、オブジェクトから直接オフセットを指定でき、宣言とはコンマで区切ります。上記の例では、アリスの色が50％ではなく30％で変化することを確認するために、 &lt;code&gt;offset: 0.3&lt;/code&gt; ます。</target>
        </trans-unit>
        <trans-unit id="4bee466b9b61109435ee1146df9ef9dd231d861e" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLQuery&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">で作業する場合 &lt;code&gt;WebGLQuery&lt;/code&gt; のオブジェクトの以下のメソッド&lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; は&lt;/a&gt;便利です。</target>
        </trans-unit>
        <trans-unit id="43143ffc89e172f649dfaa01f74554ab08b5d302" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLSampler&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">で作業する場合 &lt;code&gt;WebGLSampler&lt;/code&gt; のオブジェクトの以下のメソッド&lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; は&lt;/a&gt;便利です。</target>
        </trans-unit>
        <trans-unit id="a204f461438b2bffcbacd97612b7d7dd04f3dc41" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLSync&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">で作業する場合 &lt;code&gt;WebGLSync&lt;/code&gt; のオブジェクトの以下のメソッド&lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; は&lt;/a&gt;便利です。</target>
        </trans-unit>
        <trans-unit id="999fea53b32cb0175886ac200d5445d5cc584f4f" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLTransformFeedback&lt;/code&gt; objects, the following methods of the &lt;a href=&quot;webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt; are useful:</source>
          <target state="translated">で作業する場合 &lt;code&gt;WebGLTransformFeedback&lt;/code&gt; のオブジェクトの以下のメソッド&lt;a href=&quot;webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; は&lt;/a&gt;便利です。</target>
        </trans-unit>
        <trans-unit id="3909ef72341ca4702e501c73befc333a25b9763d" translate="yes" xml:space="preserve">
          <source>When working with &lt;code&gt;WebGLVertexArrayObject&lt;/code&gt; objects, the following methods are useful:</source>
          <target state="translated">&lt;code&gt;WebGLVertexArrayObject&lt;/code&gt; オブジェクトを操作する場合、次のメソッドが役立ちます。</target>
        </trans-unit>
        <trans-unit id="c678ee9895b7dbff3144d5dd35ada232c348f208" translate="yes" xml:space="preserve">
          <source>When working with MSE, the following tools are a must have:</source>
          <target state="translated">MSEで作業する際には、以下のツールが必須です。</target>
        </trans-unit>
        <trans-unit id="16bafe2426e5dc4186e26ad59cd9d6c052eec641" translate="yes" xml:space="preserve">
          <source>When working with an &lt;a href=&quot;../audiocontext&quot;&gt;&lt;code&gt;AudioContext&lt;/code&gt;&lt;/a&gt;, if you create the audio context from inside a &lt;code&gt;click&lt;/code&gt; event the state should automatically be set to &lt;code&gt;running&lt;/code&gt;. Here is a simple example of creating the context from inside a &lt;code&gt;click&lt;/code&gt; event:</source>
          <target state="translated">で作業する場合&lt;a href=&quot;../audiocontext&quot;&gt; &lt;code&gt;AudioContext&lt;/code&gt; &lt;/a&gt;あなたが内側からオーディオコンテキストを作成する場合は、 &lt;code&gt;click&lt;/code&gt; イベントの状態を自動的に設定する必要が &lt;code&gt;running&lt;/code&gt; 。次に、 &lt;code&gt;click&lt;/code&gt; イベント内からコンテキストを作成する簡単な例を示します。</target>
        </trans-unit>
        <trans-unit id="ef480760ef4502ba63b9c5946d9bbb6f124b2d6e" translate="yes" xml:space="preserve">
          <source>When working with files, you are looking at either the grabbing the file from an &lt;a href=&quot;../htmlmediaelement&quot;&gt;&lt;code&gt;HTMLMediaElement&lt;/code&gt;&lt;/a&gt; (i.e. an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element), or you're looking to fetch the file and decode it into a buffer. Both are legitimate ways of working, however, it's more common to use the former when you are working will full-length tracks, and the latter when working with shorter, more sample-like tracks.</source>
          <target state="translated">ファイルを操作するときは、&lt;a href=&quot;../htmlmediaelement&quot;&gt; &lt;code&gt;HTMLMediaElement&lt;/code&gt; &lt;/a&gt;（つまり、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素）からファイルを取得するか、ファイルをフェッチしてそれをバッファーにデコードすることを考えています。どちらも合法的な作業方法ですが、フルレングスのトラックで作業する場合は前者を使用し、より短くてサンプルのようなトラックを使用する場合は後者を使用するのが一般的です。</target>
        </trans-unit>
        <trans-unit id="93563d9724827d60d0fc12b8c68aa5c0bbc5c2f9" translate="yes" xml:space="preserve">
          <source>When working with media source extensions, it is likely that you need to condition your assets before you can stream them. This article takes you through the requirements and shows you a toolchain you can use to encode your assets appropriately.</source>
          <target state="translated">メディアソース拡張機能を使用して作業する場合、ストリーミングする前にアセットを条件付けする必要があるでしょう。この記事では、要件を説明し、アセットを適切にエンコードするために使用できるツールチェーンを紹介します。</target>
        </trans-unit>
        <trans-unit id="b33f2b99a3d01e4dd9689a6763cfbebecd22daf0" translate="yes" xml:space="preserve">
          <source>When working with the keyboard, focus rings are a handy indicator to help navigating on a page. To draw focus rings on a canvas drawing, the &lt;code&gt;drawFocusIfNeeded&lt;/code&gt; property can be used.</source>
          <target state="translated">キーボードを操作する場合、フォーカスリングは、ページ内を移動するのに役立つ便利なインジケータです。キャンバスの描画にフォーカスリングを描画するには、 &lt;code&gt;drawFocusIfNeeded&lt;/code&gt; プロパティを使用できます。</target>
        </trans-unit>
        <trans-unit id="212d058f76197537c8637cc3abc9611b30b850f5" translate="yes" xml:space="preserve">
          <source>When writing code for the Web with JavaScript, there are a great many APIs available. Below is a list of all the interfaces (that is, types of objects) that you may be able to use while developing your Web app or site.</source>
          <target state="translated">JavaScript を使って Web 用のコードを書く場合、非常に多くの API が利用できます。以下に、Web アプリやサイトを開発している間に使用できる可能性のあるすべてのインターフェイス(つまり、オブジェクトの種類)のリストを示します。</target>
        </trans-unit>
        <trans-unit id="eb67b1e9a2a9d6fd72938c0bf3d17c62284c482d" translate="yes" xml:space="preserve">
          <source>When you are using an &lt;a href=&quot;../iirfilternode&quot;&gt;&lt;code&gt;IIRFilterNode&lt;/code&gt;&lt;/a&gt; instead of a &lt;a href=&quot;../biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt; you are creating the filter yourself, rather than just choosing a pre-programmed type. So you can create a highpass filter, or a lowpass filter, or a more bespoke one. And this is where the IIR filter node is useful &amp;mdash; you can create your own if none of the alaready available settings is right for what you want. As well as this, if your audio graph needed a highpass and a bandpass filter within it, you could just use one IIR filter node in place of the two biquad filter nodes you would otherwise need for this.</source>
          <target state="translated">&lt;a href=&quot;../biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;../iirfilternode&quot;&gt; &lt;code&gt;IIRFilterNode&lt;/code&gt; &lt;/a&gt;を使用している場合、事前にプログラムされたタイプを選択するだけでなく、自分でフィルターを作成しています。したがって、ハイパスフィルター、ローパスフィルター、またはより特注のフィルターを作成できます。そして、これがIIRフィルターノードが役立つ場所です。使用可能な設定がどれも必要なものに適切でない場合は、独自に作成できます。これに加えて、オーディオグラフ内にハイパスフィルターとバンドパスフィルターが必要な場合は、他の方法で必要となる2つのバイカッドフィルターノードの代わりに1つのIIRフィルターノードを使用できます。</target>
        </trans-unit>
        <trans-unit id="7b6f3bdf5b3e9728f4dfa61f824b1bd8ddad1687" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;stop()&lt;/code&gt; on a transceiver, the sender immediately stops sending media and each of its RTP streams are closed using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTCP&quot;&gt;RTCP&lt;/a&gt;&lt;code&gt;&quot;BYE&quot;&lt;/code&gt; message. The receiver then stops receiving media; the receiver's &lt;a href=&quot;../rtcrtpreceiver/track&quot;&gt;&lt;code&gt;track&lt;/code&gt;&lt;/a&gt; is stopped, and the transceiver's &lt;a href=&quot;stopped&quot;&gt;&lt;code&gt;stopped&lt;/code&gt;&lt;/a&gt; property is set to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">あなたが呼び出すと &lt;code&gt;stop()&lt;/code&gt; トランシーバに、送信者はすぐにメディアの送信を停止し、そのRTPストリームのそれぞれは、使用して閉じられている&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/RTCP&quot;&gt;RTCP &lt;/a&gt; &lt;code&gt;&quot;BYE&quot;&lt;/code&gt; メッセージを。その後、レシーバーはメディアの受信を停止します。レシーバーの&lt;a href=&quot;../rtcrtpreceiver/track&quot;&gt; &lt;code&gt;track&lt;/code&gt; &lt;/a&gt;が停止し、トランシーバーの&lt;a href=&quot;stopped&quot;&gt; &lt;code&gt;stopped&lt;/code&gt; &lt;/a&gt;プロパティが &lt;code&gt;true&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="752816c410a167aa92af868f97203689aa5abf87" translate="yes" xml:space="preserve">
          <source>When you change the value of &lt;code&gt;direction&lt;/code&gt;, an &lt;code&gt;InvalidStateError&lt;/code&gt; exception will occur if the connection is closed or the receiver is stopped.</source>
          <target state="translated">あなたがの値を変更するとき &lt;code&gt;direction&lt;/code&gt; 、 &lt;code&gt;InvalidStateError&lt;/code&gt; の接続が閉じられるか、受信機が停止している場合は、例外が発生します。</target>
        </trans-unit>
        <trans-unit id="575ee9c5def7c7753488ae6c2dfe0e6d80c78123" translate="yes" xml:space="preserve">
          <source>When you choose different options, the page is instantly updated; in addition, your choices are stored in &lt;code&gt;localStorage&lt;/code&gt;, so that when you leave the page and load it again, later on, your choices are remembered.</source>
          <target state="translated">別のオプションを選択すると、ページが即座に更新されます。さらに、選択内容は &lt;code&gt;localStorage&lt;/code&gt; に格納されるため、ページを離れて再度ロードすると、後で選択内容が記憶されます。</target>
        </trans-unit>
        <trans-unit id="d9140f42d6088c690941df0d4bd0d84684481de6" translate="yes" xml:space="preserve">
          <source>When you click on the &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; element and then the &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; element, you'll notice two things. First, the &lt;code&gt;composed&lt;/code&gt; property returns &lt;code&gt;true&lt;/code&gt; beause the &lt;code&gt;click&lt;/code&gt; event is always able to propagate across shadow boundaries. Second, you'll notice a difference in the value of &lt;code&gt;composedPath&lt;/code&gt; for the two elements. The &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; element's composed path is this:</source>
          <target state="translated">&lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; 要素をクリックしてから &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; 要素をクリックすると、2つのことに気づくでしょう。まず、 &lt;code&gt;composed&lt;/code&gt; プロパティが返す &lt;code&gt;true&lt;/code&gt; beause &lt;code&gt;click&lt;/code&gt; イベントは、常に影の境界を越えて伝播することができます。次に、2つの要素の &lt;code&gt;composedPath&lt;/code&gt; の値に違いがあることに気づくでしょう。 &lt;code&gt;&amp;lt;open-shadow&amp;gt;&lt;/code&gt; 要素の合成パスは、この次のとおりです。</target>
        </trans-unit>
        <trans-unit id="e50e7cd11e676bc9b9a31e2c689dc5beb22f1344" translate="yes" xml:space="preserve">
          <source>When you create a new database or increase the version number of an existing database (by specifying a higher version number than you did previously, when &lt;a href=&quot;#Opening_a_database&quot;&gt;Opening a database&lt;/a&gt;), the &lt;code&gt;onupgradeneeded&lt;/code&gt; event will be triggered and an &lt;a href=&quot;../idbversionchangeevent&quot;&gt;IDBVersionChangeEvent&lt;/a&gt; object will be passed to any &lt;code&gt;onversionchange&lt;/code&gt; event handler set up on &lt;code&gt;request.result&lt;/code&gt; (i.e., &lt;code&gt;db&lt;/code&gt; in the example). In the handler for the &lt;code&gt;upgradeneeded&lt;/code&gt; event, you should create the object stores needed for this version of the database:</source>
          <target state="translated">新しいデータベースを作成したり、既存のデータベースのバージョン番号を増やしたりすると（&lt;a href=&quot;#Opening_a_database&quot;&gt;データベースを開く&lt;/a&gt;ときに以前よりも高いバージョン番号を指定することにより）、 &lt;code&gt;onupgradeneeded&lt;/code&gt; イベントがトリガーされ、&lt;a href=&quot;../idbversionchangeevent&quot;&gt;IDBVersionChangeEvent&lt;/a&gt;オブジェクトが &lt;code&gt;onversionchange&lt;/code&gt; イベントに渡されますハンドラーは &lt;code&gt;request.result&lt;/code&gt; （例では &lt;code&gt;db&lt;/code&gt; ）に設定されています。 &lt;code&gt;upgradeneeded&lt;/code&gt; イベントのハンドラーで、このバージョンのデータベースに必要なオブジェクトストアを作成する必要があります。</target>
        </trans-unit>
        <trans-unit id="374af22673faa85cdb234cce75182580d5b5ba0a" translate="yes" xml:space="preserve">
          <source>When you create a script&amp;ndash;whether it's inline in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element or included in the web page by means of a script loading instruction&amp;ndash;you can immediately begin using the API for the &lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; elements to manipulate the document itself or to get at the children of that document, which are the various elements in the web page. Your DOM programming may be something as simple as the following, which displays an alert message by using the &lt;a href=&quot;../window/alert&quot;&gt;&lt;code&gt;alert()&lt;/code&gt;&lt;/a&gt; function from the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; object, or it may use more sophisticated DOM methods to actually create new content, as in the longer example below.</source>
          <target state="translated">スクリプトを作成すると、それが &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; 要素にインラインであるか、スクリプトの読み込み命令によってWebページに含まれて&lt;a href=&quot;../document&quot;&gt; &lt;code&gt;document&lt;/code&gt; &lt;/a&gt;かにかかわらず、ドキュメントまたは&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt;要素のAPIをすぐに使用して、ドキュメント自体を操作したり取得したりできます。そのドキュメントの子で、これはWebページのさまざまな要素です。 DOMプログラミングは、&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../window/alert&quot;&gt; &lt;code&gt;alert()&lt;/code&gt; &lt;/a&gt;関数を使用してアラートメッセージを表示する次のような単純なものか、より長いDOMメソッドを使用して実際に新しいコンテンツを作成する場合があります（下の長い例を参照）。</target>
        </trans-unit>
        <trans-unit id="4a26d422cfe918fc94972b2cddcce0d19cc79225" translate="yes" xml:space="preserve">
          <source>When you create an audio context (either offline or online) it is created with a &lt;code&gt;state&lt;/code&gt;, which can be &lt;code&gt;suspended&lt;/code&gt;, &lt;code&gt;running&lt;/code&gt;, or &lt;code&gt;closed&lt;/code&gt;.</source>
          <target state="translated">オーディオコンテキスト（オフラインまたはオンライン）を作成すると、 &lt;code&gt;suspended&lt;/code&gt; 、 &lt;code&gt;running&lt;/code&gt; 、または &lt;code&gt;closed&lt;/code&gt; できる &lt;code&gt;state&lt;/code&gt; で作成されます。</target>
        </trans-unit>
        <trans-unit id="dedc19355c2c70e85291c33a0546eb73b75e7849" translate="yes" xml:space="preserve">
          <source>When you first create a WebGL context, the size of the viewport will match the size of the canvas. However, if you resize the canvas, you will need to tell the WebGL context a new viewport setting. In this situation, you can use &lt;code&gt;gl.viewport&lt;/code&gt;.</source>
          <target state="translated">最初にWebGLコンテキストを作成するとき、ビューポートのサイズはキャンバスのサイズと一致します。ただし、キャンバスのサイズを変更する場合は、WebGLコンテキストに新しいビューポート設定を通知する必要があります。この状況では、 &lt;code&gt;gl.viewport&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="d8bb6baedfd0b37f85b2cbecbee095bfc96babdd" translate="yes" xml:space="preserve">
          <source>When you get a reference to a &lt;code&gt;table&lt;/code&gt; object, as in the following example, you routinely use all three of these interfaces interchangeably on the object, perhaps without knowing it.</source>
          <target state="translated">次の例のように、 &lt;code&gt;table&lt;/code&gt; オブジェクトへの参照を取得するとき、これらの3つのインターフェイスすべてを日常的にオブジェクトで交換可能に使用しています。</target>
        </trans-unit>
        <trans-unit id="76e487e4cdcfcfbcb00f9d7533125332467f8420" translate="yes" xml:space="preserve">
          <source>When you have a &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; object you'd like to reference by URL from HTML, you can create an object URL for it like this:</source>
          <target state="translated">HTMLからURLで参照したい&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;オブジェクトがある場合、次のようにそのオブジェクトURLを作成できます。</target>
        </trans-unit>
        <trans-unit id="ced5e892d53e45c9af4b4e5f88747350156148d5" translate="yes" xml:space="preserve">
          <source>When you instantiate the ServerSocket class, it is bound to the port number you specified by the &lt;em&gt;port&lt;/em&gt; argument.</source>
          <target state="translated">ServerSocketクラスをインスタンス化すると、それは&lt;em&gt;port&lt;/em&gt;引数で指定したポート番号にバインドされます。</target>
        </trans-unit>
        <trans-unit id="62d0f0d62628b8ed9a95636e6c00dc90b7bef672" translate="yes" xml:space="preserve">
          <source>When you look through the source code of &lt;a href=&quot;https://github.com/mdn/webvr-tests/blob/master/raw-webgl-example/webgl-demo.js&quot;&gt;our demo's main JavaScript file&lt;/a&gt;, you can easily find the WebVR-specific parts by searching for the string &quot;WebVR&quot; in preceding comments.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mdn/webvr-tests/blob/master/raw-webgl-example/webgl-demo.js&quot;&gt;デモのメインJavaScriptファイルの&lt;/a&gt;ソースコードを確認すると、前のコメントで文字列「WebVR」を検索することで、WebVR固有の部分を簡単に見つけることができます。</target>
        </trans-unit>
        <trans-unit id="b6370283fec311ae4dd8ef646dac7e106c7c5f36" translate="yes" xml:space="preserve">
          <source>When you pass a method to &lt;code&gt;setInterval()&lt;/code&gt; or any other function, it is invoked with the wrong &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt;&lt;code&gt;this&lt;/code&gt;&lt;/a&gt; value. This problem is explained in detail in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScript reference&lt;/a&gt;.</source>
          <target state="translated">メソッドを &lt;code&gt;setInterval()&lt;/code&gt; または他の関数に渡すと、間違った&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this&quot;&gt; &lt;code&gt;this&lt;/code&gt; &lt;/a&gt;値で呼び出されます。この問題は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScriptリファレンス&lt;/a&gt;で詳しく説明されています。</target>
        </trans-unit>
        <trans-unit id="39e1a9153308bb8ee47af5cb3755e6a1d9bb81c5" translate="yes" xml:space="preserve">
          <source>When you pass a method to &lt;code&gt;setTimeout()&lt;/code&gt; (or any other function, for that matter), it will be invoked with a &lt;code&gt;this&lt;/code&gt; value that may differ from your expectation. This issue is explained in detail in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScript reference&lt;/a&gt;.</source>
          <target state="translated">メソッドを &lt;code&gt;setTimeout()&lt;/code&gt; （または他の関数については）に渡すと、期待とは異なる可能性がある &lt;code&gt;this&lt;/code&gt; 値で呼び出されます。この問題は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/this#As_an_object_method&quot;&gt;JavaScriptリファレンス&lt;/a&gt;で詳しく説明されています。</target>
        </trans-unit>
        <trans-unit id="1225f7125b5ee57e4758124d1b46580cf6102326" translate="yes" xml:space="preserve">
          <source>When you trap events on the window, document, or other roomy elements, you can get the coordinates of that event (e.g., a click) and route it properly, as the following example demonstrates:</source>
          <target state="translated">ウィンドウ、ドキュメント、または他の部屋のような要素にイベントをトラップすると、次の例で示すように、そのイベントの座標(クリックなど)を取得して適切にルート化することができます。</target>
        </trans-unit>
        <trans-unit id="993d68d0d2cf41ae1b379f9d8014b2e37154b27b" translate="yes" xml:space="preserve">
          <source>When you want to remove an attribute, you can use the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete&quot;&gt;delete operator&lt;/a&gt;.</source>
          <target state="translated">属性を削除する場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/delete&quot;&gt;削除演算子を&lt;/a&gt;使用できます。</target>
        </trans-unit>
        <trans-unit id="a23a487ac9773df26d204b78f917023c484472cb" translate="yes" xml:space="preserve">
          <source>When you want to stop sending messages down the channel, you can invoke &lt;a href=&quot;messageport/close&quot;&gt;&lt;code&gt;MessagePort.close&lt;/code&gt;&lt;/a&gt; to close the ports.</source>
          <target state="translated">チャネルを&lt;a href=&quot;messageport/close&quot;&gt; &lt;code&gt;MessagePort.close&lt;/code&gt; &lt;/a&gt;メッセージの送信を停止する場合は、MessagePort.closeを呼び出してポートを閉じることができます。</target>
        </trans-unit>
        <trans-unit id="7e41e085dc476e29380f021d890bfa6b70a87d89" translate="yes" xml:space="preserve">
          <source>When you wish to provide your own certificates for use by an &lt;a href=&quot;rtcpeerconnection&quot;&gt;&lt;code&gt;RTCPeerConnection&lt;/code&gt;&lt;/a&gt; instead of having the &lt;code&gt;RTCPeerConnection&lt;/code&gt; generate them automatically, you do so through calls to &lt;a href=&quot;rtcpeerconnection/generatecertificate&quot;&gt;&lt;code&gt;RTCPeerConnection.generateCertificate()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">あなたがで使用する独自の証明書を提供したい場合は&lt;a href=&quot;rtcpeerconnection&quot;&gt; &lt;code&gt;RTCPeerConnection&lt;/code&gt; &lt;/a&gt;代わりに持つの &lt;code&gt;RTCPeerConnection&lt;/code&gt; はそれらを自動的に生成し、あなたがへの呼び出しを通じてそう&lt;a href=&quot;rtcpeerconnection/generatecertificate&quot;&gt; &lt;code&gt;RTCPeerConnection.generateCertificate()&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d70a0a55d60c98f66c2029191d41371c303563d" translate="yes" xml:space="preserve">
          <source>When you've finished using the WebSocket connection, call the WebSocket method &lt;a href=&quot;https://developer.mozilla.org/en/WebSockets/WebSockets_reference/WebSocket#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">WebSocket接続の使用が終了したら、WebSocketメソッド&lt;a href=&quot;https://developer.mozilla.org/en/WebSockets/WebSockets_reference/WebSocket#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="a8f8ffeed03dc8f2d0cf7dbe3d3e9cdb7dc8637e" translate="yes" xml:space="preserve">
          <source>When your page loads, it might have a non-null state object. This can happen, for example, if the page sets a state object (using &lt;code&gt;pushState()&lt;/code&gt; or &lt;code&gt;replaceState()&lt;/code&gt;) and then the user restarts their browser. When your page reloads, the page will receive an onload event, but no popstate event. However, if you read the history.state property, you'll get back the state object you would have gotten if a popstate had fired.</source>
          <target state="translated">ページが読み込まれると、null以外の状態オブジェクトが含まれる場合があります。これは、たとえば、ページが状態オブジェクト（ &lt;code&gt;pushState()&lt;/code&gt; または &lt;code&gt;replaceState()&lt;/code&gt; を使用）を設定し、ユーザーがブラウザーを再起動した場合に発生する可能性があります。ページがリロードされると、ページはonloadイベントを受け取りますが、popstateイベントは受け取りません。ただし、history.stateプロパティを読み取ると、popstateが発生した場合に取得したはずの状態オブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="062c9a4f9d449b003b7ca18c5f85fdfa9d1c09ed" translate="yes" xml:space="preserve">
          <source>When your web app changes in such a way that a version change is required for your database, you need to consider what happens if the user has the old version of your app open in one tab and then loads the new version of your app in another. When you call &lt;code&gt;open()&lt;/code&gt; with a greater version than the actual version of the database, all other open databases must explicitly acknowledge the request before you can start making changes to the database (an &lt;code&gt;onblocked&lt;/code&gt; event is fired until they are closed or reloaded). Here's how it works:</source>
          <target state="translated">データベースのバージョン変更が必要となるような方法でWebアプリが変更された場合、ユーザーが1つのタブでアプリの古いバージョンを開いていて、新しいバージョンのアプリを別のタブでロードした場合にどうなるかを考慮する必要があります。データベースの実際のバージョンよりも &lt;code&gt;onblocked&lt;/code&gt; バージョンで &lt;code&gt;open()&lt;/code&gt; を呼び出す場合、他のすべての開いているデータベースは、データベースに変更を加える前に、要求を明示的に確認する必要があります（onblockedイベントは、データベースが閉じられるか再ロードされるまで発生します）。仕組みは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="7f1519c231b2cc34c8d8a9d88c74b6cebf629c8e" translate="yes" xml:space="preserve">
          <source>Whenever a new value is assigned to the location object, a document will be loaded using the URL as if &lt;code&gt;location.assign()&lt;/code&gt; had been called with the modified URL. Note that security settings, like CORS, may prevent this to effectively happen.</source>
          <target state="translated">locationオブジェクトに新しい値が割り当てられると、変更されたURLで &lt;code&gt;location.assign()&lt;/code&gt; が呼び出されたかのように、URLを使用してドキュメントがロードされます。CORSのようなセキュリティ設定により、これが効果的に発生しない場合があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="13d80bc77477a352d26e0b670a11509478d97d2e" translate="yes" xml:space="preserve">
          <source>Whenever the target meets a threshold specified for the &lt;code&gt;IntersectionObserver&lt;/code&gt;, the callback is invoked. The callback receives a list of &lt;a href=&quot;intersectionobserverentry&quot;&gt;&lt;code&gt;IntersectionObserverEntry&lt;/code&gt;&lt;/a&gt; objects and the observer:</source>
          <target state="translated">ターゲットが &lt;code&gt;IntersectionObserver&lt;/code&gt; に指定されたしきい値に達すると、コールバックが呼び出されます。コールバックは、&lt;a href=&quot;intersectionobserverentry&quot;&gt; &lt;code&gt;IntersectionObserverEntry&lt;/code&gt; &lt;/a&gt;オブジェクトとオブザーバーのリストを受け取ります。</target>
        </trans-unit>
        <trans-unit id="12ec40acd39b349647f72e20d888bc02e7e928fa" translate="yes" xml:space="preserve">
          <source>Whenever this value decreases to fall to or below the value specified in the &lt;a href=&quot;bufferedamountlowthreshold&quot;&gt;&lt;code&gt;bufferedAmountLowThreshold&lt;/code&gt;&lt;/a&gt; property, the user agent fires the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; event. This event may be used, for example, to implement code which queues more messages to be sent whenever there's room to buffer them.</source>
          <target state="translated">この値が減少して&lt;a href=&quot;bufferedamountlowthreshold&quot;&gt; &lt;code&gt;bufferedAmountLowThreshold&lt;/code&gt; &lt;/a&gt;プロパティで指定された値以下になると、ユーザーエージェントは常に &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/bufferedamountlow&quot;&gt;bufferedamountlow&lt;/a&gt;&lt;/code&gt; イベントを発生させます。このイベントは、たとえば、メッセージをバッファリングする余地があるときに送信されるメッセージをキューに入れるコードを実装するために使用できます。</target>
        </trans-unit>
        <trans-unit id="e0ebe48a3c94951af91835ac4308b7fb4af93ccb" translate="yes" xml:space="preserve">
          <source>Whenever you move the mouse, this example checks whether the cursor is in a circular &lt;code&gt;Path2D&lt;/code&gt; path. If yes, the circle becomes green, otherwise it is red.</source>
          <target state="translated">この例では、マウスを動かすたびに、カーソルが円形の &lt;code&gt;Path2D&lt;/code&gt; パス内にあるかどうかを確認します。はいの場合、円は緑になり、それ以外の場合は赤になります。</target>
        </trans-unit>
        <trans-unit id="6929b561cca04bbe53d80605e1ebc2768bfd7f3e" translate="yes" xml:space="preserve">
          <source>Whenever you move the mouse, this example checks whether the cursor is in the stroke of an elliptical &lt;code&gt;Path2D&lt;/code&gt; path. If yes, the ellipse's stroke becomes green, otherwise it is red.</source>
          <target state="translated">この例では、マウスを動かすたびに、カーソルが楕円形の &lt;code&gt;Path2D&lt;/code&gt; パスのストローク内にあるかどうかを確認します。はいの場合、楕円のストロークは緑になり、それ以外の場合は赤になります。</target>
        </trans-unit>
        <trans-unit id="9d0d6636dc2bf750351fbd92bd9e1b711132900a" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">どこに &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; ある&lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; の&lt;/a&gt;オブジェクト、および &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; はときに呼び出される関数です &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingchange&quot;&gt;chargingchange&lt;/a&gt;&lt;/code&gt; のイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="d36f0ff60574ff33b5a7a3e045701e8a6594f836" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">どこに &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; ある&lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; の&lt;/a&gt;オブジェクト、および &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; はときに呼び出される関数です &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/chargingtimechange&quot;&gt;chargingtimechange&lt;/a&gt;&lt;/code&gt; のイベントが発生します。</target>
        </trans-unit>
        <trans-unit id="9041a88cefdc3d77196d7812a51677ca7177b77b" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">ここで、 &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; は&lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; &lt;/a&gt;オブジェクトであり、 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dischargingtimechange&quot;&gt;dischargingtimechange&lt;/a&gt;&lt;/code&gt; イベントが発生したときに呼び出される関数です。</target>
        </trans-unit>
        <trans-unit id="78e2d2de85cc3ccfef3a5b8e8a619265bd75004d" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; is a &lt;a href=&quot;../batterymanager&quot;&gt;&lt;code&gt;BatteryManager&lt;/code&gt;&lt;/a&gt; object, and &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt; event occurs.</source>
          <target state="translated">ここで、 &lt;code&gt;&lt;em&gt;battery&lt;/em&gt;&lt;/code&gt; は&lt;a href=&quot;../batterymanager&quot;&gt; &lt;code&gt;BatteryManager&lt;/code&gt; &lt;/a&gt;オブジェクトであり、 &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; は &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/levelchange&quot;&gt;levelchange&lt;/a&gt;&lt;/code&gt; イベントが発生したときに呼び出される関数です。</target>
        </trans-unit>
        <trans-unit id="5a4eee02f3f097ff38a344dee19eb455de207db0" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; event occurs. These events are of type &lt;a href=&quot;../devicelightevent&quot;&gt;&lt;code&gt;DeviceLightEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">どこ &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; はときに呼び出される関数です &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/devicelight&quot;&gt;devicelight&lt;/a&gt;&lt;/code&gt; のイベントが発生するが。これらのイベントのタイプは&lt;a href=&quot;../devicelightevent&quot;&gt; &lt;code&gt;DeviceLightEvent&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="855d6e97dd06c760bfc54cd0834a5b596826c2ff" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; is a function to be called when the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; event occurs. These events are of type &lt;a href=&quot;../deviceproximityevent&quot;&gt;&lt;code&gt;DeviceProximityEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">どこ &lt;code&gt;&lt;em&gt;funcRef&lt;/em&gt;&lt;/code&gt; はときに呼び出される関数です &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/deviceproximity&quot;&gt;deviceproximity&lt;/a&gt;&lt;/code&gt; のイベントが発生するが。これらのイベントのタイプは&lt;a href=&quot;../deviceproximityevent&quot;&gt; &lt;code&gt;DeviceProximityEvent&lt;/code&gt; &lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="35ac77582d7c567f16c6980afcf32505c256f5d2" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;funcRef&lt;/code&gt; is a reference to a function.</source>
          <target state="translated">どこ &lt;code&gt;funcRef&lt;/code&gt; は、関数への参照です。</target>
        </trans-unit>
        <trans-unit id="1761a310ddf608c0f04bd115e2a97e1741cb1a59" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;funcRef&lt;/code&gt; is a reference to a function. This function receives a &lt;a href=&quot;../devicemotionevent&quot;&gt;&lt;code&gt;DeviceMotionEvent&lt;/code&gt;&lt;/a&gt; object describing the motion that occurred.</source>
          <target state="translated">どこ &lt;code&gt;funcRef&lt;/code&gt; は、関数への参照です。この関数は、発生したモーションを表す&lt;a href=&quot;../devicemotionevent&quot;&gt; &lt;code&gt;DeviceMotionEvent&lt;/code&gt; &lt;/a&gt;オブジェクトを受け取ります。</target>
        </trans-unit>
        <trans-unit id="9b95aebddef29decaeb051575dfedfcbd4106ac8" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;width&lt;/code&gt; is a string representing the width in number of pixels or as a percentage value.</source>
          <target state="translated">ここで、 &lt;code&gt;width&lt;/code&gt; は幅をピクセル数またはパーセント値として表す文字列です。</target>
        </trans-unit>
        <trans-unit id="3285d96d1174e09478c085d5c0d23acce0ac2ef4" translate="yes" xml:space="preserve">
          <source>Where is the data stored?</source>
          <target state="translated">データはどこに保存されていますか?</target>
        </trans-unit>
        <trans-unit id="7467fe8dfca0de5a7e53e1ad793bbdec24383169" translate="yes" xml:space="preserve">
          <source>Where it matters for WebRTC purposes, these are dealt with in a variety of places within the WebRTC infrastructure. For example, RTCP handles QoS monitoring.</source>
          <target state="translated">WebRTC の目的で重要な場合は、WebRTC インフラストラクチャ内のさまざまな場所で処理されます。例えば、RTCP は QoS 監視を処理します。</target>
        </trans-unit>
        <trans-unit id="91a87fb79d960cece8f96056c2af6befa24f1c98" translate="yes" xml:space="preserve">
          <source>Where p and a are the tags which are used in HTML for paragraph and link, respectively and they can be replaced by identifiers which are used for Cues in WebVTT file.</source>
          <target state="translated">ここで p と a はそれぞれ HTML でパラグラフとリンクに使用されるタグであり、WebVTT ファイルの Cues に使用される識別子で置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="fddbe0cb10eaa8b4994516f5b590fa1ffe7d04b6" translate="yes" xml:space="preserve">
          <source>Where the &lt;a href=&quot;parent&quot;&gt;&lt;code&gt;window.parent&lt;/code&gt;&lt;/a&gt; property returns the immediate parent of the current window, &lt;code&gt;window.top&lt;/code&gt; returns the topmost window in the hierarchy of window objects.</source>
          <target state="translated">どこ&lt;a href=&quot;parent&quot;&gt; &lt;code&gt;window.parent&lt;/code&gt; &lt;/a&gt;プロパティは、現在のウィンドウの直接の親を返し、 &lt;code&gt;window.top&lt;/code&gt; は、ウィンドウオブジェクトの階層における最上位のウィンドウを返します。</target>
        </trans-unit>
        <trans-unit id="9033ce8d21ed06b1408ca216cffa39cc3f095102" translate="yes" xml:space="preserve">
          <source>Where the components are defined as follows:</source>
          <target state="translated">ここで、構成要素は以下のように定義される。</target>
        </trans-unit>
        <trans-unit id="574e95b6d8efa0022fbdde2c832cda5a47026661" translate="yes" xml:space="preserve">
          <source>Whereas the &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; element's composed path is a follows:</source>
          <target state="translated">一方、 &lt;code&gt;&amp;lt;closed-shadow&amp;gt;&lt;/code&gt; 要素の構成済みパスは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="4711f67e3cc0bb19d232e4c530869b9832f09b6a" translate="yes" xml:space="preserve">
          <source>Whether a device uses hardware or software decoding impacts how smooth and power efficient the video decoding is and how efficient the playback will be. The Media Capabilities API enables determining which codecs are supported and how performant a media file will be both in terms of smoothness and power efficiency.</source>
          <target state="translated">デバイスがハードウェアデコードを使用するかソフトウェアデコードを使用するかは、ビデオデコードがどれだけスムーズで電力効率が良く、再生がどれだけ効率的になるかに影響します。Media Capabilities APIを使用すると、どのコーデックがサポートされているかを判断し、メディアファイルが滑らかさと電力効率の両方の面でどの程度のパフォーマンスを発揮するかを判断することができます。</target>
        </trans-unit>
        <trans-unit id="a0210f3057e96b2243ad943c8728ce49f3f1ec69" translate="yes" xml:space="preserve">
          <source>Whether an event can be canceled or not is something that's determined when that event is initialized.</source>
          <target state="translated">イベントをキャンセルできるかどうかは、そのイベントが初期化されたときに決まるものです。</target>
        </trans-unit>
        <trans-unit id="22a49a142295885bf2698e17d4e6b3207f89d2a5" translate="yes" xml:space="preserve">
          <source>Whether the animation runs forwards (&lt;code&gt;normal&lt;/code&gt;), backwards (&lt;code&gt;reverse&lt;/code&gt;), switches direction after each iteration (&lt;code&gt;alternate&lt;/code&gt;), or runs backwards and switches direction after each iteration (&lt;code&gt;alternate-reverse&lt;/code&gt;). Defaults to &lt;code&gt;&quot;normal&quot;&lt;/code&gt;.</source>
          <target state="translated">アニメーションが順方向（ &lt;code&gt;normal&lt;/code&gt; ）、逆方向（ &lt;code&gt;reverse&lt;/code&gt; ）、各反復後に方向を切り替える（ &lt;code&gt;alternate&lt;/code&gt; ）か、逆方向に移動して各反復後に方向を切り替える（ &lt;code&gt;alternate-reverse&lt;/code&gt; ）か。デフォルトは &lt;code&gt;&quot;normal&quot;&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="1395955c5a2548d4a30efb6327390af52ac0ea32" translate="yes" xml:space="preserve">
          <source>Whether the mouse coordinates are within a particular area on the canvas, is a common problem to solve. The hit region API allows you to define an area of your canvas and provides another possibility to expose interactive content on a canvas to accessibility tools. It allows you to make hit detection easier and lets you route events to DOM elements. The API has the following three methods (which are still experimental in current web browsers; check the browser compatibility tables).</source>
          <target state="translated">マウス座標がキャンバス上の特定の領域内にあるかどうかは、解決すべき一般的な問題です。ヒットリージョン API を使用すると、キャンバスの領域を定義することができ、キャンバス上のインタラクティブ コンテンツをアクセシビリティ ツールに公開するための別の可能性を提供します。これにより、ヒット検出を容易にし、イベントを DOM 要素にルーティングすることができます。API には以下の 3 つのメソッドがあります (現在の Web ブラウザではまだ実験的なものです。)</target>
        </trans-unit>
        <trans-unit id="a750597dbe2dc313c41aabb70b3b34b1d1884551" translate="yes" xml:space="preserve">
          <source>Which array &lt;code&gt;forEach()&lt;/code&gt; is being applied to.</source>
          <target state="translated">&lt;code&gt;forEach()&lt;/code&gt; が適用される配列。</target>
        </trans-unit>
        <trans-unit id="2fa608cfd082a248a72feb1d19024301841e78f2" translate="yes" xml:space="preserve">
          <source>Which is exactly the same as the &lt;code&gt;(z + 1) * scaleFactor&lt;/code&gt; that we used in the previous example.</source>
          <target state="translated">これは、前の例で使用した &lt;code&gt;(z + 1) * scaleFactor&lt;/code&gt; とまったく同じです。</target>
        </trans-unit>
        <trans-unit id="9c325461434f28b91467db739ce54f53cecbbcde" translate="yes" xml:space="preserve">
          <source>Which must be greater than the start time</source>
          <target state="translated">開始時刻よりも大きくなければならない</target>
        </trans-unit>
        <trans-unit id="22aa7b656b3bc7c7d0b959e574f102d7aab0f495" translate="yes" xml:space="preserve">
          <source>Which of the two functions, &lt;code&gt;onsuccess()&lt;/code&gt; or &lt;code&gt;onerror()&lt;/code&gt;, gets called? If everything succeeds, a success event (that is, a DOM event whose &lt;code&gt;type&lt;/code&gt; property is set to &lt;code&gt;&quot;success&quot;&lt;/code&gt;) is fired with &lt;code&gt;request&lt;/code&gt; as its &lt;code&gt;target&lt;/code&gt;. Once it is fired, the &lt;code&gt;onsuccess()&lt;/code&gt; function on &lt;code&gt;request&lt;/code&gt; is triggered with the success event as its argument. Otherwise, if there was any problem, an error event (that is, a DOM event whose &lt;code&gt;type&lt;/code&gt; property is set to &lt;code&gt;&quot;error&quot;&lt;/code&gt;) is fired at &lt;code&gt;request&lt;/code&gt;. This triggers the &lt;code&gt;&lt;code&gt;onerror()&lt;/code&gt;&lt;/code&gt; function with the error event as its argument.</source>
          <target state="translated">2つの関数 &lt;code&gt;onsuccess()&lt;/code&gt; または &lt;code&gt;onerror()&lt;/code&gt; のどちらが呼び出されますか？すべてが成功すると、成功イベント（つまり、 &lt;code&gt;type&lt;/code&gt; プロパティが &lt;code&gt;&quot;success&quot;&lt;/code&gt; に設定されたDOMイベント）が、 &lt;code&gt;request&lt;/code&gt; を &lt;code&gt;target&lt;/code&gt; として発生します。 &lt;code&gt;onsuccess()&lt;/code&gt; れると、 &lt;code&gt;request&lt;/code&gt; てonsuccess（）関数が成功イベントを引数としてトリガーされます。それ以外の場合、問題が発生すると、エラーイベント（つまり、 &lt;code&gt;type&lt;/code&gt; プロパティが &lt;code&gt;&quot;error&quot;&lt;/code&gt; に設定されたDOMイベント）が &lt;code&gt;request&lt;/code&gt; 時に発生します。これにより、エラーイベントを引数として &lt;code&gt;&lt;code&gt;onerror()&lt;/code&gt;&lt;/code&gt; 関数がトリガーされます。</target>
        </trans-unit>
        <trans-unit id="d86a5675cc6478e7030415aaa83cd72801292548" translate="yes" xml:space="preserve">
          <source>While</source>
          <target state="translated">While</target>
        </trans-unit>
        <trans-unit id="c6e6f3689e2ba49330864598266c50c96132a904" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;addEventListener()&lt;/code&gt; will let you add the same listener more than once for the same type if the options are different, the only option &lt;code&gt;removeEventListener()&lt;/code&gt; checks is the &lt;code&gt;capture&lt;/code&gt;/&lt;code&gt;useCapture&lt;/code&gt; flag. Its value must match for &lt;code&gt;removeEventListener()&lt;/code&gt; to match, but the other values don't.</source>
          <target state="translated">一方で &lt;code&gt;addEventListener()&lt;/code&gt; オプションが異なっている場合、唯一のオプションの同じタイプのためにあなたが複数回同じリスナーを追加できるようになる &lt;code&gt;removeEventListener()&lt;/code&gt; をチェックすることで &lt;code&gt;capture&lt;/code&gt; / &lt;code&gt;useCapture&lt;/code&gt; のフラグ。 &lt;code&gt;removeEventListener()&lt;/code&gt; が一致するには、その値が一致する必要がありますが、他の値は一致しません。</target>
        </trans-unit>
        <trans-unit id="c1ad5174754f314bfbceffd519c9479861a974d5" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;self.skipWaiting()&lt;/code&gt; can be called at any point during the service worker's execution, it will only have an effect if there's a newly installed service worker that might otherwise remain in the &lt;code&gt;waiting&lt;/code&gt; state. Therefore, it's common to call &lt;code&gt;self.skipWaiting()&lt;/code&gt; from inside of an &lt;a href=&quot;../installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt; handler.</source>
          <target state="translated">一方で &lt;code&gt;self.skipWaiting()&lt;/code&gt; がサービスワーカーの実行中の任意の時点で呼び出すことができそうに残っているかもしれない、新しくインストールされたサービスワーカーがありますならば、それだけで効果があります &lt;code&gt;waiting&lt;/code&gt; 状態。したがって、&lt;a href=&quot;../installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; &lt;/a&gt;ハンドラー内から &lt;code&gt;self.skipWaiting()&lt;/code&gt; を呼び出すのが一般的です。</target>
        </trans-unit>
        <trans-unit id="58b29086e504954a8dc55b56aaafed1688c8d4a5" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;textContent&lt;/code&gt; gets the content of all elements, including &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt;&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt;&lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt;&lt;/a&gt; elements, &lt;code&gt;innerText&lt;/code&gt; does not, only showing &amp;ldquo;human-readable&amp;rdquo; elements.</source>
          <target state="translated">ながら &lt;code&gt;textContent&lt;/code&gt; 含むすべての要素の内容を取得&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script&quot;&gt; &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style&quot;&gt; &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を、 &lt;code&gt;innerText&lt;/code&gt; 、唯一の「人間が読める」の要素を示すものではありません。</target>
        </trans-unit>
        <trans-unit id="1677d5cb2e08363d28b42f87c2956814a4aa4b6c" translate="yes" xml:space="preserve">
          <source>While RTP is intended for use in latency-critical scenarios, it doesn't inherently offer any features that ensure QoS. Instead, it only offers the information necessary to allow QoS to be implemented elsewhere in the stack.</source>
          <target state="translated">RTP はレイテンシが重要なシナリオでの使用を意図していますが、QoS を保証する機能は本質的には提供していません。その代わり、スタックの他の場所で QoS を実装できるようにするために必要な情報のみを提供します。</target>
        </trans-unit>
        <trans-unit id="01b5afbf41773c3c75e65b325870d18afd092ed1" translate="yes" xml:space="preserve">
          <source>While a &lt;a href=&quot;../vrdisplay&quot;&gt;&lt;code&gt;VRDisplay&lt;/code&gt;&lt;/a&gt; is blurred it does not lose it&amp;rsquo;s presenting status (&lt;a href=&quot;../vrdisplay/ispresenting&quot;&gt;&lt;code&gt;VRDisplay.isPresenting&lt;/code&gt;&lt;/a&gt; continues to report &lt;code&gt;true&lt;/code&gt;) but &lt;a href=&quot;../vrdisplay/getframedata&quot;&gt;&lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;false&lt;/code&gt; without updating the provided &lt;a href=&quot;../vrframedata&quot;&gt;&lt;code&gt;VRFrameData&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt;&lt;code&gt;VRDisplay.getPose()&lt;/code&gt;&lt;/a&gt; returns a &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;null&lt;/code&gt; members.</source>
          <target state="translated">一方で&lt;a href=&quot;../vrdisplay&quot;&gt; &lt;code&gt;VRDisplay&lt;/code&gt; が&lt;/a&gt;ぼやけている、それが状況を提示しています失うことはありません（&lt;a href=&quot;../vrdisplay/ispresenting&quot;&gt; &lt;code&gt;VRDisplay.isPresenting&lt;/code&gt; は&lt;/a&gt;報告し続ける &lt;code&gt;true&lt;/code&gt; ）が、&lt;a href=&quot;../vrdisplay/getframedata&quot;&gt; &lt;code&gt;VRDisplay.getFrameData()&lt;/code&gt; &lt;/a&gt;を返す &lt;code&gt;false&lt;/code&gt; て更新せず&lt;a href=&quot;../vrframedata&quot;&gt; &lt;code&gt;VRFrameData&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/getPose&quot;&gt; &lt;code&gt;VRDisplay.getPose()&lt;/code&gt; &lt;/a&gt;返し&lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; を&lt;/a&gt;して &lt;code&gt;null&lt;/code&gt; メンバー。</target>
        </trans-unit>
        <trans-unit id="aed3e1ed6ba05d0bd2deb652db96e58b8fbc306e" translate="yes" xml:space="preserve">
          <source>While creating a CustomEvent object, you must create the object from the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/window&quot;&gt;window&lt;/a&gt;. The &lt;code&gt;detail&lt;/code&gt; attribute of your CustomEvent will be subjected to the same restrictions. String and Array values will be readable by the content without restrictions, but custom Objects will not. While using a custom Object, you will need to define the attributes of that object that are readable from the content script using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;Components.utils.cloneInto()&lt;/a&gt;.</source>
          <target state="translated">CustomEventオブジェクトを作成するときは、同じ&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/XUL/window&quot;&gt;ウィンドウ&lt;/a&gt;からオブジェクトを作成する必要があります。CustomEvent の &lt;code&gt;detail&lt;/code&gt; 属性にも同じ制限が適用されます。文字列と配列の値は制限なくコンテンツから読み取ることができますが、カスタムオブジェクトは読み取れません。カスタムオブジェクトを使用する場合は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/&quot;&gt;Components.utils.cloneInto（）&lt;/a&gt;を使用してコンテンツスクリプトから読み取り可能なそのオブジェクトの属性を定義する必要があります。</target>
        </trans-unit>
        <trans-unit id="7b78b9ed44c178f4579608dc427ab472e6c6b06b" translate="yes" xml:space="preserve">
          <source>While handling an asynchronous request, the value of &lt;code&gt;responseText&lt;/code&gt; always has the current content received from the server, even if it's incomplete because the data has not been completely received yet.</source>
          <target state="translated">非同期リクエストを処理している間、 &lt;code&gt;responseText&lt;/code&gt; の値には、データがまだ完全に受信されていないために不完全であっても、サーバーから受信した現在のコンテンツが常に含まれます。</target>
        </trans-unit>
        <trans-unit id="a90e109a6a6f027b28c605504e9754ef85c08a1d" translate="yes" xml:space="preserve">
          <source>While iframes work by default, &quot;sandboxed&quot; iframes block Pointer lock. The ability to avoid this limitation, in the form of the attribute/value combination &lt;code&gt;&amp;lt;iframe sandbox=&quot;allow-pointer-lock&quot;&amp;gt;&lt;/code&gt;, is expected to appear in Chrome soon.</source>
          <target state="translated">iframeはデフォルトで機能しますが、「サンドボックス化」されたiframeはポインターロックをブロックします。この制限を回避する機能は、属性と値の組み合わせ &lt;code&gt;&amp;lt;iframe sandbox=&quot;allow-pointer-lock&quot;&amp;gt;&lt;/code&gt; の形で、Chromeにまもなく登場する予定です。</target>
        </trans-unit>
        <trans-unit id="a4ee9cf3cfba692860032328902f2f45d9229ca6" translate="yes" xml:space="preserve">
          <source>While information about a user's cameras and microphones are inaccessible for privacy reasons, an application can request the camera and microphone capabilities it needs and wants, using additional constraints. The following expresses a preference for 1280x720 camera resolution:</source>
          <target state="translated">ユーザのカメラやマイクに関する情報は、プライバシー上の理由からアクセスできませんが、アプリケーションは、追加の制約を使用して、必要なカメラやマイクの機能を要求することができます。以下は、1280x720 のカメラ解像度を希望することを示しています。</target>
        </trans-unit>
        <trans-unit id="3bf401a186baf2c5f165729ade6c02a73c539e5c" translate="yes" xml:space="preserve">
          <source>While slightly painful when initially working with scalable 2D graphics, paying attention to the pixel grid and the position of paths ensures that your drawings will look correct regardless of scaling or any other transformations involved. A 1.0-width vertical line drawn at the correct position will become a crisp 2-pixel line when scaled up by 2, and will appear at the correct position.</source>
          <target state="translated">スケーラブルな 2D グラフィックスを扱う際には、最初は少々苦労しますが、ピクセルグリッドとパスの位置に注意を払うことで、スケーリングやその他の変換に関係なく、図面が正しく見えるようになります。正しい位置に描かれた 1.0 幅の垂直線は、2 倍に拡大すると鮮明な 2 ピクセルの線になり、正しい位置に表示されます。</target>
        </trans-unit>
        <trans-unit id="8e42a26e3e14767ec938e2efc79ed1a212618720" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;https://html.spec.whatwg.org/multipage/browsing-the-web.html#abort-a-document&quot;&gt;standard for aborting a document load&lt;/a&gt; is defined, &lt;a href=&quot;https://github.com/whatwg/html/issues/3525&quot;&gt;HTML issue #3525&lt;/a&gt; suggests that browsers do not currently fire the &quot;abort&quot; event on &lt;code&gt;window&lt;/code&gt; that would trigger &lt;code&gt;onabort&lt;/code&gt; to be called.</source>
          <target state="translated">&lt;a href=&quot;https://html.spec.whatwg.org/multipage/browsing-the-web.html#abort-a-document&quot;&gt;ドキュメントの読み込みを中止するため&lt;/a&gt;の標準が定義されていますが、&lt;a href=&quot;https://github.com/whatwg/html/issues/3525&quot;&gt;HTMLの問題＃3525&lt;/a&gt;は、ブラウザが &lt;code&gt;onabort&lt;/code&gt; の呼び出しをトリガーする &lt;code&gt;window&lt;/code&gt; で現在「abort」イベントを発生させないことを示唆しています。</target>
        </trans-unit>
        <trans-unit id="35cf1e475b7bded5eb2a8c85006f09a919173abe" translate="yes" xml:space="preserve">
          <source>While the &lt;a href=&quot;label&quot;&gt;&lt;code&gt;label&lt;/code&gt;&lt;/a&gt; property doesn't have to be unique, this ID number is guaranteed to be unique among all data channels. Additionally, known implementations of WebRTC use the same ID on both peers. A unique ID makes it easier for your code to do its own out-of-band data channel-related signaling.</source>
          <target state="translated">一方で&lt;a href=&quot;label&quot;&gt; &lt;code&gt;label&lt;/code&gt; &lt;/a&gt;プロパティは一意である必要はありません、このID番号は、すべてのデータ・チャネルの中で一意であることが保証されます。さらに、WebRTCの既知の実装では、両方のピアで同じIDを使用します。一意のIDを使用すると、コードで独自の帯域外データチャネル関連のシグナリングを簡単に実行できます。</target>
        </trans-unit>
        <trans-unit id="5e31addbffe614238773279550765fdb4361122e" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;ArrayBuffer&lt;/code&gt; can be filled with both integers and floats, the attributes will always be converted to a float when they are sent to the vertex shader. If you need to use integers in your vertex shader code, you can either cast the float back to an integer in the vertex shader (e.g. &lt;code&gt;(int) floatNumber&lt;/code&gt;), or use &lt;a href=&quot;../webgl2renderingcontext/vertexattribipointer&quot;&gt;&lt;code&gt;gl.vertexAttribIPointer()&lt;/code&gt;&lt;/a&gt; from WebGL2.</source>
          <target state="translated">一方で &lt;code&gt;ArrayBuffer&lt;/code&gt; は、整数と浮動小数点数の両方を充填することができるそれらは頂点シェーダに送られたとき、属性は常にfloatに変換されます。頂点シェーダーコードで整数を使用する必要がある場合は、浮動小数点を頂点シェーダーの整数にキャストし直すか（例： &lt;code&gt;(int) floatNumber&lt;/code&gt; ）、または&lt;a href=&quot;../webgl2renderingcontext/vertexattribipointer&quot;&gt; &lt;code&gt;gl.vertexAttribIPointer()&lt;/code&gt; &lt;/a&gt;を使用します。</target>
        </trans-unit>
        <trans-unit id="5a20f42a68e5aecf135d2ea686e7f9f1237921a3" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;AudioParam&lt;/code&gt; named &lt;code&gt;offset&lt;/code&gt; is read-only, the &lt;code&gt;value&lt;/code&gt; property within is not. So you can change the value of &lt;code&gt;offset&lt;/code&gt; by setting the value of &lt;code&gt;ConstantSourceNode.offset.value&lt;/code&gt;:</source>
          <target state="translated">一方で &lt;code&gt;AudioParam&lt;/code&gt; という名前の &lt;code&gt;offset&lt;/code&gt; 読み取り専用で、 &lt;code&gt;value&lt;/code&gt; 内のプロパティではありません。したがって、 &lt;code&gt;ConstantSourceNode.offset.value&lt;/code&gt; の値を設定することで、 &lt;code&gt;offset&lt;/code&gt; の値を変更できます。</target>
        </trans-unit>
        <trans-unit id="97a5fb8cfae9e9a388d84f10512d99ad5f83304b" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;createWriter()&lt;/code&gt; method existed, it immediately called &lt;code&gt;errorCallback&lt;/code&gt; with the &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt; error.</source>
          <target state="translated">一方で &lt;code&gt;createWriter()&lt;/code&gt; メソッドが存在し、それがすぐに呼ば &lt;code&gt;errorCallback&lt;/code&gt; で &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt; のエラー。</target>
        </trans-unit>
        <trans-unit id="d37f7320e358b7e65dbf5f9cd612fb8b1f3dc4fc" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;removeRecursively()&lt;/code&gt; method existed, it immediately called the error callback with &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt;.</source>
          <target state="translated">一方で &lt;code&gt;removeRecursively()&lt;/code&gt; メソッドが存在し、それはすぐにとエラーコールバックと呼ばれる &lt;code&gt;NS_ERROR_DOM_SECURITY_ERR&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="bdebc4b3b3ef8b054b9215aa56ac45c65438bd54" translate="yes" xml:space="preserve">
          <source>While the WebRTC &lt;a href=&quot;http://www.w3.org/TR/webrtc/&quot;&gt;specification&lt;/a&gt; is relatively stable, not all browsers have fully implemented all of its features. In addition, some browsers still have prefixes on some or all WebRTC APIs. While you can manually code around these issues, there is an easier way. The WebRTC organization &lt;a href=&quot;https://github.com/webrtc/adapter/&quot;&gt;provides on GitHub the WebRTC adapter&lt;/a&gt; to work around compatibility issues in different browsers' WebRTC implementations. The adapter is a JavaScript shim which lets your code to be written to the specification so that it will &quot;just work&quot; in all browsers with WebRTC support. There's no need to conditionally use prefixed APIs or implement other workarounds.</source>
          <target state="translated">WebRTC &lt;a href=&quot;http://www.w3.org/TR/webrtc/&quot;&gt;仕様&lt;/a&gt;は比較的安定していますが、すべてのブラウザがその機能のすべてを完全に実装しているわけではありません。さらに、一部のブラウザには、一部またはすべてのWebRTC APIにプレフィックスが付いています。これらの問題は手動でコーディングできますが、より簡単な方法があります。 WebRTC組織&lt;a href=&quot;https://github.com/webrtc/adapter/&quot;&gt;は、GitHubでWebRTCアダプター&lt;/a&gt;を提供して、さまざまなブラウザーのWebRTC実装における互換性の問題を回避します。アダプターはJavaScriptシムであり、WebRTCをサポートするすべてのブラウザーで「そのまま動作する」ように、コードを仕様に書き込むことができます。接頭辞付きのAPIを条件付きで使用したり、他の回避策を実装したりする必要はありません。</target>
        </trans-unit>
        <trans-unit id="b6cad4644fa34e0054b44bf1d4207b28ebb5ac7d" translate="yes" xml:space="preserve">
          <source>While the article Using the MediaStream Recording API demonstrates using the &lt;a href=&quot;../mediarecorder&quot;&gt;&lt;code&gt;MediaRecorder&lt;/code&gt;&lt;/a&gt; interface to capture a &lt;a href=&quot;../mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; generated by a hardware device, as returned by &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt;&lt;/a&gt;, you can also use an HTML media element (namely &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt;&lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt;) as the source of the &lt;code&gt;MediaStream&lt;/code&gt; to be recorded. In this article, we'll look at an example that does just that.</source>
          <target state="translated">MediaStream Recording APIの使用の記事では、&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;navigator.mediaDevices.getUserMedia()&lt;/code&gt; &lt;/a&gt;によって返される、&lt;a href=&quot;../mediarecorder&quot;&gt; &lt;code&gt;MediaRecorder&lt;/code&gt; &lt;/a&gt;インターフェイスを使用してハードウェアデバイスによって生成された&lt;a href=&quot;../mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;をキャプチャする方法を示していますが、HTMLメディア要素（つまり、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio&quot;&gt; &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;）を使用することもできます。&amp;gt;）記録する &lt;code&gt;MediaStream&lt;/code&gt; のソースとして。この記事では、それを行う例を見ていきます。</target>
        </trans-unit>
        <trans-unit id="797b382246f26d1255a1cfed6292ce9f609e0c65" translate="yes" xml:space="preserve">
          <source>While the published specification describes this as an interface, it has since been changed to a dictionary in follow-up drafts.</source>
          <target state="translated">公開された仕様書ではこれをインターフェースとして記述していますが、その後の草稿では辞書に変更されています。</target>
        </trans-unit>
        <trans-unit id="feb6f214a2ac495b564c14534cad54174d2e6d80" translate="yes" xml:space="preserve">
          <source>While there's other CSS involved in this example, tparh that really matters for our purposes is the CSS that styles the &lt;code&gt;&quot;box&quot;&lt;/code&gt; element that we'll be animating. That CSS looks like this:</source>
          <target state="translated">この例には他のCSSも含まれていますが、私たちの目的にとって本当に重要なtparhは、アニメーション化する &lt;code&gt;&quot;box&quot;&lt;/code&gt; 要素をスタイルするCSSです。そのCSSは次のようになります。</target>
        </trans-unit>
        <trans-unit id="3f983776633f57cc6691d5d3fb869bba846d4d8b" translate="yes" xml:space="preserve">
          <source>While this article uses CSS3 for the ease of explanations, matrices are a core concept used by many different technologies including WebGL and shaders. This article is also available as an &lt;a href=&quot;https://github.com/TatumCreative/mdn-matrix-math&quot;&gt;MDN content kit&lt;/a&gt;. The live examples use a collection of &lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;utility functions&lt;/a&gt; availabile under a global object named &quot;MDN&quot;.</source>
          <target state="translated">この記事では説明を簡単にするためにCSS3を使用していますが、マトリックスはWebGLやシェーダーなどのさまざまなテクノロジーで使用されている中心的な概念です。この記事は、&lt;a href=&quot;https://github.com/TatumCreative/mdn-matrix-math&quot;&gt;MDNコンテンツキット&lt;/a&gt;としても入手できます。実際の例では、「MDN」という名前のグローバルオブジェクトの下で使用可能な&lt;a href=&quot;https://github.com/TatumCreative/mdn-webgl&quot;&gt;ユーティリティ関数の&lt;/a&gt;コレクションを使用しています。</target>
        </trans-unit>
        <trans-unit id="de434f88a34e3c3a64dc0c79d1ce2d9a8963ab73" translate="yes" xml:space="preserve">
          <source>While this example is trivial, you can replace the simple output of &quot;Supported&quot; vs. &quot;Not supported&quot; with code to provide alternative methods for presenting the audiovisual information you want to share with the user or otherwise work with.</source>
          <target state="translated">この例は些細なものですが、「サポートされている」対「サポートされていない」の単純な出力をコードに置き換えて、ユーザーと共有したい視聴覚情報を提示するための代替方法を提供したり、他の方法で作業したりすることができます。</target>
        </trans-unit>
        <trans-unit id="73391f9feabc77b6f8f917fb779ffda3f8fa05b7" translate="yes" xml:space="preserve">
          <source>While this happens, the previous version is still responsible for fetches. The new version is installing in the background. We are calling the new cache &lt;code&gt;v2&lt;/code&gt;, so the previous &lt;code&gt;v1&lt;/code&gt; cache isn't disturbed.</source>
          <target state="translated">これが発生している間、以前のバージョンはまだフェッチの責任があります。新しいバージョンがバックグラウンドでインストールされています。新しいキャッシュ &lt;code&gt;v2&lt;/code&gt; を呼び出しているため、以前の &lt;code&gt;v1&lt;/code&gt; キャッシュは影響を受けません。</target>
        </trans-unit>
        <trans-unit id="0bfa65f684f8b28bb7488c726fd58c21e5193aa7" translate="yes" xml:space="preserve">
          <source>While this is an extremely simple example, imagine having a 32 oscillator synthesizer with multiple linked parameters in play across a number of patched nodes. Being able to shorten the number of operations to adjust them all will prove invaluable for code size and performance both.</source>
          <target state="translated">これは非常に単純な例ですが、32 個のオシレーターシンセサイザーに複数のパラメータがリンクされていて、複数のパッチされたノードにまたがって動作していることを想像してみてください。これらすべてを調整するための操作の数を短縮できることは、コードサイズとパフォーマンスの両方において非常に貴重なことです。</target>
        </trans-unit>
        <trans-unit id="15445e729aa96a028be12f8eeb34097c920be46d" translate="yes" xml:space="preserve">
          <source>While using document.evaluate() works in FF2, in FF3 one must use someXMLDoc.evaluate() if evaluating against something other than the current document.</source>
          <target state="translated">FF2ではdocument.evaluate()を使用しても動作しますが、FF3では現在のドキュメント以外で評価する場合はsomeXMLDoc.evaluate()を使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f232a5ab3a83a44a1e973dbaef1ca3af873e08e9" translate="yes" xml:space="preserve">
          <source>While vertex attributes are usually used to specify values which are different for each vertex (using &lt;a href=&quot;vertexattribpointer&quot;&gt;&lt;code&gt;vertexAttribPointer&lt;/code&gt;&lt;/a&gt;), it can be useful to specify a constant value. For example, if you have a shader which has a &lt;code&gt;color&lt;/code&gt; vertex attribute, but you want to draw everything in a single color, you can use &lt;code&gt;vertexAttrib&lt;/code&gt; to achieve that without creating a buffer filled with only one value or having to create a separate shader which uses a uniform for the color.</source>
          <target state="translated">頂点属性は通常、各頂点ごとに異なる値を指定するために使用されますが（&lt;a href=&quot;vertexattribpointer&quot;&gt; &lt;code&gt;vertexAttribPointer&lt;/code&gt; &lt;/a&gt;を使用）、定数値を指定すると便利です。たとえば、 &lt;code&gt;color&lt;/code&gt; 頂点属性を持つシェーダーがあり、すべてを単一の色で描画したい場合は、 &lt;code&gt;vertexAttrib&lt;/code&gt; を使用して、1つの値のみで満たされたバッファーを作成したり、別のシェーダーを作成したりすることなく、それを実現できます。色に制服を使用しています。</target>
        </trans-unit>
        <trans-unit id="9735502472fb8645f3f3ce406fb7680c8d1a15b4" translate="yes" xml:space="preserve">
          <source>While we can write CSS Animations with the Web Animations API, where the API really comes in handy is manipulating the animation&amp;rsquo;s playback. The Web Animations API provides several useful methods for controlling playback. Let&amp;rsquo;s take a look at pausing and playing animations in the Growing/Shrinking Alice game (check out the &lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ&quot;&gt;full code on Codepen&lt;/a&gt;):</source>
          <target state="translated">WebアニメーションAPIを使用してCSSアニメーションを記述できますが、APIが非常に役立つのは、アニメーションの再生を操作する場合です。WebアニメーションAPIは、再生を制御するためのいくつかの便利なメソッドを提供します。Growing / Shrinking Aliceゲームでのアニメーションの一時停止と再生を見てみましょう（&lt;a href=&quot;http://codepen.io/rachelnabors/pen/PNYGZQ&quot;&gt;Codepenの完全なコードを&lt;/a&gt;確認してください）。</target>
        </trans-unit>
        <trans-unit id="ad808409f9233584eacb6f81aba6de2f8b0666c2" translate="yes" xml:space="preserve">
          <source>While working on your Web Audio API code, you may find that you need tools to analyze the graph of nodes you create or to otherwise debug your work. This article discusses tools available to help you do that.</source>
          <target state="translated">Web Audio APIのコードを作成していると、作成したノードのグラフを分析したり、作業をデバッグしたりするためのツールが必要になることがあります。この記事では、そのためのツールについて説明します。</target>
        </trans-unit>
        <trans-unit id="1affea20cdd4173ba4ba9192dd973a33d5530c24" translate="yes" xml:space="preserve">
          <source>While you can just &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel/main.js&quot;&gt;look at the code itself on GitHub&lt;/a&gt;, below we'll review the parts of the code that do the heavy lifting.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel/main.js&quot;&gt;GitHub&lt;/a&gt;でコード自体を確認することもできますが、以下では、コードの中で重要な部分を確認します。</target>
        </trans-unit>
        <trans-unit id="9d622eb69a5875a65853870e99381ca1c9e10477" translate="yes" xml:space="preserve">
          <source>While you should instead use the CSS &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing&quot;&gt;&lt;code&gt;border-spacing&lt;/code&gt;&lt;/a&gt; property, the obsolete &lt;a href=&quot;../htmltableelement&quot;&gt;&lt;code&gt;HTMLTableElement&lt;/code&gt;&lt;/a&gt; interface's &lt;code&gt;&lt;strong&gt;cellSpacing&lt;/strong&gt;&lt;/code&gt; property represents the spacing around the individual &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th&quot;&gt;&lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt;&lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt;&lt;/a&gt; elements representing a table's cells. Any two cells are separated by the sum of the &lt;code&gt;cellSpacing&lt;/code&gt; of each of the two cells.</source>
          <target state="translated">代わりにCSSの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/border-spacing&quot;&gt; &lt;code&gt;border-spacing&lt;/code&gt; &lt;/a&gt;プロパティを使用する必要がありますが、廃止された&lt;a href=&quot;../htmltableelement&quot;&gt; &lt;code&gt;HTMLTableElement&lt;/code&gt; &lt;/a&gt;インターフェイスの &lt;code&gt;&lt;strong&gt;cellSpacing&lt;/strong&gt;&lt;/code&gt; プロパティは、テーブルのセルを表す個々の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th&quot;&gt; &lt;code&gt;&amp;lt;th&amp;gt;&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td&quot;&gt; &lt;code&gt;&amp;lt;td&amp;gt;&lt;/code&gt; &lt;/a&gt;要素の周りの間隔を表します。任意の2つのセルは、2つのセルのそれぞれの &lt;code&gt;cellSpacing&lt;/code&gt; の合計によって分離されます。</target>
        </trans-unit>
        <trans-unit id="f110937a31794d7af371747f9b664d4615df8d41" translate="yes" xml:space="preserve">
          <source>Why does WebVR have its own requestAnimationFrame()?</source>
          <target state="translated">なぜWebVRは独自のrequestAnimationFrame()を持っているのか?</target>
        </trans-unit>
        <trans-unit id="c6ddafdf36167a3465e231aba3ea6cd469e4d8dd" translate="yes" xml:space="preserve">
          <source>Why is my service worker failing to register?</source>
          <target state="translated">サービスマンが登録に失敗しているのはなぜですか?</target>
        </trans-unit>
        <trans-unit id="d7208f97a187e41a0f79c932e9258d95ba937eab" translate="yes" xml:space="preserve">
          <source>Why matrices are important</source>
          <target state="translated">行列が重要な理由</target>
        </trans-unit>
        <trans-unit id="930bf7e073fccab7f3f3f6f189b150f8ac14c0fb" translate="yes" xml:space="preserve">
          <source>Why use &lt;code&gt;addEventListener&lt;/code&gt;?</source>
          <target state="translated">なぜ使う &lt;code&gt;addEventListener&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="9ffeed44a345e5f320b12d679f8b1d74979925fe" translate="yes" xml:space="preserve">
          <source>Why use Beacon?</source>
          <target state="translated">なぜBeaconを使うのか?</target>
        </trans-unit>
        <trans-unit id="fbe7cc3ca81e30d0c2df2fb6ddd130b17a5108d1" translate="yes" xml:space="preserve">
          <source>Why, you may wonder, is something fundamental to the process of establishing a WebRTC connection left out of the specification? The answer is simple: since the two devices have no way to directly contact each other, and the specification can&amp;rsquo;t predict every possible use case for WebRTC, it makes more sense to let the developer select an appropriate networking technology and messaging protocol.</source>
          <target state="translated">なぜあなたは不思議に思うかもしれませんが、仕様から外れたWebRTC接続を確立するプロセスの基礎となるものがあるのですか？答えは簡単です。2つのデバイスは互いに直接接続する方法がなく、仕様ではWebRTCの考えられるすべてのユースケースを予測できるわけではないため、開発者に適切なネットワークテクノロジーとメッセージングプロトコルを選択させる方が理にかなっています。</target>
        </trans-unit>
        <trans-unit id="d77989c1e3c0e0ace735631597dc367ffdfa6f32" translate="yes" xml:space="preserve">
          <source>Why?</source>
          <target state="translated">Why?</target>
        </trans-unit>
        <trans-unit id="812eda1ec8a8550c1241c997b5510e45c2853039" translate="yes" xml:space="preserve">
          <source>WiFi Information API</source>
          <target state="translated">WiFi情報API</target>
        </trans-unit>
        <trans-unit id="82718d060967c684aa0c9faae3fa0070ecd6bea3" translate="yes" xml:space="preserve">
          <source>WiFi P2P API</source>
          <target state="translated">WiFi P2P API</target>
        </trans-unit>
        <trans-unit id="783c82091a962d6967bbaf9053f242f2256a974f" translate="yes" xml:space="preserve">
          <source>WiFi Tethering API</source>
          <target state="translated">WiFi テザリング API</target>
        </trans-unit>
        <trans-unit id="1642f118c8b0528714d276f4650abfce53ee0d45" translate="yes" xml:space="preserve">
          <source>Width (in pixels) of the browser window viewport including, if rendered, the vertical scrollbar.</source>
          <target state="translated">ブラウザウィンドウのビューポートの幅 (ピクセル単位)で、レンダリングされている場合は垂直スクロールバーを含みます。</target>
        </trans-unit>
        <trans-unit id="6ed6746e16e9da7f183eb810cc239f5eb028a623" translate="yes" xml:space="preserve">
          <source>Width and height</source>
          <target state="translated">幅と高さ</target>
        </trans-unit>
        <trans-unit id="04517969e4e88b6ac77e48991dd3507a4b32fdc6" translate="yes" xml:space="preserve">
          <source>Width and height must be multiples of 4.</source>
          <target state="translated">幅と高さは4の倍数でなければなりません。</target>
        </trans-unit>
        <trans-unit id="c32471fdfcc936eaef45f672707805517f43a478" translate="yes" xml:space="preserve">
          <source>Width and height must be powers of 2.</source>
          <target state="translated">幅と高さは2の累乗でなければなりません。</target>
        </trans-unit>
        <trans-unit id="adf48bc5d5aad8c317971b9e2c49d1baf4b4d0a7" translate="yes" xml:space="preserve">
          <source>Width of lines. Default &lt;code&gt;1.0&lt;/code&gt;</source>
          <target state="translated">線の幅。デフォルト &lt;code&gt;1.0&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9e6911ae8c2c39729fed25810c0c64aed59e4b53" translate="yes" xml:space="preserve">
          <source>Width of the rectangle to be painted. Defaults to the width of the image data.</source>
          <target state="translated">描画する矩形の幅。デフォルトは画像データの幅です。</target>
        </trans-unit>
        <trans-unit id="f0b2f802b10ce4db36dd6d0609fc630e8c7ea5cb" translate="yes" xml:space="preserve">
          <source>Wikipedia article on B&amp;eacute;zier curves</source>
          <target state="translated">ベジエ曲線に関するウィキペディアの記事</target>
        </trans-unit>
        <trans-unit id="cacc40419d0e71d22493f603adeb315123597bdc" translate="yes" xml:space="preserve">
          <source>Will always be &lt;code&gt;'SensorErrorEvent'&lt;/code&gt;.</source>
          <target state="translated">常に &lt;code&gt;'SensorErrorEvent'&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="c457525ac41d909f890bde5a63d11f13205d57cf" translate="yes" xml:space="preserve">
          <source>Will be stored in the array buffer as follows:</source>
          <target state="translated">以下のように配列バッファに格納されます。</target>
        </trans-unit>
        <trans-unit id="bb375493900031c658af955fbed577798f48ba2f" translate="yes" xml:space="preserve">
          <source>Will describe the color gamut, or the range of color, the screen can display (not currently supported anywhere).</source>
          <target state="translated">色域、または色の範囲、画面に表示できる色を説明します(現在はどこでもサポートされていません)。</target>
        </trans-unit>
        <trans-unit id="9932ab684ce0f7e2f7cf8d93016e7f5a37562a2d" translate="yes" xml:space="preserve">
          <source>Will describe the known luminance characteristics of the screen (not currently supported anywhere).</source>
          <target state="translated">画面の既知の輝度特性を記述する(現在はどこでもサポートされていない)。</target>
        </trans-unit>
        <trans-unit id="97b82711e660baa7cf3a85a7a46e0f3884daca1e" translate="yes" xml:space="preserve">
          <source>Will hold our &lt;a href=&quot;../intersectionobserver&quot;&gt;&lt;code&gt;IntersectionObserver&lt;/code&gt;&lt;/a&gt; used to track the intersection between the ads and the &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; element's bounds.</source>
          <target state="translated">広告と &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt; 要素の境界の間の交差を追跡するために使用される&lt;a href=&quot;../intersectionobserver&quot;&gt; &lt;code&gt;IntersectionObserver&lt;/code&gt; を&lt;/a&gt;保持します。</target>
        </trans-unit>
        <trans-unit id="410a70e773546db24768ac427861e4b752ec5155" translate="yes" xml:space="preserve">
          <source>Will hold the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt;&lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;&lt;/a&gt; element which contains the time the ad has been visible so far.</source>
          <target state="translated">これまでに広告が表示されていた時間を含む&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div&quot;&gt; &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を保持します。</target>
        </trans-unit>
        <trans-unit id="d5a6580c3c1187e5dc9fdc06a7338a94d6e4571c" translate="yes" xml:space="preserve">
          <source>Will hold the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2&quot;&gt;&lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt;&lt;/a&gt; element representing the ad's title.</source>
          <target state="translated">広告のタイトルを表す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h2&quot;&gt; &lt;code&gt;&amp;lt;h2&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を保持します。</target>
        </trans-unit>
        <trans-unit id="e9bad46ef5286cdd60bef087b89ca4af12b8d41a" translate="yes" xml:space="preserve">
          <source>Will hold the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt;&lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;&lt;/a&gt; representing the ad's body text.</source>
          <target state="translated">広告の本文テキストを表す&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p&quot;&gt; &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; を&lt;/a&gt;保持します。</target>
        </trans-unit>
        <trans-unit id="720f0131c6416ed9e457c366b630cd9b19bb0eae" translate="yes" xml:space="preserve">
          <source>Will log the time needed by the user to dismiss the alert box, log the time to the console, wait for the user to dismiss the second alert, and then log the ending time to the console:</source>
          <target state="translated">ユーザーがアラートボックスを解除するのに必要な時間を記録し、その時間をコンソールに記録し、ユーザーが2回目のアラートを解除するのを待ってから、終了時間をコンソールに記録します。</target>
        </trans-unit>
        <trans-unit id="cb306168f02adeddcbd30194a965ee718444d3e3" translate="yes" xml:space="preserve">
          <source>Will throw a &lt;code&gt;NS_ERROR_DOM_INVALID_CHARACTER_ERR&lt;/code&gt; exception if one tries to submit the closing CDATA sequence (&quot;]]&amp;gt;&quot;) as part of the data, so unescaped user-provided data cannot be safely used without with this method getting this exception (&lt;code&gt;&lt;a href=&quot;createtextnode&quot;&gt;createTextNode()&lt;/a&gt;&lt;/code&gt; can often be used in its place).</source>
          <target state="translated">スローされます &lt;code&gt;NS_ERROR_DOM_INVALID_CHARACTER_ERR&lt;/code&gt; のデータの一部としてクローズCDATAシーケンス（「]]&amp;gt;」を）提出する一つの試みは、そのエスケープユーザーが提供したデータは安全にこのメソッドは、この例外（取得とせずに使用することができない場合に例外を &lt;code&gt;&lt;a href=&quot;createtextnode&quot;&gt;createTextNode()&lt;/a&gt;&lt;/code&gt; が多いことができますその場所で使用される）。</target>
        </trans-unit>
        <trans-unit id="5ac302cd37f782694646e0f66f5e065da2aaaeff" translate="yes" xml:space="preserve">
          <source>Will write to the console:</source>
          <target state="translated">コンソールに書き込みます。</target>
        </trans-unit>
        <trans-unit id="41dfc0a6c92707948578891c51d98c6443be63cc" translate="yes" xml:space="preserve">
          <source>Window</source>
          <target state="translated">Window</target>
        </trans-unit>
        <trans-unit id="6c058d9178cae138c823f18de3e8cd52c6d85cfd" translate="yes" xml:space="preserve">
          <source>Window events</source>
          <target state="translated">ウィンドウイベント</target>
        </trans-unit>
        <trans-unit id="47044b57cd8f08779dff853e0bbb5e3e1f639acf" translate="yes" xml:space="preserve">
          <source>Window features</source>
          <target state="translated">窓の特徴</target>
        </trans-unit>
        <trans-unit id="d7834573ce9a2f9c71d41b38388fd8af273a3626" translate="yes" xml:space="preserve">
          <source>Window functionality features</source>
          <target state="translated">ウィンドウ機能の特徴</target>
        </trans-unit>
        <trans-unit id="847fd5b0e7d19b54f0ebf121df83ee37523e321d" translate="yes" xml:space="preserve">
          <source>Window.localStorage</source>
          <target state="translated">Window.localStorage</target>
        </trans-unit>
        <trans-unit id="e06553da442fe83bb81f9d16d444ebaf29427291" translate="yes" xml:space="preserve">
          <source>Window.postMessage</source>
          <target state="translated">Window.postMessage</target>
        </trans-unit>
        <trans-unit id="730be718e137a1c210a0ee0fe5c0e5f9c2de5cc0" translate="yes" xml:space="preserve">
          <source>WindowBase64.Base64 encoding and decoding</source>
          <target state="translated">WindowBase64.Base64 エンコーディングとデコーディング</target>
        </trans-unit>
        <trans-unit id="ad1e0b4c85449d1543b482c415e6853a319bc6be" translate="yes" xml:space="preserve">
          <source>WindowClient</source>
          <target state="translated">WindowClient</target>
        </trans-unit>
        <trans-unit id="9d6627e726b5cd54a1cdade14ee86172c35a6398" translate="yes" xml:space="preserve">
          <source>WindowClient.focus</source>
          <target state="translated">WindowClient.focus</target>
        </trans-unit>
        <trans-unit id="ec8da8acf8bd50ef4044dfab3009d325a98d632a" translate="yes" xml:space="preserve">
          <source>WindowClient.focused</source>
          <target state="translated">WindowClient.focused</target>
        </trans-unit>
        <trans-unit id="1718e9d8b2b7bfa5a3830b3afea61429c64a9927" translate="yes" xml:space="preserve">
          <source>WindowClient.navigate</source>
          <target state="translated">WindowClient.navigate</target>
        </trans-unit>
        <trans-unit id="414bb71b657edc2dbb3e1b5db8e46d07f3c53362" translate="yes" xml:space="preserve">
          <source>WindowClient.visibilityState</source>
          <target state="translated">WindowClient.visibilityState</target>
        </trans-unit>
        <trans-unit id="1a6e732a37845c36fcda3afa6f1ba0d920b0ebca" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers</source>
          <target state="translated">WindowEventHandlers</target>
        </trans-unit>
        <trans-unit id="e0d5cb550a45faff2b9506f4b1765ed96267e3d0" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onafterprint</source>
          <target state="translated">WindowEventHandlers.onafterprint</target>
        </trans-unit>
        <trans-unit id="db85a0101308193e4bd8f57371bfe0436c9b17e9" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onbeforeprint</source>
          <target state="translated">WindowEventHandlers.onbeforeprint</target>
        </trans-unit>
        <trans-unit id="e444d73e40f34442ebc5f8ee36601c99cefeed62" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onbeforeunload</source>
          <target state="translated">WindowEventHandlers.onbeforeunload</target>
        </trans-unit>
        <trans-unit id="f5a28eaed2e9a3c4e1935f2031b3f4db7f6edac5" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onhashchange</source>
          <target state="translated">WindowEventHandlers.onhashchange</target>
        </trans-unit>
        <trans-unit id="ca66e4b89923d5faa447ef489205809bbe8c39f8" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onlanguagechange</source>
          <target state="translated">WindowEventHandlers.onlanguagechange</target>
        </trans-unit>
        <trans-unit id="2b858c20f019e6dc8a0ccff83249f8d8755a39ec" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onmessage</source>
          <target state="translated">WindowEventHandlers.onmessage</target>
        </trans-unit>
        <trans-unit id="80407d07cac41a8f7d9ca0dbc6a431d605e997d2" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onmessageerror</source>
          <target state="translated">WindowEventHandlers.onmessageerror</target>
        </trans-unit>
        <trans-unit id="1e6db104f8269652f6af517cad59bddb8ab54bd8" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onpopstate</source>
          <target state="translated">WindowEventHandlers.onpopstate</target>
        </trans-unit>
        <trans-unit id="b5295ee0cadfbc9f05a94859c94f84fd25dc8090" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onrejectionhandled</source>
          <target state="translated">WindowEventHandlers.onrejectionhandled</target>
        </trans-unit>
        <trans-unit id="29b824c41f886a5eaa4aa169891d4c0c368c473c" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onstorage</source>
          <target state="translated">WindowEventHandlers.onstorage</target>
        </trans-unit>
        <trans-unit id="1cc5da3986b0d97b681eb258ee732cdbaa51cf68" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onunhandledrejection</source>
          <target state="translated">WindowEventHandlers.onunhandledrejection</target>
        </trans-unit>
        <trans-unit id="4ee3a8b6d5951c23c66f22e4e25378ec88fcc7af" translate="yes" xml:space="preserve">
          <source>WindowEventHandlers.onunload</source>
          <target state="translated">WindowEventHandlers.onunload</target>
        </trans-unit>
        <trans-unit id="4695cae95157eec4a2f36b8710914191b7160a60" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope</source>
          <target state="translated">WindowOrWorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="d763098d050b46b02a523444b14d83e6f520d9d4" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope mixin</source>
          <target state="translated">WindowOrWorkerGlobalScope ミキシン</target>
        </trans-unit>
        <trans-unit id="097752d5e348c24d5a189c3ca9fab78d55edd767" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.atob</source>
          <target state="translated">WindowOrWorkerGlobalScope.atob</target>
        </trans-unit>
        <trans-unit id="efc90a4cc92535fec2b748e4d0c3139ab6e37dc1" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.btoa</source>
          <target state="translated">WindowOrWorkerGlobalScope.btoa</target>
        </trans-unit>
        <trans-unit id="3d20e90dd0a29c76ced115f916d7a14a46329a5e" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.caches</source>
          <target state="translated">WindowOrWorkerGlobalScope.caches</target>
        </trans-unit>
        <trans-unit id="7dd146554d30a2996c66fae533a3e3c64a8c7159" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.clearInterval</source>
          <target state="translated">WindowOrWorkerGlobalScope.clearInterval</target>
        </trans-unit>
        <trans-unit id="62bdc2ee357307721b13e63db237f52f659efe11" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.clearTimeout</source>
          <target state="translated">WindowOrWorkerGlobalScope.clearTimeout</target>
        </trans-unit>
        <trans-unit id="b5be5c80eb9dcc1f179f98df9281505a83260eac" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.createImageBitmap</source>
          <target state="translated">WindowOrWorkerGlobalScope.createImageBitmap</target>
        </trans-unit>
        <trans-unit id="2ca6e3e1ac96b6d84d852f89047da28707a24b60" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.fetch</source>
          <target state="translated">WindowOrWorkerGlobalScope.fetch</target>
        </trans-unit>
        <trans-unit id="7cc7c43efcbd55a98bbced2e7dbf78253d2fa4e5" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.indexedDB</source>
          <target state="translated">WindowOrWorkerGlobalScope.indexedDB</target>
        </trans-unit>
        <trans-unit id="56962c266078a8dfca6eb0d27c27f1b8f74ec9a6" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.isSecureContext</source>
          <target state="translated">WindowOrWorkerGlobalScope.isSecureContext</target>
        </trans-unit>
        <trans-unit id="412904ea302f96e7e920b5afdf1e9c0dc1137495" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.origin</source>
          <target state="translated">WindowOrWorkerGlobalScope.origin</target>
        </trans-unit>
        <trans-unit id="7b2908b81e1bd458f36a12196a0149d1180c5c2c" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.setInterval</source>
          <target state="translated">WindowOrWorkerGlobalScope.setInterval</target>
        </trans-unit>
        <trans-unit id="20aa5c5c874ca192a5c0e6e9063131a2c6249f6e" translate="yes" xml:space="preserve">
          <source>WindowOrWorkerGlobalScope.setTimeout</source>
          <target state="translated">WindowOrWorkerGlobalScope.setTimeout</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="deebb7cd337d6895afb7ebc103c7f94f9207cd40" translate="yes" xml:space="preserve">
          <source>Windows 32-bit</source>
          <target state="translated">ウィンドウズ32ビット</target>
        </trans-unit>
        <trans-unit id="9cdfc54cc3b508486d3c59faddc9ea935b42584b" translate="yes" xml:space="preserve">
          <source>Windows 64-bit (32-bit build)</source>
          <target state="translated">Windows 64ビット(32ビットビルド</target>
        </trans-unit>
        <trans-unit id="2840441da35f1084b02fc6bd50f15074d123f5f4" translate="yes" xml:space="preserve">
          <source>Windows 64-bit (64-bit build)</source>
          <target state="translated">Windows 64 ビット (64 ビットビルド)</target>
        </trans-unit>
        <trans-unit id="ed4932a7d32c6b1177526419c99a7cb3119925da" translate="yes" xml:space="preserve">
          <source>Windows CE</source>
          <target state="translated">ウィンドウズシーイー</target>
        </trans-unit>
        <trans-unit id="336c28309e5afeb0c32155db22da77f63062ac51" translate="yes" xml:space="preserve">
          <source>Windows NT x.y</source>
          <target state="translated">ウィンドウズエヌティーエックスイー</target>
        </trans-unit>
        <trans-unit id="39f688fd5cdc12e1f9cfb5fdb1b6ddc424d6165f" translate="yes" xml:space="preserve">
          <source>Windows NT x.y; WOW64</source>
          <target state="translated">Windows NT x.y;WOW64</target>
        </trans-unit>
        <trans-unit id="84b88ff322a19609192efbdd1b51aaee788f69d8" translate="yes" xml:space="preserve">
          <source>Windows NT x.y; Win64; x64</source>
          <target state="translated">Windows NT x.y;Win64;x64</target>
        </trans-unit>
        <trans-unit id="794350602423fad8a09162b1af95c325f2cea71b" translate="yes" xml:space="preserve">
          <source>Windows are subjected to throttling after 30 seconds, with the same throttling delay rules as specified for window timers (again, see &lt;a href=&quot;windoworworkerglobalscope/settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;Reasons for delays longer than specified&lt;/a&gt;). In Chrome, this value is 10 seconds.</source>
          <target state="translated">ウィンドウは、ウィンドウタイマーに指定されたものと同じスロットル遅延ルールで、30秒後にスロットリングされます（ここでも、&lt;a href=&quot;windoworworkerglobalscope/settimeout#Reasons_for_delays_longer_than_specified&quot;&gt;指定されたよりも長い遅延の理由を&lt;/a&gt;参照してください）。Chromeでは、この値は10秒です。</target>
        </trans-unit>
        <trans-unit id="947f52a223f8d1c40cbde62959f38d0c2399e825" translate="yes" xml:space="preserve">
          <source>Windows support was enabled in Firefox 55.</source>
          <target state="translated">Firefox 55でWindowsのサポートが有効になっていました。</target>
        </trans-unit>
        <trans-unit id="ce5ccaad45e0b5f1fdae7ce25be2d15c9913d784" translate="yes" xml:space="preserve">
          <source>WindowsCE x.y&lt;sup&gt;1&lt;/sup&gt;</source>
          <target state="translated">WindowsCE xy &lt;sup&gt;1&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="b08b8379a55e1493f146e03b1df5f8c29cf0dad7" translate="yes" xml:space="preserve">
          <source>Wiring this up is the same as we've seen before. We create the &lt;a href=&quot;../biquadfilternode&quot;&gt;&lt;code&gt;BiquadFilterNode&lt;/code&gt;&lt;/a&gt;, configure the properties we want for it and connect it through our graph. Different types of biquad filters have different properties &amp;mdash; for instance setting the frequency on a bandpass type adjusts the middle frequency, however on a lowpass it would set the top frequency.</source>
          <target state="translated">これを配線するのは、これまで見てきたのと同じです。&lt;a href=&quot;../biquadfilternode&quot;&gt; &lt;code&gt;BiquadFilterNode&lt;/code&gt; &lt;/a&gt;を作成し、必要なプロパティを構成して、グラフを介して接続します。タイプが異なるバイカッドフィルターは、プロパティが異なります。たとえば、バンドパスタイプで周波数を設定すると、中間周波数が調整されますが、ローパスでは、最高周波数が設定されます。</target>
        </trans-unit>
        <trans-unit id="e59274a3f1b62379fb3b23d357e01ab5b9203b2f" translate="yes" xml:space="preserve">
          <source>Wiring up our controls</source>
          <target state="translated">制御装置の配線</target>
        </trans-unit>
        <trans-unit id="11912a273673cc3dbd7f8d8470a2f28603227b0a" translate="yes" xml:space="preserve">
          <source>Wiring up out control buttons is comparatively simple &amp;mdash; now we can listen for a mouse event on our controls and run this function, as well as stop it when the mouse is released:</source>
          <target state="translated">コントロールボタンの配線は比較的簡単です。これで、コントロールでマウスイベントをリッスンしてこの関数を実行したり、マウスを離したときにそれを停止したりできます。</target>
        </trans-unit>
        <trans-unit id="587941514c3c716b9903ba75d1411936906c3587" translate="yes" xml:space="preserve">
          <source>With &lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt;&lt;code&gt;scissor()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;webglrenderingcontext/clear&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; we can demonstrate how the WebGL drawing buffer is affected by the size of the canvas.</source>
          <target state="translated">&lt;a href=&quot;webglrenderingcontext/scissor&quot;&gt; &lt;code&gt;scissor()&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;webglrenderingcontext/clear&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt;私たちは、WebGLの描画バッファがキャンバスの大きさに影響される方法を示すことができます。</target>
        </trans-unit>
        <trans-unit id="b4034675f295cb5f3e8e6fdc87d027df0afb718b" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;globalAlpha&lt;/code&gt; applied this sets how shapes and images are drawn onto the existing bitmap.</source>
          <target state="translated">&lt;code&gt;globalAlpha&lt;/code&gt; 形やイメージは、既存のビットマップに描画されているどのようにこのセットを適用します。</target>
        </trans-unit>
        <trans-unit id="33042f6c0abb01a45c937d2e32999ac38c5e3e93" translate="yes" xml:space="preserve">
          <source>With Media Source Extensions (MSE), this is changing. MSE allows us to replace the usual single track &lt;code&gt;src&lt;/code&gt; value fed to media elements with a reference to a &lt;code&gt;MediaSource&lt;/code&gt; object, which is a container for information like the ready state of the media for being played, and references to multiple &lt;code&gt;SourceBuffer&lt;/code&gt; objects that represent the different chunks of media that make up the entire stream. MSE gives us finer grained control over how much and how often content is fetched, and some control over memory usage details, such as when buffers are evicted. It lays the groundwork for adaptive bitrate streaming clients (such as those using DASH or HLS) to be built on its extensible API.</source>
          <target state="translated">Media Source Extensions（MSE）では、これは変化しています。 MSEを使用すると、メディア要素に供給される通常の単一トラックの &lt;code&gt;src&lt;/code&gt; 値を、再生可能なメディアの準備状態などの情報のコンテナーである &lt;code&gt;MediaSource&lt;/code&gt; オブジェクトへの参照と、異なるものを表す複数の &lt;code&gt;SourceBuffer&lt;/code&gt; オブジェクトへの参照で置き換えることができますストリーム全体を構成するメディアのチャンク。 MSEを使用すると、コンテンツをフェッチする頻度と頻度をきめ細かく制御できます。また、バッファーがいつ削除されるかなど、メモリ使用量の詳細を制御できます。拡張可能なAPIに基づいて構築されるアダプティブビットレートストリーミングクライアント（DASHやHLSを使用するクライアントなど）の基礎を築きます。</target>
        </trans-unit>
        <trans-unit id="123c426ce26786c920eff725894b3adae3c6b111" translate="yes" xml:space="preserve">
          <source>With Streams being available to JavaScript, this all changes &amp;mdash; you can now start processing raw data with JavaScript bit by bit as soon as it is available on the client-side, without needing to generate a buffer, string, or blob.</source>
          <target state="translated">JavaScriptでStreamsを使用できるようになり、これによりすべての変更が加えられました。クライアント側で使用可能になり次第、JavaScriptで少しずつ生データの処理を開始できます。バッファ、文字列、またはBLOBを生成する必要はありません。</target>
        </trans-unit>
        <trans-unit id="622e96cbd1a045b478716e13976a9a20bdac74dd" translate="yes" xml:space="preserve">
          <source>With animations, use &lt;a href=&quot;../../window/requestanimationframe&quot;&gt;&lt;code&gt;window.requestAnimationFrame()&lt;/code&gt;&lt;/a&gt; instead of &lt;a href=&quot;../../windoworworkerglobalscope/setinterval&quot;&gt;&lt;code&gt;window.setInterval()&lt;/code&gt;&lt;/a&gt; .</source>
          <target state="translated">アニメーションでは、&lt;a href=&quot;../../windoworworkerglobalscope/setinterval&quot;&gt; &lt;code&gt;window.setInterval()&lt;/code&gt; の&lt;/a&gt;代わりに&lt;a href=&quot;../../window/requestanimationframe&quot;&gt; &lt;code&gt;window.requestAnimationFrame()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="0585d73f5f04985cc96e7e4fc8ca2277bcc28ca2" translate="yes" xml:space="preserve">
          <source>With chrome privileges, the property is read-write, otherwise it is read-only. Bear in mind that if you try to set this property without chrome privileges, it will not throw an exception and instead just silently fail. This is to prevent scripts designed to set this property in Internet Explorer from breaking.</source>
          <target state="translated">クロームの権限があれば、このプロパティは読み書き可能で、それ以外の場合は読み取り専用です。クロームの権限がない状態でこのプロパティを設定しようとすると、例外は発生せず、ただ静かに失敗することに注意してください。これは、Internet Explorer でこのプロパティを設定するように設計されたスクリプトが壊れるのを防ぐためです。</target>
        </trans-unit>
        <trans-unit id="75db5ee23b5a65f08162a3cce882d3bcd3e6d83d" translate="yes" xml:space="preserve">
          <source>With each new circle, the opacity of the previous circles underneath is effectively increased. If we were to increase the step count (and thus draw more circles), the background would eventually disappear completely from the center of the image.</source>
          <target state="translated">新しい円を描くたびに、その下にある前の円の不透明度が効果的に増加します。ステップ数を増やすと(つまり、より多くの円を描くことになる)、最終的には背景が画像の中心から完全に消えてしまいます。</target>
        </trans-unit>
        <trans-unit id="58d6fd5a66be936878dc30d2be42354e8d08fffb" translate="yes" xml:space="preserve">
          <source>With our presentation request successful, we now want to start setting up to render content to present to the VRDisplay. First of all we set the canvas to the same size as the VR display area. We do this by getting the &lt;a href=&quot;../vreyeparameters&quot;&gt;&lt;code&gt;VREyeParameters&lt;/code&gt;&lt;/a&gt; for both eyes using &lt;a href=&quot;../vrdisplay/geteyeparameters&quot;&gt;&lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">プレゼンテーションリクエストが成功したので、VRDisplayに提示するコンテンツをレンダリングするための設定を開始します。まず、キャンバスをVR表示領域と同じサイズに設定します。これを行うには、&lt;a href=&quot;../vrdisplay/geteyeparameters&quot;&gt; &lt;code&gt;VRDisplay.getEyeParameters()&lt;/code&gt; &lt;/a&gt;を使用して両眼の&lt;a href=&quot;../vreyeparameters&quot;&gt; &lt;code&gt;VREyeParameters&lt;/code&gt; &lt;/a&gt;を取得します。</target>
        </trans-unit>
        <trans-unit id="475c638ecca2e0aa5deab71cece409d7616d19c9" translate="yes" xml:space="preserve">
          <source>With service workers, the following steps are generally observed for basic set up:</source>
          <target state="translated">サービス業の方では、基本的には以下のような手順で設定していくのが一般的です。</target>
        </trans-unit>
        <trans-unit id="4ef018c89bac5a1f15c8d985b4c3db2ebf523806" translate="yes" xml:space="preserve">
          <source>With some payment handlers (e.g., Apple Pay), dispatched whenever the user changes payment instrument, like switching from a credit card to a debit card.</source>
          <target state="translated">いくつかの決済ハンドラ(例:Apple Pay)では、クレジットカードからデビットカードへの切り替えのように、ユーザーが決済手段を変更するたびにディスパッチされます。</target>
        </trans-unit>
        <trans-unit id="d7b2cee01555913708425f8b4d2d83591aa39ba9" translate="yes" xml:space="preserve">
          <source>With some payment handlers (e.g., Apple Pay), this event handler is called to handle the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; event, which is dispatched when the user agent requires that the merchant validate that the merchant or vendor requesting payment is legitimate.</source>
          <target state="translated">一部の支払いハンドラ（例えば、アップルペイ）では、このイベントハンドラを処理するために呼び出され &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/merchantvalidation&quot;&gt;merchantvalidation&lt;/a&gt;&lt;/code&gt; のユーザエージェントは、商人やベンダーが支払いを要求していることを商人の検証が正当であることを必要とするときに送出されるイベントを、。</target>
        </trans-unit>
        <trans-unit id="283c8f301ff63a2a1b520c116d14517c3c3e3aab" translate="yes" xml:space="preserve">
          <source>With tabbed browsing, there is a reasonable chance that any given webpage is in the background and thus not visible to the user. The Page Visibility API provides events you can watch for to know when a document becomes visible or hidden, as well as features to look at the current visibility state of the page.</source>
          <target state="translated">タブブラウジングでは、任意のウェブページがバックグラウンドにあるため、ユーザーからは見えない可能性があります。ページの可視性 API は、ドキュメントが可視または非表示になったときに知るためのイベントや、ページの現在の可視性の状態を見るための機能を提供しています。</target>
        </trans-unit>
        <trans-unit id="8f88bdd2d45f0f48ea15e71d299b791576eb1ed4" translate="yes" xml:space="preserve">
          <source>With that all in mind, let's take a look at the code to create an IIR filter with the Web Audio API.</source>
          <target state="translated">それでは、Web Audio API を使って IIR フィルタを作成するコードを見てみましょう。</target>
        </trans-unit>
        <trans-unit id="824f585c959f8f70672e6232e46d690305fb4be1" translate="yes" xml:space="preserve">
          <source>With that in hand, we set the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt; to 50-pixel-tall &quot;serif&quot; (the user's default &lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;serif&lt;/a&gt; font), then call &lt;code&gt;fillText()&lt;/code&gt; to draw the text &quot;Hello world,&quot; starting at the coordinates (50, 90).</source>
          <target state="translated">これを手にして、&lt;a href=&quot;font&quot;&gt; &lt;code&gt;font&lt;/code&gt; &lt;/a&gt;を高さ50ピクセルの「serif」（ユーザーのデフォルトの&lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;セリフ&lt;/a&gt;フォント）に設定し、 &lt;code&gt;fillText()&lt;/code&gt; を呼び出して、座標（50、90）から始まる「Hello world」というテキストを描画します。</target>
        </trans-unit>
        <trans-unit id="04ea948dd70fbbf6b77fcd91951fefee88e0fd3f" translate="yes" xml:space="preserve">
          <source>With that in hand, we set the &lt;a href=&quot;font&quot;&gt;&lt;code&gt;font&lt;/code&gt;&lt;/a&gt; to 50-pixel-tall &quot;serif&quot; (the user's default &lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;serif&lt;/a&gt; font), then call &lt;code&gt;strokeText()&lt;/code&gt; to draw the text &quot;Hello world,&quot; starting at the coordinates (50, 90).</source>
          <target state="translated">これを手にして、&lt;a href=&quot;font&quot;&gt; &lt;code&gt;font&lt;/code&gt; &lt;/a&gt;を高さ50ピクセルの「セリフ」（ユーザーのデフォルトの&lt;a href=&quot;https://en.wikipedia.org/wiki/serif&quot;&gt;セリフ&lt;/a&gt;フォント）に設定し、 &lt;code&gt;strokeText()&lt;/code&gt; を呼び出して、座標（50、90）から始まる「Hello world」というテキストを描画します。</target>
        </trans-unit>
        <trans-unit id="524dce0be1ce55ccc6b932d6f3166cabf9853e0c" translate="yes" xml:space="preserve">
          <source>With that key, we will be able to compute the &lt;em&gt;mac&lt;/em&gt; of the data.</source>
          <target state="translated">そのキーを使用して、データの&lt;em&gt;MAC&lt;/em&gt;を計算できます。</target>
        </trans-unit>
        <trans-unit id="81e3cc29ef214d7f001756261741ed56bf894b75" translate="yes" xml:space="preserve">
          <source>With the &quot;Include local directory pass when uploading files to a server&quot; option enabled, IE will change the filename inside the &lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; on the fly. To have direct control of the sent filename, the developer should send the filename as the third parameter value, i.e. &lt;code&gt;formData.append(name, value, filename)&lt;/code&gt;.</source>
          <target state="translated">[サーバーにファイルをアップロードするときにローカルディレクトリパスを含める]オプションを有効にすると、IEは&lt;a href=&quot;https://developer.mozilla.org/docs/Web/API/Blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;内のファイル名をオンザフライで変更します。送信されるファイル名を直接制御するには、開発者はファイル名を3番目のパラメーター値として送信する必要があります。つまり、 &lt;code&gt;formData.append(name, value, filename)&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="0b2bd2ea3acafa99b467b627258375ddc9ca19c7" translate="yes" xml:space="preserve">
          <source>With the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event, the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property is initialized to the effect that the user is requesting. The user can modify the desired effect by pressing modifier keys. Although the exact keys used vary by platform, typically the Shift and Control keys would be used to switch between copying, moving, and linking. The mouse pointer will change to indicate which operation is desired; for instance, for a copy, the cursor might appear with a plus sign next to it.</source>
          <target state="translated">&lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントと &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベント、&lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; プロパティの&lt;/a&gt;プロパティは、ユーザーが要求していると効果に初期化されます。ユーザーは修飾キーを押すことにより、目的の効果を変更できます。使用される正確なキーはプラットフォームによって異なりますが、通常、ShiftキーとControlキーを使用して、コピー、移動、リンクを切り替えます。マウスポインタが変わり、必要な操作が示されます。たとえば、コピーの場合、カーソルの横にプラス記号が表示されることがあります。</target>
        </trans-unit>
        <trans-unit id="90dd4ea9efa94f11d39366b3dc421afbcde1b22b" translate="yes" xml:space="preserve">
          <source>With the IIRFIlter node it's up to you to set what &lt;code&gt;feedforward&lt;/code&gt; and &lt;code&gt;feedback&lt;/code&gt; values the filter needs &amp;mdash; this determines the characteristics of the filter. The downside is that this involves some complex maths.</source>
          <target state="translated">IIRFIlterノードでは、フィルターに必要な &lt;code&gt;feedforward&lt;/code&gt; 値と &lt;code&gt;feedback&lt;/code&gt; 値を設定する必要があります。これにより、フィルターの特性が決まります。欠点は、これにはいくつかの複雑な数学が含まれることです。</target>
        </trans-unit>
        <trans-unit id="3c0e5e110d6fecbc0aa44994529f76d105b26872" translate="yes" xml:space="preserve">
          <source>With the Web Animations API, all you need to change is just one little property!</source>
          <target state="translated">Web Animations APIを使えば、変更する必要があるのは1つの小さなプロパティだけです。</target>
        </trans-unit>
        <trans-unit id="a85d0b6832368867becfacd793181be50c35ca7b" translate="yes" xml:space="preserve">
          <source>With the Web Animations API, we can move interactive animations from stylesheets to JavaScript, separating presentation from behavior. We no longer need to rely on DOM-heavy techniques such as writing CSS properties and scoping classes onto elements to control playback direction. And unlike pure, declarative CSS, JavaScript also lets us dynamically set values from properties to durations. For building custom animation libraries and creating interactive animations, the Web Animations API might be the perfect tool for the job. Let's see what it can do!</source>
          <target state="translated">Web Animations API を使用すると、インタラクティブなアニメーションをスタイルシートから JavaScript に移行し、プレゼンテーションとビヘイビアを分離することができます。CSS のプロパティを書いたり、再生方向を制御するために要素にクラスをスコープするなど、DOM を多用するテクニックに頼る必要はもうありません。また、純粋な宣言的CSSとは異なり、JavaScriptではプロパティからデュレーションまでの値を動的に設定することができます。カスタムアニメーションライブラリの構築やインタラクティブなアニメーションの作成には、Web Animations APIが最適なツールかもしれません。何ができるのか見てみましょう</target>
        </trans-unit>
        <trans-unit id="a54e82323c0ae7c79ee68042b2e1bb2d7ca8fd44" translate="yes" xml:space="preserve">
          <source>With the association in place between the vertex buffer for our shape and the &lt;code&gt;aVertexPosition&lt;/code&gt; attribute used to deliver vertexes one by one into the vertex shader, we're ready to draw the shape by calling &lt;a href=&quot;../webglrenderingcontext/drawarrays&quot;&gt;&lt;code&gt;drawArrays()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シェイプの頂点バッファーと頂点シェーダーに頂点を1つずつ配信するために使用される &lt;code&gt;aVertexPosition&lt;/code&gt; 属性の間に関連付けが設定されている&lt;a href=&quot;../webglrenderingcontext/drawarrays&quot;&gt; &lt;code&gt;drawArrays()&lt;/code&gt; &lt;/a&gt;呼び出してシェイプを描画する準備が整いました。</target>
        </trans-unit>
        <trans-unit id="55351da2e8fbca9c3979a774ef437b511c178f6e" translate="yes" xml:space="preserve">
          <source>With the association in place between the vertex buffer for our shape and the &lt;code&gt;aVertexPosition&lt;/code&gt; attribute used to deliver vertexes one by one into the vertex shader, we're ready to draw the shape by calling &lt;a href=&quot;drawarrays&quot;&gt;&lt;code&gt;drawArrays()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">シェイプの頂点バッファーと頂点シェーダーに頂点を1つずつ配信するために使用される &lt;code&gt;aVertexPosition&lt;/code&gt; 属性の間に関連付けが設定されている&lt;a href=&quot;drawarrays&quot;&gt; &lt;code&gt;drawArrays()&lt;/code&gt; &lt;/a&gt;呼び出してシェイプを描画する準備が整いました。</target>
        </trans-unit>
        <trans-unit id="372fac645750cd24a713bdd67eb92870c39ea0b9" translate="yes" xml:space="preserve">
          <source>With the built-in popup blockers of Mozilla/Firefox and Internet Explorer 6 SP2, you have to check the return value of &lt;code&gt;window.open()&lt;/code&gt;: it will be &lt;var&gt;null&lt;/var&gt; if the window wasn't allowed to open. However, for most other popup blockers, there is no reliable way.</source>
          <target state="translated">Mozilla / FirefoxとInternet Explorer 6 SP2の組み込みのポップアップブロッカーでは、 &lt;code&gt;window.open()&lt;/code&gt; の戻り値を確認する必要があり &lt;var&gt;null&lt;/var&gt; 。ウィンドウを開くことが許可されていない場合はnullになります。ただし、他のほとんどのポップアップブロッカーでは、信頼できる方法はありません。</target>
        </trans-unit>
        <trans-unit id="16e542e1cdcc282a5a2d4bd8bc7d1a8cf7f93967" translate="yes" xml:space="preserve">
          <source>With the chunks encoded, we then call &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;Array/forEach&lt;/code&gt;&lt;/a&gt; on the resulting array. Inside this block we use &lt;a href=&quot;../writablestreamdefaultwriter/ready&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter.ready&lt;/code&gt;&lt;/a&gt; to check whether the writer is ready to have another chunk written to it. &lt;code&gt;ready&lt;/code&gt; returns a promise that fulfills when this is the case, inside of which we call &lt;a href=&quot;../writablestreamdefaultwriter/write&quot;&gt;&lt;code&gt;WritableStreamDefaultWriter.write()&lt;/code&gt;&lt;/a&gt; to actually write the chunk to the stream. This also triggers the &lt;code&gt;write()&lt;/code&gt; method specified inside the &lt;code&gt;WritableStream()&lt;/code&gt; constructor, as discussed above.</source>
          <target state="translated">チャンクをエンコードした後、結果の配列に対して&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;Array/forEach&lt;/code&gt; &lt;/a&gt;を呼び出します。このブロック内では、&lt;a href=&quot;../writablestreamdefaultwriter/ready&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter.ready&lt;/code&gt; &lt;/a&gt;を使用して、ライターが別のチャンクを書き込む準備ができているかどうかを確認します。 &lt;code&gt;ready&lt;/code&gt; は、これが当てはまる場合に満たされるpromiseを返します。その中で&lt;a href=&quot;../writablestreamdefaultwriter/write&quot;&gt; &lt;code&gt;WritableStreamDefaultWriter.write()&lt;/code&gt; &lt;/a&gt;を呼び出して、実際にチャンクをストリームに書き込みます。これにより、前述のように、 &lt;code&gt;WritableStream()&lt;/code&gt; コンストラクター内で指定された &lt;code&gt;write()&lt;/code&gt; メソッドもトリガーされます。</target>
        </trans-unit>
        <trans-unit id="5bb67e872994a46782754507025c87dd7ad6061a" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;../../canvasrenderingcontext2d/drawimage&quot;&gt;&lt;code&gt;drawImage()&lt;/code&gt;&lt;/a&gt; method, a second canvas and the &lt;a href=&quot;../../canvasrenderingcontext2d/imagesmoothingenabled&quot;&gt;&lt;code&gt;imageSmoothingEnabled&lt;/code&gt;&lt;/a&gt; property, we are able to zoom into our picture and see the details.</source>
          <target state="translated">助けを借りて&lt;a href=&quot;../../canvasrenderingcontext2d/drawimage&quot;&gt; &lt;code&gt;drawImage()&lt;/code&gt; &lt;/a&gt;メソッド、二キャンバスと&lt;a href=&quot;../../canvasrenderingcontext2d/imagesmoothingenabled&quot;&gt; &lt;code&gt;imageSmoothingEnabled&lt;/code&gt; &lt;/a&gt;財産、私たちは絵にズームして詳細を確認することができます。</target>
        </trans-unit>
        <trans-unit id="5bef082f7c4f61bc5cbafc769bef716c244ef51d" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;../fontface&quot;&gt;&lt;code&gt;FontFace&lt;/code&gt;&lt;/a&gt; API, you can explicitly load fonts before using it in canvas.</source>
          <target state="translated">助けを借りて&lt;a href=&quot;../fontface&quot;&gt; &lt;code&gt;FontFace&lt;/code&gt; の&lt;/a&gt; APIは、明示的にキャンバスにそれを使用する前に、フォントをロードすることができます。</target>
        </trans-unit>
        <trans-unit id="7af46fc9bd78e3c73ec4e832eac2cbd0e2ebf0c9" translate="yes" xml:space="preserve">
          <source>With the help of the &lt;a href=&quot;webgl_lose_context&quot;&gt;&lt;code&gt;WEBGL_lose_context&lt;/code&gt;&lt;/a&gt; extension, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; events:</source>
          <target state="translated">助けを借りて&lt;a href=&quot;webgl_lose_context&quot;&gt; &lt;code&gt;WEBGL_lose_context&lt;/code&gt; の&lt;/a&gt;拡張子は、シミュレートすることができ &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; イベント：</target>
        </trans-unit>
        <trans-unit id="6326322bfbb8795b35ede077b61f6922dccb4109" translate="yes" xml:space="preserve">
          <source>With the help of this extension, privileged contexts are able to retrieve debugging information about about the user's graphic driver:</source>
          <target state="translated">この拡張機能の助けを借りて、特権コンテキストはユーザのグラフィックドライバに関するデバッグ情報を取得することができます。</target>
        </trans-unit>
        <trans-unit id="49c0612a2e28d43a1a66b95588c3d7754981bf08" translate="yes" xml:space="preserve">
          <source>With the help of this extension, you can now set the magnification or minification filter in the &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt;&lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt;&lt;/a&gt; method to one of &lt;code&gt;gl.LINEAR&lt;/code&gt;, &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt;, &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt;, or &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt;, and use floating-point textures.</source>
          <target state="translated">この拡張機能を使用して、&lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt; &lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt; &lt;/a&gt;メソッドの拡大または縮小フィルターを &lt;code&gt;gl.LINEAR&lt;/code&gt; 、 &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt; 、 &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt; 、または &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt; のいずれかに設定し、浮動小数点テクスチャを使用できるようになりました。 。</target>
        </trans-unit>
        <trans-unit id="a933ce180c6fad4edba3fab29ef2f91d8cad459f" translate="yes" xml:space="preserve">
          <source>With the help of this extension, you can now set the magnification or minification filter in the &lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt;&lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt;&lt;/a&gt; method to one of &lt;code&gt;gl.LINEAR&lt;/code&gt;, &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt;, &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt;, or &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt;, and use half floating-point textures.</source>
          <target state="translated">この拡張機能を使用して、&lt;a href=&quot;webglrenderingcontext/texparameter&quot;&gt; &lt;code&gt;WebGLRenderingContext.texParameter()&lt;/code&gt; &lt;/a&gt;メソッドの拡大または縮小フィルターを &lt;code&gt;gl.LINEAR&lt;/code&gt; 、 &lt;code&gt;gl.LINEAR_MIPMAP_NEAREST&lt;/code&gt; 、 &lt;code&gt;gl.NEAREST_MIPMAP_LINEAR&lt;/code&gt; 、または &lt;code&gt;gl.LINEAR_MIPMAP_LINEAR&lt;/code&gt; のいずれかに設定し、半浮動小数点を使用できるようになりましたテクスチャ。</target>
        </trans-unit>
        <trans-unit id="2cc00bbddfb710fc0691818558c6fbcb71a5aa34" translate="yes" xml:space="preserve">
          <source>With the index of the vertex position attribute now available in &lt;code&gt;aVertexPosition&lt;/code&gt;, we call &lt;code&gt;enableVertexAttribArray()&lt;/code&gt; to enable the position attribute so it can be used by the shader program (in particular, by the vertex shader).</source>
          <target state="translated">頂点位置属性のインデックスが &lt;code&gt;aVertexPosition&lt;/code&gt; で使用できるようになったので、 &lt;code&gt;enableVertexAttribArray()&lt;/code&gt; を呼び出して位置属性を有効にし、シェーダープログラム（特に頂点シェーダー）で使用できるようにします。</target>
        </trans-unit>
        <trans-unit id="7bf64d3949733da974c20eedab6fd34b775c6a3e" translate="yes" xml:space="preserve">
          <source>With the key generator, the key would be generated automatically as you add the value to the object store. The current number of a key generator is always set to 1 when the object store for that key generator is first created. Basically the newly auto-generated key is increased by 1 based on the previous key. The current number for a key generator never decreases, other than as a result of database operations being reverted, for example, the database transaction is aborted. Therefore deleting a record or even clearing all records from an object store never affects the object store's key generator.</source>
          <target state="translated">キー・ジェネレータでは、オブジェクト・ストアに値を追加すると自動的にキーが生成されます。キー・ジェネレータの現在の番号は、そのキー・ジェネレータのオブジェクト・ストアが最初に作成されたときに、常に1に設定されます。基本的に、新しく自動生成されたキーは、前のキーに基づいて1増加します。鍵生成器の現在の番号は、データベース操作が戻された結果、例えばデータベース・トランザクションが中止された場合を除いて、決して減少しない。したがって、レコードを削除したり、オブジェクト・ストアからすべてのレコードをクリアしたりしても、オブジェクト・ストアのキー・ジェネレータに影響を与えることはありません。</target>
        </trans-unit>
        <trans-unit id="9456e13ad3bc20d9d10f3fdc696c591711a62371" translate="yes" xml:space="preserve">
          <source>With the structure of the site defined, we turn to the styling for the site. Let's look at the style for each component of the page individually.</source>
          <target state="translated">サイトの構造が決まったので、次はサイトのスタイリングに移ります。ページの各コンポーネントのスタイルを個別に見てみましょう。</target>
        </trans-unit>
        <trans-unit id="c4766a07076583dc04214965503b8753a31349a4" translate="yes" xml:space="preserve">
          <source>With the target element in hand, we set the &lt;a href=&quot;../element/scrolltop&quot;&gt;&lt;code&gt;scrollTop&lt;/code&gt;&lt;/a&gt; of the frame's &lt;a href=&quot;../document/scrollingelement&quot;&gt;&lt;code&gt;scrollingElement&lt;/code&gt;&lt;/a&gt; to the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/offsetTop&quot;&gt;&lt;code&gt;offsetTop&lt;/code&gt;&lt;/a&gt; of the target element. By doing so, we set the vertical scrolling position of the frame's document so that it's the same as the top edge of the target element.</source>
          <target state="translated">手にターゲット要素で、我々は設定&lt;a href=&quot;../element/scrolltop&quot;&gt; &lt;code&gt;scrollTop&lt;/code&gt; スプライト&lt;/a&gt;フレームのの&lt;a href=&quot;../document/scrollingelement&quot;&gt; &lt;code&gt;scrollingElement&lt;/code&gt; を&lt;/a&gt;する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/offsetTop&quot;&gt; &lt;code&gt;offsetTop&lt;/code&gt; &lt;/a&gt;ターゲット要素の。そうすることで、フレームのドキュメントの垂直スクロール位置を、ターゲット要素の上端と同じになるように設定します。</target>
        </trans-unit>
        <trans-unit id="e88e8622e274f1ebeb983438f7b26a2f87e8c5e7" translate="yes" xml:space="preserve">
          <source>With the user's permission through a prompt, turns on a camera or screensharing and/or a microphone on the system and provides a &lt;a href=&quot;mediastream&quot;&gt;&lt;code&gt;MediaStream&lt;/code&gt;&lt;/a&gt; containing a video track and/or an audio track with the input.</source>
          <target state="translated">プロンプトを介してユーザーの許可を得て、システムのカメラまたは画面&lt;a href=&quot;mediastream&quot;&gt; &lt;code&gt;MediaStream&lt;/code&gt; &lt;/a&gt;やマイクをオンにし、ビデオトラックやオーディオトラックを含むMediaStreamに入力を提供します。</target>
        </trans-unit>
        <trans-unit id="1b468afcfdf19875b48968ca43a3849d0d8c0094" translate="yes" xml:space="preserve">
          <source>With the vertex data now provided to WebGL, we set &lt;code&gt;vertexNumComponents&lt;/code&gt; to the number of components in each vertex (2, since they're 2D vertexes) and &lt;code&gt;vertexCount&lt;/code&gt; to the number of vertexes in the vertex list.</source>
          <target state="translated">頂点データがWebGLに提供されたので、 &lt;code&gt;vertexNumComponents&lt;/code&gt; を各頂点のコンポーネントの数（2Dは2D頂点であるため2）に &lt;code&gt;vertexCount&lt;/code&gt; し、vertexCountを頂点リストの頂点の数に設定します。</target>
        </trans-unit>
        <trans-unit id="e585e1993bc271947d97639b9e2d7bd6073ffa57" translate="yes" xml:space="preserve">
          <source>With these big concepts under our belts, we can get to more concrete stuff.</source>
          <target state="translated">このような大きな概念があれば、より具体的なものにたどり着くことができます。</target>
        </trans-unit>
        <trans-unit id="39f05fb2284f0bc47f94036cb08c4e0ffa2afcae" translate="yes" xml:space="preserve">
          <source>With these big concepts under our belts, we can get to more concrete stuff. For a tutorial on how to use the API, see &lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Using_IndexedDB&quot;&gt;Using IndexedDB&lt;/a&gt;.</source>
          <target state="translated">これらの大きなコンセプトを身に付ければ、より具体的なものに到達できます。APIの使用方法に関するチュートリアルについては、&lt;a href=&quot;https://developer.mozilla.org/en/IndexedDB/Using_IndexedDB&quot;&gt;IndexedDBの使用を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="9bd411077698f97ffa81e2a28c9b9e7871ccf888" translate="yes" xml:space="preserve">
          <source>With this code in place, each time the user plugs in a camera, microphone, or other media device, or turns one on or off, we call &lt;code&gt;updateDeviceList()&lt;/code&gt; to redraw the list of connected devices.</source>
          <target state="translated">このコードを配置すると、ユーザーがカメラ、マイク、その他のメディアデバイスを接続したり、オンまたはオフにしたりする &lt;code&gt;updateDeviceList()&lt;/code&gt; 、updateDeviceList（）を呼び出して、接続されているデバイスのリストを再描画します。</target>
        </trans-unit>
        <trans-unit id="5d0732cf9cfe5b4099e1505216e0992ca0bde3ae" translate="yes" xml:space="preserve">
          <source>With this code in place, the result looks like this:</source>
          <target state="translated">このコードを配置すると、結果は次のようになります。</target>
        </trans-unit>
        <trans-unit id="ec0404607a980fd5b9cd16a3e85645b9a750988d" translate="yes" xml:space="preserve">
          <source>With this extension, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; events:</source>
          <target state="translated">この拡張機能を使用すると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; イベントをシミュレートできます。</target>
        </trans-unit>
        <trans-unit id="16ea8709d1511ba3b03fccc2295c99744fe633cb" translate="yes" xml:space="preserve">
          <source>With this method, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">このメソッドを使用すると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextlost&quot;&gt;webglcontextlost&lt;/a&gt;&lt;/code&gt; イベントをシミュレートできます。</target>
        </trans-unit>
        <trans-unit id="88f3f7c0e22ab6115c9f43ac1615342d428a4b14" translate="yes" xml:space="preserve">
          <source>With this method, you can simulate the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; event:</source>
          <target state="translated">このメソッドを使用すると、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/webglcontextrestored&quot;&gt;webglcontextrestored&lt;/a&gt;&lt;/code&gt; イベントをシミュレートできます。</target>
        </trans-unit>
        <trans-unit id="8a884c64cfc571fd48023eb4273cf6f26af1099e" translate="yes" xml:space="preserve">
          <source>With this table in place, we can find out the frequency for a given note in a particular octave quite easily. If we want the frequency for the note G# in octave 1, we simply use &lt;code&gt;noteFreq[1][&quot;G#&quot;]&lt;/code&gt; and get the value 51.9 as a result.</source>
          <target state="translated">このテーブルを配置すると、特定のオクターブの特定のノートの周波数を簡単に見つけることができます。オクターブ1のノートG＃の周波数が必要な場合は、 &lt;code&gt;noteFreq[1][&quot;G#&quot;]&lt;/code&gt; を使用して、結果として値51.9を取得します。</target>
        </trans-unit>
        <trans-unit id="892207f2edf7542576ac45a227a9c260fda91319" translate="yes" xml:space="preserve">
          <source>With those settings included it's time to directly draw to the screen using clip space coordinates.</source>
          <target state="translated">これらの設定をした上で、クリップスペース座標を使って直接画面に描画してみましょう。</target>
        </trans-unit>
        <trans-unit id="aa4b5acb4cc342c42949520deb37509c671e5bee" translate="yes" xml:space="preserve">
          <source>With your video properly encoded and adaptive bitrate media generated, you're now ready to begin adaptive bitrate streaming on the web using DASH and MSE.</source>
          <target state="translated">ビデオが適切にエンコードされ、アダプティブビットレートメディアが生成されたら、DASHとMSEを使ってウェブ上でアダプティブビットレートストリーミングを始める準備ができました。</target>
        </trans-unit>
        <trans-unit id="3cc479cbff77863350a14cd5e5acd16377352285" translate="yes" xml:space="preserve">
          <source>Within a web page, there are certain cases where a default drag behavior is used. These include text selections, images, and links. When an image or link is dragged, the URL of the image or link is set as the drag data, and a drag begins. For other elements, they must be part of a selection for a default drag to occur. To see this in effect, select an area of a webpage, and then click and hold the mouse and drag the selection. An OS-specific rendering of the selection will appear and follow the mouse pointer as the drag occurs. However, this behavior is only the default drag behavior, if no listeners adjust the data to be dragged.</source>
          <target state="translated">ウェブページ内では、デフォルトのドラッグ動作が使用される場合があります。テキスト選択、画像、リンクなどがそれにあたります。画像やリンクをドラッグすると、画像やリンクのURLがドラッグデータとして設定され、ドラッグが開始されます。その他の要素については、それらが選択範囲に含まれていないとデフォルトのドラッグが行われません。この効果を確認するには、ウェブページの領域を選択し、マウスをクリックしたまま選択範囲をドラッグします。ドラッグが行われると選択範囲のOS固有のレンダリングが表示され、 マウスポインタに沿って移動します。ただし、リスナーがドラッグするデータを調整していない場合は、この動作はデフォルトのドラッグ動作のみとなります。</target>
        </trans-unit>
        <trans-unit id="fc43be0e00e924dacd3bb06a355176e423ada085" translate="yes" xml:space="preserve">
          <source>Within site CSS</source>
          <target state="translated">サイト内CSS</target>
        </trans-unit>
        <trans-unit id="f493720c0b682bbd7dc9d44627e0f89f05f4be75" translate="yes" xml:space="preserve">
          <source>Within the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; and &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; events, you can check the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property to determine which effect was ultimately chosen. If the chosen effect were &quot;move&quot;, then the original data should be removed from the source of the drag within the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event.</source>
          <target state="translated">&lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/drop&quot;&gt;drop&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントと &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベント内で、&lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt;プロパティを確認して、最終的に選択された効果を判別できます。選択した効果が「移動」の場合、ドラッグ &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベント内のドラッグのソースから元のデータを削除する必要があります。</target>
        </trans-unit>
        <trans-unit id="1db54bc51e85b2de5417757bf5d36d3b98af01f1" translate="yes" xml:space="preserve">
          <source>Within the SVG DOM, a &amp;lt;coordinate&amp;gt; is represented as an &lt;a href=&quot;../svglength&quot;&gt;&lt;code&gt;SVGLength&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../svganimatedlength&quot;&gt;&lt;code&gt;SVGAnimatedLength&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SVG DOM内、&amp;lt;座標&amp;gt;として表される&lt;a href=&quot;../svglength&quot;&gt; &lt;code&gt;SVGLength&lt;/code&gt; &lt;/a&gt;又は&lt;a href=&quot;../svganimatedlength&quot;&gt; &lt;code&gt;SVGAnimatedLength&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="7d1a551c3e917b6a767f7fe289128cc7bc7c6772" translate="yes" xml:space="preserve">
          <source>Within the WebVTT file itself</source>
          <target state="translated">WebVTTファイル自体の中で</target>
        </trans-unit>
        <trans-unit id="e22f62d4eb22532f66fdef12a14f0847c636b79a" translate="yes" xml:space="preserve">
          <source>Without any boundary collision testing our ball runs out of the canvas quickly. We need to check if the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; position of the ball is out of the canvas dimensions and invert the direction of the velocity vectors. To do so, we add the following checks to the &lt;code&gt;draw&lt;/code&gt; method:</source>
          <target state="translated">境界衝突テストを行わないと、ボールがキャンバスからすぐに足りなくなります。私たちは、かどうかを確認する必要がある &lt;code&gt;x&lt;/code&gt; と &lt;code&gt;y&lt;/code&gt; のボールの位置がキャンバス寸法から外れていると速度ベクトルの方向を反転します。これを行うには、次のチェックを &lt;code&gt;draw&lt;/code&gt; メソッドに追加します。</target>
        </trans-unit>
        <trans-unit id="3e48fc16a05b9e5ec9cc58f341586b7b35b9759b" translate="yes" xml:space="preserve">
          <source>Workaround for event.newURL and event.oldURL</source>
          <target state="translated">event.newURL と event.oldURL の回避策</target>
        </trans-unit>
        <trans-unit id="97de39ae118b23bf5c7480efba0263d4b3523884" translate="yes" xml:space="preserve">
          <source>Workarounds</source>
          <target state="translated">Workarounds</target>
        </trans-unit>
        <trans-unit id="99edd8c8e615e373739d2cdd38a8942b8a573113" translate="yes" xml:space="preserve">
          <source>Worker</source>
          <target state="translated">Worker</target>
        </trans-unit>
        <trans-unit id="557ecc750b78133ef46c941190d2035f31c8e3ef" translate="yes" xml:space="preserve">
          <source>Worker Interface</source>
          <target state="translated">ワーカーインタフェース</target>
        </trans-unit>
        <trans-unit id="45f351551597f42a738de45d92186592bc96c2cb" translate="yes" xml:space="preserve">
          <source>Worker code</source>
          <target state="translated">作業者コード</target>
        </trans-unit>
        <trans-unit id="444702735f0fed9f8b96bd9c9c1a013dd2c0cf03" translate="yes" xml:space="preserve">
          <source>Worker context</source>
          <target state="translated">ワーカーコンテキスト</target>
        </trans-unit>
        <trans-unit id="27e5d7b86605ca1f916eb4c434ac66638402dfec" translate="yes" xml:space="preserve">
          <source>Worker feature detection</source>
          <target state="translated">作業者の特徴検出</target>
        </trans-unit>
        <trans-unit id="2817f9e4b4c7c7d617bb714ffa668284ae432a2b" translate="yes" xml:space="preserve">
          <source>Worker threads have access to a global function, &lt;code&gt;importScripts()&lt;/code&gt;, which lets them import scripts. It accepts zero or more URIs as parameters to resources to import; all of the following examples are valid:</source>
          <target state="translated">ワーカースレッドは、スクリプトをインポートできるグローバル関数 &lt;code&gt;importScripts()&lt;/code&gt; にアクセスできます。インポートするリソースへのパラメーターとして0個以上のURIを受け入れます。次の例はすべて有効です。</target>
        </trans-unit>
        <trans-unit id="7fcbf383d375a68e192d36f72dd2a7d644226b70" translate="yes" xml:space="preserve">
          <source>Worker.constructor</source>
          <target state="translated">Worker.constructor</target>
        </trans-unit>
        <trans-unit id="4cb08f8fcfe7ed6a88e084a618784110212fa831" translate="yes" xml:space="preserve">
          <source>Worker.onmessage</source>
          <target state="translated">Worker.onmessage</target>
        </trans-unit>
        <trans-unit id="bdca11fd9765dd33362e4e00434a69f88eefba00" translate="yes" xml:space="preserve">
          <source>Worker.onmessageerror</source>
          <target state="translated">Worker.onmessageerror</target>
        </trans-unit>
        <trans-unit id="c683d0df6a04846df93f030586bbc6677b85a85b" translate="yes" xml:space="preserve">
          <source>Worker.postMessage</source>
          <target state="translated">Worker.postMessage</target>
        </trans-unit>
        <trans-unit id="8d6799029efbbf3fd6883f5e6028ef4f7fb3c461" translate="yes" xml:space="preserve">
          <source>Worker.terminate</source>
          <target state="translated">Worker.terminate</target>
        </trans-unit>
        <trans-unit id="958d8e26e3b98c62cdd72e1f83e755dbf3211860" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope</source>
          <target state="translated">WorkerGlobalScope</target>
        </trans-unit>
        <trans-unit id="db121ff82e01165cc9576f7795aa88da975f66d1" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.importScripts</source>
          <target state="translated">WorkerGlobalScope.importScripts</target>
        </trans-unit>
        <trans-unit id="f6831b001a4cf6b39302eb0fcf3acea67134ff9a" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.location</source>
          <target state="translated">WorkerGlobalScope.location</target>
        </trans-unit>
        <trans-unit id="b1db2dc6f0b0033fceee51aa503e72d4920f6fa2" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.navigator</source>
          <target state="translated">WorkerGlobalScope.navigator</target>
        </trans-unit>
        <trans-unit id="e1a576f4e0b3ba4e6a55bfb7ff67483fc54ed716" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onclose</source>
          <target state="translated">WorkerGlobalScope.onclose</target>
        </trans-unit>
        <trans-unit id="95d483e3ff45af7d10447ed80ad2ba199c13f06d" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onerror</source>
          <target state="translated">WorkerGlobalScope.onerror</target>
        </trans-unit>
        <trans-unit id="5515d9288bba6547d8d55d05cf323a85411e5a85" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onlanguagechange</source>
          <target state="translated">WorkerGlobalScope.onlanguagechange</target>
        </trans-unit>
        <trans-unit id="4483f2487bbc8bb7f126184a5652ac4f8058eb7c" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.onoffline</source>
          <target state="translated">WorkerGlobalScope.onoffline</target>
        </trans-unit>
        <trans-unit id="170c26198a9da8fca9fda3571dc105dc352da134" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.ononline</source>
          <target state="translated">WorkerGlobalScope.ononline</target>
        </trans-unit>
        <trans-unit id="2a557663b947a7e390e61d6222fe7a95a5383d6e" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.performance</source>
          <target state="translated">WorkerGlobalScope.performance</target>
        </trans-unit>
        <trans-unit id="0306d4b19bdff06aa9f87c973cfd2a1e15facbcd" translate="yes" xml:space="preserve">
          <source>WorkerGlobalScope.self</source>
          <target state="translated">WorkerGlobalScope.self</target>
        </trans-unit>
        <trans-unit id="74a0d635bad8cb921832f022e80f37a47e5b135d" translate="yes" xml:space="preserve">
          <source>WorkerLocation</source>
          <target state="translated">WorkerLocation</target>
        </trans-unit>
        <trans-unit id="315e6d0000af41369aa07e54a100988d3fd17dee" translate="yes" xml:space="preserve">
          <source>WorkerNavigator</source>
          <target state="translated">WorkerNavigator</target>
        </trans-unit>
        <trans-unit id="e5fe3477ef2e6d808558d970bc78565c8048db91" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.connection</source>
          <target state="translated">WorkerNavigator.connection</target>
        </trans-unit>
        <trans-unit id="16145348d388cbf26ca66f7579a2ec82840071f0" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.locks</source>
          <target state="translated">WorkerNavigator.locks</target>
        </trans-unit>
        <trans-unit id="ee5a9e6beb452533d5f36a9d23c50fb23b5809da" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.permissions</source>
          <target state="translated">WorkerNavigator.permissions</target>
        </trans-unit>
        <trans-unit id="74dcc4d991545e8d02f0deeddbddf70e41880ee6" translate="yes" xml:space="preserve">
          <source>WorkerNavigator.sendBeacon()</source>
          <target state="translated">WorkerNavigator.sendBeacon()</target>
        </trans-unit>
        <trans-unit id="b6ef3acd0f91c0c6e2a6bad2692c8aa84dfc4c73" translate="yes" xml:space="preserve">
          <source>Workers</source>
          <target state="translated">Workers</target>
        </trans-unit>
        <trans-unit id="92e96706f9c71190a5f854fa3bb63763988bbf36" translate="yes" xml:space="preserve">
          <source>Workers are considered to have their own execution context, distinct from the document that created them. For this reason they are, in general, not governed by the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy&quot;&gt;content security policy&lt;/a&gt; of the document (or parent worker) that created them. So for example, suppose a document is served with the following header:</source>
          <target state="translated">ワーカーは、それらを作成したドキュメントとは異なり、独自の実行コンテキストを持っていると見なされます。このため、一般に、それらを作成したドキュメント（または親ワーカー）の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_Security_Policy&quot;&gt;コンテンツセキュリティポリシー&lt;/a&gt;によって管理されていません。たとえば、ドキュメントに次のヘッダーが付いているとします。</target>
        </trans-unit>
        <trans-unit id="e0faa61746d2dc83992776547c3a106ba44e5fd4" translate="yes" xml:space="preserve">
          <source>Workers are mainly useful for allowing your code to perform processor-intensive calculations without blocking the user interface thread. In this example, a worker is used to calculate Fibonacci numbers.</source>
          <target state="translated">ワーカーは主に、ユーザー インターフェイス スレッドをブロックすることなく、プロセッサ集約的な計算をコードで実行できるようにするのに便利です。この例では、フィボナッチ数の計算にワーカーを使用しています。</target>
        </trans-unit>
        <trans-unit id="6de8a4ef2fd42f731bc7d4aba330b604b8dbf94e" translate="yes" xml:space="preserve">
          <source>Workers can also create a new URL using the &lt;a href=&quot;../url/url&quot;&gt;&lt;code&gt;URL()&lt;/code&gt;&lt;/a&gt; constructor and call any normal method on the returned object.</source>
          <target state="translated">ワーカーは、&lt;a href=&quot;../url/url&quot;&gt; &lt;code&gt;URL()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して新しいURLを作成し、返されたオブジェクトで通常のメソッドを呼び出すこともできます。</target>
        </trans-unit>
        <trans-unit id="bbc0cd62c963e533e26d418859faf51d471ed093" translate="yes" xml:space="preserve">
          <source>Workers can use the static methods &lt;a href=&quot;../url/createobjecturl&quot;&gt;URL.createObjectURL&lt;/a&gt; and &lt;a href=&quot;../url/revokeobjecturl&quot;&gt;URL.revokeObjectURL&lt;/a&gt; with &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; objects accesible to the worker.</source>
          <target state="translated">労働者は、静的メソッドを使用することができます&lt;a href=&quot;../url/createobjecturl&quot;&gt;URL.createObjectURL&lt;/a&gt;と&lt;a href=&quot;../url/revokeobjecturl&quot;&gt;URL.revokeObjectURL&lt;/a&gt;との&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;労働者にづけしたオブジェクトを。</target>
        </trans-unit>
        <trans-unit id="1ee8e17f609e5a3529e298faa3430175587745eb" translate="yes" xml:space="preserve">
          <source>Workers may in turn spawn new workers as long as those workers are hosted within the same &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;origin&lt;/a&gt; as the parent page (Note: nested workers are &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=22723&quot;&gt;currently not implemented in WebKit&lt;/a&gt;). In addition workers may use &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; for network I/O, with the stipulation that the &lt;code&gt;responseXML&lt;/code&gt; and &lt;code&gt;channel&lt;/code&gt; attributes on &lt;code&gt;XMLHttpRequest&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ワーカーは、親ページと同じ&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Security/Same-origin_policy&quot;&gt;オリジン&lt;/a&gt;内でホストされている限り、順番に新しいワーカーを生成できます（注：&lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=22723&quot;&gt;現在、&lt;/a&gt;ネストされたワーカーはWebKitに実装されていません）。また、労働者が使用すること&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;することを規定して、ネットワークI / Oのため &lt;code&gt;responseXML&lt;/code&gt; と &lt;code&gt;channel&lt;/code&gt; 上の属性 &lt;code&gt;XMLHttpRequest&lt;/code&gt; を常に返し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="74cee3adf91cebc05c18c7b9063880a5b0b27ca0" translate="yes" xml:space="preserve">
          <source>Workers may in turn spawn new workers, as long as those workers are hosted within the same origin as the parent page. In addition, workers may use &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; for network I/O, with the exception that the &lt;code&gt;responseXML&lt;/code&gt; and &lt;code&gt;channel&lt;/code&gt; attributes on &lt;code&gt;XMLHttpRequest&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ワーカーが親ページと同じオリジン内でホストされている限り、ワーカーは新しいワーカーを順番に生成できます。また、労働者が使用すること&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;することを除いて、ネットワークI / Oのため &lt;code&gt;responseXML&lt;/code&gt; と &lt;code&gt;channel&lt;/code&gt; 上の属性 &lt;code&gt;XMLHttpRequest&lt;/code&gt; を常に返し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6e654449b2757a4fb08da980d01570baa564b70c" translate="yes" xml:space="preserve">
          <source>Workers may spawn more workers if they wish. So-called sub-workers must be hosted within the same origin as the parent page. Also, the URIs for subworkers are resolved relative to the parent worker's location rather than that of the owning page. This makes it easier for workers to keep track of where their dependencies are.</source>
          <target state="translated">ワーカーは、希望すればさらに多くのワーカーを産み出すことができます。いわゆるサブワーカーは、親ページと同じオリジン内でホストされていなければなりません。また、サブワーカーのURIは、所有するページのURIではなく、親ワーカーの場所を基準にして解決されます。これにより、ワーカーは依存関係がどこにあるかを簡単に追跡することができます。</target>
        </trans-unit>
        <trans-unit id="d5c4ce1a26a6e586b1bdb77deaef520b5287f1fd" translate="yes" xml:space="preserve">
          <source>Workers may, in turn, spawn new workers, as long as those workers are hosted within the same origin as the parent page. In addition, workers may use &lt;a href=&quot;../xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; for network I/O, with the exception that the &lt;code&gt;responseXML&lt;/code&gt; and &lt;code&gt;channel&lt;/code&gt; attributes on &lt;code&gt;XMLHttpRequest&lt;/code&gt; always return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">ワーカーは、親ページと同じオリジン内でホストされている限り、順番に新しいワーカーを生成できます。また、労働者が使用すること&lt;a href=&quot;../xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;することを除いて、ネットワークI / Oのため &lt;code&gt;responseXML&lt;/code&gt; と &lt;code&gt;channel&lt;/code&gt; 上の属性 &lt;code&gt;XMLHttpRequest&lt;/code&gt; を常に返し &lt;code&gt;null&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="dd81953275e4c603fc6e296163f16395c6ee5da7" translate="yes" xml:space="preserve">
          <source>Working Draft</source>
          <target state="translated">ワーキングドラフト</target>
        </trans-unit>
        <trans-unit id="d5d5132306a8d60e8bca8cc47a924e629d79ce94" translate="yes" xml:space="preserve">
          <source>Working with extensions</source>
          <target state="translated">拡張機能を使った作業</target>
        </trans-unit>
        <trans-unit id="3f431c547b0c92488c93507145ba5204b4cd4f9a" translate="yes" xml:space="preserve">
          <source>Working with windows in chrome code</source>
          <target state="translated">クロームコードでウィンドウズを操作する</target>
        </trans-unit>
        <trans-unit id="9a228d880b9910b61ce9bd91c7b7b322839414e9" translate="yes" xml:space="preserve">
          <source>Worklet</source>
          <target state="translated">Worklet</target>
        </trans-unit>
        <trans-unit id="3b5f27aab06de1e65689543feb5bb98725bd1b5d" translate="yes" xml:space="preserve">
          <source>Worklet types</source>
          <target state="translated">ワークレットの種類</target>
        </trans-unit>
        <trans-unit id="bea772fca721f599a72e792fcae363af6b27f58a" translate="yes" xml:space="preserve">
          <source>Worklet.addModule</source>
          <target state="translated">Worklet.addModule</target>
        </trans-unit>
        <trans-unit id="a04589c9de7934ee0efbd0faf239f57f555e123d" translate="yes" xml:space="preserve">
          <source>Worklets Level 1&lt;br/&gt;&lt;small&gt;The definition of 'Worklet' in that specification.&lt;/small&gt;</source>
          <target state="translated">ワークレットレベル1 &lt;br/&gt;&lt;small&gt;その仕様における「ワークレット」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d8e39a843fe2d3c37723b93c44e39e568b5f3fee" translate="yes" xml:space="preserve">
          <source>Worklets Level 1&lt;br/&gt;&lt;small&gt;The definition of 'addModule()' in that specification.&lt;/small&gt;</source>
          <target state="translated">ワークレットレベル1 &lt;br/&gt;&lt;small&gt;その仕様における「addModule（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="1bdb94b6fa73b2bf71f07b2f00f3356bf3d0cd13" translate="yes" xml:space="preserve">
          <source>Worklets are restricted to specific use cases; they cannot be used for arbitrary computations like Web Workers. The &lt;code&gt;Worklet&lt;/code&gt; interface abstracts properties and methods common to all kind of worklets, and cannot be created directly. Instead, you can use one of the following classes:</source>
          <target state="translated">ワークレットは特定の使用例に制限されています。Webワーカーなどの任意の計算には使用できません。 &lt;code&gt;Worklet&lt;/code&gt; のインターフェースはworkletsのすべての種類にプロパティとメソッドの共通の抽象化、および直接作成することはできません。代わりに、次のクラスのいずれかを使用できます。</target>
        </trans-unit>
        <trans-unit id="4f57fa8de020173285d4a3296513c8975f36ae41" translate="yes" xml:space="preserve">
          <source>Wrapping function for texture coordinate &lt;code&gt;r&lt;/code&gt;</source>
          <target state="translated">テクスチャ座標 &lt;code&gt;r&lt;/code&gt; のラッピング関数</target>
        </trans-unit>
        <trans-unit id="b85e9fbd902ae93fc7384ea883cf75e2df7fd24e" translate="yes" xml:space="preserve">
          <source>Wrapping function for texture coordinate &lt;code&gt;s&lt;/code&gt;</source>
          <target state="translated">テクスチャ座標 &lt;code&gt;s&lt;/code&gt; のラッピング関数</target>
        </trans-unit>
        <trans-unit id="6511461a8f068e6307d98b1791e151f29af62ed9" translate="yes" xml:space="preserve">
          <source>Wrapping function for texture coordinate &lt;code&gt;t&lt;/code&gt;</source>
          <target state="translated">テクスチャ座標 &lt;code&gt;t&lt;/code&gt; のラッピング関数</target>
        </trans-unit>
        <trans-unit id="4d77822dc5b91ca9ef4c744ff10647ed567f0c23" translate="yes" xml:space="preserve">
          <source>Wrapping up the startup() method</source>
          <target state="translated">startup()メソッドのラップアップ</target>
        </trans-unit>
        <trans-unit id="86793abc57b7f140d05eafeb0e1a06f397559249" translate="yes" xml:space="preserve">
          <source>Writable streams</source>
          <target state="translated">書き込み可能なストリーム</target>
        </trans-unit>
        <trans-unit id="cb1b8b7b4f6fe87b5560f6db7162aa9f8346d70f" translate="yes" xml:space="preserve">
          <source>WritableStream</source>
          <target state="translated">WritableStream</target>
        </trans-unit>
        <trans-unit id="d3da910dd66c5fbf6bc164bbb7e033ca3b00264d" translate="yes" xml:space="preserve">
          <source>WritableStream.abort</source>
          <target state="translated">WritableStream.abort</target>
        </trans-unit>
        <trans-unit id="5da357be5a24fb338c3c3656fc0d9e834e00cddf" translate="yes" xml:space="preserve">
          <source>WritableStream.constructor</source>
          <target state="translated">WritableStream.constructor</target>
        </trans-unit>
        <trans-unit id="257cc5b9714e97c085901c1434a3eb460f507fc2" translate="yes" xml:space="preserve">
          <source>WritableStream.getWriter</source>
          <target state="translated">WritableStream.getWriter</target>
        </trans-unit>
        <trans-unit id="f028b8f923b52c93fb6b368ce8826ad1c383f7b5" translate="yes" xml:space="preserve">
          <source>WritableStream.locked</source>
          <target state="translated">WritableStream.locked</target>
        </trans-unit>
        <trans-unit id="db95ad84de234c815c23a48ef5f26dbbb569c6e6" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultController</source>
          <target state="translated">WritableStreamDefaultController</target>
        </trans-unit>
        <trans-unit id="ab0bc77d85967d53533c5d405c67eaa9da0762f9" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultController.constructor</source>
          <target state="translated">WritableStreamDefaultController.constructor</target>
        </trans-unit>
        <trans-unit id="1481613ed0eb266f7b0325e8db8cce5e36c19680" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultController.error</source>
          <target state="translated">WritableStreamDefaultController.error</target>
        </trans-unit>
        <trans-unit id="adb31476b8ab736ad37b323dc9b1bbba778122ca" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter</source>
          <target state="translated">WritableStreamDefaultWriter</target>
        </trans-unit>
        <trans-unit id="2baea71edd8514732824138dc1ba8c850eabae62" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.abort</source>
          <target state="translated">WritableStreamDefaultWriter.abort</target>
        </trans-unit>
        <trans-unit id="3195b8588306a7d1edf2e3573482c99902105917" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.close</source>
          <target state="translated">WritableStreamDefaultWriter.close</target>
        </trans-unit>
        <trans-unit id="373e63f5b29bdecdd6fa0d85622dba3930738807" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.closed</source>
          <target state="translated">WritableStreamDefaultWriter.closed</target>
        </trans-unit>
        <trans-unit id="49eca0322e57a91dcf7dc4612ac48cb31bb59265" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.constructor</source>
          <target state="translated">WritableStreamDefaultWriter.constructor</target>
        </trans-unit>
        <trans-unit id="8d5ec6fc733e411c6c35c8805d317d62d645fffb" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.desiredSize</source>
          <target state="translated">WritableStreamDefaultWriter.desiredSize</target>
        </trans-unit>
        <trans-unit id="bf49714da5a0ec81048719f0cd0bb9ad9ddc10bc" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.ready</source>
          <target state="translated">WritableStreamDefaultWriter.ready</target>
        </trans-unit>
        <trans-unit id="6792498dd73efaea90088575539b26425017a2c7" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.releaseLock</source>
          <target state="translated">WritableStreamDefaultWriter.releaseLock</target>
        </trans-unit>
        <trans-unit id="7da63f57b4561f0763d871ef19418a85b416780c" translate="yes" xml:space="preserve">
          <source>WritableStreamDefaultWriter.write</source>
          <target state="translated">WritableStreamDefaultWriter.write</target>
        </trans-unit>
        <trans-unit id="e04761e13f10b5a90ad2cb289d4340d058b4756e" translate="yes" xml:space="preserve">
          <source>Write a new cookie</source>
          <target state="translated">新しいクッキーを書く</target>
        </trans-unit>
        <trans-unit id="55543e48cc6534225c5388e5104b3f8151d092bb" translate="yes" xml:space="preserve">
          <source>Write it back as value of &lt;em&gt;Sec-WebSocket-Accept&lt;/em&gt; response header as part of a HTTP response.</source>
          <target state="translated">&lt;em&gt;Sec-WebSocket-Accept&lt;/em&gt;応答ヘッダーの値として、HTTP応答の一部として書き戻します。</target>
        </trans-unit>
        <trans-unit id="57369ff3e4f8ea463d1b55fdfacdc12457bb0376" translate="yes" xml:space="preserve">
          <source>Write the hash back as the value of &quot;Sec-WebSocket-Accept&quot; response header in an HTTP response</source>
          <target state="translated">HTTP レスポンスの &quot;Sec-WebSocket-Accept&quot; レスポンスヘッダの値としてハッシュを書き戻します。</target>
        </trans-unit>
        <trans-unit id="3931405017ef076792278ee97d7bcbdce21ddc10" translate="yes" xml:space="preserve">
          <source>Write your code, using WebRTC APIs per the specification, knowing that your code should work on all browsers.</source>
          <target state="translated">WebRTC APIを仕様書通りに使用して、すべてのブラウザで動作することを意識してコードを書いてください。</target>
        </trans-unit>
        <trans-unit id="c49376792985d1b88974dcb9ae087990ee557acf" translate="yes" xml:space="preserve">
          <source>Write your own code to negotiate the data transport and write your own code to signal to the other peer that it needs to connect to the new channel.</source>
          <target state="translated">データトランスポートをネゴシエートして、新しいチャネルに接続する必要があることを他のピアに信号を送るための独自のコードを書いてください。</target>
        </trans-unit>
        <trans-unit id="e18520123476873237d468e57f57ef6713062042" translate="yes" xml:space="preserve">
          <source>Writes &lt;em&gt;&lt;code&gt;len&lt;/code&gt;&lt;/em&gt; bytes from the specified byte array starting at offset &lt;em&gt;&lt;code&gt;off&lt;/code&gt;&lt;/em&gt; to this output stream.</source>
          <target state="translated">指定されたバイト配列からオフセット&lt;em&gt; &lt;code&gt;off&lt;/code&gt; で&lt;/em&gt;始まる&lt;em&gt; &lt;code&gt;len&lt;/code&gt; &lt;/em&gt;バイトをこの出力ストリームに書き込みます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e199aae15f0ab86109c1df2c22b120e8d8b4c7cb" translate="yes" xml:space="preserve">
          <source>Writes a line of text in a document.</source>
          <target state="translated">文書内のテキストの行を書き込みます。</target>
        </trans-unit>
        <trans-unit id="21e4b0d93e1e251813913ab939b119fed73858af" translate="yes" xml:space="preserve">
          <source>Writes a message to the console.</source>
          <target state="translated">コンソールにメッセージを書き込みます。</target>
        </trans-unit>
        <trans-unit id="947e9228b06c46f157db71cd1d04fc4bbfc5867f" translate="yes" xml:space="preserve">
          <source>Writes a passed chunk of data to a &lt;a href=&quot;writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt; and its underlying sink, then returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to indicate the success or failure of the write operation.</source>
          <target state="translated">渡されたデータのチャンクを&lt;a href=&quot;writablestream&quot;&gt; &lt;code&gt;WritableStream&lt;/code&gt; &lt;/a&gt;とその基礎となるシンクに書き込み、書き込み操作の成功または失敗を示すように解決する&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="00253bf1b5322cad1ae84c2c63a59b81232f9bde" translate="yes" xml:space="preserve">
          <source>Writes a string of text followed by a newline character to a document.</source>
          <target state="translated">改行文字の後に続く文字列を文書に書き込みます。</target>
        </trans-unit>
        <trans-unit id="4cbc4a9a3fc44dfe4b8664ba2f2e541da673c3eb" translate="yes" xml:space="preserve">
          <source>Writes an error message to the console if the assertion is false. If the assertion is true, nothing happens.</source>
          <target state="translated">アサーションが false の場合、コンソールにエラーメッセージを書き込みます。アサーションが true の場合は何も起こりません。</target>
        </trans-unit>
        <trans-unit id="5b9d47ac2bdaa06766816480f2210af557454a7c" translate="yes" xml:space="preserve">
          <source>Writes arbitrary data to the system clipboard. This asynchronous operation signals that it's finished by resolving the returned &lt;code&gt;Promise&lt;/code&gt;.</source>
          <target state="translated">システムのクリップボードに任意のデータを書き込みます。この非同期操作は、返された &lt;code&gt;Promise&lt;/code&gt; を解決することによって終了したことを通知します。</target>
        </trans-unit>
        <trans-unit id="9b8960f32b77e4309090e69ebd8bcf8716bfcb95" translate="yes" xml:space="preserve">
          <source>Writes audio into the stream at the current offset. Returns the number of bytes actually written to the stream.</source>
          <target state="translated">オーディオを現在のオフセットでストリームに書き込みます。実際にストリームに書き込まれたバイト数を返します。</target>
        </trans-unit>
        <trans-unit id="af189bf4e8f78eeda4d7eb768cffb60dedbf06fc" translate="yes" xml:space="preserve">
          <source>Writes bytes from buffer, offset and size determine length of message.</source>
          <target state="translated">バッファからのバイトの書き込み、オフセット、サイズはメッセージの長さを決定します。</target>
        </trans-unit>
        <trans-unit id="894fd94d264b246782aeb91490b3f4931370f6ec" translate="yes" xml:space="preserve">
          <source>Writes text in a document.</source>
          <target state="translated">文書内のテキストを書き込みます。</target>
        </trans-unit>
        <trans-unit id="e63dfb4f590be37465a41f92795c3a28f4596df0" translate="yes" xml:space="preserve">
          <source>Writes text to the system clipboard, returning a &lt;code&gt;Promise&lt;/code&gt; which is resolved once the text is fully copied into the clipboard.</source>
          <target state="translated">テキストをシステムのクリップボードに書き込み、テキストがクリップボードに完全にコピーされると解決される &lt;code&gt;Promise&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="75cb81f5d9005409ce4dbeb3d073ae62b20017a8" translate="yes" xml:space="preserve">
          <source>Writing CSS Animations with the Web Animations API</source>
          <target state="translated">Web Animations API を使って CSS アニメーションを書く</target>
        </trans-unit>
        <trans-unit id="7bd31533c664cad6c1d5c8b4117b72230f799269" translate="yes" xml:space="preserve">
          <source>Writing Web Audio API code that works in every browser</source>
          <target state="translated">すべてのブラウザで動作するWeb Audio APIコードを書く</target>
        </trans-unit>
        <trans-unit id="06265c3a1b120d66a122daab42a58ce9893ce343" translate="yes" xml:space="preserve">
          <source>Writing WebSocket client applications</source>
          <target state="translated">WebSocketクライアントアプリケーションの記述</target>
        </trans-unit>
        <trans-unit id="ec42012e65f141dfe4b612d0198c10447264de4e" translate="yes" xml:space="preserve">
          <source>Writing WebSocket servers</source>
          <target state="translated">WebSocketサーバの記述</target>
        </trans-unit>
        <trans-unit id="c53f56645448ed404ea76f0eb89de92b15cce24b" translate="yes" xml:space="preserve">
          <source>Writing to a document that has already loaded without calling &lt;a href=&quot;open&quot;&gt;&lt;code&gt;document.open()&lt;/code&gt;&lt;/a&gt; will automatically call &lt;code&gt;document.open&lt;/code&gt;. Once you have finished writing, it is recommended to call &lt;a href=&quot;close&quot;&gt;&lt;code&gt;document.close()&lt;/code&gt;&lt;/a&gt; to tell the browser to finish loading the page. The text you write is parsed into the document's structure model. In the example above, the &lt;code&gt;h1&lt;/code&gt; element becomes a node in the document.</source>
          <target state="translated">&lt;a href=&quot;open&quot;&gt; &lt;code&gt;document.open()&lt;/code&gt; &lt;/a&gt;を呼び出さずに既にロードされているドキュメントに書き込むと、自動的に &lt;code&gt;document.open&lt;/code&gt; が呼び出されます。書き込みが完了したら、&lt;a href=&quot;close&quot;&gt; &lt;code&gt;document.close()&lt;/code&gt; &lt;/a&gt;を呼び出して、ブラウザにページのロードを完了するように指示することをお勧めします。書き込んだテキストは、ドキュメントの構造モデルに解析されます。上記の例では、 &lt;code&gt;h1&lt;/code&gt; 要素がドキュメントのノードになります。</target>
        </trans-unit>
        <trans-unit id="45786e1c7f1ba36f6f3fa162ec9adc900dd40a60" translate="yes" xml:space="preserve">
          <source>Writing to the clipboard is available without permission in secure contexts and browser extensions, but only from user-initiated event callbacks. Browser extensions with the &lt;code&gt;&quot;clipboardWrite&quot;&lt;/code&gt; permission can write to the clipboard at any time.</source>
          <target state="translated">クリップボードへの書き込みは、セキュリティで保護されたコンテキストとブラウザー拡張機能で許可なく使用できますが、ユーザーが開始したイベントコールバックからのみ可能です。 &lt;code&gt;&quot;clipboardWrite&quot;&lt;/code&gt; 権限を持つブラウザ拡張機能は、いつでもクリップボードに書き込むことができます。</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="c484f501ad8135e8cfa50666eb037c60fb38009d" translate="yes" xml:space="preserve">
          <source>X = Vx * sin(&amp;theta;/2)</source>
          <target state="translated">X = Vx * sin（&amp;theta;/ 2）</target>
        </trans-unit>
        <trans-unit id="1e01cba2f6638d438d27938366658f92af3051eb" translate="yes" xml:space="preserve">
          <source>X1 (back) Mouse</source>
          <target state="translated">X1 (背面)マウス</target>
        </trans-unit>
        <trans-unit id="237d1efafbc3e2759b36d1a298cdc97f81476996" translate="yes" xml:space="preserve">
          <source>X2 (forward) Mouse</source>
          <target state="translated">X2 (前方)マウス</target>
        </trans-unit>
        <trans-unit id="97e0a00fd8dc25a78eb8ea7c949d7d4e9c3f8c40" translate="yes" xml:space="preserve">
          <source>XDomain</source>
          <target state="translated">XDomain</target>
        </trans-unit>
        <trans-unit id="855e3d169b349a14867ed875f329653292225aef" translate="yes" xml:space="preserve">
          <source>XHR</source>
          <target state="translated">XHR</target>
        </trans-unit>
        <trans-unit id="14df91620c76417e3eabf9c3fc67337392f4a971" translate="yes" xml:space="preserve">
          <source>XHR in Android 4.0 sends empty content for &lt;code&gt;FormData&lt;/code&gt; with &lt;code&gt;blob&lt;/code&gt;.</source>
          <target state="translated">Android 4.0のXHRは、 &lt;code&gt;blob&lt;/code&gt; を &lt;code&gt;FormData&lt;/code&gt; してFormDataの空のコンテンツを送信します。</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="f48015ce22da2cb62dc55092e9e541944096e051" translate="yes" xml:space="preserve">
          <source>XML content may use the &lt;code&gt;text/xml&lt;/code&gt; type, but you should ensure that the data value is well-formed XML.</source>
          <target state="translated">XMLコンテンツでは &lt;code&gt;text/xml&lt;/code&gt; タイプを使用できますが、データ値が整形式のXMLであることを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="cbfb5e9da4d4e953346b880559ac2756d402c79d" translate="yes" xml:space="preserve">
          <source>XMLHTTPRequest</source>
          <target state="translated">XMLHTTPRequest</target>
        </trans-unit>
        <trans-unit id="1a1dc754a10525066d7d47c74e38c2ea14cb7e3f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest</source>
          <target state="translated">XMLHttpRequest</target>
        </trans-unit>
        <trans-unit id="9c7ac98c5678de235355b246629689d55756876e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest - REST and the Rich User Experience</source>
          <target state="translated">XMLHttpRequest-REST とリッチユーザーエクスペリエンス</target>
        </trans-unit>
        <trans-unit id="d48537600e415d0b70f2c0c7986f879ac4ce3d8f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.HTML in XMLHttpRequest</source>
          <target state="translated">XMLHttpRequestのXMLHttpRequest.HTML</target>
        </trans-unit>
        <trans-unit id="184713aba0b06a3ef26cdf2cb1845a34d124e9c4" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.Synchronous and Asynchronous Requests</source>
          <target state="translated">XMLHttpRequest.SynchronousとAsynchronousのリクエスト</target>
        </trans-unit>
        <trans-unit id="58c9e1ac412a8a9fd10ae2678a48305d78262c19" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.Using XMLHttpRequest</source>
          <target state="translated">XMLHttpRequest.Using XMLHttpRequestを使用する</target>
        </trans-unit>
        <trans-unit id="1e13e5f7185280de648b1bba241ab7dd98343fd9" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.abort</source>
          <target state="translated">XMLHttpRequest.abort</target>
        </trans-unit>
        <trans-unit id="8ade0ba8152baaa16000d1e18549499ac95853c1" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.channel</source>
          <target state="translated">XMLHttpRequest.channel</target>
        </trans-unit>
        <trans-unit id="955808f3ce72fee7425e29ce5ea98a4893fb1439" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.channel is an &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIChannel&quot;&gt;nsIChannel&lt;/a&gt;&lt;/code&gt; that used by the object when performing the request. This is &lt;code&gt;null&lt;/code&gt; if the channel hasn't been created yet. In the case of a multi-part request, this is the initial channel, not the different parts in the multi-part request. &lt;strong&gt;Requires elevated privileges to access.&lt;/strong&gt;</source>
          <target state="translated">XMLHttpRequest.channelは、リクエストを実行するときにオブジェクトによって使用される &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIChannel&quot;&gt;nsIChannel&lt;/a&gt;&lt;/code&gt; です。チャネルがまだ作成されていない場合、これは &lt;code&gt;null&lt;/code&gt; です。マルチパートリクエストの場合、これは最初のチャネルであり、マルチパートリクエストの異なるパートではありません。&lt;strong&gt;アクセスするには管理者特権が必要です。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4de8f0cc699497a6e084c092f6a12589ab5e0ab1" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.getAllResponseHeaders</source>
          <target state="translated">XMLHttpRequest.getAllResponseHeaders</target>
        </trans-unit>
        <trans-unit id="ec6d6ea9ea7be9bb9fb3e2e596160ae59226845b" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.getResponseHeader</source>
          <target state="translated">XMLHttpRequest.getResponseHeader</target>
        </trans-unit>
        <trans-unit id="6a5ac3629b02948e0cbd31a9d356489be0d62208" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.init()</source>
          <target state="translated">XMLHttpRequest.init()</target>
        </trans-unit>
        <trans-unit id="e11ff8fe84349a0536b8ebea8e77eac02b3005f9" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.onreadystatechange</source>
          <target state="translated">XMLHttpRequest.onreadystatechange</target>
        </trans-unit>
        <trans-unit id="e885975abc209b2f1ced9f1478719dfdb114b4ac" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.open</source>
          <target state="translated">XMLHttpRequest.open</target>
        </trans-unit>
        <trans-unit id="9d89f2fe7c8fdaed4a1559a738c82167bcb1baf7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.openRequest()</source>
          <target state="translated">XMLHttpRequest.openRequest()</target>
        </trans-unit>
        <trans-unit id="403e8e5fd1686f5ac44560f3d25a44ad18d1b426" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.overrideMimeType</source>
          <target state="translated">XMLHttpRequest.overrideMimeType</target>
        </trans-unit>
        <trans-unit id="94e03029629a1a9f2efe6846d4342a49ea5447f7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.readyState</source>
          <target state="translated">XMLHttpRequest.readyState</target>
        </trans-unit>
        <trans-unit id="44aaffbcc2d83cf89c6d27cc6dc61baa7ea0760e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.response</source>
          <target state="translated">XMLHttpRequest.response</target>
        </trans-unit>
        <trans-unit id="e0d968fc57686669b874e373617f99a5a935bef5" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseText</source>
          <target state="translated">XMLHttpRequest.responseText</target>
        </trans-unit>
        <trans-unit id="6a076eabfc4893fca4a5829fff2a9a3ffcb690f5" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseType</source>
          <target state="translated">XMLHttpRequest.responseType</target>
        </trans-unit>
        <trans-unit id="57ceb2818770474b8c62e768fe7f9db2828f2b56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseURL</source>
          <target state="translated">XMLHttpRequest.responseURL</target>
        </trans-unit>
        <trans-unit id="8a1fae050423115e14607649d39e0caf9994a103" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.responseXML</source>
          <target state="translated">XMLHttpRequest.responseXML</target>
        </trans-unit>
        <trans-unit id="dd18743e28f021ed90fe5737b195efda13dc49ee" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.send</source>
          <target state="translated">XMLHttpRequest.send</target>
        </trans-unit>
        <trans-unit id="786937ed1c59de4db64b2a8f1a989c907ba3f1e6" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.sendAsBinary</source>
          <target state="translated">XMLHttpRequest.sendAsBinary</target>
        </trans-unit>
        <trans-unit id="24cf61a93bec456d364b4b240abe412fdea1243f" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.setRequestHeader</source>
          <target state="translated">XMLHttpRequest.setRequestHeader</target>
        </trans-unit>
        <trans-unit id="4e6e73c0f575d9568da304e1e26216f373c2661d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.status</source>
          <target state="translated">XMLHttpRequest.status</target>
        </trans-unit>
        <trans-unit id="b5e4dd6c7e3d308c66492ffaa4033d54e5888852" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.statusText</source>
          <target state="translated">XMLHttpRequest.statusText</target>
        </trans-unit>
        <trans-unit id="f74cae9e57479e3b5b01d1766334502a7000f9b4" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.timeout</source>
          <target state="translated">XMLHttpRequest.timeout</target>
        </trans-unit>
        <trans-unit id="49a6b171f9a873d7d116fe84d4fbbe8e5c47060d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.upload</source>
          <target state="translated">XMLHttpRequest.upload</target>
        </trans-unit>
        <trans-unit id="214c23a08b508fd38d9a8fc0b37887dddf4af9a2" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest.withCredentials</source>
          <target state="translated">XMLHttpRequest.withCredentials</target>
        </trans-unit>
        <trans-unit id="ccf8e117681d1c793356c31e43954acaa6ce763c" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'FormData' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「FormData」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="06bed2935ea9c83774e80c0c4d963f4510deb2aa" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'FormData()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「FormData（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="04915acea4987c520a855ad2669ad1e35685549a" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「ProgressEvent」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="51823600eabe9d6b97e3b2b44f3c1e72b5d54310" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「ProgressEvent（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="8009260d7b46da5f9bd22c4640eb0811d6eea516" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent.lengthComputable' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「ProgressEvent.lengthComputable」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="96dc0453da94420f5252f412f1bb7289ce263d1e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'ProgressEvent.loaded' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「ProgressEvent.loaded」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="066eb04c6dc5060c5872b13c1bb106cc4ec3c30e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'append()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「append（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="62024f985656319fc5fa5c6b4a90e2e6f4f1add7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'delete()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「delete（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a48b46505ed029c2e8e8e599ccfc79da33a7b63d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'entries() (as iterator&amp;lt;&amp;gt;)' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「entries（）（イテレータ&amp;lt;&amp;gt;として）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="a3168bb2ef5c76fdb186ec2740ebc8d050d28f56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'get()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「get（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="0ca5a5bcb9567c368c17013d7709c3380e4fdb56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'getAll()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「getAll（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c18e2f3e7590238f353d1b0ecc696f14aec417a7" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'getAllResponseHeaders()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「getAllResponseHeaders（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="73e3c1f62d7a54c9d8311a5cfc5fd3c39b922d79" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'getResponseHeader()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「getResponseHeader（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="2c4423ae14ed9c228fd680312ae0b3cfe9236db4" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'has()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「has（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="5eb37963c2b4753cb22b727155bf47faaf35b9fd" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'keys() (as iterator&amp;lt;&amp;gt;)' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「keys（）（イテレータ&amp;lt;&amp;gt;として）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="6869b7325a237345873ef1b84f078ca584309108" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'open()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「open（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="76f703ee004aa1470cabe4046e7ef59976e9b664" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'overrideMimeType()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「overrideMimeType（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="c7f70bab78a0e2d17a0dd645e11c66a2343486db" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'responseXML' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「responseXML」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="3189816b7f8d0b211f75059468951dcf7ab94de8" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'send()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「send（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="b2ba2f9c1f6a6b797b8de44721d36a9368ecef7e" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'set()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「set（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="d54d9851eead5fe435a1bd3bff4f9a4419d0356c" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'setRequestHeader()' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様における「setRequestHeader（）」の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="dfb8a510c93e45a85ad3387602a07e471c36377d" translate="yes" xml:space="preserve">
          <source>XMLHttpRequest&lt;br/&gt;&lt;small&gt;The definition of 'values() (as iterator&amp;lt;&amp;gt;)' in that specification.&lt;/small&gt;</source>
          <target state="translated">XMLHttpRequest &lt;br/&gt;&lt;small&gt;その仕様での 'values（）（as iterator &amp;lt;&amp;gt;）'の定義。&lt;/small&gt;</target>
        </trans-unit>
        <trans-unit id="9b68e15e4875c1705acf2dcd068ce37e8fbd2212" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget</source>
          <target state="translated">XMLHttpRequestEventTarget</target>
        </trans-unit>
        <trans-unit id="ef5784b83727e814badf283144796dcf41a3b5d2" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onabort</source>
          <target state="translated">XMLHttpRequestEventTarget.onabort</target>
        </trans-unit>
        <trans-unit id="92a8e777a4ed2873052a3c63cffb8fb82dd07a56" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onerror</source>
          <target state="translated">XMLHttpRequestEventTarget.onerror</target>
        </trans-unit>
        <trans-unit id="1f12987f2230f3f6d0a4a519754bdb20baa514ed" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onload</source>
          <target state="translated">XMLHttpRequestEventTarget.onload</target>
        </trans-unit>
        <trans-unit id="b81824430492121422a2a45bc7e0c4b5cfd04ad6" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onloadstart</source>
          <target state="translated">XMLHttpRequestEventTarget.onloadstart</target>
        </trans-unit>
        <trans-unit id="be50a6b8ccdeab5ebd9ab18e299bb60ff734fc7a" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.onprogress</source>
          <target state="translated">XMLHttpRequestEventTarget.onprogress</target>
        </trans-unit>
        <trans-unit id="0a418644fdcc422515cb9ef63ed0346f9a0bd3b1" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestEventTarget.ontimeout</source>
          <target state="translated">XMLHttpRequestEventTarget.ontimeout</target>
        </trans-unit>
        <trans-unit id="5fff9cda50156cd056976ef35552984685930eca" translate="yes" xml:space="preserve">
          <source>XMLHttpRequestResponseType</source>
          <target state="translated">XMLHttpRequestResponseType</target>
        </trans-unit>
        <trans-unit id="6f3370e25dd9f16a29cc587ca178715bf38adb6b" translate="yes" xml:space="preserve">
          <source>XMLHttpRequests being stopped</source>
          <target state="translated">XMLHttpRequests が停止中</target>
        </trans-unit>
        <trans-unit id="36819db18efcb8496bc5a919d2b1549693e0dfdd" translate="yes" xml:space="preserve">
          <source>XMLSerializer</source>
          <target state="translated">XMLSerializer</target>
        </trans-unit>
        <trans-unit id="a5cff5e2475634402443c4344ad891baaefdc245" translate="yes" xml:space="preserve">
          <source>XMLSerializer.serializeToString</source>
          <target state="translated">XMLSerializer.serializeToString</target>
        </trans-unit>
        <trans-unit id="0a3d7ea26ec76d93907265c923a9954480d5facb" translate="yes" xml:space="preserve">
          <source>XPath</source>
          <target state="translated">XPath</target>
        </trans-unit>
        <trans-unit id="2783bc34941f9b19f098ef9ab8f0564e218d7d13" translate="yes" xml:space="preserve">
          <source>XPath Code Snippets</source>
          <target state="translated">XPath コードスニペット</target>
        </trans-unit>
        <trans-unit id="e2c69e2bbd1fdad1c94f96a26facc9020959a30f" translate="yes" xml:space="preserve">
          <source>XPath expressions can be evaluated on HTML and XML documents.</source>
          <target state="translated">XPath 式は、HTML および XML ドキュメントで評価することができます。</target>
        </trans-unit>
        <trans-unit id="c4afd3f752904891bcc2fb225ebaf2cc76d4aa45" translate="yes" xml:space="preserve">
          <source>XPathExpression</source>
          <target state="translated">XPathExpression</target>
        </trans-unit>
        <trans-unit id="f93fce9e947bc9c55a3456e19482e414a1b12398" translate="yes" xml:space="preserve">
          <source>XPathResult</source>
          <target state="translated">XPathResult</target>
        </trans-unit>
        <trans-unit id="20026dc165c030fe3a5d9609a6e61ab26210cbc1" translate="yes" xml:space="preserve">
          <source>XX</source>
          <target state="translated">XX</target>
        </trans-unit>
        <trans-unit id="e59abfab5a8d9ffbe982c6bea90524b795f90549" translate="yes" xml:space="preserve">
          <source>Y = Vy * sin(&amp;theta;/2)</source>
          <target state="translated">Y = Vy * sin（&amp;theta;/ 2）</target>
        </trans-unit>
        <trans-unit id="b4bd23e305681daab0f9e17ca26b95b668e43017" translate="yes" xml:space="preserve">
          <source>Yaffle&amp;rsquo;s &lt;a href=&quot;https://github.com/Yaffle/EventSource&quot;&gt;EventSource polyfill&lt;/a&gt;</source>
          <target state="translated">Yaffleの&lt;a href=&quot;https://github.com/Yaffle/EventSource&quot;&gt;EventSourceポリフィル&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="1b0956ff65f8c19f33df41e2f1ed1ad0a14ffa34" translate="yes" xml:space="preserve">
          <source>Yet another possibility is to use &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;function's &lt;code&gt;bind&lt;/code&gt;&lt;/a&gt;. Example:</source>
          <target state="translated">さらに別の可能性は、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind&quot;&gt;関数の &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt;を使用することです。例：</target>
        </trans-unit>
        <trans-unit id="ac238ffe71097f39a6d89ce7e305f006d1c5487c" translate="yes" xml:space="preserve">
          <source>Yet another reason to use this property, is for libraries which wish to offer OOP-versions, and non-OOP versions (especially JavaScript modules). For example, if we refer to &quot;this.window.location.href&quot;, a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules&quot;&gt;JavaScript module&lt;/a&gt; could define a property called &quot;window&quot; inside of a class it defined (since no global &quot;window&quot; variable exists for it by default) which could be created after passing in a window object to the module class' constructor. Thus, &quot;this.window&quot; inside of its functions would refer to that window object. In the non-namespaced version, &quot;this.window&quot; would refer back to &quot;window&quot;, and also be able to readily get the document location. Another advantage, is that the objects of such a class (even if the class were defined outside of a module) could change their reference to the window at will, they would not be able to do this if they had hard-coded a reference to &quot;window&quot;. The default in the class could still be set as the current window object.</source>
          <target state="translated">このプロパティを使用するさらに別の理由は、OOPバージョンと非OOPバージョン（特にJavaScriptモジュール）を提供したいライブラリのためです。たとえば、「this.window.location.href」を参照すると、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/JavaScript_code_modules&quot;&gt;JavaScriptモジュール&lt;/a&gt;は、ウィンドウオブジェクトをモジュールクラスのコンストラクターに渡した後に作成できる、定義されたクラスの内部に「ウィンドウ」と呼ばれるプロパティを定義できます（デフォルトではグローバルな「ウィンドウ」変数が存在しないため）。したがって、その関数内の「this.window」は、そのウィンドウオブジェクトを参照します。非名前空間バージョンでは、「this.window」は「window」を参照し、ドキュメントの場所を簡単に取得できます。別の利点は、そのようなクラスのオブジェクト（クラスがモジュールの外部で定義されている場合でも）がウィンドウへの参照を自由に変更できることです。参照をハードコード化している場合、これを行うことができません。 &quot;窓&quot;。クラスのデフォルトは、現在のウィンドウオブジェクトとして設定できます。</target>
        </trans-unit>
        <trans-unit id="37c5eea98bda163a9f361d6b5f5f782803c21f2e" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;can&lt;/em&gt; and &lt;em&gt;should&lt;/em&gt; handle this event through &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;window.addEventListener()&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; event. More documentation is available there.</source>
          <target state="translated">あなたは&lt;em&gt;可能&lt;/em&gt;と&lt;em&gt;すべき&lt;/em&gt;でこのイベントを処理&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;window.addEventListener()&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/beforeunload&quot;&gt;beforeunload&lt;/a&gt;&lt;/code&gt; のイベント。そこには、より多くのドキュメントがあります。</target>
        </trans-unit>
        <trans-unit id="c93a98cde6595b8b666af490dfbed44d2f5957df" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;can&lt;/em&gt; and &lt;em&gt;should&lt;/em&gt; handle this event through &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;window.addEventListener()&lt;/code&gt;&lt;/a&gt; and the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; event. More documentation is available there.</source>
          <target state="translated">あなた&lt;em&gt;ことができます&lt;/em&gt;し、&lt;em&gt;必要があります&lt;/em&gt;を通じてこのイベントを処理&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;window.addEventListener()&lt;/code&gt; &lt;/a&gt;と &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/unload&quot;&gt;unload&lt;/a&gt;&lt;/code&gt; イベント。そこには、より多くのドキュメントがあります。</target>
        </trans-unit>
        <trans-unit id="c2db166a314df5622d6718a6732c9c6a2a46a8ab" translate="yes" xml:space="preserve">
          <source>You &lt;em&gt;should&lt;/em&gt; avoid using this property in new code, and should instead use the &lt;a href=&quot;../event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; passed into the event handler function. This property is not universally supported and even when supported introduces potential fragility to your code.</source>
          <target state="translated">あなたは&lt;em&gt;すべき&lt;/em&gt;新しいコードでは、このプロパティの使用を避け、代わりに使用する必要があります&lt;a href=&quot;../event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt;のイベントハンドラ関数に渡されます。このプロパティは普遍的にサポートされているわけではなく、サポートされている場合でもコードに潜在的な脆弱性をもたらします。</target>
        </trans-unit>
        <trans-unit id="30b74affd88d61a14e7e5c19fe509a7701aeaeb2" translate="yes" xml:space="preserve">
          <source>You also get an &lt;code&gt;activate&lt;/code&gt; event. This is a generally used to do stuff that would have broken the previous version while it was still running, for example getting rid of old caches. This is also useful for removing data that is no longer needed to avoid filling up too much disk space &amp;mdash; each browser has a hard limit on the amount of cache storage that a given service worker can use. The browser does its best to manage disk space, but it may delete the Cache storage for an origin. The browser will generally delete all of the data for an origin or none of the data for an origin.</source>
          <target state="translated">また、 &lt;code&gt;activate&lt;/code&gt; イベントも取得します。これは一般に、古いバージョンのキャッシュを削除するなど、以前のバージョンがまだ実行されているときに、以前のバージョンを壊していたことを行うために使用されます。これは、不要なデータを削除してディスクスペースがいっぱいにならないようにする場合にも役立ちます。各ブラウザーには、特定のService Workerが使用できるキャッシュストレージの量にハード制限があります。ブラウザはディスク容量の管理に最善を尽くしますが、オリジンのキャッシュストレージを削除する場合があります。ブラウザは通常、オリジンのデータをすべて削除するか、オリジンのデータを削除しません。</target>
        </trans-unit>
        <trans-unit id="f66e32f73dcdbc24fb0438bb8f8a58f85efec07d" translate="yes" xml:space="preserve">
          <source>You also need a privileged app, so you need to include this as well:</source>
          <target state="translated">特権アプリも必要なので、これも入れておく必要があります。</target>
        </trans-unit>
        <trans-unit id="c2dd15713e741cd2e21350e48ac9ec95fadb28a9" translate="yes" xml:space="preserve">
          <source>You are also responsible for periodically purging cache entries. Each browser has a hard limit on the amount of cache storage that a given origin can use. Cache quota usage estimates are available via the &lt;a href=&quot;storageestimate&quot;&gt;&lt;code&gt;StorageEstimate&lt;/code&gt;&lt;/a&gt; API. The browser does its best to manage disk space, but it may delete the Cache storage for an origin. The browser will generally delete all of the data for an origin or none of the data for an origin. Make sure to version caches by name and use the caches only from the version of the script that they can safely operate on. See &lt;a href=&quot;service_worker_api/using_service_workers#Deleting_old_caches&quot;&gt;Deleting old caches&lt;/a&gt; for more information.</source>
          <target state="translated">また、定期的にキャッシュエントリをパージする必要があります。各ブラウザには、特定のオリジンが使用できるキャッシュストレージの量にハード制限があります。キャッシュ割り当て使用量の見積もりは、&lt;a href=&quot;storageestimate&quot;&gt; &lt;code&gt;StorageEstimate&lt;/code&gt; &lt;/a&gt; APIを介して利用できます。ブラウザはディスク容量の管理に最善を尽くしますが、オリジンのキャッシュストレージを削除する場合があります。ブラウザは通常、オリジンのデータをすべて削除するか、オリジンのデータを削除しません。キャッシュを名前でバージョン管理し、安全に操作できるスクリプトのバージョンからのみキャッシュを使用するようにしてください。詳細については、&lt;a href=&quot;service_worker_api/using_service_workers#Deleting_old_caches&quot;&gt;古いキャッシュの削除を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="7907845bcf01362e5a619f84c3ff9f9bcfe17f9c" translate="yes" xml:space="preserve">
          <source>You are free to use either constructors or factory methods, or mix both, however there are advantages to using the constructors:</source>
          <target state="translated">コンストラクタやファクトリーメソッドを使うのも自由ですし、両方を混ぜて使うのも自由ですが、コンストラクタを使うことにはメリットがあります。</target>
        </trans-unit>
        <trans-unit id="ce981040499e17cace6bb15a2ca79ec758e110f6" translate="yes" xml:space="preserve">
          <source>You are not running your application through HTTPS.</source>
          <target state="translated">アプリケーションをHTTPSで実行していません。</target>
        </trans-unit>
        <trans-unit id="93284dce17383bd17ae576ca2ebd9e911e84966e" translate="yes" xml:space="preserve">
          <source>You are trying to attach a shadow root to an element outside the HTML namespace, or the element cannot have a shadow attached to it (see above).</source>
          <target state="translated">HTML 名前空間外の要素にシャドウ・ルートをアタッチしようとしているか、その要素にシャドウをアタッチすることができません(上記参照)。</target>
        </trans-unit>
        <trans-unit id="5538054a343b19daed9f0b5cd8150195bf4c32ef" translate="yes" xml:space="preserve">
          <source>You are trying to delete an object store that does not exist. Names are case sensitive.</source>
          <target state="translated">存在しないオブジェクトストアを削除しようとしています。名前は大文字と小文字を区別します。</target>
        </trans-unit>
        <trans-unit id="67c2d30014dc5fe7a096a0bca553e422bcb1b621" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://fullscreen-requestfullscreen-demo.glitch.me/&quot;&gt;see this example in action&lt;/a&gt; or &lt;a href=&quot;https://glitch.com/edit/#!/fullscreen-requestfullscreen-demo&quot;&gt;view or remix the code&lt;/a&gt; on &lt;a href=&quot;http://glitch.com/&quot;&gt;Glitch&lt;/a&gt;.</source>
          <target state="translated">あなたはできる&lt;a href=&quot;https://fullscreen-requestfullscreen-demo.glitch.me/&quot;&gt;アクションでこの例を参照してください&lt;/a&gt;または&lt;a href=&quot;https://glitch.com/edit/#!/fullscreen-requestfullscreen-demo&quot;&gt;ビューまたはコードリミックス&lt;/a&gt;に&lt;a href=&quot;http://glitch.com/&quot;&gt;グリッチを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="b8ca52bd01654e170ffb355c6c9218445ff65d0c" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://github.com/WebAudio/web-audio-api/issues/251&quot;&gt;sub-class an audio node&lt;/a&gt;. While the actual processing is done internally by the browser and cannot be altered, you could write a wrapper around an audio node to provide custom properties and methods.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/WebAudio/web-audio-api/issues/251&quot;&gt;オーディオノードをサブクラス化&lt;/a&gt;できます。実際の処理はブラウザーによって内部で行われ、変更することはできませんが、オーディオノードの周りにラッパーを記述して、カスタムプロパティとメソッドを提供できます。</target>
        </trans-unit>
        <trans-unit id="2a70cd61ca239f25d8dcb998ba9171a4b79e0698" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://mdn.github.io/webaudio-examples/decode-audio-data/&quot;&gt;run the example live&lt;/a&gt; (or &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/decode-audio-data&quot;&gt;view the source&lt;/a&gt;.) Play the song and alter the playback rate for some fun results.</source>
          <target state="translated">&lt;a href=&quot;https://mdn.github.io/webaudio-examples/decode-audio-data/&quot;&gt;サンプルをライブで実行する&lt;/a&gt;（または&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/decode-audio-data&quot;&gt;ソースを表示する&lt;/a&gt;）ことができます。曲を再生し、再生速度を変更して楽しい結果を得ることができます。</target>
        </trans-unit>
        <trans-unit id="1ac4fe1482fcfd739774d775e68b0e2c5245d72b" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://mdn.github.io/webaudio-examples/decode-audio-data/&quot;&gt;run the full example live&lt;/a&gt; (or &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/decode-audio-data/index.html&quot;&gt;view the source&lt;/a&gt;.)</source>
          <target state="translated">&lt;a href=&quot;https://mdn.github.io/webaudio-examples/decode-audio-data/&quot;&gt;完全な例をライブで実行&lt;/a&gt;できます（または&lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/decode-audio-data/index.html&quot;&gt;ソースを表示し&lt;/a&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="52e0b5da662406793287553e9dacb75ac98ee494" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://mdn.mozillademos.org/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element%24samples/Example?revision=1395579&quot;&gt;take a look at all the code&lt;/a&gt;, including the parts hidden above because they aren't critical to the explanation of how the APIs are being used.</source>
          <target state="translated">APIの使用方法の説明に重要ではないため、上に隠された部分を含む&lt;a href=&quot;https://mdn.mozillademos.org/en-US/docs/Web/API/MediaStream_Recording_API/Recording_a_media_element%24samples/Example?revision=1395579&quot;&gt;すべてのコードを確認&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="b03aa5753f4986da11cc559b070d082fafd34185" translate="yes" xml:space="preserve">
          <source>You can &lt;a href=&quot;https://media-play-promise.glitch.me/&quot;&gt;try out or remix this example in real time on Glitch&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://media-play-promise.glitch.me/&quot;&gt;Glitchでこの例をリアルタイムで試すか、リミックス&lt;/a&gt;できます。</target>
        </trans-unit>
        <trans-unit id="08ca0567bebf8778c4da3b3fb53b2d7e0b5b33f6" translate="yes" xml:space="preserve">
          <source>You can access &lt;code&gt;CacheStorage&lt;/code&gt; through the global &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/caches&quot;&gt;&lt;code&gt;caches&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">グローバル&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WorkerGlobalScope/caches&quot;&gt; &lt;code&gt;caches&lt;/code&gt; &lt;/a&gt;プロパティを介して &lt;code&gt;CacheStorage&lt;/code&gt; にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="dc47c92a4fa4f2b807dc1118a2edd63a2ef76e6c" translate="yes" xml:space="preserve">
          <source>You can access a particular form control in the returned collection by using either an index or the element's &lt;a href=&quot;../element/name&quot;&gt;&lt;code&gt;name&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../element/id&quot;&gt;&lt;code&gt;id&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">返されたコレクション内の特定のフォームコントロールにアクセスするには、インデックスまたは要素の&lt;a href=&quot;../element/name&quot;&gt; &lt;code&gt;name&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../element/id&quot;&gt; &lt;code&gt;id&lt;/code&gt; &lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="6af68dd1f15c259f2cc131766c150235f4b63954" translate="yes" xml:space="preserve">
          <source>You can access the list of the form's data-containing elements by examining the form's &lt;a href=&quot;htmlformelement/elements&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; property. This returns an &lt;a href=&quot;htmlformcontrolscollection&quot;&gt;&lt;code&gt;HTMLFormControlsCollection&lt;/code&gt;&lt;/a&gt; listing all of the form's user data entry elements, both those which are descendants of the &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; and those which are made members of the form using their &lt;code&gt;form&lt;/code&gt; attributes.</source>
          <target state="translated">フォームの&lt;a href=&quot;htmlformelement/elements&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt;プロパティを調べることにより、フォームのデータを含む要素のリストにアクセスできます。これは、フォームのすべてのユーザーデータエントリ要素（ &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; の子孫である要素と、 &lt;code&gt;form&lt;/code&gt; 属性を使用してフォームのメンバーになっている要素の両方）をリストする&lt;a href=&quot;htmlformcontrolscollection&quot;&gt; &lt;code&gt;HTMLFormControlsCollection&lt;/code&gt; を&lt;/a&gt;返します。</target>
        </trans-unit>
        <trans-unit id="4fca8042a402fd351a49ac7c652236afae54a377" translate="yes" xml:space="preserve">
          <source>You can access the supported constraints dictionary by calling &lt;code&gt;navigator.mediaDevices.getSupportedConstraints()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;navigator.mediaDevices.getSupportedConstraints()&lt;/code&gt; を呼び出すことで、サポートされている制約辞書にアクセスできます。</target>
        </trans-unit>
        <trans-unit id="37f279619c079f1ad2b58a94311ce73d9225ddae" translate="yes" xml:space="preserve">
          <source>You can add a &lt;code&gt;&quot;track&quot;&lt;/code&gt; event listener to be notified when the new track is available so that you can, for example, attach its media to a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element, using either &lt;a href=&quot;eventtarget/addeventlistener&quot;&gt;&lt;code&gt;RTCPeerConnection.addEventListener()&lt;/code&gt;&lt;/a&gt; or the &lt;code&gt;ontrack&lt;/code&gt; event handler property.</source>
          <target state="translated">あなたは追加することができ &lt;code&gt;&quot;track&quot;&lt;/code&gt; の新しいトラックは、あなたが、たとえば、にそのメディアを添付することができますことを利用できるようにされたときに通知されるイベントリスナーを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;いずれかを使用して、要素&lt;a href=&quot;eventtarget/addeventlistener&quot;&gt; &lt;code&gt;RTCPeerConnection.addEventListener()&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;ontrack&lt;/code&gt; イベントハンドラのプロパティを。</target>
        </trans-unit>
        <trans-unit id="d9a3865166babad5f86b341c6167daf21bacf342" translate="yes" xml:space="preserve">
          <source>You can add a hit region to your path and check for the &lt;a href=&quot;../../mouseevent/region&quot;&gt;&lt;code&gt;MouseEvent.region&lt;/code&gt;&lt;/a&gt; property to test if your mouse is hitting your region, for example.</source>
          <target state="translated">たとえば、ヒット領域をパスに追加し、&lt;a href=&quot;../../mouseevent/region&quot;&gt; &lt;code&gt;MouseEvent.region&lt;/code&gt; &lt;/a&gt;プロパティをチェックして、マウスが領域にヒットしているかどうかをテストできます。</target>
        </trans-unit>
        <trans-unit id="558854bcaa54cbcce3fbe52ef610bd2e770ef846" translate="yes" xml:space="preserve">
          <source>You can add as many color stops to a gradient as you need. Below is a very simple linear gradient from white to black.</source>
          <target state="translated">グラデーションには必要な数だけカラーストップを追加することができます。下の図は、白から黒への非常にシンプルな直線的なグラデーションです。</target>
        </trans-unit>
        <trans-unit id="0048dc8f9ca298c81f2fa3d75775d69606ed9d0d" translate="yes" xml:space="preserve">
          <source>You can add key/value pairs to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; &lt;/a&gt;を使用して、キーと値のペアをこれに追加できます。</target>
        </trans-unit>
        <trans-unit id="e688a1ed171409353a44a79c684a2e09517fed43" translate="yes" xml:space="preserve">
          <source>You can add multiple tokens as well:</source>
          <target state="translated">複数のトークンを追加することも可能です。</target>
        </trans-unit>
        <trans-unit id="4da216f443d7f630812f86f94b053f67c5a6af0d" translate="yes" xml:space="preserve">
          <source>You can also &lt;a href=&quot;http://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;run the code live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-buffer/index.html&quot;&gt;view the source&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://mdn.github.io/webaudio-examples/audio-buffer/&quot;&gt;コードをライブ&lt;/a&gt;で実行したり&lt;a href=&quot;https://github.com/mdn/webaudio-examples/blob/master/audio-buffer/index.html&quot;&gt;、ソースを表示し&lt;/a&gt;たりすることもできます。</target>
        </trans-unit>
        <trans-unit id="406ff04cf3457ee8c863864072197258caf7a74f" translate="yes" xml:space="preserve">
          <source>You can also append a &lt;a href=&quot;../file&quot;&gt;&lt;code&gt;File&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; directly to the &lt;a href=&quot;../formdata&quot;&gt;&lt;code&gt;FormData&lt;/code&gt;&lt;/a&gt; object, like this:</source>
          <target state="translated">次のように、&lt;a href=&quot;../file&quot;&gt; &lt;code&gt;File&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;を&lt;a href=&quot;../formdata&quot;&gt; &lt;code&gt;FormData&lt;/code&gt; &lt;/a&gt;オブジェクトに直接追加することもできます。</target>
        </trans-unit>
        <trans-unit id="dc48c138d8b3a236e0329213c4df50f5af3b441f" translate="yes" xml:space="preserve">
          <source>You can also append additional data to the &lt;code&gt;FormData&lt;/code&gt; object between retrieving it from a form and sending it, like this:</source>
          <target state="translated">次のように、フォームからデータを取得して送信するまでの間に、 &lt;code&gt;FormData&lt;/code&gt; オブジェクトに追加のデータを追加することもできます。</target>
        </trans-unit>
        <trans-unit id="6b5375e30dc9c7e182816f2e291127cde0bd40ab" translate="yes" xml:space="preserve">
          <source>You can also change the constraints of an existing &lt;a href=&quot;../mediastreamtrack&quot;&gt;&lt;code&gt;MediaStreamTrack&lt;/code&gt;&lt;/a&gt; on the fly, by calling the track's &lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt;&lt;code&gt;applyConstraints()&lt;/code&gt;&lt;/a&gt; method, passing into it an object representing the constraints you wish to apply to the track:</source>
          <target state="translated">また、既存の&lt;a href=&quot;../mediastreamtrack&quot;&gt; &lt;code&gt;MediaStreamTrack&lt;/code&gt; の&lt;/a&gt;制約をオンザフライで変更することもできます。それには、トラックの&lt;a href=&quot;../mediastreamtrack/applyconstraints&quot;&gt; &lt;code&gt;applyConstraints()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出し、トラックに適用する制約を表すオブジェクトをそれに渡します。</target>
        </trans-unit>
        <trans-unit id="bd0b492a4f79f41169046301f1322987e2788cee" translate="yes" xml:space="preserve">
          <source>You can also create a &lt;a href=&quot;../../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; from the canvas.</source>
          <target state="translated">キャンバスから&lt;a href=&quot;../../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;を作成することもできます。</target>
        </trans-unit>
        <trans-unit id="791a513b8ad3c13abdd8e24883bf37a13b86fd6c" translate="yes" xml:space="preserve">
          <source>You can also create a &lt;code&gt;DOMPoint&lt;/code&gt; by calling the &lt;a href=&quot;frompoint&quot;&gt;&lt;code&gt;DOMPoint.fromPoint()&lt;/code&gt;&lt;/a&gt; static function. That function accepts as input a &lt;a href=&quot;../dompointinit&quot;&gt;&lt;code&gt;DOMPointInit&lt;/code&gt;&lt;/a&gt; compatible object, including a &lt;code&gt;DOMPoint&lt;/code&gt; or &lt;a href=&quot;../dompointreadonly&quot;&gt;&lt;code&gt;DOMPointReadOnly&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">作成することもでき &lt;code&gt;DOMPoint&lt;/code&gt; を呼び出すことによって&lt;a href=&quot;frompoint&quot;&gt; &lt;code&gt;DOMPoint.fromPoint()&lt;/code&gt; &lt;/a&gt;静的関数を。この関数は、 &lt;code&gt;DOMPoint&lt;/code&gt; または&lt;a href=&quot;../dompointreadonly&quot;&gt; &lt;code&gt;DOMPointReadOnly&lt;/code&gt; &lt;/a&gt;を含む&lt;a href=&quot;../dompointinit&quot;&gt; &lt;code&gt;DOMPointInit&lt;/code&gt; &lt;/a&gt;互換オブジェクトを入力として受け入れます。</target>
        </trans-unit>
        <trans-unit id="ae557e1f0ffb7d35f3eb5d450b9648d5ebb179ad" translate="yes" xml:space="preserve">
          <source>You can also create a new &lt;code&gt;DOMPoint&lt;/code&gt; object using the &lt;a href=&quot;dompoint&quot;&gt;&lt;code&gt;new DOMPoint()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;dompoint&quot;&gt; &lt;code&gt;new DOMPoint()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して、新しい &lt;code&gt;DOMPoint&lt;/code&gt; オブジェクトを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="96111962e97539d845b66f440aa1d75559551c6c" translate="yes" xml:space="preserve">
          <source>You can also create a new &lt;code&gt;DOMPointReadOnly&lt;/code&gt; object using the &lt;a href=&quot;dompointreadonly&quot;&gt;&lt;code&gt;new DOMPointReadOnly()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">&lt;a href=&quot;dompointreadonly&quot;&gt; &lt;code&gt;new DOMPointReadOnly()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して、新しい &lt;code&gt;DOMPointReadOnly&lt;/code&gt; オブジェクトを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="9cb9f784017a4ab37abdaa456d470e025caa8845" translate="yes" xml:space="preserve">
          <source>You can also create a new &lt;code&gt;ImageData&lt;/code&gt; object with the same dimensions as the object specified by &lt;code&gt;anotherImageData&lt;/code&gt;. The new object's pixels are all preset to transparent black. &lt;strong&gt;This does not copy the image data!&lt;/strong&gt;</source>
          <target state="translated">&lt;code&gt;anotherImageData&lt;/code&gt; で指定されたオブジェクトと同じサイズの新しい &lt;code&gt;ImageData&lt;/code&gt; オブジェクトを作成することもできます。新しいオブジェクトのピクセルはすべて、透明な黒にプリセットされています。&lt;strong&gt;これは画像データをコピーしません！&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9d39b522cfef252c89ec9b8923ef5cfee8219d05" translate="yes" xml:space="preserve">
          <source>You can also create indices on any object store, provided the object store holds objects, not primitives. An index lets you look up the values stored in an object store using the value of a property of the stored object, rather than the object's key.</source>
          <target state="translated">オブジェクト ストアがプリミティブではなくオブジェクトを保持している場合は、任意のオブジェクト ストアにインデックスを作成することもできます。インデックスを使用すると、オブジェクトのキーではなく、格納されているオブジェクトのプロパティの値を使用して、オブジェクトストアに格納されている値を調べることができます。</target>
        </trans-unit>
        <trans-unit id="3e5ae3c9ca0613bc21b33f158ee3cb26a95bee53" translate="yes" xml:space="preserve">
          <source>You can also define the style directly in the WebVTT file. In this case, you insert your CSS rules into the file with each rule preceded by the string &lt;code&gt;&quot;STYLE&quot;&lt;/code&gt; all by itelf on a line of text, as shown below:</source>
          <target state="translated">WebVTTファイルで直接スタイルを定義することもできます。この場合、以下に示すように、CSSルールをファイルに挿入し、各ルールの前に &lt;code&gt;&quot;STYLE&quot;&lt;/code&gt; という文字列をすべてitelfによってテキスト行に追加します。</target>
        </trans-unit>
        <trans-unit id="9c38e6bf55d71cf0cb2c410f326dafc95db9b60d" translate="yes" xml:space="preserve">
          <source>You can also jump straight to the &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-capturestill&quot;&gt;code on Github&lt;/a&gt; if you like.</source>
          <target state="translated">必要に応じて&lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-capturestill&quot;&gt;、Github&lt;/a&gt;のコードに直接ジャンプすることもできます。</target>
        </trans-unit>
        <trans-unit id="5159ab522368e969f31b08d805b7b74c5aeae680" translate="yes" xml:space="preserve">
          <source>You can also let the user drag and drop files into your web application.</source>
          <target state="translated">また、ユーザーがウェブアプリケーションにファイルをドラッグ&amp;ドロップできるようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="39943fb52f3f0919f6c3871ce5a1496fea51c0c8" translate="yes" xml:space="preserve">
          <source>You can also listen for events, using &lt;code&gt;addEventListener()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;addEventListener()&lt;/code&gt; を使用して、イベントをリッスンすることもできます。</target>
        </trans-unit>
        <trans-unit id="6c07c3f5d697c9c56f678c763d4202b70e115439" translate="yes" xml:space="preserve">
          <source>You can also make such function able to open only 1 secondary window and to reuse such single secondary window for other links in this manner:</source>
          <target state="translated">また、このように1つのセカンダリウィンドウだけを開くことができるようにして、その1つのセカンダリウィンドウを他のリンクに再利用することもできます。</target>
        </trans-unit>
        <trans-unit id="71f19c0d8b0d97c0933ebf61b3a7a9b2229957d2" translate="yes" xml:space="preserve">
          <source>You can also output multiple objects by simply listing them when calling the logging method, like this:</source>
          <target state="translated">また、ロギングメソッドを呼び出す際に、このように複数のオブジェクトをリストアップするだけで出力することもできます。</target>
        </trans-unit>
        <trans-unit id="fdc1b93cfce2bcdd2b8be26f4cf728678bb6c735" translate="yes" xml:space="preserve">
          <source>You can also parameterize the function to make it versatile, functional in more situations, therefore re-usable in scripts and webpages:</source>
          <target state="translated">また、この関数をパラメータ化して、より多くの状況に対応できるようにし、スクリプトやウェブページで再利用できるようにすることもできます。</target>
        </trans-unit>
        <trans-unit id="24195b6f11b1bfc587e55b366ce42d5dd84a6a48" translate="yes" xml:space="preserve">
          <source>You can also query by ID. For example:</source>
          <target state="translated">また、IDでクエリすることもできます。例えば</target>
        </trans-unit>
        <trans-unit id="6d785b23afe0431fa9705038221b24affed629e3" translate="yes" xml:space="preserve">
          <source>You can also retrieve details of the &lt;a href=&quot;../notification&quot;&gt;&lt;code&gt;Notification&lt;/code&gt;&lt;/a&gt;s that have been fired from the current service worker using &lt;a href=&quot;getnotifications&quot;&gt;&lt;code&gt;ServiceWorkerRegistration.getNotifications()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;getnotifications&quot;&gt; &lt;code&gt;ServiceWorkerRegistration.getNotifications()&lt;/code&gt; &lt;/a&gt;を使用して、現在のサービスワーカーから発行された&lt;a href=&quot;../notification&quot;&gt; &lt;code&gt;Notification&lt;/code&gt; &lt;/a&gt;の詳細を取得することもできます。</target>
        </trans-unit>
        <trans-unit id="d2a8f37b0616efa9c589de4027c87b3bc1bd5790" translate="yes" xml:space="preserve">
          <source>You can also see a &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/channel-messaging-multimessage&quot;&gt;multimessaging demo&lt;/a&gt; (&lt;a href=&quot;http://mdn.github.io/dom-examples/channel-messaging-multimessage/&quot;&gt;run this live&lt;/a&gt;), which shows a slightly more complex setup that can send multiple messages between main page and IFrame.</source>
          <target state="translated">また、&lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/channel-messaging-multimessage&quot;&gt;マルチメッセージングのデモ&lt;/a&gt;（&lt;a href=&quot;http://mdn.github.io/dom-examples/channel-messaging-multimessage/&quot;&gt;このライブを実行&lt;/a&gt;）を見ることができます。これは、メインページとIFrameの間で複数のメッセージを送信できる、もう少し複雑な設定を示しています。</target>
        </trans-unit>
        <trans-unit id="04b375003de71d473b54c9baf91dd84cfbfe84a4" translate="yes" xml:space="preserve">
          <source>You can also see an example that demonstrates &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_View/Coordinate_systems#Example&quot;&gt;how to access the mouse position&lt;/a&gt; information in every available coordinate system.</source>
          <target state="translated">使用可能なすべての座標系で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/CSSOM_View/Coordinate_systems#Example&quot;&gt;マウスの位置&lt;/a&gt;情報にアクセスする方法を示す例も確認できます。</target>
        </trans-unit>
        <trans-unit id="02f36abc730a22f0cc74a4b72e0b59bd70914bdc" translate="yes" xml:space="preserve">
          <source>You can also send files using &lt;code&gt;FormData&lt;/code&gt;. Simply include an &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt;&lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;&lt;/a&gt; element of type &lt;code&gt;file&lt;/code&gt; in your &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;FormData&lt;/code&gt; を使用してファイルを送信することもできます。単純に含める&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input&quot;&gt; &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; &lt;/a&gt;型の要素 &lt;code&gt;file&lt;/code&gt; 自分の中で&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form&quot;&gt; &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; &lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit id="47f75c2bb31de6441f7c82309bf985de6825b250" translate="yes" xml:space="preserve">
          <source>You can also specify the value of the property as simply &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, in which case the user agent will use that value if possible once all efforts have been made to match the &lt;code&gt;exact&lt;/code&gt; and &lt;code&gt;ideal&lt;/code&gt; values for other properties.</source>
          <target state="translated">プロパティの値を単に &lt;code&gt;true&lt;/code&gt; または &lt;code&gt;false&lt;/code&gt; として指定することもできます。その場合、ユーザーエージェントは、他のプロパティの &lt;code&gt;exact&lt;/code&gt; で &lt;code&gt;ideal&lt;/code&gt; 値と一致するようにすべての努力が行われた後、可能であればその値を使用します。</target>
        </trans-unit>
        <trans-unit id="6e5d26b3980bb74d46f7a70e738ddf1f8603e899" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;addEventListener()&lt;/code&gt;&lt;/a&gt; to add a listener for &lt;code&gt;pointerdown&lt;/code&gt; events.</source>
          <target state="translated">&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;addEventListener()&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;pointerdown&lt;/code&gt; イベントのリスナーを追加することもできます。</target>
        </trans-unit>
        <trans-unit id="f829ad3ee74921192e162bbb6674ced9159b3de3" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;isdirectory&quot;&gt;&lt;code&gt;isDirectory&lt;/code&gt;&lt;/a&gt; to determine if the entry is a directory.</source>
          <target state="translated">&lt;a href=&quot;isdirectory&quot;&gt; &lt;code&gt;isDirectory&lt;/code&gt; &lt;/a&gt;を使用して、エントリがディレクトリかどうかを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="6f502a1659e9f1370692df5f693f9287a35e42df" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;isfile&quot;&gt;&lt;code&gt;isFile&lt;/code&gt;&lt;/a&gt; to determine if the entry is a file.</source>
          <target state="translated">&lt;a href=&quot;isfile&quot;&gt; &lt;code&gt;isFile&lt;/code&gt; &lt;/a&gt;を使用して、エントリがファイルかどうかを確認することもできます。</target>
        </trans-unit>
        <trans-unit id="aafced0ab178724e813b827a9b11b941637f5f34" translate="yes" xml:space="preserve">
          <source>You can also use an object literal as &lt;code&gt;headers&lt;/code&gt; in &lt;code&gt;init&lt;/code&gt;.</source>
          <target state="translated">あなたはまた、オブジェクトリテラルを使用することができ &lt;code&gt;headers&lt;/code&gt; 内 &lt;code&gt;init&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="5866697f6534aa6d5c1e52273eb6db7f47be02e3" translate="yes" xml:space="preserve">
          <source>You can also use frames from a video being presented by a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element (even if the video is not visible). For example, if you have a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element with the ID &quot;myvideo&quot;, you can do this:</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素で表示されるビデオのフレームを使用することもできます（ビデオが表示されていない場合でも）。たとえば、IDが「myvideo」の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素がある場合は、次のようにできます。</target>
        </trans-unit>
        <trans-unit id="ff7321d591eba51968fc711534173113f31f868f" translate="yes" xml:space="preserve">
          <source>You can also use other types that you make up for custom purposes. You should strive to always include a plain text alternative unless that object being dragged is specific to a particular site or application. In this case, the custom type ensures that the data cannot be dropped elsewhere.</source>
          <target state="translated">また、カスタム目的で作成した他のタイプを使用することもできます。ドラッグされるオブジェクトが特定のサイトやアプリケーションに固有のものでない限り、常にプレーンテキストの代替型を含めるように努力すべきです。この場合、カスタムタイプはデータを他の場所に落とせないようにします。</target>
        </trans-unit>
        <trans-unit id="5e6cef3a71b9b48c5d59af322be1d9a2155b2ac2" translate="yes" xml:space="preserve">
          <source>You can also use requestAnimationFrame in workers</source>
          <target state="translated">ワーカーでrequestAnimationFrameを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="bdf7f90c4a9575eb00e1b01b5b94e82ea86d073f" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;response/response&quot;&gt;&lt;code&gt;Response.Response()&lt;/code&gt;&lt;/a&gt; constructor to create your own custom &lt;code&gt;Response&lt;/code&gt; object:</source>
          <target state="translated">&lt;a href=&quot;response/response&quot;&gt; &lt;code&gt;Response.Response()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して、独自のカスタム &lt;code&gt;Response&lt;/code&gt; オブジェクトを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="0a90ac35f33ff5a9d21c0b74b755b956173bf103" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;a href=&quot;settransform&quot;&gt;&lt;code&gt;setTransform()&lt;/code&gt;&lt;/a&gt; method to reset the current transform to the identity matrix, like so:</source>
          <target state="translated">次のように、&lt;a href=&quot;settransform&quot;&gt; &lt;code&gt;setTransform()&lt;/code&gt; &lt;/a&gt;メソッドを使用して現在の変換を単位行列にリセットすることもできます。</target>
        </trans-unit>
        <trans-unit id="378710cc940f8fc35a648f0762178ba50d7234ab" translate="yes" xml:space="preserve">
          <source>You can also use the connection between two peers to exchange arbitrary binary data using the &lt;a href=&quot;rtcdatachannel&quot;&gt;&lt;code&gt;RTCDataChannel&lt;/code&gt;&lt;/a&gt; interface. This can be used for back-channel information, metadata exchange, game status packets, file transfers, or even as a primary channel for data transfer.</source>
          <target state="translated">2つのピア間の接続を使用して、&lt;a href=&quot;rtcdatachannel&quot;&gt; &lt;code&gt;RTCDataChannel&lt;/code&gt; &lt;/a&gt;インターフェイスを使用して任意のバイナリデータを交換することもできます。これは、バックチャネル情報、メタデータ交換、ゲームステータスパケット、ファイル転送、またはデータ転送のプライマリチャネルとしても使用できます。</target>
        </trans-unit>
        <trans-unit id="b33fc021795df2822b760078c9812a923ef5da66" translate="yes" xml:space="preserve">
          <source>You can also use the older promise-based approach to work with payments, using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then&quot;&gt;&lt;code&gt;then()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch&quot;&gt;&lt;code&gt;catch()&lt;/code&gt;&lt;/a&gt; functions on the promise returned by &lt;code&gt;show()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;show()&lt;/code&gt; によって返されたpromiseで&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then&quot;&gt; &lt;code&gt;then()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch&quot;&gt; &lt;code&gt;catch()&lt;/code&gt; &lt;/a&gt;関数を使用して、古いpromiseベースのアプローチを使用して支払いを処理することもできます。</target>
        </trans-unit>
        <trans-unit id="4fda8437e5a95f2c9af2841e399ae216acb34f36" translate="yes" xml:space="preserve">
          <source>You can also use the properties of the &lt;code&gt;MediaRecorder&lt;/code&gt; object to determine the state of the recording process, and its &lt;a href=&quot;mediarecorder/pause&quot;&gt;&lt;code&gt;pause()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mediarecorder/resume&quot;&gt;&lt;code&gt;resume()&lt;/code&gt;&lt;/a&gt; methods to pause and resume recording of the source media.</source>
          <target state="translated">&lt;code&gt;MediaRecorder&lt;/code&gt; オブジェクトのプロパティを使用して、記録プロセスの状態を判別したり、&lt;a href=&quot;mediarecorder/pause&quot;&gt; &lt;code&gt;pause()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;mediarecorder/resume&quot;&gt; &lt;code&gt;resume()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、ソースメディアの記録を一時停止および再開したりすることもできます。</target>
        </trans-unit>
        <trans-unit id="f67cef35ce48394a604fd26780647727ab4a7b6d" translate="yes" xml:space="preserve">
          <source>You can also write data to streams using &lt;a href=&quot;writablestream&quot;&gt;&lt;code&gt;WritableStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;writablestream&quot;&gt; &lt;code&gt;WritableStream&lt;/code&gt; &lt;/a&gt;を使用してデータをストリームに書き込むこともできます。</target>
        </trans-unit>
        <trans-unit id="a63abc2fe1f24703e3d38140d0cdd7ccd41befb9" translate="yes" xml:space="preserve">
          <source>You can associate arbitrary data with your new history entry. With the hash-based approach, you need to encode all of the relevant data into a short string.</source>
          <target state="translated">新しい履歴エントリに任意のデータを関連付けることができます。ハッシュベースのアプローチでは、関連するすべてのデータを短い文字列にエンコードする必要があります。</target>
        </trans-unit>
        <trans-unit id="8a8b8c292dc4d7defa2d8db63609f1c1660f696f" translate="yes" xml:space="preserve">
          <source>You can attach a &lt;code&gt;fetch&lt;/code&gt; event listener to the service worker, then call the &lt;code&gt;respondWith()&lt;/code&gt; method on the event to hijack our HTTP responses and update them with your own magic.</source>
          <target state="translated">あなたは、添付することができます &lt;code&gt;fetch&lt;/code&gt; 呼び出して、サービスワーカーにイベントリスナーを &lt;code&gt;respondWith()&lt;/code&gt; 私たちのHTTPレスポンスをハイジャックし、あなた自身の魔法でそれらを更新するために、イベントのメソッドを。</target>
        </trans-unit>
        <trans-unit id="d36116ce4346fa2bd8bb4549c70554f244d5f3ff" translate="yes" xml:space="preserve">
          <source>You can automate the creation of a DOM tree using a &lt;a href=&quot;https://developer.mozilla.org/en/JXON#JXON_reverse_algorithms&quot;&gt;JXON reverse algorithm&lt;/a&gt; in association with the following JSON representation:</source>
          <target state="translated">次のJSON表現と関連付けて&lt;a href=&quot;https://developer.mozilla.org/en/JXON#JXON_reverse_algorithms&quot;&gt;JXON逆アルゴリズム&lt;/a&gt;を使用して、DOMツリーの作成を自動化できます。</target>
        </trans-unit>
        <trans-unit id="cfdf1ec456b66d10aa0a52faf5204de53b73618b" translate="yes" xml:space="preserve">
          <source>You can automatically adjust URLs using the following code:</source>
          <target state="translated">以下のコードでURLを自動調整することができます。</target>
        </trans-unit>
        <trans-unit id="93e9eee349cc6256bcb0745bc6b80c4adfe82cf0" translate="yes" xml:space="preserve">
          <source>You can build a &lt;code&gt;FormData&lt;/code&gt; object yourself, instantiating it then appending fields to it by calling its &lt;a href=&quot;append&quot;&gt;&lt;code&gt;append()&lt;/code&gt;&lt;/a&gt; method, like this:</source>
          <target state="translated">次のように、&lt;a href=&quot;append&quot;&gt; &lt;code&gt;append()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出して、自分で &lt;code&gt;FormData&lt;/code&gt; オブジェクトを作成し、インスタンス化してからフィールドを追加できます。</target>
        </trans-unit>
        <trans-unit id="acacfb16efc6aa2c5da163b8c597b3a1a2a4e4a2" translate="yes" xml:space="preserve">
          <source>You can build this table and its internal child elements by using just a few DOM methods. Remember to keep in mind the tree model for the structures you are planning to create; this will make it easier to write the necessary code. In the &amp;lt;table&amp;gt; tree of Figure 1 the element &amp;lt;table&amp;gt; has one child, the element &amp;lt;tbody&amp;gt;. &amp;lt;tbody&amp;gt; has two children. Each &amp;lt;tbody&amp;gt;'s child (&amp;lt;tr&amp;gt;) has two children (&amp;lt;td&amp;gt;). Finally, each &amp;lt;td&amp;gt; has one child, a text node.</source>
          <target state="translated">いくつかのDOMメソッドを使用するだけで、このテーブルとその内部の子要素を構築できます。作成する予定の構造のツリーモデルを覚えておいてください。これにより、必要なコードを簡単に記述できます。図1の&amp;lt;table&amp;gt;ツリーでは、要素&amp;lt;table&amp;gt;には1つの子、要素&amp;lt;tbody&amp;gt;があります。 &amp;lt;tbody&amp;gt;には2人の子供がいます。各&amp;lt;tbody&amp;gt;の子（&amp;lt;tr&amp;gt;）には2つの子（&amp;lt;td&amp;gt;）があります。最後に、各&amp;lt;td&amp;gt;には1つの子、つまりテキストノードがあります。</target>
        </trans-unit>
        <trans-unit id="8bb99e35782fd28e52e8ae8f3cb9a84828d609b3" translate="yes" xml:space="preserve">
          <source>You can calculate the time elapsed between the beginning of a request and the completion of getting the response using code like this:</source>
          <target state="translated">このようなコードを使用して、リクエストの開始からレスポンスの取得完了までの経過時間を計算することができます。</target>
        </trans-unit>
        <trans-unit id="13a32936b5a3f3931af53c5667a3820c179e2c54" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;../mediastreamtrack/getcapabilities&quot;&gt;&lt;code&gt;MediaStreamTrack.getCapabilities()&lt;/code&gt;&lt;/a&gt; to get a list of all of the supported capabilities and the values or ranges of values which each one accepts on the current platform and user agent&lt;em&gt;.&lt;/em&gt; This function returns a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackCapabilities&quot;&gt;&lt;code&gt;MediaTrackCapabilities&lt;/code&gt;&lt;/a&gt; object which lists each constrainable property supported by the browser and a value or range of values which are supported for each one of those properties.</source>
          <target state="translated">&lt;a href=&quot;../mediastreamtrack/getcapabilities&quot;&gt; &lt;code&gt;MediaStreamTrack.getCapabilities()&lt;/code&gt; &lt;/a&gt;を呼び出して、サポートされているすべての機能のリストと、現在のプラットフォームおよびユーザーエージェントでそれぞれが受け入れる値または値の範囲を取得できます&lt;em&gt;。&lt;/em&gt;この関数は、ブラウザでサポートされている各制約可能なプロパティと、それらのプロパティのそれぞれでサポートされている値または値の範囲をリストする&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackCapabilities&quot;&gt; &lt;code&gt;MediaTrackCapabilities&lt;/code&gt; &lt;/a&gt;オブジェクトを返します。</target>
        </trans-unit>
        <trans-unit id="72d6e80d0c68671db69bd0f68ca85bab311561ea" translate="yes" xml:space="preserve">
          <source>You can call &lt;a href=&quot;getvertexattrib&quot;&gt;&lt;code&gt;gl.getVertexAttrib()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;getvertexattriboffset&quot;&gt;&lt;code&gt;gl.getVertexAttribOffset()&lt;/code&gt;&lt;/a&gt; to get the current parameters for an attribute, e.g. the data type or whether the attribute should be normalized. Keep in mind that these WebGL functions have a slow performance and it is better to store the state inside your JavaScript application. However, these functions are great for debugging a WebGL context without touching the application code.</source>
          <target state="translated">&lt;a href=&quot;getvertexattrib&quot;&gt; &lt;code&gt;gl.getVertexAttrib()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;getvertexattriboffset&quot;&gt; &lt;code&gt;gl.getVertexAttribOffset()&lt;/code&gt; &lt;/a&gt;を呼び出して、属性の現在のパラメーター（データ型や属性を正規化するかどうかなど）を取得できます。これらのWebGL関数はパフォーマンスが遅いため、JavaScriptアプリケーション内に状態を保存することをお勧めします。ただし、これらの関数は、アプリケーションコードに触れずにWebGLコンテキストをデバッグするのに最適です。</target>
        </trans-unit>
        <trans-unit id="92922f567a2245b3a61ada853c9082a4cca1890c" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;observe()&lt;/code&gt; multiple times on the same &lt;code&gt;MutationObserver&lt;/code&gt; to watch for changes to different parts of the DOM tree and/or different types of changes. There are some caveats to note:</source>
          <target state="translated">同じ &lt;code&gt;MutationObserver&lt;/code&gt; で &lt;code&gt;observe()&lt;/code&gt; を複数回呼び出して、DOMツリーの異なる部分への変更や異なるタイプの変更を監視できます。注意すべき警告がいくつかあります：</target>
        </trans-unit>
        <trans-unit id="9b83c5856408773c3222ad9fe8f4db71701645f1" translate="yes" xml:space="preserve">
          <source>You can call &lt;code&gt;requestIdleCallback()&lt;/code&gt; within an idle callback function to schedule another callback to take place no sooner than the next pass through the event loop.</source>
          <target state="translated">アイドルコールバック関数内で &lt;code&gt;requestIdleCallback()&lt;/code&gt; を呼び出して、イベントループの次のパスまでに別のコールバックが実行されるようにスケジュールできます。</target>
        </trans-unit>
        <trans-unit id="3484c03a5af17542a9410cb06b6545366413619d" translate="yes" xml:space="preserve">
          <source>You can call the &lt;code&gt;save()&lt;/code&gt; method as many times as you like. Each time the &lt;code&gt;restore()&lt;/code&gt; method is called, the last saved state is popped off the stack and all saved settings are restored.</source>
          <target state="translated">&lt;code&gt;save()&lt;/code&gt; メソッドは何度でも呼び出すことができます。 &lt;code&gt;restore()&lt;/code&gt; メソッドが呼び出されるたびに、最後に保存された状態がスタックからポップされ、保存されたすべての設定が復元されます。</target>
        </trans-unit>
        <trans-unit id="81e10e8a0dc5da46dd74a151110879aee389ea28" translate="yes" xml:space="preserve">
          <source>You can cancel the interval using &lt;a href=&quot;clearinterval&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.clearInterval()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;clearinterval&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.clearInterval()&lt;/code&gt; &lt;/a&gt;を使用して間隔をキャンセルできます。</target>
        </trans-unit>
        <trans-unit id="b55c3f3dbcac1020c1fe55219d63543f6e347ad2" translate="yes" xml:space="preserve">
          <source>You can check out the &lt;a href=&quot;https://codepen.io/Rumyra/pen/oPxvYB/&quot;&gt;full demo here on Codepen&lt;/a&gt;. Also see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/iirfilter-node&quot;&gt;source code on GitHub&lt;/a&gt;. It includes some different coefficient values for different lowpass frequencies &amp;mdash; you can change the value of the &lt;code&gt;filterNumber&lt;/code&gt; constant to a value between 0 and 3 to check out the different available effects.</source>
          <target state="translated">&lt;a href=&quot;https://codepen.io/Rumyra/pen/oPxvYB/&quot;&gt;完全なデモは、こちらのCodepenで&lt;/a&gt;確認できます。&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/iirfilter-node&quot;&gt;GitHub&lt;/a&gt;のソースコードも参照してください。これには、ローパス周波数ごとにいくつかの異なる係数値が含まれています &lt;code&gt;filterNumber&lt;/code&gt; 定数の値を0〜3の値に変更して、利用可能なさまざまな効果を確認できます。</target>
        </trans-unit>
        <trans-unit id="e96b8636753cd5275574176d3150a7cf07dfc78a" translate="yes" xml:space="preserve">
          <source>You can check to see if you already have permission by checking the value of the &lt;a href=&quot;../notification/permission&quot;&gt;&lt;code&gt;Notification.permission&lt;/code&gt;&lt;/a&gt; read only property. It can have one of three possible values:</source>
          <target state="translated">&lt;a href=&quot;../notification/permission&quot;&gt; &lt;code&gt;Notification.permission&lt;/code&gt; &lt;/a&gt;読み取り専用プロパティの値を確認することで、すでに権限があるかどうかを確認できます。次の3つの値のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="28acf5ce04a81364c85610c6d1079ca6297219a3" translate="yes" xml:space="preserve">
          <source>You can check whether any option is supported this way. Just add a getter for that option using code similar to what is shown above.</source>
          <target state="translated">この方法でオプションがサポートされているかどうかを確認することができます。上に示したようなコードを使って、そのオプションのゲッターを追加するだけです。</target>
        </trans-unit>
        <trans-unit id="ad526f3ce59082981af298040bb50bcf7c1d63fd" translate="yes" xml:space="preserve">
          <source>You can clear an item using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozClearDataAt&quot;&gt;&lt;code&gt;mozClearDataAt()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozClearDataAt&quot;&gt; &lt;code&gt;mozClearDataAt()&lt;/code&gt; &lt;/a&gt;メソッドを使用してアイテムをクリアできます。</target>
        </trans-unit>
        <trans-unit id="7f24c3e6a7023bd48c1a4b11c461888d2ca916bd" translate="yes" xml:space="preserve">
          <source>You can clear the data using the &lt;a href=&quot;../datatransfer/cleardata&quot;&gt;&lt;code&gt;clearData()&lt;/code&gt;&lt;/a&gt; method, which takes one argument, the type of the data to remove.</source>
          <target state="translated">&lt;a href=&quot;../datatransfer/cleardata&quot;&gt; &lt;code&gt;clearData()&lt;/code&gt; &lt;/a&gt;メソッドを使用してデータをクリアできます。このメソッドは、削除するデータのタイプである1つの引数を取ります。</target>
        </trans-unit>
        <trans-unit id="b141c235a32d69526b1516de2a047b09dc4cd8d1" translate="yes" xml:space="preserve">
          <source>You can copy&amp;amp;paste the example in your [Scratchpad]</source>
          <target state="translated">サンプルを[スクラッチパッド]にコピーして貼り付けることができます</target>
        </trans-unit>
        <trans-unit id="5173871837e9f2a198bdcceeb88268b574d2e924" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;code&gt;AbortController&lt;/code&gt; object using the &lt;a href=&quot;abortcontroller/abortcontroller&quot;&gt;&lt;code&gt;AbortController.AbortController()&lt;/code&gt;&lt;/a&gt; constructor. Communicating with a DOM request is done using an &lt;a href=&quot;abortsignal&quot;&gt;&lt;code&gt;AbortSignal&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;abortcontroller/abortcontroller&quot;&gt; &lt;code&gt;AbortController.AbortController()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して、新しい &lt;code&gt;AbortController&lt;/code&gt; オブジェクトを作成できます。DOM要求との通信は、&lt;a href=&quot;abortsignal&quot;&gt; &lt;code&gt;AbortSignal&lt;/code&gt; &lt;/a&gt;オブジェクトを使用して行われます。</target>
        </trans-unit>
        <trans-unit id="0d1742c6a5afbfac26dc47c56a5d61c6ca275a04" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;code&gt;Request&lt;/code&gt; object using the &lt;a href=&quot;request/request&quot;&gt;&lt;code&gt;Request.Request()&lt;/code&gt;&lt;/a&gt; constructor, but you are more likely to encounter a &lt;code&gt;Request&lt;/code&gt; object being returned as the result of another API operation, such as a service worker &lt;a href=&quot;fetchevent/request&quot;&gt;&lt;code&gt;FetchEvent.request&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;request/request&quot;&gt; &lt;code&gt;Request.Request()&lt;/code&gt; &lt;/a&gt;コンストラクタを使用して新しい &lt;code&gt;Request&lt;/code&gt; オブジェクトを作成できますが、Service Worker &lt;a href=&quot;fetchevent/request&quot;&gt; &lt;code&gt;FetchEvent.request&lt;/code&gt; &lt;/a&gt;などの別のAPI操作の結果として &lt;code&gt;Request&lt;/code&gt; オブジェクトが返される可能性が高くなります。</target>
        </trans-unit>
        <trans-unit id="893f8a85c07698db3c0bfdc70de91ea277b77575" translate="yes" xml:space="preserve">
          <source>You can create a new &lt;code&gt;Response&lt;/code&gt; object using the &lt;a href=&quot;response/response&quot;&gt;&lt;code&gt;Response.Response()&lt;/code&gt;&lt;/a&gt; constructor, but you are more likely to encounter a Response object being returned as the result of another API operation, for example a service worker &lt;a href=&quot;fetchevent/respondwith&quot;&gt;&lt;code&gt;Fetchevent.respondWith&lt;/code&gt;&lt;/a&gt;, or a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt;&lt;code&gt;GlobalFetch.fetch()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;response/response&quot;&gt; &lt;code&gt;Response.Response()&lt;/code&gt; &lt;/a&gt;コンストラクタを使用して新しい &lt;code&gt;Response&lt;/code&gt; オブジェクトを作成できますが、サービスワーカーの&lt;a href=&quot;fetchevent/respondwith&quot;&gt; &lt;code&gt;Fetchevent.respondWith&lt;/code&gt; &lt;/a&gt;や単純な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/GlobalFetch/fetch&quot;&gt; &lt;code&gt;GlobalFetch.fetch()&lt;/code&gt; &lt;/a&gt;など、別のAPI操作の結果として返されるResponseオブジェクトに遭遇する可能性が高くなります。 fetch（）。</target>
        </trans-unit>
        <trans-unit id="c33df4559891386ab064b7c650c1ecb99caf1e70" translate="yes" xml:space="preserve">
          <source>You can create a request and response directly using the &lt;a href=&quot;request/request&quot;&gt;&lt;code&gt;Request()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;response/response&quot;&gt;&lt;code&gt;Response()&lt;/code&gt;&lt;/a&gt; constructors, but you are unlikely to do this directly. Instead, these are more likely to be created as results of other API actions (for example, &lt;a href=&quot;fetchevent/respondwith&quot;&gt;&lt;code&gt;FetchEvent.respondWith()&lt;/code&gt;&lt;/a&gt; from service workers).</source>
          <target state="translated">&lt;a href=&quot;request/request&quot;&gt; &lt;code&gt;Request()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;response/response&quot;&gt; &lt;code&gt;Response()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用してリクエストとレスポンスを直接作成できますが、これを直接行うことはほとんどありません。代わりに、これらは他のAPIアクション（たとえば、&lt;a href=&quot;fetchevent/respondwith&quot;&gt; &lt;code&gt;FetchEvent.respondWith()&lt;/code&gt; &lt;/a&gt;からのFetchEvent.respondWith（）など）の結果として作成される可能性が高くなります。</target>
        </trans-unit>
        <trans-unit id="820ad6d6cd7e34268be90a7cc9d837b360024736" translate="yes" xml:space="preserve">
          <source>You can create an attribute with the specified &lt;code&gt;namespaceURI&lt;/code&gt; using the DOM Level 2 method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/setAttributeNS&quot;&gt;&lt;code&gt;Element.setAttributeNS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOMレベル2メソッド&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/setAttributeNS&quot;&gt; &lt;code&gt;Element.setAttributeNS&lt;/code&gt; &lt;/a&gt;を使用して、指定した &lt;code&gt;namespaceURI&lt;/code&gt; URIで属性を作成できます。</target>
        </trans-unit>
        <trans-unit id="401f6db89365d506f4467d6ef4a74a2465318e92" translate="yes" xml:space="preserve">
          <source>You can create an element with the specified &lt;code&gt;namespaceURI&lt;/code&gt; using the DOM Level 2 method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/createElementNS&quot;&gt;&lt;code&gt;Document.createElementNS&lt;/code&gt;&lt;/a&gt; and attributes with the method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/setAttributeNS&quot;&gt;&lt;code&gt;Element.setAttributeNS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">DOM Level 2メソッド&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/createElementNS&quot;&gt; &lt;code&gt;Document.createElementNS&lt;/code&gt; &lt;/a&gt;を使用して、指定された &lt;code&gt;namespaceURI&lt;/code&gt; を持つ要素を作成し、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/element/setAttributeNS&quot;&gt; &lt;code&gt;Element.setAttributeNS&lt;/code&gt; &lt;/a&gt;メソッドで属性を作成できます。</target>
        </trans-unit>
        <trans-unit id="2b053b3bc34ac734ed50f6f2b1ee73afed27d38e" translate="yes" xml:space="preserve">
          <source>You can create an element with the specified &lt;code&gt;namespaceURI&lt;/code&gt; using the DOM Level 2 method &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/createElementNS&quot;&gt;document.createElementNS&lt;/a&gt;.</source>
          <target state="translated">DOMレベル2メソッド&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/document/createElementNS&quot;&gt;document.createElementNS&lt;/a&gt;を使用して、指定された &lt;code&gt;namespaceURI&lt;/code&gt; を持つ要素を作成できます。</target>
        </trans-unit>
        <trans-unit id="c5de96cacaced42a2a56337781e78791e8784029" translate="yes" xml:space="preserve">
          <source>You can create new HTML elements or any other element you want with createElement. For example, if you want to create a new &amp;lt;p&amp;gt; element as a child of the &amp;lt;body&amp;gt; element, you can use the myBody in the previous example and append a new element node. To create a node simply call &lt;code&gt;document.createElement(&quot;tagname&quot;)&lt;/code&gt;. For example:</source>
          <target state="translated">createElementを使用して、新しいHTML要素または必要なその他の要素を作成できます。たとえば、新しい&amp;lt;p&amp;gt;要素を&amp;lt;body&amp;gt;要素の子として作成する場合は、前の例のmyBodyを使用して、新しい要素ノードを追加できます。ノードを作成するには、単に &lt;code&gt;document.createElement(&quot;tagname&quot;)&lt;/code&gt; を呼び出します。例えば：</target>
        </trans-unit>
        <trans-unit id="ec369e14d92aa4976b85617061f4e7b15046b076" translate="yes" xml:space="preserve">
          <source>You can delete a cookie by simply updating its expiration time to zero.</source>
          <target state="translated">有効期限をゼロに更新するだけでクッキーを削除することができます。</target>
        </trans-unit>
        <trans-unit id="467a507ae6d1d280bbd5e1383a4beed755b8dd72" translate="yes" xml:space="preserve">
          <source>You can delete keys and their values using &lt;code&gt;delete()&lt;/code&gt;:</source>
          <target state="translated">キーとその値は、 &lt;code&gt;delete()&lt;/code&gt; を使用して削除できます。</target>
        </trans-unit>
        <trans-unit id="174ea88788ae0d5a2971790a23a33b621a034eeb" translate="yes" xml:space="preserve">
          <source>You can detect when the value of this property changes by watching for an event of type &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icegatheringstatechange&quot;&gt;icegatheringstatechange&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">タイプが &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/icegatheringstatechange&quot;&gt;icegatheringstatechange&lt;/a&gt;&lt;/code&gt; イベントを監視することで、このプロパティの値がいつ変化するかを検出できます。</target>
        </trans-unit>
        <trans-unit id="25ea728a03aca42f2aa04dc241d66280240a1be4" translate="yes" xml:space="preserve">
          <source>You can detect when this value has changed by watching for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">この値が変更されたことを検出するには、 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/iceconnectionstatechange&quot;&gt;iceconnectionstatechange&lt;/a&gt;&lt;/code&gt; イベントを監視します。</target>
        </trans-unit>
        <trans-unit id="7097c3d1d7971f52ac229ebf527d429872cf4cbc" translate="yes" xml:space="preserve">
          <source>You can determine the number of pages in the history stack by looking at the value of the length property:</source>
          <target state="translated">lengthプロパティの値を見ることで、履歴スタックのページ数を決定することができます。</target>
        </trans-unit>
        <trans-unit id="158346e1ef76368de1640c6c29166fe20a325762" translate="yes" xml:space="preserve">
          <source>You can determine whether or not your attempt to switch to full-screen mode is successful by using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; returned by &lt;code&gt;requestFullscreen()&lt;/code&gt;, as seen in the &lt;a href=&quot;#Example&quot;&gt;Example&lt;/a&gt; below.</source>
          <target state="translated">以下の&lt;a href=&quot;#Example&quot;&gt;例に&lt;/a&gt;示すように、 &lt;code&gt;requestFullscreen()&lt;/code&gt; によって返された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;を使用して、フルスクリーンモードへの切り替えが成功したかどうかを判断できます。</target>
        </trans-unit>
        <trans-unit id="d1c00b4880de0aeed262858b177ae77fe5a668e0" translate="yes" xml:space="preserve">
          <source>You can disable the attribute array by calling &lt;a href=&quot;disablevertexattribarray&quot;&gt;&lt;code&gt;disableVertexAttribArray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;disablevertexattribarray&quot;&gt; &lt;code&gt;disableVertexAttribArray()&lt;/code&gt; を&lt;/a&gt;呼び出すことにより、属性配列を無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="8f053bc00c85c7d7cfd694811864ce33e3dfc0a6" translate="yes" xml:space="preserve">
          <source>You can disable this feature using the &lt;code&gt;dom.enable_performance_navigation_timing&lt;/code&gt; preference (see &lt;a href=&quot;https://bugzil.la/1403926&quot;&gt;bug 1403926&lt;/a&gt;).</source>
          <target state="translated">この機能は、 &lt;code&gt;dom.enable_performance_navigation_timing&lt;/code&gt; 設定を使用して無効にできます（&lt;a href=&quot;https://bugzil.la/1403926&quot;&gt;バグ1403926を&lt;/a&gt;参照）。</target>
        </trans-unit>
        <trans-unit id="7f854f63c29112a87156a6a81e53f6a717a01746" translate="yes" xml:space="preserve">
          <source>You can easily determine whether or not the context is the receiver for a presentation by checking the value of &lt;code&gt;navigator.receiver&lt;/code&gt;. If it's a non-null value, then the context is indeed receiving a presentation. If it's &lt;code&gt;null&lt;/code&gt;, there's no incoming presentation.</source>
          <target state="translated">&lt;code&gt;navigator.receiver&lt;/code&gt; の値を確認することで、コンテキストがプレゼンテーションのレシーバーであるかどうかを簡単に判別できます。null以外の値の場合、コンテキストは実際にプレゼンテーションを受信して​​います。 &lt;code&gt;null&lt;/code&gt; の場合、着信プレゼンテーションはありません。</target>
        </trans-unit>
        <trans-unit id="07fdb417a28e1772d17e210f1a15d00984673810" translate="yes" xml:space="preserve">
          <source>You can effectively detect support for the Payment Request API by checking if the user's browser supports &lt;a href=&quot;../paymentrequest&quot;&gt;&lt;code&gt;PaymentRequest&lt;/code&gt;&lt;/a&gt;, i.e. &lt;code&gt;if (window.PaymentRequest)&lt;/code&gt;.</source>
          <target state="translated">ユーザーのブラウザが&lt;a href=&quot;../paymentrequest&quot;&gt; &lt;code&gt;PaymentRequest&lt;/code&gt; を&lt;/a&gt;サポートしている &lt;code&gt;if (window.PaymentRequest)&lt;/code&gt; 、つまり（window.PaymentRequest）をチェックすることで、Payment Request APIのサポートを効果的に検出できます。</target>
        </trans-unit>
        <trans-unit id="85f9230d5b9a15fdd3885cc4257019c18269c3e5" translate="yes" xml:space="preserve">
          <source>You can ensure that the value entered as a price is formatted correctly prior to submission by matching it against a simple &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/regular_expression&quot;&gt;regular expression&lt;/a&gt;:</source>
          <target state="translated">単純な&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/regular_expression&quot;&gt;正規表現&lt;/a&gt;と照合することにより、価格として入力された値が送信前に正しくフォーマットされていることを確認できます。</target>
        </trans-unit>
        <trans-unit id="779c032fcd47b3b113ee9502be8d42626d30c7f7" translate="yes" xml:space="preserve">
          <source>You can examine and set the transceiver's preferred directionality using &lt;a href=&quot;direction&quot;&gt;&lt;code&gt;direction&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;direction&quot;&gt; &lt;code&gt;direction&lt;/code&gt; &lt;/a&gt;プロパティを使用して、トランシーバーの優先方向性を調べて設定できます。</target>
        </trans-unit>
        <trans-unit id="24393bc698ab31f725810a9acb470ce2e501afc2" translate="yes" xml:space="preserve">
          <source>You can expand the capabilities of attribute mutation monitoring using other options:</source>
          <target state="translated">他のオプションを使用して、属性変異監視の機能を拡張することができます。</target>
        </trans-unit>
        <trans-unit id="bb27465cd632efa63e23b8943a9e9fe15df2a6e0" translate="yes" xml:space="preserve">
          <source>You can find a complete guide in &lt;a href=&quot;payment_request_api/using_the_payment_request_api&quot;&gt;Using the Payment Request API&lt;/a&gt;.</source>
          <target state="translated">完全なガイドは&lt;a href=&quot;payment_request_api/using_the_payment_request_api&quot;&gt;、Payment Request APIの使用にあります&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d7b8752e4ef487b902a499766589ad71288b64f0" translate="yes" xml:space="preserve">
          <source>You can find a full working example on GitHub &amp;mdash; see &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/abort-api&quot;&gt;abort-api&lt;/a&gt; (&lt;a href=&quot;https://mdn.github.io/dom-examples/abort-api/&quot;&gt;see it running live also&lt;/a&gt;).</source>
          <target state="translated">GitHubで完全に機能する例を見つけることができます&amp;mdash; &lt;a href=&quot;https://github.com/mdn/dom-examples/tree/master/abort-api&quot;&gt;abort-apiを&lt;/a&gt;&lt;a href=&quot;https://mdn.github.io/dom-examples/abort-api/&quot;&gt;参照してください&lt;/a&gt;（ライブ実行も参照してください）。</target>
        </trans-unit>
        <trans-unit id="4f0125a0f9082e5d75486570aacae26ceaa735af" translate="yes" xml:space="preserve">
          <source>You can find a number of examples at our &lt;a href=&quot;https://github.com/mdn/webaudio-examples/&quot;&gt;webaudio-example repo&lt;/a&gt; on GitHub.</source>
          <target state="translated">GitHubの&lt;a href=&quot;https://github.com/mdn/webaudio-examples/&quot;&gt;webaudio-exampleリポジトリ&lt;/a&gt;で多くの例を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="96963962d953ed838ef5d25b4a704c60e7482654" translate="yes" xml:space="preserve">
          <source>You can find a number of examples at these locations:</source>
          <target state="translated">このような場所では、いくつかの例を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="2146d86b5e473cd5609ca46d4945619c99f2320d" translate="yes" xml:space="preserve">
          <source>You can find a simple IIR filter demo live &lt;a href=&quot;https://codepen.io/Rumyra/pen/oPxvYB/&quot;&gt;on Codepen&lt;/a&gt;. Also see the &lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/iirfilter-node&quot;&gt;source code on GitHub&lt;/a&gt;. It includes some different coefficient values for different lowpass frequencies &amp;mdash; you can change the value of the &lt;code&gt;filterNumber&lt;/code&gt; constant to a value between 0 and 3 to check out the different available effects.</source>
          <target state="translated">&lt;a href=&quot;https://codepen.io/Rumyra/pen/oPxvYB/&quot;&gt;Codepenで&lt;/a&gt;簡単なIIRフィルターのデモをライブで見つけることができます。&lt;a href=&quot;https://github.com/mdn/webaudio-examples/tree/master/iirfilter-node&quot;&gt;GitHub&lt;/a&gt;のソースコードも参照してください。これには、ローパス周波数ごとにいくつかの異なる係数値が含まれています &lt;code&gt;filterNumber&lt;/code&gt; 定数の値を0〜3の値に変更して、利用可能なさまざまな効果を確認できます。</target>
        </trans-unit>
        <trans-unit id="16be333dad94783d1206e00eed81a24179537d71" translate="yes" xml:space="preserve">
          <source>You can find an example of this in the article &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Using_workers_in_extensions&quot;&gt;Using workers in extensions&lt;/a&gt; .</source>
          <target state="translated">この例については、記事「&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Using_workers_in_extensions&quot;&gt;拡張機能でのワーカーの使用&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="2e8451a9cde019bb078ed5ed00601e5f8ec4879e" translate="yes" xml:space="preserve">
          <source>You can find more about basic Gamepad API usage in &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API&quot;&gt;Using the Gamepad API&lt;/a&gt;, and &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games/Techniques/Controls_Gamepad_API&quot;&gt;Implementing controls using the Gamepad API&lt;/a&gt;.</source>
          <target state="translated">ゲームパッドAPIの基本的な使用法の詳細について&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API&quot;&gt;は、ゲームパッドAPIの使用&lt;/a&gt;、およびゲームパッドAPI &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Games/Techniques/Controls_Gamepad_API&quot;&gt;を使用したコントロールの実装を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="95c6ac768de0432484307d347f8fb345b6fa7994" translate="yes" xml:space="preserve">
          <source>You can find more examples on the MDN Web Docs GitHub repository:</source>
          <target state="translated">MDN Web DocsのGitHubリポジトリにもっと多くの例があります。</target>
        </trans-unit>
        <trans-unit id="7a8d00719598f44fdad5bb84e9d7c6a2b933a472" translate="yes" xml:space="preserve">
          <source>You can find more information about &lt;code&gt;getImageData()&lt;/code&gt; and general manipulation of canvas contents in &lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;Pixel manipulation with canvas&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;getImageData()&lt;/code&gt; とキャンバスコンテンツの一般的な操作の詳細については、canvasを使用した&lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;ピクセル操作を参照してください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="0767ab94b5b878e61e3fee426ca96d63f80a132a" translate="yes" xml:space="preserve">
          <source>You can find more information about &lt;code&gt;putImageData()&lt;/code&gt; and general manipulation of canvas contents in the article &lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;Pixel manipulation with canvas&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;putImageData()&lt;/code&gt; とキャンバスコンテンツの一般的な操作の詳細については、「キャンバスを使用した&lt;a href=&quot;../canvas_api/tutorial/pixel_manipulation_with_canvas&quot;&gt;ピクセル操作」&lt;/a&gt;の記事を参照してください。</target>
        </trans-unit>
        <trans-unit id="821b90229f5e3d8cd2c1b265c1f7c5aecf2a1b23" translate="yes" xml:space="preserve">
          <source>You can find out more information on how these demos work in &lt;a href=&quot;web_workers_api/using_web_workers&quot;&gt;Using web workers&lt;/a&gt;.</source>
          <target state="translated">これらのデモがどのように機能するかについて詳しくは、&lt;a href=&quot;web_workers_api/using_web_workers&quot;&gt;ウェブワーカーの使用を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="ad01dabc5a87b2b8becd7cb755febdc479c55949" translate="yes" xml:space="preserve">
          <source>You can find the full code in our &lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-writer/&quot;&gt;Simple writer example&lt;/a&gt;.</source>
          <target state="translated">完全なコードは、&lt;a href=&quot;https://mdn.github.io/dom-examples/streams/simple-writer/&quot;&gt;単純なライターの例にあり&lt;/a&gt;ます。</target>
        </trans-unit>
        <trans-unit id="b8dbe1d5345851e36e3b244d2bc5ce277471150c" translate="yes" xml:space="preserve">
          <source>You can find the members of &lt;code&gt;HTMLDocument&lt;/code&gt; in the documentation of the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;code&gt;HTMLDocument&lt;/code&gt; のメンバーは、&lt;a href=&quot;document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;インターフェイスのドキュメントにあります。</target>
        </trans-unit>
        <trans-unit id="646860b6b989f4d33a94771393214de7756fe084" translate="yes" xml:space="preserve">
          <source>You can get a &lt;a href=&quot;../textmetrics&quot;&gt;&lt;code&gt;TextMetrics&lt;/code&gt;&lt;/a&gt; object using the following code:</source>
          <target state="translated">次のコードを使用して、&lt;a href=&quot;../textmetrics&quot;&gt; &lt;code&gt;TextMetrics&lt;/code&gt; &lt;/a&gt;オブジェクトを取得できます。</target>
        </trans-unit>
        <trans-unit id="b4a17dd71bfd35e7158292266b561e1081204470" translate="yes" xml:space="preserve">
          <source>You can get a &lt;code&gt;2d&lt;/code&gt; context of the canvas with the following code:</source>
          <target state="translated">次のコードを使用して、キャンバスの &lt;code&gt;2d&lt;/code&gt; コンテキストを取得できます。</target>
        </trans-unit>
        <trans-unit id="cea1126ee88a9a3cca8bfae9fa5bd00f5d729fd1" translate="yes" xml:space="preserve">
          <source>You can get a data-URL of the canvas with the following lines:</source>
          <target state="translated">以下の行でキャンバスのdata-URLを取得できます。</target>
        </trans-unit>
        <trans-unit id="d97d2854993794f799775d4e5412e28992d471a5" translate="yes" xml:space="preserve">
          <source>You can get a window's visual viewport using &lt;a href=&quot;window/visualviewport&quot;&gt;&lt;code&gt;Window.visualViewport&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;window/visualviewport&quot;&gt; &lt;code&gt;Window.visualViewport&lt;/code&gt; &lt;/a&gt;を使用して、ウィンドウのビジュアルビューポートを取得できます。</target>
        </trans-unit>
        <trans-unit id="4aa6bb3d24b88af6798bce5d43e541c81b8996b6" translate="yes" xml:space="preserve">
          <source>You can get back a reference to it from the &lt;code&gt;WebGLRenderingContext&lt;/code&gt; using the &lt;code&gt;canvas&lt;/code&gt; property:</source>
          <target state="translated">&lt;code&gt;canvas&lt;/code&gt; プロパティを使用して、 &lt;code&gt;WebGLRenderingContext&lt;/code&gt; から参照を取得できます。</target>
        </trans-unit>
        <trans-unit id="53e4c634cc9db32988f7dfd584561ff8b364a10d" translate="yes" xml:space="preserve">
          <source>You can get the height of the canvas with the following code:</source>
          <target state="translated">以下のコードでキャンバスの高さを取得できます。</target>
        </trans-unit>
        <trans-unit id="17883140b435c2b86cc74106cf313b62b1ce02fe" translate="yes" xml:space="preserve">
          <source>You can get the height of the drawing buffer with the following lines:</source>
          <target state="translated">描画バッファの高さは以下の行で取得できます。</target>
        </trans-unit>
        <trans-unit id="ff2c7b546c7d4e7bd0764a3641d2b98ec57819c3" translate="yes" xml:space="preserve">
          <source>You can get the width of the canvas with the following code:</source>
          <target state="translated">以下のコードでキャンバスの幅を取得できます。</target>
        </trans-unit>
        <trans-unit id="109472ddfc5e638419b6b19fa5763a87d1a21f52" translate="yes" xml:space="preserve">
          <source>You can get the width of the drawing buffer with the following lines:</source>
          <target state="translated">描画バッファの幅は以下の行で取得できます。</target>
        </trans-unit>
        <trans-unit id="79b7abb68b2b7a339ecbbb272f849a9dad453f37" translate="yes" xml:space="preserve">
          <source>You can grab a set of keys within a range. To learn more, see &lt;a href=&quot;idbkeyrange&quot;&gt;&lt;code&gt;IDBKeyRange&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">範囲内のキーのセットを取得できます。詳細については、&lt;a href=&quot;idbkeyrange&quot;&gt; &lt;code&gt;IDBKeyRange&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="50ae302f28a6a19d0207abe6102486769c4cff88" translate="yes" xml:space="preserve">
          <source>You can grab data using the following methods:</source>
          <target state="translated">以下の方法でデータをつかむことができます。</target>
        </trans-unit>
        <trans-unit id="fcfb007e223ec34535cad6819cc086e262a45c6a" translate="yes" xml:space="preserve">
          <source>You can have an unlimited number of cursors at the same time. You always get the same &lt;code&gt;IDBCursor&lt;/code&gt; object representing a given cursor. Operations are performed on the underlying index or object store.</source>
          <target state="translated">同時に無制限の数のカーソルを持つことができます。特定のカーソルを表す同じ &lt;code&gt;IDBCursor&lt;/code&gt; オブジェクトを常に取得します。基になるインデックスまたはオブジェクトストアに対して操作が実行されます。</target>
        </trans-unit>
        <trans-unit id="1668dde2a8bd9291a6f7c077319945286fef742f" translate="yes" xml:space="preserve">
          <source>You can have an unlimited number of cursors at the same time. You always get the same &lt;code&gt;IDBCursorWithValue&lt;/code&gt; object representing a given cursor. Operations are performed on the underlying index or object store.</source>
          <target state="translated">同時に無制限の数のカーソルを持つことができます。特定のカーソルを表す同じ &lt;code&gt;IDBCursorWithValue&lt;/code&gt; オブジェクトを常に取得します。基になるインデックスまたはオブジェクトストアに対して操作が実行されます。</target>
        </trans-unit>
        <trans-unit id="69ebf13baf71b6185e01ec21f7905727873a0866" translate="yes" xml:space="preserve">
          <source>You can have as many terms defined as you want on separate lines following the above structure, and include fairly complex grammar definitions. For this basic demo, we are just keeping things simple.</source>
          <target state="translated">上記の構造に沿って、別の行に好きなだけ多くの用語を定義し、かなり複雑な文法定義を含めることができます。この基本的なデモのために、私たちは物事をシンプルにしています。</target>
        </trans-unit>
        <trans-unit id="2fa14a35a47c3f64fc27b0b6d3d55f360e65e923" translate="yes" xml:space="preserve">
          <source>You can learn more about ICE roles in &lt;a href=&quot;../webrtc_api/connectivity#Choosing_a_candidate_pair&quot;&gt;Choosing a candidate pair&lt;/a&gt; in &lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="translated">ICEの役割について詳しくは、&lt;a href=&quot;../webrtc_api/connectivity&quot;&gt;WebRTC接続での&lt;/a&gt;&lt;a href=&quot;../webrtc_api/connectivity#Choosing_a_candidate_pair&quot;&gt;候補ペアの選択を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="12261901d0fa1d60e8296b4fe113f509b9ce09e9" translate="yes" xml:space="preserve">
          <source>You can learn more about ICE roles in &lt;a href=&quot;webrtc_api/connectivity#Choosing_a_candidate_pair&quot;&gt;Choosing a candidate pair&lt;/a&gt; in &lt;a href=&quot;webrtc_api/connectivity&quot;&gt;WebRTC connectivity&lt;/a&gt;.</source>
          <target state="translated">ICEの役割について詳しくは、&lt;a href=&quot;webrtc_api/connectivity&quot;&gt;WebRTC接続での&lt;/a&gt;&lt;a href=&quot;webrtc_api/connectivity#Choosing_a_candidate_pair&quot;&gt;候補ペアの選択を&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="a17352e1345526bd591255ae8ccb9362c81cc9a8" translate="yes" xml:space="preserve">
          <source>You can learn more from the article about &lt;code&gt;&lt;a href=&quot;https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection&quot;&gt;EventListenerOptions&lt;/a&gt;&lt;/code&gt; from the &lt;a href=&quot;https://wicg.github.io/admin/charter.html&quot;&gt;Web Incubator Community Group&lt;/a&gt;.</source>
          <target state="translated">詳細については、&lt;a href=&quot;https://wicg.github.io/admin/charter.html&quot;&gt;Web Incubator Community Groupの&lt;/a&gt; &lt;code&gt;&lt;a href=&quot;https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection&quot;&gt;EventListenerOptions&lt;/a&gt;&lt;/code&gt; に関する記事をご覧ください。</target>
        </trans-unit>
        <trans-unit id="1014998d5e4a30001a94698bc8a34fa494e215e3" translate="yes" xml:space="preserve">
          <source>You can listen out for the &lt;a href=&quot;installevent&quot;&gt;&lt;code&gt;InstallEvent&lt;/code&gt;&lt;/a&gt;; a standard action is to prepare your service worker for usage when this fires, for example by creating a cache using the built in storage API, and placing assets inside it that you'll want for running your app offline.</source>
          <target state="translated">&lt;a href=&quot;installevent&quot;&gt; &lt;code&gt;InstallEvent&lt;/code&gt; を&lt;/a&gt;リッスンできます。標準アクションは、たとえば、組み込みのストレージAPIを使用してキャッシュを作成し、アプリをオフラインで実行するために必要なアセットをその中に配置することによって、サービスワーカーが起動したときに使用できるように準備することです。</target>
        </trans-unit>
        <trans-unit id="d6cd2fbb0b65441e1c0c67b8c6ce39a42d06ddf7" translate="yes" xml:space="preserve">
          <source>You can make use of ready-made readable streams via mechanisms like a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/body&quot;&gt;&lt;code&gt;Response.body&lt;/code&gt;&lt;/a&gt; from a fetch request, or roll your own streams using the &lt;a href=&quot;../readablestream/readablestream&quot;&gt;&lt;code&gt;ReadableStream.ReadableStream()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">フェッチ要求からの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Response/body&quot;&gt; &lt;code&gt;Response.body&lt;/code&gt; &lt;/a&gt;などのメカニズムを介して既製の読み取り可能なストリームを利用するか、&lt;a href=&quot;../readablestream/readablestream&quot;&gt; &lt;code&gt;ReadableStream.ReadableStream()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して独自のストリームをロールできます。</target>
        </trans-unit>
        <trans-unit id="1c9df0f4b4f6aca190478800188e98af8330dcef" translate="yes" xml:space="preserve">
          <source>You can make use of writable streams using the &lt;a href=&quot;../writablestream/writablestream&quot;&gt;&lt;code&gt;WritableStream.WritableStream()&lt;/code&gt;&lt;/a&gt; constructor. These currently have very limited availability in browsers.</source>
          <target state="translated">&lt;a href=&quot;../writablestream/writablestream&quot;&gt; &lt;code&gt;WritableStream.WritableStream()&lt;/code&gt; &lt;/a&gt;コンストラクターを使用して、書き込み可能なストリームを利用できます。これらは現在、ブラウザでの利用が非常に制限されています。</target>
        </trans-unit>
        <trans-unit id="6c39ff9b79a3f13fe329a5b0cb29aa98a3154e6b" translate="yes" xml:space="preserve">
          <source>You can manipulate files of other formats the same way. Here is how to preview uploaded video:</source>
          <target state="translated">他の形式のファイルも同じように操作できます。ここでは、アップロードされた動画をプレビューする方法を紹介します。</target>
        </trans-unit>
        <trans-unit id="f1d55174f97737be9decae5647b132c1753c676a" translate="yes" xml:space="preserve">
          <source>You can modify the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property during the &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; or &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; events, if for example, a particular drop target only supports certain operations. You can modify the &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property to override the user effect, and enforce a specific drop operation to occur. Note that this effect must be one listed within the &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt; property. Otherwise, it will be set to an alternate value that is allowed.</source>
          <target state="translated">たとえば、特定のドロップターゲットが特定の操作しかサポートしていない場合は、 &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragenter&quot;&gt;dragenter&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; または &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベント中に&lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt;プロパティを変更できます。&lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt;プロパティを変更してユーザー効果を上書きし、特定のドロップ操作を強制することができます。この効果は、&lt;a href=&quot;../datatransfer/effectallowed&quot;&gt; &lt;code&gt;effectAllowed&lt;/code&gt; &lt;/a&gt;プロパティ内にリストされている必要があることに注意してください。それ以外の場合は、許可されている代替値に設定されます。</target>
        </trans-unit>
        <trans-unit id="f4600f2168e879d37c2acd4841614abcdb7be9ec" translate="yes" xml:space="preserve">
          <source>You can navigate to &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/about:debugging&quot;&gt;about:debugging&lt;/a&gt;&lt;/code&gt; to see what SWs are registered and update/remove them.</source>
          <target state="translated">&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/about:debugging&quot;&gt;about:debugging&lt;/a&gt;&lt;/code&gt; に移動して、登録されているSWを確認し、更新/削除できます。</target>
        </trans-unit>
        <trans-unit id="3e6a7306ec25116f31a960a0fc87e528acca8e54" translate="yes" xml:space="preserve">
          <source>You can not reliably because the users can prevent the window from being resized by unchecking the &lt;code&gt;Edit/Preferences/Advanced/Scripts &amp;amp; Plug-ins/Allow Scripts to/ Move or resize existing windows&lt;/code&gt; checkbox in Mozilla or &lt;code&gt;Tools/Options.../Content tab/Enable Javascript/Advanced button/Move or resize existing windows&lt;/code&gt; checkbox in Firefox or by setting &lt;code&gt;dom.disable_window_move_resize&lt;/code&gt; to &lt;var&gt;true&lt;/var&gt; in &lt;code&gt;about:config&lt;/code&gt; or by editing accordingly their &lt;a href=&quot;http://www.mozilla.org/support/firefox/edit#user&quot;&gt;user.js file&lt;/a&gt;.</source>
          <target state="translated">ユーザーは、 &lt;code&gt;Edit/Preferences/Advanced/Scripts &amp;amp; Plug-ins/Allow Scripts to/ Move or resize existing windows&lt;/code&gt; Mozillaまたは &lt;code&gt;Tools/Options.../Content tab/Enable Javascript/Advanced button/Move or resize existing windows&lt;/code&gt; 既存のウィンドウの移動またはサイズ変更チェックボックスをオフにすることで、ウィンドウのサイズ変更を防ぐことができるため、確実に行うことはできません。タブ/ JavaScriptを有効にする/詳細ボタン/ Firefoxで既存のウィンドウを移動またはサイズ変更チェックボックスを &lt;code&gt;dom.disable_window_move_resize&lt;/code&gt; するか、 &lt;code&gt;about:config&lt;/code&gt; でdom.disable_window_move_resizeを &lt;var&gt;true&lt;/var&gt; に設定するか、それに応じて&lt;a href=&quot;http://www.mozilla.org/support/firefox/edit#user&quot;&gt;user.jsファイルを&lt;/a&gt;編集します。</target>
        </trans-unit>
        <trans-unit id="6d625c32b7730c186506b1632f47f0aed0879232" translate="yes" xml:space="preserve">
          <source>You can not. &lt;strong&gt;New windows not opened by javascript can not as a rule be closed by JavaScript.&lt;/strong&gt; The JavaScript Console in Mozilla-based browsers will report the warning message: &lt;code&gt;&quot;Scripts may not close windows that were not opened by script.&quot;&lt;/code&gt; Otherwise the history of URLs visited during the browser session would be lost.</source>
          <target state="translated">それはいけません。&lt;strong&gt;JavaScriptで開かれていない新しいウィンドウは、原則としてJavaScriptで閉じることができません。&lt;/strong&gt;MozillaベースのブラウザーのJavaScriptコンソールは、 &lt;code&gt;&quot;Scripts may not close windows that were not opened by script.&quot;&lt;/code&gt; という警告メッセージを報告します。そうしないと、ブラウザセッション中にアクセスしたURLの履歴が失われます。</target>
        </trans-unit>
        <trans-unit id="8160c73d835cc474fe9f6792243ca3949812238f" translate="yes" xml:space="preserve">
          <source>You can now &lt;a href=&quot;https://webrtc-from-chat.glitch.me/&quot;&gt;try out this example on Glitch&lt;/a&gt; to see it in action. Open the Web console on both devices and look at the logged output&amp;mdash;although you don't see it in the code as shown above, the code on the server (and on &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-from-chat&quot;&gt;GitHub&lt;/a&gt;) has a lot of console output so you can see the signaling and connection processes at work.</source>
          <target state="translated">あなたは今できる&lt;a href=&quot;https://webrtc-from-chat.glitch.me/&quot;&gt;グリッチでこの例を試してみる&lt;/a&gt;のアクションでそれを見て。両方のデバイスでWebコンソールを開き、ログ出力を確認します。上記のようにコードには表示されませんが、サーバー（および&lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-from-chat&quot;&gt;GitHub&lt;/a&gt;）のコードには大量のコンソール出力があり、シグナルを確認できます職場での接続プロセス。</target>
        </trans-unit>
        <trans-unit id="206e0ed35388abbf30de765940d8894ff65be8a2" translate="yes" xml:space="preserve">
          <source>You can now create another &lt;code&gt;Headers&lt;/code&gt; object, passing it the first &lt;code&gt;Headers&lt;/code&gt; object as its init object:</source>
          <target state="translated">これで、別の &lt;code&gt;Headers&lt;/code&gt; オブジェクトを作成し、最初の &lt;code&gt;Headers&lt;/code&gt; オブジェクトをその初期オブジェクトとして渡すことができます。</target>
        </trans-unit>
        <trans-unit id="39d3a471da89fe4af3f873a3385c34b9fabf11ab" translate="yes" xml:space="preserve">
          <source>You can only include in the &lt;code&gt;codecs&lt;/code&gt; list codecs which the transceiver actually supports. That means that either the associated &lt;a href=&quot;../rtcrtpsender&quot;&gt;&lt;code&gt;RTCRtpSender&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;../rtcrtpreceiver&quot;&gt;&lt;code&gt;RTCRtpReceiver&lt;/code&gt;&lt;/a&gt; needs to support every codec in the list. If any unsupported codecs are listed, the browser will throw an &lt;code&gt;InvalidAccessError&lt;/code&gt; exception when you call this method.</source>
          <target state="translated">トランシーバーが実際にサポートする &lt;code&gt;codecs&lt;/code&gt; のみをコーデックリストに含めることができます。関連するいずれかの手段が&lt;a href=&quot;../rtcrtpsender&quot;&gt; &lt;code&gt;RTCRtpSender&lt;/code&gt; &lt;/a&gt;または&lt;a href=&quot;../rtcrtpreceiver&quot;&gt; &lt;code&gt;RTCRtpReceiver&lt;/code&gt; は&lt;/a&gt;、リスト内のすべてのコーデックをサポートする必要があります。サポートされていないコーデックがリストされている場合、このメソッドを呼び出すと、ブラウザーは &lt;code&gt;InvalidAccessError&lt;/code&gt; 例外をスローします。</target>
        </trans-unit>
        <trans-unit id="73d59eccf554bd34bd55f54ebc813a802ec23c01" translate="yes" xml:space="preserve">
          <source>You can only overwrite a directory if it's empty.</source>
          <target state="translated">ディレクトリが空の場合のみ上書きすることができます。</target>
        </trans-unit>
        <trans-unit id="992ec8ee602ff09079e443eafd09ce8f880d6b53" translate="yes" xml:space="preserve">
          <source>You can only return &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects of &lt;a href=&quot;../response/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; &quot;&lt;code&gt;opaque&lt;/code&gt;&quot; if the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;fetchEvent.request&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../request/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; is &quot;&lt;code&gt;no-cors&lt;/code&gt;&quot;. This prevents the leaking of private data.</source>
          <target state="translated">&lt;a href=&quot;request&quot;&gt; &lt;code&gt;fetchEvent.request&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../request/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;が「 &lt;code&gt;no-cors&lt;/code&gt; cors」の場合にのみ、「 &lt;code&gt;opaque&lt;/code&gt; 」&lt;a href=&quot;../response/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;オブジェクトを返すことができます。これにより、個人データの漏洩を防ぎます。</target>
        </trans-unit>
        <trans-unit id="d5bc8889492e5b0d711da173fb10bce03c7a2a6a" translate="yes" xml:space="preserve">
          <source>You can only return &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects of &lt;a href=&quot;../response/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; &quot;&lt;code&gt;opaqueredirect&lt;/code&gt;&quot; if the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;fetchEvent.request&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../request/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; is &quot;&lt;code&gt;manual&lt;/code&gt;&quot;.</source>
          <target state="translated">&lt;a href=&quot;request&quot;&gt; &lt;code&gt;fetchEvent.request&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../request/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;が「 &lt;code&gt;manual&lt;/code&gt; 」の場合にのみ、「 &lt;code&gt;opaqueredirect&lt;/code&gt; 」&lt;a href=&quot;../response/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;オブジェクトを返すことができます。</target>
        </trans-unit>
        <trans-unit id="3dbbab80633765bdbf42e622140207104bfc56cf" translate="yes" xml:space="preserve">
          <source>You can optionally supply an argument to label the timestamp, and this label will then be shown alongside the marker.</source>
          <target state="translated">オプションでタイムスタンプにラベルを付けるための引数を与えることができ、このラベルはマーカーと一緒に表示されます。</target>
        </trans-unit>
        <trans-unit id="c333e5528578081d52db4c7d37aa94dcdcdb8e96" translate="yes" xml:space="preserve">
          <source>You can optionally supply an argument to name the profile and this then enables you to stop only that profile if multiple profiles being recorded. See &lt;a href=&quot;profileend&quot;&gt;&lt;code&gt;Console.profileEnd()&lt;/code&gt;&lt;/a&gt; to see how this argument is interpreted.</source>
          <target state="translated">オプションで引数を指定してプロファイルに名前を付けることができます。これにより、複数のプロファイルが記録されている場合、そのプロファイルのみを停止できます。この引数がどのように解釈されるかについては、&lt;a href=&quot;profileend&quot;&gt; &lt;code&gt;Console.profileEnd()&lt;/code&gt; &lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="d9d1acdede8f19168cbbd67ca1b36562f45ce4c9" translate="yes" xml:space="preserve">
          <source>You can optionally supply an argument to name the profile. Doing so enables you to stop only that profile if you have multiple profiles being recorded.</source>
          <target state="translated">オプションで、プロファイルに名前を付けるための引数を与えることができます。そうすることで、複数のプロファイルが記録されている場合に、そのプロファイルだけを停止することができます。</target>
        </trans-unit>
        <trans-unit id="bcdd7efc6a8bd407631335b132aec044aea74e22" translate="yes" xml:space="preserve">
          <source>You can override this behavior by explicitly setting the value of &lt;code&gt;passive&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;, as shown here:</source>
          <target state="translated">次に示すように、 &lt;code&gt;passive&lt;/code&gt; の値を明示的に &lt;code&gt;false&lt;/code&gt; に設定することで、この動作をオーバーライドできます。</target>
        </trans-unit>
        <trans-unit id="3861bee411d9287b03fab231b5fa34c6cd39b86d" translate="yes" xml:space="preserve">
          <source>You can perform the opposite operation&amp;mdash;converting a DOM tree into XML or HTML source&amp;mdash;using the &lt;a href=&quot;xmlserializer&quot;&gt;&lt;code&gt;XMLSerializer&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;xmlserializer&quot;&gt; &lt;code&gt;XMLSerializer&lt;/code&gt; &lt;/a&gt;インターフェイスを使用して、反対の操作（DOMツリーをXMLまたはHTMLソースに変換）を実行できます。</target>
        </trans-unit>
        <trans-unit id="e2cab38fd2aceeaff00b1705e5607946758c24c4" translate="yes" xml:space="preserve">
          <source>You can play with this effect using, for example, the Firefox developer tools' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Style_Editor&quot;&gt;style editor&lt;/a&gt;; see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Edit_CSS_filters&quot;&gt;Edit CSS filters&lt;/a&gt; for details on how to do so.</source>
          <target state="translated">たとえば、Firefox開発者ツールの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Style_Editor&quot;&gt;スタイルエディター&lt;/a&gt;を使用して、この効果を試すことができます。参照&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Tools/Page_Inspector/How_to/Edit_CSS_filters&quot;&gt;編集CSSフィルター&lt;/a&gt;これを行う方法の詳細については、を。</target>
        </trans-unit>
        <trans-unit id="fdfb4e7f5c0a2e73f38f3affee65e4ec926eb84e" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;CustomEvent()&lt;/code&gt; constructor functionality in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">Internet Explorer 9 以降の &lt;code&gt;CustomEvent()&lt;/code&gt; コンストラクター機能を次のコードでポリフィルできます。</target>
        </trans-unit>
        <trans-unit id="a572e3f2a629f41042b269411b22ebd433dad10a" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;MouseEvent()&lt;/code&gt; constructor functionality in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">Internet Explorer 9 以降の &lt;code&gt;MouseEvent()&lt;/code&gt; コンストラクター機能を次のコードでポリフィルできます。</target>
        </trans-unit>
        <trans-unit id="e442c1816dcbbaf5c4c621e9bec96be836911d10" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;after() method&lt;/code&gt; in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">Internet Explorer 9以降では、次のコードを使用して &lt;code&gt;after() method&lt;/code&gt; ポリフィルできます。</target>
        </trans-unit>
        <trans-unit id="65713c6e18b5f14a54453d50c54a806251283494" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;append() method&lt;/code&gt; in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">Internet Explorer 9以降で次のコードを使用して、 &lt;code&gt;append() method&lt;/code&gt; ポリフィルできます。</target>
        </trans-unit>
        <trans-unit id="6b05507c01e36bbbee1f78611653a700bb189adf" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;before() method&lt;/code&gt; in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">Internet Explorer 9以降では、次のコードを使用して &lt;code&gt;before() method&lt;/code&gt; ポリフィルできます。</target>
        </trans-unit>
        <trans-unit id="77bdeb545ab8b78d3b9f1681df9200620c75fe34" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;prepend()&lt;/code&gt; method if it's not available:</source>
          <target state="translated">&lt;code&gt;prepend()&lt;/code&gt; メソッドが利用できない場合は、それをポリフィルできます。</target>
        </trans-unit>
        <trans-unit id="93679d0f87e27250a1320708f739d2d03aa569d2" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;remove() method&lt;/code&gt; in Internet Explorer 9 and higher with the following code:</source>
          <target state="translated">Internet Explorer 9以降では、次のコードを使用して &lt;code&gt;remove() method&lt;/code&gt; ポリフィルできます。</target>
        </trans-unit>
        <trans-unit id="b6df9b25046edf035cd4cce70d4aa1358cf924f4" translate="yes" xml:space="preserve">
          <source>You can polyfill the &lt;code&gt;replaceWith()&lt;/code&gt; method in Internet Explorer 10+ and higher with the following code:</source>
          <target state="translated">Internet Explorer 10以降では、次のコードで &lt;code&gt;replaceWith()&lt;/code&gt; メソッドをポリフィルできます。</target>
        </trans-unit>
        <trans-unit id="97456efa07b953981a1aec8e92e5f09fc5220bdf" translate="yes" xml:space="preserve">
          <source>You can polyfill the insertAdjacentText&lt;code&gt;() method&lt;/code&gt; in Internet Explorer 5.5 (maybe earlier) and higher with the following code:</source>
          <target state="translated">次のコードを使用すると、Internet Explorer 5.5（おそらく以前のバージョン）以降でinsertAdjacentText &lt;code&gt;() method&lt;/code&gt; をポリフィルできます。</target>
        </trans-unit>
        <trans-unit id="38b75097c5091847113ea9ef86d82b2ccf641a72" translate="yes" xml:space="preserve">
          <source>You can provide data in multiple formats. To do this, call the &lt;a href=&quot;../datatransfer/setdata&quot;&gt;&lt;code&gt;setData()&lt;/code&gt;&lt;/a&gt; method multiple times with different formats. You should call it with formats in order from most specific to least specific.</source>
          <target state="translated">複数の形式でデータを提供できます。これを行うには、異なる形式で&lt;a href=&quot;../datatransfer/setdata&quot;&gt; &lt;code&gt;setData()&lt;/code&gt; &lt;/a&gt;メソッドを複数回呼び出します。最も具体的なものから最も具体的でないものの順にフォーマットで呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="d78b8bac9442fd34576b47c43b8e4309cc95ee0a" translate="yes" xml:space="preserve">
          <source>You can query the following &lt;code&gt;pname&lt;/code&gt; parameters when using &lt;a href=&quot;../webgl_api/using_extensions&quot;&gt;WebGL extensions&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../webgl_api/using_extensions&quot;&gt;WebGL拡張&lt;/a&gt;を使用する場合、次の &lt;code&gt;pname&lt;/code&gt; パラメータをクエリできます。</target>
        </trans-unit>
        <trans-unit id="4a051147d998adb406fada67b38a9b235de233f9" translate="yes" xml:space="preserve">
          <source>You can query the following &lt;code&gt;pname&lt;/code&gt; parameters when using a &lt;a href=&quot;../webgl2renderingcontext&quot;&gt;&lt;code&gt;WebGL2RenderingContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">あなたは、次のクエリを実行することができます &lt;code&gt;pname&lt;/code&gt; 使用時にパラメータを&lt;a href=&quot;../webgl2renderingcontext&quot;&gt; &lt;code&gt;WebGL2RenderingContext&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="d9f9b7d654dcef4add84088b7531d52f8474df92" translate="yes" xml:space="preserve">
          <source>You can query the following &lt;code&gt;pname&lt;/code&gt; parameters when using a &lt;a href=&quot;../webglrenderingcontext&quot;&gt;&lt;code&gt;WebGLRenderingContext&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">あなたは、次のクエリを実行することができます &lt;code&gt;pname&lt;/code&gt; 使用時にパラメータを&lt;a href=&quot;../webglrenderingcontext&quot;&gt; &lt;code&gt;WebGLRenderingContext&lt;/code&gt; を&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="c274b7c60b523412b24ff7d93f6cc0deddfc3cf4" translate="yes" xml:space="preserve">
          <source>You can read about the theory of the Web Audio API in a lot more detail in our article &lt;a href=&quot;web_audio_api/basic_concepts_behind_web_audio_api&quot;&gt;Basic concepts behind Web Audio API&lt;/a&gt;.</source>
          <target state="translated">WebオーディオAPIの理論について詳しくは、記事「&lt;a href=&quot;web_audio_api/basic_concepts_behind_web_audio_api&quot;&gt;WebオーディオAPIの背後にある基本的な概念&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="50dda598d80f66d593e012bbaf4de63fbe03e58e" translate="yes" xml:space="preserve">
          <source>You can read the state of the current history entry without waiting for a &lt;code&gt;popstate&lt;/code&gt; event using the &lt;code&gt;history.state&lt;/code&gt; property like this:</source>
          <target state="translated">次のように &lt;code&gt;history.state&lt;/code&gt; プロパティを使用すると、 &lt;code&gt;popstate&lt;/code&gt; イベントを待たずに現在の履歴エントリの状態を読み取ることができます。</target>
        </trans-unit>
        <trans-unit id="f8358c51de5b638021364b57020141a227a5b945" translate="yes" xml:space="preserve">
          <source>You can register a service worker from inside a standard worker, and use associated functionality.</source>
          <target state="translated">標準ワーカーの内部からサービスワーカーを登録し、関連する機能を利用することができます。</target>
        </trans-unit>
        <trans-unit id="9e8e9ee919063907906801a2f07cd71420305ce9" translate="yes" xml:space="preserve">
          <source>You can register listeners for these events in a few familiar ways:</source>
          <target state="translated">これらのイベントのリスナー登録は、いくつかの身近な方法で行うことができます。</target>
        </trans-unit>
        <trans-unit id="4f0437aa66c53b79fba0312ab25233b8cb355cc4" translate="yes" xml:space="preserve">
          <source>You can request a certain latency during &lt;a href=&quot;audiocontext&quot;&gt;construction time&lt;/a&gt; with the &lt;code&gt;latencyHint&lt;/code&gt; option but the browser may ignore the option.</source>
          <target state="translated">&lt;code&gt;latencyHint&lt;/code&gt; オプションを使用すると、&lt;a href=&quot;audiocontext&quot;&gt;構築時に&lt;/a&gt;特定のレイテンシをリクエストできますが、ブラウザはオプションを無視する場合があります。</target>
        </trans-unit>
        <trans-unit id="0d20c1282a17b3a7031fd0afe481e8e9f37f4715" translate="yes" xml:space="preserve">
          <source>You can retrieve &lt;code&gt;VRLayerInit&lt;/code&gt; objects using &lt;a href=&quot;vrdisplay/getlayers&quot;&gt;&lt;code&gt;VRDisplay.getLayers()&lt;/code&gt;&lt;/a&gt;, and present them using the &lt;a href=&quot;vrdisplay/requestpresent&quot;&gt;&lt;code&gt;VRDisplay.requestPresent()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;vrdisplay/getlayers&quot;&gt; &lt;code&gt;VRDisplay.getLayers()&lt;/code&gt; &lt;/a&gt;を使用して &lt;code&gt;VRLayerInit&lt;/code&gt; オブジェクトを取得し、&lt;a href=&quot;vrdisplay/requestpresent&quot;&gt; &lt;code&gt;VRDisplay.requestPresent()&lt;/code&gt; &lt;/a&gt;メソッドを使用してそれらを提示できます。</target>
        </trans-unit>
        <trans-unit id="2e7bc49a66229b15d558e46a83af5facf5bd6a40" translate="yes" xml:space="preserve">
          <source>You can retrieve a &lt;code&gt;Headers&lt;/code&gt; object via the &lt;a href=&quot;request/headers&quot;&gt;&lt;code&gt;Request.headers&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;response/headers&quot;&gt;&lt;code&gt;Response.headers&lt;/code&gt;&lt;/a&gt; properties, and create a new &lt;code&gt;Headers&lt;/code&gt; object using the &lt;a href=&quot;headers/headers&quot;&gt;&lt;code&gt;Headers.Headers()&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">あなたは取得することができます &lt;code&gt;Headers&lt;/code&gt; 経由オブジェクト&lt;a href=&quot;request/headers&quot;&gt; &lt;code&gt;Request.headers&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;response/headers&quot;&gt; &lt;code&gt;Response.headers&lt;/code&gt; &lt;/a&gt;プロパティを、新しい作成 &lt;code&gt;Headers&lt;/code&gt; 使用してオブジェクト&lt;a href=&quot;headers/headers&quot;&gt; &lt;code&gt;Headers.Headers()&lt;/code&gt; &lt;/a&gt;コンストラクタ。</target>
        </trans-unit>
        <trans-unit id="91b0e6afa0cb0673a77f57b611cdbb1d93076a84" translate="yes" xml:space="preserve">
          <source>You can retrieve a lot of information about each request by calling parameters of the &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object returned by the &lt;a href=&quot;../fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;../fetchevent&quot;&gt; &lt;code&gt;FetchEvent&lt;/code&gt; &lt;/a&gt;によって返された&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトのパラメーターを呼び出すことにより、各要求に関する多くの情報を取得できます。</target>
        </trans-unit>
        <trans-unit id="510df6e88737bc81b6817b5bc60c3d417ee844a4" translate="yes" xml:space="preserve">
          <source>You can retrieve a reference to an element's shadow root using its &lt;a href=&quot;element/shadowroot&quot;&gt;&lt;code&gt;Element.shadowRoot&lt;/code&gt;&lt;/a&gt; property, provided it was created using &lt;a href=&quot;element/attachshadow&quot;&gt;&lt;code&gt;Element.attachShadow()&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;mode&lt;/code&gt; option set to &lt;code&gt;open&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;element/shadowroot&quot;&gt; &lt;code&gt;Element.shadowRoot&lt;/code&gt; &lt;/a&gt;プロパティを使用して要素のシャドウルートへの参照を取得できます。ただし、要素が&lt;a href=&quot;element/attachshadow&quot;&gt; &lt;code&gt;Element.attachShadow()&lt;/code&gt; &lt;/a&gt;を使用して作成されており、 &lt;code&gt;mode&lt;/code&gt; オプションが &lt;code&gt;open&lt;/code&gt; に設定されている場合。</target>
        </trans-unit>
        <trans-unit id="6a6e5099572c9bc1b4692e8efbdb621f80e40989" translate="yes" xml:space="preserve">
          <source>You can retrieve other types of data as well. If the data is a link, it should have the type &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text/uri-list&lt;/a&gt;. You could then insert a link into the content.</source>
          <target state="translated">他のタイプのデータも取得できます。データがリンクの場合、タイプは&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DragDrop/Recommended_Drag_Types#link&quot;&gt;text / uri-list&lt;/a&gt;である必要があります。次に、コンテンツにリンクを挿入できます。</target>
        </trans-unit>
        <trans-unit id="73838202745060ec19e18470803bc3eb3c31552f" translate="yes" xml:space="preserve">
          <source>You can retrieve records in an object store through the primary key or by using an index. An index lets you look up records in an object store using properties of the values in the object stores records other than the primary key</source>
          <target state="translated">オブジェクト ストア内のレコードは、プライマリ キーを使用して取得するか、インデックスを使用して取得できます。インデックスを使用すると、プライマリ キー以外のオブジェクト ストアのレコードの値のプロパティを使用して、オブジェクト ストア内のレコードを検索できます。</target>
        </trans-unit>
        <trans-unit id="1d78f780b80186b4e6779e404b265126738c4b4d" translate="yes" xml:space="preserve">
          <source>You can retrieve the &lt;code&gt;HTMLHtmlElement&lt;/code&gt; object for a given document by reading the value of the &lt;a href=&quot;document/documentelement&quot;&gt;&lt;code&gt;document.documentElement&lt;/code&gt;&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;document/documentelement&quot;&gt; &lt;code&gt;document.documentElement&lt;/code&gt; &lt;/a&gt;プロパティの値を読み取ることにより、特定のドキュメントの &lt;code&gt;HTMLHtmlElement&lt;/code&gt; オブジェクトを取得できます。</target>
        </trans-unit>
        <trans-unit id="c3ebb79c730ad8b52d39116a50fc948035eba509" translate="yes" xml:space="preserve">
          <source>You can run code in response to the selection being changed, or a new selection being started, using the &lt;a href=&quot;globaleventhandlers/onselectionchange&quot;&gt;&lt;code&gt;GlobalEventHandlers.onselectionchange&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;globaleventhandlers/onselectstart&quot;&gt;&lt;code&gt;GlobalEventHandlers.onselectstart&lt;/code&gt;&lt;/a&gt; event handlers.</source>
          <target state="translated">あなたは使用して、変更された、または新しい選択が開始された選択に応じてコードを実行することができます&lt;a href=&quot;globaleventhandlers/onselectionchange&quot;&gt; &lt;code&gt;GlobalEventHandlers.onselectionchange&lt;/code&gt; &lt;/a&gt;と&lt;a href=&quot;globaleventhandlers/onselectstart&quot;&gt; &lt;code&gt;GlobalEventHandlers.onselectstart&lt;/code&gt; &lt;/a&gt;イベントハンドラを。</target>
        </trans-unit>
        <trans-unit id="68dea9f12f4a0d26ea62bc5748f7cb58fd5c489b" translate="yes" xml:space="preserve">
          <source>You can run whatever code you like inside the worker thread, with some exceptions. For example, you can't directly manipulate the DOM from inside a worker, or use some default methods and properties of the &lt;a href=&quot;../window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; object. But you can use a large number of items available under &lt;code&gt;window&lt;/code&gt;, including &lt;a href=&quot;../websockets_api&quot;&gt;WebSockets&lt;/a&gt;, and data storage mechanisms like &lt;a href=&quot;../indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt; and the Firefox OS-only &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Data_Store_API&quot;&gt;Data Store API&lt;/a&gt;. See &lt;a href=&quot;functions_and_classes_available_to_workers&quot;&gt;Functions and classes available to workers&lt;/a&gt; for more details.</source>
          <target state="translated">いくつかの例外を除いて、ワーカースレッド内で好きなコードを実行できます。たとえば、ワーカー内から直接DOMを操作したり、&lt;a href=&quot;../window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt;オブジェクトのデフォルトのメソッドやプロパティを使用したりすることはできません。ただし、&lt;a href=&quot;../websockets_api&quot;&gt;WebSocket&lt;/a&gt;や、&lt;a href=&quot;../indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt;やFirefox OSのみの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Data_Store_API&quot;&gt;データストアAPI&lt;/a&gt;などのデータストレージメカニズムを含む、 &lt;code&gt;window&lt;/code&gt; で使用可能な多数のアイテムを使用できます。詳しくは&lt;a href=&quot;functions_and_classes_available_to_workers&quot;&gt;、ワーカー&lt;/a&gt;が使用できる関数とクラスをご覧ください。</target>
        </trans-unit>
        <trans-unit id="49ea35891878c04281f348699c563559d74b6bf3" translate="yes" xml:space="preserve">
          <source>You can run whatever code you like inside the worker thread, with some exceptions. For example, you can't directly manipulate the DOM from inside a worker, or use some default methods and properties of the &lt;a href=&quot;window&quot;&gt;&lt;code&gt;window&lt;/code&gt;&lt;/a&gt; object. But you can use a large number of items available under &lt;code&gt;window&lt;/code&gt;, including &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebSockets&quot;&gt;WebSockets&lt;/a&gt;, and data storage mechanisms like &lt;a href=&quot;indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt;. See &lt;a href=&quot;web_workers_api/functions_and_classes_available_to_workers&quot;&gt;Functions and classes available to workers&lt;/a&gt; for more details.</source>
          <target state="translated">いくつかの例外を除いて、ワーカースレッド内で好きなコードを実行できます。たとえば、ワーカー内から直接DOMを操作したり、&lt;a href=&quot;window&quot;&gt; &lt;code&gt;window&lt;/code&gt; &lt;/a&gt;オブジェクトのデフォルトのメソッドやプロパティを使用したりすることはできません。ただし、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebSockets&quot;&gt;WebSocket&lt;/a&gt;や&lt;a href=&quot;indexeddb_api&quot;&gt;IndexedDB&lt;/a&gt;などのデータストレージメカニズムなど、 &lt;code&gt;window&lt;/code&gt; で使用できる多数のアイテムを使用できます。詳しくは&lt;a href=&quot;web_workers_api/functions_and_classes_available_to_workers&quot;&gt;、ワーカー&lt;/a&gt;が使用できる関数とクラスをご覧ください。</target>
        </trans-unit>
        <trans-unit id="9201bb1e6c70899833542ef8abaeb20222b11d1b" translate="yes" xml:space="preserve">
          <source>You can see changes in the network state by listening for the events on &lt;a href=&quot;../document/ononline&quot;&gt;&lt;code&gt;window.ononline&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../document/onoffline&quot;&gt;&lt;code&gt;window.onoffline&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../document/ononline&quot;&gt; &lt;code&gt;window.ononline&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../document/onoffline&quot;&gt; &lt;code&gt;window.onoffline&lt;/code&gt; で&lt;/a&gt;イベントをリッスンすることにより、ネットワーク状態の変化を確認できます。</target>
        </trans-unit>
        <trans-unit id="f0c1744874e7b38aa4c44bcdc46914537792291c" translate="yes" xml:space="preserve">
          <source>You can see how this works by trying it out below. Find some files and directories and drag them in, and take a look at the resulting output.</source>
          <target state="translated">これがどのように動作するかは、以下で試してみてください。いくつかのファイルとディレクトリを見つけてドラッグし、結果の出力を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="b6df4d66676092e310ca265f9a2ebfd436491a23" translate="yes" xml:space="preserve">
          <source>You can see something similar in action in Nick Desaulnier's &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html&quot;&gt;bufferWhenNeeded demo&lt;/a&gt; &amp;mdash; in &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L48&quot;&gt;line 48, an event listener is added to the playing video&lt;/a&gt; so a function called &lt;code&gt;seek()&lt;/code&gt; is run when the &lt;code&gt;seeking&lt;/code&gt; event fires. In &lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L92-L101&quot;&gt;lines 92-101, the seek() function is defined&lt;/a&gt; &amp;mdash; note that &lt;code&gt;abort()&lt;/code&gt; is called if &lt;a href=&quot;../mediasource/readystate&quot;&gt;&lt;code&gt;MediaSource.readyState&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;open&lt;/code&gt;, which means that it is ready to receive new source buffers &amp;mdash; at this point it is worth aborting the current segment and just getting the one for the new seek position (see &lt;code&gt;&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L78-L90&quot;&gt;checkBuffer()&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L103-L105&quot;&gt;getCurrentSegment()&lt;/a&gt;&lt;/code&gt;.)</source>
          <target state="translated">あなたがニックDesaulnier年代のアクションで似たような見ることができます&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html&quot;&gt;bufferWhenNeededデモ&lt;/a&gt; -で&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L48&quot;&gt;ライン48を、イベントリスナーは、再生中のビデオに追加された&lt;/a&gt;関数が呼び出さよう &lt;code&gt;seek()&lt;/code&gt; したときに実行された &lt;code&gt;seeking&lt;/code&gt; イベントが発生します。で&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L92-L101&quot;&gt;ライン92から101、追求（）関数が定義されている&lt;/a&gt; -なお、 &lt;code&gt;abort()&lt;/code&gt; 場合に呼び出され&lt;a href=&quot;../mediasource/readystate&quot;&gt; &lt;code&gt;MediaSource.readyState&lt;/code&gt; が&lt;/a&gt;に設定されている &lt;code&gt;open&lt;/code&gt; 新しいソース・バッファを受信する準備ができていることを意味し、 -この時点で、それは価値が中止されます現在のセグメントと新しいシーク位置のセグメントを取得するだけ &lt;code&gt;&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L78-L90&quot;&gt;checkBuffer()&lt;/a&gt;&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://github.com/nickdesaulniers/netfix/blob/gh-pages/demo/bufferWhenNeeded.html#L103-L105&quot;&gt;getCurrentSegment()&lt;/a&gt;&lt;/code&gt; を参照）。</target>
        </trans-unit>
        <trans-unit id="e23d7fb03b3dd0ded4110a7940aad068f2075e87" translate="yes" xml:space="preserve">
          <source>You can see the &lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;source code on GitHub&lt;/a&gt;, and &lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;view the example live&lt;/a&gt;. The one bit we&amp;rsquo;ll call out here is the promise (see &lt;a href=&quot;https://github.com/mdn/sw-test/blob/gh-pages/app.js#L22-L47&quot;&gt;app.js lines 22-47&lt;/a&gt;), which is a modified version of what you read about above, in the &lt;a href=&quot;https://mdn.github.io/js-examples/promises-test/&quot;&gt;Promises test demo&lt;/a&gt;. It is different in the following ways:</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mdn/sw-test/&quot;&gt;GitHub&lt;/a&gt;でソースコードを&lt;a href=&quot;https://mdn.github.io/sw-test/&quot;&gt;確認し、サンプルをライブで&lt;/a&gt;見ることができます。ここで&lt;a href=&quot;https://github.com/mdn/sw-test/blob/gh-pages/app.js#L22-L47&quot;&gt;言及&lt;/a&gt;するのは、Promise &lt;a href=&quot;https://mdn.github.io/js-examples/promises-test/&quot;&gt;テストデモ&lt;/a&gt;での上記の内容を変更したバージョンであるpromise（app.jsの22〜47行目を参照）です。次の点で異なります。</target>
        </trans-unit>
        <trans-unit id="a76483e1526f560165b8dd289b3632d8cfc1c428" translate="yes" xml:space="preserve">
          <source>You can see this &lt;a href=&quot;https://mdn.github.io/web-dictaphone/&quot;&gt;demo running live&lt;/a&gt;, or &lt;a href=&quot;https://github.com/mdn/web-dictaphone&quot;&gt;grab the source code&lt;/a&gt; on Github (&lt;a href=&quot;https://github.com/mdn/web-dictaphone/archive/master.zip&quot;&gt;direct zip file download&lt;/a&gt;.)</source>
          <target state="translated">この&lt;a href=&quot;https://mdn.github.io/web-dictaphone/&quot;&gt;デモがライブ&lt;/a&gt;で実行されているのを確認したり、Githubで&lt;a href=&quot;https://github.com/mdn/web-dictaphone&quot;&gt;ソースコード&lt;/a&gt;を入手したりできます（&lt;a href=&quot;https://github.com/mdn/web-dictaphone/archive/master.zip&quot;&gt;zipファイルを直接ダウンロードし&lt;/a&gt;ます）。</target>
        </trans-unit>
        <trans-unit id="eda1b2008260e852a97657a6d3a6ff26099092de" translate="yes" xml:space="preserve">
          <source>You can see this in action here:</source>
          <target state="translated">ここでは、その様子を見ることができます。</target>
        </trans-unit>
        <trans-unit id="8bf2abc1a50e0d98f102be8b5e89dba0cc01d3be" translate="yes" xml:space="preserve">
          <source>You can see this script as &lt;a href=&quot;https://developer.mozilla.org/@api/deki/files/2866/=example.html&quot;&gt;a complete example&lt;/a&gt;.</source>
          <target state="translated">このスクリプト&lt;a href=&quot;https://developer.mozilla.org/@api/deki/files/2866/=example.html&quot;&gt;は完全な例&lt;/a&gt;として見ることができます。</target>
        </trans-unit>
        <trans-unit id="d1254bec7f36b8781aebe4cab26b860b50a8889c" translate="yes" xml:space="preserve">
          <source>You can send any &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;JavaScript typed array&lt;/a&gt; object as a binary frame; its binary data contents are queued in the buffer, increasing the value of &lt;code&gt;bufferedAmount&lt;/code&gt; by the requisite number of bytes.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays&quot;&gt;JavaScriptタイプの配列&lt;/a&gt;オブジェクトをバイナリフレームとして送信できます。そのバイナリデータの内容はバッファにキューイング &lt;code&gt;bufferedAmount&lt;/code&gt; れ、必要なバイト数だけbufferedAmountの値を増やします。</target>
        </trans-unit>
        <trans-unit id="e44500efc5a924342e8d30f93146b6d98c28f2f3" translate="yes" xml:space="preserve">
          <source>You can send data as a string, &lt;a href=&quot;../blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer&quot;&gt;&lt;code&gt;ArrayBuffer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">データは、文字列、&lt;a href=&quot;../blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;、または&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript_typed_arrays/ArrayBuffer&quot;&gt; &lt;code&gt;ArrayBuffer&lt;/code&gt; &lt;/a&gt;として送信できます。</target>
        </trans-unit>
        <trans-unit id="4fccf1de1f3664c605aba08d8d50cebd281b8e11" translate="yes" xml:space="preserve">
          <source>You can send the underlying binary data used by a typed array object; its binary data contents are queued in the buffer, increasing the value of &lt;code&gt;bufferedAmount&lt;/code&gt; by the requisite number of bytes.</source>
          <target state="translated">型付き配列オブジェクトによって使用される基本的なバイナリデータを送信できます。そのバイナリデータの内容はバッファにキューイング &lt;code&gt;bufferedAmount&lt;/code&gt; れ、必要なバイト数だけbufferedAmountの値を増やします。</target>
        </trans-unit>
        <trans-unit id="258a2f0114541ed129e6aa0b3921f994d7002b9d" translate="yes" xml:space="preserve">
          <source>You can set key/value pairs on this using &lt;a href=&quot;set&quot;&gt;&lt;code&gt;FormData.set&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;set&quot;&gt; &lt;code&gt;FormData.set&lt;/code&gt; &lt;/a&gt;を使用して、これにキーと値のペアを設定できます。</target>
        </trans-unit>
        <trans-unit id="b9b7e8ab0099fbdd994f7b584eb42b8ee55f5214" translate="yes" xml:space="preserve">
          <source>You can similarly use &lt;a href=&quot;availwidth&quot;&gt;&lt;code&gt;Screen.availWidth&lt;/code&gt;&lt;/a&gt; to get the number of pixels which are horizontally available to the browser for its use.</source>
          <target state="translated">同様に&lt;a href=&quot;availwidth&quot;&gt; &lt;code&gt;Screen.availWidth&lt;/code&gt; &lt;/a&gt;を使用して、ブラウザが水平方向に使用できるピクセル数を取得できます。</target>
        </trans-unit>
        <trans-unit id="9eaf125e454b06f1ac82cc4cff2066607fa67775" translate="yes" xml:space="preserve">
          <source>You can sort the table by a particular column by clicking on that column's label.</source>
          <target state="translated">その列のラベルをクリックすると、特定の列でテーブルを並べ替えることができます。</target>
        </trans-unit>
        <trans-unit id="f509592af125ea8bfcb6f7292adec8e3e794d414" translate="yes" xml:space="preserve">
          <source>You can specify one or more media input device IDs to establish restrictions on which input sources are allowed. To collect a list of the available devices, you can call &lt;a href=&quot;../mediadevices/enumeratedevices&quot;&gt;&lt;code&gt;navigator.mediaDevices.enumerateDevices()&lt;/code&gt;&lt;/a&gt;, then for each device which meets the desired criteria, add its &lt;code&gt;deviceId&lt;/code&gt; to the &lt;code&gt;MediaConstraints&lt;/code&gt; object that eventually gets passed into &lt;code&gt;getUserMedia()&lt;/code&gt;.</source>
          <target state="translated">1つ以上のメディア入力デバイスIDを指定して、許可する入力ソースに制限を設けることができます。使用可能なデバイスのリストを収集するには、&lt;a href=&quot;../mediadevices/enumeratedevices&quot;&gt; &lt;code&gt;navigator.mediaDevices.enumerateDevices()&lt;/code&gt; を&lt;/a&gt;呼び出し、目的の基準を満たすデバイスごとに、その &lt;code&gt;deviceId&lt;/code&gt; を &lt;code&gt;MediaConstraints&lt;/code&gt; オブジェクトに追加します。このオブジェクトは、最終的に &lt;code&gt;getUserMedia()&lt;/code&gt; に渡されます。</target>
        </trans-unit>
        <trans-unit id="f97313a8442e3b3b15b332cd325b4a6729d126a4" translate="yes" xml:space="preserve">
          <source>You can specify the parameters for the &lt;code&gt;OfflineAudioContext()&lt;/code&gt; constructor as either the same set of parameters as are inputs into the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createBuffer&quot;&gt;&lt;code&gt;AudioContext.createBuffer()&lt;/code&gt;&lt;/a&gt; method, or by passing those parameters in an &lt;code&gt;options&lt;/code&gt; object. Either way, the individual parameters are the same.</source>
          <target state="translated">あなたのためのパラメータを指定でき &lt;code&gt;OfflineAudioContext()&lt;/code&gt; への入力であるようなパラメータの同じセットのいずれかとしてコンストラクタを&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/AudioContext/createBuffer&quot;&gt; &lt;code&gt;AudioContext.createBuffer()&lt;/code&gt; &lt;/a&gt;メソッドは、またはでこれらのパラメータを渡すことにより、 &lt;code&gt;options&lt;/code&gt; オブジェクト。どちらの方法でも、個々のパラメーターは同じです。</target>
        </trans-unit>
        <trans-unit id="2f52285c960c67aad502082cda8732cbaf7fc506" translate="yes" xml:space="preserve">
          <source>You can specify which of the three operations are allowed for a drag source by setting the &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt; property within a &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; event listener.</source>
          <target state="translated">あなたは、設定することで、ドラッグソースのために許可されている3つの操作のかを指定することができます&lt;a href=&quot;../datatransfer/effectallowed&quot;&gt; &lt;code&gt;effectAllowed&lt;/code&gt; &lt;/a&gt;以内に財産を &lt;code&gt;&lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragstart&quot;&gt;dragstart&lt;/a&gt;&lt;/code&gt;&lt;/code&gt; イベントリスナー。</target>
        </trans-unit>
        <trans-unit id="420363b3630563fc773ffb128359c8eebc3ed711" translate="yes" xml:space="preserve">
          <source>You can speed up data access by using the right scope and mode in the transaction. Here are a couple of tips:</source>
          <target state="translated">取引時に正しいスコープとモードを使用することで、データアクセスを高速化することができます。ここでは、いくつかのヒントを紹介します。</target>
        </trans-unit>
        <trans-unit id="7d307501c2df01a8b31b9cd4a788cf286aa4dcfd" translate="yes" xml:space="preserve">
          <source>You can stop recording at any time by calling &lt;a href=&quot;mediarecorder/stop&quot;&gt;&lt;code&gt;MediaRecorder.stop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;mediarecorder/stop&quot;&gt; &lt;code&gt;MediaRecorder.stop()&lt;/code&gt; を&lt;/a&gt;呼び出すことで、いつでも録音を停止できます。</target>
        </trans-unit>
        <trans-unit id="67908b956e0f66e8b6c9102f598ca9479a200dae" translate="yes" xml:space="preserve">
          <source>You can style WebVTT cues by looking for elements which match the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/::cue&quot;&gt;&lt;code&gt;::cue&lt;/code&gt;&lt;/a&gt; pseudo-element.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/::cue&quot;&gt; &lt;code&gt;::cue&lt;/code&gt; &lt;/a&gt;疑似要素に一致する要素を探すことで、WebVTTキューのスタイルを設定できます。</target>
        </trans-unit>
        <trans-unit id="775f7f69de499648afcb3f3e8e910c0b6e90baa2" translate="yes" xml:space="preserve">
          <source>You can style the new button for opening the file picker as you wish.</source>
          <target state="translated">ファイルピッカーを開くための新しいボタンは、お好みのスタイルにすることができます。</target>
        </trans-unit>
        <trans-unit id="7acc977ed13e28dca554f74bf25f0f5670bc83d1" translate="yes" xml:space="preserve">
          <source>You can temporarily (for this shell session) add the directory containing the Bento4 utilities to your path with:</source>
          <target state="translated">このシェルセッションでは、Bento4 ユーティリティを含むディレクトリを一時的にパスに追加することができます。</target>
        </trans-unit>
        <trans-unit id="b3084d9c3a52db34ad12fd98b68fe423515071a5" translate="yes" xml:space="preserve">
          <source>You can test for sessionStorage instead by calling &lt;code&gt;storageAvailable('sessionStorage')&lt;/code&gt;.</source>
          <target state="translated">代わりに、 &lt;code&gt;storageAvailable('sessionStorage')&lt;/code&gt; を呼び出して、sessionStorageをテストできます。</target>
        </trans-unit>
        <trans-unit id="29473220d0f29fc2f79dcbfb754c2567adbfa0f3" translate="yes" xml:space="preserve">
          <source>You can test for the existence of the window object reference which is the returned value in case of success of the window.open() call and then verify that &lt;var&gt;windowObjectReference&lt;/var&gt;.closed return value is &lt;var&gt;false&lt;/var&gt;.</source>
          <target state="translated">window.open（）呼び出しが成功した場合の戻り値であるウィンドウオブジェクト参照の存在をテストしてから、 &lt;var&gt;windowObjectReference&lt;/var&gt; .closed戻り値が &lt;var&gt;false&lt;/var&gt; であることを確認できます。</target>
        </trans-unit>
        <trans-unit id="3062289a7ed7fba033bb684074325912a201ebbb" translate="yes" xml:space="preserve">
          <source>You can test whether e10s is disabled by going to &lt;code&gt;about:support&lt;/code&gt; and looking at the &quot;Multiprocess Windows&quot; entry in the &quot;Application Basics&quot; section. 1/1 means it is enabled, 0/1 means disabled.</source>
          <target state="translated">&lt;code&gt;about:support&lt;/code&gt; にアクセスし、[Application Basics]セクションの[Multiprocess Windows]エントリを確認することで、e10sが無効になっているかどうかをテストできます。1/1は有効、0/1は無効を意味します。</target>
        </trans-unit>
        <trans-unit id="de62559edbdaaade65265f2aa3c8009a39b28a80" translate="yes" xml:space="preserve">
          <source>You can then access the media's individual tracks using either array syntax or functions such as &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt;&lt;code&gt;forEach()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">その後、配列構文または&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach&quot;&gt; &lt;code&gt;forEach()&lt;/code&gt; &lt;/a&gt;などの関数を使用して、メディアの個々のトラックにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="65a18e6a8e2e8b70706675fdb2da4c77e59bc2bf" translate="yes" xml:space="preserve">
          <source>You can then delete it again:</source>
          <target state="translated">その後、再度削除してください。</target>
        </trans-unit>
        <trans-unit id="fa572c3f8b283136020b8697d23e34cae1787b0c" translate="yes" xml:space="preserve">
          <source>You can then get a stringified version of the object by calling &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt;&lt;code&gt;stringify()&lt;/code&gt;&lt;/a&gt; on the returned object. See the &lt;a href=&quot;#Example&quot;&gt;example&lt;/a&gt; below.</source>
          <target state="translated">次に、返されたオブジェクトで&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify&quot;&gt; &lt;code&gt;stringify()&lt;/code&gt; &lt;/a&gt;を呼び出すことにより、オブジェクトの文字列化されたバージョンを取得できます。以下の&lt;a href=&quot;#Example&quot;&gt;例を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="fcd5fac3d10ca04c073970d810c002151cf72783" translate="yes" xml:space="preserve">
          <source>You can try out this example below, and can &lt;a href=&quot;https://mdn.github.io/dom-examples/media/mediaerror/&quot;&gt;see the example in action outside this page here&lt;/a&gt;.</source>
          <target state="translated">以下のこの例を試してみると、&lt;a href=&quot;https://mdn.github.io/dom-examples/media/mediaerror/&quot;&gt;このページの外で実際に動作している例を見る&lt;/a&gt;ことができます。</target>
        </trans-unit>
        <trans-unit id="92c042f02a61a460b01f699f19cc2f73d13efde5" translate="yes" xml:space="preserve">
          <source>You can try this example here. When you click the &quot;Dial&quot; button, you should see a series of logging messages output, then the dialing will begin. If your browser plays the tones audibly as part of its user experience, you should hear them as they're transmitted.</source>
          <target state="translated">ここでは、この例を試してみてください。ダイヤル」ボタンをクリックすると、一連のログメッセージが出力され、ダイヤルが始まります。ブラウザがユーザーエクスペリエンスの一部としてトーンを音声で再生している場合は、送信されたトーンが聞こえてくるはずです。</target>
        </trans-unit>
        <trans-unit id="2d9cfaca589346ac80f1d7b886fa1a6ab5c22072" translate="yes" xml:space="preserve">
          <source>You can use &lt;a href=&quot;cancelable&quot;&gt;&lt;code&gt;Event.cancelable&lt;/code&gt;&lt;/a&gt; to check if the event is cancelable. Calling &lt;code&gt;preventDefault()&lt;/code&gt; for a non-cancelable event has no effect.</source>
          <target state="translated">&lt;a href=&quot;cancelable&quot;&gt; &lt;code&gt;Event.cancelable&lt;/code&gt; &lt;/a&gt;を使用して、イベントがキャンセル可能かどうかを確認できます。キャンセルできないイベント &lt;code&gt;preventDefault()&lt;/code&gt; を呼び出しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="4e36eee7f271596d9640d1ce35ac05f02223fb17" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;em&gt;&lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;.baseURI&lt;/code&gt; to obtain the base URL of a document. Note that obtaining the base URL for a document may return different URLs over time if the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt;&lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt;&lt;/a&gt; tags or the document's location change.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;&lt;a href=&quot;../document&quot;&gt;&lt;code&gt;document&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;.baseURI&lt;/code&gt; を使用して、&lt;em&gt;ドキュメント&lt;/em&gt;のベースURLを取得できます。&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base&quot;&gt; &lt;code&gt;&amp;lt;base&amp;gt;&lt;/code&gt; &lt;/a&gt;タグまたはドキュメントの場所が変更された場合、ドキュメントのベースURLを取得すると、時間の経過とともに異なるURLが返される可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="7b0b4b438dbc30171aa9ad5c66f9046a4a29e88b" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;&lt;em&gt;&lt;a href=&quot;../element&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;.baseURI&lt;/code&gt; to obtain the base URL of an element.</source>
          <target state="translated">&lt;code&gt;&lt;em&gt;&lt;a href=&quot;../element&quot;&gt;&lt;code&gt;element&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;.baseURI&lt;/code&gt; を使用して、&lt;em&gt;要素&lt;/em&gt;のベースURLを取得できます。</target>
        </trans-unit>
        <trans-unit id="8fcdd685fdd9e94b909ac7afabd6c53d4f76879a" translate="yes" xml:space="preserve">
          <source>You can use &lt;code&gt;ctx.scale(-1, 1)&lt;/code&gt; to flip the context horizontally and &lt;code&gt;ctx.scale(1, -1)&lt;/code&gt; to flip it vertically.</source>
          <target state="translated">&lt;code&gt;ctx.scale(-1, 1)&lt;/code&gt; を使用してコンテキストを水平方向に反転し、 &lt;code&gt;ctx.scale(1, -1)&lt;/code&gt; を使用してコンテキストを垂直方向に反転できます。</target>
        </trans-unit>
        <trans-unit id="bd99e14e2102533c5673aa42a98c96a834d21cb4" translate="yes" xml:space="preserve">
          <source>You can use DOM trees to model data which isn't well-suited for RDF (or perhaps you just don't like RDF). Another application is that, since XUL is XML, the UI of your application can be dynamically manipulated, downloaded, uploaded, saved, loaded, converted, or transformed quite easily.</source>
          <target state="translated">RDF にはあまり適していない(あるいは RDF が好きではない)データをモデル化するために DOM ツリーを使うことができます。XULはXMLなので、アプリケーションのUIを動的に操作したり、ダウンロードしたり、アップロードしたり、保存したり、ロードしたり、変換したり、変換したりすることが非常に簡単にできます。</target>
        </trans-unit>
        <trans-unit id="a309663237fbdd4503120b1297140ae69a7c8c1c" translate="yes" xml:space="preserve">
          <source>You can use a timeout to prevent hanging your code forever while waiting for a read to occur. This is done by setting the value of the &lt;code&gt;timeout&lt;/code&gt; property on the &lt;code&gt;XMLHttpRequest&lt;/code&gt; object, as shown in the code below:</source>
          <target state="translated">タイムアウトを使用すると、読み取りの発生を待機している間、コードが永久にハングするのを防ぐことができます。これは、以下のコードに示すように、 &lt;code&gt;XMLHttpRequest&lt;/code&gt; オブジェクトの &lt;code&gt;timeout&lt;/code&gt; プロパティの値を設定することによって行われます。</target>
        </trans-unit>
        <trans-unit id="257822e4921829c10892ce8efc8b8e0c6ffb000a" translate="yes" xml:space="preserve">
          <source>You can use another &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt;&lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt;&lt;/a&gt; element as your image source.</source>
          <target state="translated">別の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas&quot;&gt; &lt;code&gt;&amp;lt;canvas&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を画像ソースとして使用できます。</target>
        </trans-unit>
        <trans-unit id="543b7866690306a76c2aa49e2c3c6491dabb459b" translate="yes" xml:space="preserve">
          <source>You can use either JavaScript array notation or the &lt;a href=&quot;../htmlcollection/item&quot;&gt;&lt;code&gt;item()&lt;/code&gt;&lt;/a&gt; method on the returned collection to access the items in the collection. The following are equivalent:</source>
          <target state="translated">返されたコレクションでJavaScript配列表記または&lt;a href=&quot;../htmlcollection/item&quot;&gt; &lt;code&gt;item()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、コレクション内のアイテムにアクセスできます。以下は同等です。</target>
        </trans-unit>
        <trans-unit id="25df6920633777d2da6264014c14973379b09fdb" translate="yes" xml:space="preserve">
          <source>You can use either the &lt;a href=&quot;../htmlcollection/item&quot;&gt;&lt;code&gt;item()&lt;/code&gt;&lt;/a&gt; method on the returned &lt;code&gt;HTMLCollection&lt;/code&gt; or standard array syntax to examine individual elements in the collection. However&lt;u&gt;&lt;strong&gt; the following code will not work&lt;/strong&gt;&lt;/u&gt; as one might expect because &lt;code&gt;&quot;matches&quot; &lt;/code&gt;will change as soon as any &lt;code&gt;&quot;colorbox&quot;&lt;/code&gt; class is removed.</source>
          <target state="translated">返された &lt;code&gt;HTMLCollection&lt;/code&gt; の&lt;a href=&quot;../htmlcollection/item&quot;&gt; &lt;code&gt;item()&lt;/code&gt; &lt;/a&gt;メソッドまたは標準の配列構文を使用して、コレクション内の個々の要素を調べることができます。ただし&lt;u&gt;&lt;strong&gt;、&lt;/strong&gt;&lt;/u&gt; &lt;code&gt;&quot;colorbox&quot;&lt;/code&gt; クラスが削除されるとすぐに &lt;code&gt;&quot;matches&quot; &lt;/code&gt; が変更されるため&lt;u&gt;&lt;strong&gt;、次のコードは&lt;/strong&gt;&lt;/u&gt;期待どおりに&lt;u&gt;&lt;strong&gt;機能&lt;/strong&gt;&lt;/u&gt;しません。&lt;u&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/u&gt;</target>
        </trans-unit>
        <trans-unit id="a565b5dc44c842c6ba6f579ba97ef74bc01a3d58" translate="yes" xml:space="preserve">
          <source>You can use feature detection to check whether they are in a secure context or not by using the &lt;code&gt;isSecureContext&lt;/code&gt; boolean which is exposed on the global scope.</source>
          <target state="translated">機能検出を使用して、グローバルスコープで公開されている &lt;code&gt;isSecureContext&lt;/code&gt; ブール値を使用して、それらが安全なコンテキストにあるかどうかを確認できます。</target>
        </trans-unit>
        <trans-unit id="b8733ba4212efdb43559fc019db342cc17de30ac" translate="yes" xml:space="preserve">
          <source>You can use most standard JavaScript features inside a web worker, including:</source>
          <target state="translated">ウェブワーカーの内部では、以下のような標準的な JavaScript の機能をほとんど使用することができます。</target>
        </trans-unit>
        <trans-unit id="0b4178cadd1d34a1e056b3a5ca70677516a092af" translate="yes" xml:space="preserve">
          <source>You can use negative numbers as parameters for this function. This function makes a relative move while &lt;a href=&quot;moveto&quot;&gt;&lt;code&gt;window.moveTo&lt;/code&gt;&lt;/a&gt; makes an absolute move.</source>
          <target state="translated">この関数のパラメーターとして負の数を使用できます。この関数は相対移動を行い、&lt;a href=&quot;moveto&quot;&gt; &lt;code&gt;window.moveTo&lt;/code&gt; &lt;/a&gt;は絶対移動を行います。</target>
        </trans-unit>
        <trans-unit id="30ab34f63035dce9b68b7159732f17447b210af9" translate="yes" xml:space="preserve">
          <source>You can use nested groups to help organize your output by visually associating related messages. To create a new nested block, call &lt;code&gt;console.group()&lt;/code&gt;. The &lt;code&gt;console.groupCollapsed()&lt;/code&gt; method is similar, but the new block is collapsed and requires clicking a disclosure button to read it.</source>
          <target state="translated">ネストされたグループを使用して、関連するメッセージを視覚的に関連付けることにより、出力を整理することができます。新しいネストされたブロックを作成するには、 &lt;code&gt;console.group()&lt;/code&gt; を呼び出します。 &lt;code&gt;console.groupCollapsed()&lt;/code&gt; メソッドは似ていますが、新しいブロックが折りたたまれて、それを読むために開示ボタンをクリックして必要になります。</target>
        </trans-unit>
        <trans-unit id="0f01138e0d2b694619984d4f73b54893c73accb6" translate="yes" xml:space="preserve">
          <source>You can use nested groups to help organize your output by visually combining related material. To create a new nested block, call &lt;code&gt;console.group()&lt;/code&gt;. The &lt;code&gt;console.groupCollapsed()&lt;/code&gt; method is similar but creates the new block collapsed, requiring the use of a disclosure button to open it for reading.</source>
          <target state="translated">ネストされたグループを使用して、関連資料を視覚的に組み合わせることにより、出力を整理することができます。新しいネストされたブロックを作成するには、 &lt;code&gt;console.group()&lt;/code&gt; を呼び出します。 &lt;code&gt;console.groupCollapsed()&lt;/code&gt; メソッドは、類似しているが、読み出しのためにそれを開くために、開示ボタンの使用を必要とする、崩壊新しいブロックを作成します。</target>
        </trans-unit>
        <trans-unit id="e8a5199cea5493ea39a1874956066691485caca6" translate="yes" xml:space="preserve">
          <source>You can use several context attributes when creating your rendering context, for example:</source>
          <target state="translated">レンダリングコンテキストを作成する際には、いくつかのコンテキスト属性を使用することができます。</target>
        </trans-unit>
        <trans-unit id="809a748850108bb617cef1853b6645e87f28e6f1" translate="yes" xml:space="preserve">
          <source>You can use the &lt;a href=&quot;iscontenteditable&quot;&gt;&lt;code&gt;HTMLElement.isContentEditable&lt;/code&gt;&lt;/a&gt; property to test the computed &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt;&lt;code&gt;Boolean&lt;/code&gt;&lt;/a&gt; value of this property.</source>
          <target state="translated">&lt;a href=&quot;iscontenteditable&quot;&gt; &lt;code&gt;HTMLElement.isContentEditable&lt;/code&gt; &lt;/a&gt;プロパティを使用して、このプロパティの計算された&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Boolean&quot;&gt; &lt;code&gt;Boolean&lt;/code&gt; &lt;/a&gt;値をテストできます。</target>
        </trans-unit>
        <trans-unit id="ff38389403c37e51173516d7ad722225d1a89a16" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;%c&lt;/code&gt; directive to apply a CSS style to console output:</source>
          <target state="translated">&lt;code&gt;%c&lt;/code&gt; ディレクティブを使用して、CSSスタイルをコンソール出力に適用できます。</target>
        </trans-unit>
        <trans-unit id="0bdf49ab8a40066f28053c6fc7f4384df9618d39" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;go()&lt;/code&gt; method to load a specific page from session history, identified by its relative position to the current page (with the current page being, of course, relative index 0).</source>
          <target state="translated">&lt;code&gt;go()&lt;/code&gt; メソッドを使用して、セッション履歴から特定のページをロードできます。特定のページは、現在のページに対する相対位置（現在のページはもちろん、相対インデックス0）で識別されます。</target>
        </trans-unit>
        <trans-unit id="971134d7c7e84f428685780aecab20b16a1bdb34" translate="yes" xml:space="preserve">
          <source>You can use the Navigation Timing API to gather performance data on the client side which you can then transmit to a server using &lt;a href=&quot;xmlhttprequest&quot;&gt;&lt;code&gt;XMLHttpRequest&lt;/code&gt;&lt;/a&gt; or other techniques. Also, the API lets you measure data that was previously difficult to obtain, such as the amount of time needed to unload the previous page, how long domain lookups take, the total time spent executing the window's &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; handler, and so forth.</source>
          <target state="translated">Navigation Timing APIを使用してクライアント側のパフォーマンスデータを収集し、&lt;a href=&quot;xmlhttprequest&quot;&gt; &lt;code&gt;XMLHttpRequest&lt;/code&gt; &lt;/a&gt;またはその他の手法を使用してサーバーに送信できます。また、APIを使用すると、前のページのアンロードに必要な時間、ドメインルックアップにかかる時間、ウィンドウの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/load&quot;&gt;load&lt;/a&gt;&lt;/code&gt; ハンドラーの実行に費やされた合計時間など、以前は取得が困難であったデータを測定できます。</target>
        </trans-unit>
        <trans-unit id="dcfa5df32c1dbfe79110e972c9b9f5a39f745a7a" translate="yes" xml:space="preserve">
          <source>You can use the value &lt;code&gt;none&lt;/code&gt; to indicate that no drop is allowed at this location, although it is preferred not to cancel the event in this case.</source>
          <target state="translated">値 &lt;code&gt;none&lt;/code&gt; を使用して、この場所でのドロップが許可されていないことを示すことができますが、この場合はイベントをキャンセルしないことが推奨されます。</target>
        </trans-unit>
        <trans-unit id="e07cbcaaa12c95d93b90eb32478e8be36e40684f" translate="yes" xml:space="preserve">
          <source>You can use the&lt;a href=&quot;../../canvasrenderingcontext2d/putimagedata&quot;&gt; putImageData() &lt;/a&gt;method to paint pixel data into a context:</source>
          <target state="translated">&lt;a href=&quot;../../canvasrenderingcontext2d/putimagedata&quot;&gt;putImageData（）&lt;/a&gt;メソッドを使用して、ピクセルデータをコンテキストにペイントできます。</target>
        </trans-unit>
        <trans-unit id="7a9d1c9f3e57ffd776a31f603481ddeb7e81cdc9" translate="yes" xml:space="preserve">
          <source>You can use this method to encode data which may otherwise cause communication problems, transmit it, then use the &lt;code&gt;&lt;a href=&quot;atob&quot;&gt;&lt;code&gt;atob()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method to decode the data again. For example, you can encode control characters such as ASCII values 0 through 31.</source>
          <target state="translated">このメソッドを使用して、通信の問題を引き起こす可能性のあるデータをエンコードして送信し、 &lt;code&gt;&lt;a href=&quot;atob&quot;&gt;&lt;code&gt;atob()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; メソッドを使用してデータを再度デコードできます。たとえば、ASCII値0〜31などの制御文字をエンコードできます。</target>
        </trans-unit>
        <trans-unit id="eda10e850fd3b7a5c9894e371e19b68a1c99060c" translate="yes" xml:space="preserve">
          <source>You can use this property to detect mouse events that represent an action that may already have been handled by touch event handlers. This doesn't necessarily mean the device is a touch screen. For example, stylus and mouse devices typically generate touch events on mobile browsers.</source>
          <target state="translated">このプロパティを使用して、タッチ イベント ハンドラによってすでに処理されている可能性のあるアクションを表すマウス イベントを検出することができます。これは必ずしもデバイスがタッチスクリーンであることを意味しません。たとえば、スタイラスとマウスのデバイスは、一般的にモバイル ブラウザ上でタッチ イベントを生成します。</target>
        </trans-unit>
        <trans-unit id="8efadf45d9335e41101baf388eaa5aac30afb393" translate="yes" xml:space="preserve">
          <source>You can use this property to get a stream out of the audio graph and feed it into another construct, such as a &lt;a href=&quot;../mediastream_recording_api&quot;&gt;Media Recorder&lt;/a&gt;.</source>
          <target state="translated">このプロパティを使用して、オーディオグラフからストリームを取得し、それを&lt;a href=&quot;../mediastream_recording_api&quot;&gt;Media Recorder&lt;/a&gt;などの別の構成にフィードできます。</target>
        </trans-unit>
        <trans-unit id="dbdf6a9a507178d1d90a9cd26c19abc6d05c3b0d" translate="yes" xml:space="preserve">
          <source>You can use this technique in association with mouse events in order to dynamically change images (gray-scale vs. color in this example):</source>
          <target state="translated">このテクニックをマウスイベントに関連づけて使用することで、画像を動的に変更することができます(この例ではグレースケールとカラーの比較)。</target>
        </trans-unit>
        <trans-unit id="acfaa72a67fb3a284a3b23d5bc0b421f0753a02f" translate="yes" xml:space="preserve">
          <source>You can use this test page or create a similar one to test the DOM interfaces you are interested in and see how they work on the browser platform. You can update the contents of the &lt;code&gt;test()&lt;/code&gt; function as needed, create more buttons, or add elements as necessary.</source>
          <target state="translated">このテストページを使用するか、同様のページを作成して、興味のあるDOMインターフェースをテストし、ブラウザプラットフォームでの動作を確認できます。必要に応じて &lt;code&gt;test()&lt;/code&gt; 関数の内容を更新したり、ボタンを追加したり、必要に応じて要素を追加したりできます。</target>
        </trans-unit>
        <trans-unit id="a5d4edc5694c860328077dbec9eec2ffbf7bab43" translate="yes" xml:space="preserve">
          <source>You can work around &lt;code&gt;addEventListener()&lt;/code&gt;, &lt;code&gt;removeEventListener()&lt;/code&gt;, &lt;a href=&quot;../event/preventdefault&quot;&gt;&lt;code&gt;Event.preventDefault()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../event/stoppropagation&quot;&gt;&lt;code&gt;Event.stopPropagation()&lt;/code&gt;&lt;/a&gt; not being supported by Internet Explorer 8 by using the following code at the beginning of your script. The code supports the use of &lt;code&gt;handleEvent()&lt;/code&gt; and also the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; event.</source>
          <target state="translated">あなたの周りに働くことができる &lt;code&gt;addEventListener()&lt;/code&gt; 、 &lt;code&gt;removeEventListener()&lt;/code&gt; 、&lt;a href=&quot;../event/preventdefault&quot;&gt; &lt;code&gt;Event.preventDefault()&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;../event/stoppropagation&quot;&gt; &lt;code&gt;Event.stopPropagation()&lt;/code&gt; &lt;/a&gt;スクリプトの先頭に次のコードを使用してInternet Explorer 8でサポートされていません。このコードは、 &lt;code&gt;handleEvent()&lt;/code&gt; および &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/DOMContentLoaded&quot;&gt;DOMContentLoaded&lt;/a&gt;&lt;/code&gt; イベントの使用をサポートしています。</target>
        </trans-unit>
        <trans-unit id="3f26b704bae8366ceb7916a8174feb521120f830" translate="yes" xml:space="preserve">
          <source>You can't correlate these local candidates with matching remote candidates. To find the best match found so far, call &lt;a href=&quot;getselectedcandidatepair&quot;&gt;&lt;code&gt;RTCIceTransport.getSelectedCandidatePair()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">これらのローカル候補者を一致するリモート候補者と関連付けることはできません。これまでに見つかった最適な一致を見つけるには、&lt;a href=&quot;getselectedcandidatepair&quot;&gt; &lt;code&gt;RTCIceTransport.getSelectedCandidatePair()&lt;/code&gt; を&lt;/a&gt;呼び出します。</target>
        </trans-unit>
        <trans-unit id="3c754c4bf7577965dd233a7b0562c54a6c46d142" translate="yes" xml:space="preserve">
          <source>You can't create an &lt;code&gt;AudioScheduledSourceNode&lt;/code&gt; object directly. Instead, use the interface which extends it, such as &lt;a href=&quot;audiobuffersourcenode&quot;&gt;&lt;code&gt;AudioBufferSourceNode&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;oscillatornode&quot;&gt;&lt;code&gt;OscillatorNode&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;constantsourcenode&quot;&gt;&lt;code&gt;ConstantSourceNode&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;AudioScheduledSourceNode&lt;/code&gt; オブジェクトを直接作成することはできません。代わりに、&lt;a href=&quot;audiobuffersourcenode&quot;&gt; &lt;code&gt;AudioBufferSourceNode&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;oscillatornode&quot;&gt; &lt;code&gt;OscillatorNode&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;constantsourcenode&quot;&gt; &lt;code&gt;ConstantSourceNode&lt;/code&gt; &lt;/a&gt;など、それを拡張するインターフェイスを使用します。</target>
        </trans-unit>
        <trans-unit id="3928639855d290b773143fd4a7c7a5d3ee8ec507" translate="yes" xml:space="preserve">
          <source>You can't move a file such that it replaces an existing directory, and you can't move a directory such that it replaces an existing file. However, a file can replace a file and a directory can replace a directory.</source>
          <target state="translated">既存のディレクトリを置き換えるようなファイルの移動はできませんし、既存のファイルを置き換えるようなディレクトリの移動もできません。ただし、ファイルはファイルを置き換えることができ、ディレクトリはディレクトリを置き換えることができます。</target>
        </trans-unit>
        <trans-unit id="8f79a8b07f2f84fcc2f35732f05957b0df86278c" translate="yes" xml:space="preserve">
          <source>You can't move a window or tab that wasn&amp;rsquo;t created by &lt;a href=&quot;open&quot;&gt;&lt;code&gt;window.open&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;open&quot;&gt; &lt;code&gt;window.open&lt;/code&gt; で&lt;/a&gt;作成されていないウィンドウまたはタブは移動できません。</target>
        </trans-unit>
        <trans-unit id="a028d93c666f4405a5268dc6d38af45721624415" translate="yes" xml:space="preserve">
          <source>You can't move a window or tab that wasn&amp;rsquo;t created by window.open.</source>
          <target state="translated">window.openで作成されていないウィンドウまたはタブは移動できません。</target>
        </trans-unit>
        <trans-unit id="fab08ecdeba62796a61bc4e4952f5180157c53cf" translate="yes" xml:space="preserve">
          <source>You can't move a window or tab when it&amp;rsquo;s in a window with more than one tab.</source>
          <target state="translated">複数のタブがあるウィンドウ内では、ウィンドウまたはタブを移動できません。</target>
        </trans-unit>
        <trans-unit id="d9c65dcc00dfae6038b03fcbe6582253752b01cc" translate="yes" xml:space="preserve">
          <source>You can, if needed, restrict the set of permitted video sources to a specific device or set of devices. To do so, call &lt;a href=&quot;../mediadevices/enumeratedevices&quot;&gt;&lt;code&gt;navigator.mediaDevices.enumerateDevices()&lt;/code&gt;&lt;/a&gt;. When the promise is fulfilled with an array of &lt;a href=&quot;../mediadeviceinfo&quot;&gt;&lt;code&gt;MediaDeviceInfo&lt;/code&gt;&lt;/a&gt; objects describing the available devices, find the ones that you want to allow and specify the corresponding &lt;a href=&quot;../mediatrackconstraints/deviceid&quot;&gt;&lt;code&gt;deviceId&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;deviceId&lt;/code&gt;s in the &lt;a href=&quot;../mediatrackconstraints&quot;&gt;&lt;code&gt;MediaTrackConstraints&lt;/code&gt;&lt;/a&gt; object passed into &lt;a href=&quot;../mediadevices/getusermedia&quot;&gt;&lt;code&gt;getUserMedia()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">必要に応じて、許可されたビデオソースのセットを特定のデバイスまたはデバイスのセットに制限できます。これを行うには、&lt;a href=&quot;../mediadevices/enumeratedevices&quot;&gt; &lt;code&gt;navigator.mediaDevices.enumerateDevices()&lt;/code&gt; を&lt;/a&gt;呼び出します。使用可能なデバイスを説明する&lt;a href=&quot;../mediadeviceinfo&quot;&gt; &lt;code&gt;MediaDeviceInfo&lt;/code&gt; &lt;/a&gt;オブジェクトの配列でpromiseが実行されたら、許可するものを見つけ、&lt;a href=&quot;../mediadevices/getusermedia&quot;&gt; &lt;code&gt;getUserMedia()&lt;/code&gt; に&lt;/a&gt;渡される&lt;a href=&quot;../mediatrackconstraints&quot;&gt; &lt;code&gt;MediaTrackConstraints&lt;/code&gt; &lt;/a&gt;オブジェクトで対応する&lt;a href=&quot;../mediatrackconstraints/deviceid&quot;&gt; &lt;code&gt;deviceId&lt;/code&gt; &lt;/a&gt;または &lt;code&gt;deviceId&lt;/code&gt; を指定します。</target>
        </trans-unit>
        <trans-unit id="f864322870086e34fa08b866b13c26a0892622a6" translate="yes" xml:space="preserve">
          <source>You cannot change the identity information for a connection once it's already been set.</source>
          <target state="translated">すでに設定されている接続の ID 情報を変更することはできません。</target>
        </trans-unit>
        <trans-unit id="33e2afa3c6d7d13c81e48aca9fd9aebea4227d60" translate="yes" xml:space="preserve">
          <source>You cannot change the value of &lt;code&gt;responseType&lt;/code&gt; in a synchronous &lt;code&gt;XMLHttpRequest&lt;/code&gt; except when the request belongs to a &lt;a href=&quot;../worker&quot;&gt;&lt;code&gt;Worker&lt;/code&gt;&lt;/a&gt;. This restriction is designed in part to help ensure that synchronous operations aren't used for large transactions that block the browser's main thread, thereby bogging down the user experience.</source>
          <target state="translated">リクエストが&lt;a href=&quot;../worker&quot;&gt; &lt;code&gt;Worker&lt;/code&gt; に&lt;/a&gt;属している場合を除いて、同期 &lt;code&gt;XMLHttpRequest&lt;/code&gt; の &lt;code&gt;responseType&lt;/code&gt; の値を変更することはできません。この制限は、ブラウザのメインスレッドをブロックする大きなトランザクションで同期操作が使用されないようにして、ユーザーエクスペリエンスを低下させることを目的としています。</target>
        </trans-unit>
        <trans-unit id="2f8ffbd0c778f55783eeb01f521636990601955a" translate="yes" xml:space="preserve">
          <source>You cannot force this. Users with Mozilla-based browsers have absolute control over window functionalities like resizability, scrollability and toolbars presence via user preferences in &lt;code&gt;about:config&lt;/code&gt;. Since your users are the ones who are supposed to use such windows (and not you, being the web author), the best is to avoid interfering with their habits and preferences. We recommend to always set the resizability and scrollbars presence (if needed) to yes to insure accessibility to content and usability of windows. This is in the best interests of both the web author and the users.</source>
          <target state="translated">これを強制することはできません。 Mozillaベースのブラウザーを使用するユーザーは、 &lt;code&gt;about:config&lt;/code&gt; のユーザー設定を介して、サイズ変更可能性、スクロール可能性、ツールバーの存在などのウィンドウ機能を完全に制御できます。ユーザーはそのようなウィンドウを使用することになっている（そしてあなたではなく、Web作成者である）ユーザーなので、最善の方法はユーザーの習慣や好みに干渉しないことです。コンテンツへのアクセシビリティとウィンドウの使いやすさを保証するために、サイズ変更可能性とスクロールバーの存在（必要な場合）を常にyesに設定することをお勧めします。これは、Web作成者とユーザーの両方にとって最善の利益になります。</target>
        </trans-unit>
        <trans-unit id="290aea76f30db2b0cfbdf01c08ffcbe580701288" translate="yes" xml:space="preserve">
          <source>You cannot return &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt; objects of &lt;a href=&quot;../response/type&quot;&gt;&lt;code&gt;type&lt;/code&gt;&lt;/a&gt; &quot;&lt;code&gt;cors&lt;/code&gt;&quot; if the &lt;a href=&quot;request&quot;&gt;&lt;code&gt;fetchEvent.request&lt;/code&gt;&lt;/a&gt; object's &lt;a href=&quot;../request/mode&quot;&gt;&lt;code&gt;mode&lt;/code&gt;&lt;/a&gt; is &quot;&lt;code&gt;same-origin&lt;/code&gt;&quot;.</source>
          <target state="translated">あなたは返すことはできません&lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; &lt;/a&gt;のオブジェクト&lt;a href=&quot;../response/type&quot;&gt; &lt;code&gt;type&lt;/code&gt; &lt;/a&gt;「 &lt;code&gt;cors&lt;/code&gt; 場合は」&lt;a href=&quot;request&quot;&gt; &lt;code&gt;fetchEvent.request&lt;/code&gt; &lt;/a&gt;オブジェクトの&lt;a href=&quot;../request/mode&quot;&gt; &lt;code&gt;mode&lt;/code&gt; &lt;/a&gt;「ある &lt;code&gt;same-origin&lt;/code&gt; 」。</target>
        </trans-unit>
        <trans-unit id="cd318e61d039afb257368947e5349aab5e8b117b" translate="yes" xml:space="preserve">
          <source>You cannot. All browser manufacturers try to make the opening of new secondary windows noticed by users and noticeable by users to avoid confusion, to avoid disorienting users.</source>
          <target state="translated">できません。すべてのブラウザメーカーは、ユーザーの混乱を避けるために、ユーザーを混乱させないように、新しいセカンダリウィンドウの開き方をユーザーに気づかれ、目立つようにしようとしています。</target>
        </trans-unit>
        <trans-unit id="1976542e3239f3f3f836f2424b98f3e30bf61245" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;, then retrieve it using &lt;code&gt;get()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt;を使用してこれにヘッダーを追加し、次に &lt;code&gt;get()&lt;/code&gt; を使用してそれを取得できます。</target>
        </trans-unit>
        <trans-unit id="bfa1369ce7f6a4d1d7d6934fd662abc47a141980" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;, then retrieve it using &lt;code&gt;getAll()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt;を使用してこれにヘッダーを追加し、次に &lt;code&gt;getAll()&lt;/code&gt; を使用してそれを取得できます。</target>
        </trans-unit>
        <trans-unit id="34d3700db6ffe6a5b0ece2021cfa47c558ca49ac" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;, then set a new value for this header using &lt;code&gt;set()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt;を使用してこれにヘッダーを追加し、次に &lt;code&gt;set()&lt;/code&gt; を使用してこのヘッダーに新しい値を設定できます。</target>
        </trans-unit>
        <trans-unit id="6d4abf0d49a53a26f7f0cd248f2404c003cbb302" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;, then test for the existence of it using &lt;code&gt;has()&lt;/code&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt;を使用してこれにヘッダーを追加し、 &lt;code&gt;has()&lt;/code&gt; を使用してその存在をテストできます。</target>
        </trans-unit>
        <trans-unit id="9fe05cf9b5213e6dc7f7ef17bacba810fb4caae5" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt;を使用して、これにヘッダーを追加できます。</target>
        </trans-unit>
        <trans-unit id="382369ad20f21c339c850823c5348f87dcfbe345" translate="yes" xml:space="preserve">
          <source>You could add a header to this using &lt;code&gt;append()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;append()&lt;/code&gt; を使用してこれにヘッダーを追加できます。</target>
        </trans-unit>
        <trans-unit id="52d5ad37abf214011cbef57b259bdc04069d7eb3" translate="yes" xml:space="preserve">
          <source>You could add a key/value pair to this using &lt;a href=&quot;append&quot;&gt;&lt;code&gt;FormData.append&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;append&quot;&gt; &lt;code&gt;FormData.append&lt;/code&gt; &lt;/a&gt;を使用して、これにキーと値のペアを追加できます。</target>
        </trans-unit>
        <trans-unit id="9d91fa91b099f3438c9bb9f21466a5ef185ccb3b" translate="yes" xml:space="preserve">
          <source>You could always use some feature detection to determine which method is supported on &lt;code&gt;types&lt;/code&gt;, and run code as appropriate.</source>
          <target state="translated">常に機能検出を使用して、 &lt;code&gt;types&lt;/code&gt; でサポートされているメソッドを判別し、必要に応じてコードを実行できます。</target>
        </trans-unit>
        <trans-unit id="72bd93d15a45323826dd72c65c10d03a01e571f0" translate="yes" xml:space="preserve">
          <source>You could even have &lt;code&gt;checkAllValues()&lt;/code&gt; be a synchronous function, although that may have performance implications you don't want to deal with:</source>
          <target state="translated">&lt;code&gt;checkAllValues()&lt;/code&gt; を同期関数にすることもできますが、処理したくないパフォーマンスへの影響がある場合があります。</target>
        </trans-unit>
        <trans-unit id="1a829a204ac832521ba9e630d01de3934b5c8e48" translate="yes" xml:space="preserve">
          <source>You could stop messages being sent at any time using</source>
          <target state="translated">を使用して、いつでもメッセージの送信を停止することができます。</target>
        </trans-unit>
        <trans-unit id="637130187fe910bd4be7289513beab6ee20459e3" translate="yes" xml:space="preserve">
          <source>You could then fetch this api request by passing the &lt;code&gt;Request&lt;/code&gt; object in as a parameter to a &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, for example and get the response:</source>
          <target state="translated">次に、たとえば、 &lt;code&gt;Request&lt;/code&gt; オブジェクトをパラメーターとして&lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt; &lt;/a&gt;呼び出しに渡してこのAPIリクエストをフェッチし、応答を取得します。</target>
        </trans-unit>
        <trans-unit id="578b9b61213b49e7e7d65be234b56fac7a7851bd" translate="yes" xml:space="preserve">
          <source>You could then fetch this request by passing the &lt;code&gt;Request&lt;/code&gt; object in as a parameter to a &lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt;&lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt;&lt;/a&gt; call, for example:</source>
          <target state="translated">次に、次のように、 &lt;code&gt;Request&lt;/code&gt; オブジェクトをパラメーターとして&lt;a href=&quot;windoworworkerglobalscope/fetch&quot;&gt; &lt;code&gt;WindowOrWorkerGlobalScope.fetch()&lt;/code&gt; &lt;/a&gt;呼び出しに渡すことで、この要求をフェッチできます。</target>
        </trans-unit>
        <trans-unit id="13a7ca2da6db8dcbe69e297f905f3888cff77497" translate="yes" xml:space="preserve">
          <source>You could use this location object to return more information about the document's location, as you might do with a normal &lt;a href=&quot;../location&quot;&gt;&lt;code&gt;Location&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">通常の&lt;a href=&quot;../location&quot;&gt; &lt;code&gt;Location&lt;/code&gt; &lt;/a&gt;オブジェクトの場合と同様に、この場所オブジェクトを使用して、ドキュメントの場所に関する詳細情報を返すことができます。</target>
        </trans-unit>
        <trans-unit id="8b8fd68a431511cb127199fdaf5631bbcc271e98" translate="yes" xml:space="preserve">
          <source>You could use this navigator object to return more information about the runtime envinronment, as you might do with a normal &lt;a href=&quot;../navigator&quot;&gt;&lt;code&gt;Navigator&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このナビゲーターオブジェクトを使用すると、通常の&lt;a href=&quot;../navigator&quot;&gt; &lt;code&gt;Navigator&lt;/code&gt; &lt;/a&gt;オブジェクトの場合と同様に、ランタイム環境に関する詳細情報を返すことができます。</target>
        </trans-unit>
        <trans-unit id="3ef769b2cba0e0feb4d258e6ae78cb3a79d4b1d8" translate="yes" xml:space="preserve">
          <source>You could use this performance object to return performance data, as you might do with a normal &lt;a href=&quot;../performance&quot;&gt;&lt;code&gt;Performance&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">このパフォーマンスオブジェクトを使用して、通常の&lt;a href=&quot;../performance&quot;&gt; &lt;code&gt;Performance&lt;/code&gt; &lt;/a&gt;オブジェクトと同じようにパフォーマンスデータを返すことができます。</target>
        </trans-unit>
        <trans-unit id="95e88c3c5e4ade509d2c63cc97f2821ec7f84f9b" translate="yes" xml:space="preserve">
          <source>You could use this to add a description to the file</source>
          <target state="translated">これを使って、ファイルに説明を追加することができます。</target>
        </trans-unit>
        <trans-unit id="84ebb69dfbf275952f5c743b1e3ba46c86fc48e9" translate="yes" xml:space="preserve">
          <source>You decide you don&amp;rsquo;t like the middle sentence, so you remove it:</source>
          <target state="translated">途中の文が気に入らないと判断したため、削除します。</target>
        </trans-unit>
        <trans-unit id="0ef178c62701c0e3e776ab2d94fdb70ce249643b" translate="yes" xml:space="preserve">
          <source>You don't create &lt;a href=&quot;rtcsctptransport&quot;&gt;&lt;code&gt;RTCSctpTransport&lt;/code&gt;&lt;/a&gt; objects yourself; instead, you get access to the &lt;code&gt;RTCSctpTransport&lt;/code&gt; for a given &lt;code&gt;RTCPeerConnection&lt;/code&gt; through its &lt;strong&gt;&lt;a href=&quot;rtcpeerconnection/sctp&quot;&gt;&lt;code&gt;sctp&lt;/code&gt;&lt;/a&gt;&lt;/strong&gt; property.</source>
          <target state="translated">&lt;a href=&quot;rtcsctptransport&quot;&gt; &lt;code&gt;RTCSctpTransport&lt;/code&gt; &lt;/a&gt;オブジェクトを自分で作成することはありません。代わりに、&lt;strong&gt;&lt;a href=&quot;rtcpeerconnection/sctp&quot;&gt; &lt;code&gt;sctp&lt;/code&gt; &lt;/a&gt;&lt;/strong&gt;プロパティを介して、特定の &lt;code&gt;RTCPeerConnection&lt;/code&gt; の &lt;code&gt;RTCSctpTransport&lt;/code&gt; にアクセスできます。&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ee579a632c8cb462cef490a111e05fef99d81cef" translate="yes" xml:space="preserve">
          <source>You don't have to change the URL if you don't want to. In contrast, setting &lt;code&gt;window.location = &quot;#foo&quot;;&lt;/code&gt; creates a new history entry only if the current hash isn't &lt;code&gt;#foo&lt;/code&gt;.</source>
          <target state="translated">必要がなければ、URLを変更する必要はありません。対照的に、 &lt;code&gt;window.location = &quot;#foo&quot;;&lt;/code&gt; 設定します。現在のハッシュが &lt;code&gt;#foo&lt;/code&gt; ではない場合にのみ、新しい履歴エントリを作成します。</target>
        </trans-unit>
        <trans-unit id="4bb1591107d014c7dcf77b559dfe94f0d348a580" translate="yes" xml:space="preserve">
          <source>You don't have to do anything special to begin using the DOM. Different browsers have different implementations of the DOM, and these implementations exhibit varying degrees of conformance to the actual DOM standard (a subject we try to avoid in this documentation), but every web browser uses some document object model to make web pages accessible via JavaScript.</source>
          <target state="translated">DOM を使い始めるのに特別なことをする必要はありません。ブラウザによって DOM の実装が異なり、これらの実装は実際の DOM 標準に準拠しているかどうかは様々ですが (このドキュメントでは避けるようにしています)、すべてのウェブブラウザは JavaScript でウェブページにアクセスできるようにするために、何らかのドキュメントオブジェクトモデルを使用しています。</target>
        </trans-unit>
        <trans-unit id="0c7e9e4378e662b55a7c04a3c7a8430bd007cdf4" translate="yes" xml:space="preserve">
          <source>You don't have to use just unnamed messages or typed events; you can mix them together in a single event stream.</source>
          <target state="translated">名前のないメッセージやタイプされたイベントだけを使う必要はありません。</target>
        </trans-unit>
        <trans-unit id="27a80e9ee1978c0efe558318760987b08343fb8f" translate="yes" xml:space="preserve">
          <source>You don't need to watch for this event unless you have specific reasons to want to closely monitor the state of ICE gathering.</source>
          <target state="translated">ICEが集まっている状態を綿密に監視したいという具体的な理由がない限り、このイベントを見守る必要はありません。</target>
        </trans-unit>
        <trans-unit id="9daec27e1a7e06061360c41bfff810c71034501e" translate="yes" xml:space="preserve">
          <source>You don't need to worry about the value of &lt;code&gt;passive&lt;/code&gt; for the basic &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/scroll&quot;&gt;scroll&lt;/a&gt;&lt;/code&gt; event. Since it can't be canceled, event listeners can't block page rendering anyway.</source>
          <target state="translated">基本的な &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/scroll&quot;&gt;scroll&lt;/a&gt;&lt;/code&gt; イベントの &lt;code&gt;passive&lt;/code&gt; の値を気にする必要はありません。キャンセルできないため、イベントリスナーはページのレンダリングをブロックできません。</target>
        </trans-unit>
        <trans-unit id="e1c5cfd556cdded5b136860bea91e294776fd905" translate="yes" xml:space="preserve">
          <source>You have to use the fetch function cross-global, e.g. &lt;code&gt;frame.contentWindow.fetch()&lt;/code&gt;</source>
          <target state="translated">グローバルなフェッチ関数を使用する必要があります。例えば、 &lt;code&gt;frame.contentWindow.fetch()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="65065bf369f287c4873c4652a26838324ab030db" translate="yes" xml:space="preserve">
          <source>You keep running the function recursively until there is no more stream to read, in which case step 2 is followed.</source>
          <target state="translated">読み込むストリームがなくなるまで関数を再帰的に実行し続けます。</target>
        </trans-unit>
        <trans-unit id="da934b62b4f5b8fb2de80d9145466c28511ba34b" translate="yes" xml:space="preserve">
          <source>You know the entire content has been received when the value of &lt;a href=&quot;readystate&quot;&gt;&lt;code&gt;readyState&lt;/code&gt;&lt;/a&gt; becomes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/DONE&quot;&gt;&lt;code&gt;XMLHttpRequest.DONE&lt;/code&gt;&lt;/a&gt; (&lt;code&gt;4&lt;/code&gt;), and &lt;a href=&quot;status&quot;&gt;&lt;code&gt;status&lt;/code&gt;&lt;/a&gt; becomes 200 (&lt;code&gt;&quot;OK&quot;&lt;/code&gt;).</source>
          <target state="translated">&lt;a href=&quot;readystate&quot;&gt; &lt;code&gt;readyState&lt;/code&gt; &lt;/a&gt;の値が&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/DONE&quot;&gt; &lt;code&gt;XMLHttpRequest.DONE&lt;/code&gt; &lt;/a&gt;（ &lt;code&gt;4&lt;/code&gt; ）になり、&lt;a href=&quot;status&quot;&gt; &lt;code&gt;status&lt;/code&gt; &lt;/a&gt;が200（ &lt;code&gt;&quot;OK&quot;&lt;/code&gt; ）になったときに、コンテンツ全体が受信されたことがわかります。</target>
        </trans-unit>
        <trans-unit id="02fea3ed9a47d804bceb0363ee2a7af2bbed3347" translate="yes" xml:space="preserve">
          <source>You may also access the size of the pixel array in bytes by reading the &lt;code&gt;Uint8ClampedArray.length&lt;/code&gt; attribute:</source>
          <target state="translated">&lt;code&gt;Uint8ClampedArray.length&lt;/code&gt; 属性を読み取ることにより、ピクセル配列のサイズにバイト単位でアクセスすることもできます。</target>
        </trans-unit>
        <trans-unit id="741b7943a84048afc64827cfd10596171ced2abf" translate="yes" xml:space="preserve">
          <source>You may also include a plain text representation of the HTML or XML data using the &lt;code&gt;text/plain&lt;/code&gt; type. The data should be just the text and should not include any of the source tags or attributes. For instance:</source>
          <target state="translated">また、 &lt;code&gt;text/plain&lt;/code&gt; タイプを使用して、HTMLまたはXMLデータのプレーンテキスト表現を含めることもできます。データは単なるテキストである必要があり、ソースタグや属性を含めないでください。例えば：</target>
        </trans-unit>
        <trans-unit id="e77f6890122c1bf0d2d4e6588826cd2f74336f00" translate="yes" xml:space="preserve">
          <source>You may also pass a &lt;a href=&quot;../request&quot;&gt;&lt;code&gt;Request&lt;/code&gt;&lt;/a&gt; object to the &lt;code&gt;Request()&lt;/code&gt; constructor to create a copy of the Request (This is similar to calling the &lt;a href=&quot;clone&quot;&gt;&lt;code&gt;clone()&lt;/code&gt;&lt;/a&gt; method.)</source>
          <target state="translated">また、&lt;a href=&quot;../request&quot;&gt; &lt;code&gt;Request&lt;/code&gt; &lt;/a&gt;オブジェクトを &lt;code&gt;Request()&lt;/code&gt; コンストラクターに渡して、Requestのコピーを作成することもできます（これは&lt;a href=&quot;clone&quot;&gt; &lt;code&gt;clone()&lt;/code&gt; &lt;/a&gt;メソッドを呼び出すのと同じです）。</target>
        </trans-unit>
        <trans-unit id="7a322f9d05fe74fea73885623fbffa93d7f8c783" translate="yes" xml:space="preserve">
          <source>You may also see data using the Mozilla specific type &lt;code&gt;text/x-moz-url&lt;/code&gt;. If it appears, it should be used before the &lt;code&gt;text/uri-list&lt;/code&gt; type. It holds the URL of the link followed by the title of the link, separated by a linebreak. For example:</source>
          <target state="translated">Mozilla固有のタイプ &lt;code&gt;text/x-moz-url&lt;/code&gt; を使用してデータを表示することもできます。表示される場合は、 &lt;code&gt;text/uri-list&lt;/code&gt; タイプの前に使用する必要があります。改行で区切られたリンクのタイトルが続くリンクのURLを保持します。例えば：</target>
        </trans-unit>
        <trans-unit id="c6fb654e04b3fa5f7630ab130d25c0cb485dbb92" translate="yes" xml:space="preserve">
          <source>You may also wish to check if the desired format exists using the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozTypesAt&quot;&gt;&lt;code&gt;mozTypesAt&lt;/code&gt;&lt;/a&gt; method. As with the &lt;a href=&quot;../datatransfer/types&quot;&gt;&lt;code&gt;types&lt;/code&gt;&lt;/a&gt; property, it returns a list of strings of the types for an item. &lt;a href=&quot;../datatransfer/types&quot;&gt;&lt;code&gt;types &lt;/code&gt;&lt;/a&gt; property is equivalent to retrieving the list of types for the item at index 0.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/mozTypesAt&quot;&gt; &lt;code&gt;mozTypesAt&lt;/code&gt; &lt;/a&gt;メソッドを使用して、目的の形式が存在するかどうかを確認することもできます。&lt;a href=&quot;../datatransfer/types&quot;&gt; &lt;code&gt;types&lt;/code&gt; &lt;/a&gt;プロパティと同様に、アイテムのタイプの文字列のリストを返します。&lt;a href=&quot;../datatransfer/types&quot;&gt; &lt;code&gt;types &lt;/code&gt; &lt;/a&gt;プロパティは、インデックス0のアイテムのタイプのリストを取得することと同じです。</target>
        </trans-unit>
        <trans-unit id="af794cdd01ec99fb796dfdf978df9ad80e44e16a" translate="yes" xml:space="preserve">
          <source>You may also wish to set either the &lt;a href=&quot;../datatransfer/effectallowed&quot;&gt;&lt;code&gt;effectAllowed&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../datatransfer/dropeffect&quot;&gt;&lt;code&gt;dropEffect&lt;/code&gt;&lt;/a&gt; property, or both at the same time, if you wish to be more specific about the type of operation that will performed. Naturally, changing either property will have no effect if you do not cancel the event as well.</source>
          <target state="translated">実行される操作のタイプをより具体的にしたい場合は、&lt;a href=&quot;../datatransfer/effectallowed&quot;&gt; &lt;code&gt;effectAllowed&lt;/code&gt; &lt;/a&gt;プロパティ、&lt;a href=&quot;../datatransfer/dropeffect&quot;&gt; &lt;code&gt;dropEffect&lt;/code&gt; &lt;/a&gt;プロパティ、またはその両方を同時に設定することもできます。当然、イベントもキャンセルしない限り、どちらのプロパティを変更しても効果はありません。</target>
        </trans-unit>
        <trans-unit id="7291ddbbfd26239c194d43c513a876ef20c6eeff" translate="yes" xml:space="preserve">
          <source>You may find examples and details by reading the documentation for the &lt;a href=&quot;../element/queryselector&quot;&gt;&lt;code&gt;Element.querySelector()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../element/queryselectorall&quot;&gt;&lt;code&gt;Element.querySelectorAll()&lt;/code&gt;&lt;/a&gt; methods, as well as in the article &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Code_snippets/QuerySelector&quot;&gt;Code snippets for querySelector&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../element/queryselector&quot;&gt; &lt;code&gt;Element.querySelector()&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;../element/queryselectorall&quot;&gt; &lt;code&gt;Element.querySelectorAll()&lt;/code&gt; &lt;/a&gt;メソッドのドキュメント、およびquerySelectorの&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Code_snippets/QuerySelector&quot;&gt;コードスニペットで&lt;/a&gt;例と詳細を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="7d430cc3a1d259b5eda07242c46bd7ee002b800a" translate="yes" xml:space="preserve">
          <source>You may find that the &lt;code&gt;quota&lt;/code&gt; varies from app to app based on factors such as the frequency with which the user visits it, commonly-known site popularity data, and so forth.</source>
          <target state="translated">ユーザーがアクセスする頻度、一般に知られているサイトの人気データなどの要因に基づいて、 &lt;code&gt;quota&lt;/code&gt; はアプリごとに異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="30b26557c2df610e899f7ed141827d0a25407405" translate="yes" xml:space="preserve">
          <source>You may have times when you want to have multiple audio parameters be linked so they share the same value even while being changed in some way. For example, perhaps you have a set of oscillators, and two of them need to share the same, configurable volume, or you have a filter that's been applied to certain inputs but not to all of them. You could use a loop and change the value of each affected &lt;a href=&quot;../audioparam&quot;&gt;&lt;code&gt;AudioParam&lt;/code&gt;&lt;/a&gt; one at a time, but there are two drawbacks to doing it that way: first, that's extra code that, as you're about to see, you don't have to write; and second, that loop uses valuable CPU time on your thread (likely the main thread), and there's a way to offload all that work to the audio rendering thread, which is optimized for this kind of work and may run at a more appropriate priority level than your code.</source>
          <target state="translated">複数のオーディオパラメータをリンクして、何らかの方法で変更されている場合でも同じ値を共有したい場合があります。たとえば、オシレーターのセットがあり、そのうちの2つが同じ構成可能なボリュームを共有する必要がある場合や、特定の入力に適用されているが、すべてには適用されていないフィルターがある場合などです。ループを使用して、影響を受ける各&lt;a href=&quot;../audioparam&quot;&gt; &lt;code&gt;AudioParam&lt;/code&gt; の&lt;/a&gt;値を一度に 1つずつ変更することもできますが、その方法で実行することには2つの欠点があります。書く;次に、そのループはスレッド（メインスレッドなど）で貴重なCPU時間を使用し、すべての作業をオーディオレンダリングスレッドにオフロードする方法があります。これはこの種の作業用に最適化されており、コードよりも適切な優先度レベルで実行される可能性があります。</target>
        </trans-unit>
        <trans-unit id="7a4db3faa216c617318e4186afc3db0c2158970f" translate="yes" xml:space="preserve">
          <source>You may pulse the vibration hardware one time by specifying either a single value, or an array consisting of only one value:</source>
          <target state="translated">1 つの値を指定するか、1 つの値のみで構成される配列を指定することで、振動ハードウェアを 1 回パルス化することができます。</target>
        </trans-unit>
        <trans-unit id="b370eb5ff7cd990726f1e363592e3ee27153f35f" translate="yes" xml:space="preserve">
          <source>You may specify as many vibration/pause pairs as you like, and you may provide either an even or odd number of entries; it's worth noting that you don't have to provide a pause as your last entry since the vibration automatically stops at the end of each vibration period.</source>
          <target state="translated">振動と一時停止のペアを好きなだけ指定することができ、エントリの数は偶数または奇数のどちらでも構いません。</target>
        </trans-unit>
        <trans-unit id="5ac398709c43d5dbbd7d56cce3736793093aba17" translate="yes" xml:space="preserve">
          <source>You may use any CSS selectors with the &lt;code&gt;querySelector()&lt;/code&gt; and &lt;code&gt;querySelectorAll()&lt;/code&gt; methods.</source>
          <target state="translated">&lt;code&gt;querySelector()&lt;/code&gt; および &lt;code&gt;querySelectorAll()&lt;/code&gt; メソッドで任意のCSSセレクターを使用できます。</target>
        </trans-unit>
        <trans-unit id="b6cd50b24d7be9a3ec520e0263416d9813fe28b9" translate="yes" xml:space="preserve">
          <source>You may use anything in the text header except newlines or the string &quot;&lt;code&gt;--&amp;gt;&lt;/code&gt;&quot;</source>
          <target state="translated">テキストヘッダーでは、改行または文字列「 &lt;code&gt;--&amp;gt;&lt;/code&gt; 」を除いて何でも使用できます。</target>
        </trans-unit>
        <trans-unit id="d9b9d13b9c186414773f76606a71f5de78b37734" translate="yes" xml:space="preserve">
          <source>You may use the label as you wish; you could use it to identify all the channels that are being used for the same purpose, by giving them all the same namel. Or you could give each channel a unique label for tracking purposes. It's entirely up to the design decisions made when building your site or app.</source>
          <target state="translated">同じ目的のために使用されているすべてのチャンネルを識別するために、すべてのチャンネルに同じ名前をつけることができます。また、トラッキングの目的で各チャンネルに独自のラベルを付けることもできます。サイトやアプリを構築する際のデザインの決定次第です。</target>
        </trans-unit>
        <trans-unit id="28c286dea128c960afe92671ba298be86e9806de" translate="yes" xml:space="preserve">
          <source>You might also try experimenting with the direction of the light source, the colors of the light sources, and so forth.</source>
          <target state="translated">また、光源の向きや光源の色などを実験してみるのもいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="34118ce7601f19afbdfb2e3b7a98a60e6e468523" translate="yes" xml:space="preserve">
          <source>You might ask yourself what's the difference between console.dir() and console.log().</source>
          <target state="translated">console.dir()とconsole.log()の違いは何なのかと疑問に思うかもしれません。</target>
        </trans-unit>
        <trans-unit id="d3472d1c357797f4d7c55915ce36987a9d87fd6c" translate="yes" xml:space="preserve">
          <source>You might do this for example in a &lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt; if you want to fetch a response from the server and stream it to the browser, but also stream it to the Service Worker cache. Since a response body cannot be consumed more than once, and a stream can't be read by more than one reader at once, you&amp;rsquo;d need two copies to do this.</source>
          <target state="translated">たとえば、サーバーから応答をフェッチしてブラウザーにストリーミングするだけでなく、Service Workerキャッシュにもストリーミングする場合は、&lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt;でこれを行うことができます。レスポンスボディは2回以上使用できず、ストリームは一度に複数のリーダーで読み取ることができないため、これを行うには2つのコピーが必要になります。</target>
        </trans-unit>
        <trans-unit id="5a2ea1aed0d5851f9811f0de82581387ac4fa1fc" translate="yes" xml:space="preserve">
          <source>You might do this for example in a &lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt; if you want to fetch a response from the server and stream it to the browser, but also stream it to the ServiceWorker cache. Since a response body cannot be consumed more than once, and a stream can't be read by more than one reader at once, you&amp;rsquo;d need two copies to do this.</source>
          <target state="translated">たとえば、サーバーから応答をフェッチしてブラウザーにストリーミングするだけでなく、ServiceWorkerキャッシュにもストリーミングする場合は、&lt;a href=&quot;../service_worker_api&quot;&gt;ServiceWorker&lt;/a&gt;でこれを行うことができます。レスポンスボディは2回以上使用できず、ストリームは一度に複数のリーダーで読み取ることができないため、これを行うには2つのコピーが必要になります。</target>
        </trans-unit>
        <trans-unit id="894c446cbb7647f9ccc77a2b8627ca03d77e078f" translate="yes" xml:space="preserve">
          <source>You might instead be working with an &lt;a href=&quot;../offlineaudiocontext&quot;&gt;&lt;code&gt;OfflineAudioContext&lt;/code&gt;&lt;/a&gt;, in which case you can resume the suspended audio context with the &lt;a href=&quot;../offlineaudiocontext/startrendering&quot;&gt;&lt;code&gt;startRendering()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">代わりに、&lt;a href=&quot;../offlineaudiocontext&quot;&gt; &lt;code&gt;OfflineAudioContext&lt;/code&gt; &lt;/a&gt;を使用している場合があります。その場合は、&lt;a href=&quot;../offlineaudiocontext/startrendering&quot;&gt; &lt;code&gt;startRendering()&lt;/code&gt; &lt;/a&gt;メソッドを使用して、中断されたオーディオコンテキストを再開できます。</target>
        </trans-unit>
        <trans-unit id="2ca277b3c74b2e8bbf25ba762b8c5b9355c14a43" translate="yes" xml:space="preserve">
          <source>You must,</source>
          <target state="translated">あなたはそうしなければならない。</target>
        </trans-unit>
        <trans-unit id="c56212e119df260eafbc088a5b22d9aa6de9a027" translate="yes" xml:space="preserve">
          <source>You must:</source>
          <target state="translated">あなたはそうしなければならない。</target>
        </trans-unit>
        <trans-unit id="ccf5e5178062825b7841dd6efd2a8ef5c3f7cee7" translate="yes" xml:space="preserve">
          <source>You need a same-origin iframe</source>
          <target state="translated">あなたは同じ起源のiframeが必要です</target>
        </trans-unit>
        <trans-unit id="6584c0d6e4f7b9ea83e6bce98771fede979c50f3" translate="yes" xml:space="preserve">
          <source>You need to know when the user comes back online, so that you can re-synchronize with the server.</source>
          <target state="translated">ユーザーがいつオンラインに戻ってきたかを知る必要があるので、サーバーとの再同期が可能です。</target>
        </trans-unit>
        <trans-unit id="d7aa1db5015c61cbf3832824b0fda141890a71c5" translate="yes" xml:space="preserve">
          <source>You need to know when the user is offline, so that you can queue your server requests for a later time.</source>
          <target state="translated">ユーザーがオフラインであることを知る必要があるので、後からサーバーのリクエストをキューに入れることができます。</target>
        </trans-unit>
        <trans-unit id="ceee724de5fa9a27af638d27b0fb26534d75f00e" translate="yes" xml:space="preserve">
          <source>You need to use &lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt;&lt;code&gt;EventTarget.addEventListener()&lt;/code&gt;&lt;/a&gt; to add the &lt;code&gt;change&lt;/code&gt; event listener, like this:</source>
          <target state="translated">次のように、&lt;a href=&quot;../eventtarget/addeventlistener&quot;&gt; &lt;code&gt;EventTarget.addEventListener()&lt;/code&gt; &lt;/a&gt;を使用して、 &lt;code&gt;change&lt;/code&gt; イベントリスナーを追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="fe1db2fab5ec97a71303752f352c7fcbfd530061" translate="yes" xml:space="preserve">
          <source>You should &lt;a href=&quot;https://mdn-samples.mozilla.org/s/webrtc-simple-datachannel&quot;&gt;try out this example&lt;/a&gt; and take a look at the &lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel&quot;&gt;webrtc-simple-datachannel&lt;/a&gt; source code, available on GitHub.</source>
          <target state="translated">あなたは必要があります&lt;a href=&quot;https://mdn-samples.mozilla.org/s/webrtc-simple-datachannel&quot;&gt;。この例を試してみる&lt;/a&gt;と見とる&lt;a href=&quot;https://github.com/mdn/samples-server/tree/master/s/webrtc-simple-datachannel&quot;&gt;のWebRTC-単純データチャネルの&lt;/a&gt; GitHubの上で利用可能なソースコードを、。</target>
        </trans-unit>
        <trans-unit id="250be8529c6f2bce136f2d8e8abe9bba970da312" translate="yes" xml:space="preserve">
          <source>You should also include the &lt;code&gt;application/x-moz-file&lt;/code&gt; type if the image is located on disk. In fact, this a common way in which image files are dragged.</source>
          <target state="translated">イメージがディスク上にある場合は、 &lt;code&gt;application/x-moz-file&lt;/code&gt; タイプも含める必要があります。実際、これは画像ファイルがドラッグされる一般的な方法です。</target>
        </trans-unit>
        <trans-unit id="ba221c25ee372d94b6a01ca03a8562b4af3f9616" translate="yes" xml:space="preserve">
          <source>You should also listen for &lt;code&gt;VersionError&lt;/code&gt; errors to handle the situation where already opened apps may initiate code leading to a new attempt to open the database, but using an outdated version.</source>
          <target state="translated">また、 &lt;code&gt;VersionError&lt;/code&gt; エラーをリッスンして、既に開いているアプリがデータベースを開く新しい試行につながるコードを開始する可能性があるが、古いバージョンを使用している状況を処理する必要があります。</target>
        </trans-unit>
        <trans-unit id="ed04fd7661e73aa23be8369eb447a187e425a811" translate="yes" xml:space="preserve">
          <source>You should always include a plain text alternative for the node.</source>
          <target state="translated">ノードには常にプレーンテキストの代替案を含める必要があります。</target>
        </trans-unit>
        <trans-unit id="39b9bdd050facf5c516315a72e4ddbd94dc379da" translate="yes" xml:space="preserve">
          <source>You should assume that a large majority of browsers will have the status bar or that a large majority of users will want to force the status bar presence: best is to always set this feature to yes. Also, if you specifically request to remove the status bar, then Firefox users will not be able to view the Site Navigation toolbar if it is installed. In Mozilla and in Firefox, all windows with a status bar have a window resizing grippy at its right-most side. The status bar also provides info on http connection, hypertext resource location, download progress bar, encryption/secure connection info with</source>
          <target state="translated">大多数のブラウザがステータスバーを持っているか、大多数のユーザーがステータスバーの存在を強制したいと思っていることを想定してください:この機能を常に yes に設定するのがベストです。また、特にステータスバーの削除を要求した場合、Firefox のユーザーはサイトナビゲーションツールバーがインストールされている場合、サイトナビゲーションツールバーを見ることができなくなります。Mozilla と Firefox では、ステータスバーのあるすべてのウィンドウは、その右端にウィンドウサイズ変更のグリッピーを持っています。ステータスバーはまた、http接続、ハイパーテキストリソースの場所、ダウンロードの進捗状況バー、暗号化/安全な接続情報を提供します。</target>
        </trans-unit>
        <trans-unit id="4d7385600bcfa3597283e969aacfcb94a0c0dc81" translate="yes" xml:space="preserve">
          <source>You should call this method whenever you're ready to update your animation onscreen. This will request that your animation function be called before the browser performs the next repaint. The number of callbacks is usually 60 times per second, but will generally match the display refresh rate in most web browsers as per W3C recommendation. &lt;code&gt;requestAnimationFrame()&lt;/code&gt; calls are paused in most browsers when running in background tabs or hidden &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt;&lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;&lt;/a&gt;s in order to improve performance and battery life.</source>
          <target state="translated">画面上でアニメーションを更新する準備ができたら、このメソッドを呼び出す必要があります。これにより、ブラウザが次の再描画を実行する前にアニメーション関数を呼び出すことが要求されます。コールバックの数は通常1秒あたり60回ですが、W3Cの推奨事項に従って、ほとんどのWebブラウザーの表示リフレッシュレートと一般的に一致します。パフォーマンスとバッテリー寿命を改善するために、バックグラウンドタブまたは非表示の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe&quot;&gt; &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt; で&lt;/a&gt;実行している場合、ほとんどのブラウザーでは &lt;code&gt;requestAnimationFrame()&lt;/code&gt; 呼び出しが一時停止されます。</target>
        </trans-unit>
        <trans-unit id="9ff7b9c7bd2c6d7e018055e47685d177ac9d00c0" translate="yes" xml:space="preserve">
          <source>You should never use &lt;code&gt;#ifdef GL_ES&lt;/code&gt; in your WebGL shaders; although some early examples used this, it's not necessary, since this condition is always true in WebGL shaders.</source>
          <target state="translated">WebGLシェーダーで &lt;code&gt;#ifdef GL_ES&lt;/code&gt; を使用しないでください。初期の例ではこれを使用していましたが、WebGLシェーダーではこの条件が常に当てはまるため、これは必要ありません。</target>
        </trans-unit>
        <trans-unit id="79e23a87e598f3ff29a3aa082ee996bcd6c580e3" translate="yes" xml:space="preserve">
          <source>You should not assume that any entry which isn't a directory is a file or vice-versa. There are other types of file descriptors on many operating systems. Be sure to use both &lt;code&gt;isDirectory&lt;/code&gt; and &lt;code&gt;isFile&lt;/code&gt; as needed to ensure that the entry is something you know how to work with.</source>
          <target state="translated">ディレクトリではないエントリがファイルまたはその逆であると想定しないでください。多くのオペレーティングシステムには、他の種類のファイル記述子があります。必要に応じて &lt;code&gt;isDirectory&lt;/code&gt; と &lt;code&gt;isFile&lt;/code&gt; の両方を使用して、エントリが操作方法を知っているものであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="c5e344725af255f55e21d5ba9e6439e2c7ca9414" translate="yes" xml:space="preserve">
          <source>You should not assume that any entry which isn't a file is a directory or vice-versa. There are other types of file descriptors on many operating systems. Be sure to use both &lt;code&gt;isDirectory&lt;/code&gt; and &lt;code&gt;isFile&lt;/code&gt; as needed to ensure that the entry is something you know how to work with.</source>
          <target state="translated">ファイルではないエントリがディレクトリまたはその逆であると想定しないでください。多くのオペレーティングシステムには、他の種類のファイル記述子があります。必要に応じて &lt;code&gt;isDirectory&lt;/code&gt; と &lt;code&gt;isFile&lt;/code&gt; の両方を使用して、エントリが操作方法を知っているものであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="8aab55003783e08037eb9efc1ff534408d31d59c" translate="yes" xml:space="preserve">
          <source>You should note that we've used a conditional expression to detect whether the linear acceleration and angular acceleration arrays are successfully returned before we display the data. These values are not reported by most VR hardware as yet, so the code would throw an error if we did not do this (the arrays return &lt;code&gt;null&lt;/code&gt; if they are not successfully reported).</source>
          <target state="translated">データを表示する前に、条件式を使用して線形加速度と角加速度の配列が正常に返されたかどうかを検出したことに注意してください。これらの値は、ほとんどのVRハードウェアによってまだ報告されていないため、これを行わないとコードはエラーをスローします（正常に報告されなかった場合、配列は &lt;code&gt;null&lt;/code&gt; を返します）。</target>
        </trans-unit>
        <trans-unit id="128af0c0cca69ce2a29fbb32167a24263a6335a1" translate="yes" xml:space="preserve">
          <source>You should try to reuse existing contexts rather than creating a new one for each sound you play, and be sure to call &lt;a href=&quot;close&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; on each context as you finish using it. Once &lt;code&gt;close()&lt;/code&gt;'s &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; is resolved, it's safe to create a new context.</source>
          <target state="translated">再生するサウンドごとに新しいコンテキストを作成するのではなく、既存のコンテキストを再利用してみてください。使用を終えるたびに、必ず各コンテキストで&lt;a href=&quot;close&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt;を呼び出してください。 &lt;code&gt;close()&lt;/code&gt; の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;が解決されたら、新しいコンテキストを作成しても安全です。</target>
        </trans-unit>
        <trans-unit id="31d53cbfa3a75b1394dd068c757f90b6a69e933c" translate="yes" xml:space="preserve">
          <source>You should use &lt;a href=&quot;getpropertyvalue&quot;&gt;&lt;code&gt;CSSStyleDeclaration.getPropertyValue()&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">代わりに&lt;a href=&quot;getpropertyvalue&quot;&gt; &lt;code&gt;CSSStyleDeclaration.getPropertyValue()&lt;/code&gt; &lt;/a&gt;を使用してください。</target>
        </trans-unit>
        <trans-unit id="91d8f17936b1ea42040f8e6de51d17cb1e9933ea" translate="yes" xml:space="preserve">
          <source>You should use &lt;code&gt;removeAttribute()&lt;/code&gt; instead of setting the attribute value to &lt;code&gt;null&lt;/code&gt; either directly or using &lt;a href=&quot;setattribute&quot;&gt;&lt;code&gt;setAttribute()&lt;/code&gt;&lt;/a&gt;. Many attributes will not behave as expected if you set them to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">直接または&lt;a href=&quot;setattribute&quot;&gt; &lt;code&gt;setAttribute()&lt;/code&gt; &lt;/a&gt;を使用して属性値を &lt;code&gt;null&lt;/code&gt; に設定する代わりに、 &lt;code&gt;removeAttribute()&lt;/code&gt; を使用する必要があります。多くの属性を &lt;code&gt;null&lt;/code&gt; に設定すると、期待どおりに動作しません。</target>
        </trans-unit>
        <trans-unit id="22e0fc69675c3a3d0ac5dc67e49718a91ce859ed" translate="yes" xml:space="preserve">
          <source>You should watch for &lt;a href=&quot;https://developer.mozilla.org/docs/Web/Events/change&quot;&gt;change&lt;/a&gt; events on &lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;&lt;/a&gt; instead of watching &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; elements for events. See &lt;a href=&quot;https://bugzil.la/1090602&quot;&gt;bug 1090602&lt;/a&gt; and &lt;a href=&quot;https://developer.mozilla.org/Firefox/Multiprocess_Firefox/Web_content_compatibility&quot;&gt;Multiprocess Firefox Web content compatibility&lt;/a&gt; for details.</source>
          <target state="translated">イベントの &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt; 要素を監視するのではなく、&lt;a href=&quot;https://developer.mozilla.org/docs/Web/HTML/Element/select&quot;&gt; &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; &lt;/a&gt;で&lt;a href=&quot;https://developer.mozilla.org/docs/Web/Events/change&quot;&gt;変更&lt;/a&gt;イベントを監視する必要があります。詳細については、&lt;a href=&quot;https://bugzil.la/1090602&quot;&gt;バグ1090602&lt;/a&gt;および&lt;a href=&quot;https://developer.mozilla.org/Firefox/Multiprocess_Firefox/Web_content_compatibility&quot;&gt;マルチ&lt;/a&gt;プロセスFirefox Webコンテンツの互換性を参照してください。</target>
        </trans-unit>
        <trans-unit id="513c31fb2d05aea777b6f4ea44da00386b06ae69" translate="yes" xml:space="preserve">
          <source>You shouldn't have been using this in the first place, so you probably don't care that this is going away.</source>
          <target state="translated">そもそもこれを使うべきではなかったので、これがなくなっても気にしていないのでしょう。</target>
        </trans-unit>
        <trans-unit id="5ebb0c753ce02d576eca4a4312f2491529b832cf" translate="yes" xml:space="preserve">
          <source>You use &lt;code&gt;clip()&lt;/code&gt; instead of &lt;code&gt;closePath()&lt;/code&gt; to close a path and turn it into a clipping path instead of stroking or filling the path.</source>
          <target state="translated">パスを閉じたりパスを &lt;code&gt;closePath()&lt;/code&gt; 代わりに、closePath &lt;code&gt;clip()&lt;/code&gt; 代わりにclip（）を使用してパスを閉じ、クリッピングパスに変換します。</target>
        </trans-unit>
        <trans-unit id="de9680760c6f064505ac104da8a86b9b6522315c" translate="yes" xml:space="preserve">
          <source>You will need to already know how HTTP works and have medium programming experience. Depending on language support, knowledge of TCP sockets may be required. The scope of this guide is to present the minimum knowledge you need to write a WebSocket server.</source>
          <target state="translated">すでにHTTPの仕組みを知っていて、中程度のプログラミング経験が必要です。サポートされている言語によっては、TCP ソケットの知識が必要となる場合があります。このガイドの範囲は、WebSocket サーバを書くために必要な最低限の知識を提示することです。</target>
        </trans-unit>
        <trans-unit id="46e20587af3de1356dbd28ea299b395cf2e6b5fc" translate="yes" xml:space="preserve">
          <source>You will rarely if ever construct an &lt;code&gt;RTCDataChannelEvent&lt;/code&gt; by hand; instead, the WebRTC layer will generate and deliver them to you at the appropriate time. Just listen for the &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; event and when you receive it, use the &lt;a href=&quot;rtcdatachannelevent/channel&quot;&gt;&lt;code&gt;RTCDataChannelEvent.channel&lt;/code&gt;&lt;/a&gt; property to gain access to the data channel which has been opened.</source>
          <target state="translated">&lt;code&gt;RTCDataChannelEvent&lt;/code&gt; を手動で作成することはほとんどありません。代わりに、WebRTCレイヤーが適切なタイミングでそれらを生成して配信します。 &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/datachannel&quot;&gt;datachannel&lt;/a&gt;&lt;/code&gt; イベントをリッスンし、それを受け取ったら、&lt;a href=&quot;rtcdatachannelevent/channel&quot;&gt; &lt;code&gt;RTCDataChannelEvent.channel&lt;/code&gt; &lt;/a&gt;プロパティを使用して、開かれているデータチャネルにアクセスします。</target>
        </trans-unit>
        <trans-unit id="793f91ac33be70fae27a4d7cde00ff9629a23e3a" translate="yes" xml:space="preserve">
          <source>You will rarely if ever construct an &lt;code&gt;RTCDataChannelEvent&lt;/code&gt; by hand; these events are normally created and sent by the WebRTC layer itself.</source>
          <target state="translated">&lt;code&gt;RTCDataChannelEvent&lt;/code&gt; を手動で作成することはほとんどありません。これらのイベントは通常、WebRTCレイヤー自体によって作成および送信されます。</target>
        </trans-unit>
        <trans-unit id="f1dd7c2262916d129a1c96f3ed6d335cd1561927" translate="yes" xml:space="preserve">
          <source>You will, however, have more control if you use a buffer node. You have to request the file and wait for it to load (&lt;a href=&quot;advanced_techniques#Dial_up_%E2%80%94_loading_a_sound_sample&quot;&gt;this section of our advanced article&lt;/a&gt; shows a good way to do it), but then you have access to the data directly, which means more precision, and more precise manipulation.</source>
          <target state="translated">ただし、バッファノードを使用すると、より細かく制御できます。ファイルをリクエストし、ロードされるまで待つ必要があります（&lt;a href=&quot;advanced_techniques#Dial_up_%E2%80%94_loading_a_sound_sample&quot;&gt;高度な記事のこのセクションで&lt;/a&gt;は、その方法が示されています）が、データに直接アクセスできるため、より正確に、より正確に操作できます。</target>
        </trans-unit>
        <trans-unit id="9984b64af29311674b09c688d582977aeb43ecb1" translate="yes" xml:space="preserve">
          <source>You won't access &lt;code&gt;WorkerGlobalScope&lt;/code&gt; directly in your code; however, its properties and methods are inherited by more specific global scopes such as &lt;a href=&quot;dedicatedworkerglobalscope&quot;&gt;&lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sharedworkerglobalscope&quot;&gt;&lt;code&gt;SharedWorkerGlobalScope&lt;/code&gt;&lt;/a&gt;. For example, you could import another script into the worker and print out the contents of the worker scope's &lt;code&gt;navigator&lt;/code&gt; object using the following two lines:</source>
          <target state="translated">コードで &lt;code&gt;WorkerGlobalScope&lt;/code&gt; に直接アクセスすることはありません。ただし、そのプロパティとメソッドは、&lt;a href=&quot;dedicatedworkerglobalscope&quot;&gt; &lt;code&gt;DedicatedWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;や&lt;a href=&quot;sharedworkerglobalscope&quot;&gt; &lt;code&gt;SharedWorkerGlobalScope&lt;/code&gt; &lt;/a&gt;などのより具体的なグローバルスコープによって継承されます。たとえば、次の2行を使用して、別のスクリプトをワーカーにインポートし、ワーカースコープの &lt;code&gt;navigator&lt;/code&gt; オブジェクトの内容を出力できます。</target>
        </trans-unit>
        <trans-unit id="0413400fb3bf61df04a1c1e063f6b1e33c7af000" translate="yes" xml:space="preserve">
          <source>You write a function that starts off by reading the stream.</source>
          <target state="translated">ストリームを読み込むことから始まる関数を書きます。</target>
        </trans-unit>
        <trans-unit id="6f8f3524dd770735f69b346878b9d8fee657b8c2" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;d really prefer to treat all those adjacent text nodes as a single one. That&amp;rsquo;s where &lt;code&gt;wholeText&lt;/code&gt; comes in: if you have multiple adjacent text nodes, you can access the contents of all of them using &lt;code&gt;wholeText&lt;/code&gt;. Let&amp;rsquo;s pretend you never made that last mistake. In that case, we have:</source>
          <target state="translated">隣接するすべてのテキストノードを1つのノードとして扱うことをお勧めします。ここで、 &lt;code&gt;wholeText&lt;/code&gt; の出番です。隣接するテキストノードが複数ある場合は、 &lt;code&gt;wholeText&lt;/code&gt; を使用してそれらすべてのコンテンツにアクセスできます。あなたがその最後の間違いを犯したことがないふりをしましょう。その場合、次のようになります。</target>
        </trans-unit>
        <trans-unit id="55f79d8b6af40daaf07aa44485854a8f0e9d528f" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll also need to serve your code via HTTPS &amp;mdash; Service workers are restricted to running across HTTPS for security reasons. GitHub is therefore a good place to host experiments, as it supports HTTPS. In order to facilitate local development, &lt;code&gt;localhost&lt;/code&gt; is considered a secure origin by browsers as well.</source>
          <target state="translated">また、HTTPSを介してコードを提供する必要があります&amp;mdash; Service Workerは、セキュリティ上の理由からHTTPSでの実行に制限されています。GitHubはHTTPSをサポートしているため、実験をホストするのに適しています。ローカル開発を容易にするために、 &lt;code&gt;localhost&lt;/code&gt; はブラウザーからも安全なオリジンと見なされています。</target>
        </trans-unit>
        <trans-unit id="e458e4892384f3263bbbdd722d9d4609b1496f00" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll notice a few differences here from how equivalent values are represented in CSS:</source>
          <target state="translated">ここでは、CSSで同等の値がどのように表されるかといくつかの違いがあることに気づくでしょう。</target>
        </trans-unit>
        <trans-unit id="a651a3b5669977d5c8e81e8cf13e2879fbcf7dde" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll notice that the &lt;code&gt;start()&lt;/code&gt; and &lt;code&gt;pull()&lt;/code&gt; methods passed into the &lt;code&gt;ReadableStream&lt;/code&gt; constructor are given &lt;code&gt;controller&lt;/code&gt; parameters &amp;mdash; these are instances of the &lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt;&lt;code&gt;ReadableStreamDefaultController&lt;/code&gt;&lt;/a&gt; class, which can be used to control your stream.</source>
          <target state="translated">&lt;code&gt;ReadableStream&lt;/code&gt; コンストラクターに渡された &lt;code&gt;start()&lt;/code&gt; メソッドと &lt;code&gt;pull()&lt;/code&gt; メソッドには &lt;code&gt;controller&lt;/code&gt; パラメーターが指定されています。これらは、ストリームの制御に使用できる&lt;a href=&quot;../readablestreamdefaultcontroller&quot;&gt; &lt;code&gt;ReadableStreamDefaultController&lt;/code&gt; &lt;/a&gt;クラスのインスタンスです。</target>
        </trans-unit>
        <trans-unit id="6eb5d2a3909c5b271ebe6474ac19662ef474f617" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll want to update your &lt;code&gt;install&lt;/code&gt; event listener in the new service worker to something like this (notice the new version number):</source>
          <target state="translated">新しいService Workerの &lt;code&gt;install&lt;/code&gt; イベントリスナーを次のように更新します（新しいバージョン番号に注意してください）。</target>
        </trans-unit>
        <trans-unit id="577f804d8fe6ea0abe9e0e5606b4994fd8344c6f" translate="yes" xml:space="preserve">
          <source>You'd need &lt;a href=&quot;append&quot;&gt;&lt;code&gt;Headers.append&lt;/code&gt;&lt;/a&gt; to append the new value onto the values, not overwrite it.</source>
          <target state="translated">新しい値を上書きせずに値に追加するには、&lt;a href=&quot;append&quot;&gt; &lt;code&gt;Headers.append&lt;/code&gt; &lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="9fe7d78d475aa209b8f77e981521f29e8843591b" translate="yes" xml:space="preserve">
          <source>You'll find the following useful:</source>
          <target state="translated">以下のような便利なものがあります。</target>
        </trans-unit>
        <trans-unit id="d8ec0e1774d1ee1d75e45ccb12c88dc134a33176" translate="yes" xml:space="preserve">
          <source>You'll get a better understanding of what these do by looking at the examples below.</source>
          <target state="translated">以下の例を見れば、これらが何をしているのか理解が深まるでしょう。</target>
        </trans-unit>
        <trans-unit id="b2709e0c189788ac87fd3dd7443044630c818fb6" translate="yes" xml:space="preserve">
          <source>You'll learn below how the stereoscopic view is actually produced.</source>
          <target state="translated">実際に立体視がどのように作られているのか、以下でご紹介します。</target>
        </trans-unit>
        <trans-unit id="aba6a9c82449f3108df424821442911543939779" translate="yes" xml:space="preserve">
          <source>You'll need to serve your code through a web server for recognition to work.</source>
          <target state="translated">認識を機能させるためには、ウェブサーバを介してコードを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="49309a358394c35b40eab1a6a72a827d86863585" translate="yes" xml:space="preserve">
          <source>You'll notice the difference between the filled and stroked triangle. This is, as mentioned above, because shapes are automatically closed when a path is filled, but not when they are stroked. If we left out the &lt;code&gt;closePath()&lt;/code&gt; for the stroked triangle, only two lines would have been drawn, not a complete triangle.</source>
          <target state="translated">塗りつぶされた三角形とストロークされた三角形の違いに気付くでしょう。これは、前述のとおり、パスが塗りつぶされたときにシェイプが自動的に閉じられるためです。ストロークされたときは閉じられません。ストロークされた三角形の &lt;code&gt;closePath()&lt;/code&gt; を省略した場合、完全な三角形ではなく、2本の線のみが描画されます。</target>
        </trans-unit>
        <trans-unit id="b26ff849b7a0bf500824e5ee758ab6f7ee6b3265" translate="yes" xml:space="preserve">
          <source>You'll see that we are modifying these values by the position (&lt;code&gt;curPos&lt;/code&gt;) and orientation (&lt;code&gt;curOrient&lt;/code&gt;) of the VR display we got from the &lt;a href=&quot;../vrpose&quot;&gt;&lt;code&gt;VRPose&lt;/code&gt;&lt;/a&gt; object. The result is that, for example, as you move or rotate your head left, the x position value (&lt;code&gt;curPos[0]&lt;/code&gt;) and y rotation value (&lt;code&gt;[curOrient[1]&lt;/code&gt;) are added to the x translation value, meaning that the cube will move to the right, as you'd expect when you are looking at something and then move/turn your head left.</source>
          <target state="translated">&lt;a href=&quot;../vrpose&quot;&gt; &lt;code&gt;VRPose&lt;/code&gt; &lt;/a&gt;オブジェクトから取得したVRディスプレイの位置（ &lt;code&gt;curPos&lt;/code&gt; ）と方向（ &lt;code&gt;curOrient&lt;/code&gt; ）によってこれらの値を変更していることがわかります。その結果、たとえば、頭を左に移動または回転させると、x位置の値（ &lt;code&gt;curPos[0]&lt;/code&gt; ）とy回転の値（ &lt;code&gt;[curOrient[1]&lt;/code&gt; ）がx平行移動値に追加され、キューブが何かを見ているときに期待するように、右に移動してから、頭を左に移動/回転します。</target>
        </trans-unit>
        <trans-unit id="1044afa265dc5d4abe6bef03e131e24e5033d35d" translate="yes" xml:space="preserve">
          <source>You'll want to be sure to let your users know that they can press the</source>
          <target state="translated">を押すことができることをユーザーに知らせるようにしましょう。</target>
        </trans-unit>
        <trans-unit id="5b467f31409c53651bb860d1f7f9f194095d8f2f" translate="yes" xml:space="preserve">
          <source>You've removed the second item clearing all types, then the old third item becomes new second item, and its index decreases.</source>
          <target state="translated">2つ目のアイテムを全種類クリアした後、古い3つ目のアイテムが新しい2つ目のアイテムになり、インデックスが減少します。</target>
        </trans-unit>
        <trans-unit id="b8de0a4677e93fc00ffe2db2861e36f3c2926f29" translate="yes" xml:space="preserve">
          <source>You've seen this code before. It's nearly identical to the image onload function in the previous example &amp;mdash; except when we call &lt;code&gt;texImage2D()&lt;/code&gt;, instead of passing an &lt;code&gt;Image&lt;/code&gt; object, we pass in the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt;&lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt;&lt;/a&gt; element. WebGL knows how to pull the current frame out and use it as a texture.</source>
          <target state="translated">このコードは以前に見たことがあります。これは、前の例の画像のonload関数とほぼ同じです。ただし、 &lt;code&gt;texImage2D()&lt;/code&gt; を呼び出す場合は、 &lt;code&gt;Image&lt;/code&gt; オブジェクトを渡す代わりに&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video&quot;&gt; &lt;code&gt;&amp;lt;video&amp;gt;&lt;/code&gt; &lt;/a&gt;要素を渡します。WebGLは、現在のフレームを引き出してテクスチャとして使用する方法を知っています。</target>
        </trans-unit>
        <trans-unit id="092109e86c78ed08e202ab67fb732c07e8481eb6" translate="yes" xml:space="preserve">
          <source>Your &lt;a href=&quot;../rtcpeerconnection/onicecandidate&quot;&gt;&lt;code&gt;onicecandidate&lt;/code&gt;&lt;/a&gt; handler receives an event whose &lt;code&gt;candidate&lt;/code&gt; property is the SDP describing the candidate (or is &lt;code&gt;null&lt;/code&gt; to indicate that the ICE layer has run out of potential configurations to suggest). The contents of &lt;code&gt;candidate&lt;/code&gt; are what you need to transmit using your signaling server. Here's our example's implementation:</source>
          <target state="translated">あなたの&lt;a href=&quot;../rtcpeerconnection/onicecandidate&quot;&gt; &lt;code&gt;onicecandidate&lt;/code&gt; &lt;/a&gt;ハンドラは、そのイベントを受信 &lt;code&gt;candidate&lt;/code&gt; プロパティ候補を記述したSDPであるが（またはある &lt;code&gt;null&lt;/code&gt; ICE層が示唆するように潜在的な構成を使い果たしたことを示します）。 &lt;code&gt;candidate&lt;/code&gt; の内容は、信号サーバーを使用して送信する必要があるものです。これが私たちの例の実装です：</target>
        </trans-unit>
        <trans-unit id="7d137df5b7b02562d59384aabbad810f7696490e" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; event handler gets called every time there's data ready for you to do with as you will; the event has a &lt;code&gt;data&lt;/code&gt; attribute whose value is a &lt;a href=&quot;blob&quot;&gt;&lt;code&gt;Blob&lt;/code&gt;&lt;/a&gt; that contains the media data. You can force a &lt;code&gt;dataavailable&lt;/code&gt; event to occur, thereby delivering the latest sound to you so you can filter it, save it, or whatever.</source>
          <target state="translated">あなたの &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dataavailable&quot;&gt;dataavailable&lt;/a&gt;&lt;/code&gt; イベントハンドラは、あなたが意志としてをどうするためのデータの準備ができてありますたびに呼び出されます。イベントには &lt;code&gt;data&lt;/code&gt; 属性があり、その値はメディアデータを含む&lt;a href=&quot;blob&quot;&gt; &lt;code&gt;Blob&lt;/code&gt; &lt;/a&gt;です。 &lt;code&gt;dataavailable&lt;/code&gt; イベントを強制的に発生させることができます。これにより、最新のサウンドを配信して、フィルター処理、保存などを行うことができます。</target>
        </trans-unit>
        <trans-unit id="64bc65448052540477cfebd403f9ce5f81e9d0b5" translate="yes" xml:space="preserve">
          <source>Your HTML page:</source>
          <target state="translated">あなたのHTMLページ。</target>
        </trans-unit>
        <trans-unit id="8e5b0b8be62e6f9e9b6038b901a182ddcd3e0b0f" translate="yes" xml:space="preserve">
          <source>Your code receives a &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; event when the remote peer removes a track from the connection by calling &lt;a href=&quot;../rtcpeerconnection/removetrack&quot;&gt;&lt;code&gt;RTCPeerConnection.removeTrack()&lt;/code&gt;&lt;/a&gt;. Our handler for &lt;code&gt;&quot;removetrack&quot;&lt;/code&gt; is:</source>
          <target state="translated">リモートピアが&lt;a href=&quot;../rtcpeerconnection/removetrack&quot;&gt; &lt;code&gt;RTCPeerConnection.removeTrack()&lt;/code&gt; を&lt;/a&gt;呼び出して接続からトラックを削除すると、コードは &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/removetrack&quot;&gt;removetrack&lt;/a&gt;&lt;/code&gt; イベントを受け取ります。 &lt;code&gt;&quot;removetrack&quot;&lt;/code&gt; ハンドラーは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="22437800610e0fe4be608037339d96db40cc02ea" translate="yes" xml:space="preserve">
          <source>Your service worker can respond to requests using the &lt;a href=&quot;fetchevent&quot;&gt;&lt;code&gt;FetchEvent&lt;/code&gt;&lt;/a&gt; event. You can modify the response to these requests in any way you want, using the &lt;a href=&quot;fetchevent/respondwith&quot;&gt;&lt;code&gt;FetchEvent.respondWith&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">サービスワーカーは、&lt;a href=&quot;fetchevent&quot;&gt; &lt;code&gt;FetchEvent&lt;/code&gt; &lt;/a&gt;イベントを使用してリクエストに応答できます。&lt;a href=&quot;fetchevent/respondwith&quot;&gt; &lt;code&gt;FetchEvent.respondWith&lt;/code&gt; &lt;/a&gt;メソッドを使用して、これらの要求への応答を任意の方法で変更できます。</target>
        </trans-unit>
        <trans-unit id="5215bcc1c5ac55b8e7a0ff1fd02a58454df6fab9" translate="yes" xml:space="preserve">
          <source>Z = Vz * sin(&amp;theta;/2)</source>
          <target state="translated">Z = Vz * sin（&amp;theta;/ 2）</target>
        </trans-unit>
        <trans-unit id="ee19ee8521779c883c663ee6e0c1b8295bdbb43d" translate="yes" xml:space="preserve">
          <source>Zero or more &lt;code&gt;touchmove&lt;/code&gt; events, depending on movement of the finger(s)</source>
          <target state="translated">指の動きに応じて、ゼロ以上の &lt;code&gt;touchmove&lt;/code&gt; ムーブイベント</target>
        </trans-unit>
        <trans-unit id="5b62d82711b9f8f238c19d20a79d213dd5394a37" translate="yes" xml:space="preserve">
          <source>Zero or more blank lines</source>
          <target state="translated">ゼロ行以上の空白行</target>
        </trans-unit>
        <trans-unit id="505a0b8c4af86d1c8442115b1be0a980ebfd5179" translate="yes" xml:space="preserve">
          <source>Zero or more characters other than those noted above</source>
          <target state="translated">上記以外の文字は0文字以上</target>
        </trans-unit>
        <trans-unit id="9f2f5d0f5f4187f4e5ee859a122e1f753be302bb" translate="yes" xml:space="preserve">
          <source>Zero or more cues or comments</source>
          <target state="translated">ゼロ以上の合図やコメント</target>
        </trans-unit>
        <trans-unit id="e04d8e653212ebe3017a71c370155b60a1c1f062" translate="yes" xml:space="preserve">
          <source>ZoomAndPan</source>
          <target state="translated">ZoomAndPan</target>
        </trans-unit>
        <trans-unit id="2532b55a1cc7cef9cd095920304f5c8474a99204" translate="yes" xml:space="preserve">
          <source>Zooming and anti-aliasing</source>
          <target state="translated">ズームとアンチエイリアス</target>
        </trans-unit>
        <trans-unit id="c84101bc97c0b9dde05a414dc66ddba805c7ebd7" translate="yes" xml:space="preserve">
          <source>[0] (c) Copyright 2008, Blender Foundation / www.bigbuckbunny.org / https://peach.blender.org/about/</source>
          <target state="translated">[0] (c) Copyright 2008, Blender Foundation / www.bigbuckbunny.org / https://peach.blender.org/about/</target>
        </trans-unit>
        <trans-unit id="d67455fe968e8994cbb2d962a68430f781aeed20" translate="yes" xml:space="preserve">
          <source>[1] &lt;a href=&quot;idbcursorwithvalue&quot;&gt;&lt;code&gt;IDBCursorWithValue&lt;/code&gt;&lt;/a&gt; is not available in workers until Gecko 42.0 (Firefox 42.0 / Thunderbird 42.0 / SeaMonkey 2.39).</source>
          <target state="translated">[1] &lt;a href=&quot;idbcursorwithvalue&quot;&gt;&lt;code&gt;IDBCursorWithValue&lt;/code&gt;&lt;/a&gt; is not available in workers until Gecko 42.0 (Firefox 42.0 / Thunderbird 42.0 / SeaMonkey 2.39).</target>
        </trans-unit>
        <trans-unit id="59852a7518407b58e80b2507227f44b7c0f72c80" translate="yes" xml:space="preserve">
          <source>[1] Before Firefox 35, it was implemented on the &lt;code&gt;Node&lt;/code&gt; interface.</source>
          <target state="translated">[1] Before Firefox 35, it was implemented on the &lt;code&gt;Node&lt;/code&gt; interface.</target>
        </trans-unit>
        <trans-unit id="4c87b007056d9a14e962637d64591a6408e75cbe" translate="yes" xml:space="preserve">
          <source>[1] Behind the chrome://flags#enable-webauthentication flag. (This only works as a link in Chrome.)</source>
          <target state="translated">[1] Behind the chrome://flags#enable-webauthentication flag. (This only works as a link in Chrome.)</target>
        </trans-unit>
        <trans-unit id="b2b1df3fa1c480004478ae95f7311c6df4426c4d" translate="yes" xml:space="preserve">
          <source>[1] Chrome and Opera give an error &quot;&lt;code&gt;Uncaught SecurityError: Failed to construct 'Worker': Script at 'file:///Path/to/worker.js' cannot be accessed from origin 'null'.&lt;/code&gt;&quot; when you try to run a worker locally. It needs to be on a proper domain.</source>
          <target state="translated">[1] Chrome and Opera give an error &quot;&lt;code&gt;Uncaught SecurityError: Failed to construct 'Worker': Script at 'file:///Path/to/worker.js' cannot be accessed from origin 'null'.&lt;/code&gt;&quot; when you try to run a worker locally. It needs to be on a proper domain.</target>
        </trans-unit>
        <trans-unit id="14d2285a18e12af793810941f6cb61516c1d710a" translate="yes" xml:space="preserve">
          <source>[1] In Gecko, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; is not dispatched if the source node is moved or removed during the drag (e.g. on drop or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;). &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=460801&quot;&gt;bug 460801&lt;/a&gt;</source>
          <target state="translated">[1] In Gecko, &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragend&quot;&gt;dragend&lt;/a&gt;&lt;/code&gt; is not dispatched if the source node is moved or removed during the drag (e.g. on drop or &lt;code&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Events/dragover&quot;&gt;dragover&lt;/a&gt;&lt;/code&gt;). &lt;a href=&quot;https://bugzilla.mozilla.org/show_bug.cgi?id=460801&quot;&gt;bug 460801&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0c147ebbd08509d39d80d1182c4d90127c54128" translate="yes" xml:space="preserve">
          <source>[1] Internet Explorer does not support &lt;a href=&quot;../transferable&quot;&gt;&lt;code&gt;Transferable&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">[1] Internet Explorer does not support &lt;a href=&quot;../transferable&quot;&gt;&lt;code&gt;Transferable&lt;/code&gt;&lt;/a&gt; objects.</target>
        </trans-unit>
        <trans-unit id="878b3e058e60cd1842db5a2e7282f7442b16fce3" translate="yes" xml:space="preserve">
          <source>[1] Service workers (and &lt;a href=&quot;push_api&quot;&gt;Push&lt;/a&gt;) have been disabled in the &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/organizations/&quot;&gt;Firefox 45 &amp;amp; 52 &amp;amp; 60 Extended Support Releases&lt;/a&gt; (ESR.)</source>
          <target state="translated">[1] Service workers (and &lt;a href=&quot;push_api&quot;&gt;Push&lt;/a&gt;) have been disabled in the &lt;a href=&quot;https://www.mozilla.org/en-US/firefox/organizations/&quot;&gt;Firefox 45 &amp;amp; 52 &amp;amp; 60 Extended Support Releases&lt;/a&gt; (ESR.)</target>
        </trans-unit>
        <trans-unit id="179a9641d2254ee2ca6dbeab3a2e2da7f5309985" translate="yes" xml:space="preserve">
          <source>[1] Speech recognition interfaces are currently prefixed on Chrome, so you'll need to prefix interface names appropriately, e.g. &lt;code&gt;webkitSpeechRecognition&lt;/code&gt;; You'll also need to serve your code through a web server for recognition to work.</source>
          <target state="translated">[1] Speech recognition interfaces are currently prefixed on Chrome, so you'll need to prefix interface names appropriately, e.g. &lt;code&gt;webkitSpeechRecognition&lt;/code&gt;; You'll also need to serve your code through a web server for recognition to work.</target>
        </trans-unit>
        <trans-unit id="10414ca55b7bbc8c714a39f9fa591124f5d9fe4a" translate="yes" xml:space="preserve">
          <source>[1] This interface's features are still implemented on the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">[1] This interface's features are still implemented on the &lt;a href=&quot;document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt; object.</target>
        </trans-unit>
        <trans-unit id="2c47f0c9bcbeae5ede8e179f8563bb25efa4f305" translate="yes" xml:space="preserve">
          <source>[1] To determine if a sender has at least one active encoding, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; gets its parameters using &lt;a href=&quot;../rtcrtpsender/getparameters&quot;&gt;&lt;code&gt;RTCRtpSender.getParameters()&lt;/code&gt;&lt;/a&gt;, then looks at the parameters' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpParameters/encodings&quot;&gt;&lt;code&gt;encodings&lt;/code&gt;&lt;/a&gt; property; if any of the listed encodings has its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;true&lt;/code&gt;, the sender has an active encoding.</source>
          <target state="translated">[1] To determine if a sender has at least one active encoding, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; gets its parameters using &lt;a href=&quot;../rtcrtpsender/getparameters&quot;&gt;&lt;code&gt;RTCRtpSender.getParameters()&lt;/code&gt;&lt;/a&gt;, then looks at the parameters' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpParameters/encodings&quot;&gt;&lt;code&gt;encodings&lt;/code&gt;&lt;/a&gt; property; if any of the listed encodings has its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;true&lt;/code&gt;, the sender has an active encoding.</target>
        </trans-unit>
        <trans-unit id="1080863bfad749d50b17a8bfdbef03d8825960c9" translate="yes" xml:space="preserve">
          <source>[1] To determine if a sender has at least one active encoding, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; gets its parameters using &lt;a href=&quot;rtcrtpsender/getparameters&quot;&gt;&lt;code&gt;RTCRtpSender.getParameters()&lt;/code&gt;&lt;/a&gt;, then looks at the parameters' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpParameters/encodings&quot;&gt;&lt;code&gt;encodings&lt;/code&gt;&lt;/a&gt; property; if any of the listed encodings has its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;true&lt;/code&gt;, the sender has an active encoding.</source>
          <target state="translated">[1] To determine if a sender has at least one active encoding, the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Glossary/user_agent&quot;&gt;user agent&lt;/a&gt; gets its parameters using &lt;a href=&quot;rtcrtpsender/getparameters&quot;&gt;&lt;code&gt;RTCRtpSender.getParameters()&lt;/code&gt;&lt;/a&gt;, then looks at the parameters' &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpParameters/encodings&quot;&gt;&lt;code&gt;encodings&lt;/code&gt;&lt;/a&gt; property; if any of the listed encodings has its &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/active&quot;&gt;&lt;code&gt;active&lt;/code&gt;&lt;/a&gt; property set to &lt;code&gt;true&lt;/code&gt;, the sender has an active encoding.</target>
        </trans-unit>
        <trans-unit id="8e919050c78e2eb092b19334923a4884b4b8ea37" translate="yes" xml:space="preserve">
          <source>[1] When &lt;code&gt;create&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value of &lt;code&gt;exclusive&lt;/code&gt; is irrelevant and ignored.</source>
          <target state="translated">[1] When &lt;code&gt;create&lt;/code&gt; is &lt;code&gt;false&lt;/code&gt;, the value of &lt;code&gt;exclusive&lt;/code&gt; is irrelevant and ignored.</target>
        </trans-unit>
        <trans-unit id="bfb1589a051fb9e4f70cb77b5ef8c2797251d896" translate="yes" xml:space="preserve">
          <source>[2] As of Safari 7.1.2, you can call &lt;code&gt;console.log&lt;/code&gt; from inside a worker, but it won't print anything to the console. Older versions of Safari don't allow you to call &lt;code&gt;console.log&lt;/code&gt; from inside a worker.</source>
          <target state="translated">[2] As of Safari 7.1.2, you can call &lt;code&gt;console.log&lt;/code&gt; from inside a worker, but it won't print anything to the console. Older versions of Safari don't allow you to call &lt;code&gt;console.log&lt;/code&gt; from inside a worker.</target>
        </trans-unit>
        <trans-unit id="8da93cb6380d2eecbafaa6325129de644b082a14" translate="yes" xml:space="preserve">
          <source>[2] Can be enabled via the &lt;code&gt;media.webspeech.recognition.enable&lt;/code&gt; flag in &lt;a&gt;about:config&lt;/a&gt;, although note that currently speech recognition won't work on Desktop Firefox &amp;mdash; it will be properly exposed soon, once the required internal permissions are sorted out.</source>
          <target state="translated">[2] Can be enabled via the &lt;code&gt;media.webspeech.recognition.enable&lt;/code&gt; flag in &lt;a&gt;about:config&lt;/a&gt;, although note that currently speech recognition won't work on Desktop Firefox &amp;mdash; it will be properly exposed soon, once the required internal permissions are sorted out.</target>
        </trans-unit>
        <trans-unit id="631e9c7289963ec1fba68be556de5fab193a8e03" translate="yes" xml:space="preserve">
          <source>[2] This feature is currently hidden behind a flag &amp;mdash; to enable it and experiment, go to about:config and enable dom.indexedDB.experimental.</source>
          <target state="translated">[2] This feature is currently hidden behind a flag &amp;mdash; to enable it and experiment, go to about:config and enable dom.indexedDB.experimental.</target>
        </trans-unit>
        <trans-unit id="1ceecb07fe5bec0ab760115a4aa589331ea6b1d0" translate="yes" xml:space="preserve">
          <source>[3] AKA &quot;Private Browsing Mode&quot; (Firefox) and &quot;Incognito&quot; (Chrome).</source>
          <target state="translated">[3] AKA &quot;Private Browsing Mode&quot; (Firefox) and &quot;Incognito&quot; (Chrome).</target>
        </trans-unit>
        <trans-unit id="e13214c517f2bc7af9ad01d337425ffd23bf38e8" translate="yes" xml:space="preserve">
          <source>[3] This feature is implemented prefixed as &lt;code&gt;webkitURL&lt;/code&gt;.</source>
          <target state="translated">[3] This feature is implemented prefixed as &lt;code&gt;webkitURL&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="792a418df69109ae32e213cb1cc338711b7054f3" translate="yes" xml:space="preserve">
          <source>[4] Safari &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=116359&quot;&gt;removed SharedWorker support&lt;/a&gt;.</source>
          <target state="translated">[4] Safari &lt;a href=&quot;https://bugs.webkit.org/show_bug.cgi?id=116359&quot;&gt;removed SharedWorker support&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="71c32a040534e289f1c01307a09f88e171ca8c42" translate="yes" xml:space="preserve">
          <source>[enter description]</source>
          <target state="translated">[enter description]</target>
        </trans-unit>
        <trans-unit id="08534f33c201a45017b502e90a800f1b708ebcb3" translate="yes" xml:space="preserve">
          <source>\</source>
          <target state="translated">\</target>
        </trans-unit>
        <trans-unit id="6e3d5f575d8cc3b5211d393dae6e8dfc82b54c77" translate="yes" xml:space="preserve">
          <source>\left(a+bi\right)e^{i} , \left(c+di\right)e^{2i} , \left(f+gi\right)e^{3i}</source>
          <target state="translated">\left(a+bi\right)e^{i} , \left(c+di\right)e^{2i} , \left(f+gi\right)e^{3i}</target>
        </trans-unit>
        <trans-unit id="87f4324b5b95d003ae6e7287e63fc520bfda280b" translate="yes" xml:space="preserve">
          <source>\left[ \begin{array}{ccc} a &amp;amp; c &amp;amp; e \\ b &amp;amp; d &amp;amp; f \\ 0 &amp;amp; 0 &amp;amp; 1 \end{array} \right]</source>
          <target state="translated">\left[ \begin{array}{ccc} a &amp;amp; c &amp;amp; e \\ b &amp;amp; d &amp;amp; f \\ 0 &amp;amp; 0 &amp;amp; 1 \end{array} \right]</target>
        </trans-unit>
        <trans-unit id="86f7e437faa5a7fce15d1ddcb9eaeaea377667b8" translate="yes" xml:space="preserve">
          <source>a</source>
          <target state="translated">a</target>
        </trans-unit>
        <trans-unit id="4706b3722c78cb06aa127405460caec3d0c571e6" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; is raised if the index number is greater than or equal to &lt;code&gt;numberOfItems&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;INDEX_SIZE_ERR&lt;/code&gt; はインデックス番号より大きいか等しい場合に発生される &lt;code&gt;numberOfItems&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7401565154f7690c023d54a0c11daacd0d105c4d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; is raised if &lt;code&gt;unitType&lt;/code&gt; is &lt;code&gt;SVG_ANGLETYPE_UNKNOWN&lt;/code&gt; or not a valid unit type constant (one of the other &lt;code&gt;SVG_ANGLETYPE_*&lt;/code&gt; constants defined on this interface). a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when the length corresponds to a read only attribute or when the object itself is read only.</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; があれば上昇する &lt;code&gt;unitType&lt;/code&gt; ある &lt;code&gt;SVG_ANGLETYPE_UNKNOWN&lt;/code&gt; または無効ユニットタイプ定数（他の一つ &lt;code&gt;SVG_ANGLETYPE_*&lt;/code&gt; このインターフェイスで定義された定数）。A &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; はに長さが対応するだけの属性を読み取るとき、またはオブジェクト自体が読み取り専用であるときに発生します。</target>
        </trans-unit>
        <trans-unit id="fd89625fd50148c103db19a6a80563a9e0aa4747" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; is raised if &lt;code&gt;unitType&lt;/code&gt; is &lt;code&gt;SVG_LENGTHTYPE_UNKNOWN&lt;/code&gt; or not a valid unit type constant (one of the other &lt;code&gt;SVG_LENGTHTYPE_*&lt;/code&gt; constants defined on this interface).</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;NOT_SUPPORTED_ERR&lt;/code&gt; があれば上昇する &lt;code&gt;unitType&lt;/code&gt; ある &lt;code&gt;SVG_LENGTHTYPE_UNKNOWN&lt;/code&gt; または無効ユニットタイプ定数（他の一つ &lt;code&gt;SVG_LENGTHTYPE_*&lt;/code&gt; このインターフェイスで定義された定数）。</target>
        </trans-unit>
        <trans-unit id="b658d3e64c030c46188bb501f9fd26adc952a017" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when attempting to modify a read only attribute or when the object itself is read only.</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; は、オブジェクト自体が読み取り専用の場合にのみ、属性の読み取りを変更しようとしたときに上げたりしています。</target>
        </trans-unit>
        <trans-unit id="2f8964157f5954e5e456549734c0a0094d5af691" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when the length corresponds to a read only attribute or when the object itself is read only.</source>
          <target state="translated">A &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; はに長さが対応するだけの属性を読み取るとき、またはオブジェクト自体が読み取り専用であるときに発生します。</target>
        </trans-unit>
        <trans-unit id="b25abf8a6c12fa9d7954392099a054692f27884d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when the list corresponds to a read only attribute or when the object itself is read only.</source>
          <target state="translated">A &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; はにリストが対応するが、専用属性を読んだとき、またはオブジェクト自体が読み取り専用の場合に発生します。</target>
        </trans-unit>
        <trans-unit id="fe2f9a8b4a3ebe40be4ab7c6e2545b4dbb4a5677" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;SYNTAX_ERR&lt;/code&gt; is raised if the assigned string cannot be parsed as a valid &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt;&lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt;&lt;/a&gt;. a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; is raised when the length corresponds to a read only attribute or when the object itself is read only.</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;SYNTAX_ERR&lt;/code&gt; は、割り当てられた文字列が有効であると解析できない場合にスローされた&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/angle&quot;&gt; &lt;code&gt;&amp;lt;angle&amp;gt;&lt;/code&gt; &lt;/a&gt;。A &lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;NO_MODIFICATION_ALLOWED_ERR&lt;/code&gt; はに長さが対応するだけの属性を読み取るとき、またはオブジェクト自体が読み取り専用であるときに発生します。</target>
        </trans-unit>
        <trans-unit id="0141036b7c50b07dc28ca582206fae76b4a0b663" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;domexception&quot;&gt;&lt;code&gt;DOMException&lt;/code&gt;&lt;/a&gt; with code &lt;code&gt;SYNTAX_ERR&lt;/code&gt; is raised if the assigned string cannot be parsed as a valid &lt;a href=&quot;https://developer.mozilla.org/en/SVG/Content_type#Length&quot;&gt;&amp;lt;length&amp;gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;domexception&quot;&gt; &lt;code&gt;DOMException&lt;/code&gt; &lt;/a&gt;コードと &lt;code&gt;SYNTAX_ERR&lt;/code&gt; は、割り当てられた文字列が有効であると解析できない場合にスローされる&lt;a href=&quot;https://developer.mozilla.org/en/SVG/Content_type#Length&quot;&gt;&amp;lt;長さ&amp;gt;&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="774a0c9914af39ce0c2e77a4dc5d1998b507db9e" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves if the access to first-party storage was granted, and rejects if access was denied.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;の解決は、ファーストパーティのストレージへのアクセスが許可された場合に、アクセスが拒否された拒否した場合。</target>
        </trans-unit>
        <trans-unit id="437fdf32516e8a6ca311732fe66f23798460e61e" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object is found and deleted, and &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt;オブジェクトが見つかって削除された場合は &lt;code&gt;true&lt;/code&gt; 、それ以外の場合は &lt;code&gt;false&lt;/code&gt; に解決される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="56f0d54402257d66d2640216a00c49cb4ac18d94" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to &lt;code&gt;true&lt;/code&gt; if the cache exists or false if not.</source>
          <target state="translated">キャッシュが存在する場合は &lt;code&gt;true&lt;/code&gt; 、存在しない場合はfalseに解決される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="5e95e1841fde6d96a4b0e772cc0916f13b3cd3bf" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to an array of all matching requests in the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;のすべての一致した要求の配列にことを決議&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt;オブジェクト。</target>
        </trans-unit>
        <trans-unit id="e6d4d22be5f59e376180cd52f71be5e46fd8e02a" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to the matching &lt;a href=&quot;../response&quot;&gt;&lt;code&gt;Response&lt;/code&gt;&lt;/a&gt;. If no matching response to the specified request is found, the promise resolves with &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">一致する&lt;a href=&quot;../response&quot;&gt; &lt;code&gt;Response&lt;/code&gt; に&lt;/a&gt;解決される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。指定されたリクエストに対する一致する応答が見つからない場合、promiseは &lt;code&gt;undefined&lt;/code&gt; で解決されます。</target>
        </trans-unit>
        <trans-unit id="d4c4bbbe5d04fae943e46c17008cf8595a386532" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves to true if the cache entry is deleted, or false otherwise.</source>
          <target state="translated">キャッシュエントリが削除された場合はtrue、それ以外の場合はfalseに解決される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="39de01b60f99c52665013693b541ec1efd1ef1f6" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with a reference to a &lt;a href=&quot;../windowclient&quot;&gt;&lt;code&gt;WindowClient&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../windowclient&quot;&gt; &lt;code&gt;WindowClient&lt;/code&gt; &lt;/a&gt;への参照で解決される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="2825cf0e69ad5ea178e9aaa2759ffd79783b4dad" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt;&lt;code&gt;Promise&lt;/code&gt;&lt;/a&gt; that resolves with an array of the &lt;a href=&quot;../cache&quot;&gt;&lt;code&gt;Cache&lt;/code&gt;&lt;/a&gt; names inside the &lt;a href=&quot;../cachestorage&quot;&gt;&lt;code&gt;CacheStorage&lt;/code&gt;&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;../cachestorage&quot;&gt; &lt;code&gt;CacheStorage&lt;/code&gt; &lt;/a&gt;オブジェクト内の&lt;a href=&quot;../cache&quot;&gt; &lt;code&gt;Cache&lt;/code&gt; &lt;/a&gt;名の配列で解決される&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise&quot;&gt; &lt;code&gt;Promise&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="34928c61486c15d543e014284ae2a5080cecba1b" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;MessageEventSource&lt;/code&gt; (which can be a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowProxy&quot;&gt;&lt;code&gt;WindowProxy&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../messageport&quot;&gt;&lt;code&gt;MessagePort&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../serviceworker&quot;&gt;&lt;code&gt;ServiceWorker&lt;/code&gt;&lt;/a&gt; object) representing the message emitter.</source>
          <target state="translated">&lt;code&gt;MessageEventSource&lt;/code&gt; （あり得る&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/WindowProxy&quot;&gt; &lt;code&gt;WindowProxy&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;../messageport&quot;&gt; &lt;code&gt;MessagePort&lt;/code&gt; &lt;/a&gt;、又は&lt;a href=&quot;../serviceworker&quot;&gt; &lt;code&gt;ServiceWorker&lt;/code&gt; の&lt;/a&gt;メッセージエミッタを表すオブジェクト）。</target>
        </trans-unit>
        <trans-unit id="86ebcd98b3ba51b776b287ab73e385755284d48c" translate="yes" xml:space="preserve">
          <source>a negative number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c37f5d4c24ebe19faceff2fa752f48ced17e4bc7" translate="yes" xml:space="preserve">
          <source>a number</source>
          <target state="translated">すうすう</target>
        </trans-unit>
        <trans-unit id="75e36bb9195e419f37609272a26c4e98941ff732" translate="yes" xml:space="preserve">
          <source>a prefix &lt;code&gt;&quot;data-&quot;&lt;/code&gt; is added;</source>
          <target state="translated">接頭辞 &lt;code&gt;&quot;data-&quot;&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="645d64d5932c9c8857626b5399835e1311631b78" translate="yes" xml:space="preserve">
          <source>a prefix &lt;code&gt;data-&lt;/code&gt; is added;</source>
          <target state="translated">接頭辞 &lt;code&gt;data-&lt;/code&gt; が追加されます。</target>
        </trans-unit>
        <trans-unit id="66f76d333064700ae9eacf0b67b6d575ce88c90a" translate="yes" xml:space="preserve">
          <source>a record that doesn't exist in the database</source>
          <target state="translated">データベースに存在しないレコード</target>
        </trans-unit>
        <trans-unit id="40a522f9f12fcbc2f3ff3b802f7db4c29b4713c1" translate="yes" xml:space="preserve">
          <source>a record that has an undefined value</source>
          <target state="translated">未定義の値を持つレコード</target>
        </trans-unit>
        <trans-unit id="e068bff98fa3f77a8cc6eeedb532854435c62093" translate="yes" xml:space="preserve">
          <source>a time value</source>
          <target state="translated">時間値</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
