<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="codeigniter">
    <body>
      <group id="codeigniter">
        <trans-unit id="28584ae787d3c9cd353cf23fc0d739433073d9ff" translate="yes" xml:space="preserve">
          <source>If you still have questions about the framework or your own CodeIgniter code, you can:</source>
          <target state="translated">フレームワークや自分のCodeIgniterのコードについてまだ質問がある場合は、以下を参照してください。</target>
        </trans-unit>
        <trans-unit id="b9d314bd31da4b94b15ab549e5d19fb3faf96301" translate="yes" xml:space="preserve">
          <source>If you store your array item in a language file that is not loaded automatically by CI, you&amp;rsquo;ll need to remember to load it in your controller using:</source>
          <target state="translated">CIによって自動的にロードされない言語ファイルに配列項目を保存する場合は、以下を使用してコントローラーにロードすることを覚えておく必要があります。</target>
        </trans-unit>
        <trans-unit id="bc97df695b8eeaae5246dabaf286c99452495314" translate="yes" xml:space="preserve">
          <source>If you submit the form you should simply see the form reload. That&amp;rsquo;s because you haven&amp;rsquo;t set up any validation rules yet.</source>
          <target state="translated">フォームを送信すると、フォームの再読み込みが表示されます。これは、まだ検証ルールを設定していないためです。</target>
        </trans-unit>
        <trans-unit id="48878380f484b23f471a4380ec8bc1aa5b4529c4" translate="yes" xml:space="preserve">
          <source>If you submitted something invalid, or perhaps missed a required item, the form is redisplayed containing your data along with an error message describing the problem.</source>
          <target state="translated">何か無効なものを送信した場合、または必要な項目を見逃した場合、フォームにはあなたのデータが再表示され、問題点を説明するエラーメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="f3b7cdb5dadd7ccefcd07fcf7dbb6f812f858990" translate="yes" xml:space="preserve">
          <source>If you use a &amp;lt;select&amp;gt; menu, this function permits you to display the menu item that was selected.</source>
          <target state="translated">&amp;lt;select&amp;gt;メニューを使用する場合、この関数を使用して、選択したメニュー項目を表示できます。</target>
        </trans-unit>
        <trans-unit id="652f43665be11137df3e7fe1fd1c0e5c486d4f05" translate="yes" xml:space="preserve">
          <source>If you use an array as the name of a form field, you must supply it as an array to the function. Example:</source>
          <target state="translated">フォームフィールドの名前として配列を使用する場合は、それを配列として関数に与えなければなりません。例</target>
        </trans-unit>
        <trans-unit id="91cd0499b54e75ec773a0bbf59d1dbaedfe650a7" translate="yes" xml:space="preserve">
          <source>If you use an object, the class variables will be turned into array elements.</source>
          <target state="translated">オブジェクトを使用した場合、クラス変数は配列要素に変わります。</target>
        </trans-unit>
        <trans-unit id="967fb1e41e75ad60779208d940bde78b46d0e730" translate="yes" xml:space="preserve">
          <source>If you use any of the form helper functions listed in this page the form values will be prepped automatically, so there is no need to call this function. Use it only if you are creating your own form elements.</source>
          <target state="translated">このページに記載されているフォームヘルパー関数を使用する場合、フォームの値は自動的に準備されるので、この関数を呼び出す必要はありません。独自のフォーム要素を作成する場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="35afdbf06a196d99eed07b5a412e447072b7f1f1" translate="yes" xml:space="preserve">
          <source>If you use any of the form helper functions listed on this page, the form values will be automatically escaped, so there is no need to call this function. Use it only if you are creating your own form elements.</source>
          <target state="translated">このページに記載されているフォームヘルパー関数を使用した場合、フォームの値は自動的にエスケープされますので、この関数を呼び出す必要はありません。独自のフォーム要素を作成する場合にのみ使用してください。</target>
        </trans-unit>
        <trans-unit id="4667fcbdea6ff8448316f8c95a78055fed83a8f3" translate="yes" xml:space="preserve">
          <source>If you use back-references you must use the dollar syntax rather than the double backslash syntax.</source>
          <target state="translated">後方参照を使用する場合は、ダブルバックスラッシュ構文ではなくドル構文を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="7ac2d0293267d9f069f973bef5a5464d42f1add0" translate="yes" xml:space="preserve">
          <source>If you use data types other than strings, or if you have several different data types, you will place each parameter into its own array, with the data type in the second position:</source>
          <target state="translated">文字列以外のデータ型を使用している場合や、複数の異なるデータ型を使用している場合は、データ型を2番目の位置にして、それぞれのパラメータを独自の配列に配置します。</target>
        </trans-unit>
        <trans-unit id="5b892bdcedb48c694bba2ac902882e0b3c747f6e" translate="yes" xml:space="preserve">
          <source>If you use dynamic queries that change based on information in your URI (when using pagination, for example), each instance of the query will produce its own cache file. It&amp;rsquo;s possible, therefore, to end up with many times more cache files than you have queries.</source>
          <target state="translated">URIの情報に基づいて変化する動的クエリを使用する場合（ページ付けを使用する場合など）、クエリの各インスタンスは独自のキャッシュファイルを生成します。したがって、クエリよりも何倍ものキャッシュファイルが作成される可能性があります。</target>
        </trans-unit>
        <trans-unit id="6bec09a5c11399ce7442803a10c3045ac7a3bc31" translate="yes" xml:space="preserve">
          <source>If you use multiple function called they will be assembled properly based on whether you are doing an insert or an update:</source>
          <target state="translated">複数の関数を使用している場合は、挿入か更新かに基づいて適切に組み立てることができます。</target>
        </trans-unit>
        <trans-unit id="03545ad795bed87b760e275cdfc2c43e74441099" translate="yes" xml:space="preserve">
          <source>If you use multiple function calls they will be chained together with AND between them:</source>
          <target state="translated">複数の関数呼び出しを使用する場合は、それらはそれらの間の AND で連結されます。</target>
        </trans-unit>
        <trans-unit id="15eb4a501ff63693881aa28ece82b9d2ebd2116e" translate="yes" xml:space="preserve">
          <source>If you use multiple method calls they will be chained together with AND between them:</source>
          <target state="translated">複数のメソッド呼び出しを使用する場合、それらはそれらの間の AND で連結されます。</target>
        </trans-unit>
        <trans-unit id="f7574d6e2ddd3b92d121ce18b2a4b4c4aaf9bfad" translate="yes" xml:space="preserve">
          <source>If you use the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt;, then &lt;code&gt;form_open()&lt;/code&gt; will automatically insert a hidden csrf field in your forms. If not, then you can use &lt;code&gt;get_csrf_token_name()&lt;/code&gt; and &lt;code&gt;get_csrf_hash()&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../helpers/form_helper&quot;&gt;フォームヘルパー&lt;/a&gt;を使用する場合、 &lt;code&gt;form_open()&lt;/code&gt; はフォームに非表示のcsrfフィールドを自動的に挿入します。そうでない場合は、 &lt;code&gt;get_csrf_token_name()&lt;/code&gt; および &lt;code&gt;get_csrf_hash()&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="eb6297f2fae2a879e7d5f69c4bf3dd6e23be452d" translate="yes" xml:space="preserve">
          <source>If you use this feature you must set up your class constructor to expect data:</source>
          <target state="translated">この機能を使用する場合は、データを期待するクラスのコンストラクタを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c15a193e2193feb77ccb6cbebe4f4ac7cd2923e2" translate="yes" xml:space="preserve">
          <source>If you visit your site using the URL you did earlier you should see your new view. The URL was similar to this:</source>
          <target state="translated">先ほどのURLを使ってサイトにアクセスすると、新しいビューが表示されるはずです。URLはこんな感じでした。</target>
        </trans-unit>
        <trans-unit id="4d36b0a3bcf698d48ce2b9991a1a3111eccc60a3" translate="yes" xml:space="preserve">
          <source>If you want a specific row returned you can submit the row number as a digit in the first parameter:</source>
          <target state="translated">特定の行を返したい場合は、最初のパラメータに行番号を数字で指定します。</target>
        </trans-unit>
        <trans-unit id="734f90c33fef947cc599e343a48a5440046b3799" translate="yes" xml:space="preserve">
          <source>If you want to add an extra attribute to be added to every link rendered by the pagination class, you can set them as key/value pairs in the &amp;ldquo;attributes&amp;rdquo; config:</source>
          <target state="translated">ページネーションクラスによってレンダリングされるすべてのリンクに追加する追加の属性を追加する場合は、「属性」構成でキー/値ペアとして設定できます。</target>
        </trans-unit>
        <trans-unit id="ff5edd8b65e8ad536889f906c728cf96637147b9" translate="yes" xml:space="preserve">
          <source>If you want to add userdata one value at a time, &lt;code&gt;set_userdata()&lt;/code&gt; also supports this syntax:</source>
          <target state="translated">userdataの値を1つずつ追加したい場合、 &lt;code&gt;set_userdata()&lt;/code&gt; もこの構文をサポートします。</target>
        </trans-unit>
        <trans-unit id="659b631da8122b7d2788d01a6d37b58758732551" translate="yes" xml:space="preserve">
          <source>If you want to benchmark anything within your controller functions you must set your own start/end points.</source>
          <target state="translated">コントローラの機能の中でベンチマークを行いたい場合は、独自のスタートポイントを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="80e860e734d96f9bfb0815518a27a78affa6f4b8" translate="yes" xml:space="preserve">
          <source>If you want to control where the wildcard (%) is placed, you can use an optional third argument. Your options are &amp;lsquo;before&amp;rsquo;, &amp;lsquo;after&amp;rsquo; and &amp;lsquo;both&amp;rsquo; (which is the default).</source>
          <target state="translated">ワイルドカード（％）の配置場所を制御する場合は、オプションの3番目の引数を使用できます。オプションは、「前」、「後」、「両方」（デフォルト）です。</target>
        </trans-unit>
        <trans-unit id="7d54a2d3a13881810cf3dc63da813e25fff99e7a" translate="yes" xml:space="preserve">
          <source>If you want to create hidden input fields with extra attributes:</source>
          <target state="translated">余分な属性を持つ非表示の入力フィールドを作成したい場合。</target>
        </trans-unit>
        <trans-unit id="a399a70dd5a4c4eeea8ac23905f8f36b3f812470" translate="yes" xml:space="preserve">
          <source>If you want to delete all data from a table, you can use the truncate() function, or empty_table().</source>
          <target state="translated">テーブルからすべてのデータを削除したい場合は、truncate()関数やempty_table()を使用することができます。</target>
        </trans-unit>
        <trans-unit id="097a3aaa88de4581175345c032e0500ef40e865e" translate="yes" xml:space="preserve">
          <source>If you want to download an existing file from your server you&amp;rsquo;ll need to do the following:</source>
          <target state="translated">サーバーから既存のファイルをダウンロードする場合は、次の手順を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="73fcb063d3ffae27a29cc91996403ee156cde23d" translate="yes" xml:space="preserve">
          <source>If you want to experiment with this feature (on your own risk), simply separate the multiple server paths with commas:</source>
          <target state="translated">この機能を試してみたい場合は(自己責任で)、複数のサーバーパスをカンマで区切るだけです。</target>
        </trans-unit>
        <trans-unit id="0104a304532aedb4f22dad1cd34a2e3b5e77b502" translate="yes" xml:space="preserve">
          <source>If you want to filter HTML attribute values, use &lt;a href=&quot;../general/common_functions#html_escape&quot;&gt;&lt;code&gt;html_escape()&lt;/code&gt;&lt;/a&gt; instead!</source>
          <target state="translated">HTML属性値をフィルタリングする場合は、代わりに&lt;a href=&quot;../general/common_functions#html_escape&quot;&gt; &lt;code&gt;html_escape()&lt;/code&gt; を&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="456308679920034ef56383dd58cf5c7b46e7fe57" translate="yes" xml:space="preserve">
          <source>If you want to mark multiple items as flashdata, simply pass the keys as an array:</source>
          <target state="translated">複数の項目をフラッシュデータとしてマークしたい場合は、キーを配列として渡すだけです。</target>
        </trans-unit>
        <trans-unit id="cf4bc79725d64d9aa5e23ec13a30f72b0387d7d3" translate="yes" xml:space="preserve">
          <source>If you want to retrieve all of the existing userdata, you can simply omit the item key (magic getter only works for properties):</source>
          <target state="translated">既存のuserdataをすべて取得したい場合は、単にアイテムキーを省略することができます(マジックゲッターはプロパティに対してのみ動作します)。</target>
        </trans-unit>
        <trans-unit id="c766def0705d9c4685396ee6cf736878917fae9e" translate="yes" xml:space="preserve">
          <source>If you want to support multiple languages in your application, you would provide folders inside your &lt;strong&gt;application/language/&lt;/strong&gt; directory for each of them, and you would specify the default language in your &lt;strong&gt;application/config/config.php&lt;/strong&gt;.</source>
          <target state="translated">アプリケーションで複数の言語をサポートする場合は、&lt;strong&gt;application / language /&lt;/strong&gt;ディレクトリ内にそれぞれのフォルダーを提供し、&lt;strong&gt;application / config / config.phpで&lt;/strong&gt;デフォルトの言語を指定します。</target>
        </trans-unit>
        <trans-unit id="4117f2b10d548375d07dd322bc5bb59e1a5fb6bf" translate="yes" xml:space="preserve">
          <source>If you want to utilize the PUT, DELETE, PATCH or other exotic request methods, they can only be accessed via a special input stream, that can only be read once. This isn&amp;rsquo;t as easy as just reading from e.g. the &lt;code&gt;$_POST&lt;/code&gt; array, because it will always exist and you can try and access multiple variables without caring that you might only have one shot at all of the POST data.</source>
          <target state="translated">PUT、DELETE、PATCH、またはその他のエキゾチックなリクエストメソッドを利用する場合、これらのメソッドには、一度しか読み取ることができない特別な入力ストリームを介してのみアクセスできます。これは、たとえば &lt;code&gt;$_POST&lt;/code&gt; 配列から読み取るだけでは簡単ではありません。これは常に存在し、すべてのPOSTデータで1ショットしかないことを気にせずに複数の変数にアクセスして試すことができるためです。</target>
        </trans-unit>
        <trans-unit id="a7820149ebe1144da192b3e6ad99f607a81093b8" translate="yes" xml:space="preserve">
          <source>If you want to validate more than one array during a single execution, then you should call the &lt;code&gt;reset_validation()&lt;/code&gt; method before setting up rules and validating the new array.</source>
          <target state="translated">1回の実行で複数の配列を検証する場合は、ルールを設定して新しい配列を検証する前に、 &lt;code&gt;reset_validation()&lt;/code&gt; メソッドを呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="f2eb9e437baeb226733e2227e9c91eb482bd1652" translate="yes" xml:space="preserve">
          <source>If you want to verify that a session value exists, simply check with &lt;code&gt;isset()&lt;/code&gt;:</source>
          <target state="translated">セッション値が存在することを確認したい場合は、単に &lt;code&gt;isset()&lt;/code&gt; で確認してください：</target>
        </trans-unit>
        <trans-unit id="dfcc05b2163d2472b751d7245b790c06b473d273" translate="yes" xml:space="preserve">
          <source>If you want your benchmark data to be available to the &lt;a href=&quot;../general/profiling&quot;&gt;Profiler&lt;/a&gt; all of your marked points must be set up in pairs, and each mark point name must end with _start and _end. Each pair of points must otherwise be named identically. Example:</source>
          <target state="translated">&lt;a href=&quot;../general/profiling&quot;&gt;プロファイラーで&lt;/a&gt;ベンチマークデータを利用できるようにする場合は、すべてのマークポイントをペアで設定し、各マークポイント名の末尾を_startおよび_endにする必要があります。それ以外の点の各ペアは、同じ名前にする必要があります。例：</target>
        </trans-unit>
        <trans-unit id="625dc3d1c6dea79490c75c4578a8c816555a13d6" translate="yes" xml:space="preserve">
          <source>If you wanted to not list the specific pages (for example, you only want &amp;ldquo;next&amp;rdquo; and &amp;ldquo;previous&amp;rdquo; links), you can suppress their rendering by adding:</source>
          <target state="translated">特定のページをリストしない場合（たとえば、「次へ」および「前へ」のリンクのみが必要な場合）、次の行を追加することにより、それらのレンダリングを抑制できます。</target>
        </trans-unit>
        <trans-unit id="237ff9bf8868e233ad722bd9292b16e07046210e" translate="yes" xml:space="preserve">
          <source>If you wish to change that however, you need to use the &lt;code&gt;initialize()&lt;/code&gt; method. It accepts an associative array of parameters, all of which are optional:</source>
          <target state="translated">ただし、変更したい場合は、 &lt;code&gt;initialize()&lt;/code&gt; メソッドを使用する必要があります。パラメータの連想配列を受け入れます。これらはすべてオプションです。</target>
        </trans-unit>
        <trans-unit id="a1019555098b0ae99d7362f12c90350b94b95381" translate="yes" xml:space="preserve">
          <source>If you wish to increase security by hiding the location of your CodeIgniter files you can rename the system and application folders to something more private. If you do rename them, you must open your main &lt;em&gt;index.php&lt;/em&gt; file and set the &lt;code&gt;$system_path&lt;/code&gt; and &lt;code&gt;$application_folder&lt;/code&gt; variables at the top of the file with the new name you&amp;rsquo;ve chosen.</source>
          <target state="translated">CodeIgniterファイルの場所を非表示にしてセキュリティを強化したい場合は、システムフォルダーとアプリケーションフォルダーの名前をよりプライベートな名前に変更できます。それらの名前を変更する場合は、メインの&lt;em&gt;index.php&lt;/em&gt;ファイルを開き、ファイルの先頭にある &lt;code&gt;$system_path&lt;/code&gt; 変数と &lt;code&gt;$application_folder&lt;/code&gt; 変数を、選択した新しい名前で設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7e38d84240454ae13c1f3b7d004519c548aae94a" translate="yes" xml:space="preserve">
          <source>If you wish to use an associative array in your method parameters you will need to use a struct datatype:</source>
          <target state="translated">メソッドのパラメータで連想配列を使用したい場合は、 データ型の構造体を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="5ab5597db5859ed0975cdc1e15a9b24d5b07792a" translate="yes" xml:space="preserve">
          <source>If you wish to use one of those ciphers, you&amp;rsquo;d have to pass its name in lower-case to the Encryption library.</source>
          <target state="translated">これらの暗号の1つを使用したい場合は、その名前を小文字で暗号化ライブラリに渡す必要があります。</target>
        </trans-unit>
        <trans-unit id="950cff6719cef31d34f97bc4dd11dcb6b1673c0d" translate="yes" xml:space="preserve">
          <source>If you would like the Zip archive to maintain the directory structure of the file in it, pass TRUE (boolean) in the second parameter. Example:</source>
          <target state="translated">Zip アーカイブにファイルのディレクトリ構造を維持させたい場合は、2 番目のパラメータに TRUE (boolean)を渡します。例:Zip アーカイブがファイルのディレクトリ構造を維持するようにするには、2 番目のパラメータに TRUE (boolean)を渡します。</target>
        </trans-unit>
        <trans-unit id="e8c3a3948266b4b87be158012eedad7cc86f1a45" translate="yes" xml:space="preserve">
          <source>If you would like the field name to be stored in a language file, please see &lt;a href=&quot;#translating-field-names&quot;&gt;Translating Field Names&lt;/a&gt;.</source>
          <target state="translated">フィールド名を言語ファイルに保存する場合は、&lt;a href=&quot;#translating-field-names&quot;&gt;「フィールド名の翻訳&lt;/a&gt;」を参照してください。</target>
        </trans-unit>
        <trans-unit id="a1c0ed8891a7d397e6bfe0f88dffee1cefebc253" translate="yes" xml:space="preserve">
          <source>If you would like the opening &amp;lt;select&amp;gt; to contain additional data, like an id attribute or JavaScript, you can pass it as a string in the fourth parameter:</source>
          <target state="translated">開始&amp;lt;select&amp;gt;にid属性やJavaScriptなどの追加データを含める場合は、4番目のパラメーターで文字列として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="fc4734c7855363f70cb354408d9af818a369fcc4" translate="yes" xml:space="preserve">
          <source>If you would like to disable transactions you can do so using &lt;code&gt;$this-&amp;gt;db-&amp;gt;trans_off()&lt;/code&gt;:</source>
          <target state="translated">トランザクションを無効にしたい場合は、 &lt;code&gt;$this-&amp;gt;db-&amp;gt;trans_off()&lt;/code&gt; を使用して無効にできます。</target>
        </trans-unit>
        <trans-unit id="518873f7e2a44b65fb842df5c5588494c767f2e6" translate="yes" xml:space="preserve">
          <source>If you would like to display the total elapsed time from the moment CodeIgniter starts to the moment the final output is sent to the browser, simply place this in one of your view templates:</source>
          <target state="translated">CodeIgniterが起動してから最終的な出力がブラウザに送信されるまでの経過時間を表示したい場合は、ビューテンプレートの1つにこれを配置してください。</target>
        </trans-unit>
        <trans-unit id="9030f9f263edbe47a0dd702d688e200100a7f07b" translate="yes" xml:space="preserve">
          <source>If you would like to dynamically set a config item or change an existing one, you can do so using:</source>
          <target state="translated">設定項目を動的に設定したり、既存の項目を変更したりしたい場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="4e1736cce0f765d7be3fe74ce22748806a1ecfca" translate="yes" xml:space="preserve">
          <source>If you would like to keep your views public it is also possible to move the views folder out of your application folder.</source>
          <target state="translated">ビューを公開しておきたい場合は、アプリケーションフォルダからビューフォルダを移動させることも可能です。</target>
        </trans-unit>
        <trans-unit id="e0ab37ee5733bae955051884d1241e0da7a128de" translate="yes" xml:space="preserve">
          <source>If you would like to leave some testing in place in your scripts, but not have it run unless you need it, you can disable unit testing using:</source>
          <target state="translated">スクリプトの中にテストを残しておきたいが、必要なとき以外は実行しないようにしたい場合は、ユニットテストを無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="eaa74b4ebb57fac8328a220a83300a2b7458f7bf" translate="yes" xml:space="preserve">
          <source>If you would like to rename your application directory you may do so as long as you open your main index.php file and set its name using the &lt;code&gt;$application_folder&lt;/code&gt; variable:</source>
          <target state="translated">アプリケーションディレクトリの名前を変更する場合は、メインのindex.phpファイルを開き、 &lt;code&gt;$application_folder&lt;/code&gt; 変数を使用してその名前を設定する限り、次のようにすることができます。</target>
        </trans-unit>
        <trans-unit id="a7baffd1d4ccf7b0a1cf2ffe35a6c07833e341c0" translate="yes" xml:space="preserve">
          <source>If you would like to run transactions manually you can do so as follows:</source>
          <target state="translated">トランザクションを手動で実行したい場合は、以下のようにします。</target>
        </trans-unit>
        <trans-unit id="a4db5eaf3c2fdd8470ac458a2b80b05d99927884" translate="yes" xml:space="preserve">
          <source>If you would like to set an individual cell&amp;rsquo;s tag attributes, you can use an associative array for that cell. The associative key &lt;strong&gt;data&lt;/strong&gt; defines the cell&amp;rsquo;s data. Any other key =&amp;gt; val pairs are added as key=&amp;rsquo;val&amp;rsquo; attributes to the tag:</source>
          <target state="translated">個々のセルのタグ属性を設定する場合は、そのセルに連想配列を使用できます。連想キー&lt;strong&gt;データ&lt;/strong&gt;は、セルのデータを定義します。その他のキー=&amp;gt; valのペアは、key = 'val'属性としてタグに追加されます。</target>
        </trans-unit>
        <trans-unit id="f9073873a7c68a623028ac620c75822fb529e7ae" translate="yes" xml:space="preserve">
          <source>If you would like to set your own field name simply pass its value to the &lt;code&gt;do_upload()&lt;/code&gt; method:</source>
          <target state="translated">独自のフィールド名を設定する場合は、その値を &lt;code&gt;do_upload()&lt;/code&gt; メソッドに渡すだけです。</target>
        </trans-unit>
        <trans-unit id="3853119e3e8ebb8d3d16c9ef6c48a879593f3f80" translate="yes" xml:space="preserve">
          <source>If you would like to share a common CodeIgniter installation to manage several different applications simply put all of the directories located inside your application directory into their own sub-directory.</source>
          <target state="translated">複数の異なるアプリケーションを管理するために共通のCodeIgniterインストールを共有したい場合は、アプリケーションディレクトリ内にあるすべてのディレクトリをそれぞれのサブディレクトリに置くだけです。</target>
        </trans-unit>
        <trans-unit id="465f42de4a4b16fcd8b60637c4857a3eb921b496" translate="yes" xml:space="preserve">
          <source>If you would like to store the &amp;ldquo;human&amp;rdquo; name you passed to the &lt;code&gt;set_rules()&lt;/code&gt; method in a language file, and therefore make the name able to be translated, here&amp;rsquo;s how:</source>
          <target state="translated">&lt;code&gt;set_rules()&lt;/code&gt; メソッドに渡した「人間の」名前を言語ファイルに保存して、名前を翻訳できるようにするには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="a1d5a0d8d4184a5e23e50f5aed73ded24fa86e6a" translate="yes" xml:space="preserve">
          <source>If you would like to surround the entire pagination with some markup you can do it with these two preferences:</source>
          <target state="translated">ページネーション全体をマークアップで囲みたい場合は、以下の2つの設定で行うことができます。</target>
        </trans-unit>
        <trans-unit id="133d94e8e14e5d641a266326797768717c1e3358" translate="yes" xml:space="preserve">
          <source>If you would like your compressed data organized into sub-directories, simply include the path as part of the filename(s):</source>
          <target state="translated">圧縮されたデータをサブディレクトリに整理したい場合は、ファイル名の一部としてパスを含めるだけです。</target>
        </trans-unit>
        <trans-unit id="ef53c240d9540fcd64c3bd46116d9cd4418e0e82" translate="yes" xml:space="preserve">
          <source>If you would like your form to contain some additional data, like JavaScript, you can pass it as a string in the third parameter:</source>
          <target state="translated">JavaScript のような追加データをフォームに入れたい場合は、3番目のパラメータに文字列として渡すことができます。</target>
        </trans-unit>
        <trans-unit id="e3fc7e59f2d0de30d2125f09641b3ff3ca3a2a65" translate="yes" xml:space="preserve">
          <source>If you would like your model assigned to a different object name you can specify it via the second parameter of the loading method:</source>
          <target state="translated">モデルを別のオブジェクト名に割り当てたい場合は、ロードメソッドの2番目のパラメータで指定することができます。</target>
        </trans-unit>
        <trans-unit id="acf367e32c1d9398436bf5e5e0a0cbf9b3aad06e" translate="yes" xml:space="preserve">
          <source>If you would like your test results formatted differently then the default you can set your own template. Here is an example of a simple template. Note the required pseudo-variables:</source>
          <target state="translated">テスト結果のフォーマットをデフォルトとは異なるものにしたい場合は、独自のテンプレートを設定することができます。以下はシンプルなテンプレートの例です。必要な疑似変数に注意してください。</target>
        </trans-unit>
        <trans-unit id="bec0c6c23f8722454e99e77b6071d086001fe560" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include a field&amp;rsquo;s &amp;ldquo;human&amp;rdquo; name, or the optional parameter some rules allow for (such as max_length), you can add the &lt;strong&gt;{field}&lt;/strong&gt; and &lt;strong&gt;{param}&lt;/strong&gt; tags to your message, respectively:</source>
          <target state="translated">フィールドの「人間の」名前、またはいくつかのルールで許可されているオプションのパラメーター（max_lengthなど）を含める場合は、それぞれ&lt;strong&gt;{field &lt;/strong&gt;&lt;strong&gt;}&lt;/strong&gt;タグと&lt;strong&gt;{param}&lt;/strong&gt;タグをメッセージに追加できます。</target>
        </trans-unit>
        <trans-unit id="34787ba12008641ef3818c655d3c3b0b3b221f3d" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to manually test whether your server supports MCrypt you can use:</source>
          <target state="translated">サーバーがMCryptをサポートしているかどうかを手動でテストする場合は、次を使用できます。</target>
        </trans-unit>
        <trans-unit id="99ca515f860da6f2b0c24006801222e4a5695008" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to use a custom file name, you can use the third parameter:</source>
          <target state="translated">カスタムファイル名を使用する場合は、3番目のパラメーターを使用できます。</target>
        </trans-unit>
        <trans-unit id="d7517f26bfc6817ba1f97ba625c771ede301db04" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ll be using &lt;code&gt;get_instance()&lt;/code&gt; inside another class, then it would be better if you assign it to a property. This way, you won&amp;rsquo;t need to call &lt;code&gt;get_instance()&lt;/code&gt; in every single method.</source>
          <target state="translated">別のクラス内で &lt;code&gt;get_instance()&lt;/code&gt; を使用する場合は、それをプロパティに割り当てた方がよいでしょう。この方法では、すべての単一のメソッドで &lt;code&gt;get_instance()&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="93d0d68444ca91025e9fcc343130c9ca6ca65ba8" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re new to CodeIgniter, please read the &lt;a href=&quot;../overview/getting_started&quot;&gt;Getting Started&lt;/a&gt; section of the User Guide to begin learning how to build dynamic PHP applications. Enjoy!</source>
          <target state="translated">あなたはCodeIgniterのに慣れていない場合は、お読みください&lt;a href=&quot;../overview/getting_started&quot;&gt;はじめに&lt;/a&gt;ダイナミックなPHPアプリケーションを構築する方法を学び始めるためにユーザーガイドのセクションを。楽しい！</target>
        </trans-unit>
        <trans-unit id="843e2b0d2aa1a789d51391da325af8f68c862e87" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re not allowed to do that, you can try using a .htaccess file to restrict access to those resources.</source>
          <target state="translated">それが許可されていない場合は、.htaccessファイルを使用して、これらのリソースへのアクセスを制限してみてください。</target>
        </trans-unit>
        <trans-unit id="80ecaf1d1e0c56920fdfb06907ed090443aa0e1b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re using a hashing algorithm other than BCrypt (which has a limit of 72 characters), you should set a relatively high limit on password lengths in order to mitigate DoS attacks - say, 1024 characters.</source>
          <target state="translated">BCrypt（72文字の制限があります）以外のハッシュアルゴリズムを使用している場合は、DoS攻撃を軽減するために、パスワード長に比較的高い制限（1024文字など）を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0cad54d521773a11e3efe8a2e08ad85625fd2438" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve done everything properly, you can now set your &lt;em&gt;sess_driver&lt;/em&gt; configuration value to &amp;lsquo;dummy&amp;rsquo; and use your own driver. Congratulations!</source>
          <target state="translated">すべてが適切に行われている場合は、&lt;em&gt;sess_driver&lt;/em&gt;構成値を「ダミー」に設定して、独自のドライバーを使用できます。おめでとう！</target>
        </trans-unit>
        <trans-unit id="b18465453f5c3b9a1d79501b23007618ed590749" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve loaded the &lt;a href=&quot;../libraries/form_validation&quot;&gt;Form Validation Library&lt;/a&gt; and have set a validation rule for the field name in use with this helper, then it will forward the call to the &lt;a href=&quot;../libraries/form_validation&quot;&gt;Form Validation Library&lt;/a&gt;&amp;rsquo;s own &lt;code&gt;set_value()&lt;/code&gt; method. Otherwise, this function looks in &lt;code&gt;$_POST&lt;/code&gt; for the field value.</source>
          <target state="translated">&lt;a href=&quot;../libraries/form_validation&quot;&gt;フォーム検証ライブラリ&lt;/a&gt;をロードし、このヘルパーで使用するフィールド名の検証ルールを設定している場合、&lt;a href=&quot;../libraries/form_validation&quot;&gt;フォーム検証ライブラリ&lt;/a&gt;の独自の &lt;code&gt;set_value()&lt;/code&gt; メソッドに呼び出しが転送されます。それ以外の場合、この関数は &lt;code&gt;$_POST&lt;/code&gt; でフィールド値を探します。</target>
        </trans-unit>
        <trans-unit id="fffd830be575325d8f707671332dca7a7e0f1a97" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve never used a template engine, pseudo-variable names are enclosed in braces, like this:</source>
          <target state="translated">テンプレートエンジンを使用したことがない場合は、次のように、疑似変数名を中括弧で囲みます。</target>
        </trans-unit>
        <trans-unit id="3ea512cd7d55f9902f455dd47b742ce88c5bdb5f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve upgraded from a previous version of CodeIgniter and you don&amp;rsquo;t have &amp;lsquo;sess_save_path&amp;rsquo; configured, then the Session library will look for the old &amp;lsquo;sess_table_name&amp;rsquo; setting and use it instead. Please don&amp;rsquo;t rely on this behavior as it will get removed in the future.</source>
          <target state="translated">以前のバージョンのCodeIgniterからアップグレードし、 'sess_save_path'が構成されていない場合、セッションライブラリは古い 'sess_table_name'設定を探し、代わりに使用します。この動作は将来削除されるため、この動作に依存しないでください。</target>
        </trans-unit>
        <trans-unit id="69693de891b2dbfe2306318a518d2b8bbeab567f" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;ve used sessions in PHP before, you should be familiar with PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/manual/en/reserved.variables.session.php&quot;&gt;$_SESSION superglobal&lt;/a&gt; (if not, please read the content on that link).</source>
          <target state="translated">以前にPHPでセッションを使用したことがある場合は、PHPの&lt;a href=&quot;http://php.net/manual/en/reserved.variables.session.php&quot;&gt;$ _SESSIONスーパーグローバルに&lt;/a&gt;精通している必要があります（そうでない場合は、そのリンクのコンテンツをお読みください）。</target>
        </trans-unit>
        <trans-unit id="5127d93f23d2c2e68b97e3ecf33c080485092007" translate="yes" xml:space="preserve">
          <source>If your &amp;ldquo;pair&amp;rdquo; data is coming from a database result, which is already a multi-dimensional array, you can simply use the database &lt;code&gt;result_array()&lt;/code&gt; method:</source>
          <target state="translated">「ペア」データが、すでに多次元配列であるデータベース結果からのものである場合は、データベースの &lt;code&gt;result_array()&lt;/code&gt; メソッドを使用するだけです。</target>
        </trans-unit>
        <trans-unit id="be13215abc4fc7c47e37fea204e8dd731e46068c" translate="yes" xml:space="preserve">
          <source>If your Apache server has &lt;em&gt;mod_rewrite&lt;/em&gt; enabled, you can easily remove this file by using a .htaccess file with some simple rules. Here is an example of such a file, using the &amp;ldquo;negative&amp;rdquo; method in which everything is redirected except the specified items:</source>
          <target state="translated">Apacheサーバーで&lt;em&gt;mod_rewriteが&lt;/em&gt;有効になっている場合は、いくつかの単純なルールを持つ.htaccessファイルを使用して、このファイルを簡単に削除できます。以下は、指定された項目以外のすべてがリダイレクトされる「ネガティブ」メソッドを使用した、そのようなファイルの例です。</target>
        </trans-unit>
        <trans-unit id="605737b908102ae42eb22c6811df1bafb7945104" translate="yes" xml:space="preserve">
          <source>If your PHP installation is configured with &amp;ndash;enable-memory-limit, you can display the amount of memory consumed by the entire system using the following code in one of your view file:</source>
          <target state="translated">PHPのインストールが&amp;ndash;enable-memory-limitで設定されている場合、ビューファイルの1つで次のコードを使用して、システム全体で消費されるメモリの量を表示できます。</target>
        </trans-unit>
        <trans-unit id="32b857138ae08efc3f002804caa8f218e4e9433b" translate="yes" xml:space="preserve">
          <source>If your URI contains more than two segments they will be passed to your method as parameters.</source>
          <target state="translated">URI に 2 つ以上のセグメントが含まれている場合、それらはパラメータとしてメソッドに渡されます。</target>
        </trans-unit>
        <trans-unit id="da8463754daf526d15fc537ed9d5cc0ed6f7b914" translate="yes" xml:space="preserve">
          <source>If your controller contains a method named &lt;code&gt;_output()&lt;/code&gt;, it will &lt;strong&gt;always&lt;/strong&gt; be called by the output class instead of echoing the finalized data directly. The first parameter of the method will contain the finalized output.</source>
          <target state="translated">お使いのコントローラがという名前のメソッドが含まれている場合 &lt;code&gt;_output()&lt;/code&gt; 、それがされます&lt;strong&gt;常に&lt;/strong&gt;代わりに直接ファイナライズデータをエコーの出力クラスによって呼び出されます。メソッドの最初のパラメーターには、最終的な出力が含まれます。</target>
        </trans-unit>
        <trans-unit id="a30c750b8571c8f8cce6d7ff3076ca71187185bc" translate="yes" xml:space="preserve">
          <source>If your controller contains a method named _remap(), it will &lt;strong&gt;always&lt;/strong&gt; get called regardless of what your URI contains. It overrides the normal behavior in which the URI determines which method is called, allowing you to define your own method routing rules.</source>
          <target state="translated">コントローラーに_remap（）という名前のメソッドが含まれている場合、URIの内容に関係なく、&lt;strong&gt;常に&lt;/strong&gt;呼び出されます。これは、URIが呼び出されるメソッドを決定する通常の動作をオーバーライドし、独自のメソッドルーティングルールを定義できるようにします。</target>
        </trans-unit>
        <trans-unit id="540259d6ac2989744f3e3ae0818941d532bbec0f" translate="yes" xml:space="preserve">
          <source>If your model is located in a sub-directory, include the relative path from your models directory. For example, if you have a model located at &lt;em&gt;application/models/blog/Queries.php&lt;/em&gt; you&amp;rsquo;ll load it using:</source>
          <target state="translated">モデルがサブディレクトリにある場合は、モデルディレクトリからの相対パスを含めます。たとえば、&lt;em&gt;application / models / blog / Queries.phpに&lt;/em&gt;あるモデルがある場合は、次を使用してロードします。</target>
        </trans-unit>
        <trans-unit id="10458d92d627cb9c37fc4e5fc0f2ff42749acf48" translate="yes" xml:space="preserve">
          <source>If your model is located in a subdirectory, include the relative path from your models directory. For example, if you have a model located at &lt;em&gt;application/models/blog/Queries.php&lt;/em&gt; you&amp;rsquo;ll load it using:</source>
          <target state="translated">モデルがサブディレクトリにある場合は、モデルディレクトリからの相対パスを含めます。たとえば、&lt;em&gt;application / models / blog / Queries.phpに&lt;/em&gt;あるモデルがある場合は、次を使用してロードします。</target>
        </trans-unit>
        <trans-unit id="cb888065fc044ae4b430d92850abfc7cade9bdc9" translate="yes" xml:space="preserve">
          <source>If your server is running an &lt;strong&gt;open_basedir&lt;/strong&gt; restriction this function might not work if you are trying to access a file above the calling script.</source>
          <target state="translated">サーバーが&lt;strong&gt;open_basedir&lt;/strong&gt;制限を実行している場合、呼び出し元のスクリプトの上のファイルにアクセスしようとすると、この関数が機能しない可能性があります。</target>
        </trans-unit>
        <trans-unit id="8d44ff42148e4f5f78278775f5d9a17dc5eadb36" translate="yes" xml:space="preserve">
          <source>If your watermark image is a PNG or GIF image, you may specify a color on the image to be &amp;ldquo;transparent&amp;rdquo;. This setting (along with the next) will allow you to specify that color. This works by specifying the &amp;ldquo;X&amp;rdquo; and &amp;ldquo;Y&amp;rdquo; coordinate pixel (measured from the upper left) within the image that corresponds to a pixel representative of the color you want to be transparent.</source>
          <target state="translated">透かし画像がPNGまたはGIF画像の場合、画像の色を「透明」に指定できます。この設定では（次の設定とともに）、その色を指定できます。これは、透明にしたい色を表すピクセルに対応する画像内の「左上から測定した」「X」および「Y」座標ピクセルを指定することによって機能します。</target>
        </trans-unit>
        <trans-unit id="a3eb09116a62a5c11ef7d5cb741247be844f8690" translate="yes" xml:space="preserve">
          <source>Ignores IV (not recommended).</source>
          <target state="translated">IVを無視します(推奨しません)。</target>
        </trans-unit>
        <trans-unit id="ea118798c37712477af28e614527a6c99852cdb9" translate="yes" xml:space="preserve">
          <source>Image Cropping</source>
          <target state="translated">画像のトリミング</target>
        </trans-unit>
        <trans-unit id="8aef0079eb36bcf3fdc530d84414f654e9a0ceb8" translate="yes" xml:space="preserve">
          <source>Image Manipulation</source>
          <target state="translated">画像操作</target>
        </trans-unit>
        <trans-unit id="ec803db86dfeb3c86b6104d8898cb8923875b90d" translate="yes" xml:space="preserve">
          <source>Image Manipulation Class</source>
          <target state="translated">画像操作クラス</target>
        </trans-unit>
        <trans-unit id="8b57a1a0c45dd99fa098e83f1b30a25446f20914" translate="yes" xml:space="preserve">
          <source>Image Manipulation Library (cropping, resizing, rotating, etc.). Supports GD, ImageMagick, and NetPBM</source>
          <target state="translated">画像操作ライブラリ(トリミング、リサイズ、回転など)。GD、ImageMagick、NetPBMをサポートしています。</target>
        </trans-unit>
        <trans-unit id="2b65debdb9c8bbe257d738e3034b52c09f08fe30" translate="yes" xml:space="preserve">
          <source>Image Resizing</source>
          <target state="translated">画像のリサイズ</target>
        </trans-unit>
        <trans-unit id="a89a6ca544fe79e342fabae69007cd3416e4e444" translate="yes" xml:space="preserve">
          <source>Image Rotating</source>
          <target state="translated">画像の回転</target>
        </trans-unit>
        <trans-unit id="f3061212f4b4130ef1318fe938298f8369ee1ce2" translate="yes" xml:space="preserve">
          <source>Image Watermarking</source>
          <target state="translated">画像の透かし</target>
        </trans-unit>
        <trans-unit id="d500aa949e614f53dfc3610240eee9b9b66b838f" translate="yes" xml:space="preserve">
          <source>Image height</source>
          <target state="translated">画像の高さ</target>
        </trans-unit>
        <trans-unit id="7c76daf0dfc72bea5b9597d61b5160e19d771b6c" translate="yes" xml:space="preserve">
          <source>Image opacity. You may specify the opacity (i.e. transparency) of your watermark image. This allows the watermark to be faint and not completely obscure the details from the original image behind it. A 50% opacity is typical.</source>
          <target state="translated">画像の不透明度。透かし画像の不透明度(透明度)を指定することができます。これにより、透かしが薄くなり、元の画像の詳細が完全に見えなくなることはありません。不透明度は50%が一般的です。</target>
        </trans-unit>
        <trans-unit id="419c4258d9a367670b2895e08ae1a1bcc0a64a45" translate="yes" xml:space="preserve">
          <source>Image processing can require a considerable amount of server memory for some operations. If you are experiencing out of memory errors while processing images you may need to limit their maximum size, and/or adjust PHP memory limits.</source>
          <target state="translated">画像処理では、処理によってはかなりの量のサーバーメモリを必要とすることがあります。画像の処理中にメモリ不足のエラーが発生した場合は、最大サイズを制限するか、PHP のメモリ制限を調整する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="89b0ad47f2dee8d719599a4a684b488057902f7b" translate="yes" xml:space="preserve">
          <source>Image type (usually the file name extension without the period)</source>
          <target state="translated">画像の種類(通常はピリオドのないファイル名の拡張子</target>
        </trans-unit>
        <trans-unit id="f2cccb1889beba84b84d77cfadc2a038b545b861" translate="yes" xml:space="preserve">
          <source>Image width</source>
          <target state="translated">画像の幅</target>
        </trans-unit>
        <trans-unit id="d340bda569af9fa5834cd3957ea15c806571082e" translate="yes" xml:space="preserve">
          <source>Implement the &lt;a href=&quot;http://php.net/sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt; interface.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/sessionhandlerinterface&quot;&gt;SessionHandlerInterface&lt;/a&gt;インターフェースを実装します。</target>
        </trans-unit>
        <trans-unit id="4b6d6a30150a506f9b79caf45da5aecb76b0018e" translate="yes" xml:space="preserve">
          <source>Important</source>
          <target state="translated">Important</target>
        </trans-unit>
        <trans-unit id="c0f2cf44a649d768ab8f096d9bb533353784a7b1" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;Default line breaks&amp;rdquo;, select &amp;ldquo;Mac OS X and Unix (LF)&amp;rdquo;</source>
          <target state="translated">「デフォルトの改行」で「Mac OS XおよびUnix（LF）」を選択します</target>
        </trans-unit>
        <trans-unit id="9cc3052c8e31b095b860ed66c0d26dddca0afe51" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;Default text encoding for new documents&amp;rdquo;, select &amp;ldquo;Unicode (UTF-8, no BOM)&amp;rdquo;</source>
          <target state="translated">「新しいドキュメントのデフォルトのテキストエンコーディング」で、「Unicode（UTF-8、BOMなし）」を選択します</target>
        </trans-unit>
        <trans-unit id="f0ca2ccfb8cf66271249d8e083fce7536cfb02c1" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;File Encoding&amp;rdquo;, select &amp;ldquo;UTF-8 (recommended)&amp;rdquo;</source>
          <target state="translated">「ファイルエンコーディング」で、「UTF-8（推奨）」を選択します。</target>
        </trans-unit>
        <trans-unit id="57d76793ad7e146fc3db3c717f674b5f11fe1ea4" translate="yes" xml:space="preserve">
          <source>In &amp;ldquo;Line Endings&amp;rdquo;, select &amp;ldquo;LF (recommended)&amp;rdquo;</source>
          <target state="translated">[行末]で[LF（推奨）]を選択します</target>
        </trans-unit>
        <trans-unit id="f684c8232decdbd17dd28ea9f3a00c0207315e37" translate="yes" xml:space="preserve">
          <source>In MySQL &amp;ldquo;DELETE FROM TABLE&amp;rdquo; returns 0 affected rows. The database class has a small hack that allows it to return the correct number of affected rows. By default this hack is enabled but it can be turned off in the database driver file.</source>
          <target state="translated">MySQLでは、「DELETE FROM TABLE」は0の影響を受ける行を返します。データベースクラスには小さなハックがあり、影響を受ける行の正しい数を返すことができます。デフォルトでは、このハックは有効になっていますが、データベースドライバーファイルで無効にすることができます。</target>
        </trans-unit>
        <trans-unit id="b0f531d489a0e986d15f1b34de74ca4f0bc6d71b" translate="yes" xml:space="preserve">
          <source>In a route, the array key contains the URI to be matched, while the array value contains the destination it should be re-routed to. In the above example, if the literal word &amp;ldquo;product&amp;rdquo; is found in the first segment of the URL, and a number is found in the second segment, the &amp;ldquo;catalog&amp;rdquo; class and the &amp;ldquo;product_lookup&amp;rdquo; method are instead used.</source>
          <target state="translated">ルートでは、配列キーには一致するURIが含まれ、配列値には再ルーティングされる宛先が含まれます。上記の例では、URLの最初のセグメントに「product」というリテラル単語が見つかり、2番目のセグメントに数字が見つかった場合、代わりに「catalog」クラスと「product_lookup」メソッドが使用されます。</target>
        </trans-unit>
        <trans-unit id="23d5565b0dee47f213cd13c530912b6bed33a09f" translate="yes" xml:space="preserve">
          <source>In addition to affecting some basic framework behavior (see the next section), you may use this constant in your own development to differentiate between which environment you are running in.</source>
          <target state="translated">いくつかの基本的なフレームワークの動作に影響を与えることに加えて (次のセクションを参照してください)、どの環境で実行しているかを区別するために、この定数を独自の開発で使用することができます。</target>
        </trans-unit>
        <trans-unit id="3761e2ca3b839cb70d239bc9508f9e1289694db2" translate="yes" xml:space="preserve">
          <source>In addition to the five indexes above, there are two reserved words: rowid and subtotal. These are used internally by the Cart class, so please do NOT use those words as index names when inserting data into the cart.</source>
          <target state="translated">上記の5つのインデックスに加えて、2つの予約語があります:rowidとsubtotalです。これらはカートクラスによって内部的に使用されますので、カートにデータを挿入する際にはこれらの単語をインデックス名として使用しないでください。</target>
        </trans-unit>
        <trans-unit id="3ebd861390a18e15d7200dc640c3d2c033e21c49" translate="yes" xml:space="preserve">
          <source>In addition to the two methods listed below, the following methods also can take a class name to return the results as: &lt;code&gt;first_row()&lt;/code&gt;, &lt;code&gt;last_row()&lt;/code&gt;, &lt;code&gt;next_row()&lt;/code&gt;, and &lt;code&gt;previous_row()&lt;/code&gt;.</source>
          <target state="translated">下記の2つのメソッドに加えて、次のメソッドもクラス名を取得して、結果を次のように返すことが &lt;code&gt;first_row()&lt;/code&gt; ：first_row（）、 &lt;code&gt;last_row()&lt;/code&gt; 、 &lt;code&gt;next_row()&lt;/code&gt; 、および &lt;code&gt;previous_row()&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="efa26453f983040032715d3e90d10fde0a383180" translate="yes" xml:space="preserve">
          <source>In addition to the validation method like the ones we used above, you can also prep your data in various ways. For example, you can set up rules like this:</source>
          <target state="translated">上記で使用したような検証方法以外にも、様々な方法でデータを下準備することができます。例えば、以下のようなルールを設定することができます。</target>
        </trans-unit>
        <trans-unit id="cce36f290f2f80779b6f11e892337d45dad93ea9" translate="yes" xml:space="preserve">
          <source>In addition to the values above, the cookie and native drivers apply the following configuration values shared by the &lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt; and &lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt; classes:</source>
          <target state="translated">上記の値に加えて、Cookieおよびネイティブドライバーは、&lt;a href=&quot;input&quot;&gt;Input&lt;/a&gt;クラスと&lt;a href=&quot;security&quot;&gt;Security&lt;/a&gt;クラスで共有される次の構成値を適用します。</target>
        </trans-unit>
        <trans-unit id="5595b5e6fdfae8ac89bd7693f93585e540f15575" translate="yes" xml:space="preserve">
          <source>In addition, CodeIgniter also provides 2 special types of session data that are further explained below: flashdata and tempdata.</source>
          <target state="translated">さらに、CodeIgniterは、以下で説明する2つの特別なタイプのセッションデータも提供しています:flashdataとtempdataです。</target>
        </trans-unit>
        <trans-unit id="cf130286b501e1fc5c31444c2209331a248d64d2" translate="yes" xml:space="preserve">
          <source>In addition, if performance is your only concern, you may want to look into using &lt;a href=&quot;http://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;, (warning: external resource), which can make your sessions blazing fast.</source>
          <target state="translated">さらに、パフォーマンスが唯一の懸念事項である場合は、&lt;a href=&quot;http://eddmann.com/posts/storing-php-sessions-file-caches-in-memory-using-tmpfs/&quot;&gt;tmpfs&lt;/a&gt;（警告：外部リソース）の使用を検討することをお勧めします。これにより、セッションが非常に高速になります。</target>
        </trans-unit>
        <trans-unit id="3c4a0173e428d1272515b49ae6cc5374ae9d8e05" translate="yes" xml:space="preserve">
          <source>In addition, the benchmark is always started the moment the framework is invoked, and ended by the output class right before sending the final view to the browser, enabling a very accurate timing of the entire system execution to be shown.</source>
          <target state="translated">また、ベンチマークは常にフレームワークが起動された瞬間に開始され、最終的なビューをブラウザに送信する直前に出力クラスで終了するため、システム全体の実行タイミングを非常に正確に示すことができます。</target>
        </trans-unit>
        <trans-unit id="492d9b60c64fae1231e3ed88021404d646be8025" translate="yes" xml:space="preserve">
          <source>In addition, you can walk forward/backwards/first/last through your results using these variations:</source>
          <target state="translated">さらに、これらのバリエーションを使用して、結果をforwardbackwardsfirstlastで歩くことができます。</target>
        </trans-unit>
        <trans-unit id="b581e2eb41cdb5b05f7d50002b98150358299d77" translate="yes" xml:space="preserve">
          <source>In addition, you may also create and use &lt;a href=&quot;#custom-drivers&quot;&gt;Custom Drivers&lt;/a&gt;, if the ones provided by default don&amp;rsquo;t satisfy your use case.</source>
          <target state="translated">さらに、デフォルトで提供されている&lt;a href=&quot;#custom-drivers&quot;&gt;ドライバーが&lt;/a&gt;ユースケースを満たさない場合は、カスタムドライバーを作成して使用することもできます。</target>
        </trans-unit>
        <trans-unit id="d435caf85fcb27014eb1e46896fe8e49788d5653" translate="yes" xml:space="preserve">
          <source>In addition, you may create your own, custom session drivers based on other kinds of storage, while still taking advantage of the features of the Session class.</source>
          <target state="translated">さらに、セッションクラスの機能を利用しながら、他の種類のストレージをベースにした独自のカスタムセッションドライバを作成することができます。</target>
        </trans-unit>
        <trans-unit id="d80702da00124ddf66c3564cb6aec690f943b188" translate="yes" xml:space="preserve">
          <source>In case it isn&amp;rsquo;t clear from the above table, Blowfish, CAST5 and RC4 support variable length keys. That is, any number in the shown ranges is valid, although in bit terms that only happens in 8-bit increments.</source>
          <target state="translated">上記の表から明らかでない場合、Blowfish、CAST5、およびRC4は可変長キーをサポートします。つまり、ビットの用語では8ビットの増分でのみ発生しますが、表示されている範囲の任意の数値が有効です。</target>
        </trans-unit>
        <trans-unit id="7cdef9bc65e0abce9e8f473c52a9d1ff6df2fc1e" translate="yes" xml:space="preserve">
          <source>In general, code should be commented prolifically. It not only helps describe the flow and intent of the code for less experienced programmers, but can prove invaluable when returning to your own code months down the line. There is not a required format for comments, but the following are recommended.</source>
          <target state="translated">一般的に、コードには積極的にコメントをつけるべきです。コメントは、経験の浅いプログラマーにとってコードの流れや意図を説明するのに役立つだけでなく、数ヶ月後に自分のコードに戻ってきたときに、非常に貴重なものであることを証明することができます。コメントに必須の形式はありませんが、以下のような形式を推奨します。</target>
        </trans-unit>
        <trans-unit id="242fbb9100d35947f33d496e3c0c9f0e7989fe7e" translate="yes" xml:space="preserve">
          <source>In general, parenthesis and brackets should not use any additional spaces. The exception is that a space should always follow PHP control structures that accept arguments with parenthesis (declare, do-while, elseif, for, foreach, if, switch, while), to help distinguish them from functions and increase readability.</source>
          <target state="translated">一般的に、括弧や括弧にはスペースを追加してはいけません。例外は、括弧付きの引数を受け入れる PHP の制御構造 (declare,do-while,elseif,for,foreach,if,switch,while)には常にスペースを使用しなければならないということです。</target>
        </trans-unit>
        <trans-unit id="50634ddda5b00bfcf9b594992add4923966bcd86" translate="yes" xml:space="preserve">
          <source>In many databases it is advisable to protect table and field names - for example with backticks in MySQL. &lt;strong&gt;Query Builder queries are automatically protected&lt;/strong&gt;, however if you need to manually protect an identifier you can use:</source>
          <target state="translated">多くのデータベースでは、テーブルとフィールド名を保護することをお勧めします-たとえば、MySQLのバックティックを使用します。&lt;strong&gt;クエリビルダークエリは自動的に保護さ&lt;/strong&gt;れますが、識別子を手動で保護する必要がある場合は、次を使用できます。</target>
        </trans-unit>
        <trans-unit id="e1ccba208c10cbaa2e0af77ad689cf36dbc9550b" translate="yes" xml:space="preserve">
          <source>In nearly all cases, updating the cart will be something the user does via the &amp;ldquo;view cart&amp;rdquo; page, so as a developer, it is unlikely that you will ever have to concern yourself with the &amp;ldquo;row ID&amp;rdquo;, other than making sure your &amp;ldquo;view cart&amp;rdquo; page contains this information in a hidden form field, and making sure it gets passed to the &lt;code&gt;update()&lt;/code&gt; method when the update form is submitted. Please examine the construction of the &amp;ldquo;view cart&amp;rdquo; page above for more information.</source>
          <target state="translated">ほとんどすべての場合、カートの更新はユーザーが「カートの表示」ページで行うことになるため、開発者として、「行ID」を確認する以外に、「行ID」を気にする必要はほとんどありません。 「カートを表示」ページの非表示のフォームフィールドにこの情報が含まれており、更新フォームが送信されたときに &lt;code&gt;update()&lt;/code&gt; メソッドに渡されることを確認します。詳細については、上の「カートの表示」ページの構成を調べてください。</target>
        </trans-unit>
        <trans-unit id="bc230e107ef92a380e492dcab63f433f5b46a9e4" translate="yes" xml:space="preserve">
          <source>In order for the Profiler to compile and display your benchmark data you must name your mark points using specific syntax.</source>
          <target state="translated">プロファイラがベンチマーク・データをコンパイルして表示するには、特定の構文を使用してマーク・ポイントに名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="01b12010c126e02625a559d4424949d167724a6b" translate="yes" xml:space="preserve">
          <source>In order for the captcha function to prevent someone from submitting, you will need to add the information returned from &lt;code&gt;create_captcha()&lt;/code&gt; to your database. Then, when the data from the form is submitted by the user you will need to verify that the data exists in the database and has not expired.</source>
          <target state="translated">captcha関数で誰かが送信できないようにするには、 &lt;code&gt;create_captcha()&lt;/code&gt; から返された情報をデータベースに追加する必要があります。次に、フォームからのデータがユーザーによって送信されたときに、データがデータベースに存在し、期限が切れていないことを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="844a5cf2b9f7452ae04f106d9d615a0290f84385" translate="yes" xml:space="preserve">
          <source>In order for the image class to be allowed to do any processing, the folder containing the image files must have write permissions.</source>
          <target state="translated">画像クラスが何らかの処理を行うことを許可されるためには、画像ファイルを含むフォルダに書き込み権限が必要です。</target>
        </trans-unit>
        <trans-unit id="c30fb50dd5f280d09756ca3530321d84dfa4058f" translate="yes" xml:space="preserve">
          <source>In order for the image class to be allowed to do any processing, the image file must have &amp;ldquo;write&amp;rdquo; file permissions For example, 777.</source>
          <target state="translated">画像クラスが任意の処理を実行できるようにするには、画像ファイルに777などの「書き込み」ファイル権限が必要です。</target>
        </trans-unit>
        <trans-unit id="c398eabf1b69b1a562c1d87eeb95dfc1a42914c2" translate="yes" xml:space="preserve">
          <source>In order for the log file to actually be written, the &lt;em&gt;logs/&lt;/em&gt; directory must be writable. In addition, you must set the &amp;ldquo;threshold&amp;rdquo; for logging in &lt;em&gt;application/config/config.php&lt;/em&gt;. You might, for example, only want error messages to be logged, and not the other two types. If you set it to zero logging will be disabled.</source>
          <target state="translated">ログファイルが実際に書き込まれるためには、&lt;em&gt;logs /&lt;/em&gt;ディレクトリが書き込み可能である必要があります。さらに、&lt;em&gt;application / config / config.phpに&lt;/em&gt;ログインするための「しきい値」を設定する必要があります。たとえば、エラーメッセージのみをログに記録し、他の2つのタイプはログに記録させたくない場合があります。ゼロに設定すると、ロギングは無効になります。</target>
        </trans-unit>
        <trans-unit id="76df0027cbcfa6b98c541123c208ff333a6de832" translate="yes" xml:space="preserve">
          <source>In order for this function to work it must be used before anything is outputted to the browser since it utilizes server headers.</source>
          <target state="translated">この関数が動作するためには、サーバヘッダを利用するため、ブラウザに何かを出力する前に使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b81060b34b990dd615cce085bcba90ed4f5dac45" translate="yes" xml:space="preserve">
          <source>In order to accept Trackbacks you must display a Trackback URL next to each one of your weblog entries. This will be the URL that people will use to send you Trackbacks (we will refer to this as your &amp;ldquo;Ping URL&amp;rdquo;).</source>
          <target state="translated">トラックバックを受け入れるには、ブログの各エントリの横にトラックバックURLを表示する必要があります。これは、人々がトラックバックを送信するために使用するURLになります（これを「Ping URL」と呼びます）。</target>
        </trans-unit>
        <trans-unit id="6f10a0ab3e5ff3bd9c0704571d9be715857612a5" translate="yes" xml:space="preserve">
          <source>In order to call a specific group, you will pass its name to the &lt;code&gt;run()&lt;/code&gt; method. For example, to call the signup rule you will do this:</source>
          <target state="translated">特定のグループを呼び出すには、その名前を &lt;code&gt;run()&lt;/code&gt; メソッドに渡します。たとえば、サインアップルールを呼び出すには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="572f62cd72002154cccbac5027b5b8facdff6e85" translate="yes" xml:space="preserve">
          <source>In order to fetch a line from a particular file you must load the file first. Loading a language file is done with the following code:</source>
          <target state="translated">特定のファイルから行を取得するには、まずファイルをロードしなければなりません。言語ファイルの読み込みは以下のコードで行います。</target>
        </trans-unit>
        <trans-unit id="9993db2742b3aaa2ee6b708d011b040da3012817" translate="yes" xml:space="preserve">
          <source>In order to help out, CodeIgniter uses a series of function, method, class and variable names in its operation. Because of this, some names cannot be used by a developer. Following is a list of reserved names that cannot be used.</source>
          <target state="translated">CodeIgniterでは、それを助けるために、関数名、メソッド名、クラス名、変数名を一連の操作で使用しています。そのため、開発者が使用できない名前もあります。以下は、使用できない予約名のリストです。</target>
        </trans-unit>
        <trans-unit id="79bb724f02638119bbe24d5dfe796c2327d9b113" translate="yes" xml:space="preserve">
          <source>In order to implement form validation you&amp;rsquo;ll need three things:</source>
          <target state="translated">フォーム検証を実装するには、次の3つが必要です。</target>
        </trans-unit>
        <trans-unit id="95860db938d3919eb2ade80e744190ab3980d9ab" translate="yes" xml:space="preserve">
          <source>In order to initialize the Forge class, your database driver must already be running, since the forge class relies on it.</source>
          <target state="translated">Forge クラスを初期化するためには、データベースドライバがすでに実行されている必要があります。</target>
        </trans-unit>
        <trans-unit id="03179a18ba52d77fa333ef687f94e78f9848a9c9" translate="yes" xml:space="preserve">
          <source>In order to initialize the Utility class, your database driver must already be running, since the utilities class relies on it.</source>
          <target state="translated">ユーティリティクラスを初期化するためには、ユーティリティクラスがそれに依存しているため、データベースドライバがすでに実行されている必要があります。</target>
        </trans-unit>
        <trans-unit id="48e4674ff56f25d6125bb91b699b64a704f11401" translate="yes" xml:space="preserve">
          <source>In order to load those pages, you&amp;rsquo;ll have to check whether the requested page actually exists:</source>
          <target state="translated">これらのページをロードするには、リクエストされたページが実際に存在するかどうかを確認する必要があります。</target>
        </trans-unit>
        <trans-unit id="8a4c82565fd04f00fb822994d0a5110489375e16" translate="yes" xml:space="preserve">
          <source>In order to maintain compatibility on case-sensitive file systems, the Driver_name directory must be named in the format returned by &lt;code&gt;ucfirst()&lt;/code&gt;.</source>
          <target state="translated">大文字と小文字を区別するファイルシステムでの互換性を維持するために、Driver_nameディレクトリは &lt;code&gt;ucfirst()&lt;/code&gt; が返す形式で名前を付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="97fc22c170f7fff66b3a58c6d9d1c802b00aaa34" translate="yes" xml:space="preserve">
          <source>In order to organize your rules into &amp;ldquo;sets&amp;rdquo; requires that you place them into &amp;ldquo;sub arrays&amp;rdquo;. Consider the following example, showing two sets of rules. We&amp;rsquo;ve arbitrarily called these two rules &amp;ldquo;signup&amp;rdquo; and &amp;ldquo;email&amp;rdquo;. You can name your rules anything you want:</source>
          <target state="translated">ルールを「セット」に編成するには、ルールを「サブ配列」に配置する必要があります。次の例で、2つのルールセットを示します。これら2つのルールを「サインアップ」と「メール」と呼んでいます。ルールには任意の名前を付けることができます。</target>
        </trans-unit>
        <trans-unit id="4b6982f5f262a6b3f26b7c3695604256f2b1d771" translate="yes" xml:space="preserve">
          <source>In order to use the &amp;lsquo;database&amp;rsquo; session driver, you must also create this table that we already mentioned and then set it as your &lt;code&gt;$config['sess_save_path']&lt;/code&gt; value. For example, if you would like to use &amp;lsquo;ci_sessions&amp;rsquo; as your table name, you would do this:</source>
          <target state="translated">'データベース'セッションドライバーを使用するには、既に説明したこのテーブルを作成して、 &lt;code&gt;$config['sess_save_path']&lt;/code&gt; 値として設定する必要があります。たとえば、「ci_sessions」をテーブル名として使用する場合は、次のようにします。</target>
        </trans-unit>
        <trans-unit id="c2565ac24b107f77faa9b3a972c7bda4dc158ab5" translate="yes" xml:space="preserve">
          <source>In order to use the &lt;code&gt;print_debugger()&lt;/code&gt; method, you need to avoid clearing the email parameters.</source>
          <target state="translated">&lt;code&gt;print_debugger()&lt;/code&gt; メソッドを使用するには、電子メールパラメータを消去しないようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="05053be87a9bb781fd03d3a487d098057a73f3a2" translate="yes" xml:space="preserve">
          <source>In other words, if an XML-RPC Client sends a request for the new_post method, your server will load the My_blog class and call the new_entry function. If the request is for the update_post method, your server will load the My_blog class and call the &lt;code&gt;update_entry()&lt;/code&gt; method.</source>
          <target state="translated">つまり、XML-RPCクライアントがnew_postメソッドのリクエストを送信すると、サーバーはMy_blogクラスをロードしてnew_entry関数を呼び出します。リクエストがupdate_postメソッドに対するものである場合、サーバーはMy_blogクラスをロードし、 &lt;code&gt;update_entry()&lt;/code&gt; メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="90abf579405cd4058b5d0b68027900ad21d8aa97" translate="yes" xml:space="preserve">
          <source>In our Trackback receiving code above, if the third segment is missing, we will issue an error. Without a valid entry ID, there&amp;rsquo;s no reason to continue.</source>
          <target state="translated">上記のトラックバック受信コードで、3番目のセグメントがない場合、エラーが発行されます。有効なエントリIDがなければ、続行する理由はありません。</target>
        </trans-unit>
        <trans-unit id="fbb4934ef06339777be78160da0e3ed458e17ec7" translate="yes" xml:space="preserve">
          <source>In previous CodeIgniter versions, a different, &amp;ldquo;cookie driver&amp;rdquo; was the only option and we have received negative feedback on not providing that option. While we do listen to feedback from the community, we want to warn you that it was dropped because it is &lt;strong&gt;unsafe&lt;/strong&gt; and we advise you NOT to try to replicate it via a custom driver.</source>
          <target state="translated">以前のCodeIgniterバージョンでは、別の「Cookieドライバー」が唯一のオプションであり、そのオプションを提供しないことについて否定的なフィードバックを受けました。コミュニティからのフィードバックには耳を傾けていますが、&lt;strong&gt;安全&lt;/strong&gt;では&lt;strong&gt;ない&lt;/strong&gt;ため削除されたことを警告します。カスタムドライバを介してフィードバックを複製しないことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ad01dacd4bd45a1c366f674d7f153632ab4f701a" translate="yes" xml:space="preserve">
          <source>In previous CodeIgniter versions, the session data array included 4 items by default: &amp;lsquo;session_id&amp;rsquo;, &amp;lsquo;ip_address&amp;rsquo;, &amp;lsquo;user_agent&amp;rsquo;, &amp;lsquo;last_activity&amp;rsquo;.</source>
          <target state="translated">以前のCodeIgniterバージョンでは、セッションデータ配列にはデフォルトで4つのアイテムが含まれていました： 'session_id'、 'ip_address'、 'user_agent'、 'last_activity'。</target>
        </trans-unit>
        <trans-unit id="d0071c6ee3897f7ea33ae892b3baa518e7c8e97f" translate="yes" xml:space="preserve">
          <source>In previous versions, regular session data in CodeIgniter was referred to as &amp;lsquo;userdata&amp;rsquo;. Have this in mind if that term is used elsewhere in the manual. Most of it is written to explain how the custom &amp;lsquo;userdata&amp;rsquo; methods work.</source>
          <target state="translated">以前のバージョンでは、CodeIgniterの通常のセッションデータは「userdata」と呼ばれていました。この用語がマニュアルの他の場所で使用されている場合は、このことを覚えておいてください。そのほとんどは、カスタムの「userdata」メソッドがどのように機能するかを説明するために書かれています。</target>
        </trans-unit>
        <trans-unit id="0b4d77091e4390375ef7bdfbd30ad4ab8386cad8" translate="yes" xml:space="preserve">
          <source>In previous versions, the &lt;code&gt;unset_userdata()&lt;/code&gt; method used to accept an associative array of &lt;code&gt;key =&amp;gt; 'dummy value'&lt;/code&gt; pairs. This is no longer supported.</source>
          <target state="translated">以前のバージョンでは、 &lt;code&gt;unset_userdata()&lt;/code&gt; メソッドは、 &lt;code&gt;key =&amp;gt; 'dummy value'&lt;/code&gt; ペアの連想配列を受け入れるために使用されていました。これはサポートされなくなりました。</target>
        </trans-unit>
        <trans-unit id="022ec831745294e72e65b38ba7b333276df78085" translate="yes" xml:space="preserve">
          <source>In production environments, it is typically desirable to &amp;ldquo;disable&amp;rdquo; PHP&amp;rsquo;s error reporting by setting the internal &lt;em&gt;display_errors&lt;/em&gt; flag to a value of 0. This disables native PHP errors from being rendered as output, which may potentially contain sensitive information.</source>
          <target state="translated">本番環境では、通常、内部の&lt;em&gt;display_errors&lt;/em&gt;フラグを値0に設定して、PHPのエラー報告を「無効」にすることが望ましいです。これにより、機密情報が含まれる可能性のあるネイティブPHPエラーが出力としてレンダリングされなくなります。</target>
        </trans-unit>
        <trans-unit id="8a53a42a5a53c2d1eb0479dbc4b6d496528e31bf" translate="yes" xml:space="preserve">
          <source>In some cases you may want certain methods hidden from public access. In order to achieve this, simply declare the method as being private or protected and it will not be served via a URL request. For example, if you were to have a method like this:</source>
          <target state="translated">場合によっては、特定のメソッドをパブリックアクセスから隠したいこともあるでしょう。これを実現するには、そのメソッドをプライベートまたは保護されたものと宣言するだけで、URLリクエストを介してそのメソッドが提供されることはありません。例えば、次のようなメソッドがあるとします。</target>
        </trans-unit>
        <trans-unit id="b1d4df55c95a33d1fea1de9e8972f874fa90f54e" translate="yes" xml:space="preserve">
          <source>In some cases you may want to develop classes that exist apart from your controllers but have the ability to utilize all of CodeIgniter&amp;rsquo;s resources. This is easily possible as you&amp;rsquo;ll see.</source>
          <target state="translated">場合によっては、コントローラーとは別に存在するが、CodeIgniterのすべてのリソースを利用できるクラスを開発したいことがあります。ご覧のとおり、これは簡単に可能です。</target>
        </trans-unit>
        <trans-unit id="dffcfa34c5c7cdf68b61163e9858bd84da883cc3" translate="yes" xml:space="preserve">
          <source>In some cases you might prefer to use query strings URLs:</source>
          <target state="translated">場合によっては、クエリ文字列のURLを使用したい場合もあるでしょう。</target>
        </trans-unit>
        <trans-unit id="c2b1dee509a00d0d7e87298f2fd36dda5cac8638" translate="yes" xml:space="preserve">
          <source>In some clustered server environments, for example, caching may be detrimental since file-system operations are so intense. On single servers in shared environments, caching will probably be beneficial. Unfortunately there is no single answer to the question of whether you should cache your database. It really depends on your situation.</source>
          <target state="translated">例えば、クラスタ化されたサーバ環境では、ファイルシステムの操作が非常に激しいため、キャッシングが不利になることがあります。共有環境の単一サーバでは、キャッシュはおそらく有益なものになるでしょう。残念ながら、データベースをキャッシュすべきかどうかという質問に対する一つの答えはありません。それはあなたの状況によります。</target>
        </trans-unit>
        <trans-unit id="adfa2820dba3293f4a46b30b34a65f9557013f1a" translate="yes" xml:space="preserve">
          <source>In some instances, however, you may want to remap this relationship so that a different class/method can be called instead of the one corresponding to the URL.</source>
          <target state="translated">しかし、いくつかのインスタンスでは、URL に対応するクラスメソッドの代わりに別のクラスメソッドを呼び出すことができるように、このリレーションシップをリマップする必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="ec6a62285f67e2d7161b800ebd3c834d396ca9bd" translate="yes" xml:space="preserve">
          <source>In summary:</source>
          <target state="translated">要約すると</target>
        </trans-unit>
        <trans-unit id="283d37f6394831c516b879a8b06f9884b1666120" translate="yes" xml:space="preserve">
          <source>In that directory, create two files named &lt;em&gt;home.php&lt;/em&gt; and &lt;em&gt;about.php&lt;/em&gt;. Within those files, type some text &amp;minus; anything you&amp;rsquo;d like &amp;minus; and save them. If you like to be particularly un-original, try &amp;ldquo;Hello World!&amp;rdquo;.</source>
          <target state="translated">そのディレクトリでは、という名前の2つのファイルを作成&lt;em&gt;home.php&lt;/em&gt;と&lt;em&gt;about.phpを&lt;/em&gt;。それらのファイル内で、テキストを入力し（必要なものは何でも）、それらを保存します。特に独創的でないことが好きな場合は、「Hello World！」を試してください。</target>
        </trans-unit>
        <trans-unit id="d597bd91da2ff2888373dd4c85cb6e8a1480aa7e" translate="yes" xml:space="preserve">
          <source>In the Table of Contents you&amp;rsquo;ll find a list of all the available Helper Files. Browse each one to see what they do.</source>
          <target state="translated">目次には、利用可能なすべてのヘルパーファイルのリストがあります。それぞれを参照して、それらの機能を確認します。</target>
        </trans-unit>
        <trans-unit id="435e60e4363df7b8aaf65dd9869a173e103e02f0" translate="yes" xml:space="preserve">
          <source>In the above code we are using a &amp;ldquo;url helper&amp;rdquo;. You can find more information in the &lt;a href=&quot;../general/helpers&quot;&gt;Helpers Functions&lt;/a&gt; page.</source>
          <target state="translated">上記のコードでは、「URLヘルパー」を使用しています。詳細については、&lt;a href=&quot;../general/helpers&quot;&gt;ヘルパー関数の&lt;/a&gt;ページをご覧ください。</target>
        </trans-unit>
        <trans-unit id="5ae187067e00b60dfcf14bf761246cd6a31df976" translate="yes" xml:space="preserve">
          <source>In the above code you&amp;rsquo;ll notice a pair of variables: {blog_entries} data&amp;hellip; {/blog_entries}. In a case like this, the entire chunk of data between these pairs would be repeated multiple times, corresponding to the number of rows in the &amp;ldquo;blog_entries&amp;rdquo; element of the parameters array.</source>
          <target state="translated">上記のコードでは、{blog_entries}データ&amp;hellip;{/ blog_entries}という変数のペアに気づくでしょう。このような場合、これらのペアの間のデータのチャンク全体が、parameters配列の「blog_entries」要素の行数に対応して、複数回繰り返されます。</target>
        </trans-unit>
        <trans-unit id="8e8baf59cca4860da6253ff1a374534685068014" translate="yes" xml:space="preserve">
          <source>In the above example the method name is &lt;code&gt;index()&lt;/code&gt;. The &amp;ldquo;index&amp;rdquo; method is always loaded by default if the &lt;strong&gt;second segment&lt;/strong&gt; of the URI is empty. Another way to show your &amp;ldquo;Hello World&amp;rdquo; message would be this:</source>
          <target state="translated">上記の例では、メソッド名は &lt;code&gt;index()&lt;/code&gt; です。URIの&lt;strong&gt;2番目のセグメント&lt;/strong&gt;が空の場合、「index」メソッドは常にデフォルトでロードされます。「Hello World」メッセージを表示する別の方法は次のようになります。</target>
        </trans-unit>
        <trans-unit id="86abfae1a81d0b3864952be978138cb7a2be0579" translate="yes" xml:space="preserve">
          <source>In the above example, CodeIgniter would attempt to find a controller named Blog.php and load it.</source>
          <target state="translated">上記の例では、CodeIgniterはBlog.phpという名前のコントローラを見つけてそれをロードしようとします。</target>
        </trans-unit>
        <trans-unit id="175e2eeab1be267ca057cf80270d6f7144c26d1c" translate="yes" xml:space="preserve">
          <source>In the above example, a PUT request to URI &amp;ldquo;products&amp;rdquo; would call the &lt;code&gt;Product::insert()&lt;/code&gt; controller method.</source>
          <target state="translated">上記の例では、URI「products」へのPUTリクエストは &lt;code&gt;Product::insert()&lt;/code&gt; コントローラーメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="215b23533cd5595c15d5738a705b39ff0b1d9a16" translate="yes" xml:space="preserve">
          <source>In the above example, a URI similar to products/shirts/123 would instead call the &amp;ldquo;shirts&amp;rdquo; controller class and the &amp;ldquo;id_123&amp;rdquo; method.</source>
          <target state="translated">上記の例では、products / shirts / 123に類似したURIは、代わりに「shirts」コントローラクラスと「id_123」メソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="18aa8832f9be32e53067d7e928c6761b1630f044" translate="yes" xml:space="preserve">
          <source>In the above example, all cell data would be ran through PHP&amp;rsquo;s &lt;code&gt;htmlspecialchars()&lt;/code&gt; function, resulting in:</source>
          <target state="translated">上記の例では、すべてのセルデータがPHPの &lt;code&gt;htmlspecialchars()&lt;/code&gt; 関数を介して実行され、結果は次のようになります。</target>
        </trans-unit>
        <trans-unit id="34c2ae611d8626168344c37d50edb9ee77845eba" translate="yes" xml:space="preserve">
          <source>In the above example, any HTTP request other than those for existing directories and existing files is treated as a request for your index.php file.</source>
          <target state="translated">上記の例では、既存のディレクトリと既存のファイル以外のHTTPリクエストは、index.phpファイルへのリクエストとして扱われます。</target>
        </trans-unit>
        <trans-unit id="ac27161239319a3c38fa5b2cce8e86e102f0c4f9" translate="yes" xml:space="preserve">
          <source>In the above example, both methods &lt;code&gt;foo()&lt;/code&gt; and &lt;code&gt;bar()&lt;/code&gt; will work after you instantiate the Example class, without the need to call &lt;code&gt;get_instance()&lt;/code&gt; in each of them.</source>
          <target state="translated">上記の例では、Exampleクラスをインスタンス化した後、 &lt;code&gt;foo()&lt;/code&gt; と &lt;code&gt;bar()&lt;/code&gt; の両方のメソッドが機能します。それぞれの &lt;code&gt;get_instance()&lt;/code&gt; を呼び出す必要はありません。</target>
        </trans-unit>
        <trans-unit id="91078a91dc3244bd0e2dc764dbec689f8e61caae" translate="yes" xml:space="preserve">
          <source>In the above example, if the &lt;code&gt;$1&lt;/code&gt; placeholder contains a slash, it will still be split into multiple parameters when passed to &lt;code&gt;Auth::login()&lt;/code&gt;.</source>
          <target state="translated">上記の例では、 &lt;code&gt;$1&lt;/code&gt; プレースホルダーにスラッシュが含まれている場合でも、 &lt;code&gt;Auth::login()&lt;/code&gt; に渡されると、複数のパラメーターに分割されます。</target>
        </trans-unit>
        <trans-unit id="b4cf73fc223a2a5fec1189a9216e4037c1c5b243" translate="yes" xml:space="preserve">
          <source>In the above example, if we assume that the &lt;em&gt;title&lt;/em&gt; field is our primary key, then if a row containing &amp;lsquo;My title&amp;rsquo; as the &lt;em&gt;title&lt;/em&gt; value, that row will be deleted with our new row data replacing it.</source>
          <target state="translated">上記の例で、&lt;em&gt;title&lt;/em&gt;フィールドを主キーとすると、&lt;em&gt;タイトル&lt;/em&gt;値として「My title」を含む行が削除されると、その行は新しい行データに置き換えられて削除されます。</target>
        </trans-unit>
        <trans-unit id="e7b19f1730535b1b6d5396c23fb761a920b97e10" translate="yes" xml:space="preserve">
          <source>In the above example, photo.jpg will be placed into the &lt;em&gt;path/to/&lt;/em&gt; directory.</source>
          <target state="translated">上記の例では、photo.jpgは&lt;em&gt;path / to /&lt;/em&gt;ディレクトリに配置されます。</target>
        </trans-unit>
        <trans-unit id="180761e10a60153aa156ab4ffa6d2f90d387a360" translate="yes" xml:space="preserve">
          <source>In the above example, we are &amp;ldquo;trimming&amp;rdquo; the fields, checking for length where necessary and making sure that both password fields match.</source>
          <target state="translated">上記の例では、フィールドを「トリミング」し、必要に応じて長さをチェックし、両方のパスワードフィールドが一致することを確認しています。</target>
        </trans-unit>
        <trans-unit id="f099ed7a552db8391abeb56b01f6c85316c8885c" translate="yes" xml:space="preserve">
          <source>In the above example, we are decrypting a message that was encrypted using the Blowfish cipher in CBC mode and authenticated via a SHA-256 HMAC.</source>
          <target state="translated">上記の例では、CBC モードで Blowfish 暗号を使用して暗号化され、SHA-256 HMAC で認証されたメッセージを復号化しています。</target>
        </trans-unit>
        <trans-unit id="51ce662a3f57ffe4f1f202086c4e738bdb5da140" translate="yes" xml:space="preserve">
          <source>In the above example, we&amp;rsquo;re passing a custom database object as the first parameter and then tell it to return the dbforge object, instead of assigning it directly to &lt;code&gt;$this-&amp;gt;dbforge&lt;/code&gt;.</source>
          <target state="translated">上記の例では、カスタムデータベースオブジェクトを最初のパラメーターとして渡して、 &lt;code&gt;$this-&amp;gt;dbforge&lt;/code&gt; 直接割り当てる代わりに、dbforgeオブジェクトを返すように指示しています。</target>
        </trans-unit>
        <trans-unit id="2eac2b281f2385c1c361f0da15d0190a4a262031" translate="yes" xml:space="preserve">
          <source>In the above example, we&amp;rsquo;re passing a custom database object as the first parameter and then tell it to return the dbutil object, instead of assigning it directly to &lt;code&gt;$this-&amp;gt;dbutil&lt;/code&gt;.</source>
          <target state="translated">上記の例では、カスタムデータベースオブジェクトを最初のパラメーターとして渡し、それを &lt;code&gt;$this-&amp;gt;dbutil&lt;/code&gt; 直接割り当てる代わりに、dbutilオブジェクトを返すように指示しています。</target>
        </trans-unit>
        <trans-unit id="4e34e2cb53ddbb0085cbc3e5a61b4772c7d5c3c2" translate="yes" xml:space="preserve">
          <source>In the above example:</source>
          <target state="translated">上記の例では</target>
        </trans-unit>
        <trans-unit id="546d593c797413f040f65bc013a0f8c7182b8324" translate="yes" xml:space="preserve">
          <source>In the callback rule example above, the error message was set by passing the name of the method (without the &amp;ldquo;callback_&amp;rdquo; prefix):</source>
          <target state="translated">上記のコールバックルールの例では、エラーメッセージはメソッド名（「callback_」プレフィックスなし）を渡すことで設定されています。</target>
        </trans-unit>
        <trans-unit id="9737e3678edffa5e28f111fda2f5422ab2b13462" translate="yes" xml:space="preserve">
          <source>In the example above, we are using &amp;ldquo;dynamically added data&amp;rdquo;, which you will see below.</source>
          <target state="translated">上記の例では、「動的に追加されたデータ」を使用しています。</target>
        </trans-unit>
        <trans-unit id="edac8bda0d8e7ab50433ae33b639a6e5d712c26e" translate="yes" xml:space="preserve">
          <source>In the header template, the &lt;code&gt;$title&lt;/code&gt; variable was used to customize the page title. The value of title is defined in this method, but instead of assigning the value to a variable, it is assigned to the title element in the &lt;code&gt;$data&lt;/code&gt; array.</source>
          <target state="translated">ヘッダーテンプレートでは、 &lt;code&gt;$title&lt;/code&gt; 変数を使用してページタイトルをカスタマイズしました。タイトルの値はこのメソッドで定義されますが、値を変数に割り当てる代わりに、 &lt;code&gt;$data&lt;/code&gt; 配列のタイトル要素に割り当てられます。</target>
        </trans-unit>
        <trans-unit id="fcea2eac1e2fce15cd484de022a2a172a6a88fdf" translate="yes" xml:space="preserve">
          <source>In the last section, we went over some basic concepts of the framework by writing a class that includes static pages. We cleaned up the URI by adding custom routing rules. Now it&amp;rsquo;s time to introduce dynamic content and start using a database.</source>
          <target state="translated">前のセクションでは、静的ページを含むクラスを作成することにより、フレームワークのいくつかの基本的な概念について説明しました。カスタムルーティングルールを追加してURIをクリーンアップしました。動的コンテンツを導入して、データベースの使用を開始します。</target>
        </trans-unit>
        <trans-unit id="ef11fb3a374134e8bdcf891f8f9fc31ab0518267" translate="yes" xml:space="preserve">
          <source>In the library loading method you can dynamically pass data as an array via the second parameter and it will be passed to your class constructor:</source>
          <target state="translated">ライブラリの読み込みメソッドでは、2 番目のパラメータで動的に配列としてデータを渡すことができ、それはクラスのコンストラクタに渡されます。</target>
        </trans-unit>
        <trans-unit id="9d4c2becef087de7480d52b0df48880e9df2d48e" translate="yes" xml:space="preserve">
          <source>In this case, you can specify the array to be validated:</source>
          <target state="translated">この場合、検証対象の配列を指定することができます。</target>
        </trans-unit>
        <trans-unit id="77651439059ed4b28ccca0e18ecb5fde2a340192" translate="yes" xml:space="preserve">
          <source>In this example a connection is opened to the FTP server, and a local file is read and uploaded in ASCII mode. The file permissions are set to 755.</source>
          <target state="translated">この例では、FTP サーバーへの接続が開かれ、ローカルファイルが ASCII モードで読み込まれてアップロードされます。ファイルのパーミッションは755に設定されています。</target>
        </trans-unit>
        <trans-unit id="4ddaf2c81bfd06dfd2739e989dfb1af750752b09" translate="yes" xml:space="preserve">
          <source>In this example a list of files is retrieved from the server.</source>
          <target state="translated">この例では、サーバーからファイルのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="5a583f525886fafa75e02c38ced0bb056bdefbee" translate="yes" xml:space="preserve">
          <source>In this example a local directory is mirrored on the server.</source>
          <target state="translated">この例では、ローカルディレクトリがサーバー上にミラーリングされています。</target>
        </trans-unit>
        <trans-unit id="461c1dd279681d4bee8944a47445e8ddbad7f6bc" translate="yes" xml:space="preserve">
          <source>In this example some simple code is placed in &lt;strong&gt;application/controllers/Migrate.php&lt;/strong&gt; to update the schema.:</source>
          <target state="translated">この例では、スキーマを更新するために、いくつかの単純なコードが&lt;strong&gt;application / controllers / Migrate.php&lt;/strong&gt;に配置されています。</target>
        </trans-unit>
        <trans-unit id="c3854a473b1e55ce04d5fc759fbaf12af031361e" translate="yes" xml:space="preserve">
          <source>In this example, we&amp;rsquo;ve switched to using div tags.</source>
          <target state="translated">この例では、divタグの使用に切り替えました。</target>
        </trans-unit>
        <trans-unit id="2bb2dce5eb9b1c9d0b1e2c3be3765c9bf17b472d" translate="yes" xml:space="preserve">
          <source>In this instance, it is possible for view naming collisions within packages to occur, and possibly the incorrect package being loaded. To ensure against this, set an optional second parameter of FALSE when calling &lt;code&gt;add_package_path()&lt;/code&gt;.</source>
          <target state="translated">この場合、パッケージ内でビューの名前の衝突が発生する可能性があり、場合によっては、正しくないパッケージがロードされます。これを防ぐには、 &lt;code&gt;add_package_path()&lt;/code&gt; を呼び出すときにオプションの2番目のパラメーターをFALSEに設定します。</target>
        </trans-unit>
        <trans-unit id="9e17e44f64ecd8743b6ca1c3738ac64b8c9b8db5" translate="yes" xml:space="preserve">
          <source>In this tutorial, you will be creating a &lt;strong&gt;basic news application&lt;/strong&gt;. You will begin by writing the code that can load static pages. Next, you will create a news section that reads news items from a database. Finally, you&amp;rsquo;ll add a form to create news items in the database.</source>
          <target state="translated">このチュートリアルでは、&lt;strong&gt;基本的なニュースアプリケーションを&lt;/strong&gt;作成し&lt;strong&gt;ます&lt;/strong&gt;。最初に、静的ページをロードできるコードを記述します。次に、データベースからニュース項目を読み取るニュースセクションを作成します。最後に、フォームを追加して、データベースにニュース項目を作成します。</target>
        </trans-unit>
        <trans-unit id="1c114a777f02f064ab4de2ff8d4a90fecb01e21f" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;application/controllers/&lt;/strong&gt; directory, create a file called Smileys.php and place the code below in it.</source>
          <target state="translated">あなたには&lt;strong&gt;アプリケーション/コントローラ/&lt;/strong&gt;ディレクトリ、Smileys.phpというファイルを作成し、その中で下のコードを配置します。</target>
        </trans-unit>
        <trans-unit id="25a6c342ff346fcef1cab1051301f6a8ea9a9ad5" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;application/views/&lt;/strong&gt; directory, create a file called &lt;strong&gt;smiley_view.php&lt;/strong&gt; and place this code in it:</source>
          <target state="translated">あなたの中&lt;strong&gt;のアプリケーション/ビュー/&lt;/strong&gt;ディレクトリ、というファイルを作成&lt;strong&gt;smiley_view.phpを&lt;/strong&gt;し、その中にこのコードを配置します。</target>
        </trans-unit>
        <trans-unit id="2af2ea24eb26cd73125b33bd603a1118fe718c3b" translate="yes" xml:space="preserve">
          <source>In your &lt;strong&gt;config/config.php&lt;/strong&gt; file you can specify a suffix that will be added to all URLs generated by CodeIgniter. For example, if a URL is this:</source>
          <target state="translated">あなたで&lt;strong&gt;のconfig / config.phpの&lt;/strong&gt;ファイルあなたはCodeIgniterのによって生成されたすべてのURLに追加されるサフィックスを指定することができます。たとえば、URLが次の場合：</target>
        </trans-unit>
        <trans-unit id="6b905381588895f31781cdf0c332a26a036ea3b1" translate="yes" xml:space="preserve">
          <source>In your CodeIgniter &lt;strong&gt;system&lt;/strong&gt; folder, you will find a &lt;strong&gt;language&lt;/strong&gt; sub-directory containing a set of language files for the &lt;strong&gt;english&lt;/strong&gt; idiom. The files in this directory (&lt;strong&gt;system/language/english/&lt;/strong&gt;) define the regular messages, error messages, and other generally output terms or expressions, for the different parts of the CodeIgniter framework.</source>
          <target state="translated">CodeIgniter &lt;strong&gt;システム&lt;/strong&gt;フォルダーには、&lt;strong&gt;英語の&lt;/strong&gt;イディオムの言語ファイルのセットを含む&lt;strong&gt;言語&lt;/strong&gt;サブディレクトリがあります。このディレクトリ（&lt;strong&gt;system / language / english /&lt;/strong&gt;）内のファイルは、CodeIgniterフレームワークのさまざまな部分について、通常のメッセージ、エラーメッセージ、およびその他の一般的な出力用語または式を定義します。&lt;strong&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="daaa9b107552a9ba5fe078718a29552ff93b1228" translate="yes" xml:space="preserve">
          <source>In your controller, change the &amp;ldquo;username&amp;rdquo; rule to this:</source>
          <target state="translated">コントローラーで、「ユーザー名」ルールを次のように変更します。</target>
        </trans-unit>
        <trans-unit id="7e4eb6456b5ab23de5d1d03352fdb46087fb6c3c" translate="yes" xml:space="preserve">
          <source>In your controllers, you can override the defaults and config file values by calling the &lt;code&gt;set_profiler_sections()&lt;/code&gt; method of the &lt;a href=&quot;../libraries/output&quot;&gt;Output Library&lt;/a&gt;:</source>
          <target state="translated">コントローラでは、&lt;a href=&quot;../libraries/output&quot;&gt;出力ライブラリの&lt;/a&gt; &lt;code&gt;set_profiler_sections()&lt;/code&gt; メソッドを呼び出すことにより、デフォルトと設定ファイルの値を上書きできます。</target>
        </trans-unit>
        <trans-unit id="0f6ad7c808e4494e58979d03691b45eec69160fe" translate="yes" xml:space="preserve">
          <source>In your validation config file, you will name your rule group member/signup:</source>
          <target state="translated">検証設定ファイルでは、ルールグループの名前を membersignup とします。</target>
        </trans-unit>
        <trans-unit id="83dd44b97b6a7a5bdce797eefa084b3f067ebc9f" translate="yes" xml:space="preserve">
          <source>Increments a string by appending a number to it or increasing the number. Useful for creating &amp;ldquo;copies&amp;rdquo; or a file or duplicating database content which has unique titles or slugs.</source>
          <target state="translated">文字列に数値を追加するか、数値を増やすことにより、文字列をインクリメントします。「コピー」またはファイルを作成する場合、または一意のタイトルまたはスラッグを持つデータベースコンテンツを複製する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="5a6bdab0c6db458e90545a059bae821391f2bc1c" translate="yes" xml:space="preserve">
          <source>Inflector</source>
          <target state="translated">Inflector</target>
        </trans-unit>
        <trans-unit id="8b2f69700fac3a46664ddc4767e8c233f82f3bdc" translate="yes" xml:space="preserve">
          <source>Inflector Helper</source>
          <target state="translated">インフレクターヘルパー</target>
        </trans-unit>
        <trans-unit id="4887759530b0843965faeadd02359c7845dff2fc" translate="yes" xml:space="preserve">
          <source>Information About Your Database</source>
          <target state="translated">あなたのデータベースについての情報</target>
        </trans-unit>
        <trans-unit id="0e603abcd1a5cd00bfffc089dde0ad742072357f" translate="yes" xml:space="preserve">
          <source>Information From Executing a Query</source>
          <target state="translated">クエリ実行からの情報</target>
        </trans-unit>
        <trans-unit id="36ac2282e060300d6bc796647ed4007ca4656844" translate="yes" xml:space="preserve">
          <source>Information about the hashed password</source>
          <target state="translated">ハッシュ化されたパスワードに関する情報</target>
        </trans-unit>
        <trans-unit id="de7cd9e5602d11f9c93b107b113724b812a1909d" translate="yes" xml:space="preserve">
          <source>Information about the uploaded file</source>
          <target state="translated">アップロードされたファイルの情報</target>
        </trans-unit>
        <trans-unit id="140ad78a4dcc3766634a5a6c133fe60ec3b32e5a" translate="yes" xml:space="preserve">
          <source>Information on the entire cache database</source>
          <target state="translated">キャッシュデータベース全体の情報</target>
        </trans-unit>
        <trans-unit id="60ec494ee20a43921a8e4ea524f3499761718bac" translate="yes" xml:space="preserve">
          <source>Informational Messages. These are the lowest priority messages, simply giving information regarding some process.</source>
          <target state="translated">情報メッセージ。これらは最も優先度の低いメッセージで、単に何らかのプロセスに関する情報を提供するものです。</target>
        </trans-unit>
        <trans-unit id="9d7596b8a506e21f3adfcf509940dae4a61bf78e" translate="yes" xml:space="preserve">
          <source>Initialize database settings, establish a connection to the database.</source>
          <target state="translated">データベースの設定を初期化し、データベースへの接続を確立します。</target>
        </trans-unit>
        <trans-unit id="f5b9ca96e0e6702b654cb5fce04a8d5b0aa5821e" translate="yes" xml:space="preserve">
          <source>Initializes (configures) the library to use a different driver, cipher, mode or key.</source>
          <target state="translated">異なるドライバ、暗号、モード、鍵を使用するようにライブラリを初期化(設定)します。</target>
        </trans-unit>
        <trans-unit id="450c70041c0560fd7ef7748a94e9a8412cbc1e15" translate="yes" xml:space="preserve">
          <source>Initializes all the email variables to an empty state. This method is intended for use if you run the email sending method in a loop, permitting the data to be reset between cycles.</source>
          <target state="translated">すべてのメール変数を空の状態に初期化します。このメソッドは、電子メール送信メソッドをループで実行し、サイクル間でデータをリセットできるようにする場合に使用することを意図しています。</target>
        </trans-unit>
        <trans-unit id="98c502ac468292017ae5f192b90eb7400f1f6e79" translate="yes" xml:space="preserve">
          <source>Initializes the Calendaring preferences. Accepts an associative array as input, containing display preferences.</source>
          <target state="translated">暦の設定を初期化します。入力として、表示設定を含む連想配列を受け取ります。</target>
        </trans-unit>
        <trans-unit id="ee7c5d74769ec578a1058c6d3c8b0ffa30736c3d" translate="yes" xml:space="preserve">
          <source>Initializes the Pagination class with your preferred options.</source>
          <target state="translated">お好みのオプションでページネーションクラスを初期化します。</target>
        </trans-unit>
        <trans-unit id="70b2358f732fa8c9e42689376cbca9969caf9ecd" translate="yes" xml:space="preserve">
          <source>Initializes the XML-RPC library. Accepts an associative array containing your settings.</source>
          <target state="translated">XML-RPC ライブラリを初期化します。設定を含む連想配列を受け取ります。</target>
        </trans-unit>
        <trans-unit id="d7a85696800ed0af25e9c76faa785c85f63437f6" translate="yes" xml:space="preserve">
          <source>Initializes the class for processing an image.</source>
          <target state="translated">画像を処理するためのクラスを初期化します。</target>
        </trans-unit>
        <trans-unit id="b05259a752965e8c5b8ca174aa3b138b33c15c3e" translate="yes" xml:space="preserve">
          <source>Initializing a Session</source>
          <target state="translated">セッションの初期化</target>
        </trans-unit>
        <trans-unit id="2329581287b8eeed5eae7f757a25730c77006015" translate="yes" xml:space="preserve">
          <source>Initializing the Class</source>
          <target state="translated">クラスの初期化</target>
        </trans-unit>
        <trans-unit id="e05d9053a05a2f6ed94612a25b725c2726c66a41" translate="yes" xml:space="preserve">
          <source>Initializing the Database Class</source>
          <target state="translated">データベースクラスの初期化</target>
        </trans-unit>
        <trans-unit id="0ade5d8c9764e51b720a1035d44f0c3b829c5f37" translate="yes" xml:space="preserve">
          <source>Initializing the Forge Class</source>
          <target state="translated">フォージクラスの初期化</target>
        </trans-unit>
        <trans-unit id="9f88fa37e1c12890d04ecd266ae43de5c7fdda5d" translate="yes" xml:space="preserve">
          <source>Initializing the Shopping Cart Class</source>
          <target state="translated">ショッピングカートクラスの初期化</target>
        </trans-unit>
        <trans-unit id="cccc001a54c9d96d4335172095fa54ae98c511af" translate="yes" xml:space="preserve">
          <source>Initializing the Upload Class</source>
          <target state="translated">アップロードクラスの初期化</target>
        </trans-unit>
        <trans-unit id="915bc66dbf90b3b17ffcb969a34d09ccc43208dc" translate="yes" xml:space="preserve">
          <source>Initializing the Utility Class</source>
          <target state="translated">ユーティリティクラスの初期化</target>
        </trans-unit>
        <trans-unit id="b568d47f2e244743b1fd7472db836ef9769c21f8" translate="yes" xml:space="preserve">
          <source>Input</source>
          <target state="translated">Input</target>
        </trans-unit>
        <trans-unit id="ddfdc8701ec1b817c00ddb898531f5b1c6f8a037" translate="yes" xml:space="preserve">
          <source>Input Class</source>
          <target state="translated">入力クラス</target>
        </trans-unit>
        <trans-unit id="29828082e95fd0d1118e948c6edbcb0fa39e8cdd" translate="yes" xml:space="preserve">
          <source>Input Filtering</source>
          <target state="translated">入力フィルタリング</target>
        </trans-unit>
        <trans-unit id="1ec54b9f145d0c22611e83b27bdc657f83aac9a8" translate="yes" xml:space="preserve">
          <source>Input stream array if no parameters supplied, otherwise the specified value if found or NULL if not</source>
          <target state="translated">パラメータが与えられていない場合は入力ストリームの配列、そうでない場合は指定された値、そうでない場合は NULL。</target>
        </trans-unit>
        <trans-unit id="a867c81b10593230b68cede96356f54aeb47293f" translate="yes" xml:space="preserve">
          <source>Insert items into the cart and save it to the session table. Returns TRUE on success and FALSE on failure.</source>
          <target state="translated">カートにアイテムを挿入し、セッションテーブルに保存します。成功した場合は TRUE、失敗した場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="0dd2b481ad724309af4e29174757be7f9ad67dd8" translate="yes" xml:space="preserve">
          <source>Inserting Data</source>
          <target state="translated">データの挿入</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="550c70d12638cfa6aa8f9e73e5ae88f8cbc4e453" translate="yes" xml:space="preserve">
          <source>Installation Instructions</source>
          <target state="translated">インストール手順</target>
        </trans-unit>
        <trans-unit id="c15f06834a0af85811d33247bd21731738bfe214" translate="yes" xml:space="preserve">
          <source>Instead of calling the &lt;code&gt;get_news()&lt;/code&gt; method without a parameter, the &lt;code&gt;$slug&lt;/code&gt; variable is passed, so it will return the specific news item. The only things left to do is create the corresponding view at &lt;em&gt;application/views/news/view.php&lt;/em&gt;. Put the following code in this file.</source>
          <target state="translated">パラメータなしで &lt;code&gt;get_news()&lt;/code&gt; メソッドを呼び出す代わりに、 &lt;code&gt;$slug&lt;/code&gt; 変数が渡されるため、特定のニュースアイテムが返されます。あとは、&lt;em&gt;application / views / news / view.phpに&lt;/em&gt;対応するビューを作成する&lt;em&gt;だけ&lt;/em&gt;です。このファイルに次のコードを挿入します。</target>
        </trans-unit>
        <trans-unit id="f9ccccf1f79bdde1a953a129d0af388be7c5862c" translate="yes" xml:space="preserve">
          <source>Instead of the &lt;em&gt;maxlength&lt;/em&gt; and &lt;em&gt;size&lt;/em&gt; attributes in the above example, you will instead specify &lt;em&gt;rows&lt;/em&gt; and &lt;em&gt;cols&lt;/em&gt;.</source>
          <target state="translated">上記の例の&lt;em&gt;maxlength&lt;/em&gt;および&lt;em&gt;size&lt;/em&gt;属性の代わりに、&lt;em&gt;rows&lt;/em&gt;および&lt;em&gt;colsを&lt;/em&gt;指定します。</target>
        </trans-unit>
        <trans-unit id="eaa94b0f14a39ee4f35a23a687593fd213e3e46e" translate="yes" xml:space="preserve">
          <source>Instead of writing database operations right in the controller, queries should be placed in a model, so they can easily be reused later. Models are the place where you retrieve, insert, and update information in your database or other data stores. They represent your data.</source>
          <target state="translated">データベースの操作をコントローラ内で直接記述するのではなく、クエリをモデル内に配置し、後で簡単に再利用できるようにします。モデルは、データベースや他のデータストアの情報を取得、挿入、更新する場所です。モデルはデータを表現します。</target>
        </trans-unit>
        <trans-unit id="6a4770879bf02b01c62b2021c4fa40f55f566681" translate="yes" xml:space="preserve">
          <source>Instead, we are going to open the terminal in Mac/Linux or go to Run &amp;gt; &amp;ldquo;cmd&amp;rdquo; in Windows and navigate to our CodeIgniter project.</source>
          <target state="translated">代わりに、Mac / Linuxでターミナルを開くか、Windowsで[実行]&amp;gt; [cmd]に移動して、CodeIgniterプロジェクトに移動します。</target>
        </trans-unit>
        <trans-unit id="ea2c720502deec2915493d8a2cb72e3b14800a07" translate="yes" xml:space="preserve">
          <source>Instead, you should do something like this, depending on your environment</source>
          <target state="translated">その代わり、環境に応じて、次のようなことをする必要があります。</target>
        </trans-unit>
        <trans-unit id="b2e6a414d6b7905e9145e3d59307052be31b6a67" translate="yes" xml:space="preserve">
          <source>Integrate with other applications in other languages. For example, a random C++ script could call one command and run code in your models!</source>
          <target state="translated">他の言語の他のアプリケーションとの統合。例えば、ランダムなC++スクリプトは、1つのコマンドを呼び出してモデル内でコードを実行することができます!</target>
        </trans-unit>
        <trans-unit id="3b755f7b857b999860755840e5f0964f6b120c4d" translate="yes" xml:space="preserve">
          <source>Internationalization</source>
          <target state="translated">Internationalization</target>
        </trans-unit>
        <trans-unit id="2473e96bc614a911821242119918a241a41836d6" translate="yes" xml:space="preserve">
          <source>Introduction</source>
          <target state="translated">Introduction</target>
        </trans-unit>
        <trans-unit id="be0e3691ffce584022a34ea3a922d522ecd36f54" translate="yes" xml:space="preserve">
          <source>Introduction, this page, which gives you an overview of what to expect.</source>
          <target state="translated">はじめに、このページでは、何を期待しているかの概要をご紹介しています。</target>
        </trans-unit>
        <trans-unit id="9f2d2cd6702745a581bd59874d849b30a2299789" translate="yes" xml:space="preserve">
          <source>It accepts a positive integer value, which defaults to 0 and returns TRUE on success or FALSE on failure.</source>
          <target state="translated">これは正の整数値を受け付けます。デフォルトは 0 で、成功した場合は TRUE、失敗した場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="1f056bd2bbc01e7ae8c64dd31b2eca754da54b7b" translate="yes" xml:space="preserve">
          <source>It also lets you display a set of smiley images that when clicked will be inserted into a form field. For example, if you have a blog that allows user commenting you can show the smileys next to the comment form. Your users can click a desired smiley and with the help of some JavaScript it will be placed into the form field.</source>
          <target state="translated">また、クリックするとフォームフィールドに挿入されるスマイリー画像のセットを表示することもできます。例えば、ユーザーがコメントできるブログをお持ちの場合、コメントフォームの横にスマイリー画像を表示することができます。ユーザーは希望のスマイリーをクリックすると、JavaScriptの助けを借りてフォームフィールドに配置されます。</target>
        </trans-unit>
        <trans-unit id="3dff7037a297e251b1aa9d665868de3c96f8b45c" translate="yes" xml:space="preserve">
          <source>It can range from 0 to 9, with 9 being the highest and 0 effectively disabling compression:</source>
          <target state="translated">0から9までの範囲があり、9が最も高く、0が効果的に圧縮を無効にします。</target>
        </trans-unit>
        <trans-unit id="c0cc03b5def98a6267a07ed390016614a67395d1" translate="yes" xml:space="preserve">
          <source>It can safely be said that it works exactly like PHP&amp;rsquo;s own default session implementation, but in case this is an important detail for you, have it mind that it is in fact not the same code and it has some limitations (and advantages).</source>
          <target state="translated">これは、PHPのデフォルトセッション実装とまったく同じように機能すると言えますが、これが重要な詳細である場合は、実際には同じコードではなく、いくつかの制限（および利点）があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="474abb6d64d8a72edd8e851e9c969391e9ceecf4" translate="yes" xml:space="preserve">
          <source>It frees the memory associated with the result and deletes the result resource ID. Normally PHP frees its memory automatically at the end of script execution. However, if you are running a lot of queries in a particular script you might want to free the result after each query result has been generated in order to cut down on memory consumption.</source>
          <target state="translated">これは、結果に関連するメモリを解放し、結果のリソースIDを削除します。通常、PHPはスクリプトの実行終了時に自動的にメモリを解放します。しかし、特定のスクリプトで多くのクエリを実行している場合は、 メモリ消費を抑えるためにクエリ結果が生成された後に結果を解放したほうがいいかもしれません。</target>
        </trans-unit>
        <trans-unit id="8ee6d29acd7a4685234ead7c80ff73f0ca8b06f0" translate="yes" xml:space="preserve">
          <source>It goes without saying that you should guard your key carefully. Should someone gain access to your key, the data will be easily decoded. If your server is not totally under your control it&amp;rsquo;s impossible to ensure key security so you may want to think carefully before using it for anything that requires high security, like storing credit card numbers.</source>
          <target state="translated">言うまでもなく、キーは慎重に保護する必要があります。誰かがあなたのキーにアクセスした場合、データは簡単にデコードされます。サーバーが完全に制御されていない場合、キーのセキュリティを確保することは不可能であるため、クレジットカード番号の保存など、高度なセキュリティが必要なものに使用する前に慎重に検討することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="16d5473c4a5a30e2758515a42a84d2c7b08ff216" translate="yes" xml:space="preserve">
          <source>It goes without saying that you should guard your key carefully. Should someone gain access to your key, the data will be easily decrypted. If your server is not totally under your control it&amp;rsquo;s impossible to ensure key security so you may want to think carefully before using it for anything that requires high security, like storing credit card numbers.</source>
          <target state="translated">言うまでもなく、キーは慎重に保護する必要があります。誰かがあなたのキーにアクセスした場合、データは簡単に復号化されます。サーバーが完全に制御されていない場合、キーのセキュリティを確保することは不可能であるため、クレジットカード番号の保存など、高度なセキュリティが必要なものに使用する前に慎重に検討することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="06ffce343ea9c2c702b2bd8baedfe1ca2c50e24d" translate="yes" xml:space="preserve">
          <source>It helps avoid having to write code like this:</source>
          <target state="translated">このようなコードを書かなくても済むようになります。</target>
        </trans-unit>
        <trans-unit id="cb7f9eceedc3b8cee9280424bc4f94cd2adbc727" translate="yes" xml:space="preserve">
          <source>It is &lt;em&gt;critical&lt;/em&gt; that you handle passwords in your application properly.</source>
          <target state="translated">アプリケーションでパスワードを適切に処理することが&lt;em&gt;重要&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="f53c68f3b8ab5ffc9af4b08ea4fe18e93ced8c25" translate="yes" xml:space="preserve">
          <source>It is also implemented in a way that aims to match the standard implementations in other programming languages and libraries.</source>
          <target state="translated">また、他のプログラミング言語やライブラリで標準実装されているものとの一致を目指して実装されています。</target>
        </trans-unit>
        <trans-unit id="d1f9ac5822073c6527bcddcac665eecd2c9b3094" translate="yes" xml:space="preserve">
          <source>It is possible to move your application directory to a different location on your server than your web root. To do so open your main index.php and set a &lt;em&gt;full server path&lt;/em&gt; in the &lt;code&gt;$application_folder&lt;/code&gt; variable:</source>
          <target state="translated">アプリケーションディレクトリを、Webルート以外のサーバー上の別の場所に移動することができます。これを行うには、メインのindex.phpを開き、 &lt;code&gt;$application_folder&lt;/code&gt; 変数に&lt;em&gt;完全なサーバーパス&lt;/em&gt;を設定します。</target>
        </trans-unit>
        <trans-unit id="424278221c20d5a0b7e5d3a7a1519cf3041a3318" translate="yes" xml:space="preserve">
          <source>It is possible to use HTTP verbs (request method) to define your routing rules. This is particularly useful when building RESTful applications. You can use standard HTTP verbs (GET, PUT, POST, DELETE, PATCH) or a custom one such (e.g. PURGE). HTTP verb rules are case-insensitive. All you need to do is to add the verb as an array key to your route. Example:</source>
          <target state="translated">HTTP の動詞 (リクエストメソッド)を使用してルーティングルールを定義することができます。これはRESTfulアプリケーションを構築する際に特に便利です。標準のHTTP動詞(GET,PUT,POST,DELETE,PATCH)やカスタムの動詞(PURGEなど)を使用することができます。HTTP動詞のルールは大文字小文字を区別しません。必要なのは、動詞を配列のキーとしてルートに追加することだけです。例</target>
        </trans-unit>
        <trans-unit id="e209da0180d202ad4bd504f83081f6b11002a4a9" translate="yes" xml:space="preserve">
          <source>It is possible to use the library in this way, without setting an &lt;em&gt;encryption_key&lt;/em&gt; in your configuration file.</source>
          <target state="translated">設定ファイルに&lt;em&gt;encryption_key&lt;/em&gt;を設定することなく、この方法でライブラリを使用することが可能です。</target>
        </trans-unit>
        <trans-unit id="ca2026956fe3a75f5ca03349a32bc3b531bbd4b7" translate="yes" xml:space="preserve">
          <source>It is publicly available due to its otherwise general purpose. It is described in &lt;a href=&quot;https://tools.ietf.org/rfc/rfc5869.txt&quot;&gt;RFC 5869&lt;/a&gt;.</source>
          <target state="translated">それは他の点では一般的な目的のために公に利用可能です。&lt;a href=&quot;https://tools.ietf.org/rfc/rfc5869.txt&quot;&gt;RFC 5869で&lt;/a&gt;説明されています。</target>
        </trans-unit>
        <trans-unit id="5a5853d761ba5d1d4b99bdc0140376c89e8e7b42" translate="yes" xml:space="preserve">
          <source>It is useful if you want to check for the availability of functions such as &lt;code&gt;eval()&lt;/code&gt; and &lt;code&gt;exec()&lt;/code&gt;, which are dangerous and might be disabled on servers with highly restrictive security policies.</source>
          <target state="translated">&lt;code&gt;eval()&lt;/code&gt; や &lt;code&gt;exec()&lt;/code&gt; などの機能が利用可能かどうかをチェックする場合に役立ちます。これらは危険であり、セキュリティポリシーが非常に制限されているサーバーでは無効になっている可能性があります。</target>
        </trans-unit>
        <trans-unit id="466ae5ac051d11dff63eb5c1baff6089a49a777e" translate="yes" xml:space="preserve">
          <source>It is useful in preventing Cross Site Scripting (XSS).</source>
          <target state="translated">クロスサイトスクリプティング(XSS)対策に役立ちます。</target>
        </trans-unit>
        <trans-unit id="83077494b1e9c5b1a9d328e3081d5700e74206d2" translate="yes" xml:space="preserve">
          <source>It must be noted that to ensure maximum security, such key &lt;em&gt;should&lt;/em&gt; not only be as strong as possible, but also often changed. Such behavior however is rarely practical or possible to implement, and that is why CodeIgniter gives you the ability to configure a single key that is to be used (almost) every time.</source>
          <target state="translated">最大限のセキュリティを確保するために、そのようなキー&lt;em&gt;は&lt;/em&gt;できるだけ強力であるだけでなく、頻繁に変更する必要があることに注意する必要があります。ただし、このような動作はほとんど実用的ではないか、実装が可能です。そのため、CodeIgniterは、（ほぼ）毎回使用される単一のキーを構成する機能を提供します。</target>
        </trans-unit>
        <trans-unit id="e02c70dce90df70656c234aabbc56d3d20422909" translate="yes" xml:space="preserve">
          <source>It pre-processes global input data for security.</source>
          <target state="translated">セキュリティのためにグローバル入力データを前処理します。</target>
        </trans-unit>
        <trans-unit id="4589fdacf6d3b296030dfaf5705f17239dc3e97e" translate="yes" xml:space="preserve">
          <source>It provides some helper methods for fetching input data and pre-processing it.</source>
          <target state="translated">入力データの取得や前処理を行うためのヘルパーメソッドを提供します。</target>
        </trans-unit>
        <trans-unit id="13f043c368bb29d7a757bdd5e9888a2cf3b5a67f" translate="yes" xml:space="preserve">
          <source>It returns whatever the database drivers&amp;rsquo; &amp;ldquo;execute&amp;rdquo; function returns. That typically is TRUE/FALSE on success or failure for write type queries such as INSERT, DELETE or UPDATE statements (which is what it really should be used for) and a resource/object on success for queries with fetchable results.</source>
          <target state="translated">データベースドライバの「実行」関数が返すものは何でも返します。これは通常、INSERT、DELETE、またはUPDATEステートメントなどの書き込みタイプのクエリ（実際に使用する必要があるもの）の成功または失敗、およびフェッチ可能な結果を​​持つクエリの成功時のリソース/オブジェクトではTRUE / FALSEです。</target>
        </trans-unit>
        <trans-unit id="e16ee7aab2f904d2beab08e0a007ac9d5a544b7c" translate="yes" xml:space="preserve">
          <source>It should be noted that flashdata variables are regular session vars, only marked in a specific way under the &amp;lsquo;__ci_vars&amp;rsquo; key (please don&amp;rsquo;t touch that one, you&amp;rsquo;ve been warned).</source>
          <target state="translated">flashdata変数は通常のセッション変数であり、「__ ci_vars」キーの下で特定の方法でのみマークされていることに注意してください（警告されていますので、触れないでください）。</target>
        </trans-unit>
        <trans-unit id="724798158ce043b7a9e5a997670f70913caac2c1" translate="yes" xml:space="preserve">
          <source>It uses a form helper to create the form opening. Technically, this isn&amp;rsquo;t necessary. You could create the form using standard HTML. However, the benefit of using the helper is that it generates the action URL for you, based on the URL in your config file. This makes your application more portable in the event your URLs change.</source>
          <target state="translated">フォームヘルパーを使用してフォームの開口部を作成します。技術的には、これは必要ありません。標準のHTMLを使用してフォームを作成できます。ただし、ヘルパーを使用する利点は、設定ファイルのURLに基​​づいてアクションURLを生成することです。これにより、URLが変更された場合のアプリケーションの移植性が向上します。</target>
        </trans-unit>
        <trans-unit id="c0380cf74129b0f2f2320763e4f1346519d79484" translate="yes" xml:space="preserve">
          <source>It will also return the session ID by calling &lt;code&gt;session_id()&lt;/code&gt; if you try to access &lt;code&gt;$this-&amp;gt;session-&amp;gt;session_id&lt;/code&gt;.</source>
          <target state="translated">また、 &lt;code&gt;$this-&amp;gt;session-&amp;gt;session_id&lt;/code&gt; にアクセスしようとすると、 &lt;code&gt;session_id()&lt;/code&gt; を呼び出してセッションIDを返します。</target>
        </trans-unit>
        <trans-unit id="e8c10efb9fc24611bb86cc63521358717cee07c8" translate="yes" xml:space="preserve">
          <source>It won&amp;rsquo;t affect to the &lt;code&gt;show_404()&lt;/code&gt; function, which will continue loading the default &lt;em&gt;error_404.php&lt;/em&gt; file at &lt;em&gt;application/views/errors/error_404.php&lt;/em&gt;.</source>
          <target state="translated">これは &lt;code&gt;show_404()&lt;/code&gt; 関数には影響しません。この関数は、&lt;em&gt;application / views / errors / error_404.phpに&lt;/em&gt;あるデフォルトの&lt;em&gt;error_404.php&lt;/em&gt;ファイルをロードし続けます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="6bb0e98c0e4d57375e0d4f0f8f5f74d7b3f1918b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a good practice to use a common prefix for all messages in a given file to avoid collisions with similarly named items in other files. For example, if you are creating error messages you might prefix them with error_</source>
          <target state="translated">他のファイル内の同様の名前のアイテムとの衝突を避けるために、特定のファイル内のすべてのメッセージに共通のプレフィックスを使用することは良い習慣です。たとえば、エラーメッセージを作成している場合は、それらの前にerror_を付けることができます。</target>
        </trans-unit>
        <trans-unit id="a43b31509f7d6d07f8998d9fa85bde41f1d9d437" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s a very good security practice to escape your data before submitting it into your database. CodeIgniter has three methods that help you do this:</source>
          <target state="translated">データベースに送信する前にデータをエスケープすることは、非常に優れたセキュリティ対策です。CodeIgniterには、これを行うのに役立つ3つのメソッドがあります。</target>
        </trans-unit>
        <trans-unit id="03691f328e0073329d8d231ccb3ba57fa3807d00" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important for you to know that the encoded messages the encryption function generates will be approximately 2.6 times longer than the original message. For example, if you encrypt the string &amp;ldquo;my super secret data&amp;rdquo;, which is 21 characters in length, you&amp;rsquo;ll end up with an encoded string that is roughly 55 characters (we say &amp;ldquo;roughly&amp;rdquo; because the encoded string length increments in 64 bit clusters, so it&amp;rsquo;s not exactly linear). Keep this information in mind when selecting your data storage mechanism. Cookies, for example, can only hold 4K of information.</source>
          <target state="translated">暗号化機能が生成するエンコードされたメッセージは、元のメッセージよりも約2.6倍長いことを知っておくことが重要です。たとえば、長さが21文字の文字列「my super secret data」を暗号化すると、約55文字のエンコードされた文字列になります（エンコードされた文字列の長さが64ずつ増加するため、「大まかに」と言います）ビットクラスタなので、正確に線形ではありません）。データストレージメカニズムを選択するときは、この情報に留意してください。たとえば、Cookieは4Kの情報しか保持できません。</target>
        </trans-unit>
        <trans-unit id="d6641c0023d871e2551971a2584af112af5fc537" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s important for you to understand that once initialized, the Session class runs automatically. There is nothing you need to do to cause the above behavior to happen. You can, as you&amp;rsquo;ll see below, work with session data, but the process of reading, writing, and updating a session is automatic.</source>
          <target state="translated">初期化されると、Sessionクラスが自動的に実行されることを理解することが重要です。上記の動作を発生させるために必要なことは何もありません。以下に示すように、セッションデータを操作できますが、セッションの読み取り、書き込み、更新のプロセスは自動的に行われます。</target>
        </trans-unit>
        <trans-unit id="0b5e4f23b885bc15d872f08d6c91b7892c6bc18a" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s probably important for you to know that an encrypted string is usually longer than the original, plain-text string (depending on the cipher).</source>
          <target state="translated">暗号化された文字列は通常、元のプレーンテキストの文字列より長い（暗号によって異なる）ことを知っておくことがおそらく重要です。</target>
        </trans-unit>
        <trans-unit id="ecdda59aea5ee67d7d854c969ccf7f4f4b4a4c54" translate="yes" xml:space="preserve">
          <source>Item</source>
          <target state="translated">Item</target>
        </trans-unit>
        <trans-unit id="8c1d6beff1ccc3599bacbca736bd55108dd8cfb8" translate="yes" xml:space="preserve">
          <source>Item value or FALSE if not found</source>
          <target state="translated">アイテムの値、または見つからなかった場合はFALSE</target>
        </trans-unit>
        <trans-unit id="1ca76be7b84d714e17e61b65c84bec4810f63dd5" translate="yes" xml:space="preserve">
          <source>Javascript</source>
          <target state="translated">Javascript</target>
        </trans-unit>
        <trans-unit id="d8e89e187b69b05993a962b0a0b48b2220a55edc" translate="yes" xml:space="preserve">
          <source>Javascript Class</source>
          <target state="translated">Javascriptクラス</target>
        </trans-unit>
        <trans-unit id="483b1191fe93d2b6bd5a0e46521f9146b7672214" translate="yes" xml:space="preserve">
          <source>Just as with any other variable, unsetting a value in &lt;code&gt;$_SESSION&lt;/code&gt; can be done through &lt;code&gt;unset()&lt;/code&gt;:</source>
          <target state="translated">他の変数と同様に、 &lt;code&gt;$_SESSION&lt;/code&gt; SESSIONの値の &lt;code&gt;unset()&lt;/code&gt; を解除するには、unset（）を使用します。</target>
        </trans-unit>
        <trans-unit id="7d2a7abfdb52d3ec01b83e7a4950a183477877ac" translate="yes" xml:space="preserve">
          <source>Just as with the &amp;lsquo;files&amp;rsquo; and &amp;lsquo;database&amp;rsquo; drivers, you must also configure the storage location for your sessions via the &lt;code&gt;$config['sess_save_path']&lt;/code&gt; setting. The format here is a bit different and complicated at the same time. It is best explained by the &lt;em&gt;phpredis&lt;/em&gt; extension&amp;rsquo;s README file, so we&amp;rsquo;ll simply link you to it:</source>
          <target state="translated">'files'および 'database'ドライバーと同様に、 &lt;code&gt;$config['sess_save_path']&lt;/code&gt; 設定を介してセッションのストレージの場所も構成する必要があります。ここのフォーマットは少し異なり、同時に複雑です。これは、&lt;em&gt;phpredis&lt;/em&gt;拡張機能のREADMEファイルで説明されるので、リンクします。</target>
        </trans-unit>
        <trans-unit id="2491e6bde0e91af60a09f7ea1fd9815f8a3bdea9" translate="yes" xml:space="preserve">
          <source>Just as with the other methods (resizing, cropping, and rotating) the general process for watermarking involves setting the preferences corresponding to the action you intend to perform, then calling the watermark function. Here is an example:</source>
          <target state="translated">他のメソッド(サイズ変更、トリミング、回転)と同様に、透かしの一般的なプロセスでは、実行したいアクションに対応する設定を設定してから、透かし関数を呼び出す必要があります。ここに例を示します。</target>
        </trans-unit>
        <trans-unit id="96ed68d775470cf8442b50eb6292a884ce6d02c0" translate="yes" xml:space="preserve">
          <source>Keep / reestablish the database connection if no queries have been sent for a length of time exceeding the server&amp;rsquo;s idle timeout.</source>
          <target state="translated">サーバーのアイドルタイムアウトを超えてクエリが送信されなかった場合は、データベース接続を維持または再確立します。</target>
        </trans-unit>
        <trans-unit id="25e5fbc071e8d065a46d0006c8fd2db32aad0921" translate="yes" xml:space="preserve">
          <source>Keep this information in mind when selecting your data storage mechanism. Cookies, for example, can only hold 4K of information.</source>
          <target state="translated">データ保存メカニズムを選択する際には、この情報を念頭に置いてください。例えば、クッキーは4Kの情報しか保持できません。</target>
        </trans-unit>
        <trans-unit id="c67dd20ee842986086a0a915ddc2a279490130ed" translate="yes" xml:space="preserve">
          <source>Key</source>
          <target state="translated">Key</target>
        </trans-unit>
        <trans-unit id="ebf4d367be08cbb6c85e8815b4d4db37ec0899bd" translate="yes" xml:space="preserve">
          <source>Key lengths (bits / bytes)</source>
          <target state="translated">鍵の長さ(ビット・バイト</target>
        </trans-unit>
        <trans-unit id="89b86ab0e66f527166d98df92ddbcf5416ed58f6" translate="yes" xml:space="preserve">
          <source>Language</source>
          <target state="translated">Language</target>
        </trans-unit>
        <trans-unit id="a5b62ae8fa715e3de396d77474ea916aef8a842e" translate="yes" xml:space="preserve">
          <source>Language Class</source>
          <target state="translated">言語クラス</target>
        </trans-unit>
        <trans-unit id="bb1cf7364dda164e2dfd6089c6047b35b9f52fd6" translate="yes" xml:space="preserve">
          <source>Language Helper</source>
          <target state="translated">言語ヘルパー</target>
        </trans-unit>
        <trans-unit id="4fbff0545707d2b5f2b2f3e3bd53b2075605f96b" translate="yes" xml:space="preserve">
          <source>Language files found in the &lt;em&gt;system/language/&lt;/em&gt; directory</source>
          <target state="translated">&lt;em&gt;system / language /&lt;/em&gt;ディレクトリにある言語ファイル</target>
        </trans-unit>
        <trans-unit id="acc95e18045cff08f47333ad958ef4c18e29aaf2" translate="yes" xml:space="preserve">
          <source>Language files must be named with &lt;strong&gt;_lang.php&lt;/strong&gt; as the filename extension. For example, let&amp;rsquo;s say you want to create a file containing error messages. You might name it: error_lang.php</source>
          <target state="translated">言語ファイルには、ファイル名拡張子として&lt;strong&gt;_lang.phpを使用&lt;/strong&gt;して名前を&lt;strong&gt;付ける&lt;/strong&gt;必要があります。たとえば、エラーメッセージを含むファイルを作成するとします。あなたはそれに名前を付けるかもしれません：error_lang.php</target>
        </trans-unit>
        <trans-unit id="591efee3567dce0d82d348da2ecabd6f21a97837" translate="yes" xml:space="preserve">
          <source>Language line string or FALSE on failure</source>
          <target state="translated">失敗した場合は言語行文字列または FALSE</target>
        </trans-unit>
        <trans-unit id="6572fe248b6eb70dde5981d1e6bbed47c6e542a3" translate="yes" xml:space="preserve">
          <source>Large library of &amp;ldquo;helper&amp;rdquo; functions</source>
          <target state="translated">「ヘルパー」関数の大規模なライブラリ</target>
        </trans-unit>
        <trans-unit id="a53a26713f5b65c27d32180a2b90689e50783f18" translate="yes" xml:space="preserve">
          <source>Last row of result set, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">結果セットの最後の行。存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="4f2480315af1082d7e8ab7c4781ea98d73e1c2ab" translate="yes" xml:space="preserve">
          <source>Lastly, if a corresponding value is not found for a given key (if there is an odd number of URI segments) the value will be set to NULL.</source>
          <target state="translated">最後に、与えられたキーに対して対応する値が見つからない場合(奇数のURIセグメントがある場合)、値はNULLに設定されます。</target>
        </trans-unit>
        <trans-unit id="5b528541f967aec08cd8d757391014ee961cadbf" translate="yes" xml:space="preserve">
          <source>Lastly, we need to point out that the result object that is cached is a simplified version of the full result object. For that reason, some of the query result functions are not available for use.</source>
          <target state="translated">最後に、キャッシュされる結果オブジェクトは、完全な結果オブジェクトの簡略化されたバージョンであることを指摘する必要があります。そのため、いくつかのクエリ結果関数は使用できません。</target>
        </trans-unit>
        <trans-unit id="a5fec139b3235a16f5f31a77356272ac3b5f46b7" translate="yes" xml:space="preserve">
          <source>Less than and greater than characters: &amp;lt; &amp;gt;</source>
          <target state="translated">小なり記号と大なり記号：&amp;lt;&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85504d45cecefb4fa086aef8cc2808bc7c2501e1" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s continue with preparing the record that is going to be inserted later, inside the &lt;code&gt;$data&lt;/code&gt; array. Each element corresponds with a column in the database table created earlier. You might notice a new method here, namely the &lt;code&gt;post()&lt;/code&gt; method from the &lt;a href=&quot;../libraries/input&quot;&gt;input library&lt;/a&gt;. This method makes sure the data is sanitized, protecting you from nasty attacks from others. The input library is loaded by default. At last, you insert our &lt;code&gt;$data&lt;/code&gt; array into our database.</source>
          <target state="translated">&lt;code&gt;$data&lt;/code&gt; 配列内に後で挿入されるレコードの準備を続けましょう。各要素は、前に作成したデータベーステーブルの列に対応しています。ここでは、新しいメソッド、つまり&lt;a href=&quot;../libraries/input&quot;&gt;入力ライブラリの&lt;/a&gt; &lt;code&gt;post()&lt;/code&gt; メソッドに気付くでしょう。この方法により、データが確実にサニタイズされ、他人からの厄介な攻撃からユーザーを保護します。入力ライブラリはデフォルトでロードされます。最後に、 &lt;code&gt;$data&lt;/code&gt; 配列をデータベースに挿入します。</target>
        </trans-unit>
        <trans-unit id="379685906f34e3e7864afe840de42f146dad655a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a simple controller so you can see it in action. Using your text editor, create a file called Blog.php, and put the following code in it:</source>
          <target state="translated">実際の動作を確認できるように、簡単なコントローラーを作成しましょう。テキストエディターを使用して、Blog.phpというファイルを作成し、その中に次のコードを挿入します。</target>
        </trans-unit>
        <trans-unit id="0f0fbbd501f34c77584f2fb69349ad1203f4d1b7" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create a simple controller so you can see it in action. Using your text editor, create a file called Tools.php, and put the following code in it:</source>
          <target state="translated">実際の動作を確認できるように、簡単なコントローラーを作成しましょう。テキストエディタを使用して、Tools.phpという名前のファイルを作成し、次のコードをその中に入れます。</target>
        </trans-unit>
        <trans-unit id="e0d3a54efcb476862d2d3c98c67be13ed20eea9a" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s create those three things, using a member sign-up form as the example.</source>
          <target state="translated">メンバー登録フォームを例にして、これら3つを作成しましょう。</target>
        </trans-unit>
        <trans-unit id="1bc1fced79469db43c5452dc032b1feff2a91766" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s do that. Open the routing file located at &lt;em&gt;application/config/routes.php&lt;/em&gt; and add the following two lines. Remove all other code that sets any element in the &lt;code&gt;$route&lt;/code&gt; array.</source>
          <target state="translated">そうしよう。&lt;em&gt;application / config / routes.phpに&lt;/em&gt;あるルーティングファイルを開き、次の2行を追加します。 &lt;code&gt;$route&lt;/code&gt; 配列の要素を設定する他のすべてのコードを削除します。</target>
        </trans-unit>
        <trans-unit id="ea71b2b6277059358ba84785d284893e83af2fa4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say a particular user logs into your site. Once authenticated, you could add their username and e-mail address to the session, making that data globally available to you without having to run a database query when you need it.</source>
          <target state="translated">特定のユーザーがサイトにログインするとします。認証されたら、ユーザー名と電子メールアドレスをセッションに追加して、必要なときにデータベースクエリを実行しなくても、そのデータをグローバルに利用できるようにすることができます。</target>
        </trans-unit>
        <trans-unit id="949a4c40802c4c9b2cf281703285a9b61d5f1c40" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say you have to interact with another system that is out of your control and uses another method to encrypt data. A method that will most certainly not match the above-described sequence and probably not use all of the steps either.</source>
          <target state="translated">制御不能で別の方法を使用してデータを暗号化している別のシステムと対話する必要があるとしましょう。上記のシーケンスと確実に一致せず、おそらくすべてのステップを使用しない方法。</target>
        </trans-unit>
        <trans-unit id="f13c54589690f17b20c425e1b8cea7187b866239" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it with your controller file. Open it add this code:</source>
          <target state="translated">コントローラーファイルで試してみましょう。それを開き、次のコードを追加します。</target>
        </trans-unit>
        <trans-unit id="91431572c804983ba5c12bb84ab6e09d88a03978" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it. Add a new method to your controller:</source>
          <target state="translated">試してみよう。コントローラに新しいメソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="98854c1031b30b0e41990830dc088d9ccf54ddf4" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s try it: Hello World!</source>
          <target state="translated">やってみましょう：Hello World！</target>
        </trans-unit>
        <trans-unit id="1e23ab5b4393e6fe2aa38a3e481873c66bd2550c" translate="yes" xml:space="preserve">
          <source>Lets you clear the table heading and row data. If you need to show multiple tables with different data you should to call this method after each table has been generated to clear the previous table information. Example:</source>
          <target state="translated">表の見出しと行のデータをクリアします。異なるデータを持つ複数のテーブルを表示する必要がある場合は、各テーブルが生成された後にこのメソッドを呼び出して前のテーブル情報をクリアする必要があります。例</target>
        </trans-unit>
        <trans-unit id="0b0bfceceefa12e281006205c2bcc8cf5761ded2" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;img /&amp;gt; tags. The first parameter contains the image source. Example:</source>
          <target state="translated">HTML &amp;lt;img /&amp;gt;タグを作成できます。最初のパラメータには画像ソースが含まれています。例：</target>
        </trans-unit>
        <trans-unit id="2660ddaa0db6493c34040bf4aa235bfb048fca4c" translate="yes" xml:space="preserve">
          <source>Lets you create HTML &amp;lt;link /&amp;gt; tags. This is useful for stylesheet links, as well as other links. The parameters are &lt;em&gt;href&lt;/em&gt;, with optional &lt;em&gt;rel&lt;/em&gt;, &lt;em&gt;type&lt;/em&gt;, &lt;em&gt;title&lt;/em&gt;, &lt;em&gt;media&lt;/em&gt; and &lt;em&gt;index_page&lt;/em&gt;.</source>
          <target state="translated">HTML &amp;lt;link /&amp;gt;タグを作成できます。これは、スタイルシートのリンクやその他のリンクに役立ちます。パラメータは&lt;em&gt;hrefで&lt;/em&gt;、&lt;em&gt;rel&lt;/em&gt;、&lt;em&gt;type&lt;/em&gt;、&lt;em&gt;title&lt;/em&gt;、&lt;em&gt;media&lt;/em&gt;、&lt;em&gt;index_pageはオプション&lt;/em&gt;です。</target>
        </trans-unit>
        <trans-unit id="1b7d4d7707bdb8cf59912a95f17787edb6d7dcab" translate="yes" xml:space="preserve">
          <source>Lets you create HTML heading tags. The first parameter will contain the data, the second the size of the heading. Example:</source>
          <target state="translated">HTMLの見出しタグを作成します。最初のパラメータにはデータを、2番目のパラメータには見出しのサイズを指定します。例。</target>
        </trans-unit>
        <trans-unit id="f9bd80889297aa81c099eb19694e2f80392ba3f0" translate="yes" xml:space="preserve">
          <source>Lets you create a directory on your server. Supply the path ending in the folder name you wish to create, with a trailing slash.</source>
          <target state="translated">サーバー上にディレクトリを作成します。作成したいフォルダ名で終わるパスを、最後にスラッシュをつけて指定します。</target>
        </trans-unit>
        <trans-unit id="17e87de1b02132110e205241335e11721119f97e" translate="yes" xml:space="preserve">
          <source>Lets you create a standard drop-down field. The first parameter will contain the name of the field, the second parameter will contain an associative array of options, and the third parameter will contain the value you wish to be selected. You can also pass an array of multiple items through the third parameter, and CodeIgniter will create a multiple select for you.</source>
          <target state="translated">標準のドロップダウンフィールドを作成します。最初のパラメータにはフィールドの名前、2番目のパラメータにはオプションの連想配列、3番目のパラメータには選択したい値を指定します。3 番目のパラメータに複数の項目の配列を渡すと、CodeIgniter が複数選択を作成してくれます。</target>
        </trans-unit>
        <trans-unit id="610c9f7ae46b2b883c1f9e3815c71f305540df01" translate="yes" xml:space="preserve">
          <source>Lets you create a standard multiselect field. The first parameter will contain the name of the field, the second parameter will contain an associative array of options, and the third parameter will contain the value or values you wish to be selected.</source>
          <target state="translated">標準のマルチセレクトフィールドを作成します。最初のパラメータにはフィールド名、2 番目のパラメータにはオプションの連想配列、3 番目のパラメータには選択したい値または値を指定します。</target>
        </trans-unit>
        <trans-unit id="8aa1a1e76883ea3726ff481a6a782b70bec2c76b" translate="yes" xml:space="preserve">
          <source>Lets you delete a cookie. Unless you&amp;rsquo;ve set a custom path or other values, only the name of the cookie is needed.</source>
          <target state="translated">Cookieを削除できます。カスタムパスやその他の値を設定していない限り、必要なのはCookieの名前のみです。</target>
        </trans-unit>
        <trans-unit id="803dde3593220383f6c805baf0dfb33da0084cb0" translate="yes" xml:space="preserve">
          <source>Lets you delete a directory and everything it contains. Supply the source path to the directory with a trailing slash.</source>
          <target state="translated">ディレクトリとその中に含まれるすべてのものを削除します。ディレクトリへのソースパスを最後のスラッシュで指定します。</target>
        </trans-unit>
        <trans-unit id="bb886ea3c258c117185e1bea42cf4ae0f881368c" translate="yes" xml:space="preserve">
          <source>Lets you delete a file. Supply the source path with the file name.</source>
          <target state="translated">ファイルを削除します。ソースパスにファイル名を指定します。</target>
        </trans-unit>
        <trans-unit id="c945d9f0f5989982c0977686f78906be0baba978" translate="yes" xml:space="preserve">
          <source>Lets you determine if the user agent accepts a particular character set. Example:</source>
          <target state="translated">ユーザーエージェントが特定の文字セットを受け入れるかどうかを判断します。例。</target>
        </trans-unit>
        <trans-unit id="52fa36fe5833bb360df9cbebac5727f077527450" translate="yes" xml:space="preserve">
          <source>Lets you determine if the user agent accepts a particular language. Example:</source>
          <target state="translated">ユーザーエージェントが特定の言語を受け入れるかどうかを判断します。例。</target>
        </trans-unit>
        <trans-unit id="f1573efb96215afa9cb2cebe44137222a851a391" translate="yes" xml:space="preserve">
          <source>Lets you fetch a number of items from an array. The function tests whether each of the array indices is set. If an index does not exist it is set to NULL, or whatever you&amp;rsquo;ve specified as the default value via the third parameter.</source>
          <target state="translated">配列からいくつかのアイテムをフェッチできます。この関数は、各配列インデックスが設定されているかどうかをテストします。インデックスが存在しない場合は、NULL、または3番目のパラメーターを介してデフォルト値として指定したものに設定されます。</target>
        </trans-unit>
        <trans-unit id="4660bec13c30c98eacd6e4366ca498ee63caed42" translate="yes" xml:space="preserve">
          <source>Lets you fetch an item from an array. The function tests whether the array index is set and whether it has a value. If a value exists it is returned. If a value does not exist it returns NULL, or whatever you&amp;rsquo;ve specified as the default value via the third parameter.</source>
          <target state="translated">配列からアイテムをフェッチできます。関数は、配列インデックスが設定されているかどうか、および値があるかどうかをテストします。値が存在する場合は、それが返されます。値が存在しない場合は、NULL、または3番目のパラメーターを介してデフォルト値として指定したものを返します。</target>
        </trans-unit>
        <trans-unit id="075aae449a5a8b7fad41139c0b27d0cac85f63f9" translate="yes" xml:space="preserve">
          <source>Lets you generate a &amp;lt;label&amp;gt;. Simple example:</source>
          <target state="translated">&amp;lt;label&amp;gt;を生成できます。簡単な例：</target>
        </trans-unit>
        <trans-unit id="44f2bbad8758a3202773b6cb2eb35557413779da" translate="yes" xml:space="preserve">
          <source>Lets you generate a checkbox field. Simple example:</source>
          <target state="translated">チェックボックスフィールドを生成します。簡単な例です。</target>
        </trans-unit>
        <trans-unit id="db238792e698627ead3f40d4336fac2325c77ae8" translate="yes" xml:space="preserve">
          <source>Lets you generate a date string in one of several standardized formats.</source>
          <target state="translated">いくつかの標準化されたフォーマットのいずれかで日付文字列を生成することができます。</target>
        </trans-unit>
        <trans-unit id="2416e5ec9e5e05a90be1395e849c2366a2a2169b" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard button element. You can minimally pass the button name and content in the first and second parameter:</source>
          <target state="translated">標準の button 要素を生成します。最初と2番目のパラメータには、ボタン名と内容を最小限に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="8eeee9bc3ac6a950df194f18fbc81253ee793fe8" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard reset button. Use is identical to &lt;code&gt;form_submit()&lt;/code&gt;.</source>
          <target state="translated">標準のリセットボタンを生成できます。使用方法は &lt;code&gt;form_submit()&lt;/code&gt; と同じです。</target>
        </trans-unit>
        <trans-unit id="62b06e846360c659c96c7720ac294d6d077bcdbf" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard submit button. Simple example:</source>
          <target state="translated">標準的な送信ボタンを生成できます。簡単な例です。</target>
        </trans-unit>
        <trans-unit id="d71d30e69ee2c53e70c93469c0a9437d08385dee" translate="yes" xml:space="preserve">
          <source>Lets you generate a standard text input field. You can minimally pass the field name and value in the first and second parameter:</source>
          <target state="translated">標準のテキスト入力フィールドを生成します。最初と2番目のパラメータには、フィールド名と値を最小限に渡すことができます。</target>
        </trans-unit>
        <trans-unit id="c78bdbf8524fd7718973b3a885ac89ad653453a7" translate="yes" xml:space="preserve">
          <source>Lets you generate fieldset/legend fields.</source>
          <target state="translated">fieldsetlegendフィールドを生成します。</target>
        </trans-unit>
        <trans-unit id="c86ceb69af8d99fecf74e35036a3a965029c1071" translate="yes" xml:space="preserve">
          <source>Lets you generate hidden input fields. You can either submit a name/value string to create one field:</source>
          <target state="translated">非表示の入力フィールドを生成することができます。名前文字列を入力してフィールドを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="a2e2a2c907fb7dd3b8224a6ccdf64260c66d5813" translate="yes" xml:space="preserve">
          <source>Lets you limit the number of rows you would like returned by the query:</source>
          <target state="translated">クエリから返される行の数を制限します。</target>
        </trans-unit>
        <trans-unit id="b71ca6e12e10e9ad89c60f5ac826b75944d9327c" translate="yes" xml:space="preserve">
          <source>Lets you move a file. Supply the source and destination paths:</source>
          <target state="translated">ファイルを移動させます。移動元と移動先のパスを指定します。</target>
        </trans-unit>
        <trans-unit id="4df2206e297cdbec80854756b325535a4efd4149" translate="yes" xml:space="preserve">
          <source>Lets you retrieve the transaction status flag to determine if it has failed.</source>
          <target state="translated">トランザクションステータスフラグを取得して、失敗したかどうかを判断します。</target>
        </trans-unit>
        <trans-unit id="90168ad37f66c3c2e99df0136c3650fc89e9ef96" translate="yes" xml:space="preserve">
          <source>Lets you set a default value for use in any table cells that are empty. You might, for example, set a non-breaking space:</source>
          <target state="translated">空のテーブルセルで使用するデフォルト値を設定できます。例えば、非改行スペースを設定することができます。</target>
        </trans-unit>
        <trans-unit id="30be926d329d9213a8bc43a7c20b5916f2d0b498" translate="yes" xml:space="preserve">
          <source>Lets you set an ORDER BY clause.</source>
          <target state="translated">ORDER BY句を設定することができます。</target>
        </trans-unit>
        <trans-unit id="27c968e6692b41bf6e1a241b870dc41ff1a51b17" translate="yes" xml:space="preserve">
          <source>Libraries</source>
          <target state="translated">Libraries</target>
        </trans-unit>
        <trans-unit id="b8100f5ba8bd048a7cf11d116fbbd73130c3c6f5" translate="yes" xml:space="preserve">
          <source>Library</source>
          <target state="translated">Library</target>
        </trans-unit>
        <trans-unit id="ef55040e6a354daf7a9fc8b7ad6813967db2d32c" translate="yes" xml:space="preserve">
          <source>Library Reference</source>
          <target state="translated">ライブラリーレファレンス</target>
        </trans-unit>
        <trans-unit id="a1f6de5b230d0c0bea0a7426dc7c43ffc676998e" translate="yes" xml:space="preserve">
          <source>Library files can be stored in subdirectories within the main &amp;ldquo;libraries&amp;rdquo; directory, or within your personal &lt;em&gt;application/libraries&lt;/em&gt; directory. To load a file located in a subdirectory, simply include the path, relative to the &amp;ldquo;libraries&amp;rdquo; directory. For example, if you have file located at:</source>
          <target state="translated">ライブラリファイルは、メインの「ライブラリ」ディレクトリ内のサブディレクトリ、または個人の&lt;em&gt;アプリケーション/ライブラリ&lt;/em&gt;ディレクトリ内に保存できます。サブディレクトリにあるファイルをロードするには、「ライブラリ」ディレクトリからの相対パスを含めるだけです。たとえば、次の場所にファイルがあるとします。</target>
        </trans-unit>
        <trans-unit id="2ee6c21c22e29b247c3b51ef8cc5e42e6e2df68a" translate="yes" xml:space="preserve">
          <source>License Agreement</source>
          <target state="translated">ライセンス契約書</target>
        </trans-unit>
        <trans-unit id="58fd3b1b83cc7fc933d72fe934bdb6e534441281" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT License.</source>
          <target state="translated">MITライセンスに基づいてライセンスされています。</target>
        </trans-unit>
        <trans-unit id="5d0b2fa5a6d39f703fcaaac402ba806d49b3a250" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Calendar class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Calendarクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="f4a0239e8c4cf6eae8f4141f89134de784db1d58" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Encrypt class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Encryptクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="e15c78db8ba15347661d8ba11aaca193f9eec997" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Encryption library is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、暗号化ライブラリは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="236e101993f620e372e5686fe72de06dc91cb8ee" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the FTP class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、FTPクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="a8b090252d1a5bcb001f74d624c60f81a5b94ea1" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Parser class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Parserクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="85ffab8a9dfc091b6c5da70d81ac3394f278f769" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Table class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Tableクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="343a172109962c22ef400353ac7345af1630ffdb" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Trackback class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Trackbackクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="5f4faedb4ac5a8693ea2f607998761a8d74395a3" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Typography class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Typographyクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="da46f2de302a25572c889b014b9196aec7d788d4" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Unit Test class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、ユニットテストクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="6b460fb8245ae6c91591052bf1e4189c11cc0fb2" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Upload class is initialized in your controller using the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Uploadクラスは &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; メソッドを使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="9dcffe0e9956ac447c90ef73a796dc571b5f2cc7" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the User Agent class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、ユーザーエージェントクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="1b7a66449003be7ba5624e3a1bab341fd86c8078" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the XML-RPC and XML-RPCS classes are initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、XML-RPCおよびXML-RPCSクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="8ccb62fb42b6558029e67bbe265f637348c82924" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the Zip class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、Zipクラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="0b8d7497c14528340351564b4c88b72c6b374099" translate="yes" xml:space="preserve">
          <source>Like most other classes in CodeIgniter, the image class is initialized in your controller using the $this-&amp;gt;load-&amp;gt;library function:</source>
          <target state="translated">CodeIgniterの他のほとんどのクラスと同様に、画像クラスは$ this-&amp;gt; load-&amp;gt; library関数を使用してコントローラーで初期化されます。</target>
        </trans-unit>
        <trans-unit id="e12d22d458d76b0be69e5b7abfee40f7a61869ff" translate="yes" xml:space="preserve">
          <source>Limiting or Counting Results</source>
          <target state="translated">結果の制限またはカウント</target>
        </trans-unit>
        <trans-unit id="f9461da311f713d36b1205166a42d4a0a8cc89ff" translate="yes" xml:space="preserve">
          <source>Limits the string based on the character count. Will preserve complete words.</source>
          <target state="translated">文字数に基づいて文字列を制限します。完全な単語を保持します。</target>
        </trans-unit>
        <trans-unit id="eed6cd74cd94bc6d5acf8fa6998df07318a8ca92" translate="yes" xml:space="preserve">
          <source>Line Breaks</source>
          <target state="translated">ラインブレイク</target>
        </trans-unit>
        <trans-unit id="f5b04cdd83351a616c6d673cbf53e98d63cf8e3e" translate="yes" xml:space="preserve">
          <source>Line Number (line)</source>
          <target state="translated">行番号(行)</target>
        </trans-unit>
        <trans-unit id="e4741361713309f30f2644c2cf2cf1daf45659e7" translate="yes" xml:space="preserve">
          <source>Linkified string</source>
          <target state="translated">リンク化文字列</target>
        </trans-unit>
        <trans-unit id="54cd0ba31bcbb11251ffe78535a559fa87813373" translate="yes" xml:space="preserve">
          <source>List the Fields in a Table</source>
          <target state="translated">テーブル内のフィールドを一覧表示する</target>
        </trans-unit>
        <trans-unit id="6c17312dcba47bf03c2d81706d8a8b7a72b77507" translate="yes" xml:space="preserve">
          <source>List the Tables in Your Database</source>
          <target state="translated">データベースのテーブルを一覧表示</target>
        </trans-unit>
        <trans-unit id="6e4abe45adb861335b433026f39b483f3cda3e21" translate="yes" xml:space="preserve">
          <source>Listing of all database queries executed, including execution time</source>
          <target state="translated">実行されたすべてのデータベースクエリのリスト(実行時間を含む</target>
        </trans-unit>
        <trans-unit id="a27c5421fe3bf96eeebb79b236052a791336721d" translate="yes" xml:space="preserve">
          <source>Load the Forge Class as follows:</source>
          <target state="translated">以下のようにForgeクラスをロードします。</target>
        </trans-unit>
        <trans-unit id="605563d5aa0e231b93adb64a823c6ce2374639ab" translate="yes" xml:space="preserve">
          <source>Load the Utility Class as follows:</source>
          <target state="translated">以下のようにユーティリティクラスをロードします。</target>
        </trans-unit>
        <trans-unit id="8d4289d8ca6a689ab25f78f13decc606548739bd" translate="yes" xml:space="preserve">
          <source>Loaded CI_DB instance or FALSE on failure if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">失敗した場合は CI_DB インスタンスをロードしたか、$return が TRUE に設定されている場合は FALSE、そうでない場合は CI_Loader インスタンス (メソッドのチェーニング)</target>
        </trans-unit>
        <trans-unit id="e81f14f45654f8cd397f7fb89e2e743fc4206f25" translate="yes" xml:space="preserve">
          <source>Loaded CI_DB_forge instance if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">return が TRUE に設定されている場合は CI_DB_forge インスタンスをロードし、そうでない場合は CI_Loader インスタンスをロードします (メソッドのチェーニング)。</target>
        </trans-unit>
        <trans-unit id="68e2a1c2d4fc9d6a5687803ce88342494f4f5944" translate="yes" xml:space="preserve">
          <source>Loaded CI_DB_utility instance if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">returnがTRUEに設定されている場合はロードされたCI_DB_utilityインスタンス、そうでない場合はCI_Loaderインスタンス(メソッドチェーニング)をロードします。</target>
        </trans-unit>
        <trans-unit id="ec6f9069daa80029e880d76fc3bf6a0698a7d554" translate="yes" xml:space="preserve">
          <source>Loader</source>
          <target state="translated">Loader</target>
        </trans-unit>
        <trans-unit id="2deaf19033acec193ce3ec263d1504ae35ea7cb7" translate="yes" xml:space="preserve">
          <source>Loader Class</source>
          <target state="translated">ローダクラス</target>
        </trans-unit>
        <trans-unit id="11f7e47d8a3f26e9ac1360870f5558aa936a75a1" translate="yes" xml:space="preserve">
          <source>Loader, as the name suggests, is used to load elements. These elements can be libraries (classes) &lt;a href=&quot;../general/views&quot;&gt;View files&lt;/a&gt;, &lt;a href=&quot;../general/drivers&quot;&gt;Drivers&lt;/a&gt;, &lt;a href=&quot;../general/helpers&quot;&gt;Helpers&lt;/a&gt;, &lt;a href=&quot;../general/models&quot;&gt;Models&lt;/a&gt;, or your own files.</source>
          <target state="translated">名前が示すように、ローダーは要素のロードに使用されます。これらの要素は、ライブラリ（クラス）&lt;a href=&quot;../general/views&quot;&gt;ビューファイル&lt;/a&gt;、&lt;a href=&quot;../general/drivers&quot;&gt;ドライバー&lt;/a&gt;、&lt;a href=&quot;../general/helpers&quot;&gt;ヘルパー&lt;/a&gt;、&lt;a href=&quot;../general/models&quot;&gt;モデル&lt;/a&gt;、または独自のファイルです。</target>
        </trans-unit>
        <trans-unit id="2c02740debe56349e3d7ad6421d018524c63d82e" translate="yes" xml:space="preserve">
          <source>Loading A Language File</source>
          <target state="translated">言語ファイルの読み込み</target>
        </trans-unit>
        <trans-unit id="2eb3efe38251352226e9efcc98bd853d1dd26ab6" translate="yes" xml:space="preserve">
          <source>Loading Multiple Helpers</source>
          <target state="translated">複数のヘルパーの読み込み</target>
        </trans-unit>
        <trans-unit id="d1ffd10ef8c487c39f98446b01187a717d636c46" translate="yes" xml:space="preserve">
          <source>Loading Your Sub-class</source>
          <target state="translated">サブクラスの読み込み</target>
        </trans-unit>
        <trans-unit id="bc925e92b7fd1c9cd79b26d5744c6d7591bffad8" translate="yes" xml:space="preserve">
          <source>Loading a Config File</source>
          <target state="translated">設定ファイルの読み込み</target>
        </trans-unit>
        <trans-unit id="05921c48039bc10d973f656f6961b47ad34f4e9e" translate="yes" xml:space="preserve">
          <source>Loading a Helper</source>
          <target state="translated">ヘルパーの読み込み</target>
        </trans-unit>
        <trans-unit id="57d23ecb39ef5c47089859f3c785f221f32618a1" translate="yes" xml:space="preserve">
          <source>Loading a Model</source>
          <target state="translated">モデルの読み込み</target>
        </trans-unit>
        <trans-unit id="d74ecfb0061a585ba0f5613c41c7fc89120c13fb" translate="yes" xml:space="preserve">
          <source>Loading a View</source>
          <target state="translated">ビューの読み込み</target>
        </trans-unit>
        <trans-unit id="c118f068e9710c178919d772cd32bc6b832db6cb" translate="yes" xml:space="preserve">
          <source>Loading a helper file is quite simple using the following method:</source>
          <target state="translated">ヘルパーファイルの読み込みは以下の方法で簡単にできます。</target>
        </trans-unit>
        <trans-unit id="dfc3a31319824f7fe4080f082556087cad652e44" translate="yes" xml:space="preserve">
          <source>Loading multiple views</source>
          <target state="translated">複数のビューを読み込む</target>
        </trans-unit>
        <trans-unit id="464b40043d27fcad36cb997f91a70581882d7fac" translate="yes" xml:space="preserve">
          <source>Loading this Helper</source>
          <target state="translated">このヘルパーの読み込み</target>
        </trans-unit>
        <trans-unit id="64f4eb728b6871c37ada4d24a3c0f7898c84f543" translate="yes" xml:space="preserve">
          <source>Loads a configuration file.</source>
          <target state="translated">設定ファイルを読み込みます。</target>
        </trans-unit>
        <trans-unit id="e67fd5f24139cedce864934078da2a52b79d9dc5" translate="yes" xml:space="preserve">
          <source>Loads a language file.</source>
          <target state="translated">言語ファイルを読み込みます。</target>
        </trans-unit>
        <trans-unit id="d079c51bff7f88b690b8c44e543a6105c7d1aeb9" translate="yes" xml:space="preserve">
          <source>Loads the &lt;a href=&quot;../database/forge&quot;&gt;Database Forge&lt;/a&gt; class, please refer to that manual for more info.</source>
          <target state="translated">&lt;a href=&quot;../database/forge&quot;&gt;Database Forge&lt;/a&gt;クラスをロードします。詳細については、そのマニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="6f5c3800ce7e28fcbf2bcf5db1500dbff06cab79" translate="yes" xml:space="preserve">
          <source>Loads the &lt;a href=&quot;../database/utilities&quot;&gt;Database Utilities&lt;/a&gt; class, please refer to that manual for more info.</source>
          <target state="translated">&lt;a href=&quot;../database/utilities&quot;&gt;データベースユーティリティ&lt;/a&gt;クラスをロードします。詳細については、そのマニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="b9fc941160f1b0396956bfd39853ec712bd8d1fb" translate="yes" xml:space="preserve">
          <source>Localization</source>
          <target state="translated">Localization</target>
        </trans-unit>
        <trans-unit id="5eaa6b4b315bdaa369a3a06c5527987ec1e89477" translate="yes" xml:space="preserve">
          <source>Localized Text</source>
          <target state="translated">ローカライズされたテキスト</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="8a939d182d992114fef20f515cf479c3e42ce804" translate="yes" xml:space="preserve">
          <source>Locking is not the issue, it is a solution. Your issue is that you still have the session open, while you&amp;rsquo;ve already processed it and therefore no longer need it. So, what you need is to close the session for the current request after you no longer need it.</source>
          <target state="translated">ロックは問題ではなく、解決策です。あなたの問題は、セッションを開いたままにしていることですが、すでにそれを処理しているため、もう必要ありません。したがって、必要なのは、現在のリクエストが不要になった後、現在のリクエストのセッションを閉じることです。</target>
        </trans-unit>
        <trans-unit id="8bf95ea372568c7a254ba9fada5f6f1701ebc5b5" translate="yes" xml:space="preserve">
          <source>Log</source>
          <target state="translated">Log</target>
        </trans-unit>
        <trans-unit id="65eac6118ebdd55aa38b41f70efdf532e567ffd8" translate="yes" xml:space="preserve">
          <source>Logical Operators</source>
          <target state="translated">論理演算子</target>
        </trans-unit>
        <trans-unit id="1709d0fedce5e63a987cb501d05ffb5cfe071014" translate="yes" xml:space="preserve">
          <source>Loki97</source>
          <target state="translated">Loki97</target>
        </trans-unit>
        <trans-unit id="201ddef0c1f1b20dd8eb1f5c55cd47ea589e4324" translate="yes" xml:space="preserve">
          <source>Long story short - call &lt;code&gt;session_write_close()&lt;/code&gt; once you no longer need anything to do with session variables.</source>
          <target state="translated">簡単に言うと、セッション変数を処理する必要がなくなったら、 &lt;code&gt;session_write_close()&lt;/code&gt; を呼び出します。</target>
        </trans-unit>
        <trans-unit id="c40ccc3b4d6450c8d32eac62ccac6a7620218c11" translate="yes" xml:space="preserve">
          <source>Long story short - if you don&amp;rsquo;t know how to do that already in raw PHP, you shouldn&amp;rsquo;t be trying to do it within CodeIgniter either. You&amp;rsquo;ve been warned.</source>
          <target state="translated">要するに、生のPHPでそれを行う方法がわからない場合でも、CodeIgniter内でそれを実行するべきではありません。あなたは警告されました。</target>
        </trans-unit>
        <trans-unit id="25f58df0ad55cf4efe6166bc5637401c0c5c3b5b" translate="yes" xml:space="preserve">
          <source>Looking at the code, you may see some similarity with the files we created earlier. First, the &lt;code&gt;__construct()&lt;/code&gt; method: it calls the constructor of its parent class (&lt;code&gt;CI_Controller&lt;/code&gt;) and loads the model, so it can be used in all other methods in this controller. It also loads a collection of &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL Helper&lt;/a&gt; functions, because we&amp;rsquo;ll use one of them in a view later.</source>
          <target state="translated">コードを見ると、先ほど作成したファイルといくつかの類似点があることがわかります。まず、 &lt;code&gt;__construct()&lt;/code&gt; メソッド：親クラス（ &lt;code&gt;CI_Controller&lt;/code&gt; ）のコンストラクターを呼び出してモデルをロードするため、このコントローラーの他のすべてのメソッドで使用できます。また、後でビューで使用するため、&lt;a href=&quot;../helpers/url_helper&quot;&gt;URLヘルパー&lt;/a&gt;関数のコレクションもロードします。</target>
        </trans-unit>
        <trans-unit id="b76497296d19bd50b09adf1110fee7e78a387ec3" translate="yes" xml:space="preserve">
          <source>Looking for Similar Data</source>
          <target state="translated">類似データを探す</target>
        </trans-unit>
        <trans-unit id="563a6fc311750c300f20d5c41261e66e2ee14e54" translate="yes" xml:space="preserve">
          <source>Looking for Specific Data</source>
          <target state="translated">特定のデータを探す</target>
        </trans-unit>
        <trans-unit id="4b7d57c3149051517340cee1e92dac82386afee2" translate="yes" xml:space="preserve">
          <source>MB_ENABLED</source>
          <target state="translated">MB_ENABLED</target>
        </trans-unit>
        <trans-unit id="417784f5ff00609e8935a02bce38521b11d8b94e" translate="yes" xml:space="preserve">
          <source>MCRYPT_MODE_ECB</source>
          <target state="translated">MCRYPT_MODE_ECB</target>
        </trans-unit>
        <trans-unit id="ec8658b95484eff9965158d9a7f142e7aab65326" translate="yes" xml:space="preserve">
          <source>MCrypt</source>
          <target state="translated">MCrypt</target>
        </trans-unit>
        <trans-unit id="2d402e17d9eaa7174787bbd2c137fb71ab24bfd2" translate="yes" xml:space="preserve">
          <source>MCrypt, OpenSSL</source>
          <target state="translated">MCrypt、OpenSSL</target>
        </trans-unit>
        <trans-unit id="7ddab92eb4744eb322da1d04187a78911937bb4a" translate="yes" xml:space="preserve">
          <source>MIME type string or FALSE on failure</source>
          <target state="translated">失敗した場合は MIME タイプの文字列または FALSE</target>
        </trans-unit>
        <trans-unit id="750f9870f2ebf1c6d15527e004ee500ab2c52175" translate="yes" xml:space="preserve">
          <source>Make interactive &amp;ldquo;tasks&amp;rdquo; that can do things like set permissions, prune cache folders, run backups, etc.</source>
          <target state="translated">権限の設定、キャッシュフォルダーのプルーニング、バックアップの実行などを実行できるインタラクティブな「タスク」を作成します。</target>
        </trans-unit>
        <trans-unit id="49b18757e3384c544eddbafbefe90caaa7b76c9a" translate="yes" xml:space="preserve">
          <source>Make sure any non-mime string you pass to this method exists in &lt;em&gt;application/config/mimes.php&lt;/em&gt; or it will have no effect.</source>
          <target state="translated">このメソッドに渡すMIME以外の文字列が&lt;em&gt;application / config / mimes.phpに&lt;/em&gt;存在することを確認してください。存在しない場合は影響がありません。</target>
        </trans-unit>
        <trans-unit id="a1f003943cb4e56bfb2e78e9067ca1cf6bd3e12d" translate="yes" xml:space="preserve">
          <source>Make sure that your dev environment has error reporting enabled for ALL users, and that display_errors is enabled in the PHP environment. You can check this setting with:</source>
          <target state="translated">あなたの開発環境では、すべてのユーザーに対してエラー報告が有効になっていることと、 PHP 環境で display_errors が有効になっていることを確認してください。この設定は</target>
        </trans-unit>
        <trans-unit id="9aa5102273854ea0af6892f9dd0898510905f938" translate="yes" xml:space="preserve">
          <source>Make sure to also exclude from the above rule any assets that you might need to be accessible from the outside world.</source>
          <target state="translated">また、外部からのアクセスが必要な資産については、上記のルールから除外するようにしましょう。</target>
        </trans-unit>
        <trans-unit id="0a3b2596b897607da8ad13bf80f95aaea1ea920d" translate="yes" xml:space="preserve">
          <source>Make sure to use $this-&amp;gt;db-&amp;gt;trans_begin() when running manual transactions, &lt;strong&gt;NOT&lt;/strong&gt; $this-&amp;gt;db-&amp;gt;trans_start().</source>
          <target state="translated">、手動トランザクションを実行するときます$ this-&amp;gt; DB-&amp;gt; trans_begin（）を使用していることを確認し&lt;strong&gt;ないで&lt;/strong&gt;ます$ this-&amp;gt; DB-&amp;gt; trans_start（）。</target>
        </trans-unit>
        <trans-unit id="f2f43b91fe7faa1f79dcfd8131243b2f662a06eb" translate="yes" xml:space="preserve">
          <source>Make your cron-jobs inaccessible from being loaded in the URL by checking the return value of &lt;a href=&quot;common_functions#is_cli&quot;&gt;&lt;code&gt;is_cli()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;common_functions#is_cli&quot;&gt; &lt;code&gt;is_cli()&lt;/code&gt; の&lt;/a&gt;戻り値を確認して、cronジョブがURLにロードされないようにします。</target>
        </trans-unit>
        <trans-unit id="236b276a68c22f9a3d878d0e409b3e4882a08d8e" translate="yes" xml:space="preserve">
          <source>Making Your Queries Easier</source>
          <target state="translated">クエリーを簡単にする</target>
        </trans-unit>
        <trans-unit id="7e3631c271a96dd85e4e5ec97a177e7c33eea768" translate="yes" xml:space="preserve">
          <source>Managing Errors</source>
          <target state="translated">エラーの管理</target>
        </trans-unit>
        <trans-unit id="05fe651886989c4ce0e0af7ac38461728fecbdb8" translate="yes" xml:space="preserve">
          <source>Managing your Applications</source>
          <target state="translated">アプリケーションの管理</target>
        </trans-unit>
        <trans-unit id="65784dcc3319a8d37706da70362aa7a875ee8066" translate="yes" xml:space="preserve">
          <source>Managing your Cache Files</source>
          <target state="translated">キャッシュファイルの管理</target>
        </trans-unit>
        <trans-unit id="5ac982ced6cd245760453f72346753b56b58a0a4" translate="yes" xml:space="preserve">
          <source>Mandatory / Optional</source>
          <target state="translated">必須オプション</target>
        </trans-unit>
        <trans-unit id="25edf606a7402b2d23e46f59fd11a016545751bd" translate="yes" xml:space="preserve">
          <source>Manual Loading</source>
          <target state="translated">マニュアルローディング</target>
        </trans-unit>
        <trans-unit id="3b5cb7733c2c3fcadece40692da61413f4bc85e5" translate="yes" xml:space="preserve">
          <source>Manually Connecting</source>
          <target state="translated">手動接続</target>
        </trans-unit>
        <trans-unit id="6f2258b11ad6be040c2aaad749c96a59b6811d15" translate="yes" xml:space="preserve">
          <source>Manually Connecting to a Database</source>
          <target state="translated">データベースへの手動接続</target>
        </trans-unit>
        <trans-unit id="d3666bd352c671123bfd94f18d4c676d3ad8c67a" translate="yes" xml:space="preserve">
          <source>Manually closing the Connection</source>
          <target state="translated">手動で接続を閉じる</target>
        </trans-unit>
        <trans-unit id="e0c9b3af7816f60c52c2d82df5e4015e8c984ce3" translate="yes" xml:space="preserve">
          <source>Manually enables/disables caching. This can be useful if you want to keep certain queries from being cached. Example:</source>
          <target state="translated">手動でキャッシュを有効・無効にします。これは、特定のクエリをキャッシュしないようにしたい場合に便利です。例。</target>
        </trans-unit>
        <trans-unit id="587776e3bb4c7325738b28a4cc2f574afa8c3a35" translate="yes" xml:space="preserve">
          <source>Mark a start point</source>
          <target state="translated">開始点をマークする</target>
        </trans-unit>
        <trans-unit id="f3b39dc69524d3dbeaa09e276e51e723f8207cdc" translate="yes" xml:space="preserve">
          <source>Mark an end point</source>
          <target state="translated">終点をマークする</target>
        </trans-unit>
        <trans-unit id="253bd53881d6356cc150a392426f445958ddef90" translate="yes" xml:space="preserve">
          <source>Marks a &lt;code&gt;$_SESSION&lt;/code&gt; item key (or multiple ones) as &amp;ldquo;flashdata&amp;rdquo;.</source>
          <target state="translated">マークス &lt;code&gt;$_SESSION&lt;/code&gt; 「flashdata」などの項目キー（または複数のものを）。</target>
        </trans-unit>
        <trans-unit id="a16a4e619a6b9ac80f082d629ec9f9c72c4733fd" translate="yes" xml:space="preserve">
          <source>Marks a &lt;code&gt;$_SESSION&lt;/code&gt; item key (or multiple ones) as &amp;ldquo;tempdata&amp;rdquo;.</source>
          <target state="translated">マークス &lt;code&gt;$_SESSION&lt;/code&gt; 「TempDataを」などの項目キー（または複数のものを）。</target>
        </trans-unit>
        <trans-unit id="a984102b79887253f14b2b7bb734dbdf8577c367" translate="yes" xml:space="preserve">
          <source>MathML 1.01</source>
          <target state="translated">MathML 1.01</target>
        </trans-unit>
        <trans-unit id="34ed6b02d923aa3e44beb13601adea813d26bbb5" translate="yes" xml:space="preserve">
          <source>MathML 2.0</source>
          <target state="translated">MathML 2.0</target>
        </trans-unit>
        <trans-unit id="39e3a1d972064b766e66442aa9bc5cb04407acac" translate="yes" xml:space="preserve">
          <source>Memcached Caching</source>
          <target state="translated">Memcached のキャッシング</target>
        </trans-unit>
        <trans-unit id="46434806286f0c08214036027f2a06ccade17e54" translate="yes" xml:space="preserve">
          <source>Memcached Driver</source>
          <target state="translated">Memcached ドライバ</target>
        </trans-unit>
        <trans-unit id="c135d6c186b40fc3b641c1dbab6bf4db37770e11" translate="yes" xml:space="preserve">
          <source>Memory usage info</source>
          <target state="translated">メモリ使用量情報</target>
        </trans-unit>
        <trans-unit id="dcc9f5117505b2ac31ac9bb0cca43c4ce8b5a833" translate="yes" xml:space="preserve">
          <source>Message Length</source>
          <target state="translated">メッセージの長さ</target>
        </trans-unit>
        <trans-unit id="ac86e7797f214b88cd13e4ee84713dbacc784a95" translate="yes" xml:space="preserve">
          <source>Messing with a core system class has a lot of implications, so make sure you know what you are doing before attempting it.</source>
          <target state="translated">コアシステムのクラスをいじることには多くの意味があるので、それを試みる前に何をしているかを確認してください。</target>
        </trans-unit>
        <trans-unit id="251edc0eb5a820646bda4e103f0f007fd55321f3" translate="yes" xml:space="preserve">
          <source>Metadata</source>
          <target state="translated">Metadata</target>
        </trans-unit>
        <trans-unit id="c06b0bd8322121aafa4d4159e59f3fdbe2ba5851" translate="yes" xml:space="preserve">
          <source>Metadata for the cached item</source>
          <target state="translated">キャッシュされたアイテムのメタデータ</target>
        </trans-unit>
        <trans-unit id="5f0337845fa160f43e4c22fbe32ed48ddb937cdf" translate="yes" xml:space="preserve">
          <source>Method Chaining</source>
          <target state="translated">メソッドチェイニング</target>
        </trans-unit>
        <trans-unit id="8866386185561ecef5859b43af964574361732d9" translate="yes" xml:space="preserve">
          <source>Method chaining allows you to simplify your syntax by connecting multiple functions. Consider this example:</source>
          <target state="translated">メソッドチェーニングでは、複数の関数を接続することで構文をシンプルにすることができます。この例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="7e4ac6803c9159c694f63d089cb06b2519c16aba" translate="yes" xml:space="preserve">
          <source>Methods</source>
          <target state="translated">Methods</target>
        </trans-unit>
        <trans-unit id="eac6533c8e2646290ef5835647f9e84730beddc1" translate="yes" xml:space="preserve">
          <source>Methods and variables that are only accessed internally, such as utility and helper functions that your public methods use for code abstraction, should be prefixed with an underscore.</source>
          <target state="translated">コードの抽象化のためにパブリック・メソッドが使用するユーティリティやヘルパー関数など、内部的にのみアクセスされるメソッドや変数は、プレフィックスにアンダースコアを付ける必要があります。</target>
        </trans-unit>
        <trans-unit id="5708006499fe69e19fb30e4b3945108c91b11f8d" translate="yes" xml:space="preserve">
          <source>Methods of that class can then be invoked with:</source>
          <target state="translated">そして、そのクラスのメソッドを呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="078ee41dac1378068652b1af58416f50bdd87782" translate="yes" xml:space="preserve">
          <source>Migrates up to the current version (whatever is set for &lt;code&gt;$config['migration_version']&lt;/code&gt; in &lt;em&gt;application/config/migration.php&lt;/em&gt;).</source>
          <target state="translated">現在のバージョンに &lt;code&gt;$config['migration_version']&lt;/code&gt; し&lt;em&gt;ます（application / config / migration.phpの&lt;/em&gt;$ config ['migration_version']に設定されているものはすべて）。</target>
        </trans-unit>
        <trans-unit id="7c142e791dfed4cc8d24583caa5a10d6bbf882f3" translate="yes" xml:space="preserve">
          <source>Migration Preferences</source>
          <target state="translated">移行設定</target>
        </trans-unit>
        <trans-unit id="a33514e1e6bea2eea902c62665a432b6f1e7d9bc" translate="yes" xml:space="preserve">
          <source>Migration file names</source>
          <target state="translated">移行ファイル名</target>
        </trans-unit>
        <trans-unit id="dca984afd74a0089c1d5a5816e4de2e8d46a60b5" translate="yes" xml:space="preserve">
          <source>Migrations</source>
          <target state="translated">Migrations</target>
        </trans-unit>
        <trans-unit id="6c4829efb74f7f334bf87b2b423e730253cccda2" translate="yes" xml:space="preserve">
          <source>Migrations Class</source>
          <target state="translated">移行クラス</target>
        </trans-unit>
        <trans-unit id="2635e0ad84bef8f271990ab82d359be2fb36c4ce" translate="yes" xml:space="preserve">
          <source>Migrations are a convenient way for you to alter your database in a structured and organized manner. You could edit fragments of SQL by hand but you would then be responsible for telling other developers that they need to go and run them. You would also have to keep track of which changes need to be run against the production machines next time you deploy.</source>
          <target state="translated">移行は、構造化された組織的な方法でデータベースを変更するための便利な方法です。手作業でSQLの断片を編集することもできますが、他の開発者にSQLを実行する必要があることを伝える責任があります。また、次回のデプロイ時には、どの変更を本番マシンに対して実行する必要があるかを追跡しなければなりません。</target>
        </trans-unit>
        <trans-unit id="2bce951b21bab34d0f19787c3b911df0fb859777" translate="yes" xml:space="preserve">
          <source>Mode name</source>
          <target state="translated">モード名</target>
        </trans-unit>
        <trans-unit id="68c2cc7f0ceaa3e499ecb4db331feb4debbbcc23" translate="yes" xml:space="preserve">
          <source>Model</source>
          <target state="translated">Model</target>
        </trans-unit>
        <trans-unit id="dc541a59c36c124e03def2af8a87a1f5d5d34eb3" translate="yes" xml:space="preserve">
          <source>Model classes are stored in your &lt;strong&gt;application/models/&lt;/strong&gt; directory. They can be nested within sub-directories if you want this type of organization.</source>
          <target state="translated">モデルクラスは、&lt;strong&gt;application / models /&lt;/strong&gt;ディレクトリに保存されます。このタイプの編成が必要な場合は、サブディレクトリ内にネストできます。</target>
        </trans-unit>
        <trans-unit id="9a44ef615916a4fab8a8e8aac039ef0308295c8d" translate="yes" xml:space="preserve">
          <source>Model-View-Controller</source>
          <target state="translated">Model-View-Controller</target>
        </trans-unit>
        <trans-unit id="b36a63bc3fe43961fc65d47d87018d35df5a1da6" translate="yes" xml:space="preserve">
          <source>Model-View-Controller Based System</source>
          <target state="translated">モデルビューコントローラベースシステム</target>
        </trans-unit>
        <trans-unit id="270836328e6579b01d4429364e4344240e7f7712" translate="yes" xml:space="preserve">
          <source>Model-View-Controller basics</source>
          <target state="translated">モデル-ビュー-コントローラの基本</target>
        </trans-unit>
        <trans-unit id="f3798f81c7b6fecad2cbfec741314f8a66c0eca3" translate="yes" xml:space="preserve">
          <source>Models</source>
          <target state="translated">Models</target>
        </trans-unit>
        <trans-unit id="aa2bb6f267c7f647f6759e9cc81866832d6e53c1" translate="yes" xml:space="preserve">
          <source>Models are &lt;strong&gt;optionally&lt;/strong&gt; available for those who want to use a more traditional MVC approach.</source>
          <target state="translated">モデルは、より伝統的なMVCアプローチを使用したい人のために&lt;strong&gt;オプションで&lt;/strong&gt;利用可能です。</target>
        </trans-unit>
        <trans-unit id="2ce143308833ea115ea1d065350c70586547791c" translate="yes" xml:space="preserve">
          <source>Models are PHP classes that are designed to work with information in your database. For example, let&amp;rsquo;s say you use CodeIgniter to manage a blog. You might have a model class that contains functions to insert, update, and retrieve your blog data. Here is an example of what such a model class might look like:</source>
          <target state="translated">モデルは、データベース内の情報を操作するように設計されたPHPクラスです。たとえば、CodeIgniterを使用してブログを管理するとします。ブログデータを挿入、更新、および取得する関数を含むモデルクラスがある場合があります。このようなモデルクラスの例を次に示します。</target>
        </trans-unit>
        <trans-unit id="1ce933ee61509d678c0bfd1382fab7fec9416d44" translate="yes" xml:space="preserve">
          <source>Models found in the &lt;em&gt;models/&lt;/em&gt; folder</source>
          <target state="translated">&lt;em&gt;models /&lt;/em&gt;フォルダーにある&lt;em&gt;モデル&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d45f0402146f97a0ea4e423da067ab13e3b51ac2" translate="yes" xml:space="preserve">
          <source>Modifies a table column. Usage: See &lt;a href=&quot;#modifying-a-column-in-a-table&quot;&gt;Modifying a Column in a Table&lt;/a&gt;.</source>
          <target state="translated">テーブルの列を変更します。使用法：&lt;a href=&quot;#modifying-a-column-in-a-table&quot;&gt;テーブルの列の変更を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="4f15aa8ca874492770383bfd8d9e19998f3752e1" translate="yes" xml:space="preserve">
          <source>Modifying Tables</source>
          <target state="translated">テーブルの修正</target>
        </trans-unit>
        <trans-unit id="a6a1cf1f8c70c268ba8c051031d188ec5a0c9450" translate="yes" xml:space="preserve">
          <source>Modifying a Column in a Table</source>
          <target state="translated">テーブルのカラムを修正する</target>
        </trans-unit>
        <trans-unit id="f7f5736f000670e4324c3d5ce08b2d38e991c24d" translate="yes" xml:space="preserve">
          <source>Month name</source>
          <target state="translated">月名</target>
        </trans-unit>
        <trans-unit id="b44ad06989798965210da32f817e3ec3c0718854" translate="yes" xml:space="preserve">
          <source>More information about routing can be found in the URI Routing &lt;a href=&quot;../general/routing&quot;&gt;documentation&lt;/a&gt;.</source>
          <target state="translated">ルーティングの詳細については、URIルーティングの&lt;a href=&quot;../general/routing&quot;&gt;ドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="116301c6866f86f5ea978a7d88c80eee2f96bee7" translate="yes" xml:space="preserve">
          <source>Most of the preferences have default values that will be used if you do not set them.</source>
          <target state="translated">ほとんどの環境設定にはデフォルト値が設定されており、それを設定しない場合に使用されます。</target>
        </trans-unit>
        <trans-unit id="a63b9abc427da0a44530fd123a81a4a38abb8e32" translate="yes" xml:space="preserve">
          <source>Moves the internal results row pointer to the desired offset.</source>
          <target state="translated">内部結果行ポインタを目的のオフセットに移動します。</target>
        </trans-unit>
        <trans-unit id="eea36daf70a9f45dc0c4ba2490edb02e1066a1e0" translate="yes" xml:space="preserve">
          <source>Much like the &lt;a href=&quot;common_functions&quot;&gt;common functions&lt;/a&gt;, the compatibility functions are always available, as long as their dependencies are met.</source>
          <target state="translated">多くのように&lt;a href=&quot;common_functions&quot;&gt;一般的な機能&lt;/a&gt;、互換機能がある限りその依存関係が満たされているとして、常に利用可能です。</target>
        </trans-unit>
        <trans-unit id="57916ab8af22a09d2520bdd9f877353625ae5d0f" translate="yes" xml:space="preserve">
          <source>Multi-server configuration with an optional &lt;em&gt;weight&lt;/em&gt; parameter as the third colon-separated (&lt;code&gt;:weight&lt;/code&gt;) value is also supported, but we have to note that we haven&amp;rsquo;t tested if that is reliable.</source>
          <target state="translated">3番目のコロンで区切られた（ &lt;code&gt;:weight&lt;/code&gt; ）値としてオプションの&lt;em&gt;重み&lt;/em&gt;パラメーターを持つマルチサーバー構成もサポートされますが、それが信頼できるかどうかはテストしていません。</target>
        </trans-unit>
        <trans-unit id="28bb37ed79034c9cf7806eaf79c9c2b81d2aadc7" translate="yes" xml:space="preserve">
          <source>Multibyte String</source>
          <target state="translated">マルチバイト文字列</target>
        </trans-unit>
        <trans-unit id="380d02a5144467138e83b85afe9b87b0857c1ef3" translate="yes" xml:space="preserve">
          <source>Multiple Calls to the Same Hook</source>
          <target state="translated">同一フックへの複数回の呼び出し</target>
        </trans-unit>
        <trans-unit id="b724d17f477233b318c04305bcd69cbc07f5cdbe" translate="yes" xml:space="preserve">
          <source>Multiple Memcached servers can be specified in the memcached.php configuration file, located in the _application/config/* directory.</source>
          <target state="translated">複数の Memcached サーバは、_applicationconfig*ディレクトリにある memcached.php 設定ファイルで指定することができます。</target>
        </trans-unit>
        <trans-unit id="9cae85b1776a27b4897d722abe985bb6b8afefb8" translate="yes" xml:space="preserve">
          <source>Multiple Protocols: Mail, Sendmail, and SMTP</source>
          <target state="translated">複数のプロトコル。メール、sendmail、SMTP</target>
        </trans-unit>
        <trans-unit id="d04302609118850f053f41d4170b518fb9554d6f" translate="yes" xml:space="preserve">
          <source>Multiple calls to add_field() are cumulative.</source>
          <target state="translated">add_field()の複数回の呼び出しは累積されます。</target>
        </trans-unit>
        <trans-unit id="56e55c9ca20fc6872fdaeaada1fd02d43aa28688" translate="yes" xml:space="preserve">
          <source>Multiple column non-primary keys must be sent as an array. Sample output below is for MySQL.</source>
          <target state="translated">複数のカラムの非主キーは配列として送信する必要があります。以下のサンプル出力はMySQLの場合です。</target>
        </trans-unit>
        <trans-unit id="6f6dc9f7b82b69ac4a2ebaf51fe7a8e4191e02ed" translate="yes" xml:space="preserve">
          <source>Multiple function calls can be made if you need several joins in one query.</source>
          <target state="translated">1つのクエリで複数の結合が必要な場合は、複数の関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="daaa329caefed028a34e3484742ff33f2a34e26f" translate="yes" xml:space="preserve">
          <source>Multiple recipients</source>
          <target state="translated">複数の受信者</target>
        </trans-unit>
        <trans-unit id="5220d850a9cedf604eb12f4a809d3b970282586f" translate="yes" xml:space="preserve">
          <source>MySQL-formatted date</source>
          <target state="translated">MySQL形式の日付</target>
        </trans-unit>
        <trans-unit id="08d2e98e6754af941484848930ccbaddfefe13d6" translate="yes" xml:space="preserve">
          <source>N/A</source>
          <target state="translated">N/A</target>
        </trans-unit>
        <trans-unit id="eef19c54306daa69eda49c0272623bdb5e2b341f" translate="yes" xml:space="preserve">
          <source>NULL</source>
          <target state="translated">NULL</target>
        </trans-unit>
        <trans-unit id="5a5aa17aff68e0b960c5d9bebe3d344b0cc416c1" translate="yes" xml:space="preserve">
          <source>NULL on failure or the array item.</source>
          <target state="translated">失敗した場合は NULL、または配列の項目。</target>
        </trans-unit>
        <trans-unit id="709a23220f2c3d64d1e1d6d18c4d5280f8d82fca" translate="yes" xml:space="preserve">
          <source>Name</source>
          <target state="translated">Name</target>
        </trans-unit>
        <trans-unit id="185c40e821a43ee79c5bebbf84a2253f21a51093" translate="yes" xml:space="preserve">
          <source>Name Config</source>
          <target state="translated">名前の設定</target>
        </trans-unit>
        <trans-unit id="6e8d44fadcf61ab42000fb3b3fa3bd78ca16f559" translate="yes" xml:space="preserve">
          <source>Name of the file that was uploaded, including the filename extension</source>
          <target state="translated">アップロードされたファイル名(ファイル名の拡張子を含む</target>
        </trans-unit>
        <trans-unit id="8af56df8a9cb35f56b67edd6d269d4e86defc0d0" translate="yes" xml:space="preserve">
          <source>Naming Conventions</source>
          <target state="translated">命名規約</target>
        </trans-unit>
        <trans-unit id="ea3c2a67fdb974320c2d4fa47411bc1dbace11e3" translate="yes" xml:space="preserve">
          <source>Nearly identical to the &lt;a href=&quot;#anchor&quot;&gt;&lt;code&gt;anchor()&lt;/code&gt;&lt;/a&gt; function except that it opens the URL in a new window. You can specify JavaScript window attributes in the third parameter to control how the window is opened. If the third parameter is not set it will simply open a new window with your own browser settings.</source>
          <target state="translated">新しいウィンドウでURLを開くことを除いて、&lt;a href=&quot;#anchor&quot;&gt; &lt;code&gt;anchor()&lt;/code&gt; &lt;/a&gt;関数とほぼ同じです。3番目のパラメーターでJavaScriptウィンドウ属性を指定して、ウィンドウの開き方を制御できます。3番目のパラメータが設定されていない場合は、独自のブラウザ設定で新しいウィンドウを開くだけです。</target>
        </trans-unit>
        <trans-unit id="f0fae8ae3924848a6bfc5e456d04122af81bb889" translate="yes" xml:space="preserve">
          <source>Never combine statements on one line.</source>
          <target state="translated">文章を一行にまとめることは絶対にしないでください。</target>
        </trans-unit>
        <trans-unit id="a1e12395bf3c98cfcc33a4a16b4eb9a4e1fcbb5e" translate="yes" xml:space="preserve">
          <source>Never insert information into your database without escaping it. Please see the section that discusses &lt;a href=&quot;../database/queries&quot;&gt;database queries&lt;/a&gt; for more information.</source>
          <target state="translated">エスケープせずにデータベースに情報を挿入しないでください。詳細については、&lt;a href=&quot;../database/queries&quot;&gt;データベースクエリ&lt;/a&gt;について説明しているセクションをご覧ください。</target>
        </trans-unit>
        <trans-unit id="8c0978f21ea5894f02aebfacb2f433824dca3f0c" translate="yes" xml:space="preserve">
          <source>New value on success, FALSE on failure</source>
          <target state="translated">成功には新しい価値、失敗にはFALSE</target>
        </trans-unit>
        <trans-unit id="bdccd2dbe04845ab309e1f92b6e905515b2f17ab" translate="yes" xml:space="preserve">
          <source>Newline character. (Use &amp;ldquo;\r\n&amp;rdquo; to comply with RFC 822).</source>
          <target state="translated">改行文字。（「\ r \ n」を使用してRFC 822に準拠します）。</target>
        </trans-unit>
        <trans-unit id="6d3791e8b4637faca38efe4794ac3e212715c1d8" translate="yes" xml:space="preserve">
          <source>Newly encrypted string</source>
          <target state="translated">新しく暗号化された文字列</target>
        </trans-unit>
        <trans-unit id="f2cb5010b2ad28ffbee6b4a5493e9de05c8d65cc" translate="yes" xml:space="preserve">
          <source>News section</source>
          <target state="translated">ニュースセクション</target>
        </trans-unit>
        <trans-unit id="56d21d2233995efe7c5f1f61069435f5df49bbc6" translate="yes" xml:space="preserve">
          <source>Next row from the result set or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">結果セットの次の行、または存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="e4478998415992fedb7ec8949d4aa892923d8770" translate="yes" xml:space="preserve">
          <source>Next row of result set, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">結果セットの次の行。存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="6b63652aceee247ec8cc1865efa7bcd8527d5439" translate="yes" xml:space="preserve">
          <source>Next, read each of the &lt;strong&gt;General Topics&lt;/strong&gt; pages in order. Each topic builds on the previous one, and includes code examples that you are encouraged to try.</source>
          <target state="translated">次に、&lt;strong&gt;一般トピックの&lt;/strong&gt;各ページを順番に読みます。各トピックは前のトピックを基にしており、試してみることをお勧めするコード例が含まれています。</target>
        </trans-unit>
        <trans-unit id="99bee288d49b693788cc16318bcd7a3e421115cc" translate="yes" xml:space="preserve">
          <source>Next, there are two methods to view all news items and one for a specific news item. You can see that the &lt;code&gt;$slug&lt;/code&gt; variable is passed to the model&amp;rsquo;s method in the second method. The model is using this slug to identify the news item to be returned.</source>
          <target state="translated">次に、すべてのニュース項目を表示する方法と、特定のニュース項目を表示する方法の2つがあります。 &lt;code&gt;$slug&lt;/code&gt; 変数が2番目のメソッドでモデルのメソッドに渡されていることがわかります。モデルはこのスラグを使用して、返されるニュース項目を識別しています。</target>
        </trans-unit>
        <trans-unit id="816c52fd2bdd94a63cd0944823a6c0aa9384c103" translate="yes" xml:space="preserve">
          <source>No</source>
          <target state="translated">No</target>
        </trans-unit>
        <trans-unit id="6af9ce63c40b5c45ce6e810e2bcecd22831f67f1" translate="yes" xml:space="preserve">
          <source>No Default</source>
          <target state="translated">デフォルトではありません</target>
        </trans-unit>
        <trans-unit id="8a4c24df7223586752973df5cee8f32bb2a241b0" translate="yes" xml:space="preserve">
          <source>No whitespace can precede the opening PHP tag or follow the closing PHP tag. Output is buffered, so whitespace in your files can cause output to begin before CodeIgniter outputs its content, leading to errors and an inability for CodeIgniter to send proper headers.</source>
          <target state="translated">最初のPHPタグの前に空白を入れたり、最後のPHPタグの後に空白を入れたりすることはできません。出力はバッファリングされているので、ファイル内の空白文字は、CodeIgniter がその内容を出力する前に出力を開始させてしまい、 エラーや CodeIgniter が適切なヘッダを送信できない原因となります。</target>
        </trans-unit>
        <trans-unit id="6eef6648406c333a4035cd5e60d0bf2ecf2606d7" translate="yes" xml:space="preserve">
          <source>None</source>
          <target state="translated">None</target>
        </trans-unit>
        <trans-unit id="aa543b7c8cad3921ccc866d337593feec5a943bb" translate="yes" xml:space="preserve">
          <source>Normally from within your controller methods you will call any of the available CodeIgniter methods using the &lt;code&gt;$this&lt;/code&gt; construct:</source>
          <target state="translated">通常、コントローラーメソッド内から、 &lt;code&gt;$this&lt;/code&gt; 構成を使用して、利用可能なCodeIgniterメソッドを呼び出します。</target>
        </trans-unit>
        <trans-unit id="5ef5afec2dbed7f6df2648d98c27d91ffc7f8252" translate="yes" xml:space="preserve">
          <source>Normally the second segment of the URL is reserved for the method name, but in the example above it instead has a product ID. To overcome this, CodeIgniter allows you to remap the URI handler.</source>
          <target state="translated">通常、URLの2番目のセグメントはメソッド名のために予約されていますが、上の例では代わりにプロダクトIDを持っています。これを克服するために、CodeIgniterではURIハンドラをリマップすることができます。</target>
        </trans-unit>
        <trans-unit id="07e2d5ba0a376b2bc8d3d5bb04c8a8b2b74a95c9" translate="yes" xml:space="preserve">
          <source>Normally to echo, or print out a variable you would do this:</source>
          <target state="translated">通常、変数をエコーしたり、出力したりするには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="e60b2af9383b9f7abea5bb84cd19bd6a54113070" translate="yes" xml:space="preserve">
          <source>Normally, to call any of the available methods, CodeIgniter requires you to use the &lt;code&gt;$this&lt;/code&gt; construct:</source>
          <target state="translated">通常、使用可能なメソッドを呼び出すには、CodeIgniterで &lt;code&gt;$this&lt;/code&gt; 構成を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="9c43a177cbd23e8af454b2820cfddbbac0371a49" translate="yes" xml:space="preserve">
          <source>Not All Database Functions Work with Caching</source>
          <target state="translated">すべてのデータベース関数がキャッシングで動作するわけではありません</target>
        </trans-unit>
        <trans-unit id="632b248b8fc8174595e1645d4a5851567f1dcb44" translate="yes" xml:space="preserve">
          <source>Not all database drivers have a native way of getting the total number of rows for a result set. When this is the case, all of the data is prefetched and &lt;code&gt;count()&lt;/code&gt; is manually called on the resulting array in order to achieve the same result.</source>
          <target state="translated">すべてのデータベースドライバーに、結果セットの行の総数を取得するネイティブな方法があるわけではありません。この場合、すべてのデータがプリフェッチされ、同じ結果を得るために、結果の配列に対して &lt;code&gt;count()&lt;/code&gt; が手動で呼び出されます。</target>
        </trans-unit>
        <trans-unit id="23e46188c93c10017ea44dbb01a466dbed6d005c" translate="yes" xml:space="preserve">
          <source>Not all database drivers support this feature and will return FALSE. Most notably - you won&amp;rsquo;t be able to use it with PDO.</source>
          <target state="translated">すべてのデータベースドライバがこの機能をサポートしているわけではなく、FALSEを返します。特に、PDOで使用することはできません。</target>
        </trans-unit>
        <trans-unit id="b7571a4b4440813810f17784981c648429c7fba2" translate="yes" xml:space="preserve">
          <source>Not all database platforms support database optimization. It it is mostly for use with MySQL.</source>
          <target state="translated">すべてのデータベースプラットフォームがデータベースの最適化をサポートしているわけではありません。主に MySQL で使用されています。</target>
        </trans-unit>
        <trans-unit id="6387a3aec8e30d50cf84b89b94c7dbbd8ece60ca" translate="yes" xml:space="preserve">
          <source>Not all database platforms support table optimization. It is mostly for use with MySQL.</source>
          <target state="translated">すべてのデータベースプラットフォームがテーブル最適化をサポートしているわけではありません。主に MySQL で使用されています。</target>
        </trans-unit>
        <trans-unit id="de631bc6677a6def6e0986720d32e0aabcccea3b" translate="yes" xml:space="preserve">
          <source>Not all database platforms support table repairs.</source>
          <target state="translated">すべてのデータベースプラットフォームがテーブルの修復をサポートしているわけではありません。</target>
        </trans-unit>
        <trans-unit id="f2034351d3db6f7cc1d871b1e1307b942c921c61" translate="yes" xml:space="preserve">
          <source>Not all databases provide meta-data.</source>
          <target state="translated">すべてのデータベースがメタデータを提供しているわけではありません。</target>
        </trans-unit>
        <trans-unit id="a54f8dea091fcef59d9533c779707c765e9adf5b" translate="yes" xml:space="preserve">
          <source>Not all methods are supported by all database drivers, some of them may fail (and return FALSE) if the underlying driver does not support them.</source>
          <target state="translated">すべてのメソッドがすべてのデータベースドライバでサポートされているわけではありません。</target>
        </trans-unit>
        <trans-unit id="3e154a37576dad604cc0ef6a270548bb8e61534d" translate="yes" xml:space="preserve">
          <source>Not all of the libraries have the same (or any) parameters in their constructor. Take a look at the library that you&amp;rsquo;re extending first to see how it should be implemented.</source>
          <target state="translated">すべてのライブラリのコンストラクタに同じ（または任意の）パラメータがあるわけではありません。最初に拡張するライブラリを見て、どのように実装するかを確認してください。</target>
        </trans-unit>
        <trans-unit id="4d241cecf7c2bce9e92f68b7e1f75f1fb673d9b3" translate="yes" xml:space="preserve">
          <source>Not all query result functions are available when you use caching. Please read this page carefully.</source>
          <target state="translated">キャッシングを利用した場合、すべてのクエリ結果機能が利用できるわけではありません。このページをよくお読みください。</target>
        </trans-unit>
        <trans-unit id="1a4e17d9ecc8a787bdbf6fbf0dad1ea016ea4da3" translate="yes" xml:space="preserve">
          <source>Not only does this &lt;strong&gt;reduce&lt;/strong&gt; security instead of improving it, but there&amp;rsquo;s literally no reason to do it. No technical limitations and no (practical) storage constraints apply once you&amp;rsquo;ve hashed them, none!</source>
          <target state="translated">これ&lt;strong&gt;により、&lt;/strong&gt;セキュリティが向上&lt;strong&gt;する&lt;/strong&gt;だけでなく、セキュリティが&lt;strong&gt;低下する&lt;/strong&gt;だけでなく、文字通りそれを行う理由もありません。それらをハッシュした後は、技術的な制限や（実用的な）ストレージの制約は適用されません。</target>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="513eb4a933349349cfdccc2020ad9fe1daf6a9ff" translate="yes" xml:space="preserve">
          <source>Note some of the location lists have been abridged for clarity and formatting.</source>
          <target state="translated">場所のリストのいくつかは、わかりやすくするために簡略化されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="dae6613754b472e4a0866d273fc7fd4b6683ae9c" translate="yes" xml:space="preserve">
          <source>Note that &amp;ldquo;per_page&amp;rdquo; is the default query string passed, however can be configured using &lt;code&gt;$config['query_string_segment'] = 'your_string'&lt;/code&gt;</source>
          <target state="translated">「per_page」は渡されるデフォルトのクエリ文字列ですが、 &lt;code&gt;$config['query_string_segment'] = 'your_string'&lt;/code&gt; を使用して構成できます。</target>
        </trans-unit>
        <trans-unit id="3d4d77034d368a7c286fa421128ecaaa3d6914df" translate="yes" xml:space="preserve">
          <source>Note that both &amp;lsquo;key&amp;rsquo; and &amp;lsquo;hmac_key&amp;rsquo; are used in this example. When using custom parameters, encryption and HMAC keys are not derived like the default behavior of the library is.</source>
          <target state="translated">この例では「key」と「hmac_key」の両方が使用されていることに注意してください。カスタムパラメータを使用する場合、暗号化とHMACキーは、ライブラリのデフォルトの動作のように導出されません。</target>
        </trans-unit>
        <trans-unit id="01af2d10afb31d13c94f25eec162fb6e0de6520d" translate="yes" xml:space="preserve">
          <source>Note that data will only be retrievable from this function if it has been previously sent to the output class by one of the CodeIgniter functions like &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt; ようなCodeIgniter関数の1つによって以前に出力クラスに送信された場合にのみ、この関数からデータを取得できることに注意してください。</target>
        </trans-unit>
        <trans-unit id="71090f977457f74fda5afde42e0d3d646c776086" translate="yes" xml:space="preserve">
          <source>Note that most native classes are prefixed with CI_.</source>
          <target state="translated">ほとんどのネイティブクラスのプレフィックスは CI_であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="8591dd8626833196e40f34fb1041e4220ce6d387" translate="yes" xml:space="preserve">
          <source>Note that not all preferences are available for every function. For example, the x/y axis preferences are only available for image cropping. Likewise, the width and height preferences have no effect on cropping. The &amp;ldquo;availability&amp;rdquo; column indicates which functions support a given preference.</source>
          <target state="translated">すべての設定がすべての機能で利用できるわけではないことに注意してください。たとえば、x / y軸の設定は、画像のトリミングにのみ使用できます。同様に、幅と高さの設定はトリミングに影響しません。「可用性」列は、特定の設定をサポートする機能を示します。</target>
        </trans-unit>
        <trans-unit id="5a1073e259f36c410930a59a4450c904cfdd9141" translate="yes" xml:space="preserve">
          <source>Note that these are procedural functions, so they &lt;strong&gt;do not&lt;/strong&gt; require you to prepend them with &lt;code&gt;$this-&amp;gt;form_validation&lt;/code&gt;.</source>
          <target state="translated">これらは手続き型関数であるため、前に &lt;code&gt;$this-&amp;gt;form_validation&lt;/code&gt; を付ける必要&lt;strong&gt;がない&lt;/strong&gt;ことに注意してください。</target>
        </trans-unit>
        <trans-unit id="0ab95ee6fefbf633259483ba9e4941cf8a786b59" translate="yes" xml:space="preserve">
          <source>Note that we only mentioned that you want to change the ciper and mode, but we also included a key in the example. As previously noted, it is important that you choose a key with a proper size for the used algorithm.</source>
          <target state="translated">サイパーとモードを変更したいということだけを述べましたが、例の中にはキーも含まれていることに注意してください。前述したように、使用するアルゴリズムに適したサイズのキーを選択することが重要です。</target>
        </trans-unit>
        <trans-unit id="b495f14f394885646fb245099d99c2a32a8215a5" translate="yes" xml:space="preserve">
          <source>Note: Change the words &amp;ldquo;group_one&amp;rdquo; and &amp;ldquo;group_two&amp;rdquo; to the specific group names you are connecting to (or you can pass the connection values as indicated above).</source>
          <target state="translated">注：「group_one」および「group_two」という単語を、接続先の特定のグループ名に変更します（または上記のように接続値を渡すことができます）。</target>
        </trans-unit>
        <trans-unit id="46fee7b30a6e016c48bd0eadfa2a898c3f2bd072" translate="yes" xml:space="preserve">
          <source>Note: If all your pages require database access you can connect automatically. See the &lt;a href=&quot;connecting&quot;&gt;connecting&lt;/a&gt; page for details.</source>
          <target state="translated">注：すべてのページでデータベースアクセスが必要な場合は、自動的に接続できます。詳細は&lt;a href=&quot;connecting&quot;&gt;接続&lt;/a&gt;ページをご覧ください。</target>
        </trans-unit>
        <trans-unit id="70440046a3dc2e079f23ee1c57dfa76669b732aa" translate="yes" xml:space="preserve">
          <source>Notes</source>
          <target state="translated">Notes</target>
        </trans-unit>
        <trans-unit id="d950d1b6247c48786e025311b2ff1ed96adb9541" translate="yes" xml:space="preserve">
          <source>Notes regarding this preference:</source>
          <target state="translated">この好みに関する注意事項</target>
        </trans-unit>
        <trans-unit id="9c3befe7e22c8667bc957541f49b0ee79970b588" translate="yes" xml:space="preserve">
          <source>Notes:</source>
          <target state="translated">Notes:</target>
        </trans-unit>
        <trans-unit id="e20b7d05252ba010fd421549d69bc395899c8ad6" translate="yes" xml:space="preserve">
          <source>Notice that the above array is formatted as a struct. This is the most common data type for responses.</source>
          <target state="translated">上記の配列は struct としてフォーマットされていることに注意してください。これはレスポンスで最も一般的なデータ型です。</target>
        </trans-unit>
        <trans-unit id="d2f8b94c3231a5762ce3ee546175b78e4192d8db" translate="yes" xml:space="preserve">
          <source>Notice that the equal sign is added for you.</source>
          <target state="translated">あなたのために等号が追加されていることに注意してください。</target>
        </trans-unit>
        <trans-unit id="153701ba4f7202381dcbb5ce39d15ea133bc06f1" translate="yes" xml:space="preserve">
          <source>Notice that there are no braces. Instead, the end brace is replaced with &lt;code&gt;endforeach&lt;/code&gt;. Each of the control structures listed above has a similar closing syntax: &lt;code&gt;endif&lt;/code&gt;, &lt;code&gt;endfor&lt;/code&gt;, &lt;code&gt;endforeach&lt;/code&gt;, and &lt;code&gt;endwhile&lt;/code&gt;</source>
          <target state="translated">ブレースがないことに注意してください。代わりに、終了中括弧は &lt;code&gt;endforeach&lt;/code&gt; に置き換えられます。上記の各制御構造には、同様の終了構文があります： &lt;code&gt;endif&lt;/code&gt; 、 &lt;code&gt;endfor&lt;/code&gt; 、 &lt;code&gt;endforeach&lt;/code&gt; 、および &lt;code&gt;endwhile&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4641349049e2343e3a2be0d684a9186c04c2e76a" translate="yes" xml:space="preserve">
          <source>Notice the brackets after each array index:</source>
          <target state="translated">各配列のインデックスの後の括弧に注目してください。</target>
        </trans-unit>
        <trans-unit id="1858839dc635ef1a32b9c526808b6ab74bb4d3c5" translate="yes" xml:space="preserve">
          <source>Notice the entry_id is in the third URI segment, which you can retrieve using:</source>
          <target state="translated">entry_idが3つ目のURIセグメントにあることに注目してください。</target>
        </trans-unit>
        <trans-unit id="213840e7c50833808327117abe4fca9a56cb0f62" translate="yes" xml:space="preserve">
          <source>Notice the use of &amp;ldquo;is_string&amp;rdquo; in the second parameter? This tells the function to evaluate whether your test is producing a string as the result. Here is a list of allowed comparison types:</source>
          <target state="translated">2番目のパラメーターで「is_string」が使用されていることに注意してください。これは、テストが結果として文字列を生成しているかどうかを評価するように関数に指示します。許可される比較タイプのリストは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="49c8371146058b533c1499d33f31da187dcac8a0" translate="yes" xml:space="preserve">
          <source>Now What?</source>
          <target state="translated">今は何を?</target>
        </trans-unit>
        <trans-unit id="895b39b23f9b604b8ab5c1d2e3821894cc364882" translate="yes" xml:space="preserve">
          <source>Now load the following URL to see the comment method:</source>
          <target state="translated">では、以下のURLを読み込んで、コメントの方法を確認してみましょう。</target>
        </trans-unit>
        <trans-unit id="030ec8aa889c3e8d940bcd91b95123ca4f68b2fb" translate="yes" xml:space="preserve">
          <source>Now normally you would visit the site using a URL similar to this:</source>
          <target state="translated">さて、通常はこのようなURLを使ってサイトを訪問します。</target>
        </trans-unit>
        <trans-unit id="b2a192de11f3f96e3b3be35b64ceeafb501e0d0c" translate="yes" xml:space="preserve">
          <source>Now open your view file and change the text to variables that correspond to the array keys in your data:</source>
          <target state="translated">ここでビューファイルを開き、テキストをデータ内の配列キーに対応する変数に変更します。</target>
        </trans-unit>
        <trans-unit id="994d1ab47ad5a8441c604997219e6f1f6ddae0c5" translate="yes" xml:space="preserve">
          <source>Now open your view file and create a loop:</source>
          <target state="translated">ビューファイルを開き、ループを作成します。</target>
        </trans-unit>
        <trans-unit id="9c694562d4ca2540ea35718014f1099c6fc1a896" translate="yes" xml:space="preserve">
          <source>Now point your browser to your local development environment where you installed CodeIgniter and add index.php/news/create to the URL. Congratulations, you just created your first CodeIgniter application! Add some news and check out the different pages you made.</source>
          <target state="translated">CodeIgniterをインストールしたローカルの開発環境にブラウザを向け、URLにindex.phpnewscreateを追加してください。おめでとうございます。ニュースを追加して、作成したページをチェックしてみましょう。</target>
        </trans-unit>
        <trans-unit id="dfa2b6237c09c7caa5da064db8947fb627f7bdcf" translate="yes" xml:space="preserve">
          <source>Now reload your page and submit the form so that it triggers an error. Your form fields should now be re-populated</source>
          <target state="translated">ページをリロードして、エラーが発生するようにフォームを送信してください。これでフォームフィールドが再入力されるはずです。</target>
        </trans-unit>
        <trans-unit id="6c1dfbfafac6a3a0c7b6ca2ec9d021f007f48565" translate="yes" xml:space="preserve">
          <source>Now submit the form with the fields blank and you should see the error messages. If you submit the form with all the fields populated you&amp;rsquo;ll see your success page.</source>
          <target state="translated">次に、フィールドを空白にしてフォームを送信すると、エラーメッセージが表示されます。すべてのフィールドが入力された状態でフォームを送信すると、成功ページが表示されます。</target>
        </trans-unit>
        <trans-unit id="0e5e3caa9a199e277f56605bd13929f3f26cfa9a" translate="yes" xml:space="preserve">
          <source>Now that the database and a model have been set up, you&amp;rsquo;ll need a method to get all of our posts from our database. To do this, the database abstraction layer that is included with CodeIgniter &amp;mdash; &lt;a href=&quot;../database/query_builder&quot;&gt;Query Builder&lt;/a&gt; &amp;mdash; is used. This makes it possible to write your &amp;lsquo;queries&amp;rsquo; once and make them work on &lt;a href=&quot;https://www.codeigniter.com/user_guide/general/requirements.html&quot;&gt;all supported database systems&lt;/a&gt;. Add the following code to your model.</source>
          <target state="translated">データベースとモデルが設定されたので、データベースからすべての投稿を取得するメソッドが必要になります。これを行うには、CodeIgniterに含まれているデータベースアブストラクションレイヤー（&lt;a href=&quot;../database/query_builder&quot;&gt;クエリビルダー&lt;/a&gt;）を使用します。これにより、「クエリ」を1回記述して、&lt;a href=&quot;https://www.codeigniter.com/user_guide/general/requirements.html&quot;&gt;サポートさ&lt;/a&gt;れているすべてのデータベースシステムで機能させることができます。次のコードをモデルに追加します。</target>
        </trans-unit>
        <trans-unit id="366e839dda526bb762e7e3d495e546ffeebdb6f6" translate="yes" xml:space="preserve">
          <source>Now that the queries are written, the model should be tied to the views that are going to display the news items to the user. This could be done in our &lt;code&gt;Pages&lt;/code&gt; controller created earlier, but for the sake of clarity, a new &lt;code&gt;News&lt;/code&gt; controller is defined. Create the new controller at &lt;em&gt;application/controllers/News.php&lt;/em&gt;.</source>
          <target state="translated">これでクエリが記述されたので、モデルは、ユーザーにニュース項目を表示するビューに関連付けられるはずです。これは、以前に作成した &lt;code&gt;Pages&lt;/code&gt; コントローラーで実行できますが、明確にするために、新しい &lt;code&gt;News&lt;/code&gt; コントローラーが定義されています。&lt;em&gt;application / controllers / News.php&lt;/em&gt;で新しいコントローラーを作成します。</target>
        </trans-unit>
        <trans-unit id="af5b4db26f4f42d24dbb03163764f186850ebfcf" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve completed this tutorial, we recommend you check out the rest of the documentation. CodeIgniter is often praised because of its comprehensive documentation. Use this to your advantage and read the &amp;ldquo;Introduction&amp;rdquo; and &amp;ldquo;General Topics&amp;rdquo; sections thoroughly. You should read the class and helper references when needed.</source>
          <target state="translated">このチュートリアルを完了したので、残りのドキュメントを確認することをお勧めします。CodeIgniterは、その包括的なドキュメントのためにしばしば賞賛されています。これを利用して、「はじめに」と「一般的なトピック」のセクションをよく読んでください。必要に応じて、クラスとヘルパーのリファレンスを読む必要があります。</target>
        </trans-unit>
        <trans-unit id="8b5d1fb674b6c90403d5e261de34edc1e1a781ce" translate="yes" xml:space="preserve">
          <source>Now the data is retrieved by the controller through our model, but nothing is displayed yet. The next thing to do is passing this data to the views.</source>
          <target state="translated">これで、モデルを介してコントローラがデータを取得しましたが、まだ何も表示されていません。次にやるべきことは、このデータをビューに渡すことです。</target>
        </trans-unit>
        <trans-unit id="d077a9181a89b2e76122e9f7600785fd198830f0" translate="yes" xml:space="preserve">
          <source>Now visit &lt;code&gt;index.php/about&lt;/code&gt;. Did it get routed correctly to the &lt;code&gt;view()&lt;/code&gt; method in the pages controller? Awesome!</source>
          <target state="translated">次に &lt;code&gt;index.php/about&lt;/code&gt; にアクセスします。ページコントローラーの &lt;code&gt;view()&lt;/code&gt; メソッドに正しくルーティングされましたか？驚くばかり！</target>
        </trans-unit>
        <trans-unit id="556c09c55f5f39cb8e86685581fe452ad534f50d" translate="yes" xml:space="preserve">
          <source>Now visit the your site using a URL similar to this:</source>
          <target state="translated">これに似たURLを使用して、あなたのサイトを訪問してください。</target>
        </trans-unit>
        <trans-unit id="790d0f2163f29b125b0415631cb2c64f86ff9363" translate="yes" xml:space="preserve">
          <source>Now you&amp;rsquo;ve created your first method, it&amp;rsquo;s time to make some basic page templates. We will be creating two &amp;ldquo;views&amp;rdquo; (page templates) that act as our page footer and header.</source>
          <target state="translated">最初のメソッドを作成したので、基本的なページテンプレートを作成します。ページフッターとヘッダーとして機能する2つの「ビュー」（ページテンプレート）を作成します。</target>
        </trans-unit>
        <trans-unit id="547813b9f0b945f6c9ccff1e5a8fb928974507c5" translate="yes" xml:space="preserve">
          <source>Now, open the controller file you made earlier called Blog.php, and replace the echo statement with the view loading method:</source>
          <target state="translated">さて、先ほど作成したBlog.phpというコントローラファイルを開き、echo文をビューの読み込み方法に置き換えます。</target>
        </trans-unit>
        <trans-unit id="10b82d9d74a444fd76da446b19b05fe408cb810b" translate="yes" xml:space="preserve">
          <source>Now, to the point - there are three general rules that you must follow when creating a session driver for CodeIgniter:</source>
          <target state="translated">さて、本題に入りますが、CodeIgniter用のセッションドライバを作成する際には、3つの一般的なルールに従わなければなりません。</target>
        </trans-unit>
        <trans-unit id="2b348fed1d936620ba05aa7c807325d373770eb7" translate="yes" xml:space="preserve">
          <source>Now, when the page does exist, it is loaded, including the header and footer, and displayed to the user. If the page doesn&amp;rsquo;t exist, a &amp;ldquo;404 Page not found&amp;rdquo; error is shown.</source>
          <target state="translated">これで、ページが存在する場合、ヘッダーとフッターを含めてロードされ、ユーザーに表示されます。ページが存在しない場合、「404ページが見つかりません」エラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="429fbfd27975f3f9eb880ce51765984a31098818" translate="yes" xml:space="preserve">
          <source>Number Helper</source>
          <target state="translated">ナンバーヘルパー</target>
        </trans-unit>
        <trans-unit id="be384665d0a8ef110a26b95867e04883a89ad2cf" translate="yes" xml:space="preserve">
          <source>Number of characters in the input string or FALSE on failure</source>
          <target state="translated">入力文字列の文字数、失敗した場合はFALSE</target>
        </trans-unit>
        <trans-unit id="ff60b44275c2e3f9c708651395ce5dd49bf01798" translate="yes" xml:space="preserve">
          <source>Number of emails in each BCC batch.</source>
          <target state="translated">BCCバッチごとのメール数。</target>
        </trans-unit>
        <trans-unit id="e6c18b5727602f5cec551b0b67cdcbf3aa792be2" translate="yes" xml:space="preserve">
          <source>Number of fields in the result set</source>
          <target state="translated">結果セットのフィールド数</target>
        </trans-unit>
        <trans-unit id="84e9a941259fc8383989da5a96e6576a554e846c" translate="yes" xml:space="preserve">
          <source>Number of rows affected</source>
          <target state="translated">影響を受ける行数</target>
        </trans-unit>
        <trans-unit id="ef2264c9d35f0d8b0cf4205eef5d3083770aa85f" translate="yes" xml:space="preserve">
          <source>Number of rows in the query result</source>
          <target state="translated">クエリ結果の行数</target>
        </trans-unit>
        <trans-unit id="a37ed7e86e18a6dc1002fbd848a01eb9b381033a" translate="yes" xml:space="preserve">
          <source>Number of rows in the result set</source>
          <target state="translated">結果セットの行数</target>
        </trans-unit>
        <trans-unit id="745bde78fe40103ff60865a99f72afb4ff2971da" translate="yes" xml:space="preserve">
          <source>Number of rows inserted or FALSE on failure</source>
          <target state="translated">失敗した場合に挿入された行数またはFALSE</target>
        </trans-unit>
        <trans-unit id="c9aebda9e874e257aa09f41219d0dcce9cd064dc" translate="yes" xml:space="preserve">
          <source>Number of rows updated or FALSE on failure</source>
          <target state="translated">失敗した場合に更新された行の数またはFALSE</target>
        </trans-unit>
        <trans-unit id="3e1a625a3dfa2dedd88610c54802fc96005ee4d6" translate="yes" xml:space="preserve">
          <source>Numeric character position of where $needle was found or FALSE if not found</source>
          <target state="translated">針が見つかった位置の数値文字位置、見つからなかった場合はFALSE</target>
        </trans-unit>
        <trans-unit id="cf1172a29ee042efe36e6ddb3d0b5e6413bdebe7" translate="yes" xml:space="preserve">
          <source>OFB</source>
          <target state="translated">OFB</target>
        </trans-unit>
        <trans-unit id="4aa36011df55a7c88330f8fb7315870b5d4c8c30" translate="yes" xml:space="preserve">
          <source>OFB8</source>
          <target state="translated">OFB8</target>
        </trans-unit>
        <trans-unit id="7c168b8b33540771679323464ef085e4e4650683" translate="yes" xml:space="preserve">
          <source>Octal permissions string</source>
          <target state="translated">オクタルパーミッション文字列</target>
        </trans-unit>
        <trans-unit id="01d9cef64d46533e983e723b9001ec522ebf2198" translate="yes" xml:space="preserve">
          <source>Of course, since a Callable rule by itself is not a string, it isn&amp;rsquo;t a rule name either. That is a problem when you want to set error messages for them. In order to get around that problem, you can put such rules as the second element of an array, with the first one being the rule name:</source>
          <target state="translated">もちろん、呼び出し可能ルール自体は文字列ではないため、ルール名でもありません。それらにエラーメッセージを設定したい場合、それは問題です。この問題を回避するために、配列の2番目の要素のような規則を配置できます。最初の要素は規則名です。</target>
        </trans-unit>
        <trans-unit id="bff990627c1b7b33c93094ee401e840270abbd22" translate="yes" xml:space="preserve">
          <source>Often, you will either need to supply a database connection ID or a database result ID. The connection ID can be accessed using:</source>
          <target state="translated">多くの場合、データベース接続IDまたはデータベース結果IDを指定する必要があります。接続IDは、以下を使用してアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="007d105fc280470525c0ad70f35eeedf7f7d5c19" translate="yes" xml:space="preserve">
          <source>Old usage of &amp;lsquo;dash&amp;rsquo; and &amp;lsquo;underscore&amp;rsquo; as the second parameter is DEPRECATED.</source>
          <target state="translated">2番目のパラメーターとしての「ダッシュ」と「アンダースコア」の古い使用法は廃止されました。</target>
        </trans-unit>
        <trans-unit id="460d39430b04fb8acda2c18b866bd6343ddb67e3" translate="yes" xml:space="preserve">
          <source>On UNIX-like operating systems, this is usually achieved by setting the 0700 mode permissions on that directory via the &lt;code&gt;chmod&lt;/code&gt; command, which allows only the directory&amp;rsquo;s owner to perform read and write operations on it. But be careful because the system user &lt;em&gt;running&lt;/em&gt; the script is usually not your own, but something like &amp;lsquo;www-data&amp;rsquo; instead, so only setting those permissions will probable break your application.</source>
          <target state="translated">UNIXライクなオペレーティングシステムでは、これは通常、 &lt;code&gt;chmod&lt;/code&gt; コマンドを使用してそのディレクトリに0700モードのアクセス許可を設定することで実現されます。ただし、スクリプトを&lt;em&gt;実行&lt;/em&gt;するシステムユーザーは通常自分のものではなく、代わりに「www-data」のようなものなので、これらの権限を設定するだけでアプリケーションが壊れる可能性があるので注意してください。</target>
        </trans-unit>
        <trans-unit id="db3d1e0e40a71a834fc23852793f020855c5530e" translate="yes" xml:space="preserve">
          <source>On a field with the human name Username and a rule of min_length[5], an error would display: &amp;ldquo;Username must have at least 5 characters.&amp;rdquo;</source>
          <target state="translated">ヒューマンネームがUsernameでルールがmin_length [5]のフィールドでは、「ユーザー名は5文字以上である必要があります」というエラーが表示されます。</target>
        </trans-unit>
        <trans-unit id="5f4bd98677a58480999668d92cc6196650928744" translate="yes" xml:space="preserve">
          <source>On some servers where &lt;em&gt;display_errors&lt;/em&gt; is disabled, and you do not have the ability to change this in the php.ini, you can often enable it with:</source>
          <target state="translated">&lt;em&gt;display_errors&lt;/em&gt;が無効になっていて、php.iniでこれを変更することができない一部のサーバーでは、次のようにして有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="baf392b11d403a1f5e1193b4a5df798554b0d5c2" translate="yes" xml:space="preserve">
          <source>On the receiving end, the script must:</source>
          <target state="translated">受信側では、スクリプトが必要です。</target>
        </trans-unit>
        <trans-unit id="58cf91c4cc5465bf0c742920b980f0432e7f5cc8" translate="yes" xml:space="preserve">
          <source>Once enabled, caching will happen automatically whenever a page is loaded that contains database queries.</source>
          <target state="translated">これを有効にすると、データベースクエリを含むページがロードされたときに自動的にキャッシングが行われます。</target>
        </trans-unit>
        <trans-unit id="9baab2a50657fd1b305420d49512249d4a2a7a7f" translate="yes" xml:space="preserve">
          <source>Once initialized you can use it as indicated in the user guide page corresponding to that class.</source>
          <target state="translated">初期化されると、そのクラスに対応するユーザーガイドページに記載されているように使用することができます。</target>
        </trans-unit>
        <trans-unit id="9d075f0ce3637e53575f6d5963c85cef4230e56b" translate="yes" xml:space="preserve">
          <source>Once initialized you will access the methods using the &lt;code&gt;$this-&amp;gt;dbforge&lt;/code&gt; object:</source>
          <target state="translated">初期化したら、 &lt;code&gt;$this-&amp;gt;dbforge&lt;/code&gt; オブジェクトを使用してメソッドにアクセスします。</target>
        </trans-unit>
        <trans-unit id="ffa414c6c58156f22f4d263fcf96813a145d6805" translate="yes" xml:space="preserve">
          <source>Once initialized you will access the methods using the &lt;code&gt;$this-&amp;gt;dbutil&lt;/code&gt; object:</source>
          <target state="translated">初期化したら、 &lt;code&gt;$this-&amp;gt;dbutil&lt;/code&gt; オブジェクトを使用してメソッドにアクセスします。</target>
        </trans-unit>
        <trans-unit id="6971d69f0692e1f45e8dc84c681e91a8d09aa2f1" translate="yes" xml:space="preserve">
          <source>Once loaded the class is ready to be used as described below.</source>
          <target state="translated">ロードされたクラスは、以下のように使用する準備ができています。</target>
        </trans-unit>
        <trans-unit id="decfa22c6fa994b60165d230b51f49bbc4d76744" translate="yes" xml:space="preserve">
          <source>Once loaded you can access your class using the lower case version:</source>
          <target state="translated">ロードされると、小文字のバージョンを使ってクラスにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="8b735318b262c548a53b41e2334d495e3b58948f" translate="yes" xml:space="preserve">
          <source>Once loaded you can generate a CAPTCHA like this:</source>
          <target state="translated">ロードされると、以下のようなCAPTCHAを生成することができます。</target>
        </trans-unit>
        <trans-unit id="10e94c4b45461893605feb51a58fd39acaa578a8" translate="yes" xml:space="preserve">
          <source>Once loaded you will use the class variable as you normally would for the class you are extending. In the case of the email class all calls will use:</source>
          <target state="translated">ロードされた後は、拡張しているクラスに対して通常のようにクラス変数を使用します。emailクラスの場合、すべての呼び出しで使用されます。</target>
        </trans-unit>
        <trans-unit id="b8680b00ba8fd13fd020b5a2e5386cac5e1f7a62" translate="yes" xml:space="preserve">
          <source>Once loaded, the Calendar object will be available using:</source>
          <target state="translated">ロードされると、Calendarオブジェクトが使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="357cb7b67ed0cb27a6e16a3eb2fdccf86cdbd74a" translate="yes" xml:space="preserve">
          <source>Once loaded, the Cart object will be available using:</source>
          <target state="translated">ロードされると、カートオブジェクトが使用可能になります。</target>
        </trans-unit>
        <trans-unit id="530bfd65ebcc2f8f72192f388a6a8e888d1fcb7f" translate="yes" xml:space="preserve">
          <source>Once loaded, the Encrypt library object will be available using:</source>
          <target state="translated">ロードされると、Encrypt ライブラリオブジェクトを使用して利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="e267f253c15cd680dcc61d8dcca7ec16e799325d" translate="yes" xml:space="preserve">
          <source>Once loaded, the Encryption library object will be available using:</source>
          <target state="translated">ロードされると、Encryption ライブラリオブジェクトを使用して利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="194b7b09ff1552a4896e3baffe73791f1dc775b8" translate="yes" xml:space="preserve">
          <source>Once loaded, the FTP object will be available using: $this-&amp;gt;ftp</source>
          <target state="translated">ロードされると、FTPオブジェクトは$ this-&amp;gt; ftpを使用して利用可能になります。</target>
        </trans-unit>
        <trans-unit id="3b860ae8417b2cbd7452cbd931095003c82274c5" translate="yes" xml:space="preserve">
          <source>Once loaded, the Parser library object will be available using: $this-&amp;gt;parser</source>
          <target state="translated">ロードされると、パーサーライブラリオブジェクトは次のようにして利用できるようになります：$ this-&amp;gt; parser</target>
        </trans-unit>
        <trans-unit id="850d81e50df5e37c55fb7288af9260bb9c6fae90" translate="yes" xml:space="preserve">
          <source>Once loaded, the Sessions library object will be available using:</source>
          <target state="translated">ロードされると、Sessions ライブラリオブジェクトを使用して利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="1299d790e6c8710a181ae59b2d036dc2168f00f1" translate="yes" xml:space="preserve">
          <source>Once loaded, the Table library object will be available using:</source>
          <target state="translated">ロードされると、テーブルライブラリオブジェクトを使用して利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="17984a95837dcdbd2c907c1e5d96945620f723b2" translate="yes" xml:space="preserve">
          <source>Once loaded, the Trackback library object will be available using:</source>
          <target state="translated">ロードされると、Trackback ライブラリオブジェクトを使用して利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="638c4a52608619ce6cc977301e97eba93170fb2a" translate="yes" xml:space="preserve">
          <source>Once loaded, the Typography library object will be available using:</source>
          <target state="translated">ロードされると、タイポグラフィ・ライブラリ・オブジェクトが使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="f125d2301064efdf448202829f5479b250ea8c74" translate="yes" xml:space="preserve">
          <source>Once loaded, the Unit Test object will be available using &lt;code&gt;$this-&amp;gt;unit&lt;/code&gt;</source>
          <target state="translated">ロードされると、ユニットテストオブジェクトは &lt;code&gt;$this-&amp;gt;unit&lt;/code&gt; を使用して利用可能になります</target>
        </trans-unit>
        <trans-unit id="23ea9e6557e2905f2c0f0f6b3c62dd7519d09e7b" translate="yes" xml:space="preserve">
          <source>Once loaded, the Zip library object will be available using:</source>
          <target state="translated">ロードされると、Zip ライブラリオブジェクトを使用して利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="07b574ec363d473e747c9cbaed210887e856baab" translate="yes" xml:space="preserve">
          <source>Once loaded, the jQuery library object will be available using:</source>
          <target state="translated">ロードされると、jQueryライブラリオブジェクトを使用して利用できるようになります。</target>
        </trans-unit>
        <trans-unit id="e710da966947476eb17c0cf6b9d7f629fd74b1bb" translate="yes" xml:space="preserve">
          <source>Once loaded, the library will be ready for use, using &lt;code&gt;$this-&amp;gt;email&lt;/code&gt;.</source>
          <target state="translated">ロードされると、ライブラリは &lt;code&gt;$this-&amp;gt;email&lt;/code&gt; を使用して使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="3c4fed29da5acc34834300ab940a7e4509270f73" translate="yes" xml:space="preserve">
          <source>Once loaded, the library will be ready for use, using &lt;code&gt;$this-&amp;gt;session&lt;/code&gt;.</source>
          <target state="translated">ロードされると、ライブラリは &lt;code&gt;$this-&amp;gt;session&lt;/code&gt; を使用して使用できるようになります。</target>
        </trans-unit>
        <trans-unit id="77ed83f9739daabdea00bfc1d18de6b2bb6efce1" translate="yes" xml:space="preserve">
          <source>Once loaded, the object will be available using: &lt;code&gt;$this-&amp;gt;agent&lt;/code&gt;</source>
          <target state="translated">ロードされると、オブジェクトは &lt;code&gt;$this-&amp;gt;agent&lt;/code&gt; を使用して使用可能になります</target>
        </trans-unit>
        <trans-unit id="f550ed3ffcda2d7011f53f18cc1dfa327f1e9b6c" translate="yes" xml:space="preserve">
          <source>Once loaded, the xml-rpc library object will be available using: $this-&amp;gt;xmlrpc</source>
          <target state="translated">ロードされると、xml-rpcライブラリー・オブジェクトは次のようにして使用可能になります：$ this-&amp;gt; xmlrpc</target>
        </trans-unit>
        <trans-unit id="234f4745d1d2d1ecef205be274015b8983af8866" translate="yes" xml:space="preserve">
          <source>Once loaded, the xml-rpcs library object will be available using: $this-&amp;gt;xmlrpcs</source>
          <target state="translated">ロードされると、xml-rpcsライブラリオブジェクトは、次のコマンドを使用して利用できるようになります：$ this-&amp;gt; xmlrpcs</target>
        </trans-unit>
        <trans-unit id="3ac89db0045f8ae5cf7e479dbe6db06e335ba3c1" translate="yes" xml:space="preserve">
          <source>Once loaded, you will access your model methods using an object with the same name as your class:</source>
          <target state="translated">ロードされると、クラスと同じ名前のオブジェクトを使ってモデルメソッドにアクセスします。</target>
        </trans-unit>
        <trans-unit id="c3979e16f63dcaa9db05415a81ccc5a03b314f8f" translate="yes" xml:space="preserve">
          <source>Once the Upload class is loaded, the object will be available using: $this-&amp;gt;upload</source>
          <target state="translated">Uploadクラスが読み込まれると、オブジェクトは$ this-&amp;gt; uploadを使用して利用可能になります。</target>
        </trans-unit>
        <trans-unit id="78537ce561060888ede3800e45c873a8b1749823" translate="yes" xml:space="preserve">
          <source>Once the library is loaded it will be ready for use. The image library object you will use to call all functions is: &lt;code&gt;$this-&amp;gt;image_lib&lt;/code&gt;</source>
          <target state="translated">ライブラリがロードされると、使用できるようになります。すべての関数を呼び出すために使用する画像ライブラリオブジェクトは次のとおりです： &lt;code&gt;$this-&amp;gt;image_lib&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f414af22547ac0592004ca3492b0d8b4b114cac3" translate="yes" xml:space="preserve">
          <source>Once uploaded, the user will be shown a success message.</source>
          <target state="translated">アップロードされると、成功のメッセージが表示されます。</target>
        </trans-unit>
        <trans-unit id="1e3103cbb69011b4afb68e307ec0b3a4a8fcbe65" translate="yes" xml:space="preserve">
          <source>Once you understand the basics you&amp;rsquo;ll be ready to explore the &lt;strong&gt;Class Reference&lt;/strong&gt; and &lt;strong&gt;Helper Reference&lt;/strong&gt; pages to learn to utilize the native libraries and helper files.</source>
          <target state="translated">基本を理解したら、&lt;strong&gt;クラス&lt;/strong&gt;&lt;strong&gt;リファレンス&lt;/strong&gt;ページと&lt;strong&gt;ヘルパーリファレンス&lt;/strong&gt;ページを探索して、ネイティブライブラリとヘルパーファイルの利用方法を学ぶことができます。</target>
        </trans-unit>
        <trans-unit id="d5c1269ffac856b622e01a19dde3340f6a6f0340" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve assigned the object to a variable, you&amp;rsquo;ll use that variable &lt;em&gt;instead&lt;/em&gt; of &lt;code&gt;$this&lt;/code&gt;:</source>
          <target state="translated">オブジェクトを変数に割り当てたら、 &lt;code&gt;$this&lt;/code&gt; &lt;em&gt;代わり&lt;/em&gt;にその変数&lt;em&gt;を&lt;/em&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="c5723164be38e5177a6bb2853259a313f103f46a" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve loaded the Helper File containing the function you intend to use, you&amp;rsquo;ll call it the way you would a standard PHP function.</source>
          <target state="translated">使用する関数を含むヘルパーファイルをロードしたら、標準のPHP関数と同じように呼び出します。</target>
        </trans-unit>
        <trans-unit id="96318c67f7618a5442ef8defaa0e6811610cf90b" translate="yes" xml:space="preserve">
          <source>Once your desired language file is loaded you can access any line of text using this function:</source>
          <target state="translated">目的の言語ファイルが読み込まれると、この機能を使って任意の行のテキストにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="8f071700044c85e1a318c79415b0ff8c32d6ecdf" translate="yes" xml:space="preserve">
          <source>One File per Class</source>
          <target state="translated">クラスごとに1つのファイル</target>
        </trans-unit>
        <trans-unit id="310991bf7025ec117206facddc5426013f2205e6" translate="yes" xml:space="preserve">
          <source>One Statement Per Line</source>
          <target state="translated">1行に1つのステートメント</target>
        </trans-unit>
        <trans-unit id="a8aab57577e969d25bcdfbafc3d939c325dfca96" translate="yes" xml:space="preserve">
          <source>One additional measure to take in production environments is to disable PHP error reporting and any other development-only functionality. In CodeIgniter, this can be done by setting the &lt;code&gt;ENVIRONMENT&lt;/code&gt; constant, which is more fully described on the &lt;a href=&quot;../general/security&quot;&gt;security page&lt;/a&gt;.</source>
          <target state="translated">本番環境で行う追加の対策の1つは、PHPエラー報告とその他の開発専用機能を無効にすることです。CodeIgniterでは、これは &lt;code&gt;ENVIRONMENT&lt;/code&gt; 定数を設定することで実行でき&lt;a href=&quot;../general/security&quot;&gt;ます&lt;/a&gt;。これについては、セキュリティページで詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="1f43eca03959cd5f77ab5648748cd66d435d492b" translate="yes" xml:space="preserve">
          <source>Only MySQL and PostgreSQL databases are officially supported, due to lack of advisory locking mechanisms on other platforms. Using sessions without locks can cause all sorts of problems, especially with heavy usage of AJAX, and we will not support such cases. Use &lt;code&gt;session_write_close()&lt;/code&gt; after you&amp;rsquo;ve done processing session data if you&amp;rsquo;re having performance issues.</source>
          <target state="translated">他のプラットフォームには助言ロック機構がないため、公式にサポートされているのはMySQLおよびPostgreSQLデータベースのみです。ロックなしでセッションを使用すると、特にAJAXを頻繁に使用する場合に、あらゆる種類の問題が発生する可能性があるため、そのようなケースはサポートしません。パフォーマンスの問題がある場合は、セッションデータの処理が完了した後に &lt;code&gt;session_write_close()&lt;/code&gt; を使用してください。</target>
        </trans-unit>
        <trans-unit id="1dc92d511952453909c40983131e1bbbeba87e7c" translate="yes" xml:space="preserve">
          <source>Only read-type (SELECT) queries can be cached, since these are the only type of queries that produce a result. Write-type (INSERT, UPDATE, etc.) queries, since they don&amp;rsquo;t generate a result, will not be cached by the system.</source>
          <target state="translated">結果を生成する唯一のタイプのクエリであるため、キャッシュできるのは読み取りタイプ（SELECT）のクエリのみです。書き込みタイプ（INSERT、UPDATEなど）のクエリは、結果を生成しないため、システムによってキャッシュされません。</target>
        </trans-unit>
        <trans-unit id="1a517678bdacdc90fcbb811e7a416e5854a97988" translate="yes" xml:space="preserve">
          <source>Only the &lt;strong&gt;img_path&lt;/strong&gt; and &lt;strong&gt;img_url&lt;/strong&gt; are required.</source>
          <target state="translated">&lt;strong&gt;img_path&lt;/strong&gt;と&lt;strong&gt;img_url&lt;/strong&gt;のみが必須です。</target>
        </trans-unit>
        <trans-unit id="b15a634a8306c43c28d5629f6a610e8a16bdfa48" translate="yes" xml:space="preserve">
          <source>Only the name and value are required. To delete a cookie set it with the expiration blank.</source>
          <target state="translated">名前と値だけが必要です。クッキーを削除するには、有効期限を空白にして設定してください。</target>
        </trans-unit>
        <trans-unit id="73fcaca139014b5236237bec3c934a2503fea229" translate="yes" xml:space="preserve">
          <source>Only use strong password hashing algorithms like BCrypt, which is used in PHP&amp;rsquo;s own &lt;a href=&quot;http://php.net/password&quot;&gt;Password Hashing&lt;/a&gt; functions.</source>
          <target state="translated">PHP独自の&lt;a href=&quot;http://php.net/password&quot;&gt;パスワードハッシュ&lt;/a&gt;関数で使用されるBCryptのような強力なパスワードハッシュアルゴリズムのみを使用してください。</target>
        </trans-unit>
        <trans-unit id="228200e659e045db648ce6618453dbe97a7feb65" translate="yes" xml:space="preserve">
          <source>Only used in the &amp;lsquo;mysql&amp;rsquo; and &amp;lsquo;mysqli&amp;rsquo; drivers.</source>
          <target state="translated">「mysql」および「mysqli」ドライバでのみ使用されます。</target>
        </trans-unit>
        <trans-unit id="8a06f7e8c4f4b70a2d2d4383f4dca4f3f4dd1126" translate="yes" xml:space="preserve">
          <source>Only your &lt;strong&gt;default&lt;/strong&gt; database connection (or the one that you access as &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; from your controllers) can be used.</source>
          <target state="translated">あなただけの&lt;strong&gt;デフォルトの&lt;/strong&gt;データベース接続（またはあなたがアクセスしていることを1 &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; あなたのコントローラから）を使用することができます。</target>
        </trans-unit>
        <trans-unit id="ff0c58e0e7d258e8d88d01613c17ccbb74d57f2a" translate="yes" xml:space="preserve">
          <source>Open the &lt;em&gt;application/config/config.php&lt;/em&gt; file with a text editor and set your base URL. If you intend to use encryption or sessions, set your encryption key.</source>
          <target state="translated">テキストエディターで&lt;em&gt;application / config / config.php&lt;/em&gt;ファイルを開き、ベースURLを設定します。暗号化またはセッションを使用する場合は、暗号化キーを設定します。</target>
        </trans-unit>
        <trans-unit id="9a791bf4f2064c59f371540bf97479edd0c2319b" translate="yes" xml:space="preserve">
          <source>Open the Application Preferences</source>
          <target state="translated">アプリケーション環境設定を開く</target>
        </trans-unit>
        <trans-unit id="953b4b91c59cfe59b518edc26d33e0e450ebbcbf" translate="yes" xml:space="preserve">
          <source>Open up the &lt;em&gt;application/models/&lt;/em&gt; directory and create a new file called &lt;em&gt;News_model.php&lt;/em&gt; and add the following code. Make sure you&amp;rsquo;ve configured your database properly as described &lt;a href=&quot;../database/configuration&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;application / models /&lt;/em&gt;ディレクトリを開いて、&lt;em&gt;News_model.php&lt;/em&gt;という新しいファイルを作成し、次のコードを追加します。&lt;a href=&quot;../database/configuration&quot;&gt;ここで&lt;/a&gt;説明するように、データベースが適切に構成されていることを確認してください。</target>
        </trans-unit>
        <trans-unit id="968192c1936f8dbc918086e52149dafa4ff2b462" translate="yes" xml:space="preserve">
          <source>Open your myform.php view file and update the &lt;strong&gt;value&lt;/strong&gt; in each field using the &lt;a href=&quot;../helpers/form_helper#set_value&quot;&gt;&lt;code&gt;set_value()&lt;/code&gt;&lt;/a&gt; function:</source>
          <target state="translated">myform.phpビューファイルを開き、&lt;a href=&quot;../helpers/form_helper#set_value&quot;&gt; &lt;code&gt;set_value()&lt;/code&gt; &lt;/a&gt;関数を使用して各フィールドの&lt;strong&gt;値&lt;/strong&gt;を更新し&lt;strong&gt;ます&lt;/strong&gt;。</target>
        </trans-unit>
        <trans-unit id="ed7003a34fd1abbae7d2b35e80a0769db2b14709" translate="yes" xml:space="preserve">
          <source>OpenSSL</source>
          <target state="translated">OpenSSL</target>
        </trans-unit>
        <trans-unit id="3cdba9dc20b93083e61e6f7781c32fed9fc40f24" translate="yes" xml:space="preserve">
          <source>Opens a socket connection and passes the data to the server, returning TRUE on success and FALSE on failure.</source>
          <target state="translated">ソケット接続をオープンしてサーバにデータを渡し、 成功した場合は TRUE、失敗した場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="2c06d439cd796ea0c03ded92c0ecb6be7f00e34b" translate="yes" xml:space="preserve">
          <source>Optimize a Database</source>
          <target state="translated">データベースの最適化</target>
        </trans-unit>
        <trans-unit id="3368ddda666e29ca352cd649f10caae90795dae7" translate="yes" xml:space="preserve">
          <source>Optimize a Table</source>
          <target state="translated">テーブルの最適化</target>
        </trans-unit>
        <trans-unit id="6c331f7e0b8bcebf3201b46dc1fbcf792e3a65f6" translate="yes" xml:space="preserve">
          <source>Optimizes a database table.</source>
          <target state="translated">データベーステーブルを最適化します。</target>
        </trans-unit>
        <trans-unit id="5a89019612cde6c586c39df392e5591ffb4031a9" translate="yes" xml:space="preserve">
          <source>Optimizes the database.</source>
          <target state="translated">データベースを最適化します。</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="a7134f91338f46eee62e124e09f3b99a2e8838ef" translate="yes" xml:space="preserve">
          <source>Option name</source>
          <target state="translated">オプション名</target>
        </trans-unit>
        <trans-unit id="f4f8f248f775c23ea22018354f1d8fa44f8c1f3c" translate="yes" xml:space="preserve">
          <source>Optionally, you can have CodeIgniter load environment-specific configuration files. This may be useful for managing things like differing API keys across multiple environments. This is described in more detail in the environment section of the &lt;a href=&quot;../libraries/config&quot;&gt;Config Class&lt;/a&gt; documentation.</source>
          <target state="translated">オプションで、CodeIgniterに環境固有の構成ファイルをロードさせることができます。これは、複数の環境間で異なるAPIキーなどを管理するのに役立ちます。これについては、&lt;a href=&quot;../libraries/config&quot;&gt;構成クラスの&lt;/a&gt;ドキュメントの環境セクションで詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="1b001e2247b569cdbc9b71a10b619279efc21aa3" translate="yes" xml:space="preserve">
          <source>Or a query with aliasing:</source>
          <target state="translated">あるいはエイリアスを使ったクエリ。</target>
        </trans-unit>
        <trans-unit id="dea5a339dfb9f80d5e3f7a7a251a836180d68c13" translate="yes" xml:space="preserve">
          <source>Or alternatively, using the &lt;code&gt;set_flashdata()&lt;/code&gt; method:</source>
          <target state="translated">または、代わりに &lt;code&gt;set_flashdata()&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="88f8fe37a6589e537d463a2b931366e908284f31" translate="yes" xml:space="preserve">
          <source>Or alternatively, using the &lt;code&gt;set_tempdata()&lt;/code&gt; method:</source>
          <target state="translated">または、代わりに &lt;code&gt;set_tempdata()&lt;/code&gt; メソッドを使用します。</target>
        </trans-unit>
        <trans-unit id="cf8c7e7becc58c30e9c2270a0bd89f5fe657a9fd" translate="yes" xml:space="preserve">
          <source>Or an object:</source>
          <target state="translated">あるいはオブジェクト。</target>
        </trans-unit>
        <trans-unit id="7dbfb6a9d9c84595a26bc3e124f05813807f94d9" translate="yes" xml:space="preserve">
          <source>Or as an array:</source>
          <target state="translated">あるいは配列として。</target>
        </trans-unit>
        <trans-unit id="f7a3d854bfa0266e9c4a954b8a4122785d12b7cc" translate="yes" xml:space="preserve">
          <source>Or even:</source>
          <target state="translated">あるいは、それさえも。</target>
        </trans-unit>
        <trans-unit id="9c94cf02a8bc9a2c6d5247c76858eb2f1f7713c2" translate="yes" xml:space="preserve">
          <source>Or if you use a multidimensional array:</source>
          <target state="translated">多次元配列を使う場合も</target>
        </trans-unit>
        <trans-unit id="fdbde929bdbceb9f0c255421da4ece9746908669" translate="yes" xml:space="preserve">
          <source>Or if you want to be sure that you&amp;rsquo;re reading &amp;ldquo;tempdata&amp;rdquo; (and not any other kind), you can also use the &lt;code&gt;tempdata()&lt;/code&gt; method:</source>
          <target state="translated">または、「tempdata」（他の種類ではない）を &lt;code&gt;tempdata()&lt;/code&gt; 場合は、tempdata（）メソッドを使用することもできます。</target>
        </trans-unit>
        <trans-unit id="bb9ad5b76ac9434aa32c01b9e13ff4cd03d0b93c" translate="yes" xml:space="preserve">
          <source>Or multiple function calls can be made if you need multiple fields.</source>
          <target state="translated">あるいは、複数のフィールドが必要な場合は、複数の関数を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="6e29cde55fb416f03361f108cc7efd19bee29177" translate="yes" xml:space="preserve">
          <source>Or through the magic getter:</source>
          <target state="translated">またはマジックゲッターを介して。</target>
        </trans-unit>
        <trans-unit id="3e66c5671acd71ef0c4dc5e34c55773b2fcb02f8" translate="yes" xml:space="preserve">
          <source>Or to get an array with all flashdata, simply omit the key parameter:</source>
          <target state="translated">あるいは、すべてのフラッシュデータを含む配列を取得するには、単にキーパラメータを省略します。</target>
        </trans-unit>
        <trans-unit id="ccca29ddc98107f6e8a1f772ad6763d1f2583e7e" translate="yes" xml:space="preserve">
          <source>Or to re-populate the field you would use:</source>
          <target state="translated">または、使用するフィールドを再入力します。</target>
        </trans-unit>
        <trans-unit id="0de9c242cd29a17424cfd441d12b9136941265e1" translate="yes" xml:space="preserve">
          <source>Or to remove a specific package path, specify the same path previously given to &lt;code&gt;add_package_path()&lt;/code&gt; for a package.:</source>
          <target state="translated">または、特定のパッケージパスを削除するには、以前にパッケージの &lt;code&gt;add_package_path()&lt;/code&gt; に指定したものと同じパスを指定します。</target>
        </trans-unit>
        <trans-unit id="c59e9f29270819c3907188e8a7274017ba6e2eae" translate="yes" xml:space="preserve">
          <source>Or you can call &lt;code&gt;has_userdata()&lt;/code&gt;:</source>
          <target state="translated">または、 &lt;code&gt;has_userdata()&lt;/code&gt; を呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="51e53b4367a88fe369849e4c3aac997c0700dd4e" translate="yes" xml:space="preserve">
          <source>Or you can pass an associative array containing any data you wish your form to contain:</source>
          <target state="translated">あるいは、フォームに含ませたいデータを含む連想配列を渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="7730826c2f803fb4641d4f53bf5f9321b3b80c1c" translate="yes" xml:space="preserve">
          <source>Or you can pass it as an array:</source>
          <target state="translated">あるいは配列として渡すこともできます。</target>
        </trans-unit>
        <trans-unit id="f16815f179b232b58dbe13c9723ff5c587cada2b" translate="yes" xml:space="preserve">
          <source>Or you can submit your database values as a Data Source Name. DSNs must have this prototype:</source>
          <target state="translated">または、データベースの値をデータソース名として提出することもできます。DSNはこのプロトタイプを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="6dabed9de3adfd485adbe3f151de18ace86c3958" translate="yes" xml:space="preserve">
          <source>Or you can supply an object:</source>
          <target state="translated">または、オブジェクトを提供することができます。</target>
        </trans-unit>
        <trans-unit id="a709930fbb24b807b1be09a0e2fd71d4d559be73" translate="yes" xml:space="preserve">
          <source>Or, to show an error for the above field you would use:</source>
          <target state="translated">または、上記のフィールドのエラーを表示するために使用します。</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="1e9149ec05387dc5f6909cfec28c409b31c06207" translate="yes" xml:space="preserve">
          <source>Ordering results</source>
          <target state="translated">注文結果</target>
        </trans-unit>
        <trans-unit id="a9d7d9117433918a84b3f15188d34a31da5447ba" translate="yes" xml:space="preserve">
          <source>Organizing Your Controllers into Sub-directories</source>
          <target state="translated">コントローラをサブディレクトリに整理する</target>
        </trans-unit>
        <trans-unit id="92c077a93c29691a5b453192611eca5e37a2dbef" translate="yes" xml:space="preserve">
          <source>Original file name. This is only useful if you use the encrypted name option.</source>
          <target state="translated">元のファイル名。これは、暗号化された名前オプションを使用している場合にのみ有用です。</target>
        </trans-unit>
        <trans-unit id="a24fdec1cd7621937d5781ae20b0ca49a3445d37" translate="yes" xml:space="preserve">
          <source>Other than that however, there&amp;rsquo;s no point in forcing a rule that a password can only be up to a number of characters, or that it can&amp;rsquo;t contain a certain set of special characters.</source>
          <target state="translated">ただし、それ以外の場合、パスワードの文字数は最大にすることも、特定の特殊文字のセットを含めることもできないというルールを強制しても意味がありません。</target>
        </trans-unit>
        <trans-unit id="fd75276cbad6cbae22c1acbde3e7df4d6357c16a" translate="yes" xml:space="preserve">
          <source>Other than that, and without any intentional bias towards Redis, there&amp;rsquo;s not much different to be said about Memcached - it is also a popular product that is usually used for caching and famed for its speed.</source>
          <target state="translated">それ以外に、Redisへの意図的な偏見がなければ、Memcachedについて言うことはそれほど変わりません。これは、通常キャッシュに使用され、その速度で有名な人気のある製品でもあります。</target>
        </trans-unit>
        <trans-unit id="28b5b766057c3db00cd1d2cb87655d96dbdc72bd" translate="yes" xml:space="preserve">
          <source>Our goal for CodeIgniter is maximum performance, capability, and flexibility in the smallest, lightest possible package.</source>
          <target state="translated">CodeIgniterの目標は、可能な限り小さくて軽いパッケージで最大の性能、能力、柔軟性を発揮することです。</target>
        </trans-unit>
        <trans-unit id="b70a60c986f44d5709f969542379237b5cfd31f2" translate="yes" xml:space="preserve">
          <source>Our growing community of users can be seen actively participating in our &lt;a href=&quot;http://forum.codeigniter.com/&quot;&gt;Community Forums&lt;/a&gt;.</source>
          <target state="translated">成長を続けるユーザーコミュニティは、&lt;a href=&quot;http://forum.codeigniter.com/&quot;&gt;コミュニティフォーラムに&lt;/a&gt;積極的に参加しています。</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="0f7722a3a0626bbb6f37c81865a00dc0f799146c" translate="yes" xml:space="preserve">
          <source>Output Class</source>
          <target state="translated">出力クラス</target>
        </trans-unit>
        <trans-unit id="024b14e98fef842fd32a913fc22d751ed4b89cd5" translate="yes" xml:space="preserve">
          <source>Output string</source>
          <target state="translated">出力文字列</target>
        </trans-unit>
        <trans-unit id="23a0397bd4e457c4dcdf5223c0cb23b4d9344d92" translate="yes" xml:space="preserve">
          <source>Outputs the database platform you are running (MySQL, MS SQL, Postgres, etc&amp;hellip;):</source>
          <target state="translated">実行しているデータベースプラットフォーム（MySQL、MS SQL、Postgresなど&amp;hellip;）を出力します。</target>
        </trans-unit>
        <trans-unit id="be8ba19cb4bdee3ec1963f104fb1e3dfca1a946c" translate="yes" xml:space="preserve">
          <source>Outputs the database version you are running:</source>
          <target state="translated">実行しているデータベースのバージョンを出力します。</target>
        </trans-unit>
        <trans-unit id="cf928f26238cb411427dd7667514ad201c8fce5d" translate="yes" xml:space="preserve">
          <source>Overlay Preferences</source>
          <target state="translated">オーバーレイの環境設定</target>
        </trans-unit>
        <trans-unit id="fae23e8dfbb45685935c368cdd79b58e1c06af51" translate="yes" xml:space="preserve">
          <source>Overriding Word Wrapping</source>
          <target state="translated">上書きワードラッピング</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="7c519e3ab101e44d8d92b0c91a639c8f386da547" translate="yes" xml:space="preserve">
          <source>PHP 5.3.7</source>
          <target state="translated">PHP 5.3.7</target>
        </trans-unit>
        <trans-unit id="6cbc65b046d3d5e645a03675a6dc8daec24cfb37" translate="yes" xml:space="preserve">
          <source>PHP 5.4 will always have the &lt;strong&gt;&amp;lt;?=&lt;/strong&gt; tag available.</source>
          <target state="translated">PHP 5.4では、常に&lt;strong&gt;&amp;lt;？=&lt;/strong&gt;タグを使用できます。</target>
        </trans-unit>
        <trans-unit id="64ab3174612b57f128f84445ceda9c5e36c543d7" translate="yes" xml:space="preserve">
          <source>PHP Closing Tag</source>
          <target state="translated">PHP クロージングタグ</target>
        </trans-unit>
        <trans-unit id="3ea3823208cf79282cde417afb60f0d7d7b19df6" translate="yes" xml:space="preserve">
          <source>PHP Errors</source>
          <target state="translated">PHP のエラー</target>
        </trans-unit>
        <trans-unit id="2beb87eda8565393930b7b11ba33cdf2bb816d55" translate="yes" xml:space="preserve">
          <source>PHP Style Guide</source>
          <target state="translated">PHP スタイルガイド</target>
        </trans-unit>
        <trans-unit id="4dd6c8e7581f11609fbbd41cfad1d8add372d2dd" translate="yes" xml:space="preserve">
          <source>POST/GET value if found, NULL if not</source>
          <target state="translated">見つかった場合はPOSTGET値、見つからなかった場合はNULL</target>
        </trans-unit>
        <trans-unit id="4982e31a063ae3c88071a43ad5e3f1e0026979a9" translate="yes" xml:space="preserve">
          <source>Package view files</source>
          <target state="translated">パッケージビューファイル</target>
        </trans-unit>
        <trans-unit id="2fb302b627e4a6d4e7a9732ddcbc02597a7e06eb" translate="yes" xml:space="preserve">
          <source>Page Contents</source>
          <target state="translated">ページの内容</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="9b00ff4ed52ac361a886a2e8d12139ed1cd3f180" translate="yes" xml:space="preserve">
          <source>Pagination Class</source>
          <target state="translated">改ページクラス</target>
        </trans-unit>
        <trans-unit id="f699f295e5ae4ac633cfa18437fed38d028b3fdb" translate="yes" xml:space="preserve">
          <source>Parameter</source>
          <target state="translated">Parameter</target>
        </trans-unit>
        <trans-unit id="381c775599d6e4185d4410725809e360928357cd" translate="yes" xml:space="preserve">
          <source>Parameters:</source>
          <target state="translated">Parameters:</target>
        </trans-unit>
        <trans-unit id="152c56469e71903fdbfcf5737e6bdd5671b4c62e" translate="yes" xml:space="preserve">
          <source>Parsed smileys</source>
          <target state="translated">構文解析されたスマイリー</target>
        </trans-unit>
        <trans-unit id="617d144741ad6974f90e113c35911753e4dfb193" translate="yes" xml:space="preserve">
          <source>Parsed template string</source>
          <target state="translated">解析されたテンプレート文字列</target>
        </trans-unit>
        <trans-unit id="9c6f7f821d51a661416aed0aa96b9c40fd996752" translate="yes" xml:space="preserve">
          <source>Parses a custom user-agent string, different from the one reported by the current visitor.</source>
          <target state="translated">現在の訪問者が報告したものとは異なるカスタムのユーザーエージェント文字列を解析します。</target>
        </trans-unit>
        <trans-unit id="249225cadd3fa8de8e52c43aff1563d28d515ffb" translate="yes" xml:space="preserve">
          <source>Parses a template from the provided path and variables.</source>
          <target state="translated">指定されたパスと変数からテンプレートをパースします。</target>
        </trans-unit>
        <trans-unit id="e5b232f4e9a08aa7887f15ed16c3fc1e6d1e5e9a" translate="yes" xml:space="preserve">
          <source>Parsing templates</source>
          <target state="translated">テンプレートの解析</target>
        </trans-unit>
        <trans-unit id="d54d54ddbec98563fa4767e5bd9da5cb9902c9cb" translate="yes" xml:space="preserve">
          <source>Parsing variable pairs is done using the identical code shown above to parse single variables, except, you will add a multi-dimensional array corresponding to your variable pair data. Consider this example:</source>
          <target state="translated">変数ペアの解析は、変数ペアのデータに対応する多次元配列を追加することを除いて、単一の変数を解析するために上で示したのと同じコードを使用して行われます。この例を考えてみましょう。</target>
        </trans-unit>
        <trans-unit id="b6554f4687b197d5f428f14b39ba8c2d7be89410" translate="yes" xml:space="preserve">
          <source>Pass the URL string to the function like this:</source>
          <target state="translated">このような関数にURLの文字列を渡します。</target>
        </trans-unit>
        <trans-unit id="1c054e744b2bea0f5a76823e81d5b90536d3aa8a" translate="yes" xml:space="preserve">
          <source>Passing Data to your Calendar Cells</source>
          <target state="translated">カレンダーのセルにデータを渡す</target>
        </trans-unit>
        <trans-unit id="ca12500533e6d9d3076e979b1a431cc572ccae60" translate="yes" xml:space="preserve">
          <source>Passing Parameters When Initializing Your Class</source>
          <target state="translated">クラスを初期化する際のパラメータの渡し方</target>
        </trans-unit>
        <trans-unit id="343764069c42687b2455fafe34d189fa9fd732eb" translate="yes" xml:space="preserve">
          <source>Passing URI Segments to your methods</source>
          <target state="translated">URI セグメントをメソッドに渡す</target>
        </trans-unit>
        <trans-unit id="093dd6beb556e59ba36283e47f3dcf87404ba7dc" translate="yes" xml:space="preserve">
          <source>Passing raw strings as fields cannot be followed by &lt;code&gt;add_key()&lt;/code&gt; calls on those fields.</source>
          <target state="translated">生の文字列をフィールドとして渡すと、それらのフィールドで &lt;code&gt;add_key()&lt;/code&gt; を呼び出すことはできません。</target>
        </trans-unit>
        <trans-unit id="b40f126fd5ad07957b9a1980a16ccdf884af50df" translate="yes" xml:space="preserve">
          <source>Passing strings as fields</source>
          <target state="translated">文字列をフィールドとして渡す</target>
        </trans-unit>
        <trans-unit id="ea6a4755ac9b0de77a1366e6f0a727bb0efef096" translate="yes" xml:space="preserve">
          <source>Password Hashing</source>
          <target state="translated">パスワードハッシュ化</target>
        </trans-unit>
        <trans-unit id="e16b68888280044b43c2e2b8571101f1e380b82a" translate="yes" xml:space="preserve">
          <source>Password handling</source>
          <target state="translated">パスワードの取り扱い</target>
        </trans-unit>
        <trans-unit id="24612a159a39e572dbb62ae7f78c18290ec44b04" translate="yes" xml:space="preserve">
          <source>Password-derived key or FALSE on failure</source>
          <target state="translated">失敗した場合はパスワード由来のキーまたはFALSE</target>
        </trans-unit>
        <trans-unit id="519e39132bb98418cc0483cc446ccf5f3c8dcffe" translate="yes" xml:space="preserve">
          <source>Path</source>
          <target state="translated">Path</target>
        </trans-unit>
        <trans-unit id="d5003f234229204a70d7f7bc8f8feaca44b5b675" translate="yes" xml:space="preserve">
          <source>Path Helper</source>
          <target state="translated">パスヘルパー</target>
        </trans-unit>
        <trans-unit id="19f4c44de40e0b16d52f15759f349475dbf23f36" translate="yes" xml:space="preserve">
          <source>Paths are almost always relative to your main index.php file.</source>
          <target state="translated">パスはほとんどの場合、メインの index.php ファイルからの相対パスとなります。</target>
        </trans-unit>
        <trans-unit id="7662fefb74637828735a6b05b3522fbc2f79406c" translate="yes" xml:space="preserve">
          <source>Percent sign: %</source>
          <target state="translated">パーセント記号:%.</target>
        </trans-unit>
        <trans-unit id="54d3f008fce64a564ab8793080db1994862b548b" translate="yes" xml:space="preserve">
          <source>Perform a database backup, per user preferences.</source>
          <target state="translated">ユーザーの好みに応じて、データベースのバックアップを実行します。</target>
        </trans-unit>
        <trans-unit id="2f66287e0f4f533d567aa89afc256b4ada3ef00b" translate="yes" xml:space="preserve">
          <source>Performing basic database queries using &amp;ldquo;Query Builder&amp;rdquo;</source>
          <target state="translated">「クエリビルダー」を使用した基本的なデータベースクエリの実行</target>
        </trans-unit>
        <trans-unit id="b971a86d736a18966ad58a224d8b4d35dcc61a6c" translate="yes" xml:space="preserve">
          <source>Performs atomic decrementation of a raw stored value.</source>
          <target state="translated">生の保存値のアトミック・デクリメントを実行します。</target>
        </trans-unit>
        <trans-unit id="679752e858c5ee94849f75bad693f8fa8b8f532f" translate="yes" xml:space="preserve">
          <source>Performs atomic incrementation of a raw stored value.</source>
          <target state="translated">生の保存された値をアトミックインクリメントします。</target>
        </trans-unit>
        <trans-unit id="7102b5e9a9acdfee5cbe0eea55cf417bf7ba7621" translate="yes" xml:space="preserve">
          <source>Performs the data encryption and returns it as a string. Example:</source>
          <target state="translated">データの暗号化を実行し、文字列として返します。例。</target>
        </trans-unit>
        <trans-unit id="a79966e7a07c475eff3530de2cf05a36f6e5aa0c" translate="yes" xml:space="preserve">
          <source>Performs the upload based on the preferences you&amp;rsquo;ve set.</source>
          <target state="translated">設定した設定に基づいてアップロードを実行します。</target>
        </trans-unit>
        <trans-unit id="fa200bd95c17ad7a2090a52bfa1ac4a9e57ac300" translate="yes" xml:space="preserve">
          <source>Period: .</source>
          <target state="translated">期間:...</target>
        </trans-unit>
        <trans-unit id="7dac296287235c386ce8c988c04715fa88166474" translate="yes" xml:space="preserve">
          <source>Permissions can be set by passing an octal value in the second parameter.</source>
          <target state="translated">2 番目のパラメータに 8 進数の値を渡すことでパーミッションを設定できます。</target>
        </trans-unit>
        <trans-unit id="a53fafb76f8e5e11584c5dc6bf8773ec64d92a36" translate="yes" xml:space="preserve">
          <source>Permits you to add a caption to the table.</source>
          <target state="translated">表にキャプションを追加することができます。</target>
        </trans-unit>
        <trans-unit id="b1c1a4263f5d52b92d77693aadfa4e464c304741" translate="yes" xml:space="preserve">
          <source>Permits you to add a directory. Usually this method is unnecessary since you can place your data into directories when using &lt;code&gt;$this-&amp;gt;zip-&amp;gt;add_data()&lt;/code&gt;, but if you would like to create an empty directory you can do so:</source>
          <target state="translated">ディレクトリを追加することができます。 &lt;code&gt;$this-&amp;gt;zip-&amp;gt;add_data()&lt;/code&gt; を使用するときにデータをディレクトリに配置できるため、通常はこのメソッドは不要ですが、空のディレクトリを作成する場合は、次のようにできます。</target>
        </trans-unit>
        <trans-unit id="84ddd109e558ef80d0fafbc81718888a4091f67e" translate="yes" xml:space="preserve">
          <source>Permits you to add a row to your table. You can submit an array or discrete params:</source>
          <target state="translated">テーブルに行を追加することができます。配列または個別のパラメータを指定して送信することができます。</target>
        </trans-unit>
        <trans-unit id="58cb97bbb91587bd78360efa1ff5e7d459b9876a" translate="yes" xml:space="preserve">
          <source>Permits you to backup your full database or individual tables. The backup data can be compressed in either Zip or Gzip format.</source>
          <target state="translated">データベース全体または個々のテーブルをバックアップすることができます。バックアップデータはZipまたはGzip形式で圧縮することができます。</target>
        </trans-unit>
        <trans-unit id="597f7705cbe2ca6e5f3ae49ddfcf13a75fe43060" translate="yes" xml:space="preserve">
          <source>Permits you to compress a directory (and its contents) that already exists somewhere on your server. Supply a path to the directory and the zip class will recursively read and recreate it as a Zip archive. All files contained within the supplied path will be encoded, as will any sub-directories contained within it. Example:</source>
          <target state="translated">サーバ上のどこかに既に存在するディレクトリ (とその内容)を圧縮することができます。ディレクトリへのパスを指定すると、zip クラスが再帰的にそれを読み込んで Zip アーカイブとして再作成します。指定したパス内に含まれるすべてのファイルは、その中に含まれるサブディレクトリと同様にエンコードされます。例。</target>
        </trans-unit>
        <trans-unit id="cd9723c8880080675480dbb2eebb31446533a830" translate="yes" xml:space="preserve">
          <source>Permits you to compress a file that already exists somewhere on your server. Supply a file path and the zip class will read it and add it to the archive:</source>
          <target state="translated">サーバ上のどこかに既に存在するファイルを圧縮することができます。ファイルのパスを指定すると、zip クラスがそれを読み込んでアーカイブに追加します。</target>
        </trans-unit>
        <trans-unit id="df92664370eba72596afb00222af42251ee01c6e" translate="yes" xml:space="preserve">
          <source>Permits you to create one way hashes suitable for encrypting passwords. Will use SHA1 by default.</source>
          <target state="translated">パスワードの暗号化に適した一方通行のハッシュを作成することができます。デフォルトでは SHA1 を使用します。</target>
        </trans-unit>
        <trans-unit id="502e77c5db04148af4c0627dfc02e459c51eeca1" translate="yes" xml:space="preserve">
          <source>Permits you to create the database specified in the first parameter. Returns TRUE/FALSE based on success or failure:</source>
          <target state="translated">最初のパラメータで指定したデータベースの作成を許可します。成功か失敗かに応じてTRUEFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="6ff69021cad102ba517d9abfb4e469c1d709c172" translate="yes" xml:space="preserve">
          <source>Permits you to destroy the cart. This method will likely be called when you are finished processing the customer&amp;rsquo;s order.</source>
          <target state="translated">カートを破壊することを許可します。このメソッドは、顧客の注文の処理が終了したときに呼び出される可能性があります。</target>
        </trans-unit>
        <trans-unit id="f685c7c359ecba99cb5d75685e9f0aa20fd10947" translate="yes" xml:space="preserve">
          <source>Permits you to determine the number of rows in a particular Active Record query. Queries will accept Query Builder restrictors such as &lt;code&gt;where()&lt;/code&gt;, &lt;code&gt;or_where()&lt;/code&gt;, &lt;code&gt;like()&lt;/code&gt;, &lt;code&gt;or_like()&lt;/code&gt;, etc. Example:</source>
          <target state="translated">特定のアクティブレコードクエリの行数を決定できます。クエリは &lt;code&gt;where()&lt;/code&gt; 、 &lt;code&gt;or_where()&lt;/code&gt; 、 &lt;code&gt;like()&lt;/code&gt; 、 &lt;code&gt;or_like()&lt;/code&gt; などのクエリビルダーリストリクターを受け入れます。例：</target>
        </trans-unit>
        <trans-unit id="d71cfb7bf108a1407771006372e66e90ef7a0697" translate="yes" xml:space="preserve">
          <source>Permits you to determine the number of rows in a particular table. Submit the table name in the first parameter. Example:</source>
          <target state="translated">特定のテーブルの行数を決定することができます。最初のパラメータにテーブル名を指定してください。例</target>
        </trans-unit>
        <trans-unit id="fc3de9356a96f391d209d62a058aac34aa937fbd" translate="yes" xml:space="preserve">
          <source>Permits you to display a checkbox in the state it was submitted.</source>
          <target state="translated">投稿された状態でチェックボックスを表示することができます。</target>
        </trans-unit>
        <trans-unit id="a5f2c9c6996d0f2949294b17918d75b048259d59" translate="yes" xml:space="preserve">
          <source>Permits you to display radio buttons in the state they were submitted. This function is identical to the &lt;a href=&quot;#set_checkbox&quot;&gt;&lt;code&gt;set_checkbox()&lt;/code&gt;&lt;/a&gt; function above.</source>
          <target state="translated">送信された状態でラジオボタンを表示することを許可します。この関数は、上記の&lt;a href=&quot;#set_checkbox&quot;&gt; &lt;code&gt;set_checkbox()&lt;/code&gt; &lt;/a&gt;関数と同じです。</target>
        </trans-unit>
        <trans-unit id="2aa33193f48b75fe404da2387db217c604fe0909" translate="yes" xml:space="preserve">
          <source>Permits you to drop the database specified in the first parameter. Returns TRUE/FALSE based on success or failure:</source>
          <target state="translated">最初のパラメータで指定したデータベースを削除することを許可します。成功か失敗かに応じてTRUEFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="63e8fa810146f780e93a1703bdd3437aa3ea4ef2" translate="yes" xml:space="preserve">
          <source>Permits you to enable/disable specific sections of the Profiler when it is enabled. Please refer to the &lt;a href=&quot;../general/profiling&quot;&gt;Profiler&lt;/a&gt; documentation for further information.</source>
          <target state="translated">有効になっている場合、プロファイラーの特定のセクションを有効または無効にすることができます。詳細については、&lt;a href=&quot;../general/profiling&quot;&gt;プロファイラーの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="2c7bb7a31558dfa4f7d6d54c56d7cf577f3113a1" translate="yes" xml:space="preserve">
          <source>Permits you to enable/disable the &lt;a href=&quot;../general/profiling&quot;&gt;Profiler&lt;/a&gt;, which will display benchmark and other data at the bottom of your pages for debugging and optimization purposes.</source>
          <target state="translated">&lt;a href=&quot;../general/profiling&quot;&gt;プロファイラー&lt;/a&gt;を有効/無効にすることができます。プロファイラーは、デバッグと最適化のためにページの下部にベンチマークとその他のデータを表示します。</target>
        </trans-unit>
        <trans-unit id="d12166da6bf9451dc633ed8b4e257cff85657dce" translate="yes" xml:space="preserve">
          <source>Permits you to generate a CSV file from a query result. The first parameter of the method must contain the result object from your query. Example:</source>
          <target state="translated">クエリ結果からCSVファイルを生成することができます。メソッドの最初のパラメータには、クエリの結果オブジェクトを含める必要があります。例</target>
        </trans-unit>
        <trans-unit id="48f3bb7bf9490bf7ada64040bcbc9a574cc8c710" translate="yes" xml:space="preserve">
          <source>Permits you to generate an XML file from a query result. The first parameter expects a query result object, the second may contain an optional array of config parameters. Example:</source>
          <target state="translated">クエリ結果からXMLファイルを生成することを許可します。最初のパラメータにはクエリ結果オブジェクトを指定し、 2 番目のパラメータにはオプションの設定パラメータの配列を指定します。例を示します。</target>
        </trans-unit>
        <trans-unit id="516d3b27c915acffae8a7970b752405436849829" translate="yes" xml:space="preserve">
          <source>Permits you to generate unordered HTML lists from simple or multi-dimensional arrays. Example:</source>
          <target state="translated">単純な配列や多次元配列から順不同のHTMLリストを生成することができます。例</target>
        </trans-unit>
        <trans-unit id="828282f0d8d313d3c183ff29da9e88619e93fcc6" translate="yes" xml:space="preserve">
          <source>Permits you to manually retrieve any output that has been sent for storage in the output class. Usage example:</source>
          <target state="translated">出力クラスに保存するために送信された出力を手動で取得することを許可します。使用例。</target>
        </trans-unit>
        <trans-unit id="f0b5ad663d6cde015ce87d42164b617d0e41b478" translate="yes" xml:space="preserve">
          <source>Permits you to manually set a server status header. Example:</source>
          <target state="translated">サーバーのステータスヘッダーを手動で設定することができます。例。</target>
        </trans-unit>
        <trans-unit id="6649ef6def043ff550c51904c90a78bcdd1c8d8f" translate="yes" xml:space="preserve">
          <source>Permits you to manually set server headers, which the output class will send for you when outputting the final rendered display. Example:</source>
          <target state="translated">最終的なレンダリング表示を出力する際に出力クラスが送信するサーバーヘッダーを手動で設定することができます。例。</target>
        </trans-unit>
        <trans-unit id="bd9d67d5ea52b60989a5face9043e682be9278e6" translate="yes" xml:space="preserve">
          <source>Permits you to manually set the final output string. Usage example:</source>
          <target state="translated">最終的な出力文字列を手動で設定することができます。使用例。</target>
        </trans-unit>
        <trans-unit id="099fa3173d6a2f5020631bd80a6eec9592f81810" translate="yes" xml:space="preserve">
          <source>Permits you to optimize a table using the table name specified in the first parameter. Returns TRUE/FALSE based on success or failure:</source>
          <target state="translated">最初のパラメータで指定したテーブル名を使用してテーブルを最適化することを許可します。成功か失敗かに応じてTRUEFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="342702209e12772834b72d93df767ec07600428d" translate="yes" xml:space="preserve">
          <source>Permits you to optimize the database your DB class is currently connected to. Returns an array containing the DB status messages or FALSE on failure.</source>
          <target state="translated">DB クラスが現在接続しているデータベースを最適化することができます。DB のステータスメッセージを含む配列を返すか、失敗した場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="57ce6565ac9ba59fdfeaf28784bbc6efa7e93777" translate="yes" xml:space="preserve">
          <source>Permits you to rename a file. Supply the source file name/path and the new file name/path.</source>
          <target state="translated">ファイルの名前を変更することができます。ソースファイルの名前パスと新しいファイルの名前パスを指定します。</target>
        </trans-unit>
        <trans-unit id="96a3ab4395ac5e86eda6aa8101a20907c2836553" translate="yes" xml:space="preserve">
          <source>Permits you to repair a table using the table name specified in the first parameter. Returns TRUE/FALSE based on success or failure:</source>
          <target state="translated">最初のパラメータで指定したテーブル名を使用してテーブルを修復することを許可します。成功または失敗に基づいてTRUEFALSEを返します。</target>
        </trans-unit>
        <trans-unit id="7350b490072cd86a10b3193ab48b576996daf705" translate="yes" xml:space="preserve">
          <source>Permits you to reset the validation when you validate more than one array. This method should be called before validating each new array.</source>
          <target state="translated">複数の配列を検証する際に検証をリセットすることができます。このメソッドは、それぞれの新しい配列を検証する前に呼ばれなければなりません。</target>
        </trans-unit>
        <trans-unit id="e2a6b025e64062d34874d88aa1943f41bcf822c7" translate="yes" xml:space="preserve">
          <source>Permits you to retrieve a list of files on your server returned as an array. You must supply the path to the desired directory.</source>
          <target state="translated">サーバ上のファイルのリストを配列として返すことができます。目的のディレクトリへのパスを指定しなければなりません。</target>
        </trans-unit>
        <trans-unit id="e7d5f12fbffc03f2d6833ccfa0c2161143d230e6" translate="yes" xml:space="preserve">
          <source>Permits you to retrieve a specific segment. Where n is the segment number you wish to retrieve. Segments are numbered from left to right. For example, if your full URL is this:</source>
          <target state="translated">特定のセグメントを検索することができます。ここで n は検索したいセグメント番号です。セグメントは左から右に番号が付けられています。例えば、あなたの完全なURLがこのような場合。</target>
        </trans-unit>
        <trans-unit id="8cf8c02f6592118cc37d7a3aadf605e323e03858" translate="yes" xml:space="preserve">
          <source>Permits you to set an Mcrypt cipher. By default it uses &lt;code&gt;MCRYPT_RIJNDAEL_256&lt;/code&gt;. Example:</source>
          <target state="translated">Mcrypt暗号を設定することを許可します。デフォルトでは、 &lt;code&gt;MCRYPT_RIJNDAEL_256&lt;/code&gt; を使用します。例：</target>
        </trans-unit>
        <trans-unit id="dce8041f552d237a4750e4e3a61f25a19ee6e389" translate="yes" xml:space="preserve">
          <source>Permits you to set an Mcrypt mode. By default it uses &lt;strong&gt;MCRYPT_MODE_CBC&lt;/strong&gt;. Example:</source>
          <target state="translated">Mcryptモードを設定できます。デフォルトでは、&lt;strong&gt;MCRYPT_MODE_CBCを&lt;/strong&gt;使用し&lt;strong&gt;ます&lt;/strong&gt;。例：</target>
        </trans-unit>
        <trans-unit id="385b94c381d931573e3157651c509b2ff5cabf5a" translate="yes" xml:space="preserve">
          <source>Permits you to set an array for validation, instead of using the default &lt;code&gt;$_POST&lt;/code&gt; array.</source>
          <target state="translated">デフォルトの &lt;code&gt;$_POST&lt;/code&gt; 配列を使用する代わりに、検証用の配列を設定できます。</target>
        </trans-unit>
        <trans-unit id="8c84b6c235d7bb78cfcf09629847676b39d04ee9" translate="yes" xml:space="preserve">
          <source>Permits you to set custom error messages. See &lt;a href=&quot;#setting-error-messages&quot;&gt;Setting Error Messages&lt;/a&gt;</source>
          <target state="translated">カスタムエラーメッセージを設定できます。&lt;a href=&quot;#setting-error-messages&quot;&gt;エラーメッセージの設定を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="90e19f612a3d393e3f6e4af432a4fdfe1edab309" translate="yes" xml:space="preserve">
          <source>Permits you to set file permissions. Supply the path to the file or directory you wish to alter permissions on:</source>
          <target state="translated">ファイルのパーミッションを設定することができます。パーミッションを変更したいファイルまたはディレクトリへのパスを指定します。</target>
        </trans-unit>
        <trans-unit id="9bbb34a00407e99a419b2ad7b189914570af299c" translate="yes" xml:space="preserve">
          <source>Permits you to set the mime-type of your page so you can serve JSON data, JPEG&amp;rsquo;s, XML, etc easily.</source>
          <target state="translated">JSONデータ、JPEG、XMLなどを簡単に提供できるように、ページのMIMEタイプを設定できます。</target>
        </trans-unit>
        <trans-unit id="c26f0852f59fc9159045c266398bfb4a46b5da38" translate="yes" xml:space="preserve">
          <source>Permits you to set the table heading. You can submit an array or discrete params:</source>
          <target state="translated">表の見出しを設定することができます。配列または個別のパラメータを指定することができます。</target>
        </trans-unit>
        <trans-unit id="240d5d1ca14f36fa4ef1b5dbedf5bde23edd13ff" translate="yes" xml:space="preserve">
          <source>Permits you to set the value of an input form or textarea. You must supply the field name via the first parameter of the function. The second (optional) parameter allows you to set a default value for the form. The third (optional) parameter allows you to turn off HTML escaping of the value, in case you need to use this function in combination with i.e. &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; and avoid double-escaping.</source>
          <target state="translated">入力フォームまたはテキストエリアの値を設定できます。関数の最初のパラメーターを介してフィールド名を指定する必要があります。2番目（オプション）のパラメーターでは、フォームのデフォルト値を設定できます。3番目の（オプションの）パラメーターを使用すると、この関数をie &lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt;と組み合わせて使用​​し、二重エスケープを回避する必要がある場合に、値のHTMLエスケープをオフにすることができます。</target>
        </trans-unit>
        <trans-unit id="bb11ba9f249d374a5d23182c0568b47ba23e1f65" translate="yes" xml:space="preserve">
          <source>Permits you to set validation rules, as described in the tutorial sections above:</source>
          <target state="translated">上記のチュートリアルのセクションで説明されているように、検証ルールを設定することができます。</target>
        </trans-unit>
        <trans-unit id="53dc3c2add7e4c2bcfb9635110d2514cc747b93a" translate="yes" xml:space="preserve">
          <source>Permits you to set your template. You can submit a full or partial template.</source>
          <target state="translated">テンプレートを設定することができます。全テンプレートまたは部分テンプレートを提出することができます。</target>
        </trans-unit>
        <trans-unit id="bfcd2892b5499ebb30b5720a5f7b94fa5814fd95" translate="yes" xml:space="preserve">
          <source>Permits you to write the FROM portion of your query:</source>
          <target state="translated">クエリのFROM部分を書くことができます。</target>
        </trans-unit>
        <trans-unit id="93019b2a7cc412e714523ec119cd8e730a498ffc" translate="yes" xml:space="preserve">
          <source>Permits you to write the GROUP BY portion of your query:</source>
          <target state="translated">クエリのGROUP BY部分を書くことができます。</target>
        </trans-unit>
        <trans-unit id="1a674816896dba7210d70b163bbafd9933258160" translate="yes" xml:space="preserve">
          <source>Permits you to write the HAVING portion of your query. There are 2 possible syntaxes, 1 argument or 2:</source>
          <target state="translated">クエリのHAVING部分を書くことができます。2つの構文があり、1つの引数または2つの引数があります。</target>
        </trans-unit>
        <trans-unit id="6751359c5281fda82129e7c633803788ec89c6f6" translate="yes" xml:space="preserve">
          <source>Permits you to write the JOIN portion of your query:</source>
          <target state="translated">クエリのJOIN部分を書くことができます。</target>
        </trans-unit>
        <trans-unit id="6099d96e700205ecb3544f7647e037b71fb44f61" translate="yes" xml:space="preserve">
          <source>Permits you to write the SELECT portion of your query:</source>
          <target state="translated">クエリのSELECT部分を書くことができます。</target>
        </trans-unit>
        <trans-unit id="ce9dc25771cda0bc12b48d62df557640b26d9e74" translate="yes" xml:space="preserve">
          <source>Place the item you do not want word-wrapped between: {unwrap} {/unwrap}</source>
          <target state="translated">ワードラッピングしたくない項目を挟みます。包装解除}{包装解除}{包装解除</target>
        </trans-unit>
        <trans-unit id="6d9844f3d82530fc630d3c8ce04f988d00844540" translate="yes" xml:space="preserve">
          <source>Plain-text string</source>
          <target state="translated">プレーンテキスト文字列</target>
        </trans-unit>
        <trans-unit id="23cad2b6b992d3211677b3b9182ba6281e425f03" translate="yes" xml:space="preserve">
          <source>Platform name</source>
          <target state="translated">プラットフォーム名</target>
        </trans-unit>
        <trans-unit id="f163a4da8a4a7250c0f7fd5b2235d6e2dd9b7813" translate="yes" xml:space="preserve">
          <source>Please note that all native CodeIgniter libraries are prefixed with &lt;strong&gt;CI_&lt;/strong&gt; so DO NOT use that as your prefix.</source>
          <target state="translated">すべてのネイティブCodeIgniterライブラリの前に&lt;strong&gt;CI_&lt;/strong&gt;が付いて&lt;strong&gt;いる&lt;/strong&gt;ため、それをプレフィックスとして使用しないでください。</target>
        </trans-unit>
        <trans-unit id="4be379a5461d0428cad3d5a8e9e288b5068252b1" translate="yes" xml:space="preserve">
          <source>Please note that all native CodeIgniter libraries are prefixed with CI_ so DO NOT use that as your prefix.</source>
          <target state="translated">すべてのネイティブのCodeIgniterライブラリのプレフィックスはCI_であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="1c26cdc1f984d513b7f6dfa6c5c6f75d9becaa25" translate="yes" xml:space="preserve">
          <source>Please note that if you do use this feature, if PHP errors are encountered in your &lt;strong&gt;view files&lt;/strong&gt;, the error message and line number will not be accurately shown. Instead, all errors will be shown as &lt;code&gt;eval()&lt;/code&gt; errors.</source>
          <target state="translated">この機能を使用する場合、&lt;strong&gt;ビューファイル&lt;/strong&gt;でPHPエラーが発生&lt;strong&gt;する&lt;/strong&gt;と、エラーメッセージと行番号が正確に表示されないことに注意してください。代わりに、すべてのエラーは &lt;code&gt;eval()&lt;/code&gt; エラーとして表示されます。</target>
        </trans-unit>
        <trans-unit id="dfdf9dc1855f50668ee0d8116102b4d14eaf2576" translate="yes" xml:space="preserve">
          <source>Please note that the Cart Class ONLY provides the core &amp;ldquo;cart&amp;rdquo; functionality. It does not provide shipping, credit card authorization, or other processing components.</source>
          <target state="translated">カートクラスはコア「カート」機能のみを提供することに注意してください。配送、クレジットカードの承認、その他の処理コンポーネントは提供されません。</target>
        </trans-unit>
        <trans-unit id="7dfb2a9bd0c0bfc348b0dee4b556694ea09f27f4" translate="yes" xml:space="preserve">
          <source>Please note that these functions are NOT intended, nor suitable to be used for any kind of security-related logic.</source>
          <target state="translated">これらの機能は、セキュリティ関連のロジックに使用することを目的としたものではありませんのでご注意ください。</target>
        </trans-unit>
        <trans-unit id="ce6fdc41892bc42f21dc8082f7da0c6cb66992b6" translate="yes" xml:space="preserve">
          <source>Please note that this example uses the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt;.</source>
          <target state="translated">この例では&lt;a href=&quot;../helpers/form_helper&quot;&gt;フォームヘルパーを&lt;/a&gt;使用していることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e3cc233956e402a29b25aa46eb07c37f749d3e40" translate="yes" xml:space="preserve">
          <source>Please note that you MUST name your &lt;code&gt;$config&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;$config&lt;/code&gt; 配列に名前を付ける必要があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="bad6dbcc312fe4267abfc57f81cc6136d26ed176" translate="yes" xml:space="preserve">
          <source>Please note that your &lt;code&gt;_output()&lt;/code&gt; method will receive the data in its finalized state. Benchmark and memory usage data will be rendered, cache files written (if you have caching enabled), and headers will be sent (if you use that &lt;a href=&quot;../libraries/output&quot;&gt;feature&lt;/a&gt;) before it is handed off to the &lt;code&gt;_output()&lt;/code&gt; method. To have your controller&amp;rsquo;s output cached properly, its &lt;code&gt;_output()&lt;/code&gt; method can use:</source>
          <target state="translated">&lt;code&gt;_output()&lt;/code&gt; メソッドはデータを最終的な状態で受け取ることに注意してください。ベンチマークとメモリ使用量のデータがレンダリングされ、キャッシュファイルが書き込まれ（キャッシュが有効になっている場合）、ヘッダーが送信され（その&lt;a href=&quot;../libraries/output&quot;&gt;機能&lt;/a&gt;を使用している場合）、 &lt;code&gt;_output()&lt;/code&gt; メソッドに渡されます。コントローラの出力を適切にキャッシュするために、その &lt;code&gt;_output()&lt;/code&gt; メソッドは以下を使用できます。</target>
        </trans-unit>
        <trans-unit id="68f5895a3ac19b54beaca3de0c93246c271c09d9" translate="yes" xml:space="preserve">
          <source>Please note that your class must use CI as a prefix. For example, if your file is named Input.php the class will be named:</source>
          <target state="translated">クラスのプレフィックスには CI を使用しなければならないことに注意してください。例えば、ファイル名がInput.phpの場合、クラスはInput.phpという名前になります。</target>
        </trans-unit>
        <trans-unit id="9542f264a7a6b77191f04b7c7eab163338aa9b56" translate="yes" xml:space="preserve">
          <source>Please read the &lt;a href=&quot;../general/profiling&quot;&gt;Profiler page&lt;/a&gt; for more information.</source>
          <target state="translated">詳細については、&lt;a href=&quot;../general/profiling&quot;&gt;プロファイラーのページ&lt;/a&gt;をご覧ください。</target>
        </trans-unit>
        <trans-unit id="e425239aa3eb383b3581b15e973d968f0a938055" translate="yes" xml:space="preserve">
          <source>Please read the about the where function below for more information.</source>
          <target state="translated">詳しくは下記のWhere機能についてをお読みください。</target>
        </trans-unit>
        <trans-unit id="5e9aba10839b86af0f1bbb344947aeb2a277961e" translate="yes" xml:space="preserve">
          <source>Please read the information on setting Benchmark points in the &lt;a href=&quot;../libraries/benchmark&quot;&gt;Benchmark Library&lt;/a&gt; page.</source>
          <target state="translated">&lt;a href=&quot;../libraries/benchmark&quot;&gt;ベンチマークライブラリ&lt;/a&gt;ページのベンチマークポイントの設定に関する情報をお読みください。</target>
        </trans-unit>
        <trans-unit id="7530c4d99a1f1c72f8dabc4bc2c4f131b23e9be8" translate="yes" xml:space="preserve">
          <source>Please read the section of the user guide that discusses how to &lt;a href=&quot;creating_drivers&quot;&gt;create your own drivers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;creating_drivers&quot;&gt;独自のドライバー&lt;/a&gt;を作成する方法について説明しているユーザーガイドのセクションをお読みください。</target>
        </trans-unit>
        <trans-unit id="8b7380409f556e11f5a63d95b210757664a30734" translate="yes" xml:space="preserve">
          <source>Please read the section of the user guide that discusses how to &lt;a href=&quot;creating_libraries&quot;&gt;create your own libraries&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;creating_libraries&quot;&gt;独自のライブラリ&lt;/a&gt;を作成する方法について説明しているユーザーガイドのセクションをお読みください。</target>
        </trans-unit>
        <trans-unit id="cfc86a403ac3bf0caf93e2b25dd51fe2e0ae4030" translate="yes" xml:space="preserve">
          <source>Please read the upgrade notes corresponding to the version you are upgrading from.</source>
          <target state="translated">アップグレード先のバージョンに対応したアップグレード注意事項をお読みください。</target>
        </trans-unit>
        <trans-unit id="abee25e7e65720a41bcf9c1012e0e4fb8ee8789b" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;#configuration&quot;&gt;Configuring the library&lt;/a&gt; section for detailed info.</source>
          <target state="translated">詳細については、&lt;a href=&quot;#configuration&quot;&gt;「ライブラリ&lt;/a&gt;の構成」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="175ba5c0fe3902167029ac86c39e3ddf167bc5b0" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;#custom-parameters&quot;&gt;Using custom parameters&lt;/a&gt; secrion for information on the optional parameters.</source>
          <target state="translated">オプションパラメータの詳細については、「&lt;a href=&quot;#custom-parameters&quot;&gt;カスタムパラメータ&lt;/a&gt;の使用」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="cb42dd7d6aba7c01441d9a02cdfda21ce4408e94" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;#custom-parameters&quot;&gt;Using custom parameters&lt;/a&gt; section for information on the optional parameters.</source>
          <target state="translated">オプションパラメータの詳細については、「&lt;a href=&quot;#custom-parameters&quot;&gt;カスタムパラメータ&lt;/a&gt;の使用」セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="61cd231d7d3386ab943a4110d5088171ec2bdab9" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;../helpers/form_helper&quot;&gt;Form Helper&lt;/a&gt; manual for the following functions:</source>
          <target state="translated">次の機能については、&lt;a href=&quot;../helpers/form_helper&quot;&gt;フォームヘルパーの&lt;/a&gt;マニュアルを参照してください。</target>
        </trans-unit>
        <trans-unit id="29c8fb35e45cd4129d513d1d4cd9adc6d9764b82" translate="yes" xml:space="preserve">
          <source>Please refer to the &lt;a href=&quot;security&quot;&gt;Security class&lt;/a&gt; documentation for information on using XSS Filtering in your application.</source>
          <target state="translated">アプリケーションでXSSフィルタリングを使用する方法については、&lt;a href=&quot;security&quot;&gt;セキュリティクラスの&lt;/a&gt;ドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="31f5184397c4c44930253b9f0291d50ffa462ca1" translate="yes" xml:space="preserve">
          <source>Please see the section entitled Fetching Config Items below to learn how to retrieve config items set this way.</source>
          <target state="translated">この方法で設定されたコンフィグアイテムを取得する方法については、下記の「コンフィグアイテムの取得」を参照してください。</target>
        </trans-unit>
        <trans-unit id="e57b751eeef905fda2b964c92689859bc2a496c6" translate="yes" xml:space="preserve">
          <source>Please see the timezone reference below to see the values of this menu.</source>
          <target state="translated">このメニューの値は、下記のタイムゾーン参照をご覧ください。</target>
        </trans-unit>
        <trans-unit id="74974180fbd2c506ac8c96aa7c3c6791c9d52b24" translate="yes" xml:space="preserve">
          <source>Please take note, when multiple libraries are supplied in an array for the first parameter, each will receive the same parameter information.</source>
          <target state="translated">最初のパラメータに複数のライブラリが配列で与えられた場合、それぞれが同じパラメータ情報を受け取ることに注意してください。</target>
        </trans-unit>
        <trans-unit id="c51652d2da983cbdaa24f63b1eb15de4ab97ab4d" translate="yes" xml:space="preserve">
          <source>Please take note, when multiple libraries are supplied in an array for the first parameter, this parameter is discarded.</source>
          <target state="translated">最初のパラメータに複数のライブラリが配列で与えられた場合、このパラメータは破棄されることに注意してください。</target>
        </trans-unit>
        <trans-unit id="473a6cd55278b5172f1d7a779cbe4c8cb9010d08" translate="yes" xml:space="preserve">
          <source>Please use them, even if you&amp;rsquo;re not running PHP 5.5+, CodeIgniter provides them for you.</source>
          <target state="translated">PHP 5.5以降を実行していない場合でも、CodeIgniterが提供しています。</target>
        </trans-unit>
        <trans-unit id="a65dcfe9c055065a0ea3d21943cdaf7c71cdeba6" translate="yes" xml:space="preserve">
          <source>Please visit php.net for a list of &lt;a href=&quot;http://php.net/mcrypt&quot;&gt;available ciphers&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/mcrypt&quot;&gt;利用可能な暗号の&lt;/a&gt;リストについては、php.netにアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="bf3d15111a7430a38f81491260ebfa821028dc4d" translate="yes" xml:space="preserve">
          <source>Please visit php.net for a list of &lt;a href=&quot;http://php.net/mcrypt&quot;&gt;available modes&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;http://php.net/mcrypt&quot;&gt;利用可能なモードの&lt;/a&gt;リストについては、php.netにアクセスしてください。</target>
        </trans-unit>
        <trans-unit id="05021d4c80ad5f0b67fbb71b5ecb02607bdacb32" translate="yes" xml:space="preserve">
          <source>Please visit the &lt;a href=&quot;results&quot;&gt;result functions&lt;/a&gt; page for a full discussion regarding result generation.</source>
          <target state="translated">結果の生成に関する詳細については、&lt;a href=&quot;results&quot;&gt;結果関数の&lt;/a&gt;ページをご覧ください。</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="f9c533e65378520bb0f2b61b64566010ba8ed9d5" translate="yes" xml:space="preserve">
          <source>Point your browser to your document root, followed by index.php/news and watch your news page.</source>
          <target state="translated">ブラウザをドキュメントルートに向け、index.phpnewsと続けて、ニュースページを見てください。</target>
        </trans-unit>
        <trans-unit id="3b0369badd4c1397ab0d79a41792b00be2e9635c" translate="yes" xml:space="preserve">
          <source>Pop-up hyperlink</source>
          <target state="translated">ポップアップハイパーリンク</target>
        </trans-unit>
        <trans-unit id="587ef71f446b069ce8a07f3e78bedfe97dd142b1" translate="yes" xml:space="preserve">
          <source>Portable ciphers</source>
          <target state="translated">携帯用暗号</target>
        </trans-unit>
        <trans-unit id="d0c3eb5b0ccfff8b9f658a208c34f680e458f880" translate="yes" xml:space="preserve">
          <source>Portion of $str specified by $start and $length or FALSE on failure</source>
          <target state="translated">start と $length で指定した $str の部分、または失敗した場合に FALSE を指定します。</target>
        </trans-unit>
        <trans-unit id="e0b119d042ef967fab36da45e41907c7dd9db124" translate="yes" xml:space="preserve">
          <source>Possible values</source>
          <target state="translated">可能な値</target>
        </trans-unit>
        <trans-unit id="fc27c290206d2ccbde130f10314df96c4c0e50b7" translate="yes" xml:space="preserve">
          <source>PostgreSQL&amp;rsquo;s &lt;code&gt;pg_exec()&lt;/code&gt; function (for example) always returns a resource on success, even for write type queries. So take that in mind if you&amp;rsquo;re looking for a boolean value.</source>
          <target state="translated">PostgreSQLの &lt;code&gt;pg_exec()&lt;/code&gt; 関数（たとえば）は、書き込みタイプのクエリであっても、成功すると常にリソースを返します。したがって、ブール値を探している場合は、そのことを覚えておいてください。</target>
        </trans-unit>
        <trans-unit id="73fd42e1f48e62c0179eea8f87e2c9f33e1feaec" translate="yes" xml:space="preserve">
          <source>Pre-format the data if needed (Does the data need to be trimmed? HTML encoded? Etc.)</source>
          <target state="translated">必要に応じてデータを事前にフォーマットしておく(データをトリミングする必要があるか? HTMLエンコードされているか? など</target>
        </trans-unit>
        <trans-unit id="97d9b2888847bdab6c3bf47fe6a1af3b69aee3e2" translate="yes" xml:space="preserve">
          <source>Preference</source>
          <target state="translated">Preference</target>
        </trans-unit>
        <trans-unit id="9dfd349ebee555eb8d652be20dad971cae439eca" translate="yes" xml:space="preserve">
          <source>Preferences</source>
          <target state="translated">Preferences</target>
        </trans-unit>
        <trans-unit id="034338ce7213366c738743217b0c3a0edd7b3a56" translate="yes" xml:space="preserve">
          <source>Preferences are set by passing an array of preference values to the email initialize method. Here is an example of how you might set some preferences:</source>
          <target state="translated">環境設定は、環境設定値の配列をメールの初期化メソッドに渡すことで設定します。ここでは、いくつかの環境設定を設定する方法の例を示します。</target>
        </trans-unit>
        <trans-unit id="d927da098fe3190e3c9bd59f062d9524c47e84dd" translate="yes" xml:space="preserve">
          <source>Prefixing method names with an underscore will also prevent them from being called. This is a legacy feature that is left for backwards-compatibility.</source>
          <target state="translated">また、メソッド名の前にアンダースコアを付けることで、それらのメソッドが呼び出されるのを防ぐことができます。これはレガシー機能であり、後方互換性のために残されています。</target>
        </trans-unit>
        <trans-unit id="7d86813d10b765ed03cd86c1467803e21d254d34" translate="yes" xml:space="preserve">
          <source>Prep the data for insertion in the database.</source>
          <target state="translated">データベースに挿入するためのデータを準備します。</target>
        </trans-unit>
        <trans-unit id="51289506c1dfe7e0a1f995910d28dc9c106b2159" translate="yes" xml:space="preserve">
          <source>Prepend said IV to the resulting cipher-text.</source>
          <target state="translated">得られた暗号文に前記IVを付加する。</target>
        </trans-unit>
        <trans-unit id="76da0caf147998866901e40221d193663b13d0d9" translate="yes" xml:space="preserve">
          <source>Prepends a database prefix, if one exists in configuration.</source>
          <target state="translated">設定にデータベースのプレフィックスがあれば、それを前置します。</target>
        </trans-unit>
        <trans-unit id="9cbab7ca148c2e6332f901eee4e9887b94e8b4cd" translate="yes" xml:space="preserve">
          <source>Prepping Data</source>
          <target state="translated">データの準備</target>
        </trans-unit>
        <trans-unit id="717625bef6c4d3e5b577e6a07c6139fd15c0f302" translate="yes" xml:space="preserve">
          <source>Prepping Reference</source>
          <target state="translated">プリッピングリファレンス</target>
        </trans-unit>
        <trans-unit id="167de1d1adb5df9be781cc8737b2b3da48bda32d" translate="yes" xml:space="preserve">
          <source>Previous row of result set, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">結果セットの前の行。存在しない場合はNULL</target>
        </trans-unit>
        <trans-unit id="8c0ad90bec3127568428d4c04d5d1ea52f6ba12f" translate="yes" xml:space="preserve">
          <source>Priorities</source>
          <target state="translated">Priorities</target>
        </trans-unit>
        <trans-unit id="712e3bd96de4e37a3bf3a578a221cc24090408be" translate="yes" xml:space="preserve">
          <source>Private Methods and Variables</source>
          <target state="translated">プライベートメソッドと変数</target>
        </trans-unit>
        <trans-unit id="6ef9846296a3401146329564868967f0ac86319d" translate="yes" xml:space="preserve">
          <source>Private methods</source>
          <target state="translated">プライベートメソッド</target>
        </trans-unit>
        <trans-unit id="a51b288e8174d0746f31dd7ed925eac0dc7c5f6c" translate="yes" xml:space="preserve">
          <source>Processing Methods</source>
          <target state="translated">加工方法</target>
        </trans-unit>
        <trans-unit id="45afd24b2414ff3545689c37dcbcac1bba28bc4c" translate="yes" xml:space="preserve">
          <source>Processing Output</source>
          <target state="translated">処理出力</target>
        </trans-unit>
        <trans-unit id="b30a0a3b6b93a85ea2917d815762b5deebcbb33f" translate="yes" xml:space="preserve">
          <source>Processing Server Requests</source>
          <target state="translated">サーバ要求の処理</target>
        </trans-unit>
        <trans-unit id="e5b259ac74fa20e2d23f474afb4de9bb184f1ba5" translate="yes" xml:space="preserve">
          <source>Processing a Trackback</source>
          <target state="translated">トラックバックの処理</target>
        </trans-unit>
        <trans-unit id="175863258d35bad448319223a8eb1045c8365088" translate="yes" xml:space="preserve">
          <source>Processing an Image</source>
          <target state="translated">画像の処理</target>
        </trans-unit>
        <trans-unit id="84a5c7f3d28e5c4ae32b71b1b244fef7b043d24c" translate="yes" xml:space="preserve">
          <source>Produces a closing &amp;lt;/fieldset&amp;gt; tag. The only advantage to using this function is it permits you to pass data to it which will be added below the tag. For example</source>
          <target state="translated">終了&amp;lt;/ fieldset&amp;gt;タグを作成します。この関数を使用する唯一の利点は、タグの下に追加されるデータを渡すことができることです。例えば</target>
        </trans-unit>
        <trans-unit id="e423e945e7bd1fd01d9225f7d7b32f93e2ac06ee" translate="yes" xml:space="preserve">
          <source>Produces a closing &amp;lt;/form&amp;gt; tag. The only advantage to using this function is it permits you to pass data to it which will be added below the tag. For example:</source>
          <target state="translated">終了&amp;lt;/ form&amp;gt;タグを作成します。この関数を使用する唯一の利点は、タグの下に追加されるデータを渡すことができることです。例えば：</target>
        </trans-unit>
        <trans-unit id="960e8fddc698625d55770887235e931f448d8d54" translate="yes" xml:space="preserve">
          <source>Produces:</source>
          <target state="translated">Produces:</target>
        </trans-unit>
        <trans-unit id="8c9ba1ab7afc8e8bb451bc679ed3b7fd4c27a4cf" translate="yes" xml:space="preserve">
          <source>Profiling Your Application</source>
          <target state="translated">アプリケーションのプロファイリング</target>
        </trans-unit>
        <trans-unit id="874cbe9c8df7d313bc8e7a3aa5cba65f99705bab" translate="yes" xml:space="preserve">
          <source>Profiling Your Benchmark Points</source>
          <target state="translated">ベンチマークポイントのプロファイリング</target>
        </trans-unit>
        <trans-unit id="641c7e47c39abfb26dfcc559849f3bffa6a5b4bd" translate="yes" xml:space="preserve">
          <source>Programmers love to code and hate to write documentation. We&amp;rsquo;re no different, of course, but since documentation is &lt;strong&gt;as important&lt;/strong&gt; as the code itself, we are committed to doing it. Our source code is extremely clean and well commented as well.</source>
          <target state="translated">プログラマーはコーディングが大好きで、ドキュメントを書くのが嫌いです。もちろん違いはありませんが、ドキュメンテーションはコード自体と&lt;strong&gt;同じくらい重要な&lt;/strong&gt;ので、それを行うことを約束します。私たちのソースコードは非常にクリーンで、よくコメントされています。</target>
        </trans-unit>
        <trans-unit id="0d2adcd0527c543009c0b0cb7d9e47286863de29" translate="yes" xml:space="preserve">
          <source>Protecting identifiers</source>
          <target state="translated">識別子の保護</target>
        </trans-unit>
        <trans-unit id="576ab9fdda8c5d940235f07947914fa440792fc8" translate="yes" xml:space="preserve">
          <source>Protocol-prefixed URL string</source>
          <target state="translated">プロトコル接頭辞付きURL文字列</target>
        </trans-unit>
        <trans-unit id="f311ac7ba2ba279be3cb47050f1368439f23ebd9" translate="yes" xml:space="preserve">
          <source>Provides Cross Site Script Hack filtering.</source>
          <target state="translated">クロスサイトスクリプトハックフィルタリングを提供します。</target>
        </trans-unit>
        <trans-unit id="1956b2c5e75394e33821424ddc052cd7969755f9" translate="yes" xml:space="preserve">
          <source>Provides XSS (Cross-site Scripting Hacks) filtering. This can be enabled globally, or upon request.</source>
          <target state="translated">XSS (クロスサイトスクリプティングハック)フィルタリングを提供します。これはグローバルに、またはリクエストに応じて有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="afa7f4b4bc3d93771d048e38ce33d6770608893b" translate="yes" xml:space="preserve">
          <source>Provides protection against directory traversal.</source>
          <target state="translated">ディレクトリトラバーサルからの保護を提供します。</target>
        </trans-unit>
        <trans-unit id="708ef23f9a325c6e894fa643190d86b638a10886" translate="yes" xml:space="preserve">
          <source>Public Git access is available at &lt;a href=&quot;https://github.com/bcit-ci/CodeIgniter&quot;&gt;GitHub&lt;/a&gt;. Please note that while every effort is made to keep this code base functional, we cannot guarantee the functionality of code taken from the develop branch.</source>
          <target state="translated">パブリックGitアクセスは&lt;a href=&quot;https://github.com/bcit-ci/CodeIgniter&quot;&gt;GitHub&lt;/a&gt;で利用できます。このコードベースが機能するように最善を尽くしていますが、開発ブランチから取得したコードの機能は保証できません。</target>
        </trans-unit>
        <trans-unit id="e0f26a776d5648ca933362c4472f42997c546337" translate="yes" xml:space="preserve">
          <source>Put your driver&amp;rsquo;s file under &lt;strong&gt;application/libraries/Session/drivers/&lt;/strong&gt; and follow the naming conventions used by the Session class.</source>
          <target state="translated">ドライバーのファイルを&lt;strong&gt;application / libraries / Session / drivers /に&lt;/strong&gt;置き、Sessionクラスで使用される命名規則に従います。</target>
        </trans-unit>
        <trans-unit id="2644b7d942f174a4bbf0bc8675c1badf9352393e" translate="yes" xml:space="preserve">
          <source>Queries</source>
          <target state="translated">Queries</target>
        </trans-unit>
        <trans-unit id="93b75d11dc989297fc2ee46672b84cd9ade12cc8" translate="yes" xml:space="preserve">
          <source>Query Basics</source>
          <target state="translated">クエリの基本</target>
        </trans-unit>
        <trans-unit id="5b834a5744d2d60d80963bbdab7d09789d126286" translate="yes" xml:space="preserve">
          <source>Query Bindings</source>
          <target state="translated">クエリバインディング</target>
        </trans-unit>
        <trans-unit id="5752b1edfe3998904906517dbe2981d50e924cf2" translate="yes" xml:space="preserve">
          <source>Query Builder</source>
          <target state="translated">クエリビルダ</target>
        </trans-unit>
        <trans-unit id="4c3ac23a4e53be10e36ad8abd2dec32cc36651c0" translate="yes" xml:space="preserve">
          <source>Query Builder Caching</source>
          <target state="translated">クエリビルダのキャッシング</target>
        </trans-unit>
        <trans-unit id="c957cedb28cc321abd9fff01e3b1fd552af48d3b" translate="yes" xml:space="preserve">
          <source>Query Builder Class</source>
          <target state="translated">クエリビルダクラス</target>
        </trans-unit>
        <trans-unit id="671b9da1fa9fcf8be11539c1c78514fb1503d367" translate="yes" xml:space="preserve">
          <source>Query Builder Database Support</source>
          <target state="translated">クエリビルダデータベースサポート</target>
        </trans-unit>
        <trans-unit id="bffda155e807bbcca54db9f145e9fe6eb1b513e6" translate="yes" xml:space="preserve">
          <source>Query Builder Insert</source>
          <target state="translated">クエリビルダの挿入</target>
        </trans-unit>
        <trans-unit id="8bc7e62ec2a30dffa762b9d78a91653f06d56c26" translate="yes" xml:space="preserve">
          <source>Query Builder Query</source>
          <target state="translated">クエリビルダ クエリ</target>
        </trans-unit>
        <trans-unit id="caf6692c1de70662b13802b231c002f6f7812dd3" translate="yes" xml:space="preserve">
          <source>Query Caching</source>
          <target state="translated">クエリキャッシュ</target>
        </trans-unit>
        <trans-unit id="1f9984764592a23d073e9232a2d3c3681fa246ed" translate="yes" xml:space="preserve">
          <source>Query Helper Functions</source>
          <target state="translated">クエリヘルパー関数</target>
        </trans-unit>
        <trans-unit id="66032fdd58803323dede0c588cddb2e22526aec2" translate="yes" xml:space="preserve">
          <source>Query Helper Methods</source>
          <target state="translated">クエリヘルパーメソッド</target>
        </trans-unit>
        <trans-unit id="829622e620d24110d486610e3591f83842c426bb" translate="yes" xml:space="preserve">
          <source>Query grouping</source>
          <target state="translated">クエリのグループ化</target>
        </trans-unit>
        <trans-unit id="21d83f386987172fe1f4368e3d719752be8f983c" translate="yes" xml:space="preserve">
          <source>Query grouping allows you to create groups of WHERE clauses by enclosing them in parentheses. This will allow you to create queries with complex WHERE clauses. Nested groups are supported. Example:</source>
          <target state="translated">クエリのグループ化では、WHERE句を括弧で囲むことで、WHERE句のグループを作成することができます。これにより、複雑なWHERE句を持つクエリを作成することができます。入れ子になったグループもサポートされています。例</target>
        </trans-unit>
        <trans-unit id="231d68d00ee978a6af145a00bc2ac4a09f1c3dd5" translate="yes" xml:space="preserve">
          <source>Query string URLs can be optionally enabled, as described below.</source>
          <target state="translated">クエリ文字列 URL は、以下のようにオプションで有効にすることができます。</target>
        </trans-unit>
        <trans-unit id="d1a5454e64ebcb841d68a947cf0782c3370ef999" translate="yes" xml:space="preserve">
          <source>Quick Start: Example Code</source>
          <target state="translated">クイックスタート コード例</target>
        </trans-unit>
        <trans-unit id="189dccd42ef782cdda2a07bdc5b4b0d17314a738" translate="yes" xml:space="preserve">
          <source>Quick Start: Usage Examples</source>
          <target state="translated">クイックスタート。使用例</target>
        </trans-unit>
        <trans-unit id="6796bfaed6cc4c9f153367716a690616c11f6f0e" translate="yes" xml:space="preserve">
          <source>Quite simply it is a way for two computers to communicate over the internet using XML. One computer, which we will call the client, sends an XML-RPC &lt;strong&gt;request&lt;/strong&gt; to another computer, which we will call the server. Once the server receives and processes the request it will send back a &lt;strong&gt;response&lt;/strong&gt; to the client.</source>
          <target state="translated">簡単に言うと、2台のコンピューターがXMLを使用してインターネット経由で通信する方法です。クライアントと呼ぶ1台のコンピューターが、サーバーと呼ぶ別のコンピューターにXML-RPC &lt;strong&gt;要求&lt;/strong&gt;を送信します。サーバーはリクエストを受信して​​処理すると、クライアントに&lt;strong&gt;レスポンス&lt;/strong&gt;を返します。</target>
        </trans-unit>
        <trans-unit id="29669a473825a1ed2a74bd807c6f0e55fb033b49" translate="yes" xml:space="preserve">
          <source>Quotes are converted to correctly facing curly quote entities, except those that appear within tags.</source>
          <target state="translated">引用符は、タグ内に表示されるものを除いて、正しく向きを変えたカーリークォーテーションエンティティに変換されます。</target>
        </trans-unit>
        <trans-unit id="06576556d1ad802f247cad11ae748be47b70cd9c" translate="yes" xml:space="preserve">
          <source>R</source>
          <target state="translated">R</target>
        </trans-unit>
        <trans-unit id="2c2fbac0d1762ddad3792b41353d0be53e446f93" translate="yes" xml:space="preserve">
          <source>R - Image Resizing</source>
          <target state="translated">R-画像のリサイズ</target>
        </trans-unit>
        <trans-unit id="ce1d37451b650237e9e2cb98c3a530855b7bc1a2" translate="yes" xml:space="preserve">
          <source>R, C</source>
          <target state="translated">R,C</target>
        </trans-unit>
        <trans-unit id="98267337be36b1ce060ea0f7b920eafcffbf0eac" translate="yes" xml:space="preserve">
          <source>R, C, X R, C, S, W</source>
          <target state="translated">r,c,x r,c,s,w</target>
        </trans-unit>
        <trans-unit id="efa6d55fa2242cada2284c67c699a71c737ee781" translate="yes" xml:space="preserve">
          <source>R, C, X, W</source>
          <target state="translated">R,C,X,W</target>
        </trans-unit>
        <trans-unit id="2b69ea076bd364d53ad2617c3a0bf3387013220c" translate="yes" xml:space="preserve">
          <source>RC2</source>
          <target state="translated">RC2</target>
        </trans-unit>
        <trans-unit id="5332fd47b71cba0caac233b59d96506ebc96b135" translate="yes" xml:space="preserve">
          <source>RC2 is listed as supported by both MCrypt and OpenSSL. However, both drivers implement them differently and they are not portable. It is probably worth noting that we only found one obscure source confirming that it is MCrypt that is not properly implementing it.</source>
          <target state="translated">RC2 は MCrypt と OpenSSL の両方でサポートされていると記載されています。しかし、両方のドライバは異なる実装をしており、移植性がありません。MCrypt が適切に実装されていないのは MCrypt であることを確認している曖昧なソースを 1 つだけ見つけたことは注目に値するでしょう。</target>
        </trans-unit>
        <trans-unit id="55d0539ccbd60d4d2dbab5996f121bddbc2f76b9" translate="yes" xml:space="preserve">
          <source>RC4 / ARCFour</source>
          <target state="translated">RC4 ARCFour</target>
        </trans-unit>
        <trans-unit id="226b09de00f16c001a1657a08ff1929ad52824f8" translate="yes" xml:space="preserve">
          <source>RFC 1036</source>
          <target state="translated">RFC1036</target>
        </trans-unit>
        <trans-unit id="523835e6ade179c09600005a04d5d458890f86aa" translate="yes" xml:space="preserve">
          <source>RFC 1123</source>
          <target state="translated">RFC1123</target>
        </trans-unit>
        <trans-unit id="697070f17a70b2490138caae401415ac7b401fbd" translate="yes" xml:space="preserve">
          <source>RFC 2822</source>
          <target state="translated">RFC2822号</target>
        </trans-unit>
        <trans-unit id="00af815762ae4e4ed879f00aa53f3fc9fc817b37" translate="yes" xml:space="preserve">
          <source>RFC 822</source>
          <target state="translated">RFC八百二十二</target>
        </trans-unit>
        <trans-unit id="aa6227228abeab5e8356e397df5df665c3db863c" translate="yes" xml:space="preserve">
          <source>RFC 850</source>
          <target state="translated">RFC850</target>
        </trans-unit>
        <trans-unit id="fcae0f0748170cb96d8eea3124fa014bc103d039" translate="yes" xml:space="preserve">
          <source>RSS</source>
          <target state="translated">RSS</target>
        </trans-unit>
        <trans-unit id="d70a0d9ec163bbf64d41ed7f9df5dc8b8339cfd6" translate="yes" xml:space="preserve">
          <source>Random ordering is not currently supported in Oracle and will default to ASC instead.</source>
          <target state="translated">ランダム順序は現在オラクルではサポートされておらず、デフォルトはASCになります。</target>
        </trans-unit>
        <trans-unit id="4fbf166d944b53c79bc0a2ad910674dc35c75433" translate="yes" xml:space="preserve">
          <source>Raw headers sent via PHP&amp;rsquo;s native &lt;code&gt;header()&lt;/code&gt; function are also detected.</source>
          <target state="translated">PHPのネイティブ &lt;code&gt;header()&lt;/code&gt; 関数を介して送信された未加工のヘッダーも検出されます。</target>
        </trans-unit>
        <trans-unit id="0719515fa10ca1a5c91392c7a82f5b5e1dab2f95" translate="yes" xml:space="preserve">
          <source>Raw length (bytes)</source>
          <target state="translated">生の長さ(バイト</target>
        </trans-unit>
        <trans-unit id="d52be94635e2964e93c747072657176918abab73" translate="yes" xml:space="preserve">
          <source>Re-populating the form</source>
          <target state="translated">フォームの再作成</target>
        </trans-unit>
        <trans-unit id="85d823cb236bcaffb7d542d59ca28835012695e4" translate="yes" xml:space="preserve">
          <source>Read only property that will return php://input data as is.</source>
          <target state="translated">読み取り専用のプロパティで、php:/input のデータをそのまま返します。</target>
        </trans-unit>
        <trans-unit id="c12096624c449366d47a43a7c161822619af34b1" translate="yes" xml:space="preserve">
          <source>Reading flashdata variables is the same as reading regular session data through &lt;code&gt;$_SESSION&lt;/code&gt;:</source>
          <target state="translated">flashdata変数の読み取りは、 &lt;code&gt;$_SESSION&lt;/code&gt; を介した通常のセッションデータの読み取りと同じです。</target>
        </trans-unit>
        <trans-unit id="88295915a196d6f6fe25e9237067ce3655d6835c" translate="yes" xml:space="preserve">
          <source>Reads the specified directory and builds an array containing the filenames, filesize, dates, and permissions. Sub-folders contained within the specified path are only read if forced by sending the second parameter to FALSE, as this can be an intensive operation.</source>
          <target state="translated">指定したディレクトリを読み込み、 ファイル名、ファイルサイズ、日付、パーミッションを含む配列を作成します。指定したパス内に含まれるサブフォルダは、二番目のパラメータに FALSE を指定して強制的に読み込ませた場合のみ読み込まれます。</target>
        </trans-unit>
        <trans-unit id="aaa9b596a67b5c27cb129d65abff9897064541d0" translate="yes" xml:space="preserve">
          <source>Really fast. We challenge you to find a framework that has better performance than CodeIgniter.</source>
          <target state="translated">本当に速いです。CodeIgniterよりも性能の良いフレームワークを見つけることに挑戦します。</target>
        </trans-unit>
        <trans-unit id="2e68763191980267543d3b5d6c64852c675f6a3b" translate="yes" xml:space="preserve">
          <source>Receiving Trackbacks</source>
          <target state="translated">トラックバックを受け取る</target>
        </trans-unit>
        <trans-unit id="1dfd29eb594aaad4634034e909f7bcf9c1024b7a" translate="yes" xml:space="preserve">
          <source>Receiving Trackbacks is a little more complex than sending them, only because you will need a database table in which to store them, and you will need to validate the incoming trackback data. You are encouraged to implement a thorough validation process to guard against spam and duplicate data. You may also want to limit the number of Trackbacks you allow from a particular IP within a given span of time to further curtail spam. The process of receiving a Trackback is quite simple; the validation is what takes most of the effort.</source>
          <target state="translated">トラックバックを受信するのは、トラックバックを保存するためのデータベーステーブルが必要で、受信したトラックバックデータを検証する必要があるからです。スパムやデータの重複を防ぐために、徹底した検証プロセスを実施することをお勧めします。また、スパムをさらに抑制するために、特定のIPからのトラックバックを一定時間内に許可する数を制限することもできます。トラックバックの受け取り方はとても簡単です。</target>
        </trans-unit>
        <trans-unit id="ee3048cf3abf830901bbdcefc842547b234c2e17" translate="yes" xml:space="preserve">
          <source>Reconnecting / Keeping the Connection Alive</source>
          <target state="translated">再接続 接続を維持する</target>
        </trans-unit>
        <trans-unit id="b8e7bee7befad5a3b684f33b4e0d7910cdc065ea" translate="yes" xml:space="preserve">
          <source>Recursively reads a local folder and everything it contains (including sub-folders) and creates a mirror via FTP based on it. Whatever the directory structure of the original file path will be recreated on the server. You must supply a source path and a destination path:</source>
          <target state="translated">ローカルフォルダとそれに含まれるすべてのもの(サブフォルダを含む)を再帰的に読み込み、それに基づいてFTP経由でミラーを作成します。元のファイルパスのディレクトリ構造がどのようなものであっても、サーバー上で再作成されます。ソースパスとデスティネーションパスを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="42affc7fa074f424e7e34ffed7d1bed8056717fc" translate="yes" xml:space="preserve">
          <source>Redis Caching</source>
          <target state="translated">Redisのキャッシング</target>
        </trans-unit>
        <trans-unit id="f9b8e865640e06b20a33232843aa759b7afda588" translate="yes" xml:space="preserve">
          <source>Redis Driver</source>
          <target state="translated">Redis ドライバ</target>
        </trans-unit>
        <trans-unit id="383017a101185dac2ec31884acddd2144a1e299a" translate="yes" xml:space="preserve">
          <source>Redis is a storage engine typically used for caching and popular because of its high performance, which is also probably your reason to use the &amp;lsquo;redis&amp;rsquo; session driver.</source>
          <target state="translated">Redisは、通常はキャッシングに使用されるストレージエンジンであり、その高いパフォーマンスのために人気があります。これは、おそらく「redis」セッションドライバを使用する理由でもあります。</target>
        </trans-unit>
        <trans-unit id="ed13d61885624ad9be9ed5ddb8f545058d7fb173" translate="yes" xml:space="preserve">
          <source>Redis is an in-memory key-value store which can operate in LRU cache mode. To use it, you need &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;Redis server and phpredis PHP extension&lt;/a&gt;.</source>
          <target state="translated">Redisは、LRUキャッシュモードで動作できるメモリ内のKey-Valueストアです。それを使用するには、&lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;Redisサーバーとphpredis PHP拡張&lt;/a&gt;が必要です。</target>
        </trans-unit>
        <trans-unit id="f00f12608a0b425fd167d2b361e9c29ccf5d9cb1" translate="yes" xml:space="preserve">
          <source>Reduced string</source>
          <target state="translated">縮小された文字列</target>
        </trans-unit>
        <trans-unit id="b6e32cd43e578bd31d9efded580065d443b36f39" translate="yes" xml:space="preserve">
          <source>Reduces multiple instances of a particular character occurring directly after each other. Example:</source>
          <target state="translated">特定の文字の直後に発生する複数のインスタンスを削減します。例。</target>
        </trans-unit>
        <trans-unit id="db1c784524e1b54011a95823026161f7c8517fe0" translate="yes" xml:space="preserve">
          <source>Reference</source>
          <target state="translated">Reference</target>
        </trans-unit>
        <trans-unit id="16ca30da061462874ea52e277dd09139909a9d7d" translate="yes" xml:space="preserve">
          <source>Reference Guide</source>
          <target state="translated">リファレンスガイド</target>
        </trans-unit>
        <trans-unit id="db5031560aa28a043eb02205397f82a9431d1c2d" translate="yes" xml:space="preserve">
          <source>Reference to your controller&amp;rsquo;s instance</source>
          <target state="translated">コントローラのインスタンスへの参照</target>
        </trans-unit>
        <trans-unit id="bde0700a729d8a80196524e2a9685067073e1da8" translate="yes" xml:space="preserve">
          <source>Regardless of the type of processing you would like to perform (resizing, cropping, rotation, or watermarking), the general process is identical. You will set some preferences corresponding to the action you intend to perform, then call one of four available processing functions. For example, to create an image thumbnail you&amp;rsquo;ll do this:</source>
          <target state="translated">実行する処理の種類（サイズ変更、トリミング、回転、透かし）に関係なく、一般的なプロセスは同じです。実行するアクションに対応するいくつかの設定を行い、4つの利用可能な処理関数の1つを呼び出します。たとえば、画像のサムネイルを作成するには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="19475f1cc80ec04df366b9db4fdec3e362fd7dba" translate="yes" xml:space="preserve">
          <source>Regardless of which numbering style you choose to use, prefix your migration files with the migration number followed by an underscore and a descriptive name for the migration. For example:</source>
          <target state="translated">どの番号付けスタイルを使用するかにかかわらず、移行ファイルの前には移行番号の後にアンダースコアと移行のための説明的な名前を付けます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="b14614962537fcd996a02b5299871d01f8864a87" translate="yes" xml:space="preserve">
          <source>Regenerate session ID, optionally destroying the current session&amp;rsquo;s data.</source>
          <target state="translated">セッションIDを再生成し、オプションで現在のセッションのデータを破棄します。</target>
        </trans-unit>
        <trans-unit id="33777fcd1780bc89d7b623ef8f984bc3e9e18778" translate="yes" xml:space="preserve">
          <source>Register_globals</source>
          <target state="translated">Register_globals</target>
        </trans-unit>
        <trans-unit id="ab140354a34bd045ff52d42f722acc1c4ffada22" translate="yes" xml:space="preserve">
          <source>Regular Expressions</source>
          <target state="translated">正規表現</target>
        </trans-unit>
        <trans-unit id="46a1160849a6484c11c366aff57bd1f9535819e0" translate="yes" xml:space="preserve">
          <source>Regular Queries</source>
          <target state="translated">レギュラークエリ</target>
        </trans-unit>
        <trans-unit id="7d1c4f41aab255e798a1d84d96570b3cda805a91" translate="yes" xml:space="preserve">
          <source>Regular expressions are also supported (case-insensitive):</source>
          <target state="translated">正規表現もサポートされています(大文字小文字を区別しません)。</target>
        </trans-unit>
        <trans-unit id="4cc21fadba5f1a5adfd884fb98c8cbe831acc785" translate="yes" xml:space="preserve">
          <source>Reload your form and submit it with the word &amp;ldquo;test&amp;rdquo; as the username. You can see that the form field data was passed to your callback method for you to process.</source>
          <target state="translated">フォームを再読み込みし、「test」という単語をユーザー名として送信します。フォームフィールドのデータがコールバックメソッドに渡されて処理されていることがわかります。</target>
        </trans-unit>
        <trans-unit id="abe03db015b8a069576b6b3596030dc3105a83b6" translate="yes" xml:space="preserve">
          <source>Relocating your Application Directory</source>
          <target state="translated">アプリケーションディレクトリの再配置</target>
        </trans-unit>
        <trans-unit id="cc2123a0417cad077c2c0f091cc56d28883e54e5" translate="yes" xml:space="preserve">
          <source>Remapping Method Calls</source>
          <target state="translated">リマッピングメソッドの呼び出し</target>
        </trans-unit>
        <trans-unit id="8f6e0ec1b9f86bf71a85eba2527b081dd69714a4" translate="yes" xml:space="preserve">
          <source>Removes any leading/trailing slashes from a string. Example:</source>
          <target state="translated">文字列から先頭から末尾のスラッシュを削除します。例。</target>
        </trans-unit>
        <trans-unit id="e56bf50aae5184267dce293d1aa88793bc71725d" translate="yes" xml:space="preserve">
          <source>Removes any slashes from an array of strings.</source>
          <target state="translated">文字列の配列からスラッシュを削除します。</target>
        </trans-unit>
        <trans-unit id="8ec8b861b2088392539ff1dd42dfe3d4f0c9f9ec" translate="yes" xml:space="preserve">
          <source>Removes single and double quotes from a string. Example:</source>
          <target state="translated">文字列からシングルクォートとダブルクォートを削除します。例:文字列からシングルクォーテーションとダブルクォーテーションを削除します。</target>
        </trans-unit>
        <trans-unit id="3efa2221802c9cb0e073483e322217088134a586" translate="yes" xml:space="preserve">
          <source>Removing Session Data</source>
          <target state="translated">セッションデータの削除</target>
        </trans-unit>
        <trans-unit id="dddb2aa8163943a9723da809c67af9c8507d0d0e" translate="yes" xml:space="preserve">
          <source>Removing the index.php file</source>
          <target state="translated">index.phpファイルの削除</target>
        </trans-unit>
        <trans-unit id="54731c93017470b20002b6fce03e1db0dcae0d22" translate="yes" xml:space="preserve">
          <source>Removing the tag will not delete the cache immediately. It will have to expire normally.</source>
          <target state="translated">タグを削除してもすぐにキャッシュが削除されるわけではありません。普通に期限切れにする必要があります。</target>
        </trans-unit>
        <trans-unit id="687d4777e997cbab7c367c49c5a57ccb6179df53" translate="yes" xml:space="preserve">
          <source>Renames a table. Usage: See &lt;a href=&quot;#renaming-a-table&quot;&gt;Renaming a table&lt;/a&gt;.</source>
          <target state="translated">テーブルの名前を変更します。使用法：&lt;a href=&quot;#renaming-a-table&quot;&gt;テーブルの名前&lt;/a&gt;を変更するを参照してください。</target>
        </trans-unit>
        <trans-unit id="fdacc5fa715b112697ca43f3bdba6e956339dbfd" translate="yes" xml:space="preserve">
          <source>Renaming a table</source>
          <target state="translated">テーブルの名前を変更する</target>
        </trans-unit>
        <trans-unit id="a6b8f2b716417a2b5e56692f91a94ce9968c07ef" translate="yes" xml:space="preserve">
          <source>Renaming the Application Directory</source>
          <target state="translated">アプリケーションディレクトリの名前を変更する</target>
        </trans-unit>
        <trans-unit id="eea2d1b9d14e584f0ff93c2c94fe01e8327d5a04" translate="yes" xml:space="preserve">
          <source>Repair a Table</source>
          <target state="translated">テーブルの修理</target>
        </trans-unit>
        <trans-unit id="978cc3ef78e88c7f8985d747d1616bf2a8a7bd85" translate="yes" xml:space="preserve">
          <source>Repairs a database table.</source>
          <target state="translated">データベースのテーブルを修復します。</target>
        </trans-unit>
        <trans-unit id="a4a4bea23719e8667430817381e35aa65501d099" translate="yes" xml:space="preserve">
          <source>Repeated string</source>
          <target state="translated">繰り返し文字列</target>
        </trans-unit>
        <trans-unit id="1ce84ad34529de5db1acb895f701a0cdc358ba08" translate="yes" xml:space="preserve">
          <source>Replace &lt;em&gt;database_name&lt;/em&gt; with the name of the database you are looking for. This method is case sensitive.</source>
          <target state="translated">&lt;em&gt;database_name&lt;/em&gt;を、探しているデータベースの名前に置き換え&lt;em&gt;ます&lt;/em&gt;。この方法では大文字と小文字が区別されます。</target>
        </trans-unit>
        <trans-unit id="67b34e6235c07d7ba295f693ae858d9cdc3028fb" translate="yes" xml:space="preserve">
          <source>Replace &lt;em&gt;field_name&lt;/em&gt; with the name of the column you are looking for, and replace &lt;em&gt;table_name&lt;/em&gt; with the name of the table you are looking for.</source>
          <target state="translated">置き換え&lt;em&gt;FIELD_NAMEを&lt;/em&gt;探している列の名前で、そして置き換える&lt;em&gt;TABLE_NAMEを&lt;/em&gt;探しているテーブルの名前で。</target>
        </trans-unit>
        <trans-unit id="5af43b142589fa78ca3caef22e2936d26389883c" translate="yes" xml:space="preserve">
          <source>Replace &lt;em&gt;table_name&lt;/em&gt; with the name of the table you are looking for.</source>
          <target state="translated">&lt;em&gt;table_name&lt;/em&gt;を、探しているテーブルの名前に置き換えます。</target>
        </trans-unit>
        <trans-unit id="38c2486461d1ba795a519645c9c5adb0e24f6d6d" translate="yes" xml:space="preserve">
          <source>Replacing Core Classes</source>
          <target state="translated">コアクラスの置き換え</target>
        </trans-unit>
        <trans-unit id="810ebe465b3c75e7a4bc7cd0471c41186e3953e1" translate="yes" xml:space="preserve">
          <source>Replacing Native Libraries with Your Versions</source>
          <target state="translated">ネイティブライブラリを自分のバージョンに置き換える</target>
        </trans-unit>
        <trans-unit id="ea8e734ca69ac7f5d07b7cf2c65fbb92ede8ce4a" translate="yes" xml:space="preserve">
          <source>Request parameters must be placed into an array for transportation, and each parameter can be one of seven data types (strings, numbers, dates, etc.). If your parameters are something other than strings you will have to include the data type in the request array.</source>
          <target state="translated">リクエストパラメータは輸送のために配列に入れなければなりません。パラメータが文字列以外のものであれば、そのデータ型をリクエスト配列に含めなければなりません。</target>
        </trans-unit>
        <trans-unit id="4365328a2d2b3f846d7859b81aecb1c5acb9bb67" translate="yes" xml:space="preserve">
          <source>Reserved Names</source>
          <target state="translated">予約名</target>
        </trans-unit>
        <trans-unit id="8aed1375fbbdafaf6e2e4d298f80c20f7f6a4525" translate="yes" xml:space="preserve">
          <source>Reserved Routes</source>
          <target state="translated">予約ルート</target>
        </trans-unit>
        <trans-unit id="22ba4ac9e1c69e0b522434d7e571573266d5ff3e" translate="yes" xml:space="preserve">
          <source>Reserved method names</source>
          <target state="translated">予約済みメソッド名</target>
        </trans-unit>
        <trans-unit id="8e1a8467d0d64c688116d7ec90592f31bcae77ba" translate="yes" xml:space="preserve">
          <source>Resets the current Query Builder state. Useful when you want to build a query that can be cancelled under certain conditions.</source>
          <target state="translated">現在のクエリビルダの状態をリセットします。特定の条件でキャンセルできるクエリをビルドしたい場合に便利です。</target>
        </trans-unit>
        <trans-unit id="d22ca59a5d2409bd65b80e0a5031c4f5b192b021" translate="yes" xml:space="preserve">
          <source>Resetting Query Builder</source>
          <target state="translated">クエリビルダのリセット</target>
        </trans-unit>
        <trans-unit id="877c5c448963a2361c7623b45c75b78fdeaf3f62" translate="yes" xml:space="preserve">
          <source>Resetting Query Builder allows you to start fresh with your query without executing it first using a method like $this-&amp;gt;db-&amp;gt;get() or $this-&amp;gt;db-&amp;gt;insert(). Just like the methods that execute a query, this will &lt;em&gt;not&lt;/em&gt; reset items you&amp;rsquo;ve cached using &lt;a href=&quot;#query-builder-caching&quot;&gt;Query Builder Caching&lt;/a&gt;.</source>
          <target state="translated">クエリビルダーをリセットすると、最初に$ this-&amp;gt; db-&amp;gt; get（）や$ this-&amp;gt; db-&amp;gt; insert（）などのメソッドを使用してクエリを実行しなくても、クエリを新しく開始できます。クエリを実行するメソッドと同様に、これは&lt;a href=&quot;#query-builder-caching&quot;&gt;クエリビルダーのキャッシュ&lt;/a&gt;を使用してキャッシュしたアイテムをリセットし&lt;em&gt;ません&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit id="6e617e4fc9da3de9693eac5990613543b86c63f9" translate="yes" xml:space="preserve">
          <source>Response</source>
          <target state="translated">Response</target>
        </trans-unit>
        <trans-unit id="7a4542a36b20200d1609fafbac55ec1eacbd1171" translate="yes" xml:space="preserve">
          <source>Responses to a trackback request with a success message.</source>
          <target state="translated">成功メッセージ付きのトラックバックリクエストに応答します。</target>
        </trans-unit>
        <trans-unit id="72f8269888d659fbb8275751735a02e9b01304d0" translate="yes" xml:space="preserve">
          <source>Responses to a trackback request with an error message.</source>
          <target state="translated">エラーメッセージのあるトラックバックリクエストへの応答。</target>
        </trans-unit>
        <trans-unit id="b518fc40e05a73cdc358173b0fcb082fba71f0ba" translate="yes" xml:space="preserve">
          <source>Responses, however, usually contain multiple pieces of information. In order to accomplish this we must put the response into its own array so that the primary array continues to contain a single piece of data. Here&amp;rsquo;s an example showing how this might be accomplished:</source>
          <target state="translated">ただし、応答には通常、複数の情報が含まれます。これを実現するには、応答を独自の配列に入れて、プライマリ配列に1つのデータが含まれ続けるようにする必要があります。これを実現する方法を示す例を次に示します。</target>
        </trans-unit>
        <trans-unit id="5faa59d4bc3756040b8ce9e673c09f929e6ee9ba" translate="yes" xml:space="preserve">
          <source>Result</source>
          <target state="translated">Result</target>
        </trans-unit>
        <trans-unit id="5bc7c600217b40a6ca47985d6deea8e1c44c113b" translate="yes" xml:space="preserve">
          <source>Result (result)</source>
          <target state="translated">結果(結果</target>
        </trans-unit>
        <trans-unit id="a1ef177684370f66ad627722c69d73a572a505aa" translate="yes" xml:space="preserve">
          <source>Result Arrays</source>
          <target state="translated">結果配列</target>
        </trans-unit>
        <trans-unit id="bb0cb480f0bc884c05c25fd9d48b5c6665740456" translate="yes" xml:space="preserve">
          <source>Result Helper Methods</source>
          <target state="translated">結果ヘルパーメソッド</target>
        </trans-unit>
        <trans-unit id="cfbddb604d278b1fc025fb0baf559dd38baba6be" translate="yes" xml:space="preserve">
          <source>Result Rows</source>
          <target state="translated">結果の行</target>
        </trans-unit>
        <trans-unit id="bd4afc0073cac79bf136f8e1d922b83f76e969ad" translate="yes" xml:space="preserve">
          <source>Result:</source>
          <target state="translated">Result:</target>
        </trans-unit>
        <trans-unit id="5e01317d24d906ca08faaced5c94f1e090573665" translate="yes" xml:space="preserve">
          <source>Retains the specified session data key(s) as &amp;ldquo;flashdata&amp;rdquo; through the next request.</source>
          <target state="translated">指定したセッションデータキーを次のリクエストまで「flashdata」として保持します。</target>
        </trans-unit>
        <trans-unit id="7a72a0d4f3ea41c837e2682450201aa2d7680d74" translate="yes" xml:space="preserve">
          <source>Retrieve Field Metadata</source>
          <target state="translated">フィールドのメタデータを取得する</target>
        </trans-unit>
        <trans-unit id="0b12f6237cc875ebe93ad2118bd54e4b1b504953" translate="yes" xml:space="preserve">
          <source>Retrieve a list of all the database names.</source>
          <target state="translated">すべてのデータベース名のリストを取得します。</target>
        </trans-unit>
        <trans-unit id="ccfb9ae441623b907d1176eb5878ed4d5489bab1" translate="yes" xml:space="preserve">
          <source>Retrieve list of database names</source>
          <target state="translated">データベース名のリストを取得</target>
        </trans-unit>
        <trans-unit id="e89e345a99f65ec43dae9b6a6b5811d4fcba3a91" translate="yes" xml:space="preserve">
          <source>Retrieves any error messages if the &lt;code&gt;do_upload()&lt;/code&gt; method returned false. The method does not echo automatically, it returns the data so you can assign it however you need.</source>
          <target state="translated">&lt;code&gt;do_upload()&lt;/code&gt; メソッドがfalseを返した場合、エラーメッセージを取得します。このメソッドは自動的にエコーしません。データを返すので、必要に応じて割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="9f7403fddfbbf5a191b4e0d792e36cdcaced7b30" translate="yes" xml:space="preserve">
          <source>Retrieves the primary key of a table.</source>
          <target state="translated">テーブルの主キーを取得します。</target>
        </trans-unit>
        <trans-unit id="9a4feed9e9a17cb30a9c7599c62b5d3d21a2e4ef" translate="yes" xml:space="preserve">
          <source>Retrieving Session Data</source>
          <target state="translated">セッションデータの取得</target>
        </trans-unit>
        <trans-unit id="8246453c6e901bbc2e4288b43a47949404da068a" translate="yes" xml:space="preserve">
          <source>Return type:</source>
          <target state="translated">戻り値のタイプ。</target>
        </trans-unit>
        <trans-unit id="706ddd61a53f24cd452c812ffb18731a83b027cc" translate="yes" xml:space="preserve">
          <source>Return-Path can&amp;rsquo;t be used if you&amp;rsquo;ve configured &amp;lsquo;smtp&amp;rsquo; as your protocol.</source>
          <target state="translated">プロトコルとして「smtp」を設定している場合、Return-Pathは使用できません。</target>
        </trans-unit>
        <trans-unit id="8fc379994165bd2a3baea3a660ec9f267bacd123" translate="yes" xml:space="preserve">
          <source>Returning views as data</source>
          <target state="translated">ビューをデータとして返す</target>
        </trans-unit>
        <trans-unit id="4edcafd2513c14fd0273e114543eaceaf329b624" translate="yes" xml:space="preserve">
          <source>Returns FALSE if any value provided in a comma separated list is not a valid email.</source>
          <target state="translated">カンマ区切りのリストで指定した値が有効なメールではない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="1e1b80eccb55b2e8c81f8022791b50af79f11fb6" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the download does not execute successfully (including if PHP does not have permission to write the local file).</source>
          <target state="translated">ダウンロードが正常に実行されなかった場合 (PHP がローカルファイルへの書き込み権限を持っていない場合を含む)に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="f1da0eefce208c0ee36b2d93364a62013a28df64" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element contains anything other than a decimal number.</source>
          <target state="translated">form 要素に 10 進数以外の要素が含まれている場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="37cdb284843240498c69b8466bedfb8a18f0b2e6" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element contains anything other than a natural number, but not zero: 1, 2, 3, etc.</source>
          <target state="translated">form 要素に自然数以外の値が含まれている場合に FALSE を返します。1,2,3 など。</target>
        </trans-unit>
        <trans-unit id="9bb294c3705c3ce62803c27acab18acc5c89b903" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element contains anything other than a natural number: 0, 1, 2, 3, etc.</source>
          <target state="translated">form 要素に 0、1、2、3 などの自然数以外のものが含まれている場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="36233b5608b5e3ddd9f25381001a49ea395f5a60" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element contains anything other than alpha-numeric characters or spaces. Should be used after trim to avoid spaces at the beginning or end.</source>
          <target state="translated">form 要素に英数字やスペース以外の文字が含まれている場合に FALSE を返します。トリムの後に使用して、最初や最後にスペースを入れないようにします。</target>
        </trans-unit>
        <trans-unit id="b07e99f77d43f93d8680cd2dd589e64d53dd0b1b" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element contains anything other than alpha-numeric characters, underscores or dashes.</source>
          <target state="translated">form 要素に英数字、アンダースコア、ダッシュ以外の文字が含まれている場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="e6e8a71ba7643db7710bb8015cc89d6386bf2dcf" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element contains anything other than alpha-numeric characters.</source>
          <target state="translated">form 要素に英数字以外の文字が含まれている場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="dfc22dab1f4543d51d47c17bc6f8f08bf80a13e7" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element contains anything other than alphabetical characters.</source>
          <target state="translated">form 要素にアルファベット以外の文字が含まれている場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="dbd758b87449fd7ad346cc9f5706be6acaa220e1" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element contains anything other than an integer.</source>
          <target state="translated">form 要素に整数以外のものが含まれている場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="c50d2a73e38640c40a0ce02170f0bda82346b77e" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element contains anything other than numeric characters.</source>
          <target state="translated">form 要素に数値以外の文字が含まれている場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="292867b545123524aa2224c583743a29fd7f42d5" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element does not contain a valid URL.</source>
          <target state="translated">form 要素に有効な URL が含まれていない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="34c39736e583555f17011ebcb2c090a1320d4554" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element does not contain a valid email address.</source>
          <target state="translated">form 要素に有効なメールアドレスが含まれていない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="7ff3536c8ca7f4e517a027c063b13d5719a15ef1" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element does not differ from the one in the parameter.</source>
          <target state="translated">form 要素がパラメータの要素と異なっていない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="b0b26c21715e5a573b8d4371925f95e225c19b89" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element does not match the one in the parameter.</source>
          <target state="translated">form 要素がパラメータに含まれる要素と一致しない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="a0a4349cf963e5712511e905d7e63f625da84307" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element does not match the regular expression.</source>
          <target state="translated">form 要素が正規表現にマッチしない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="8e4906fa336050c57d806d5ade6107df867125e8" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is empty.</source>
          <target state="translated">form 要素が空の場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="88dda965b7f19c5bc141510f2aacbba93c82789a" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is greater than or equal to the parameter value or not numeric.</source>
          <target state="translated">form 要素がパラメータ値以上であるか、数値ではない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="6c86e80da46730bad4d45601adbddee44fcca21e" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is greater than the parameter value, or not numeric.</source>
          <target state="translated">form 要素の値がパラメータの値よりも大きい場合、あるいは数値でない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="bee939bdb7f65f557cb9d9a5879bb75fd3d4ca05" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is less than or equal to the parameter value or not numeric.</source>
          <target state="translated">form 要素がパラメータ値以下であるか、数値ではない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="d8bc592e65498003254116f8fc6d1d57adbf6672" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is less than the parameter value, or not numeric.</source>
          <target state="translated">form 要素がパラメータ値よりも小さい場合、あるいは数値ではない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="f44792463d5c426214784ea33a5ef31cd64a81c4" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is longer than the parameter value.</source>
          <target state="translated">form 要素がパラメータの値よりも長い場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="853a8a10e67a1f55afeaa37a51bc4dc30f0a1503" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is not exactly the parameter value.</source>
          <target state="translated">form 要素のパラメータ値が正確でない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="30e4443b3e4cdcfbd0c2e9df6b41a0f602b41f23" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is not unique to the table and field name in the parameter. Note: This rule requires &lt;a href=&quot;../database/query_builder&quot;&gt;Query Builder&lt;/a&gt; to be enabled in order to work.</source>
          <target state="translated">フォーム要素がパラメータ内のテーブルおよびフィールド名に対して一意でない場合は、FALSEを返します。注：このルールを機能させるには、&lt;a href=&quot;../database/query_builder&quot;&gt;クエリビルダー&lt;/a&gt;を有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="e54eb3eaea8c9c6cd34c1b2b7c252a85d7f5ef41" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is not within a predetermined list.</source>
          <target state="translated">form 要素が所定のリスト内にない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="80e1cb25395204b47e77c6dcf0ee8536d487cf1d" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the form element is shorter than the parameter value.</source>
          <target state="translated">form 要素がパラメータの値よりも短い場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="08388a3af39a6bc71860c7beb26774e131b9dc91" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the supplied IP address is not valid. Accepts an optional parameter of &amp;lsquo;ipv4&amp;rsquo; or &amp;lsquo;ipv6&amp;rsquo; to specify an IP format.</source>
          <target state="translated">指定されたIPアドレスが無効な場合はFALSEを返します。オプションのパラメーター 'ipv4'または 'ipv6'を受け入れて、IP形式を指定します。</target>
        </trans-unit>
        <trans-unit id="20853aa6b9850e8052eb4adf12753ca6413c9e0b" translate="yes" xml:space="preserve">
          <source>Returns FALSE if the supplied string contains anything other than valid Base64 characters.</source>
          <target state="translated">指定した文字列に有効な Base64 文字以外が含まれている場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="111916b48d2a6e4bc110dd66e3aba5e7571fc06a" translate="yes" xml:space="preserve">
          <source>Returns TRUE (boolean) if a particular row in the cart contains options. This method is designed to be used in a loop with &lt;code&gt;contents()&lt;/code&gt;, since you must pass the rowid to this method, as shown in the Displaying the Cart example above.</source>
          <target state="translated">カートの特定の行にオプションが含まれている場合は、TRUE（ブール値）を返します。上記のカートの表示の例に示すように、ROWIDをこのメソッドに渡す必要があるため、このメソッドは、 &lt;code&gt;contents()&lt;/code&gt; のループで使用するように設計されています。</target>
        </trans-unit>
        <trans-unit id="3b16f8d884e7df3eb266a0616343f4ef792340fe" translate="yes" xml:space="preserve">
          <source>Returns TRUE if a function exists and is usable, FALSE otherwise.</source>
          <target state="translated">関数が存在していて使用可能な場合に TRUE を、そうでない場合に FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="b3e0a081e72492e502ac9347bd57061d13a98bdc" translate="yes" xml:space="preserve">
          <source>Returns TRUE if a secure (HTTPS) connection is used and FALSE in any other case (including non-HTTP requests).</source>
          <target state="translated">安全な (HTTPS)接続を使用している場合は TRUE、それ以外の場合 (HTTP 以外のリクエストを含む)は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="91b3f1826cccb23ca9af7e05cdb181df2861eef5" translate="yes" xml:space="preserve">
          <source>Returns TRUE if the application is run through the command line and FALSE if not.</source>
          <target state="translated">アプリケーションをコマンドラインから実行している場合は TRUE、そうでない場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="30005bd5975ea71ce2c4f29729fccd65696866b8" translate="yes" xml:space="preserve">
          <source>Returns TRUE/FALSE (boolean) if the user agent is a known mobile device.</source>
          <target state="translated">ユーザーエージェントが既知のモバイルデバイスである場合、TRUEFALSE(ブール値)を返します。</target>
        </trans-unit>
        <trans-unit id="a7d551fb6cfbf99632ed1341549efde5cc5fbbbd" translate="yes" xml:space="preserve">
          <source>Returns TRUE/FALSE (boolean) if the user agent is a known robot.</source>
          <target state="translated">ユーザエージェントが既知のロボットである場合、TRUEFALSE (boolean)を返します。</target>
        </trans-unit>
        <trans-unit id="a6b7ac93368be83065b276b5f1867d8ee6a0fb83" translate="yes" xml:space="preserve">
          <source>Returns TRUE/FALSE (boolean) if the user agent is a known web browser.</source>
          <target state="translated">ユーザーエージェントが既知のウェブブラウザである場合、TRUEFALSE(ブール値)を返します。</target>
        </trans-unit>
        <trans-unit id="0b7494c5f61b32958d167e9589aeee278f8a325f" translate="yes" xml:space="preserve">
          <source>Returns TRUE/FALSE (boolean) if the user agent was referred from another site.</source>
          <target state="translated">ユーザーエージェントが他のサイトから紹介された場合、TRUEFALSE (boolean)を返します。</target>
        </trans-unit>
        <trans-unit id="e8dc76c8437cbd31cf4c903c1a4689cc124fd1ac" translate="yes" xml:space="preserve">
          <source>Returns a &amp;ldquo;pagination&amp;rdquo; bar, containing the generated links or an empty string if there&amp;rsquo;s just a single page.</source>
          <target state="translated">生成されたリンクを含む「ページ付け」バー、または1ページしかない場合は空の文字列を返します。</target>
        </trans-unit>
        <trans-unit id="fe18af85d570e9644fab2f63d8d8a6c590cc053f" translate="yes" xml:space="preserve">
          <source>Returns a list of dates within a specified period.</source>
          <target state="translated">指定した期間内の日付のリストを返します。</target>
        </trans-unit>
        <trans-unit id="3256e23421c5beb804b1fd511636a2d8faac660d" translate="yes" xml:space="preserve">
          <source>Returns a reference to the &lt;code&gt;$_SESSION&lt;/code&gt; array.</source>
          <target state="translated">&lt;code&gt;$_SESSION&lt;/code&gt; 配列への参照を返します。</target>
        </trans-unit>
        <trans-unit id="7b06a1676a4dec8a6a1f6b31674d7d9454fbc06d" translate="yes" xml:space="preserve">
          <source>Returns a single item from the response data array.</source>
          <target state="translated">レスポンスデータ配列から単一の項目を返します。</target>
        </trans-unit>
        <trans-unit id="4dcb8c06a8bccf4d8624cc35b4d47b65937e738c" translate="yes" xml:space="preserve">
          <source>Returns a single member of the request headers array or NULL if the searched header is not found.</source>
          <target state="translated">リクエストヘッダの配列の単一のメンバを返すか、 検索したヘッダが見つからなかった場合は NULL を返します。</target>
        </trans-unit>
        <trans-unit id="8ad235c5a2a87b701c7d5c7a5be24dde46f43c6a" translate="yes" xml:space="preserve">
          <source>Returns a single row from your query results. The first parameter is the row number of the results. The second parameter is the class name to instantiate.</source>
          <target state="translated">クエリ結果から1つの行を返します。最初のパラメータは、結果の行番号です。2 番目のパラメータは、インスタンス化するクラス名です。</target>
        </trans-unit>
        <trans-unit id="97134fdfbf618bc1d205882ae567e9e5bfb8e1d5" translate="yes" xml:space="preserve">
          <source>Returns a string containing any server messages, the email headers, and the email message. Useful for debugging.</source>
          <target state="translated">任意のサーバーメッセージ、電子メールヘッダ、電子メールメッセージを含む文字列を返します。デバッグに便利です。</target>
        </trans-unit>
        <trans-unit id="afad8b2e2fbeb3945e7ee78ea5c05b1328fabdd3" translate="yes" xml:space="preserve">
          <source>Returns a string containing the full user agent string. Typically it will be something like this:</source>
          <target state="translated">完全なユーザーエージェント文字列を含む文字列を返します。通常は以下のような文字列になります。</target>
        </trans-unit>
        <trans-unit id="dadae351506295373bd4528b2716daa99eac9c59" translate="yes" xml:space="preserve">
          <source>Returns a string containing the generated table. Accepts an optional parameter which can be an array or a database result object.</source>
          <target state="translated">生成されたテーブルを含む文字列を返します。オプションのパラメータとして、配列またはデータベースの結果オブジェクトを受け取ることができます。</target>
        </trans-unit>
        <trans-unit id="4c973767eef86062deb79004f0eb209c42bed10d" translate="yes" xml:space="preserve">
          <source>Returns a string containing the name of the mobile device viewing your site.</source>
          <target state="translated">サイトを閲覧しているモバイルデバイスの名前を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="4208df55e9bd9fad91164551a1448fad177e62f3" translate="yes" xml:space="preserve">
          <source>Returns a string containing the name of the robot viewing your site.</source>
          <target state="translated">サイトを閲覧しているロボットの名前を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="f3939f64f5f8bc03fa0412ba4d72e53e8af2ba78" translate="yes" xml:space="preserve">
          <source>Returns a string containing the name of the web browser viewing your site.</source>
          <target state="translated">サイトを閲覧しているウェブブラウザの名前を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="017f11fc8a8f2eba41997001117ccd0bd337a2bf" translate="yes" xml:space="preserve">
          <source>Returns a string containing the platform viewing your site (Linux, Windows, OS X, etc.).</source>
          <target state="translated">サイトを閲覧しているプラットフォーム(Linux、Windows、OS Xなど)を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e4ddacfafa562caa43e4c8269bd0b3c0314a2977" translate="yes" xml:space="preserve">
          <source>Returns a string containing the version number of the web browser viewing your site.</source>
          <target state="translated">サイトを閲覧しているウェブブラウザのバージョン番号を含む文字列を返します。</target>
        </trans-unit>
        <trans-unit id="948aac3ed210d2698b9e0d4b4b202dc79d9df360" translate="yes" xml:space="preserve">
          <source>Returns a string with the complete URI. For example, if this is your full URL:</source>
          <target state="translated">完全な URI を含む文字列を返します。例えば、これがあなたの完全なURLである場合。</target>
        </trans-unit>
        <trans-unit id="b4f4a8ec8f5ec6f8357d8faa2224922f11ee2023" translate="yes" xml:space="preserve">
          <source>Returns a validation error message from the &lt;a href=&quot;../libraries/form_validation&quot;&gt;Form Validation Library&lt;/a&gt;, associated with the specified field name. You can optionally specify opening and closing tag(s) to put around the error message.</source>
          <target state="translated">指定されたフィールド名に関連付けられた、&lt;a href=&quot;../libraries/form_validation&quot;&gt;フォーム検証ライブラリ&lt;/a&gt;から検証エラーメッセージを返します。オプションで、エラーメッセージを囲む開始タグと終了タグを指定できます。</target>
        </trans-unit>
        <trans-unit id="48e11b2f66e3a7a91a4bc939dce082d71f7ec577" translate="yes" xml:space="preserve">
          <source>Returns all currently available package paths.</source>
          <target state="translated">現在利用可能なすべてのパッケージパスを返します。</target>
        </trans-unit>
        <trans-unit id="78a98b973db25e38afee76a3b8316c596bc03b0c" translate="yes" xml:space="preserve">
          <source>Returns all detected errors formatted as a string.</source>
          <target state="translated">検出されたすべてのエラーを文字列形式で返します。</target>
        </trans-unit>
        <trans-unit id="ae09a9bd7bb562dc124c326812c700d4b8dee16b" translate="yes" xml:space="preserve">
          <source>Returns all error messages (as returned from error_array()) formatted as a string and separated by a newline character.</source>
          <target state="translated">すべてのエラーメッセージ (error_array()から返されたもの)を、 改行文字で区切った文字列形式で返します。</target>
        </trans-unit>
        <trans-unit id="9c3dfadfefab5a39c6c8b638774c324bf0683ba0" translate="yes" xml:space="preserve">
          <source>Returns an array containing all &amp;ldquo;userdata&amp;rdquo; items.</source>
          <target state="translated">すべての「userdata」アイテムを含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="e3c779c0ec0d53ad63a13c6ca11c9d50e16f038d" translate="yes" xml:space="preserve">
          <source>Returns an array containing data for the item matching the specified row ID, or FALSE if no such item exists.</source>
          <target state="translated">指定した行 ID に一致する項目のデータを含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="06223803a163b515f2083d6dd9017138b34f389b" translate="yes" xml:space="preserve">
          <source>Returns an array containing everything in the cart. You can sort the order by which the array is returned by passing it TRUE where the contents will be sorted from newest to oldest, otherwise it is sorted from oldest to newest.</source>
          <target state="translated">カート内のすべてのものを含む配列を返します。TRUE を渡すことで、返される配列の順番をソートすることができます。</target>
        </trans-unit>
        <trans-unit id="d29322746350ab31636416c3b2d52d137b8a1205" translate="yes" xml:space="preserve">
          <source>Returns an array containing the URI segments. For example:</source>
          <target state="translated">URI セグメントを含む配列を返します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="0bdb27c34f22f6f101f7717546458bd61545732e" translate="yes" xml:space="preserve">
          <source>Returns an array containing the field names in the result set.</source>
          <target state="translated">結果セットのフィールド名を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="46bb3ab68800d0e55c256519219cf95d96d20dc7" translate="yes" xml:space="preserve">
          <source>Returns an array containing the field names. This query can be called two ways:</source>
          <target state="translated">フィールド名を含む配列を返します。このクエリは2つの方法で呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="1de6041e701af7fc02604dc8d62093525273a691" translate="yes" xml:space="preserve">
          <source>Returns an array containing the names of all the tables in the database you are currently connected to. Example:</source>
          <target state="translated">現在接続しているデータベース内のすべてのテーブル名を含む配列を返します。例。</target>
        </trans-unit>
        <trans-unit id="28420e4675c3bc2e638830caf0aa2338fc177ef7" translate="yes" xml:space="preserve">
          <source>Returns an array containing your smiley images wrapped in a clickable link. You must supply the URL to your smiley folder and a field id or field alias.</source>
          <target state="translated">スマイリー画像をクリック可能なリンクに包んだ配列を返します。スマイリーフォルダへの URL と、フィールド ID またはフィールドエイリアスを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="f95fa14e6c6cf5665419fc18041a2c269d0ab02d" translate="yes" xml:space="preserve">
          <source>Returns an array of HTTP request headers. Useful if running in a non-Apache environment where &lt;a href=&quot;http://php.net/apache_request_headers&quot;&gt;apache_request_headers()&lt;/a&gt; will not be supported.</source>
          <target state="translated">HTTPリクエストヘッダーの配列を返します。&lt;a href=&quot;http://php.net/apache_request_headers&quot;&gt;apache_request_headers（）&lt;/a&gt;がサポートされていない非Apache環境で実行する場合に役立ちます。</target>
        </trans-unit>
        <trans-unit id="0989ed38269bec1ff9bb562f54e49bf149532239" translate="yes" xml:space="preserve">
          <source>Returns an array of character sets accepted by the user agent.</source>
          <target state="translated">ユーザーエージェントが受け入れた文字セットの配列を返します。</target>
        </trans-unit>
        <trans-unit id="97a3c0a017a27392ad0f439469fbeb2ec35f52e7" translate="yes" xml:space="preserve">
          <source>Returns an array of database names:</source>
          <target state="translated">データベース名の配列を返します。</target>
        </trans-unit>
        <trans-unit id="060865482e27be33b328a8f2a3a63fb817f21477" translate="yes" xml:space="preserve">
          <source>Returns an array of day names (Sunday, Monday, etc.) based on the type provided. Options: long, short, abr. If no &lt;code&gt;$day_type&lt;/code&gt; is provided (or if an invalid type is provided) this method will return the &amp;ldquo;abbreviated&amp;rdquo; style.</source>
          <target state="translated">指定されたタイプに基づいて、曜日名（日曜日、月曜日など）の配列を返します。オプション：長い、短い、abr。 &lt;code&gt;$day_type&lt;/code&gt; が指定されていない場合（または無効なタイプが指定されている場合）、このメソッドは「省略」スタイルを返します。</target>
        </trans-unit>
        <trans-unit id="ea64cfe69e2357ef261d4624e3270d29000e1342" translate="yes" xml:space="preserve">
          <source>Returns an array of languages supported by the user agent.</source>
          <target state="translated">ユーザーエージェントがサポートする言語の配列を返します。</target>
        </trans-unit>
        <trans-unit id="45e4edee5a91015537e6d1324c45bd4977a11b0c" translate="yes" xml:space="preserve">
          <source>Returns an array of objects containing field information.</source>
          <target state="translated">フィールド情報を含むオブジェクトの配列を返します。</target>
        </trans-unit>
        <trans-unit id="7fbf8508a41b7d022e3939bdc195120a113c5d44" translate="yes" xml:space="preserve">
          <source>Returns an array of options for a particular product. This method is designed to be used in a loop with &lt;code&gt;contents()&lt;/code&gt;, since you must pass the rowid to this method, as shown in the Displaying the Cart example above.</source>
          <target state="translated">特定の製品のオプションの配列を返します。上記のカートの表示の例に示すように、ROWIDをこのメソッドに渡す必要があるため、このメソッドは、 &lt;code&gt;contents()&lt;/code&gt; のループで使用するように設計されています。</target>
        </trans-unit>
        <trans-unit id="067f3ba039414ae28a3f7539626c7749b80ae4dd" translate="yes" xml:space="preserve">
          <source>Returns an error message as a string if your request failed for some reason.</source>
          <target state="translated">リクエストが何らかの理由で失敗した場合に、エラーメッセージを文字列で返します。</target>
        </trans-unit>
        <trans-unit id="b65ef08a4bfeb41b2fab53aea27ea247859b87ad" translate="yes" xml:space="preserve">
          <source>Returns boolean TRUE if the installed version of PHP is equal to or greater than the supplied version number. Returns FALSE if the installed version of PHP is lower than the supplied version number.</source>
          <target state="translated">インストールされている PHP のバージョンが、指定したバージョン番号と同じかそれ以上である場合に TRUE を返します。インストールされている PHP のバージョンが指定したバージョンよりも低い場合は FALSE を返します。</target>
        </trans-unit>
        <trans-unit id="ff4571516aaa7cebe525ff6ab5ea430232950dad" translate="yes" xml:space="preserve">
          <source>Returns error messages formatted in HTML or an empty string if there are no errors.</source>
          <target state="translated">エラーメッセージを HTML 形式で返すか、エラーがない場合は空文字列を返します。</target>
        </trans-unit>
        <trans-unit id="e6875a0a61fa3c565cf4d8141bacdbfaa8ae68e5" translate="yes" xml:space="preserve">
          <source>Returns raw tests results data.</source>
          <target state="translated">生のテスト結果データを返します。</target>
        </trans-unit>
        <trans-unit id="9ac9d7d0c33138e2c4b1ee6e328109136990db08" translate="yes" xml:space="preserve">
          <source>Returns the &lt;code&gt;$_SERVER['REQUEST_METHOD']&lt;/code&gt;, with the option to set it in uppercase or lowercase.</source>
          <target state="translated">&lt;code&gt;$_SERVER['REQUEST_METHOD']&lt;/code&gt; 返します。大文字または小文字に設定するオプションがあります。</target>
        </trans-unit>
        <trans-unit id="2688199947de41667e2debddc980ae17dfa013f9" translate="yes" xml:space="preserve">
          <source>Returns the CSRF hash value. Useful in combination with &lt;code&gt;get_csrf_token_name()&lt;/code&gt; for manually building forms or sending valid AJAX POST requests.</source>
          <target state="translated">CSRFハッシュ値を返します。 &lt;code&gt;get_csrf_token_name()&lt;/code&gt; と組み合わせて使用すると、フォームを手動で作成したり、有効なAJAX POSTリクエストを送信したりするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="913b25fb530dd0541b3347c9e19275eab20fb5d2" translate="yes" xml:space="preserve">
          <source>Returns the CSRF token name (the &lt;code&gt;$config['csrf_token_name']&lt;/code&gt; value).</source>
          <target state="translated">CSRFトークン名（ &lt;code&gt;$config['csrf_token_name']&lt;/code&gt; 値）を返します。</target>
        </trans-unit>
        <trans-unit id="6d528edcfeecb54fac89f44fd1c8f647a3021b7c" translate="yes" xml:space="preserve">
          <source>Returns the Content-Type HTTP header that&amp;rsquo;s currently in use, excluding the character set value.</source>
          <target state="translated">文字セット値を除いて、現在使用されているContent-Type HTTPヘッダーを返します。</target>
        </trans-unit>
        <trans-unit id="49af019525d66cd4756665240ae1dadc04f7f13a" translate="yes" xml:space="preserve">
          <source>Returns the IP address for the current user. If the IP address is not valid, the method will return &amp;lsquo;0.0.0.0&amp;rsquo;:</source>
          <target state="translated">現在のユーザーのIPアドレスを返します。IPアドレスが有効でない場合、メソッドは「0.0.0.0」を返します。</target>
        </trans-unit>
        <trans-unit id="a4626a721dd370a79f9860b4261c607db02cbf36" translate="yes" xml:space="preserve">
          <source>Returns the URI segments of any page that contains this function. For example, if your URL was this:</source>
          <target state="translated">この関数を含む任意のページのURIセグメントを返します。例えば、URLがこれだったとします。</target>
        </trans-unit>
        <trans-unit id="1bfda37bdd8e058e5035b38ac17a8f666461beec" translate="yes" xml:space="preserve">
          <source>Returns the Zip-compressed file data. Generally you will not need this method unless you want to do something unique with the data. Example:</source>
          <target state="translated">Zip で圧縮されたファイルデータを返します。一般的に、データに独自の処理をしたい場合を除き、このメソッドは必要ありません。例</target>
        </trans-unit>
        <trans-unit id="255b0bb5661d0de60d7af5ad56e2f12a05b88fa7" translate="yes" xml:space="preserve">
          <source>Returns the current time as a UNIX timestamp, referenced either to your server&amp;rsquo;s local time or any PHP supported timezone, based on the &amp;ldquo;time reference&amp;rdquo; setting in your config file. If you do not intend to set your master time reference to any other PHP supported timezone (which you&amp;rsquo;ll typically do if you run a site that lets each user set their own timezone settings) there is no benefit to using this function over PHP&amp;rsquo;s &lt;code&gt;time()&lt;/code&gt; function.</source>
          <target state="translated">構成ファイルの「時間参照」設定に基づいて、サーバーのローカル時間またはPHPでサポートされているタイムゾーンのいずれかを参照して、現在の時刻をUNIXタイムスタンプとして返​​します。マスタータイムリファレンスを他のPHPがサポートするタイムゾーンに設定するつもりがない場合（通常は、各ユーザーが独自のタイムゾーン設定を設定できるサイトを実行する場合に行います）、PHPの &lt;code&gt;time()&lt;/code&gt; よりもこの関数を使用してもメリットはありません（）関数。</target>
        </trans-unit>
        <trans-unit id="6f0c1f89cd3a46875889eb9d3b199a2f25b1b7e0" translate="yes" xml:space="preserve">
          <source>Returns the data contained in the file specified in the path.</source>
          <target state="translated">パスで指定したファイルに含まれるデータを返します。</target>
        </trans-unit>
        <trans-unit id="d1cef711c6f0a314241023713ad1c7b88c9c5c54" translate="yes" xml:space="preserve">
          <source>Returns the entire result set as an array of instances of the class requested. The only parameter is the name of the class to instantiate.</source>
          <target state="translated">要求されたクラスのインスタンスの配列として結果セット全体を返します。パラメータは、インスタンス化するクラス名のみです。</target>
        </trans-unit>
        <trans-unit id="f7be90358ed8598ef13f936cccd190069addc875" translate="yes" xml:space="preserve">
          <source>Returns the error message for a specific field, optionally adding a prefix and/or suffix to it (usually HTML tags).</source>
          <target state="translated">特定のフィールドのエラーメッセージを返します。オプションで、そのフィールドに接頭辞や接尾辞(通常はHTMLタグ)を追加します。</target>
        </trans-unit>
        <trans-unit id="35d368eca192e8cd89b9d6c29aa83fbe419e1223" translate="yes" xml:space="preserve">
          <source>Returns the error messages as an array.</source>
          <target state="translated">エラーメッセージを配列で返します。</target>
        </trans-unit>
        <trans-unit id="8d8d4dd24c0ec0db09e1437edf3b9ab5c4318432" translate="yes" xml:space="preserve">
          <source>Returns the first row from the result set.</source>
          <target state="translated">結果セットの最初の行を返します。</target>
        </trans-unit>
        <trans-unit id="999e27b6671dd7d2f47f234f351edad55f05d8d2" translate="yes" xml:space="preserve">
          <source>Returns the full URL (including segments) of the page being currently viewed.</source>
          <target state="translated">現在閲覧中のページの完全な URL (セグメントを含む)を返します。</target>
        </trans-unit>
        <trans-unit id="a1106a8871d87835442f84a694e81c25d402e2b2" translate="yes" xml:space="preserve">
          <source>Returns the last query that was executed.</source>
          <target state="translated">最後に実行されたクエリを返します。</target>
        </trans-unit>
        <trans-unit id="3a18f2c3e1e8e08a2afc0b517c5ea89bf4df0b35" translate="yes" xml:space="preserve">
          <source>Returns the last query that was run (the query string, not the result). Example:</source>
          <target state="translated">最後に実行したクエリ (結果ではなくクエリ文字列)を返します。例。</target>
        </trans-unit>
        <trans-unit id="f48d4ee7ace672a8d31e3578724081f0e83658b7" translate="yes" xml:space="preserve">
          <source>Returns the last row from the result set.</source>
          <target state="translated">結果セットの最後の行を返します。</target>
        </trans-unit>
        <trans-unit id="abb7d8dee19e793f676096473edfa6d2b03b47fb" translate="yes" xml:space="preserve">
          <source>Returns the next row from the result set.</source>
          <target state="translated">結果セットの次の行を返します。</target>
        </trans-unit>
        <trans-unit id="134c8234fc7af35957d98cd91e1b342dc39cfdba" translate="yes" xml:space="preserve">
          <source>Returns the number of days in a given month/year. Takes leap years into account.</source>
          <target state="translated">指定した月年の日数を返します。うるう年を考慮します。</target>
        </trans-unit>
        <trans-unit id="cda57fc241c8e55bc61efa89c669209b32641369" translate="yes" xml:space="preserve">
          <source>Returns the number of fields in the result set.</source>
          <target state="translated">結果セットのフィールド数を返します。</target>
        </trans-unit>
        <trans-unit id="02cb02e7515ebf1b38270c239ce9aae2014de344" translate="yes" xml:space="preserve">
          <source>Returns the number of rows &lt;em&gt;changed&lt;/em&gt; by the last executed query.</source>
          <target state="translated">最後に実行されたクエリによって&lt;em&gt;変更さ&lt;/em&gt;れた行数を返します。</target>
        </trans-unit>
        <trans-unit id="9f48a3ee30c9982ca26f6d4788e8ed88f0505639" translate="yes" xml:space="preserve">
          <source>Returns the number of rows in the result set.</source>
          <target state="translated">結果セットの行数を返します。</target>
        </trans-unit>
        <trans-unit id="ddd4dd5aa076e1e20e6f2bd85298691998ce185c" translate="yes" xml:space="preserve">
          <source>Returns the previous row from the result set.</source>
          <target state="translated">結果セットの前の行を返します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
