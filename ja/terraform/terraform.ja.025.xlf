<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="terraform">
    <body>
      <group id="terraform">
        <trans-unit id="548490f9411da22a2eb7d6a41c3a36e27f01c2ac" translate="yes" xml:space="preserve">
          <source>The EFS file systems can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="translated">EFSファイルシステムを使用してインポートすることができ &lt;code&gt;id&lt;/code&gt; 、例えば</target>
        </trans-unit>
        <trans-unit id="550ac1ae20aa4b68330e8b40417c77f6dbe3ac96" translate="yes" xml:space="preserve">
          <source>The EFS mount targets can be imported using the &lt;code&gt;id&lt;/code&gt;, e.g.</source>
          <target state="translated">EFSは、使用してターゲットをインポートすることができますマウント &lt;code&gt;id&lt;/code&gt; 例えば、</target>
        </trans-unit>
        <trans-unit id="7c6623e5113f529fc311d9a99f9efd70bd81e2e4" translate="yes" xml:space="preserve">
          <source>The EKS service does not currently provide managed resources for running worker nodes. Here we will create a few operator managed resources so that Kubernetes can properly manage other AWS services, networking access, and finally a configuration that allows automatic scaling of worker nodes.</source>
          <target state="translated">EKSサービスでは現在、ワーカーノードを稼働させるためのマネージドリソースは提供されていません。ここでは、Kubernetesが他のAWSサービスを適切に管理できるように、いくつかのオペレータ管理リソースを作成し、ネットワークアクセス、最後にワーカーノードの自動スケーリングを可能にする設定を行います。</target>
        </trans-unit>
        <trans-unit id="da31742ff499c4bb50b0718179b5a063ea92f8ff" translate="yes" xml:space="preserve">
          <source>The EKS service does not provide a cluster-level API parameter or resource to automatically configure the underlying Kubernetes cluster to allow worker nodes to join the cluster via AWS IAM role authentication.</source>
          <target state="translated">EKSサービスでは、AWS IAMロール認証を介してワーカーノードがクラスタに参加できるように、基盤となるKubernetesクラスタを自動的に設定するためのクラスタレベルのAPIパラメータやリソースは提供されていません。</target>
        </trans-unit>
        <trans-unit id="6813d65f3ae33777af2fc94c113c96c4c0ee0ddf" translate="yes" xml:space="preserve">
          <source>The Extending Terraform section contains content for users who wish to extend Terraform. The intended audience is anyone wanting to add or edit source code (&amp;ldquo;developers&amp;rdquo;) for either Terraform itself or a Terraform Plugin. The content assumes you have basic operating knowledge or experience using Terraform.</source>
          <target state="translated">Terraformの拡張セクションには、Terraformを拡張するユーザー向けのコンテンツが含まれています。対象となる読者は、Terraform自体またはTerraformプラグインのソースコード（「開発者」）を追加または編集したい人です。このコンテンツは、Terraformの使用に関する基本的な操作知識または経験があることを前提としています。</target>
        </trans-unit>
        <trans-unit id="2c9730d5e4aa27be93632ecf0f4b63ce8b74d409" translate="yes" xml:space="preserve">
          <source>The Fastly provider is used to interact with the content delivery network (CDN) provided by Fastly.</source>
          <target state="translated">Fastlyプロバイダーは、Fastlyが提供するコンテンツ配信ネットワーク(CDN)とのやりとりに使用されます。</target>
        </trans-unit>
        <trans-unit id="fe63b0f2c52e3bc7b1aa58393666aeb017b0e5db" translate="yes" xml:space="preserve">
          <source>The Fastly provider offers an API key based method of providing credentials for authentication. The following methods are supported, in this order, and explained below:</source>
          <target state="translated">Fastly プロバイダは、認証のためのクレデンシャルを提供する API キーベースの方法を提供しています。以下の方法がサポートされています。</target>
        </trans-unit>
        <trans-unit id="0d8b96d04e713c3bdc3ced4dcb253c352df13dd1" translate="yes" xml:space="preserve">
          <source>The FlexibleEngine provider is used to interact with the many resources supported by FlexibleEngine. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">FlexibleEngineプロバイダは、FlexibleEngineがサポートする多くのリソースと対話するために使用します。プロバイダを使用するには、適切な認証情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="5fc2b08774da986993cafd7a02d41d85fabe5ebc" translate="yes" xml:space="preserve">
          <source>The GitHub provider is used to interact with GitHub organization resources.</source>
          <target state="translated">GitHub プロバイダは、GitHub 組織のリソースと相互作用するために使用されます。</target>
        </trans-unit>
        <trans-unit id="90fd3e54ad1212ce72d5245df8823f6170797b14" translate="yes" xml:space="preserve">
          <source>The GitLab provider is used to interact with GitLab group or user resources.</source>
          <target state="translated">GitLab プロバイダは、GitLab グループやユーザーリソースと対話するために使用されます。</target>
        </trans-unit>
        <trans-unit id="36ba64fd776d71791fc1ac67337eb9cea1daa282" translate="yes" xml:space="preserve">
          <source>The GoDoc for &lt;code&gt;helper/schema&lt;/code&gt; can be &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema&quot;&gt;found here&lt;/a&gt;. This is API-level documentation but will be extremely important for you going forward.</source>
          <target state="translated">用GoDoc &lt;code&gt;helper/schema&lt;/code&gt; することができます&lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema&quot;&gt;ここで見つけます&lt;/a&gt;。これはAPIレベルのドキュメントですが、今後は非常に重要になります。</target>
        </trans-unit>
        <trans-unit id="8dfa6cd9b23935280bde9dd2eb62ca9fd828a16f" translate="yes" xml:space="preserve">
          <source>The Google Cloud provider is used to interact with &lt;a href=&quot;https://cloud.google.com/&quot;&gt;Google Cloud services&lt;/a&gt;. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Google Cloudプロバイダーは、&lt;a href=&quot;https://cloud.google.com/&quot;&gt;Google Cloudサービス&lt;/a&gt;とのやり取りに使用されます。プロバイダーは、使用する前に適切な資格情報で構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="34d5fc5738313f5514834cc0cca7078c236aff08" translate="yes" xml:space="preserve">
          <source>The Google Cloud storage signed URL data source generates a signed URL for a given storage object. Signed URLs provide a way to give time-limited read or write access to anyone in possession of the URL, regardless of whether they have a Google account.</source>
          <target state="translated">Google Cloud ストレージ署名付き URL データソースは、指定されたストレージオブジェクトの署名付き URL を生成します。署名付き URL は、Google アカウントを持っているかどうかに関わらず、その URL を持っている人に時間制限付きの読み取りまたは書き込みのアクセス権を与える方法を提供します。</target>
        </trans-unit>
        <trans-unit id="4c6f655939f3ee14732b821b852b89fb463990ee" translate="yes" xml:space="preserve">
          <source>The Google Compute Engine Instance Group Manager API creates and manages pools of homogeneous Compute Engine virtual machine instances from a common instance template. For more information, see &lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/manager&quot;&gt;the official documentation&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers&quot;&gt;API&lt;/a&gt;</source>
          <target state="translated">Google Compute Engine Instance Group Manager APIは、共通のインスタンステンプレートから、同種のCompute Engine仮想マシンインスタンスのプールを作成および管理します。詳細については&lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/manager&quot;&gt;、公式ドキュメント&lt;/a&gt;と&lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/instanceGroupManagers&quot;&gt;APIを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="dc53a3387abbdece3fc22ac3be9064816c9d6d86" translate="yes" xml:space="preserve">
          <source>The Google Compute Engine Regional Instance Group Manager API creates and manages pools of homogeneous Compute Engine virtual machine instances from a common instance template. For more information, see &lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups&quot;&gt;the official documentation&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroupManagers&quot;&gt;API&lt;/a&gt;</source>
          <target state="translated">Google Compute EngineリージョナルインスタンスグループマネージャーAPIは、共通のインスタンステンプレートから、同種のCompute Engine仮想マシンインスタンスのプールを作成および管理します。詳細については&lt;a href=&quot;https://cloud.google.com/compute/docs/instance-groups/distributing-instances-with-regional-instance-groups&quot;&gt;、公式ドキュメント&lt;/a&gt;と&lt;a href=&quot;https://cloud.google.com/compute/docs/reference/latest/regionInstanceGroupManagers&quot;&gt;APIを&lt;/a&gt;参照してください</target>
        </trans-unit>
        <trans-unit id="799e599e4398a94a1ffea70db9350e61e2343fc9" translate="yes" xml:space="preserve">
          <source>The Grafana provider configures data sources and dashboards in &lt;a href=&quot;http://grafana.org/&quot;&gt;Grafana&lt;/a&gt;, which is a web application for creating, viewing and sharing metrics dashboards.</source>
          <target state="translated">Grafanaプロバイダーは、メトリックダッシュボードを作成、表示、共有するためのWebアプリケーションである&lt;a href=&quot;http://grafana.org/&quot;&gt;Grafana&lt;/a&gt;でデータソースとダッシュボードを構成します。</target>
        </trans-unit>
        <trans-unit id="97c713f72b76aec14ef6340ee00f43a30bc15df8" translate="yes" xml:space="preserve">
          <source>The HTTP provider is a utility provider for interacting with generic HTTP servers as part of a Terraform configuration.</source>
          <target state="translated">HTTP プロバイダは、Terraform コンフィギュレーションの一部として一般的な HTTP サーバと対話するためのユーティリティ・プロバイダです。</target>
        </trans-unit>
        <trans-unit id="1fb15b56cefc7e307bc40a750b00ab70a58827b2" translate="yes" xml:space="preserve">
          <source>The Heroku provider is used to interact with the resources supported by Heroku. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Heroku プロバイダは、Heroku がサポートするリソースとの対話に使用されます。プロバイダを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="c9cee39554351aef57e9a942ce03a5332b5be4f8" translate="yes" xml:space="preserve">
          <source>The Hetzner Cloud (hcloud) provider is used to interact with the resources supported by Hetzner Cloud. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Hetzner Cloud (hcloud)プロバイダは、Hetzner Cloud がサポートするリソースと対話するために使用されます。プロバイダは、使用する前に適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e9107c99516ee5f8254d3f2d000bfa5ff81968c7" translate="yes" xml:space="preserve">
          <source>The IAM Account Alias data source allows access to the account alias for the effective account in which Terraform is working.</source>
          <target state="translated">IAM Account Alias データソースでは、Terraformが作業している有効なアカウントのアカウントエイリアスにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="5ccef313315de657fc4834520b7a65e7f7ee8414" translate="yes" xml:space="preserve">
          <source>The IAM policy document format allows context variables to be interpolated into various strings within a statement. The native IAM policy document format uses &lt;code&gt;${...}&lt;/code&gt;-style syntax that is in conflict with Terraform's interpolation syntax, so this data source instead uses &lt;code&gt;&amp;amp;{...}&lt;/code&gt; syntax for interpolations that should be processed by AWS rather than by Terraform.</source>
          <target state="translated">IAMポリシードキュメント形式では、ステートメント内のコンテキスト変数をさまざまな文字列に補間できます。ネイティブIAMポリシードキュメント形式は、Terraformの補間構文と競合する &lt;code&gt;${...}&lt;/code&gt; スタイルの構文を使用するため、このデータソースは、TerraformではなくAWSで処理する必要がある補間に &lt;code&gt;&amp;amp;{...}&lt;/code&gt; 構文を使用します。</target>
        </trans-unit>
        <trans-unit id="6eb727daac9b29c53407c3fff88b442d64b487da" translate="yes" xml:space="preserve">
          <source>The Icinga2 provider is used to configure hosts to be monitored by &lt;a href=&quot;https://www.icinga.com/products/icinga-2/&quot;&gt;Icinga2&lt;/a&gt; servers. The provider needs to be configured with the API URL of the Icinga2 server and credentials for an API user with the appropriate permissions.</source>
          <target state="translated">Icinga2プロバイダーは、&lt;a href=&quot;https://www.icinga.com/products/icinga-2/&quot;&gt;Icinga2&lt;/a&gt;サーバーによって監視されるホストを構成するために使用されます。プロバイダーは、Icinga2サーバーのAPI URLと、適切な権限を持つAPIユーザーの資格情報で構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="c97c562a1b297ff71ec210c1fcf0ad5cb39cb541" translate="yes" xml:space="preserve">
          <source>The Ignition provider is used to generate &lt;a href=&quot;https://coreos.com/ignition/docs/latest/&quot;&gt;Ignition&lt;/a&gt; configuration files. &lt;em&gt;Ignition&lt;/em&gt; is the provisioning utility used by &lt;a href=&quot;https://coreos.com/&quot;&gt;CoreOS&lt;/a&gt; Linux.</source>
          <target state="translated">Ignitionプロバイダーは、&lt;a href=&quot;https://coreos.com/ignition/docs/latest/&quot;&gt;Ignition&lt;/a&gt;構成ファイルを生成するために使用されます。&lt;em&gt;Ignition&lt;/em&gt;は、&lt;a href=&quot;https://coreos.com/&quot;&gt;CoreOS&lt;/a&gt; Linuxで使用されるプロビジョニングユーティリティです。</target>
        </trans-unit>
        <trans-unit id="f09bc43b4203885fd8c5690db44bed0d27f601b5" translate="yes" xml:space="preserve">
          <source>The Images data source list image resource list contains private images of the user and images of system resources provided by Alicloud, as well as other public images and those available on the image market.</source>
          <target state="translated">画像データソースリストの画像リソースリストには、ユーザのプライベート画像やAlicloudが提供するシステムリソースの画像のほか、その他のパブリック画像や画像市場で入手可能な画像が含まれています。</target>
        </trans-unit>
        <trans-unit id="d951970140f5d40153ebfe984b0cc27d6fec6ea4" translate="yes" xml:space="preserve">
          <source>The InfluxDB provider allows Terraform to create Databases in &lt;a href=&quot;https://influxdb.com/&quot;&gt;InfluxDB&lt;/a&gt;. InfluxDB is a database server optimized for time-series data.</source>
          <target state="translated">InfluxDBプロバイダーを使用すると、Terraformは&lt;a href=&quot;https://influxdb.com/&quot;&gt;InfluxDBに&lt;/a&gt;データベースを作成できます。InfluxDBは、時系列データ用に最適化されたデータベースサーバーです。</target>
        </trans-unit>
        <trans-unit id="c28224aa1b978e4652552ecd4f7108c8d72b4f3d" translate="yes" xml:space="preserve">
          <source>The Instance Types data source list the ecs_instance_types of Alicloud.</source>
          <target state="translated">Instance Typesデータソースは、Alicloudのecs_instance_typesをリストアップしています。</target>
        </trans-unit>
        <trans-unit id="5d17c3d625a2ce93ef2b6ca00f9120ecafc501b2" translate="yes" xml:space="preserve">
          <source>The Instances data source list ECS instance resource accoring to its ID, name regex, image id, status and other fields.</source>
          <target state="translated">インスタンスデータソースは、そのID、名前正規表現、画像ID、ステータスなどのフィールドに対応したECSインスタンスリソースをリストアップします。</target>
        </trans-unit>
        <trans-unit id="936ea6a42b2966f6bbd7092b7699f43543d6220c" translate="yes" xml:space="preserve">
          <source>The KMS ciphertext data source allows you to encrypt plaintext into ciphertext by using an AWS KMS customer master key.</source>
          <target state="translated">KMSの暗号文データソースを利用することで、AWS KMSの顧客マスターキーを利用して平文を暗号文に暗号化することができます。</target>
        </trans-unit>
        <trans-unit id="b1a8e2e57e7c2da0b31d152c2d3391e042d78d6a" translate="yes" xml:space="preserve">
          <source>The KMS keys data source provides a list of Alicloud KMS keys in an Alicloud account according to the specified filters.</source>
          <target state="translated">KMS鍵データソースは、指定されたフィルタに従って、Alicloudアカウント内のAlicloud KMS鍵のリストを提供します。</target>
        </trans-unit>
        <trans-unit id="b298dcfe25dcf8f89775d6c0dafccf43273ee9f2" translate="yes" xml:space="preserve">
          <source>The KMS secret data source allows you to use data encrypted with the AWS KMS service within your resource definitions.</source>
          <target state="translated">KMSのシークレットデータソースでは、AWS KMSサービスで暗号化されたデータをリソース定義の中で利用することができます。</target>
        </trans-unit>
        <trans-unit id="a057de6e9eb2ea93a3189a41165b7000ad5838f6" translate="yes" xml:space="preserve">
          <source>The Key Pairs data source provides a list of Alicloud Key Pairs in an Alicloud account according to the specified filters.</source>
          <target state="translated">キーペアデータソースは、指定されたフィルタに従って、Alicloudアカウント内のAlicloudキーペアのリストを提供します。</target>
        </trans-unit>
        <trans-unit id="82aeeec87c7bb716eccf55e74596629ce5a28f23" translate="yes" xml:space="preserve">
          <source>The Kubernetes (K8S) provider is used to interact with the resources supported by Kubernetes. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Kubernetes (K8S)プロバイダは、Kubernetes がサポートするリソースとの対話に使用されます。プロバイダを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="293a73dc4eed2dc596b048da0323ad84d1b5ccef" translate="yes" xml:space="preserve">
          <source>The Librato provider is used to interact with the resources supported by Librato. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Librato プロバイダーは、Librato がサポートするリソースとのやりとりに使用します。プロバイダーを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="b1aeb979475a662d687113b1f32372f29c8ba912" translate="yes" xml:space="preserve">
          <source>The Local provider is used to manage local resources, such as files.</source>
          <target state="translated">ローカルプロバイダは、ファイルなどのローカルリソースを管理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="687d96f27061f3450a275ba3115b406f46357b43" translate="yes" xml:space="preserve">
          <source>The Logentries provider is used to manage Logentries logs and log sets. Logentries provides live log management and analytics. The provider needs to be configured with a Logentries account key before it can be used.</source>
          <target state="translated">Logentriesプロバイダは、Logentriesのログとログセットを管理するために使用されます。Logentriesは、ライブログ管理と分析を提供します。プロバイダは、使用する前に Logentries アカウントキーで設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="882a6941cd8b0a6a8dd1e6ab97bf02f541218b96" translate="yes" xml:space="preserve">
          <source>The LogicMonitor provider is used to interact with the resources supported by LogicMonitor. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">LogicMonitor プロバイダは、LogicMonitor がサポートするリソースと対話するために使用されます。プロバイダを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="4230117ce5e3f6cc175b84e6a132f0da7e3e3890" translate="yes" xml:space="preserve">
          <source>The Mailgun provider is used to interact with the resources supported by Mailgun. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Mailgun プロバイダは、Mailgun がサポートするリソースと対話するために使用されます。プロバイダを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="3e1b6b34796be1b0e443a4bc88140c516dac63c0" translate="yes" xml:space="preserve">
          <source>The Managed Object Browser (MOB) allows one to browse the entire vSphere inventory as it's presented to the API. It's normally accessed via &lt;code&gt;https://VSPHERE_SERVER/mob&lt;/code&gt;. For more information, see here.</source>
          <target state="translated">管理対象オブジェクトブラウザー（MOB）を使用すると、APIに提示されるvSphereインベントリ全体を参照できます。通常は &lt;code&gt;https://VSPHERE_SERVER/mob&lt;/code&gt; 経由でアクセスされます。詳細については、こちらをご覧ください。</target>
        </trans-unit>
        <trans-unit id="4d9d90a72bcc60c46e6142bc4d8553df15e4e3f6" translate="yes" xml:space="preserve">
          <source>The NS1 provider exposes resources to interact with the NS1 REST API. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">NS1 プロバイダは、NS1 REST API と対話するためのリソースを公開します。プロバイダを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="62afb1c9c87859df9a249c6c0c7efa44929e90c9" translate="yes" xml:space="preserve">
          <source>The NSX Terraform Provider</source>
          <target state="translated">NSX テラフォーム プロバイダ</target>
        </trans-unit>
        <trans-unit id="838a2413bfa1f56ce20592cb7be075b9c4ca34d9" translate="yes" xml:space="preserve">
          <source>The NSX Terraform provider can be used to manage logical networking and security constructs in NSX. This includes logical switching, routing and firewall.</source>
          <target state="translated">NSX Terraform プロバイダは、NSX の論理的なネットワーキングとセキュリティ構成を管理するために使用することができます。これには、論理スイッチング、ルーティング、ファイアウォールが含まれます。</target>
        </trans-unit>
        <trans-unit id="a85f57e5846e98f446f591b8500f0a3dbde53393" translate="yes" xml:space="preserve">
          <source>The NSX Terraform provider gives the NSX administrator a way to automate NSX to provide virtualized networking and security services using both ESXi and KVM based hypervisor hosts as well as container networking and security.</source>
          <target state="translated">NSX Terraformプロバイダは、NSX管理者がNSXを自動化して、ESXiとKVMベースのハイパーバイザホスト、およびコンテナネットワーキングとセキュリティの両方を使用して、仮想化されたネットワーキングとセキュリティサービスを提供する方法を提供します。</target>
        </trans-unit>
        <trans-unit id="0ad33ad0711a54a37e3ed7da399e1db9ee0723e7" translate="yes" xml:space="preserve">
          <source>The NSX provider offers several ways to authenticate to the NSX manager. Credentials can be provided statically or provided as environment variables. In addition, client certificates can be used for authentication. For authentication with certificates Terraform will require a certificate file and private key file in PEM format. To use client certificates the client certificate needs to be registered with NSX-T manager prior to invoking Terraform.</source>
          <target state="translated">NSX プロバイダは、NSX マネージャへの認証方法をいくつか提供しています。認証情報は、静的に提供することも、環境変数として提供することもできます。さらに、クライアント証明書を認証に使用することもできます。証明書を使用した認証には、Terraform は証明書ファイルと PEM 形式の秘密鍵ファイルを必要とします。クライアント証明書を使用するには、Terraform を起動する前に NSX-T マネージャにクライアント証明書を登録する必要があります。</target>
        </trans-unit>
        <trans-unit id="f4bc5cd231f79ef022b5ba8efa6960b9012ef437" translate="yes" xml:space="preserve">
          <source>The OVH provider is used to interact with the many resources supported by OVH. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">OVHプロバイダは、OVHによってサポートされている多くのリソースと対話するために使用されます。プロバイダは、使用する前に適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="0db1d714142fed350d9fdd494dd443296cae52f1" translate="yes" xml:space="preserve">
          <source>The OpenStack provider is used to interact with the many resources supported by OpenStack. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">OpenStack プロバイダは、OpenStack がサポートする多くのリソースと対話するために使用されます。プロバイダを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="d408a4eb79e4b42271af770b36b32f041e9becb5" translate="yes" xml:space="preserve">
          <source>The OpenTelekomCloud provider is used to interact with the many resources supported by OpenTelekomCloud. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">OpenTelekomCloud プロバイダは、OpenTelekomCloud がサポートする多くのリソースと対話するために使用される。プロバイダは、使用する前に適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="9b6ebe1c1135d60390c1fa4ad6cdab27da05e506" translate="yes" xml:space="preserve">
          <source>The OpsGenie provider is used to interact with the many resources supported by OpsGenie. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">OpsGenieプロバイダは、OpsGenieがサポートする多くのリソースとの対話に使用されます。プロバイダーを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="a5b5ea15e2fcf058101526cc1bd4ec16e0952c34" translate="yes" xml:space="preserve">
          <source>The Oracle Cloud Infrastructure Classic provider (formerly know as the Oracle Public Cloud provider) is used to interact with the many resources supported by the &lt;a href=&quot;http://cloud.oracle.com/classic&quot;&gt;Oracle Cloud Infrastructure Classic&lt;/a&gt; and &lt;a href=&quot;https://cloud.oracle.com/cloud-at-customer&quot;&gt;Oracle Cloud at Customer&lt;/a&gt; infrastructure services. The provider needs to be configured with credentials for the Oracle Cloud Account.</source>
          <target state="translated">Oracle Cloud Infrastructure Classicプロバイダー（以前のOracle Public Cloudプロバイダー）は、&lt;a href=&quot;http://cloud.oracle.com/classic&quot;&gt;Oracle Cloud Infrastructure Classic&lt;/a&gt;および&lt;a href=&quot;https://cloud.oracle.com/cloud-at-customer&quot;&gt;Oracle Cloud at Customer&lt;/a&gt;インフラストラクチャサービスでサポートされている多くのリソースとのやり取りに使用されます。プロバイダーは、Oracle Cloudアカウントの資格情報を使用して構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="d875fa1a12f3f7828b0794047532ca2466dc43d2" translate="yes" xml:space="preserve">
          <source>The Oracle Cloud Platform (Oracle PaaS) provider is used to interact with resources supported by the &lt;a href=&quot;http://cloud.oracle.com/paas&quot;&gt;Oracle Cloud Platform&lt;/a&gt; services. The provider needs to be configured with credentials for the Oracle Cloud Account.</source>
          <target state="translated">Oracle Cloud Platform（Oracle PaaS）プロバイダーは、&lt;a href=&quot;http://cloud.oracle.com/paas&quot;&gt;Oracle Cloud Platform&lt;/a&gt;サービスによってサポートされるリソースとの対話に使用されます。プロバイダーは、Oracle Cloudアカウントの資格情報を使用して構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="6448b4b3ab131c7589cdbbcdeae4ea7e7c45ea0f" translate="yes" xml:space="preserve">
          <source>The Packet provider is used to interact with the resources supported by Packet. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">パケットプロバイダは、パケットがサポートするリソースとのやりとりに使用されます。プロバイダを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="be9734312b7624b14c08092a0bdc5a34d5c03023" translate="yes" xml:space="preserve">
          <source>The PostgreSQL provider gives the ability to deploy and configure resources in a PostgreSQL server.</source>
          <target state="translated">PostgreSQLプロバイダは、PostgreSQLサーバにリソースを展開して設定する機能を提供します。</target>
        </trans-unit>
        <trans-unit id="c4a82ad65f65bb12e302745a8dc89d3c352b8c82" translate="yes" xml:space="preserve">
          <source>The PowerDNS provider is used manipulate DNS records supported by PowerDNS server. The provider needs to be configured with the proper credentials before it can be used. It supports both the &lt;a href=&quot;https://doc.powerdns.com/3/httpapi/api_spec/&quot;&gt;legacy API&lt;/a&gt; and the new &lt;a href=&quot;https://doc.powerdns.com/md/httpapi/api_spec/&quot;&gt;version 1 API&lt;/a&gt;, however resources may need to be configured differently.</source>
          <target state="translated">PowerDNSプロバイダーは、PowerDNSサーバーでサポートされているDNSレコードの操作に使用されます。プロバイダーは、使用する前に適切な資格情報で構成する必要があります。これは、&lt;a href=&quot;https://doc.powerdns.com/3/httpapi/api_spec/&quot;&gt;レガシーAPI&lt;/a&gt;と新しい&lt;a href=&quot;https://doc.powerdns.com/md/httpapi/api_spec/&quot;&gt;バージョン1 APIの&lt;/a&gt;両方をサポートしますが、リソースの構成が異なる場合があります。</target>
        </trans-unit>
        <trans-unit id="9c46fabe0e0aada5eb22c4954ff9c8ae0a593352" translate="yes" xml:space="preserve">
          <source>The Profile Setting is implicitly chosen based on what params are configured for the security rule. If you want a Profile Setting of &lt;code&gt;Group&lt;/code&gt;, then the &lt;code&gt;group&lt;/code&gt; param should be set to the desired Group Profile. If you want a Profile Setting of &lt;code&gt;Profiles&lt;/code&gt;, then you will need to specify one or more of the following params:</source>
          <target state="translated">プロファイル設定は、セキュリティルールに対して構成されているパラメータに基づいて暗黙的に選択されます。 &lt;code&gt;Group&lt;/code&gt; プロファイル設定が必要な場合は、 &lt;code&gt;group&lt;/code&gt; パラメータを目的のグループプロファイルに設定する必要があります。あなたはのプロフィール設定したい場合は &lt;code&gt;Profiles&lt;/code&gt; 、あなたは、次のparamsの一つ以上を指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="6a4a6adb126336276a7697a8bc9905100d6b1320" translate="yes" xml:space="preserve">
          <source>The ProfitBricks provider gives the ability to deploy and configure resources using the ProfitBricks Cloud API.</source>
          <target state="translated">ProfitBricksプロバイダーは、ProfitBricks Cloud APIを使用してリソースの展開と設定を行うことができます。</target>
        </trans-unit>
        <trans-unit id="39df0912f1599d0deee0d5cc7fb34abe74954f64" translate="yes" xml:space="preserve">
          <source>The Provider Schema</source>
          <target state="translated">プロバイダスキーマ</target>
        </trans-unit>
        <trans-unit id="c87a7f34342ab1f96aad1181ff61dd4bbd1aafbd" translate="yes" xml:space="preserve">
          <source>The RabbitMQ management plugin must be enabled to use this provider. You can enable the plugin by doing something similar to:</source>
          <target state="translated">このプロバイダを使用するには、RabbitMQ管理プラグインを有効にする必要があります。プラグインを有効にするには、次のようにします。</target>
        </trans-unit>
        <trans-unit id="c0699cc4a3dad6edade38be65e567a9db2f37e59" translate="yes" xml:space="preserve">
          <source>The Ram Account Alias data source provides an alias for the Alicloud account.</source>
          <target state="translated">Ram Account Alias データソースは、Alicloud アカウントのエイリアスを提供します。</target>
        </trans-unit>
        <trans-unit id="6601bbf28810bcbb87a1e3f4e5f0dc3fe183df7e" translate="yes" xml:space="preserve">
          <source>The Ram Groups data source provides a list of Alicloud Ram Groups in an Alicloud account according to the specified filters.</source>
          <target state="translated">ラムグループデータソースは、指定されたフィルターに従って、Alicloudアカウント内のAlicloudラムグループのリストを提供します。</target>
        </trans-unit>
        <trans-unit id="fa30ed94ac59c551104ef9f69ea5bee8272c506d" translate="yes" xml:space="preserve">
          <source>The Ram Policies data source provides a list of Alicloud Ram Policies in an Alicloud account according to the specified filters.</source>
          <target state="translated">ラムポリシーデータソースは、指定されたフィルターに従ってAlicloudアカウントのAlicloudラムポリシーのリストを提供します。</target>
        </trans-unit>
        <trans-unit id="ac98fd99a9df39dd6286ff45cd16d9970e9bbba3" translate="yes" xml:space="preserve">
          <source>The Ram Roles data source provides a list of Alicloud Ram Roles in an Alicloud account according to the specified filters.</source>
          <target state="translated">ラムロールデータソースは、指定されたフィルタに従って、Alicloudアカウント内のAlicloudラムロールのリストを提供します。</target>
        </trans-unit>
        <trans-unit id="9b90cb28b1d4c2d98291cdf727a83d13e48c16e3" translate="yes" xml:space="preserve">
          <source>The Ram Users data source provides a list of Alicloud Ram Users in an Alicloud account according to the specified filters.</source>
          <target state="translated">Ram Usersデータソースは、指定されたフィルターに従ってAlicloudアカウントのAlicloud Ram Usersのリストを提供します。</target>
        </trans-unit>
        <trans-unit id="90193f95dc71c5836d04960e3574fc7bc7cc69ea" translate="yes" xml:space="preserve">
          <source>The Rancher provider is used to interact with the resources supported by Rancher. The provider needs to be configured with the URL of the Rancher server at minimum and API credentials if access control is enabled on the server.</source>
          <target state="translated">Rancher プロバイダは、Rancher がサポートするリソースとのやりとりに使用します。プロバイダは、最低でも Rancher サーバーの URL と、サーバー上でアクセス制御が有効な場合の API 認証情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="88a4cc846cf60f47458e521a1767bd07e9984898" translate="yes" xml:space="preserve">
          <source>The Regions data source allows access to the list of Alicloud Regions.</source>
          <target state="translated">Regionsデータソースでは、Alicloudのリージョンのリストにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="edbdfc887cebbc25b4b2f000a7ff234bb5988a0a" translate="yes" xml:space="preserve">
          <source>The Replication Controller allows you to replicate pods. This is useful for maintaining overall availability and scalability of your application exposed to the user.</source>
          <target state="translated">レプリケーションコントローラを使用すると、ポッドをレプリケートすることができます。これは、ユーザーに公開されているアプリケーションの全体的な可用性とスケーラビリティを維持するのに便利です。</target>
        </trans-unit>
        <trans-unit id="8db1f7ad6b8f8cb669f731b5fb9ed3d9e22662d4" translate="yes" xml:space="preserve">
          <source>The Rundeck provider allows Terraform to create and configure Projects, Jobs and Keys in &lt;a href=&quot;http://rundeck.org/&quot;&gt;Rundeck&lt;/a&gt;. Rundeck is a tool for runbook automation and execution of arbitrary management tasks, allowing operators to avoid logging in to individual machines directly via SSH.</source>
          <target state="translated">Rundeckプロバイダは、テラフォームを作成することができますし、Configureプロジェクト、ジョブとでキー&lt;a href=&quot;http://rundeck.org/&quot;&gt;Rundeck&lt;/a&gt;。Rundeckは、運用手順書の自動化と任意の管理タスクの実行のためのツールであり、オペレーターはSSH経由で直接個々のマシンにログインする必要がありません。</target>
        </trans-unit>
        <trans-unit id="6f9c6c84477d5bb2b62d5b6fca698946328e3e3a" translate="yes" xml:space="preserve">
          <source>The Runscope provider is used to interact with the resources supported by Runscope. The provider needs to be configured with an access token before it can be used.</source>
          <target state="translated">Runscopeプロバイダは、Runscopeがサポートするリソースとの対話に使用されます。プロバイダを使用するには、アクセストークンを設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="7feaafaa7ab62d67c23ca9fd670ca57771869199" translate="yes" xml:space="preserve">
          <source>The S3 backend can be used in a number of different ways that make different tradeoffs between convenience, security, and isolation in such an organization. This section describes one such approach that aims to find a good compromise between these tradeoffs, allowing use of &lt;a href=&quot;../../state/workspaces&quot;&gt;Terraform's workspaces feature&lt;/a&gt; to switch conveniently between multiple isolated deployments of the same configuration.</source>
          <target state="translated">S3バックエンドは、このような組織での利便性、セキュリティ、分離のさまざまなトレードオフをもたらすさまざまな方法で使用できます。このセクションでは、これらのトレードオフ間の適切な妥協点を見つけ、&lt;a href=&quot;../../state/workspaces&quot;&gt;Terraformのワークスペース機能&lt;/a&gt;を使用して、同じ構成の複数の分離されたデプロイメント間を便利に切り替えることを目的とした、そのようなアプローチの1つについて説明します。</target>
        </trans-unit>
        <trans-unit id="e40a62c6bdcc4b47fd5db6b5eb41e1cdb2ecba7c" translate="yes" xml:space="preserve">
          <source>The S3 object data source allows access to the metadata and &lt;em&gt;optionally&lt;/em&gt; (see below) content of an object stored inside S3 bucket.</source>
          <target state="translated">S3オブジェクトデータソースを使用すると、S3バケット内に格納されているオブジェクトのメタデータおよび&lt;em&gt;オプションで&lt;/em&gt;（以下を参照）コンテンツにアクセスできます。</target>
        </trans-unit>
        <trans-unit id="52c5d790b60686f0ecaf36b18cc39d152df5aa53" translate="yes" xml:space="preserve">
          <source>The Scaleway provider is used to manage Scaleway resources.</source>
          <target state="translated">Scalewayプロバイダーは、Scalewayのリソースを管理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="ce0416222fce2af9315d297b220fffc610e2e036" translate="yes" xml:space="preserve">
          <source>The Schema attribute &lt;code&gt;Type&lt;/code&gt; defines what kind of values users can provide in their configuration for this element. Here we define the available schema types supported. See &lt;a href=&quot;schema-behaviors&quot;&gt;Schema Behaviors&lt;/a&gt; for more information on configuring element behaviors.</source>
          <target state="translated">スキーマ属性 &lt;code&gt;Type&lt;/code&gt; は、ユーザーがこの要素の構成で提供できる値の種類を定義します。ここでは、サポートされる利用可能なスキーマタイプを定義します。要素の動作の構成の詳細については、&lt;a href=&quot;schema-behaviors&quot;&gt;スキーマの動作&lt;/a&gt;を参照してください。</target>
        </trans-unit>
        <trans-unit id="c11e616f9f476638a0022190850013a9b0520f97" translate="yes" xml:space="preserve">
          <source>The Schema package is a high-level framework for easily writing Plugins for Terraform. Providers (with Resources and/or Data Sources), and Provisioners are all defined in terms of the Schema package, which includes builtin types and methods for developers to use when writing plugins.</source>
          <target state="translated">Schemaパッケージは、Terraformのプラグインを簡単に記述するための高レベルのフレームワークです。プロバイダ(リソースやデータソースを含む)、プロビジョナ、プロビジョナはすべてSchemaパッケージで定義されており、プラグインを書く際に開発者が使用するための組み込み型やメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="6c96ad3569c7501e912b871e1c6508fafeb830f7" translate="yes" xml:space="preserve">
          <source>The Security Groups data source provides a list of Security Groups in an Alicloud account according to the specified filters.</source>
          <target state="translated">セキュリティグループのデータソースは、指定されたフィルタに従ってAlicloudアカウントのセキュリティグループのリストを提供します。</target>
        </trans-unit>
        <trans-unit id="5888ce5a2d63e696f9c5281fc1cae416f23da820" translate="yes" xml:space="preserve">
          <source>The Server Load Balancer instance attached with VPC-type ECS instances cannot be attached to the scaling group.</source>
          <target state="translated">VPC型ECSインスタンスでアタッチしたServer Load Balancerインスタンスをスケーリンググループにアタッチすることはできません。</target>
        </trans-unit>
        <trans-unit id="3d637050ead759620656d6a14bc49e815c80ff92" translate="yes" xml:space="preserve">
          <source>The Server Load Balancer instance must be enabled.</source>
          <target state="translated">Server Load Balancer インスタンスを有効にする必要があります。</target>
        </trans-unit>
        <trans-unit id="a54768532921592011d99372be846705fdfa8c0c" translate="yes" xml:space="preserve">
          <source>The Service resource requires a domain name that is correctly set up to direct traffic to the Fastly service. See Fastly's guide on &lt;a href=&quot;https://docs.fastly.com/guides/basic-setup/adding-cname-records&quot;&gt;Adding CNAME Records&lt;/a&gt; on their documentation site for guidance.</source>
          <target state="translated">Serviceリソースには、トラフィックをFastlyサービスに転送するように正しく設定されたドメイン名が必要です。ガイダンスについては、ドキュメントサイトで&lt;a href=&quot;https://docs.fastly.com/guides/basic-setup/adding-cname-records&quot;&gt;CNAMEレコードの追加&lt;/a&gt;に関するFastlyのガイドをご覧ください。</target>
        </trans-unit>
        <trans-unit id="b49515accb4581013f1a4aef63227e2bb6972689" translate="yes" xml:space="preserve">
          <source>The SoftLayer provider is used to manage SoftLayer resources.</source>
          <target state="translated">SoftLayer プロバイダは、SoftLayer リソースを管理するために使用されます。</target>
        </trans-unit>
        <trans-unit id="7afcaa337135a449b1300e93174642fee5f4a833" translate="yes" xml:space="preserve">
          <source>The Spotinst provider is used to interact with the resources supported by Spotinst. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Spotinst プロバイダは、Spotinst がサポートするリソースと対話するために使用します。プロバイダを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="54efd0f7474c1c4a320dee6025f833f3d0fe4aa4" translate="yes" xml:space="preserve">
          <source>The StatusCake provider allows Terraform to create and configure tests in &lt;a href=&quot;https://www.statuscake.com/&quot;&gt;StatusCake&lt;/a&gt;. StatusCake is a tool that helps to monitor the uptime of your service via a network of monitoring centers throughout the world</source>
          <target state="translated">StatusCakeプロバイダーを使用すると、Terraformは&lt;a href=&quot;https://www.statuscake.com/&quot;&gt;StatusCakeで&lt;/a&gt;テストを作成および構成できます。StatusCakeは、世界中の監視センターのネットワークを介してサービスの稼働時間を監視するのに役立つツールです</target>
        </trans-unit>
        <trans-unit id="fd204bf7116c4a49372ec4bd809aea39342ec92d" translate="yes" xml:space="preserve">
          <source>The TLS provider provides utilities for working with &lt;em&gt;Transport Layer Security&lt;/em&gt; keys and certificates. It provides resources that allow private keys, certificates and certficate requests to be created as part of a Terraform deployment.</source>
          <target state="translated">TLSプロバイダーは、&lt;em&gt;トランスポート層セキュリティ&lt;/em&gt;キーと証明書を操作するためのユーティリティを提供します。Terraformデプロイメントの一部として、秘密鍵、証明書、証明書リクエストを作成できるリソースを提供します。</target>
        </trans-unit>
        <trans-unit id="9633f2b263924cfca97d724b569651c62c40d639" translate="yes" xml:space="preserve">
          <source>The TelefonicaOpenCloud provider is used to interact with the many resources supported by TelefonicaOpenCloud. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">TelefonicaOpenCloudプロバイダーはTelefonicaOpenCloudがサポートする多くのリソースと対話するために使用されます。プロバイダーは使用する前に適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="139da4ba89c94ffd70ffbd887864b537a00731b4" translate="yes" xml:space="preserve">
          <source>The Terraform CLI commands interact with the HashiCorp service &lt;a href=&quot;https://checkpoint.hashicorp.com/&quot;&gt;Checkpoint&lt;/a&gt; to check for the availability of new versions and for critical security bulletins about the current version.</source>
          <target state="translated">Terraform CLIコマンドは、HashiCorpサービス&lt;a href=&quot;https://checkpoint.hashicorp.com/&quot;&gt;チェックポイント&lt;/a&gt;と対話して、新しいバージョンの可用性と現在のバージョンに関する重要なセキュリティ情報をチェックします。</target>
        </trans-unit>
        <trans-unit id="c1e828d7431912bc6798576f02cbd81150d61edd" translate="yes" xml:space="preserve">
          <source>The Terraform Registry is integrated directly into Terraform to make consuming modules easy. See &lt;a href=&quot;modules/use#using-modules&quot;&gt;the usage information&lt;/a&gt;.</source>
          <target state="translated">TerraformレジストリはTerraformに直接統合されており、モジュールを簡単に使用できます。&lt;a href=&quot;modules/use#using-modules&quot;&gt;使用情報を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="6a999297ee3130fe7107f7cd7258a31edea35e6e" translate="yes" xml:space="preserve">
          <source>The Terraform Registry is integrated directly into Terraform. This makes it easy to reference any module in the registry. The syntax for referencing a registry module is &lt;code&gt;&amp;lt;NAMESPACE&amp;gt;/&amp;lt;NAME&amp;gt;/&amp;lt;PROVIDER&amp;gt;&lt;/code&gt;. For example: &lt;code&gt;hashicorp/consul/aws&lt;/code&gt;.</source>
          <target state="translated">Terraformレジストリは、Terraformに直接統合されています。これにより、レジストリ内の任意のモジュールを簡単に参照できます。レジストリモジュールを参照するための構文は、 &lt;code&gt;&amp;lt;NAMESPACE&amp;gt;/&amp;lt;NAME&amp;gt;/&amp;lt;PROVIDER&amp;gt;&lt;/code&gt; です。例： &lt;code&gt;hashicorp/consul/aws&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="792600fa7e35f1a5ef35bb8b2844099da47f0306" translate="yes" xml:space="preserve">
          <source>The Terraform Registry uses tags to detect releases.</source>
          <target state="translated">Terraform Registryは、リリースの検出にタグを使用しています。</target>
        </trans-unit>
        <trans-unit id="8c21193bef05aa8a88c8c8881b5540f03b36e347" translate="yes" xml:space="preserve">
          <source>The Terraform configuration required for the test is applied. This is responsible for configuring the resource under test, and any dependencies it may have. For example, to test the &lt;code&gt;azurerm_public_ip&lt;/code&gt; resource, an &lt;code&gt;azurerm_resource_group&lt;/code&gt; is required. This results in configuration which looks like this:</source>
          <target state="translated">テストに必要なTerraform構成が適用されます。これは、テスト対象のリソース、およびリソースが持つ可能性のある依存関係の構成を担当します。たとえば、 &lt;code&gt;azurerm_public_ip&lt;/code&gt; リソースをテストするには、 &lt;code&gt;azurerm_resource_group&lt;/code&gt; が必要です。これにより、次のような構成になります。</target>
        </trans-unit>
        <trans-unit id="f1568d7da94cc85200fbed5feb847220ffcd8571" translate="yes" xml:space="preserve">
          <source>The Terraform state subcommands all work with remote state just as if it was local state. Reads and writes may take longer than normal as each read and each write do a full network roundtrip. Otherwise, backups are still written to disk and the CLI usage is the same as if it were local state.</source>
          <target state="translated">Terraform state サブコマンドは、リモートステートをローカルステートのように扱うことができます。読み取りと書き込みは、それぞれの読み取りと書き込みがネットワークの完全なラウンドトリップを行うため、通常よりも時間がかかる場合があります。それ以外の場合は、バックアップはディスクに書き込まれ、CLI の使用はローカルステートの場合と同じです。</target>
        </trans-unit>
        <trans-unit id="eb8845cf709d813b08ff223369516af0c93c1cd3" translate="yes" xml:space="preserve">
          <source>The Traffic Manager is created with the location &lt;code&gt;global&lt;/code&gt;.</source>
          <target state="translated">Traffic Managerは、場所 &lt;code&gt;global&lt;/code&gt; で作成されます。</target>
        </trans-unit>
        <trans-unit id="dc6e6571aff9e21a77882dc2c3d1494d21dfeeae" translate="yes" xml:space="preserve">
          <source>The Triton provider is used to interact with resources in Joyent's Triton cloud. It is compatible with both public- and on-premise installations of Triton. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">Triton プロバイダは、Joyent の Triton クラウド内のリソースと対話するために使用されます。それは、Tritonのパブリックとオンプレミスの両方のインストールと互換性があります。プロバイダーは、使用する前に適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="12a08b14ff049eca1eadf196f27babac4a76f53e" translate="yes" xml:space="preserve">
          <source>The URLs are computed entirely offline - as long as the project exists, they will be valid, but this data source does not contact Google Container Registry (GCR) at any point.</source>
          <target state="translated">URLは完全にオフラインで計算されます-プロジェクトが存在する限り、それらは有効ですが、このデータソースはどの時点でもGoogle Container Registry (GCR)に連絡しません。</target>
        </trans-unit>
        <trans-unit id="070c738d544238cd5689ae34e0da7d7c0dd7ca08" translate="yes" xml:space="preserve">
          <source>The URLs for Git repositories support the following query parameters:</source>
          <target state="translated">Git リポジトリの URL は、以下のクエリパラメータをサポートしています。</target>
        </trans-unit>
        <trans-unit id="5fa38e8689deb0bad4cb058ab24d24116e95a566" translate="yes" xml:space="preserve">
          <source>The UltraDNS provider is used to interact with the resources supported by UltraDNS. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">UltraDNS プロバイダは、UltraDNS がサポートするリソースと対話するために使用されます。プロバイダは使用する前に適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="e918b1172c44ad2bb52b5cd54bc0d54e91760e73" translate="yes" xml:space="preserve">
          <source>The VMware vCloud Director provider is used to interact with the resources supported by VMware vCloud Director. The provider needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">VMware vCloud Director プロバイダは、VMware vCloud Director がサポートするリソースとの対話に使用されます。プロバイダを使用するには、適切な資格情報を使用して構成する必要があります。</target>
        </trans-unit>
        <trans-unit id="137b811a0728bc404ab4c28eed1af7207fc5b9a2" translate="yes" xml:space="preserve">
          <source>The VMware vSphere provider gives Terraform the ability to work with VMware vSphere Products, notably &lt;a href=&quot;https://www.vmware.com/products/vcenter-server.html&quot;&gt;vCenter Server&lt;/a&gt; and &lt;a href=&quot;https://www.vmware.com/products/esxi-and-esx.html&quot;&gt;ESXi&lt;/a&gt;. This provider can be used to manage many aspects of a VMware vSphere environment, including virtual machines, standard and distributed networks, datastores, and more.</source>
          <target state="translated">VMware vSphereプロバイダーは、TerraformにVMware vSphere製品、特に&lt;a href=&quot;https://www.vmware.com/products/vcenter-server.html&quot;&gt;vCenter Server&lt;/a&gt;および&lt;a href=&quot;https://www.vmware.com/products/esxi-and-esx.html&quot;&gt;ESXi&lt;/a&gt;と連携する機能を提供します。このプロバイダーは、仮想マシン、標準および分散ネットワーク、データストアなど、VMware vSphere環境の多くの側面を管理するために使用できます。</target>
        </trans-unit>
        <trans-unit id="1ae5a36483476863b9a6696226edf9b89bccd58f" translate="yes" xml:space="preserve">
          <source>The VPC Endpoint Service data source details about a specific service that can be specified when creating a VPC endpoint within the region configured in the provider.</source>
          <target state="translated">VPC エンドポイント サービス データ ソースは、プロバイダで構成されたリージョン内に VPC エンドポイントを作成する際に指定できる特定のサービスの詳細を示します。</target>
        </trans-unit>
        <trans-unit id="ec64745257c0d9c2d9ebd0d83682d6441bf0dbe2" translate="yes" xml:space="preserve">
          <source>The VPC Endpoint data source provides details about a specific VPC endpoint.</source>
          <target state="translated">VPC エンドポイント データ ソースは、特定の VPC エンドポイントの詳細を提供します。</target>
        </trans-unit>
        <trans-unit id="8a28b2592aaf559479c81afb67a65a81420b69e3" translate="yes" xml:space="preserve">
          <source>The VPC Peering Connection data source provides details about a specific VPC peering connection.</source>
          <target state="translated">VPC ピアリング接続データソースは、特定の VPC ピアリング接続の詳細を提供します。</target>
        </trans-unit>
        <trans-unit id="a2631adf4f23fe5438e7db773a0b5ccbf3d23b90" translate="yes" xml:space="preserve">
          <source>The VPCs data source lists a number of VPCs resource information owned by an Alicloud account.</source>
          <target state="translated">VPCsデータソースは、Alicloudアカウントが所有するVPCsリソース情報を多数リストアップしています。</target>
        </trans-unit>
        <trans-unit id="d307e45eca92c7753bd1ff2950a47757cbc8ab31" translate="yes" xml:space="preserve">
          <source>The VPN Gateway data source provides details about a specific VPN gateway.</source>
          <target state="translated">VPN Gateway データソースは、特定の VPN ゲートウェイに関する詳細を提供します。</target>
        </trans-unit>
        <trans-unit id="d1e75df6d6176ccf9c326bfe8bf6c188a3011e41" translate="yes" xml:space="preserve">
          <source>The Vault provider allows Terraform to read from, write to, and configure &lt;a href=&quot;https://vaultproject.io/&quot;&gt;Hashicorp Vault&lt;/a&gt;.</source>
          <target state="translated">Vaultプロバイダーを使用すると、Terraformで&lt;a href=&quot;https://vaultproject.io/&quot;&gt;Hashicorp Vaultの&lt;/a&gt;読み取り、書き込み、構成を行うことができます。</target>
        </trans-unit>
        <trans-unit id="f3723d4408e95216ff67f8d282d6629ae1d23eef" translate="yes" xml:space="preserve">
          <source>The Virtual sunbet data source lists a list of vswitches resource information owned by an Alicloud account, and each vswitch including its basic attribution, VPC ID and containing ECS instance IDs.</source>
          <target state="translated">Virtual sunbetデータソースは、Alicloudアカウントが所有するvswitchのリソース情報のリストと、基本的な帰属、VPC ID、ECSインスタンスIDを含む各vswitchのリストです。</target>
        </trans-unit>
        <trans-unit id="8b14497cc154c79c0c85df64765f5c5886b043c3" translate="yes" xml:space="preserve">
          <source>The Zones data source allows access to the list of Alicloud Zones which can be accessed by an Alicloud account within the region configured in the provider.</source>
          <target state="translated">Zonesデータソースは、プロバイダで設定された地域内のAlicloudアカウントがアクセスできるAlicloud Zonesのリストにアクセスすることができます。</target>
        </trans-unit>
        <trans-unit id="daad845d21c26b8c195d3b9d25ec9323ac20cd96" translate="yes" xml:space="preserve">
          <source>The above command imports the DHCP relay profile named &lt;code&gt;dr_profile&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、NSX ID &lt;code&gt;UUID&lt;/code&gt; を &lt;code&gt;dr_profile&lt;/code&gt; してdr_profileという名前のDHCPリレープロファイルをインポートします。</target>
        </trans-unit>
        <trans-unit id="cbceb1e7d3d9ffa8a6df269cf4d516233df0a001" translate="yes" xml:space="preserve">
          <source>The above command imports the DHCP relay service named &lt;code&gt;dr_service&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;dr_service&lt;/code&gt; という名前のDHCPリレーサービスをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="9c51beb32341f5628c86530e61f310f21b494f6d" translate="yes" xml:space="preserve">
          <source>The above command imports the IGMP based networking and security service named &lt;code&gt;ns_service_igmp&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;ns_service_igmp&lt;/code&gt; という名前のIGMPベースのネットワークおよびセキュリティサービスをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="98e306bb9166fa0253a5199f25e7a91749986693" translate="yes" xml:space="preserve">
          <source>The above command imports the IP protocol based networking and security service named &lt;code&gt;ns_service_ip&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;ns_service_ip&lt;/code&gt; という名前のIPプロトコルベースのネットワークおよびセキュリティサービスをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="9c8126a2d9cc521c165cc61e2dec4648af1c8dc0" translate="yes" xml:space="preserve">
          <source>The above command imports the IP set named &lt;code&gt;ip_set1&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;ip_set1&lt;/code&gt; という名前のIPセットをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="d713240fe2d8527598b3e3e6ee37dcf19be10fdb" translate="yes" xml:space="preserve">
          <source>The above command imports the NAT rule named &lt;code&gt;rule1&lt;/code&gt; with the number id &lt;code&gt;nat-rule-num&lt;/code&gt; that belongs to the tier 1 logical router with the NSX id &lt;code&gt;logical-router-uuid&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、NSX ID &lt;code&gt;logical-router-uuid&lt;/code&gt; のTier 1論理ルーターに属する番号id &lt;code&gt;nat-rule-num&lt;/code&gt; の &lt;code&gt;rule1&lt;/code&gt; という名前のNATルールをインポートします。</target>
        </trans-unit>
        <trans-unit id="f8a899540911cec19a22ffb04576c0c44ba848d8" translate="yes" xml:space="preserve">
          <source>The above command imports the algorithm based networking and security service named &lt;code&gt;ns_service_alg&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;ns_service_alg&lt;/code&gt; という名前のアルゴリズムベースのネットワーキングおよびセキュリティサービスをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="3334daea80454da2ea3c88e9574a23f711b81f55" translate="yes" xml:space="preserve">
          <source>The above command imports the ethernet type networking and security service named &lt;code&gt;etns&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;etns&lt;/code&gt; という名前のイーサネットタイプのネットワーキングおよびセキュリティサービスをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="19535fe0065fb40390b251dd3d7358130fc11828" translate="yes" xml:space="preserve">
          <source>The above command imports the firewall section named &lt;code&gt;firewall_sect&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドの輸入という名前のファイアウォールセクション &lt;code&gt;firewall_sect&lt;/code&gt; NSX IDと &lt;code&gt;UUID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="75519316e98d3ae58f2b5cdc7ff822c2378036f7" translate="yes" xml:space="preserve">
          <source>The above command imports the layer 4 port based networking and security service named &lt;code&gt;ns_service_l4&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;ns_service_l4&lt;/code&gt; という名前のレイヤー4ポートベースのネットワークおよびセキュリティサービスをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="b270c834b69d9d6ca2654534f6455ebb11e781ca" translate="yes" xml:space="preserve">
          <source>The above command imports the logical port named &lt;code&gt;logical_port&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;logical_port&lt;/code&gt; という名前の論理ポートをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="12a33227c347f430a3c2c7c2e998569d19f7233f" translate="yes" xml:space="preserve">
          <source>The above command imports the logical router downlink port named &lt;code&gt;downlink_port&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドの輸入論理ルータのダウンリンクポートという名前 &lt;code&gt;downlink_port&lt;/code&gt; NSX IDを持つ &lt;code&gt;UUID&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b93288d39176b62a790994ff2501cbe0be8fd50c" translate="yes" xml:space="preserve">
          <source>The above command imports the logical router link port on the tier 0 logical router named &lt;code&gt;link_port_tier0&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;link_port_tier0&lt;/code&gt; という名前のTier 0論理ルーターの論理ルーターリンクポートをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="baa8b28c1d2b3ecd0a194e7c9a7275fe2e7bb321" translate="yes" xml:space="preserve">
          <source>The above command imports the logical router link port on the tier 1 router named &lt;code&gt;link_port_tier1&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;link_port_tier1&lt;/code&gt; という名前のTier 1ルーターの論理ルーターリンクポートをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="f2bcc920e450a4500b3b3dbc2d21711fad2dcbcf" translate="yes" xml:space="preserve">
          <source>The above command imports the logical switch named &lt;code&gt;switch1&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、NSX ID &lt;code&gt;UUID&lt;/code&gt; を &lt;code&gt;switch1&lt;/code&gt; して、switch1という名前の論理スイッチをインポートします。</target>
        </trans-unit>
        <trans-unit id="712c63b0cfc600d5d9c31b50306ff3744b991c14" translate="yes" xml:space="preserve">
          <source>The above command imports the logical tier 1 router named &lt;code&gt;tier1_router&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、NSX ID &lt;code&gt;UUID&lt;/code&gt; を持つ &lt;code&gt;tier1_router&lt;/code&gt; という名前の論理Tier 1ルーターをインポートします。</target>
        </trans-unit>
        <trans-unit id="ad1c9b5a1182922719c004214838c5090a6c4aef" translate="yes" xml:space="preserve">
          <source>The above command imports the networking and security group named &lt;code&gt;group2&lt;/code&gt; with the NSX id &lt;code&gt;UUID&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、 &lt;code&gt;group2&lt;/code&gt; という名前のネットワークとセキュリティグループをNSX ID &lt;code&gt;UUID&lt;/code&gt; でインポートします。</target>
        </trans-unit>
        <trans-unit id="6fd2192657b010e67e3d7b23cd4229ffb370f1d9" translate="yes" xml:space="preserve">
          <source>The above command imports the static route named &lt;code&gt;static_route&lt;/code&gt; with the number &lt;code&gt;static-route-num&lt;/code&gt; that belongs to the tier 1 logical router with the NSX id &lt;code&gt;logical-router-uuid&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、NSX IDが &lt;code&gt;logical-router-uuid&lt;/code&gt; であるTier 1論理ルーターに属する番号 &lt;code&gt;static-route-num&lt;/code&gt; を持つ &lt;code&gt;static_route&lt;/code&gt; という名前の静的ルートをインポートします。</target>
        </trans-unit>
        <trans-unit id="a2b1a710155eb6f80041306431b1b061ac3ab8b2" translate="yes" xml:space="preserve">
          <source>The above command would import the folder from our examples above, the VM folder named &lt;code&gt;terraform-test-folder&lt;/code&gt; located in the datacenter named &lt;code&gt;default-dc&lt;/code&gt;.</source>
          <target state="translated">上記のコマンドは、上記の例からフォルダーをインポートします。つまり、 &lt;code&gt;default-dc&lt;/code&gt; という名前のデータセンターにある &lt;code&gt;terraform-test-folder&lt;/code&gt; という名前のVMフォルダーです。</target>
        </trans-unit>
        <trans-unit id="2455119df77609282e1646d33e4ab588bd4d1970" translate="yes" xml:space="preserve">
          <source>The above example would use the &lt;a href=&quot;https://registry.terraform.io/modules/hashicorp/consul/aws&quot;&gt;Consul module for AWS&lt;/a&gt; from the public registry.</source>
          <target state="translated">上記の例では、パブリックレジストリから&lt;a href=&quot;https://registry.terraform.io/modules/hashicorp/consul/aws&quot;&gt;AWS&lt;/a&gt;用のConsulモジュールを使用します。</target>
        </trans-unit>
        <trans-unit id="f3e678c12cba70392e2cdd731c007b3a8ce68ab4" translate="yes" xml:space="preserve">
          <source>The above import is considered a &quot;simple import&quot;: one resource is imported into the state file. An import may also result in a &quot;complex import&quot; where multiple resources are imported. For example, an AWS security group imports an &lt;code&gt;aws_security_group&lt;/code&gt; but also one &lt;code&gt;aws_security_group_rule&lt;/code&gt; for each rule.</source>
          <target state="translated">上記のインポートは「単純なインポート」と見なされます。1つのリソースが状態ファイルにインポートされます。インポートにより、複数のリソースがインポートされる「複雑なインポート」が発生する場合もあります。たとえば、AWSセキュリティグループは &lt;code&gt;aws_security_group&lt;/code&gt; をインポートしますが、ルールごとに1つの &lt;code&gt;aws_security_group_rule&lt;/code&gt; もインポートします。</target>
        </trans-unit>
        <trans-unit id="ad8dacfff22f44bcfd5f8d3f95be0eff3e8607c7" translate="yes" xml:space="preserve">
          <source>The above is the simplest possible Lambda function for use with API Gateway, returning a hard-coded &quot;Hello world!&quot; response in the object structure that API Gateway expects.</source>
          <target state="translated">上記はAPI Gatewayで使用するための最もシンプルなLambda関数で、API Gatewayが期待するオブジェクト構造でハードコードされた &quot;Hello world!&quot;レスポンスを返します。</target>
        </trans-unit>
        <trans-unit id="644940e5de7540b418d1d9f565cbd46c794b3ecf" translate="yes" xml:space="preserve">
          <source>The above service imports the ICMP type network and security service named &lt;code&gt;x&lt;/code&gt; with the NSX id &lt;code&gt;id&lt;/code&gt;.</source>
          <target state="translated">上記のサービスは、ICXタイプのネットワークと、NSX ID &lt;code&gt;id&lt;/code&gt; を持つ &lt;code&gt;x&lt;/code&gt; という名前のセキュリティサービスをインポートします。</target>
        </trans-unit>
        <trans-unit id="0d3e681af6cb170fca5237d8306e2e54ae850c70" translate="yes" xml:space="preserve">
          <source>The above would import NSX virtual machine tags as a resource named &lt;code&gt;vm1_tags&lt;/code&gt; with the NSX id &lt;code&gt;id&lt;/code&gt;, where id is external ID (not the BIOS id) of the virtual machine.</source>
          <target state="translated">上記は、NSX仮想マシンタグをNSX id &lt;code&gt;id&lt;/code&gt; を持つ &lt;code&gt;vm1_tags&lt;/code&gt; という名前のリソースとしてインポートします。idは仮想マシンの外部ID（BIOS IDではありません）です。</target>
        </trans-unit>
        <trans-unit id="b557b65e37cf850143ef43a3e26120595aa73b3a" translate="yes" xml:space="preserve">
          <source>The above would import the DVS named &lt;code&gt;dvs&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">上記は、 &lt;code&gt;dc1&lt;/code&gt; データセンターにある &lt;code&gt;dvs&lt;/code&gt; という名前のDVSをインポートします。</target>
        </trans-unit>
        <trans-unit id="3c7800e5fcd652088179d91fa4f173088eb83007" translate="yes" xml:space="preserve">
          <source>The above would import the cluster named &lt;code&gt;compute-cluster&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">上記は、 &lt;code&gt;dc1&lt;/code&gt; データセンターにある &lt;code&gt;compute-cluster&lt;/code&gt; clusterという名前のクラスターをインポートします。</target>
        </trans-unit>
        <trans-unit id="8b1df0d66ae4a86d5cf4c965e2fab7f69df3d34c" translate="yes" xml:space="preserve">
          <source>The above would import the datastore cluster named &lt;code&gt;ds-cluster&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">上記は、 &lt;code&gt;dc1&lt;/code&gt; データセンターにある &lt;code&gt;ds-cluster&lt;/code&gt; という名前のデータストアクラスターをインポートします。</target>
        </trans-unit>
        <trans-unit id="b5422358d6657a69de22a35c64c46df9eb0f9d72" translate="yes" xml:space="preserve">
          <source>The above would import the port group named &lt;code&gt;pg&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">上記は、 &lt;code&gt;dc1&lt;/code&gt; データセンターにある &lt;code&gt;pg&lt;/code&gt; という名前のポートグループをインポートします。</target>
        </trans-unit>
        <trans-unit id="adcf1d274416d7f9b80bbd044acc2cd947476e4e" translate="yes" xml:space="preserve">
          <source>The above would import the resource pool named &lt;code&gt;resource-pool1&lt;/code&gt; that is located in the compute cluster &lt;code&gt;compute-cluster1&lt;/code&gt; in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">上記は、 &lt;code&gt;dc1&lt;/code&gt; データセンターの計算クラスター &lt;code&gt;compute-cluster1&lt;/code&gt; にある &lt;code&gt;resource-pool1&lt;/code&gt; という名前のリソースプールをインポートします。</target>
        </trans-unit>
        <trans-unit id="020734da81e7b8b083a868337103e7f20f7b6893" translate="yes" xml:space="preserve">
          <source>The above would import the virtual machine named &lt;code&gt;srv1&lt;/code&gt; that is located in the &lt;code&gt;dc1&lt;/code&gt; datacenter.</source>
          <target state="translated">上記は、 &lt;code&gt;dc1&lt;/code&gt; データセンターにある &lt;code&gt;srv1&lt;/code&gt; という名前の仮想マシンをインポートします。</target>
        </trans-unit>
        <trans-unit id="7cb82d5948b8ecc0595872ab3bc6d73635a281b9" translate="yes" xml:space="preserve">
          <source>The account must have the &lt;code&gt;teams&lt;/code&gt; ability to use the following resource.</source>
          <target state="translated">アカウントには、 &lt;code&gt;teams&lt;/code&gt; が次のリソースを使用できる必要があります。</target>
        </trans-unit>
        <trans-unit id="c4e12f784b6d375aab5794216652ba327a655580" translate="yes" xml:space="preserve">
          <source>The alert notification resource allows an alert notification channel to be created on a Grafana server.</source>
          <target state="translated">アラート通知リソースを使用すると、Grafanaサーバー上にアラート通知チャンネルを作成することができます。</target>
        </trans-unit>
        <trans-unit id="f204943fa1f9e11faaf1d702023504f2ecec8cd1" translate="yes" xml:space="preserve">
          <source>The amount of memory to allocate in megabytes.</source>
          <target state="translated">割り当てるメモリの量をメガバイト単位で指定します。</target>
        </trans-unit>
        <trans-unit id="351512cc0f45fe5e8b08923438fbe5f4793a6e70" translate="yes" xml:space="preserve">
          <source>The amount of parallelism is limited using a semaphore to prevent too many concurrent operations from overwhelming the resources of the machine running Terraform. By default, up to 10 nodes in the graph will be processed concurrently. This number can be set using the &lt;code&gt;-parallelism&lt;/code&gt; flag on the &lt;a href=&quot;../commands/plan&quot;&gt;plan&lt;/a&gt;, &lt;a href=&quot;../commands/apply&quot;&gt;apply&lt;/a&gt;, and &lt;a href=&quot;../commands/destroy&quot;&gt;destroy&lt;/a&gt; commands.</source>
          <target state="translated">並列処理の量は、Terraformを実行しているマシンのリソースに過度の同時操作がかかりすぎないように、セマフォを使用して制限されています。デフォルトでは、グラフ内の最大10個のノードが同時に処理されます。この数は、&lt;a href=&quot;../commands/plan&quot;&gt;plan&lt;/a&gt;、&lt;a href=&quot;../commands/apply&quot;&gt;apply&lt;/a&gt;、および&lt;a href=&quot;../commands/destroy&quot;&gt;destroy&lt;/a&gt;コマンドで &lt;code&gt;-parallelism&lt;/code&gt; フラグを使用して設定できます。</target>
        </trans-unit>
        <trans-unit id="931ac2761412b1f043ec2545c1ef27c8f451d4d1" translate="yes" xml:space="preserve">
          <source>The archive provider exposes resources to manage archive files.</source>
          <target state="translated">アーカイブプロバイダは、アーカイブファイルを管理するためのリソースを公開しています。</target>
        </trans-unit>
        <trans-unit id="1670ed9d8476bad26919b32858bf1c0fdaf753df" translate="yes" xml:space="preserve">
          <source>The arguments &lt;code&gt;alias&lt;/code&gt; and &lt;code&gt;version&lt;/code&gt;, if present, are special arguments handled by Terraform Core for their respective features described above. All other arguments are defined by the provider itself.</source>
          <target state="translated">引数 &lt;code&gt;alias&lt;/code&gt; と &lt;code&gt;version&lt;/code&gt; は、存在する場合、上記のそれぞれの機能のためにTerraform Coreによって処理される特別な引数です。他のすべての引数は、プロバイダー自体によって定義されます。</target>
        </trans-unit>
        <trans-unit id="2af3168cef48577109a54708ce041ca79e6765fc" translate="yes" xml:space="preserve">
          <source>The arguments for &lt;code&gt;default_cache_behavior&lt;/code&gt; are the same as for &lt;a href=&quot;#cache-behavior-arguments&quot;&gt;&lt;code&gt;ordered_cache_behavior&lt;/code&gt;&lt;/a&gt;, except for the &lt;code&gt;path_pattern&lt;/code&gt; argument is not required.</source>
          <target state="translated">引数 &lt;code&gt;default_cache_behavior&lt;/code&gt; はと同じです&lt;a href=&quot;#cache-behavior-arguments&quot;&gt; &lt;code&gt;ordered_cache_behavior&lt;/code&gt; &lt;/a&gt;を除き、 &lt;code&gt;path_pattern&lt;/code&gt; 引数は必要ありません。</target>
        </trans-unit>
        <trans-unit id="e7ea6d2f31652d70354a9d868206833f8c797f61" translate="yes" xml:space="preserve">
          <source>The arguments listed above are all exported as attributes.</source>
          <target state="translated">上記の引数はすべて属性としてエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="08a3987ed00843a5828e511e4217d3db9f6ac890" translate="yes" xml:space="preserve">
          <source>The arguments of &lt;code&gt;geo_restriction&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;geo_restriction&lt;/code&gt; の引数は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="3df2a4b5daae4230a3860143863d6bc2ffd8ca1e" translate="yes" xml:space="preserve">
          <source>The arguments of an &lt;code&gt;aws_default_security_group&lt;/code&gt; differ slightly from &lt;code&gt;aws_security_group&lt;/code&gt; resources. Namely, the &lt;code&gt;name&lt;/code&gt; argument is computed, and the &lt;code&gt;name_prefix&lt;/code&gt; attribute removed. The following arguments are still supported:</source>
          <target state="translated">&lt;code&gt;aws_default_security_group&lt;/code&gt; の引数は、 &lt;code&gt;aws_security_group&lt;/code&gt; リソースとは少し異なります。つまり、 &lt;code&gt;name&lt;/code&gt; 引数が計算され、 &lt;code&gt;name_prefix&lt;/code&gt; 属性が削除されます。次の引数は引き続きサポートされています。</target>
        </trans-unit>
        <trans-unit id="68c4eb7617fc262a75eae853b474968c9a980966" translate="yes" xml:space="preserve">
          <source>The arguments of an &lt;code&gt;aws_default_subnet&lt;/code&gt; differ from &lt;code&gt;aws_subnet&lt;/code&gt; resources. Namely, the &lt;code&gt;availability_zone&lt;/code&gt; argument is required and the &lt;code&gt;vpc_id&lt;/code&gt;, &lt;code&gt;cidr_block&lt;/code&gt;, &lt;code&gt;ipv6_cidr_block&lt;/code&gt;, and &lt;code&gt;assign_ipv6_address_on_creation&lt;/code&gt; arguments are computed. The following arguments are still supported:</source>
          <target state="translated">&lt;code&gt;aws_default_subnet&lt;/code&gt; の引数は、 &lt;code&gt;aws_subnet&lt;/code&gt; リソースとは異なります。つまり、 &lt;code&gt;availability_zone&lt;/code&gt; 引数が必要で、 &lt;code&gt;vpc_id&lt;/code&gt; 、 &lt;code&gt;cidr_block&lt;/code&gt; 、 &lt;code&gt;ipv6_cidr_block&lt;/code&gt; 、および &lt;code&gt;assign_ipv6_address_on_creation&lt;/code&gt; 引数が計算されます。次の引数は引き続きサポートされています。</target>
        </trans-unit>
        <trans-unit id="ce354a3422650084b0db37e2eede0b6d0a2962d2" translate="yes" xml:space="preserve">
          <source>The arguments of an &lt;code&gt;aws_default_vpc&lt;/code&gt; differ slightly from &lt;code&gt;aws_vpc&lt;/code&gt; resources. Namely, the &lt;code&gt;cidr_block&lt;/code&gt;, &lt;code&gt;instance_tenancy&lt;/code&gt; and &lt;code&gt;assign_generated_ipv6_cidr_block&lt;/code&gt; arguments are computed. The following arguments are still supported:</source>
          <target state="translated">&lt;code&gt;aws_default_vpc&lt;/code&gt; の引数は、 &lt;code&gt;aws_vpc&lt;/code&gt; リソースとは少し異なります。つまり、 &lt;code&gt;cidr_block&lt;/code&gt; 、 &lt;code&gt;instance_tenancy&lt;/code&gt; 、および &lt;code&gt;assign_generated_ipv6_cidr_block&lt;/code&gt; 引数が計算されます。次の引数は引き続きサポートされています。</target>
        </trans-unit>
        <trans-unit id="0d76ec05ca1758f34834b060e9d76f2ed1d5d556" translate="yes" xml:space="preserve">
          <source>The arguments of an &lt;code&gt;aws_default_vpc_dhcp_options&lt;/code&gt; differ slightly from &lt;code&gt;aws_vpc_dhcp_options&lt;/code&gt; resources. Namely, the &lt;code&gt;domain_name&lt;/code&gt;, &lt;code&gt;domain_name_servers&lt;/code&gt; and &lt;code&gt;ntp_servers&lt;/code&gt; arguments are computed. The following arguments are still supported:</source>
          <target state="translated">&lt;code&gt;aws_default_vpc_dhcp_options&lt;/code&gt; の引数は、 &lt;code&gt;aws_vpc_dhcp_options&lt;/code&gt; リソースとは少し異なります。つまり、 &lt;code&gt;domain_name&lt;/code&gt; 、 &lt;code&gt;domain_name_servers&lt;/code&gt; 、および &lt;code&gt;ntp_servers&lt;/code&gt; 引数が計算されます。次の引数は引き続きサポートされています。</target>
        </trans-unit>
        <trans-unit id="f071a0ac69deae5ab418fcbe4843f80c5c9cc062" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Elastic IPs in the current region. The given filters must match exactly one Elastic IP whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、現在のリージョンで利用可能な Elastic IP を問い合わせるためのフィルタとして機能します。与えられたフィルタは、データが属性としてエクスポートされる1つのElastic IPと正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="31f38692aa0ab6c214fdae21c047f43c836402c0" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Hosted Zone. You have to use &lt;code&gt;zone_id&lt;/code&gt; or &lt;code&gt;name&lt;/code&gt;, not both of them. The given filter must match exactly one Hosted Zone. If you use &lt;code&gt;name&lt;/code&gt; field for private Hosted Zone, you need to add &lt;code&gt;private_zone&lt;/code&gt; field to &lt;code&gt;true&lt;/code&gt;</source>
          <target state="translated">このデータソースの引数は、使用可能なホストゾーンを照会するためのフィルターとして機能します。両方ではなく、 &lt;code&gt;zone_id&lt;/code&gt; または &lt;code&gt;name&lt;/code&gt; を使用する必要があります。指定されたフィルターは、1つのホストゾーンと正確に一致する必要があります。プライベートホストゾーンの &lt;code&gt;name&lt;/code&gt; フィールドを使用する場合は、 &lt;code&gt;private_zone&lt;/code&gt; フィールドを &lt;code&gt;true&lt;/code&gt; に追加する必要があります</target>
        </trans-unit>
        <trans-unit id="0c4137725680d612c9c824fb381dbd838022cde4" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Internet Gateway in the current region. The given filters must match exactly one Internet Gateway whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、現在の地域で利用可能なインターネットゲートウェイを問い合わせるためのフィルタとして動作します。与えられたフィルタは、データが属性としてエクスポートされるインターネットゲートウェイと正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="b989270a392c69d3282b4ec05dc8e15b4a4ab5ca" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Nat Gateways in the current region. The given filters must match exactly one Nat Gateway whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、 現在の地域で利用可能な Nat ゲートウェイを検索するためのフィルタとして機能します。与えられたフィルタは、データが属性としてエクスポートされる Nat ゲートウェイと正確に一致している必要があります。</target>
        </trans-unit>
        <trans-unit id="d6a569da7469fc4d11a78ba820748b571453511a" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Organizations. The given filters must match exactly one Organizations whose data will be exported as attributes. The following arguments are supported:</source>
          <target state="translated">このデータソースの引数は、利用可能な組織を問い合わせるためのフィルタとして機能します。与えられたフィルタは、データが属性としてエクスポートされる1つの組織と正確に一致しなければなりません。次の引数がサポートされています。</target>
        </trans-unit>
        <trans-unit id="e3396c565221f3b953897fde1981093d2fa89adc" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Route Table in the current region. The given filters must match exactly one Route Table whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、現在の地域で利用可能なルートテーブルを問い合わせるためのフィルタとして動作します。与えられたフィルタは、データが属性としてエクスポートされるルートテーブルと正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="f376534a95c393ef623b6ca76694395e8172726b" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available Route in the current region. The given filters must match exactly one Route whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、現在の地域で利用可能な Route を問い合わせるためのフィルタとして動作します。与えられたフィルタは、データが属性としてエクスポートされる1つのRouteと正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="3cd2061b08f5276de70ed690d2936ee641022992" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPC endpoint services. The given filters must match exactly one VPC endpoint service whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、利用可能なVPCエンドポイントサービスを照会するためのフィルタとして機能します。与えられたフィルタは、データが属性としてエクスポートされるVPCエンドポイントサービスと正確に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="4089dd4205c1b2a9efa0994e96f5345dcea3ffe5" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPC endpoints. The given filters must match exactly one VPC endpoint whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、利用可能なVPCエンドポイントを問い合わせるためのフィルタとして機能します。与えられたフィルタは、データが属性としてエクスポートされるVPCエンドポイントに1つだけ一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="b14ae79bf21fc3ff0e90c45aedfc51982a7e07b4" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPC peering connection. The given filters must match exactly one VPC peering connection whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、利用可能なVPCピアリング接続を問い合わせるためのフィルタとして動作します。与えられたフィルタは、データが属性としてエクスポートされるVPCピアリング接続と正確に一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="0f32cf630f51b2c6b747b6735c6d72e1695c6dbd" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPCs in the current region. The given filters must match exactly one VPC whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、現在の地域で利用可能なVPCを問い合わせるためのフィルタとして機能します。与えられたフィルタは、データが属性としてエクスポートされるVPCと正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="5ab58293fd1e63b8973bf08fe2b12b1e84ce5d0c" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available VPN gateways. The given filters must match exactly one VPN gateway whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、利用可能なVPNゲートウェイを問い合わせるためのフィルタとして動作します。与えられたフィルタは、データが属性としてエクスポートされるVPNゲートウェイと正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="cd2c68659ce0bb1477a6b2c885b9f9d096e08e08" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available availability zones. The given filters must match exactly one availability zone whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、利用可能なアベイラビリティゾーンを照会するためのフィルタとして機能する。与えられたフィルタは、データが属性としてエクスポートされるアベイラビリティ・ゾーンと正確に一致しなければならない。</target>
        </trans-unit>
        <trans-unit id="aa9b8453c4f220d5cfb6a5b83311a68bc19d92af" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available billing accounts. The given filters must match exactly one billing account whose data will be exported as attributes. The following arguments are supported:</source>
          <target state="translated">このデータソースの引数は、利用可能な課金アカウントを照会するためのフィルタとして動作します。与えられたフィルタは、データが属性としてエクスポートされる課金アカウントに正確に1つ一致しなければなりません。次の引数がサポートされています。</target>
        </trans-unit>
        <trans-unit id="d8c1be4aa3badf57b1bd8d041c7542ed001f9c17" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available prefix lists. The given filters must match exactly one prefix list whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、利用可能なプレフィックスリストを問い合わせるためのフィルタとして動作します。与えられたフィルタは、そのデータが属性としてエクスポートされるプレフィックスリストのうちのひとつと正確に一致していなければなりません。</target>
        </trans-unit>
        <trans-unit id="9447310e6d29a330beb2ffbfc854a9a42316f849" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available regions. The given filters must match exactly one region whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、利用可能な領域を検索するためのフィルタとして機能します。与えられたフィルタは、データが属性としてエクスポートされる地域のうちの一つと正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="aa96f39bc323540fb280b53fd2d7889c74451603" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available security group in the current region. The given filters must match exactly one security group whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、現在の地域で利用可能なセキュリティグループを問い合わせるためのフィルタとして動作します。与えられたフィルタは、データが属性としてエクスポートされるセキュリティグループと正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="5ef1dd786501fc4751b38465f1add7651374995d" translate="yes" xml:space="preserve">
          <source>The arguments of this data source act as filters for querying the available subnets in the current region. The given filters must match exactly one subnet whose data will be exported as attributes.</source>
          <target state="translated">このデータソースの引数は、現在の地域で利用可能なサブネットを問い合わせるためのフィルタとして動作します。与えられたフィルタは、データが属性としてエクスポートされるサブネットと正確に一致しなければなりません。</target>
        </trans-unit>
        <trans-unit id="44a5c4144f995dbd744f8e868089af01dd47106d" translate="yes" xml:space="preserve">
          <source>The arguments used in a &lt;code&gt;module&lt;/code&gt; block, such as the &lt;code&gt;servers&lt;/code&gt; parameter above, correspond to &lt;a href=&quot;../configuration/variables&quot;&gt;variables&lt;/a&gt; within the module itself. You can therefore discover all the available variables for a module by inspecting the source of it.</source>
          <target state="translated">上記の &lt;code&gt;servers&lt;/code&gt; パラメーターなど、 &lt;code&gt;module&lt;/code&gt; ブロックで使用される引数は、モジュール自体内の&lt;a href=&quot;../configuration/variables&quot;&gt;変数&lt;/a&gt;に対応します。したがって、モジュールのソースを調べることにより、モジュールで使用可能なすべての変数を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="b17a360785d2ab65a172feb52287fec82e5ea5bf" translate="yes" xml:space="preserve">
          <source>The assigned &lt;code&gt;principal_id&lt;/code&gt; and &lt;code&gt;tenant_id&lt;/code&gt; can be retrieved after the App Service has been created. More details are available below.</source>
          <target state="translated">割り当てられた &lt;code&gt;principal_id&lt;/code&gt; および &lt;code&gt;tenant_id&lt;/code&gt; は、App Serviceの作成後に取得できます。詳細は以下をご覧ください。</target>
        </trans-unit>
        <trans-unit id="0f1f237e350767429bd893bd00a9a3be621bb732" translate="yes" xml:space="preserve">
          <source>The assigned &lt;code&gt;principal_id&lt;/code&gt; and &lt;code&gt;tenant_id&lt;/code&gt; can be retrieved after the identity &lt;code&gt;type&lt;/code&gt; has been set to &lt;code&gt;SystemAssigned&lt;/code&gt; and Storage Account has been created. More details are available below.</source>
          <target state="translated">割り当てられた &lt;code&gt;principal_id&lt;/code&gt; および &lt;code&gt;tenant_id&lt;/code&gt; は、ID &lt;code&gt;type&lt;/code&gt; が &lt;code&gt;SystemAssigned&lt;/code&gt; に設定され、ストレージアカウントが作成された後で取得できます。詳細は以下をご覧ください。</target>
        </trans-unit>
        <trans-unit id="a123857707d09c2940428b0452ab64bac4417cca" translate="yes" xml:space="preserve">
          <source>The attached ECS instances and the instance with active scaling configurations must have the same instance type.</source>
          <target state="translated">アタッチされたECSインスタンスとアクティブなスケーリング構成を持つインスタンスは、同じインスタンスタイプを持つ必要があります。</target>
        </trans-unit>
        <trans-unit id="476319ec043ffafeb149460b5200f138ed242d63" translate="yes" xml:space="preserve">
          <source>The attached ECS instances and the scaling group must have the same region and network type(&lt;code&gt;Classic&lt;/code&gt; or &lt;code&gt;VPC&lt;/code&gt;).</source>
          <target state="translated">接続されたECSインスタンスとスケーリンググループは、同じリージョンとネットワークタイプ（ &lt;code&gt;Classic&lt;/code&gt; または &lt;code&gt;VPC&lt;/code&gt; ）である必要があります。</target>
        </trans-unit>
        <trans-unit id="dcb3088fc23d2e0d06472b8fd67aabc3fbfda7aa" translate="yes" xml:space="preserve">
          <source>The attached ECS instances has not been attached to other scaling groups.</source>
          <target state="translated">添付されているECSインスタンスは、他のスケーリンググループには添付されていません。</target>
        </trans-unit>
        <trans-unit id="76e894148d05a703a1deff630201d9bd041b8627" translate="yes" xml:space="preserve">
          <source>The attached ECS instances must in the running state.</source>
          <target state="translated">アタッチされたECSインスタンスは実行中の状態でなければなりません。</target>
        </trans-unit>
        <trans-unit id="d91db1504395ce511b3fdaef669a35266e485433" translate="yes" xml:space="preserve">
          <source>The attached ECS instances supports Subscription and Pay-As-You-Go payment methods.</source>
          <target state="translated">付属のECSインスタンスは、サブスクリプションとPay-As-You-Goの支払い方法をサポートしています。</target>
        </trans-unit>
        <trans-unit id="30b8c77add901423d5ed8f18c7fffb333a78bb5b" translate="yes" xml:space="preserve">
          <source>The attributes are listed in alphabetical order (with the except of &quot;id&quot; which is always at the top). They are outputted in a way that is easy to parse on the command-line.</source>
          <target state="translated">属性はアルファベット順にリストアップされている(ただし、&quot;id &quot;は常に先頭にある)。これらの属性は、コマンドラインで解析しやすいように出力されます。</target>
        </trans-unit>
        <trans-unit id="34098599941585267c73eb7b2e97b6896680b475" translate="yes" xml:space="preserve">
          <source>The automatic plugin installation behavior can be overridden by extracting the desired providers into a local directory and using the additional option &lt;code&gt;-plugin-dir=PATH&lt;/code&gt;. When this option is specified, &lt;em&gt;only&lt;/em&gt; the given directory is consulted, which prevents Terraform from making requests to the plugin repository or looking for plugins in other local directories. Passing an empty string to &lt;code&gt;-plugin-dir&lt;/code&gt; removes any previously recorded paths.</source>
          <target state="translated">プラグインの自動インストール動作は、目的のプロバイダーをローカルディレクトリに抽出し、追加のオプション &lt;code&gt;-plugin-dir=PATH&lt;/code&gt; を使用することで上書きできます。このオプションを指定すると、特定のディレクトリ&lt;em&gt;のみ&lt;/em&gt;が参照され、Terraformがプラグインリポジトリにリクエストを作成したり、他のローカルディレクトリでプラグインを検索したりできなくなります。空の文字列を &lt;code&gt;-plugin-dir&lt;/code&gt; に渡すと、以前に記録されたパスがすべて削除されます。</target>
        </trans-unit>
        <trans-unit id="4afca0565fb2bd7d1ab52d9955f04f8621b2e6d7" translate="yes" xml:space="preserve">
          <source>The automation level can be further tuned for each specific SDRS subsystem. Specifying an override will set the automation level for that part of Storage DRS to the respective level. Not specifying an override infers that you want to use the cluster default automation level.</source>
          <target state="translated">オートメーションレベルは、特定の SDRS サブシステムごとにさらに調整することができます。オーバーライドを指定すると、Storage DRS のその部分の自動化レベルがそれぞれのレベルに設定されます。オーバーライドを指定しないと、クラスタのデフォルトの自動化レベルを使用することになります。</target>
        </trans-unit>
        <trans-unit id="bfcbea9754fb8a51b7561f9b0299c835e5c4969d" translate="yes" xml:space="preserve">
          <source>The backends are separated in the left by standard and enhanced.</source>
          <target state="translated">バックエンドは標準とエンハンスドで左に分かれています。</target>
        </trans-unit>
        <trans-unit id="ff0fb8c4a00ed11a2ce7b8f96674c4a8b60caf8b" translate="yes" xml:space="preserve">
          <source>The basic example below creates a virtual machine folder named &lt;code&gt;terraform-test-folder&lt;/code&gt; in the default datacenter's VM hierarchy.</source>
          <target state="translated">以下の基本的な例では、デフォルトのデータセンターのVM階層に &lt;code&gt;terraform-test-folder&lt;/code&gt; という名前の仮想マシンフォルダーを作成します。</target>
        </trans-unit>
        <trans-unit id="28c76f49b61cbc9346ec2f92a22badee216e9673" translate="yes" xml:space="preserve">
          <source>The behavior of any &lt;code&gt;terraform destroy&lt;/code&gt; command can be previewed at any time with an equivalent &lt;code&gt;terraform plan -destroy&lt;/code&gt; command.</source>
          <target state="translated">任意の &lt;code&gt;terraform plan -destroy&lt;/code&gt; &lt;code&gt;terraform destroy&lt;/code&gt; コマンドの動作は、同等のterraform plan -destroyコマンドを使用していつでもプレビューできます。</target>
        </trans-unit>
        <trans-unit id="3cb9f222b3a9858fd6202e280f9144a5df894971" translate="yes" xml:space="preserve">
          <source>The behavior of conversion in &lt;em&gt;this&lt;/em&gt; direction (string to boolean) will &lt;em&gt;not&lt;/em&gt; change in future Terraform versions. Therefore, using these string values rather than literal booleans is recommended when using input variables.</source>
          <target state="translated">&lt;em&gt;この&lt;/em&gt;方向への変換の動作（文字列からブール値）は、Terraformの将来のバージョンで&lt;em&gt;は&lt;/em&gt;変更され&lt;em&gt;ません&lt;/em&gt;。したがって、入力変数を使用する場合は、リテラルブール値ではなくこれらの文字列値を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="996f580e333c98fd8aa3dc30a5224793786b5935" translate="yes" xml:space="preserve">
          <source>The below example builds off of the above by first creating a folder named &lt;code&gt;terraform-test-parent&lt;/code&gt;, and then locating &lt;code&gt;terraform-test-folder&lt;/code&gt; in that folder. To ensure the parent is created first, we create an interpolation dependency off the parent's &lt;code&gt;path&lt;/code&gt; attribute.</source>
          <target state="translated">以下の例では、最初に &lt;code&gt;terraform-test-parent&lt;/code&gt; という名前のフォルダーを作成し、次にそのフォルダー &lt;code&gt;terraform-test-folder&lt;/code&gt; にterraform-test-folderを配置することで、上記の例を基にしています。親が最初に作成されるようにするために、親の &lt;code&gt;path&lt;/code&gt; 属性から補間依存関係を作成します。</target>
        </trans-unit>
        <trans-unit id="40fd8a2b8e4b5bdda99262e1aa5d7b41ed8420b9" translate="yes" xml:space="preserve">
          <source>The below is an example IAM role and policy to allow the EKS service to manage or retrieve data from other AWS services. It is also possible to create these policies with the &lt;a href=&quot;../d/iam_policy_document&quot;&gt;&lt;code&gt;aws_iam_policy_document&lt;/code&gt; data source&lt;/a&gt;</source>
          <target state="translated">以下は、EKSサービスが他のAWSサービスからデータを管理または取得できるようにするIAMロールおよびポリシーの例です。また、&lt;a href=&quot;../d/iam_policy_document&quot;&gt; &lt;code&gt;aws_iam_policy_document&lt;/code&gt; &lt;/a&gt;データソースを使用してこれらのポリシーを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="fd9dc6215bcb9ab2b0893868e60d2852713ecdf7" translate="yes" xml:space="preserve">
          <source>The below is an example IAM role and policy to allow the worker nodes to manage or retrieve data from other AWS services. It is used by Kubernetes to allow worker nodes to join the cluster. It is also possible to create these policies with the &lt;a href=&quot;../d/iam_policy_document&quot;&gt;&lt;code&gt;aws_iam_policy_document&lt;/code&gt; data source&lt;/a&gt;</source>
          <target state="translated">以下は、ワーカーノードが他のAWSサービスからデータを管理または取得できるようにするIAMロールとポリシーの例です。Kubernetesで使用され、ワー​​カーノードがクラスタに参加できるようにします。また、&lt;a href=&quot;../d/iam_policy_document&quot;&gt; &lt;code&gt;aws_iam_policy_document&lt;/code&gt; &lt;/a&gt;データソースを使用してこれらのポリシーを作成することもできます。</target>
        </trans-unit>
        <trans-unit id="e174493928c25a3c2a73abf48b27af1e7f438846" translate="yes" xml:space="preserve">
          <source>The below sample Terraform configurations reference a variable called &lt;code&gt;cluster-name&lt;/code&gt; (&lt;code&gt;var.cluster-name&lt;/code&gt;) which is used for consistency. Feel free to substitute your own cluster name or create the variable configuration:</source>
          <target state="translated">以下のサンプルTerraform構成は、一貫性を &lt;code&gt;var.cluster-name&lt;/code&gt; ために使用される &lt;code&gt;cluster-name&lt;/code&gt; （var.cluster-name）と呼ばれる変数を参照します。独自のクラスター名に置き換えるか、変数構成を作成してください。</target>
        </trans-unit>
        <trans-unit id="7cac88897f9abb4ccad4f687dc2e7930da6cb43e" translate="yes" xml:space="preserve">
          <source>The below will create a 10.0.0.0/16 VPC, two 10.0.X.0/24 subnets, an internet gateway, and setup the subnet routing to route external traffic through the internet gateway:</source>
          <target state="translated">以下は、10.0.0.0.0/16のVPC、2つの10.0.X.0/24のサブネット、インターネットゲートウェイを作成し、インターネットゲートウェイを経由して外部トラフィックをルーティングするためのサブネットルーティングを設定します。</target>
        </trans-unit>
        <trans-unit id="fc2fb84fc0abdda278fe0e89ccee2da0b7a7326a" translate="yes" xml:space="preserve">
          <source>The blue verification badge appears next to modules that are verified.</source>
          <target state="translated">検証済みモジュールの横に青い検証バッジが表示されます。</target>
        </trans-unit>
        <trans-unit id="b477c555bfe688ffb4de12dd7620f6bbdaea4ebb" translate="yes" xml:space="preserve">
          <source>The child module can then use any resource from this provider with no further provider configuration required:</source>
          <target state="translated">子モジュールは、これ以上のプロバイダ設定を必要とせずに、このプロバイダからのリソースを使用することができます。</target>
        </trans-unit>
        <trans-unit id="756f15e478be1a3c820ca4bb7c81b3687fcfaac3" translate="yes" xml:space="preserve">
          <source>The clc provider is used to interact with the many resources supported by CenturyLinkCloud. The provider needs to be configured with account credentials before it can be used.</source>
          <target state="translated">clcプロバイダーは、CenturyLinkCloudでサポートされている多くのリソースと対話するために使用されます。プロバイダを使用するには、アカウント認証情報を使用して設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="19bd4d44d457692350ec71ec7515707741086a74" translate="yes" xml:space="preserve">
          <source>The cloudscale.ch provider is used to interact with the resources supported by cloudscale.ch. The provider needs to be configured with proper credentials before it can be used.</source>
          <target state="translated">cloudscale.ch プロバイダは、cloudcale.ch がサポートするリソースとの対話に使用されます。プロバイダを使用するには、適切な資格情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="4d9969a2bd141b1f1ea491bfd768bf7a57ea38f1" translate="yes" xml:space="preserve">
          <source>The code within the binaries must adhere to certain interfaces. The network communication and RPC is handled automatically by higher-level Terraform libraries. The exact interface to implement is documented in its respective documentation section.</source>
          <target state="translated">バイナリ内のコードは、特定のインターフェイスに準拠しなければなりません。ネットワーク通信とRPCは、より高いレベルのTerraformライブラリによって自動的に処理されます。実装すべき正確なインターフェースは、それぞれのドキュメントセクションに記載されています。</target>
        </trans-unit>
        <trans-unit id="d720e77eee404616601a3639c4d5ccace51385a0" translate="yes" xml:space="preserve">
          <source>The command currently can only import one resource at a time. This means you can't yet point Terraform import to an entire collection of resources such as an AWS VPC and import all of it. This workflow will be improved in a future version of Terraform.</source>
          <target state="translated">このコマンドは現在、一度に1つのリソースしかインポートできません。つまり、TerraformのインポートをAWS VPCなどのリソースのコレクション全体にポイントして、そのすべてをインポートすることはまだできません。このワークフローは将来のTerraformのバージョンで改善される予定です。</target>
        </trans-unit>
        <trans-unit id="cd9e5ab11390d695c15657c54dfcbf5bc7ed8057" translate="yes" xml:space="preserve">
          <source>The command will list all existing workspaces. The current workspace is indicated using an asterisk (&lt;code&gt;*&lt;/code&gt;) marker.</source>
          <target state="translated">このコマンドは、既存のすべてのワークスペースをリストします。現在のワークスペースは、アスタリスク（ &lt;code&gt;*&lt;/code&gt; ）マーカーを使用して示されます。</target>
        </trans-unit>
        <trans-unit id="dd692a49ccf9bf3e406ec7ff39a0fa9c803ef8e4" translate="yes" xml:space="preserve">
          <source>The command will list all resources in the state file matching the given addresses (if any). If no addresses are given, all resources are listed.</source>
          <target state="translated">このコマンドは、指定されたアドレスに一致するステートファイル内のすべてのリソースをリストアップします(もしあれば)。アドレスが指定されていない場合は、すべてのリソースがリストアップされます。</target>
        </trans-unit>
        <trans-unit id="37db1239115e84bc0c107668bb16409b39eba24e" translate="yes" xml:space="preserve">
          <source>The command will show the attributes of a single resource in the state file that matches the given address.</source>
          <target state="translated">このコマンドは、指定されたアドレスに一致するステートファイル内の単一のリソースの属性を表示します。</target>
        </trans-unit>
        <trans-unit id="e3a7be3cd5790f62a75135c9c9aa52f03ce29893" translate="yes" xml:space="preserve">
          <source>The command-line flags are all optional (with the exception of &lt;code&gt;-index&lt;/code&gt; in certain cases, see above note). The list of available flags are:</source>
          <target state="translated">コマンドラインフラグはすべてオプションです（特定の場合の &lt;code&gt;-index&lt;/code&gt; を除いて、上記の注を参照）。使用可能なフラグのリストは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="fa47bb1ab0de40fdcb68489eb51bc8be2b0a0666" translate="yes" xml:space="preserve">
          <source>The command-line flags are all optional. The available flags are:</source>
          <target state="translated">コマンドラインフラグはすべてオプションです。利用可能なフラグは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="56284de25b2b9f81a9c96b6b4e02098b824fe0a4" translate="yes" xml:space="preserve">
          <source>The command-line flags are all optional. The list of available flags are:</source>
          <target state="translated">コマンドラインフラグはすべてオプションです。利用可能なフラグのリストは以下の通りです。</target>
        </trans-unit>
        <trans-unit id="3ece3bc5216d27414895ecc0ad4c1fa65e056264" translate="yes" xml:space="preserve">
          <source>The command-line flags are all optional. The only supported flag is:</source>
          <target state="translated">コマンドラインフラグはすべてオプションです。唯一サポートされているフラグは</target>
        </trans-unit>
        <trans-unit id="7cd0464e467cd5fee0775919d570cb8349ed76ea" translate="yes" xml:space="preserve">
          <source>The condition can be any valid interpolation syntax, such as variable access, a function call, or even another conditional. The true and false value can also be any valid interpolation syntax. The returned types by the true and false side must be the same.</source>
          <target state="translated">条件は、変数アクセス、関数呼び出し、または別の条件など、任意の有効な補間構文にすることができます。また、真と偽の値は、任意の有効な補間構文にすることができます。真側と偽側で返される型は同じでなければなりません。</target>
        </trans-unit>
        <trans-unit id="2f1087cde670a1ef63c3d799ae6c7704134fa1d6" translate="yes" xml:space="preserve">
          <source>The conditional syntax is the well-known ternary operation:</source>
          <target state="translated">条件構文は、よく知られている三項演算です。</target>
        </trans-unit>
        <trans-unit id="d626a041820fb138f938047ab691291229234797" translate="yes" xml:space="preserve">
          <source>The config supports the following:</source>
          <target state="translated">コンフィグは以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="4d5179d533a35fa624530ac9323ec9d6d3436328" translate="yes" xml:space="preserve">
          <source>The configuration below builds on the example given in the &lt;a href=&quot;distributed_virtual_switch&quot;&gt;&lt;code&gt;vsphere_distributed_virtual_switch&lt;/code&gt;&lt;/a&gt; resource by adding the &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; resource, attaching itself to the DVS created here and assigning VLAN ID 1000.</source>
          <target state="translated">構成は、以下に示す実施例に基づいて構築&lt;a href=&quot;distributed_virtual_switch&quot;&gt; &lt;code&gt;vsphere_distributed_virtual_switch&lt;/code&gt; を&lt;/a&gt;追加することによって、リソース &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; の DVSここで作成され、VLAN ID 1000を割り当てるに自身を付着、リソース。</target>
        </trans-unit>
        <trans-unit id="6f456c8cd6b5d0f738dabb70901801979e478fde" translate="yes" xml:space="preserve">
          <source>The configuration file uses the same &lt;em&gt;HCL&lt;/em&gt; syntax as &lt;code&gt;.tf&lt;/code&gt; files, but with different attributes and blocks. The following example illustrates the general syntax; see the following section for information on the meaning of each of these settings:</source>
          <target state="translated">構成ファイルは、 &lt;code&gt;.tf&lt;/code&gt; ファイルと同じ&lt;em&gt;HCL&lt;/em&gt;構文を使用しますが、属性とブロックが異なります。次の例は、一般的な構文を示しています。これらの各設定の意味については、次のセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="1a11c3d0ce48c14601a3fcc12bc6554770db3054" translate="yes" xml:space="preserve">
          <source>The configuration is placed in a single file whose location depends on the host operating system:</source>
          <target state="translated">設定は1つのファイルに格納され、その場所はホストOSに依存します。</target>
        </trans-unit>
        <trans-unit id="6c5c7d085623a51e91feb6feac3417261d796b5c" translate="yes" xml:space="preserve">
          <source>The configuration looks similar to the one below:</source>
          <target state="translated">下のような構成になっています。</target>
        </trans-unit>
        <trans-unit id="5a2c6a4d24f7ad289ffb922e840bdc187c8b6ee4" translate="yes" xml:space="preserve">
          <source>The configuration within the loaded files are appended to each other. This is in contrast to being merged. This means that two resources with the same name are not merged, and will instead cause a validation error. This is in contrast to &lt;a href=&quot;override&quot;&gt;overrides&lt;/a&gt;, which do merge.</source>
          <target state="translated">ロードされたファイル内の構成は互いに追加されます。これは、マージされるのとは対照的です。つまり、同じ名前の2つのリソースはマージされず、代わりに検証エラーが発生します。これは、マージする&lt;a href=&quot;override&quot;&gt;オーバーライド&lt;/a&gt;とは対照的です。</target>
        </trans-unit>
        <trans-unit id="68644027b4251781ded7726ec5a3a38b189114fe" translate="yes" xml:space="preserve">
          <source>The content of the file must be valid UTF-8 due to Terraform's assumptions about string encoding. Files that do not contain UTF-8 text will have invalid UTF-8 sequences replaced with the Unicode replacement character.</source>
          <target state="translated">文字列エンコーディングに関するTerraformの仮定により、ファイルの内容は有効なUTF-8でなければなりません。UTF-8 テキストを含まないファイルは、無効な UTF-8 シーケンスが Unicode 置換文字で置き換えられます。</target>
        </trans-unit>
        <trans-unit id="2455469722891c531c20c27fdaef65ea9d54e9cc" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;data&lt;/code&gt; will vary from each Block Storage service. You must have a good understanding of how the service is configured and how to make the appropriate final connection. However, if used correctly, this has the flexibility to be able to attach OpenStack Block Storage volumes to non-OpenStack resources.</source>
          <target state="translated">&lt;code&gt;data&lt;/code&gt; の内容は、各Block Storageサービスによって異なります。サービスの構成方法と適切な最終接続を行う方法を十分に理解している必要があります。ただし、正しく使用すれば、OpenStack Block Storageボリュームを非OpenStackリソースに接続できる柔軟性があります。</target>
        </trans-unit>
        <trans-unit id="910db6209a4dce6d94de73505080365d7b4374bd" translate="yes" xml:space="preserve">
          <source>The continuous_query resource allows a continuous query to be created on an InfluxDB server.</source>
          <target state="translated">continuous_query リソースは、InfluxDB サーバー上で連続的なクエリを作成できるようにします。</target>
        </trans-unit>
        <trans-unit id="3bed2bf8628cbc8168bc9b21ec0d957ebe4d6170" translate="yes" xml:space="preserve">
          <source>The conversion should be pretty straightforward and self-documented.</source>
          <target state="translated">変換はかなり簡単で、自己文書化されている必要があります。</target>
        </trans-unit>
        <trans-unit id="5e52fd7cbff2767b8d5eca68bf3e50fe05f17574" translate="yes" xml:space="preserve">
          <source>The core_rule mapping supports the following:</source>
          <target state="translated">core_ruleマッピングは以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="ea2954289f13496fbe286084eae0037cdc10d813" translate="yes" xml:space="preserve">
          <source>The created AMI will refer to implicitly-created snapshots of the instance's EBS volumes and mimick its assigned block device configuration at the time the resource is created.</source>
          <target state="translated">作成されたAMIは、インスタンスのEBSボリュームの暗黙のうちに作成されたスナップショットを参照し、リソース作成時に割り当てられたブロックデバイス構成を模倣します。</target>
        </trans-unit>
        <trans-unit id="07c26022849ad7c84ed8ec5720a02d9a13a5d721" translate="yes" xml:space="preserve">
          <source>The creation of a new certificate may of course cause dependent resources to be updated or replaced, depending on the lifecycle rules applying to those resources.</source>
          <target state="translated">新しい証明書の作成は、当然ながら、それらのリソースに適用されるライフサイクルルールに応じて、依存するリソー スが更新されたり置き換えられたりする可能性がある。</target>
        </trans-unit>
        <trans-unit id="67db8314f4a7c317af9ca5cf86d6fcd5e019c016" translate="yes" xml:space="preserve">
          <source>The credentials may also be provided to endpoints declared in the discovery document, depending on the requirements of the service in question.</source>
          <target state="translated">また、当該サービスの要件に応じて、ディスカバリー文書で宣言されたエンドポイントにクレデンシャルを提供することもできます。</target>
        </trans-unit>
        <trans-unit id="2839e819da91c75b7bf5f959a78ef680100c9129" translate="yes" xml:space="preserve">
          <source>The credentials provided in &lt;code&gt;.tf&lt;/code&gt; file will override credentials in the environment variables.</source>
          <target state="translated">&lt;code&gt;.tf&lt;/code&gt; ファイルで提供される資格情報は、環境変数の資格情報をオーバーライドします。</target>
        </trans-unit>
        <trans-unit id="a95c3c68e501075f05d73324f7064676dc8cc59a" translate="yes" xml:space="preserve">
          <source>The current Account Alias can be imported using the &lt;code&gt;account_alias&lt;/code&gt;, e.g.</source>
          <target state="translated">現在のアカウントのエイリアスを使用してインポートすることができ &lt;code&gt;account_alias&lt;/code&gt; 、例えば</target>
        </trans-unit>
        <trans-unit id="2972fffa55953fe2b7b4ad5dccd02e53ede850e9" translate="yes" xml:space="preserve">
          <source>The current Ignition version supported by this provider is the &lt;code&gt;2.1.0&lt;/code&gt;. For older versions you should use previous &lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-ignition/releases&quot;&gt;releases&lt;/a&gt; of this provider:</source>
          <target state="translated">このプロバイダーでサポートされている現在のIgnitionバージョンは &lt;code&gt;2.1.0&lt;/code&gt; です。古いバージョンの場合は、このプロバイダーの以前の&lt;a href=&quot;https://github.com/terraform-providers/terraform-provider-ignition/releases&quot;&gt;リリース&lt;/a&gt;を使用する必要があります。</target>
        </trans-unit>
        <trans-unit id="8c44a8c898b95348a8b543971b094e8c55e57d8e" translate="yes" xml:space="preserve">
          <source>The current implementation of Terraform import can only import resources into the &lt;a href=&quot;../state&quot;&gt;state&lt;/a&gt;. It does not generate configuration. A future version of Terraform will also generate configuration.</source>
          <target state="translated">Terraformインポートの現在の実装では、リソースを&lt;a href=&quot;../state&quot;&gt;状態に&lt;/a&gt;のみインポートできます。構成は生成されません。Terraformの将来のバージョンでも構成が生成されます。</target>
        </trans-unit>
        <trans-unit id="3793e9e4b5e3d55ffa1e9f58325900db9e104851" translate="yes" xml:space="preserve">
          <source>The current list of HashiCorp Providers is as follows:</source>
          <target state="translated">現在のHASHICORPプロバイダーの一覧は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="a145e7473d47dcf7fcd76b0c16ec0b74803d4fbe" translate="yes" xml:space="preserve">
          <source>The currently only allowed configurations within this block are &lt;code&gt;required_version&lt;/code&gt; and &lt;code&gt;backend&lt;/code&gt;.</source>
          <target state="translated">このブロック内で現在許可されている構成は &lt;code&gt;required_version&lt;/code&gt; および &lt;code&gt;backend&lt;/code&gt; のみです。</target>
        </trans-unit>
        <trans-unit id="0664f3b8d865508f1a40774dfa902d5b3b480557" translate="yes" xml:space="preserve">
          <source>The dashboard resource allows a dashboard to be created on a Grafana server.</source>
          <target state="translated">ダッシュボードリソースを使用すると、Grafanaサーバー上にダッシュボードを作成することができます。</target>
        </trans-unit>
        <trans-unit id="ea72b57bfc061f26dc0f15deb7f0c85977fcf699" translate="yes" xml:space="preserve">
          <source>The data centers data source can be used to search for and return an existing Virtual Data Center. You can provide a string for the name and location parameters which will be compared with provisioned Virtual Data Centers. If a single match is found, it will be returned. If your search results in multiple matches, an error will be generated. When this happens, please refine your search string so that it is specific enough to return only one result.</source>
          <target state="translated">データ センター データ ソースを使用して、既存の仮想データ センターを検索して返すことができます。プロビジョニングされた仮想データ センターと比較される名前と場所のパラメータに文字列を指定できます。一致するものが 1 つ見つかった場合は、それが返されます。検索結果に複数の一致があった場合は、エラーが発生します。このような場合は、検索文字列を絞り込んで、1 つの結果のみを返すようにしてください。</target>
        </trans-unit>
        <trans-unit id="9f9b2e3d7053fbff547aed9731b71f1347a9e1d3" translate="yes" xml:space="preserve">
          <source>The data directory is used to retain data that must persist from one command to the next, so it's important to have this variable set consistently throughout all of the Terraform workflow commands (starting with &lt;code&gt;terraform init&lt;/code&gt;) or else Terraform may be unable to find providers, modules, and other artifacts.</source>
          <target state="translated">データディレクトリは、あるコマンドから次のコマンドまで持続する必要のあるデータを保持するために使用されるため、この変数をすべてのTerraformワークフローコマンド（ &lt;code&gt;terraform init&lt;/code&gt; で始まる）全体で一貫して設定することが重要です。そうしないと、Terraformがプロバイダーを見つけられない場合があります。モジュール、およびその他の成果物。</target>
        </trans-unit>
        <trans-unit id="8824d284da8e8f9bd8fc864d8ebe1048f9599dad" translate="yes" xml:space="preserve">
          <source>The data source resource allows a data source to be created on a Grafana server.</source>
          <target state="translated">データソースリソースを使用すると、Grafanaサーバー上にデータソースを作成することができます。</target>
        </trans-unit>
        <trans-unit id="615020e664ea23b7df642c01bff3e0baa63be922" translate="yes" xml:space="preserve">
          <source>The database resource allows a database to be created on an InfluxDB server.</source>
          <target state="translated">データベースリソースは、InfluxDBサーバー上にデータベースを作成することを可能にします。</target>
        </trans-unit>
        <trans-unit id="f6d5499c6143b21dc1f8962364fac408f7266c86" translate="yes" xml:space="preserve">
          <source>The datadisk mapping supports the following:</source>
          <target state="translated">データディスクのマッピングは以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="40b76bcc30974fd74b174928f88f9c736273edc3" translate="yes" xml:space="preserve">
          <source>The datasource in the above example should be referred in &lt;code&gt;network_id&lt;/code&gt; inside &lt;code&gt;network_interface&lt;/code&gt; section for &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource.</source>
          <target state="translated">上記の例では、データソースは、で参照されるべきである &lt;code&gt;network_id&lt;/code&gt; 内部 &lt;code&gt;network_interface&lt;/code&gt; ためのセクション &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; のリソース。</target>
        </trans-unit>
        <trans-unit id="ac71784117509f99b6e5e6d359489113970f2b7c" translate="yes" xml:space="preserve">
          <source>The default &lt;code&gt;timeouts&lt;/code&gt; values are:</source>
          <target state="translated">デフォルトの &lt;code&gt;timeouts&lt;/code&gt; 値は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="5325bffde202825427dff1436d66c81b4d6d16e0" translate="yes" xml:space="preserve">
          <source>The default deadline for the EC2 metadata API endpoint is 100 milliseconds, which can be overidden by setting the &lt;code&gt;AWS_METADATA_TIMEOUT&lt;/code&gt; environment variable. The variable expects a positive golang Time.Duration string, which is a sequence of decimal numbers and a unit suffix; valid suffixes are &lt;code&gt;ns&lt;/code&gt; (nanoseconds), &lt;code&gt;us&lt;/code&gt; (microseconds), &lt;code&gt;ms&lt;/code&gt; (milliseconds), &lt;code&gt;s&lt;/code&gt; (seconds), &lt;code&gt;m&lt;/code&gt; (minutes), and &lt;code&gt;h&lt;/code&gt; (hours). Examples of valid inputs: &lt;code&gt;100ms&lt;/code&gt;, &lt;code&gt;250ms&lt;/code&gt;, &lt;code&gt;1s&lt;/code&gt;, &lt;code&gt;2.5s&lt;/code&gt;, &lt;code&gt;2.5m&lt;/code&gt;, &lt;code&gt;1m30s&lt;/code&gt;.</source>
          <target state="translated">EC2メタデータAPIエンドポイントのデフォルトの期限は100ミリ秒です。これは、 &lt;code&gt;AWS_METADATA_TIMEOUT&lt;/code&gt; 環境変数を設定することで上書きできます。変数には、10進数のシーケンスと単位の接尾辞である、正のgolang Time.Duration文字列が必要です。有効なサフィックスは、 &lt;code&gt;ns&lt;/code&gt; （ナノ秒）、 &lt;code&gt;us&lt;/code&gt; （マイクロ秒）、 &lt;code&gt;ms&lt;/code&gt; （ミリ秒）、 &lt;code&gt;s&lt;/code&gt; （秒）、 &lt;code&gt;m&lt;/code&gt; （分）、および &lt;code&gt;h&lt;/code&gt; （時間）です。 ：有効な入力の例として &lt;code&gt;100ms&lt;/code&gt; 、 &lt;code&gt;250ms&lt;/code&gt; の、 &lt;code&gt;1s&lt;/code&gt; 、 &lt;code&gt;2.5s&lt;/code&gt; 、 &lt;code&gt;2.5m&lt;/code&gt; 、 &lt;code&gt;1m30s&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="83b32299bfb57de4027b8f41e1b67b3b43f26b62" translate="yes" xml:space="preserve">
          <source>The default value is multi-regional location &lt;code&gt;US&lt;/code&gt;. Changing this forces a new resource to be created.</source>
          <target state="translated">デフォルト値は、マルチリージョンロケーション &lt;code&gt;US&lt;/code&gt; です。これを変更すると、新しいリソースが強制的に作成されます。</target>
        </trans-unit>
        <trans-unit id="7fff38ac4d1e3037e6e7673cba78f177d675a354" translate="yes" xml:space="preserve">
          <source>The default value of an input variable must be a &lt;em&gt;literal&lt;/em&gt; value, containing no interpolation expressions. To assign a name to an expression so that it may be re-used within a module, use &lt;a href=&quot;locals&quot;&gt;Local Values&lt;/a&gt; instead.</source>
          <target state="translated">入力変数のデフォルト値は、補間式を含まない&lt;em&gt;リテラル&lt;/em&gt;値でなければなりません。モジュール内で再利用できるように式に名前を割り当てるには、代わりに&lt;a href=&quot;locals&quot;&gt;ローカル値を&lt;/a&gt;使用します。</target>
        </trans-unit>
        <trans-unit id="533dabca612a3cd83068ba9954cc3a23f7c5b6be" translate="yes" xml:space="preserve">
          <source>The default weight of an ECS instance attached to the Server Load Balancer instance is 50.</source>
          <target state="translated">Server Load Balancer インスタンスにアタッチされた ECS インスタンスのデフォルトのウェイトは 50 です。</target>
        </trans-unit>
        <trans-unit id="b9d4ec4a058361785bf4bbb60cc0e278ab9cf127" translate="yes" xml:space="preserve">
          <source>The destroy function should always handle the case where the resource might already be destroyed (manually, for example). If the resource is already destroyed, this should not return an error. This allows Terraform users to manually delete resources without breaking Terraform. Recompile and reinitialize the Provider:</source>
          <target state="translated">destroy関数は、リソースがすでに破壊されているかもしれない場合(例えば、手動で)を常に処理しなければなりません。リソースがすでに破棄されている場合は、エラーを返すべきではありません。これにより、TerraformユーザーはTerraformを壊すことなく、手動でリソースを削除することができます。プロバイダを再コンパイルし、再初期化します。</target>
        </trans-unit>
        <trans-unit id="eeca85e5e53205b82ace89d3790307041ee0e4d0" translate="yes" xml:space="preserve">
          <source>The discovery protocol's purpose is to map from a user-provided hostname to the base URL of a particular service. Each host can provide different combinations of services -- or no services at all! -- and so the discovery protocol has a secondary purpose of allowing Terraform to identify &lt;em&gt;which&lt;/em&gt; services are valid for a given hostname.</source>
          <target state="translated">検出プロトコルの目的は、ユーザーが指定したホスト名から特定のサービスのベースURLにマッピングすることです。各ホストは、サービスの異なる組み合わせを提供することができます-またはまったくサービスを提供しません！-したがって、検出プロトコルには、Terraformが特定のホスト名に対して有効なサービスを識別できるようにするという副次的な目的が&lt;em&gt;あり&lt;/em&gt;ます。</target>
        </trans-unit>
        <trans-unit id="7c55e065944035c5e8aa68eb5c35b23dc7606c06" translate="yes" xml:space="preserve">
          <source>The documentation of each feature of this provider, accessible via the navigation, gives examples of situations where these constructs may prove useful.</source>
          <target state="translated">ナビゲーションからアクセス可能なこのプロバイダの各機能のドキュメントでは、これらの構成が有用であると思われる状況の例を示しています。</target>
        </trans-unit>
        <trans-unit id="9730a958e19b79e3fa757eb4e94d5638a4d5ade4" translate="yes" xml:space="preserve">
          <source>The downsides of JSON are less human readability and the lack of comments. Otherwise, the two are completely interoperable.</source>
          <target state="translated">JSONの欠点は、人間の可読性が低いことと、コメントがないことです。それ以外は、両者は完全に相互運用性があります。</target>
        </trans-unit>
        <trans-unit id="97870eb58a3956e6ddd3aeda1ca1992604747aa2" translate="yes" xml:space="preserve">
          <source>The easiest source is the local file path. For maximum portability, this should be a relative file path into a subdirectory. This allows you to organize your Terraform configuration into modules within one repository, for example:</source>
          <target state="translated">最も簡単なソースは、ローカルのファイルパスです。移植性を最大限に高めるためには、サブディレクトリへの相対ファイルパスが必要です。これにより、例えば1つのリポジトリ内でTerraformの設定をモジュールにまとめることができます。</target>
        </trans-unit>
        <trans-unit id="a32754e8b673740c7bbae7b1737747c3c4b36eed" translate="yes" xml:space="preserve">
          <source>The easiest way to configure the provider is by creating/generating a config in a default location (&lt;code&gt;~/.kube/config&lt;/code&gt;). That allows you to leave the provider block completely empty.</source>
          <target state="translated">プロバイダーを構成する最も簡単な方法は、デフォルトの場所（ &lt;code&gt;~/.kube/config&lt;/code&gt; ）に構成を作成/生成することです。これにより、プロバイダーブロックを完全に空のままにすることができます。</target>
        </trans-unit>
        <trans-unit id="997a4a80e75349715744497d8f91ccf0f4740eb3" translate="yes" xml:space="preserve">
          <source>The elastic ip address data source lists a list of eips resource information owned by an Alicloud account, and each EIP including its basic attribution and association instance.</source>
          <target state="translated">弾力的なIPアドレスデータソースは、Alicloudアカウントが所有するEIPリソース情報のリストと、基本的な帰属とアソシエーションインスタンスを含む各EIPをリストアップしています。</target>
        </trans-unit>
        <trans-unit id="5c408477f80a27372e8215326463f05a5c0cb9d6" translate="yes" xml:space="preserve">
          <source>The elements of a set can be any of the other types allowed by Terraform, including another &lt;code&gt;schema&lt;/code&gt;. Set items cannot be repeated.</source>
          <target state="translated">セットの要素は、Terraformで許可されている他のタイプ（他の &lt;code&gt;schema&lt;/code&gt; を含む）にすることができます。設定した項目を繰り返すことはできません。</target>
        </trans-unit>
        <trans-unit id="eceb149db5a7aeb706ff72b21398e3d303e976df" translate="yes" xml:space="preserve">
          <source>The example below builds on the &lt;a href=&quot;virtual_machine#using-storage-drs&quot;&gt;Storage DRS example&lt;/a&gt; in the &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource. However, rather than use the output of the &lt;a href=&quot;../d/datastore_cluster&quot;&gt;&lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; data source&lt;/a&gt; for the location of the virtual machine, we instead get what is assumed to be a member datastore using the &lt;a href=&quot;../d/datastore&quot;&gt;&lt;code&gt;vsphere_datastore&lt;/code&gt; data source&lt;/a&gt; and put the virtual machine there instead. We then use the &lt;code&gt;vsphere_storage_drs_vm_override&lt;/code&gt; resource to ensure that Storage DRS does not apply to this virtual machine, and hence the VM will never be migrated off of the datastore.</source>
          <target state="translated">以下の&lt;a href=&quot;virtual_machine#using-storage-drs&quot;&gt;例&lt;/a&gt;は、 &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; リソースのStorage DRSの例に基づいています。しかし、むしろ使用よりの出力&lt;a href=&quot;../d/datastore_cluster&quot;&gt; &lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; のデータ・ソース&lt;/a&gt;の仮想マシンの場所のために、我々は代わりに使用してメンバーのデータストアであると仮定されるものを手に入れる&lt;a href=&quot;../d/datastore&quot;&gt; &lt;code&gt;vsphere_datastore&lt;/code&gt; のデータソースを&lt;/a&gt;、代わりにそこに仮想マシンを置きます。次に、 &lt;code&gt;vsphere_storage_drs_vm_override&lt;/code&gt; リソースを使用して、ストレージDRSがこの仮想マシンに適用されないようにします。したがって、VMがデータストアから移行されることはありません。</target>
        </trans-unit>
        <trans-unit id="dffe5c1be2c6fd5bc3513039a56c11a66ac00a37" translate="yes" xml:space="preserve">
          <source>The example below creates a virtual machine in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource in a cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates a group with this virtual machine. It also creates a host group off of the host looked up via the &lt;a href=&quot;../d/host&quot;&gt;&lt;code&gt;vsphere_host&lt;/code&gt;&lt;/a&gt; data source. Finally, this virtual machine is configured to run specifically on that host via a &lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt; resource.</source>
          <target state="translated">以下の例では、&lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt;データソースによって検索されたクラスター内の&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt;リソースを使用して、クラスター内に仮想マシンを作成します。次に、この仮想マシンでグループを作成します。また、&lt;a href=&quot;../d/host&quot;&gt; &lt;code&gt;vsphere_host&lt;/code&gt; &lt;/a&gt;データソースを介して検索されたホストからホストグループを作成します。最後に、この仮想マシンは、 &lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt; リソースを介してそのホスト上で実行されるように構成されています。</target>
        </trans-unit>
        <trans-unit id="1a4e6620974febe117c3fd39f5d551b8eb81f376" translate="yes" xml:space="preserve">
          <source>The example below creates a virtual machine in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machine in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source, but also pinning the VM to a host defined by the &lt;a href=&quot;../d/host&quot;&gt;&lt;code&gt;vsphere_host&lt;/code&gt;&lt;/a&gt; data source, which is assumed to be a host within the cluster. To ensure that the VM stays on this host and does not need to be migrated back at any point in time, an override is entered using the &lt;code&gt;vsphere_drs_vm_override&lt;/code&gt; resource that disables DRS for this virtual machine, ensuring that it does not move.</source>
          <target state="translated">以下の例では、使用してクラスタ内の仮想マシンを作成&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; する&lt;/a&gt;ことによりルックアップクラスタ内の仮想マシンを作成し、リソースを&lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; の&lt;/a&gt;データソースだけでなく、によって定義されたホストにVMを固定&lt;a href=&quot;../d/host&quot;&gt; &lt;code&gt;vsphere_host&lt;/code&gt; &lt;/a&gt;であると仮定され、データソース、クラスタ内のホスト。 VMがこのホスト上に留まり、いつでも元に戻す必要がないようにするために、 &lt;code&gt;vsphere_drs_vm_override&lt;/code&gt; リソースを使用してオーバーライドを入力し、この仮想マシンのDRSを無効にして、移動しないようにします。</target>
        </trans-unit>
        <trans-unit id="ad8bb39b534e4f64ae8e33fd43fde3b8f1e68efb" translate="yes" xml:space="preserve">
          <source>The example below creates a virtual machine in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machine in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source.</source>
          <target state="translated">以下の例では、&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt;リソースを使用してクラスター内に仮想マシンを作成し、&lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt;データソースによって検索されるクラスター内に仮想マシンを作成します。</target>
        </trans-unit>
        <trans-unit id="9ed3f7b041501e72d90c86b23a1cd10122fbad17" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machine in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource in a cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates a group with this virtual machine. Two groups are created, each with one of the created VMs. Finally, a rule is created to ensure that &lt;code&gt;vm1&lt;/code&gt; starts before &lt;code&gt;vm2&lt;/code&gt;.</source>
          <target state="translated">以下の例では、&lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt;データソースによって参照されるクラスター内の&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt;リソースを使用して、クラスター内に2つの仮想マシンを作成します。次に、この仮想マシンでグループを作成します。2つのグループが作成され、それぞれに作成されたVMの1つが含まれます。最後に、 &lt;code&gt;vm1&lt;/code&gt; が &lt;code&gt;vm2&lt;/code&gt; の前に開始することを保証するルールが作成されます。</target>
        </trans-unit>
        <trans-unit id="147050cf02783e218205061e03d866bfcfbdb16b" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machines in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machine in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates a group from these two virtual machines.</source>
          <target state="translated">以下の例では、&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt;リソースを使用してクラスター内に2つの仮想マシンを作成し、&lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt;データソースによって検索されるクラスター内に仮想マシンを作成します。次に、これらの2つの仮想マシンからグループを作成します。</target>
        </trans-unit>
        <trans-unit id="2a3a536015f2030342fbe26a459c7924d720685e" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machines in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machines in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates an affinity rule for these two virtual machines, ensuring they will run on the same host whenever possible.</source>
          <target state="translated">以下の例では、&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt;リソースを使用してクラスター内に2つの仮想マシンを作成し、&lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt;データソースによって検索されるクラスター内に仮想マシンを作成します。次に、これらの2つの仮想マシンにアフィニティルールを作成し、可能な限り同じホストで実行されるようにします。</target>
        </trans-unit>
        <trans-unit id="cce3a966d3b4900f909c2503b12f5d70dac1685f" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machines in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machines in the cluster looked up by the &lt;a href=&quot;../d/compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates an anti-affinity rule for these two virtual machines, ensuring they will run on different hosts whenever possible.</source>
          <target state="translated">以下の例では、&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt;リソースを使用してクラスター内に2つの仮想マシンを作成し、&lt;a href=&quot;../d/compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt;データソースによって検索されるクラスター内に仮想マシンを作成します。次に、これらの2つの仮想マシンの非アフィニティルールを作成し、可能な限り異なるホストで実行されるようにします。</target>
        </trans-unit>
        <trans-unit id="0c1c951523023d7b11f022736176077bdcecb94e" translate="yes" xml:space="preserve">
          <source>The example below creates two virtual machines in a cluster using the &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; resource, creating the virtual machines in the datastore cluster looked up by the &lt;a href=&quot;../d/datastore_cluster&quot;&gt;&lt;code&gt;vsphere_datastore_cluster&lt;/code&gt;&lt;/a&gt; data source. It then creates an anti-affinity rule for these two virtual machines, ensuring they will run on different datastores whenever possible.</source>
          <target state="translated">以下の例では、&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt;リソースを使用してクラスター内に2つの仮想マシンを作成し、&lt;a href=&quot;../d/datastore_cluster&quot;&gt; &lt;code&gt;vsphere_datastore_cluster&lt;/code&gt; &lt;/a&gt;データソースによって検索されるデータストアクラスター内に仮想マシンを作成します。次に、これらの2つの仮想マシンに対して非アフィニティルールを作成し、可能な限り異なるデータストアで実行されるようにします。</target>
        </trans-unit>
        <trans-unit id="54a773ce08df5ce003869d7334ef3b470aee770f" translate="yes" xml:space="preserve">
          <source>The example below is fully functional.</source>
          <target state="translated">以下の例は完全に機能しています。</target>
        </trans-unit>
        <trans-unit id="60f2d9eb0f9020bc73e6e3a3d517d41586c0eb4a" translate="yes" xml:space="preserve">
          <source>The example below is the exact same configuration as the &lt;a href=&quot;compute_cluster#example-usage&quot;&gt;example&lt;/a&gt; in the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource, but in addition, it creates a host group with the same hosts that get put into the cluster.</source>
          <target state="translated">以下の&lt;a href=&quot;compute_cluster#example-usage&quot;&gt;例&lt;/a&gt;は、&lt;a href=&quot;compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt;リソースの例とまったく同じ構成ですが、クラスターに配置されるのと同じホストを持つホストグループを作成します。</target>
        </trans-unit>
        <trans-unit id="6c45ae37001afc4884f9bf37fecb7303b21b6852" translate="yes" xml:space="preserve">
          <source>The example below moves a module into another module.</source>
          <target state="translated">以下の例では、モジュールを別のモジュールに移動させています。</target>
        </trans-unit>
        <trans-unit id="1d1aa7213325f7b0f9af05378cbd2d393e7406c7" translate="yes" xml:space="preserve">
          <source>The example below moves a module into another state file. This removes the module from the original state file and adds it to the destination. The source and destination are the same meaning we're keeping the same name.</source>
          <target state="translated">以下の例では、モジュールを別のステート・ファイルに移動しています。これは、元の状態ファイルからモジュールを削除し、移動先にモジュールを追加します。移動元と移動先は同じ名前を保持していることを意味します。</target>
        </trans-unit>
        <trans-unit id="7cd7e8436fe9fd347ece8048f2dd4cb6ea880af4" translate="yes" xml:space="preserve">
          <source>The example below moves a resource into a module. The module will be created if it doesn't exist.</source>
          <target state="translated">以下の例では、リソースをモジュールに移動させています。モジュールが存在しない場合は、モジュールが作成されます。</target>
        </trans-unit>
        <trans-unit id="de2fdb82049cb1f24aa9f5017f656c5e06bdba49" translate="yes" xml:space="preserve">
          <source>The example below removes a single resource in a module:</source>
          <target state="translated">以下の例では、モジュール内の単一のリソースを削除しています。</target>
        </trans-unit>
        <trans-unit id="f1415b3ef157272f8c47406e42caee65b15e7821" translate="yes" xml:space="preserve">
          <source>The example below removes an entire module:</source>
          <target state="translated">以下の例では、モジュール全体を削除しています。</target>
        </trans-unit>
        <trans-unit id="e3cbd21fc2632a81c78f5c5720c705a4e5924956" translate="yes" xml:space="preserve">
          <source>The example below renames a single resource:</source>
          <target state="translated">以下の例では、単一のリソースの名前を変更しています。</target>
        </trans-unit>
        <trans-unit id="e836793e746cb914247c4924dcd0f0e892755c35" translate="yes" xml:space="preserve">
          <source>The example below shows a resource:</source>
          <target state="translated">下の例では、リソースを示しています。</target>
        </trans-unit>
        <trans-unit id="fe79fda407fe82ff0242458f637af0ebf10a9736" translate="yes" xml:space="preserve">
          <source>The example below will import an AWS instance into a module:</source>
          <target state="translated">以下の例では、AWSインスタンスをモジュールにインポートします。</target>
        </trans-unit>
        <trans-unit id="26af669ad9c6083a1ba8301ecb54163c30744552" translate="yes" xml:space="preserve">
          <source>The example in &lt;code&gt;examples/endpoints_on_compute_engine&lt;/code&gt; shows the API from the quickstart running on a Compute Engine VM and reachable through Cloud Endpoints, which may also be useful.</source>
          <target state="translated">&lt;code&gt;examples/endpoints_on_compute_engine&lt;/code&gt; の例は、Compute Engine VMで実行され、Cloud Endpointsから到達可能なクイックスタートからのAPIを示しています。これも役立つ場合があります。</target>
        </trans-unit>
        <trans-unit id="2c494066a64b92c30fdc9752944b53f99ad7cdda" translate="yes" xml:space="preserve">
          <source>The example request URLs shown in this document are for the public &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt;, and use its API &lt;code&gt;&amp;lt;base_url&amp;gt;&lt;/code&gt; of &lt;code&gt;https://registry.terraform.io/v1/modules/&lt;/code&gt;. Note that although the base URL in the &lt;a href=&quot;#service-discovery&quot;&gt;discovery document&lt;/a&gt;&lt;em&gt;may include&lt;/em&gt; a trailing slash, we include a slash after the placeholder in the &lt;code&gt;Path&lt;/code&gt;s below for clarity.</source>
          <target state="translated">このドキュメントに示されているリクエストURLの例は、&lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraformレジストリ&lt;/a&gt;の公開用であり、 &lt;code&gt;https://registry.terraform.io/v1/modules/&lt;/code&gt; &lt;code&gt;&amp;lt;base_url&amp;gt;&lt;/code&gt; API &amp;lt;base_url&amp;gt;を使用しています。&lt;a href=&quot;#service-discovery&quot;&gt;検出ドキュメントの&lt;/a&gt;ベースURLには末尾にスラッシュ&lt;em&gt;が含ま&lt;/em&gt;れる&lt;em&gt;場合があり&lt;/em&gt;ますが、わかりやすくするために、以下の &lt;code&gt;Path&lt;/code&gt; のプレースホルダーの後にスラッシュを含めています。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cf0f3e3c939b087947ed0aaea2a0cab4b9fd72f0" translate="yes" xml:space="preserve">
          <source>The exported JSON will include references to Grafana data sources, but the data source configuration is not exported in this way. In order to fully manage a dashboard with Terraform, necessary data sources can be created using the &lt;code&gt;grafana_data_source&lt;/code&gt; resource. In order to ensure that a data source is created before a dashboard that refers to it, use the &lt;code&gt;depends_on&lt;/code&gt; meta-parameter:</source>
          <target state="translated">エクスポートされたJSONにはGrafanaデータソースへの参照が含まれますが、データソース構成はこの方法ではエクスポートされません。Terraformでダッシュボードを完全に管理するために、 &lt;code&gt;grafana_data_source&lt;/code&gt; リソースを使用して必要なデータソースを作成できます。データソースを参照するダッシュボードの前にデータソースが作成されるようにするには、 &lt;code&gt;depends_on&lt;/code&gt; メタパラメーターを使用します。</target>
        </trans-unit>
        <trans-unit id="3969fa8b7bb52fdcfe470a572b2ff097f1ebf689" translate="yes" xml:space="preserve">
          <source>The expression of a local value can refer to other locals, but as usual reference cycles are not allowed. That is, a local cannot refer to itself or to a variable that refers (directly or indirectly) back to it.</source>
          <target state="translated">ローカル値の表現は他のローカルを参照することができますが、通常のように参照サイクルは許可されていません。つまり、ローカルはそれ自身を参照したり、(直接または間接的に)それを参照する変数を参照したりすることはできません。</target>
        </trans-unit>
        <trans-unit id="b9286bd5cb6cd8cdb7ba050796100c194673b85e" translate="yes" xml:space="preserve">
          <source>The external program described by the &lt;code&gt;program&lt;/code&gt; attribute must implement a specific protocol for interacting with Terraform, as follows.</source>
          <target state="translated">&lt;code&gt;program&lt;/code&gt; 属性で記述された外部プログラムは、次のようにTerraformと対話するための特定のプロトコルを実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="ee0e387600998e1d2f1d380e9d30bd5c15424a94" translate="yes" xml:space="preserve">
          <source>The false is converted to a string &lt;code&gt;&quot;0&quot;&lt;/code&gt; when running Terraform.</source>
          <target state="translated">Terraformを実行すると、falseは文字列 &lt;code&gt;&quot;0&quot;&lt;/code&gt; に変換されます。</target>
        </trans-unit>
        <trans-unit id="f26b4df50521022e284250655ed3074cae8c38fc" translate="yes" xml:space="preserve">
          <source>The file provisioner is also able to upload a complete directory to the remote machine. When uploading a directory, there are a few important things you should know.</source>
          <target state="translated">ファイルプロビジョナーは、リモートマシンに完全なディレクトリをアップロードすることもできます。ディレクトリをアップロードする際には、知っておくべき重要なことがいくつかあります。</target>
        </trans-unit>
        <trans-unit id="bba0658ae3fe320e911eee99a3c1a73a14ad62de" translate="yes" xml:space="preserve">
          <source>The files loaded must end in either &lt;code&gt;.tf&lt;/code&gt; or &lt;code&gt;.tf.json&lt;/code&gt; to specify the format that is in use. Otherwise, the files are ignored. Multiple file formats can be present in the same directory; it is okay to have one Terraform configuration file be Terraform syntax and another be JSON.</source>
          <target state="translated">ロードされるファイルは、使用中のフォーマットを指定するために、 &lt;code&gt;.tf&lt;/code&gt; または &lt;code&gt;.tf.json&lt;/code&gt; で終わる必要があります。それ以外の場合、ファイルは無視されます。同じディレクトリに複数のファイル形式を含めることができます。 1つのTerraform構成ファイルをTerraform構文にして、別のTerraform構成ファイルをJSONにすることは問題ありません。</target>
        </trans-unit>
        <trans-unit id="3b312401a7a35bb32f3e3dafa030500a867178b0" translate="yes" xml:space="preserve">
          <source>The files that are uploaded and packaged with a &lt;code&gt;push&lt;/code&gt; are all the files in the &lt;code&gt;path&lt;/code&gt; given as the parameter to the command, recursively. By default (unless &lt;code&gt;-vcs=false&lt;/code&gt; is specified), Terraform will automatically detect when a VCS such as Git is being used, and in that case will only upload the files that are committed. Because of this built-in intelligence, you don't have to worry about excluding folders such as &quot;.git&quot; or &quot;.hg&quot; usually.</source>
          <target state="translated">アップロードして &lt;code&gt;push&lt;/code&gt; パッケージ化されるファイルは、コマンドのパラメーターとして指定された &lt;code&gt;path&lt;/code&gt; すべてのファイルです。デフォルトでは（ &lt;code&gt;-vcs=false&lt;/code&gt; が指定されていない限り）、TerraformはGitなどのVCSが使用されていることを自動的に検出し、その場合はコミットされているファイルのみをアップロードします。この組み込みインテリジェンスにより、通常は「.git」や「.hg」などのフォルダーを除外することを心配する必要はありません。</target>
        </trans-unit>
        <trans-unit id="27cefe48d3f1dc85838d56fa5eea9a6fb1ca41db" translate="yes" xml:space="preserve">
          <source>The final, merged configuration is stored on disk in the &lt;code&gt;.terraform&lt;/code&gt; directory, which should be ignored from version control. This means that sensitive information can be omitted from version control, but it will be present in plain text on local disk when running Terraform.</source>
          <target state="translated">最終的にマージされた構成は、ディスクの &lt;code&gt;.terraform&lt;/code&gt; ディレクトリに保存されます。バージョン管理では無視してください。つまり、機密情報はバージョン管理から省略できますが、Terraformを実行すると、ローカルディスクにプレーンテキストで表示されます。</target>
        </trans-unit>
        <trans-unit id="eaf8d7087819b249572e9c3151ca97dc9a388b3f" translate="yes" xml:space="preserve">
          <source>The first interface with the &lt;code&gt;public&lt;/code&gt; network assigned to it would show up in order before the interface assigned to &lt;code&gt;private&lt;/code&gt;. On some Linux systems, this might mean that the first interface would show up as &lt;code&gt;eth0&lt;/code&gt; and the second would show up as &lt;code&gt;eth1&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;public&lt;/code&gt; ネットワークが割り当てられた最初のインターフェースは、 &lt;code&gt;private&lt;/code&gt; 割り当てられたインターフェースの前に順番に表示されます。一部のLinuxシステムでは、これは最初のインターフェースが &lt;code&gt;eth0&lt;/code&gt; として表示され、2番目のインターフェースが &lt;code&gt;eth1&lt;/code&gt; として表示されることを意味する場合があります。</target>
        </trans-unit>
        <trans-unit id="ec29b26741834e90fae9a556dc5fd69d96673d06" translate="yes" xml:space="preserve">
          <source>The first is default behavior. Terraform waits after ASG creation for &lt;code&gt;min_size&lt;/code&gt; (or &lt;code&gt;desired_capacity&lt;/code&gt;, if specified) healthy instances to show up in the ASG before continuing.</source>
          <target state="translated">1つはデフォルトの動作です。Terraformは、ASGの作成後、 &lt;code&gt;min_size&lt;/code&gt; （または指定されている場合は &lt;code&gt;desired_capacity&lt;/code&gt; ）の正常なインスタンスがASGに表示されるのを待ってから続行します。</target>
        </trans-unit>
        <trans-unit id="aa57463dc5ab2f806da4e90715ccee8e085a5e1d" translate="yes" xml:space="preserve">
          <source>The first line tells us that the method that failed is &lt;code&gt;resourceAwsSomeResourceCreate&lt;/code&gt;, which we can deduce that involves the creation of a (fictional) &lt;code&gt;aws_some_resource&lt;/code&gt;.</source>
          <target state="translated">最初の行は、失敗したメソッドが &lt;code&gt;resourceAwsSomeResourceCreate&lt;/code&gt; であることを &lt;code&gt;aws_some_resource&lt;/code&gt; ます。これは、（架空の）aws_some_resourceの作成を含むと推測できます。</target>
        </trans-unit>
        <trans-unit id="5f548f71763cc78d678b1cff330b9e78b28cb743" translate="yes" xml:space="preserve">
          <source>The first set of &lt;code&gt;network_interface&lt;/code&gt; data would be assigned to the &lt;code&gt;public&lt;/code&gt; interface, and the second to the &lt;code&gt;private&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;network_interface&lt;/code&gt; データの最初のセットは &lt;code&gt;public&lt;/code&gt; インターフェイスに割り当てられ、2番目のセットは &lt;code&gt;private&lt;/code&gt; インターフェイスに割り当てられます。</target>
        </trans-unit>
        <trans-unit id="6827c02fa3abf172535a90ec96419c14db97bf20" translate="yes" xml:space="preserve">
          <source>The first thing to do in your plugin is to create the &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema#Provider&quot;&gt;schema.Provider&lt;/a&gt; structure. This structure implements the &lt;code&gt;ResourceProvider&lt;/code&gt; interface. We recommend creating this structure in a function to make testing easier later. Example:</source>
          <target state="translated">プラグインで最初に行うことは、&lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema#Provider&quot;&gt;schema.Provider&lt;/a&gt;構造を作成することです。この構造は、 &lt;code&gt;ResourceProvider&lt;/code&gt; インターフェースを実装します。後でテストを簡単にするために、この構造を関数内に作成することをお勧めします。例：</target>
        </trans-unit>
        <trans-unit id="889a00e3596ed35d759df0f717d3e30b5fdc4460" translate="yes" xml:space="preserve">
          <source>The flag &lt;code&gt;TF_CLI_ARGS&lt;/code&gt; affects all Terraform commands. If you specify a named command in the form of &lt;code&gt;TF_CLI_ARGS_name&lt;/code&gt; then it will only affect that command. As an example, to specify that only plans never refresh, you can set &lt;code&gt;TF_CLI_ARGS_plan=&quot;-refresh=false&quot;&lt;/code&gt;.</source>
          <target state="translated">フラグ &lt;code&gt;TF_CLI_ARGS&lt;/code&gt; は、すべてのTerraformコマンドに影響します。名前付きコマンドを &lt;code&gt;TF_CLI_ARGS_name&lt;/code&gt; の形式で指定すると、そのコマンドにのみ影響します。例として、プランのみが更新されないように指定するには、 &lt;code&gt;TF_CLI_ARGS_plan=&quot;-refresh=false&quot;&lt;/code&gt; を設定できます。</target>
        </trans-unit>
        <trans-unit id="a18d1238e6caa14a50a1d22d52a01ae6136e2948" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;../../../configuration/resources#timeouts&quot;&gt;Timeout&lt;/a&gt; configuration options are available:</source>
          <target state="translated">次の&lt;a href=&quot;../../../configuration/resources#timeouts&quot;&gt;タイムアウト&lt;/a&gt;構成オプションを使用できます。</target>
        </trans-unit>
        <trans-unit id="9654dd2eab0309d414dee714ebe81a94663dd453" translate="yes" xml:space="preserve">
          <source>The following Environment Variables must be set to run the acceptance tests:</source>
          <target state="translated">受け入れテストを実行するためには、以下の環境変数を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="4305a879f28a61a193d572a415f93cb2f2b33a9b" translate="yes" xml:space="preserve">
          <source>The following Terraform resource types are used in this tutorial:</source>
          <target state="translated">このチュートリアルでは、以下の Terraform リソースタイプを使用します。</target>
        </trans-unit>
        <trans-unit id="50f5a14ba3f76e24874bc35459e9d7a6a7db4ad7" translate="yes" xml:space="preserve">
          <source>The following abridged example below demonstrates how you can manage the number of uplinks, and the name of the uplinks via the &lt;code&gt;uplinks&lt;/code&gt; parameter.</source>
          <target state="translated">以下の要約例は、アップリンクの数と、 &lt;code&gt;uplinks&lt;/code&gt; パラメータを介してアップリンクの名前を管理する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="44d412c99cc6dbcee4b85c9b7537e3dfe9cc2722" translate="yes" xml:space="preserve">
          <source>The following abridged example demonstrates a current basic usage of the provider to launch a virtual machine using the &lt;a href=&quot;r/virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt; resource&lt;/a&gt;. The datacenter, datastore, resource pool, and network are discovered via the &lt;a href=&quot;d/datacenter&quot;&gt;&lt;code&gt;vsphere_datacenter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/datastore&quot;&gt;&lt;code&gt;vsphere_datastore&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/resource_pool&quot;&gt;&lt;code&gt;vsphere_resource_pool&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;d/network&quot;&gt;&lt;code&gt;vsphere_network&lt;/code&gt;&lt;/a&gt; data sources respectively. Most of these resources can be directly managed by Terraform as well - check the sidebar for specific resources.</source>
          <target state="translated">次の要約例は、&lt;a href=&quot;r/virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; リソース&lt;/a&gt;を使用して仮想マシンを起動するためのプロバイダーの現在の基本的な使用法を示しています。データセンター、データストア、リソースプール、およびネットワークは、&lt;a href=&quot;d/datacenter&quot;&gt; &lt;code&gt;vsphere_datacenter&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;d/datastore&quot;&gt; &lt;code&gt;vsphere_datastore&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;d/resource_pool&quot;&gt; &lt;code&gt;vsphere_resource_pool&lt;/code&gt; &lt;/a&gt;、および&lt;a href=&quot;d/network&quot;&gt; &lt;code&gt;vsphere_network&lt;/code&gt; &lt;/a&gt;データソースを介して検出されます。これらのリソースのほとんどは、Terraformでも直接管理できます。特定のリソースについては、サイドバーを確認してください。</target>
        </trans-unit>
        <trans-unit id="74e34c5eb30a15507c8da20d80c27e8c13daacf8" translate="yes" xml:space="preserve">
          <source>The following additional attributes are exported:</source>
          <target state="translated">以下の追加属性がエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="b7f9781896aafd253b4200ed83061246c99b01e8" translate="yes" xml:space="preserve">
          <source>The following additional atttributes are provided:</source>
          <target state="translated">以下のような追加属性が用意されています。</target>
        </trans-unit>
        <trans-unit id="809533a750ad0d23a4ae7f21d8cac72e024e777d" translate="yes" xml:space="preserve">
          <source>The following adds a route for a particular cidr block to every (private kops) route table in a specified vpc to use a particular vpc peering connection.</source>
          <target state="translated">以下は、特定のvpcピアリング接続を使用するために、指定されたvpc内のすべての(プライベートkops)ルートテーブルに特定のcidrブロックのルートを追加します。</target>
        </trans-unit>
        <trans-unit id="ab778ec28d2f03134e1143c8b94005c5a152a8c2" translate="yes" xml:space="preserve">
          <source>The following are some general options that also affect ports that this policy applies to:</source>
          <target state="translated">このポリシーが適用されるポートにも影響を与える一般的なオプションを以下に示します。</target>
        </trans-unit>
        <trans-unit id="3d6a64d8e8de50d522a75e26816f64551e44c6bf" translate="yes" xml:space="preserve">
          <source>The following argument are exported:</source>
          <target state="translated">以下の引数をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="e13eea1a0552634ec49861dfedef83923f03fb36" translate="yes" xml:space="preserve">
          <source>The following argument is required:</source>
          <target state="translated">以下のような引数が必要です。</target>
        </trans-unit>
        <trans-unit id="a73aa5bd8a7212585d9cbab0617a14e85a1050af" translate="yes" xml:space="preserve">
          <source>The following argument is supported:</source>
          <target state="translated">以下のような主張が支持されています。</target>
        </trans-unit>
        <trans-unit id="f6595641a9bf6905ddfbb37743177af2b3ef1ba2" translate="yes" xml:space="preserve">
          <source>The following arguments are computed. You can access both &lt;code&gt;clone_ssh&lt;/code&gt; and &lt;code&gt;clone_https&lt;/code&gt; for getting a clone URL.</source>
          <target state="translated">次の引数が計算されます。 &lt;code&gt;clone_ssh&lt;/code&gt; と &lt;code&gt;clone_https&lt;/code&gt; の両方にアクセスして、クローンURLを取得できます。</target>
        </trans-unit>
        <trans-unit id="72473c2a3f67d1172a725e8e6068f0449d345c89" translate="yes" xml:space="preserve">
          <source>The following arguments are expected:</source>
          <target state="translated">以下のような引数を想定しています。</target>
        </trans-unit>
        <trans-unit id="97ecdbe15a5f9d784ef1ab75907d14e53f859080" translate="yes" xml:space="preserve">
          <source>The following arguments are exported:</source>
          <target state="translated">以下の引数をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="44c6d5b53e5af88414bba2acdab39e70e72efc9b" translate="yes" xml:space="preserve">
          <source>The following arguments are maintained for backwards compatibility and may be removed in a future version:</source>
          <target state="translated">以下の引数は下位互換性のために維持されており、将来のバージョンでは削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="3239547ab93ba3a59d4e4c534792289b19c9e3db" translate="yes" xml:space="preserve">
          <source>The following arguments are only available to &quot;SimpleScaling&quot; type policies:</source>
          <target state="translated">以下の引数は、「SimpleScaling」タイプのポリシーでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="f2f35214a6af828c2de45967fe7e0c8f468ab928" translate="yes" xml:space="preserve">
          <source>The following arguments are only available to &quot;StepScaling&quot; type policies:</source>
          <target state="translated">以下の引数は、「StepScaling」タイプのポリシーでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="dfc765444d7e50639b46cc1be2dd3a5158c0e3e9" translate="yes" xml:space="preserve">
          <source>The following arguments are only available to &quot;TargetTrackingScaling&quot; type policies:</source>
          <target state="translated">以下の引数は、「TargetTrackingScaling」タイプのポリシーでのみ利用可能です。</target>
        </trans-unit>
        <trans-unit id="c7a5bb150e273cd6d0d71df62e39be92d4272aa7" translate="yes" xml:space="preserve">
          <source>The following arguments are optional:</source>
          <target state="translated">以下の引数はオプションです。</target>
        </trans-unit>
        <trans-unit id="fba2497aaa54c75539d8d16ab80f2c1ae7908ec1" translate="yes" xml:space="preserve">
          <source>The following arguments are related to how the virtual switch binds to physical NICs:</source>
          <target state="translated">以下の引数は、仮想スイッチが物理 NIC にバインドする方法に関連しています。</target>
        </trans-unit>
        <trans-unit id="7633613f9b29f8c3d322415c812efa268698c39a" translate="yes" xml:space="preserve">
          <source>The following arguments are required:</source>
          <target state="translated">以下の引数が必要です。</target>
        </trans-unit>
        <trans-unit id="9f9b708a6d31410a2e5d2afe6f9ed10442c7ebea" translate="yes" xml:space="preserve">
          <source>The following arguments are shared with the &lt;a href=&quot;distributed_port_group&quot;&gt;&lt;code&gt;vsphere_distributed_port_group&lt;/code&gt;&lt;/a&gt; resource. Setting them here defines a default policy here that will be inherited by other port groups on this switch that do not have these values otherwise overridden. Not defining these options in a DVS will infer defaults that can be seen in the Terraform state after the initial apply.</source>
          <target state="translated">次の引数は、&lt;a href=&quot;distributed_port_group&quot;&gt; &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; &lt;/a&gt;リソースと共有されます。ここでこれらを設定すると、デフォルトのポリシーがここで定義されます。このポリシーは、他の方法でオーバーライドされていないこれらの値を持たない、このスイッチの他のポートグループによって継承されます。これらのオプションをDVSで定義しないと、最初の適用後にTerraform状態で表示される可能性があるデフォルトが推測されます。</target>
        </trans-unit>
        <trans-unit id="7edfe1f37723f31d74a67b12b65b5388fabf5a85" translate="yes" xml:space="preserve">
          <source>The following arguments are supported for backwards compatibility but should not be used:</source>
          <target state="translated">以下の引数は後方互換性のためにサポートされていますが、使用すべきではありません。</target>
        </trans-unit>
        <trans-unit id="6c916da748ca0ed23518e80fca1b36ab3fb30a79" translate="yes" xml:space="preserve">
          <source>The following arguments are supported in the &lt;code&gt;provider&lt;/code&gt; block:</source>
          <target state="translated">以下の引数が &lt;code&gt;provider&lt;/code&gt; ブロックでサポートされています。</target>
        </trans-unit>
        <trans-unit id="22a616915213fad0699cf16b4de7539083425ed3" translate="yes" xml:space="preserve">
          <source>The following arguments are supported when adding Floating IPs:</source>
          <target state="translated">フローティングIPを追加する際には、以下の引数がサポートされています。</target>
        </trans-unit>
        <trans-unit id="c689bf4738bd27a681e9810a24fc685baabc69d3" translate="yes" xml:space="preserve">
          <source>The following arguments are supported when creating new servers:</source>
          <target state="translated">新しいサーバーを作成する際には、以下の引数がサポートされています。</target>
        </trans-unit>
        <trans-unit id="e1a400a31e394995791054227bb17cb160990959" translate="yes" xml:space="preserve">
          <source>The following arguments are supported when updating Floating IPs:</source>
          <target state="translated">フローティングIPの更新時には、以下の引数がサポートされています。</target>
        </trans-unit>
        <trans-unit id="e544002fa8ad0c42c34f6a2ab2e7d5acf6851ede" translate="yes" xml:space="preserve">
          <source>The following arguments are supported when updating servers:</source>
          <target state="translated">サーバーを更新する際には、以下の引数がサポートされています。</target>
        </trans-unit>
        <trans-unit id="9ff4cafcac1d6d5660bdf178e950483957bb54d0" translate="yes" xml:space="preserve">
          <source>The following arguments are supported, at least one is required:</source>
          <target state="translated">以下の引数がサポートされており、少なくとも1つは必要です。</target>
        </trans-unit>
        <trans-unit id="34442105b0370a7034709427f26e874c276a9a99" translate="yes" xml:space="preserve">
          <source>The following arguments are supported. Please check the &lt;a href=&quot;https://github.com/librato/librato-services/tree/master/services&quot;&gt;relevant documentation&lt;/a&gt; for each type of alert.</source>
          <target state="translated">次の引数がサポートされています。アラートのタイプごとに&lt;a href=&quot;https://github.com/librato/librato-services/tree/master/services&quot;&gt;関連ドキュメント&lt;/a&gt;を確認してください。</target>
        </trans-unit>
        <trans-unit id="0ee6f0cf251bab53dcc2b1661d10b0659078a49b" translate="yes" xml:space="preserve">
          <source>The following arguments are supported:</source>
          <target state="translated">以下の引数がサポートされています。</target>
        </trans-unit>
        <trans-unit id="5cca797d62deba4ea9b808a274d71e11091e6b76" translate="yes" xml:space="preserve">
          <source>The following arguments are supported: (Note that one of either source_disk or raw_disk is required)</source>
          <target state="translated">以下の引数がサポートされています。(source_diskまたはraw_diskのいずれかが必要であることに注意)</target>
        </trans-unit>
        <trans-unit id="812cfdd663d76a236c68d35d34cb97649d359f64" translate="yes" xml:space="preserve">
          <source>The following arguments are supported: * &lt;code&gt;name&lt;/code&gt; - (Required) The name of the security group rule.</source>
          <target state="translated">次の引数がサポートされています：* &lt;code&gt;name&lt;/code&gt; - （必須）セキュリティグループルールの名前。</target>
        </trans-unit>
        <trans-unit id="957fc64e9147f0ec435a313dd11f88f0fd50306a" translate="yes" xml:space="preserve">
          <source>The following arguments are supported: * &lt;code&gt;service_name&lt;/code&gt;: (Required) The name of the service. Usually of the form &lt;code&gt;$apiname.endpoints.$projectid.cloud.goog&lt;/code&gt;. * &lt;code&gt;openapi_config&lt;/code&gt;: (Optional) The full text of the OpenAPI YAML configuration as described &lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md&quot;&gt;here&lt;/a&gt;. Either this, or &lt;em&gt;both&lt;/em&gt; of &lt;code&gt;grpc_config&lt;/code&gt; and &lt;code&gt;protoc_output&lt;/code&gt; must be specified. * &lt;code&gt;grpc_config&lt;/code&gt;: (Optional) The full text of the Service Config YAML file (Example located &lt;a href=&quot;https://github.com/GoogleCloudPlatform/python-docs-samples/blob/master/endpoints/bookstore-grpc/api_config.yaml&quot;&gt;here&lt;/a&gt;). If provided, must also provide &lt;code&gt;protoc_output&lt;/code&gt;. &lt;code&gt;open_api&lt;/code&gt; config must &lt;em&gt;not&lt;/em&gt; be provided. * &lt;code&gt;protoc_output_base64&lt;/code&gt;: (Optional) The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file, base64-encoded. * &lt;code&gt;protoc_output&lt;/code&gt;: (Deprecated) The full contents of the Service Descriptor File generated by protoc. This should be a compiled .pb file. Use &lt;code&gt;protoc_output_base64&lt;/code&gt; instead to prevent a permanent diff from the statefile's munging of non-UTF8 bytes. * &lt;code&gt;project&lt;/code&gt;: (Optional) The project ID that the service belongs to. If not provided, provider project is used.</source>
          <target state="translated">次の引数がサポートされています。* &lt;code&gt;service_name&lt;/code&gt; ：（必須）サービスの名前。通常は &lt;code&gt;$apiname.endpoints.$projectid.cloud.goog&lt;/code&gt; 形式です。 * &lt;code&gt;openapi_config&lt;/code&gt; ：（オプション）&lt;a href=&quot;https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md&quot;&gt;ここで&lt;/a&gt;説明するOpenAPI YAML構成の全文。これ、または &lt;code&gt;grpc_config&lt;/code&gt; と &lt;code&gt;protoc_output&lt;/code&gt; の&lt;em&gt;両方&lt;/em&gt;を指定する必要があります。 * &lt;code&gt;grpc_config&lt;/code&gt; ：（オプション）Service Config YAMLファイルの全文（例は&lt;a href=&quot;https://github.com/GoogleCloudPlatform/python-docs-samples/blob/master/endpoints/bookstore-grpc/api_config.yaml&quot;&gt;ここに&lt;/a&gt;あります）。提供する場合は、 &lt;code&gt;protoc_output&lt;/code&gt; も提供する必要があります。 &lt;code&gt;open_api&lt;/code&gt; の設定を行う必要があり&lt;em&gt;ません&lt;/em&gt;提供されます。 *&lt;em&gt;&lt;/em&gt; &lt;code&gt;protoc_output_base64&lt;/code&gt; ：（オプション）protocによって生成されたサービス記述子ファイルの完全なコンテンツ。これは、base64でエンコードされたコンパイル済み.pbファイルである必要があります。* &lt;code&gt;protoc_output&lt;/code&gt; ：（非推奨）protocによって生成されたサービス記述子ファイルの完全な内容。これは、コンパイルされた.pbファイルである必要があります。代わりに &lt;code&gt;protoc_output_base64&lt;/code&gt; を使用して、statefileによる非UTF8バイトの変更による永続的な差分を防ぎます。* &lt;code&gt;project&lt;/code&gt; ：（オプション）サービスが属するプロジェクトID。指定しない場合、プロバイダープロジェクトが使用されます。</target>
        </trans-unit>
        <trans-unit id="6517be44bbb8c570fce10967d5e450ec39c01355" translate="yes" xml:space="preserve">
          <source>The following arguments are used to configure the VMware NSX-T Provider:</source>
          <target state="translated">次の引数を使用して、VMware NSX-T Provider を構成します。</target>
        </trans-unit>
        <trans-unit id="1a3fe97aac782ad7b8756199a314d498fabca963" translate="yes" xml:space="preserve">
          <source>The following arguments are used to configure the VMware vCloud Director Provider:</source>
          <target state="translated">次の引数を使用して、VMware vCloud Director Provider を構成します。</target>
        </trans-unit>
        <trans-unit id="4e0009a40373052d42c32adb3bde87cec9f83007" translate="yes" xml:space="preserve">
          <source>The following arguments are used to configure the VMware vSphere Provider:</source>
          <target state="translated">次の引数を使用して、VMware vSphere Provider を構成します。</target>
        </trans-unit>
        <trans-unit id="b5b16e38807697223b58f0e4b2e8dbacfd214699" translate="yes" xml:space="preserve">
          <source>The following arguments are valid for each &lt;code&gt;device&lt;/code&gt; section:</source>
          <target state="translated">次の引数は、各 &lt;code&gt;device&lt;/code&gt; セクションで有効です。</target>
        </trans-unit>
        <trans-unit id="07c998840ad4717c2fa2b1c360b1ce6c8dbd571a" translate="yes" xml:space="preserve">
          <source>The following arguments are valid for each &lt;code&gt;rule&lt;/code&gt; section:</source>
          <target state="translated">次の引数は、各 &lt;code&gt;rule&lt;/code&gt; セクションで有効です。</target>
        </trans-unit>
        <trans-unit id="9240aa282a5373ac402dd273c10089ae493cfc99" translate="yes" xml:space="preserve">
          <source>The following arguments are valid for each &lt;code&gt;target&lt;/code&gt; section:</source>
          <target state="translated">次の引数は、各 &lt;code&gt;target&lt;/code&gt; セクションで有効です。</target>
        </trans-unit>
        <trans-unit id="551ef86a06e8888c80f0238da284fc022d9c409e" translate="yes" xml:space="preserve">
          <source>The following arguments manage network I/O control. Network I/O control (also known as network resource control) can be used to set up advanced traffic shaping for the DVS, allowing control of various classes of traffic in a fashion similar to how resource pools work for virtual machines. Configuration of network I/O control is also a requirement for the use of network resource pools, if their use is so desired.</source>
          <target state="translated">以下の引数は、ネットワーク I/O 制御を管理します。ネットワーク I/O コントロール(ネットワークリソースコントロールとしても知られています)を使用して DVS の高度なトラフィックシェーピングを設定し、仮想マシンのリソースプールと同様の方法で様々なクラスのトラフィックを制御することができます。ネットワークI/O制御の設定は、ネットワークリソースプールを使用するための要件でもあります。</target>
        </trans-unit>
        <trans-unit id="66ec84aa8e7be202b9ea5f4bea704a24ae751783" translate="yes" xml:space="preserve">
          <source>The following attribute is additionally exported:</source>
          <target state="translated">以下の属性を追加エクスポートします。</target>
        </trans-unit>
        <trans-unit id="fa7fc2ed962598fdd9d82dff7b546f269e8ac2f3" translate="yes" xml:space="preserve">
          <source>The following attribute is exported in addition to the arguments listed above:</source>
          <target state="translated">上記の引数に加えて、以下の属性がエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="fbcf709646803d035f0a83d787c91539a71ddcb5" translate="yes" xml:space="preserve">
          <source>The following attribute is exported:</source>
          <target state="translated">以下の属性がエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="1450f34665e6fef385d78fa0ee35bf03b8b0dfed" translate="yes" xml:space="preserve">
          <source>The following attributes are available within a &lt;code&gt;metric&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;metric&lt;/code&gt; は次の属性を使用できます。</target>
        </trans-unit>
        <trans-unit id="04d829c3cd10806ad8133c57139f2250addf6328" translate="yes" xml:space="preserve">
          <source>The following attributes are exported</source>
          <target state="translated">以下の属性がエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="c2c6035618fd673940a9624232cba92677ad6ee2" translate="yes" xml:space="preserve">
          <source>The following attributes are exported along with all argument references:</source>
          <target state="translated">以下の属性は、すべての引数参照とともにエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="1de4f3abd7300bc1b4146df13a977a377c69d67b" translate="yes" xml:space="preserve">
          <source>The following attributes are exported in addition to the above configuration:</source>
          <target state="translated">上記の構成に加えて、以下の属性がエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="91655bf1251531132024d13c3843ef87f66df968" translate="yes" xml:space="preserve">
          <source>The following attributes are exported in addition to the arguments listed above:</source>
          <target state="translated">上記の引数に加えて、以下の属性がエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="d90910192d7b1764e869ae01e5f8324b3950c107" translate="yes" xml:space="preserve">
          <source>The following attributes are exported on the base level of this resource:</source>
          <target state="translated">このリソースのベース・レベルでは、以下の属性がエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="a81b1a7a909b3e40f5bc5d237aca160d226d188c" translate="yes" xml:space="preserve">
          <source>The following attributes are exported only if there is an authorization rule named &lt;code&gt;RootManageSharedAccessKey&lt;/code&gt; which is created automatically by Azure.</source>
          <target state="translated">次の属性は、Azureによって自動的に作成される &lt;code&gt;RootManageSharedAccessKey&lt;/code&gt; という名前の承認ルールがある場合にのみエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="bf01bef1566443dc910d1d250f5b2a5a8571c889" translate="yes" xml:space="preserve">
          <source>The following attributes are exported:</source>
          <target state="translated">以下の属性がエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="a5e3ebf868111bdf3c50677fc8fd42277b48be8a" translate="yes" xml:space="preserve">
          <source>The following attributes are exported: * &lt;code&gt;id&lt;/code&gt; - The ID of the app release</source>
          <target state="translated">次の属性がエクスポートされます。* &lt;code&gt;id&lt;/code&gt; -アプリのリリースのID</target>
        </trans-unit>
        <trans-unit id="2299c95d461d39a42dae66eb3cbdcc3d19e3e787" translate="yes" xml:space="preserve">
          <source>The following attributes are exported: * &lt;code&gt;id&lt;/code&gt; - The ID of the formation</source>
          <target state="translated">次の属性がエクスポートされます。* &lt;code&gt;id&lt;/code&gt; -フォーメーションのID</target>
        </trans-unit>
        <trans-unit id="9d6db25a1812de7f61f3327b65390e3db6966e2f" translate="yes" xml:space="preserve">
          <source>The following attributes are present:</source>
          <target state="translated">以下の属性が存在します。</target>
        </trans-unit>
        <trans-unit id="6f6aa8f820f0284bd28697b0207de3b2578af79f" translate="yes" xml:space="preserve">
          <source>The following attributes are supported:</source>
          <target state="translated">以下の属性がサポートされています。</target>
        </trans-unit>
        <trans-unit id="2da4a562896f8f848a34a9d3bb497133c3d4cc44" translate="yes" xml:space="preserve">
          <source>The following attributes are used as &lt;code&gt;locality&lt;/code&gt; hints:</source>
          <target state="translated">次の属性が &lt;code&gt;locality&lt;/code&gt; ヒントとして使用されます。</target>
        </trans-unit>
        <trans-unit id="396079a6dcf55a4aa0a28634e899f8a4feaf315d" translate="yes" xml:space="preserve">
          <source>The following attributes are used by &lt;code&gt;cns&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;cns&lt;/code&gt; は次の属性を使用します。</target>
        </trans-unit>
        <trans-unit id="ce16541869e1c5a42df2035371baeb13cb4c2391" translate="yes" xml:space="preserve">
          <source>The following attributes can be updated:</source>
          <target state="translated">以下の属性を更新することができます。</target>
        </trans-unit>
        <trans-unit id="442d105d402351e21e2db8fc83145aad88cb3df8" translate="yes" xml:space="preserve">
          <source>The following block contains all that is necessary to create a new virtual machine, with a single disk and network interface.</source>
          <target state="translated">次のブロックには、単一のディスクとネットワーク インターフェイスを持つ新しい仮想マシンを作成するために必要なすべてのものが含まれています。</target>
        </trans-unit>
        <trans-unit id="a4d8d6613d81ed294be47b0fe96942d9cdd527f3" translate="yes" xml:space="preserve">
          <source>The following can be reported:</source>
          <target state="translated">以下のように報告することができます。</target>
        </trans-unit>
        <trans-unit id="0e361f8332327c050bb83f6b46a42d69900363b6" translate="yes" xml:space="preserve">
          <source>The following command is the equivalent:</source>
          <target state="translated">以下のコマンドがこれに相当します。</target>
        </trans-unit>
        <trans-unit id="59ba48598fac60b10cc57b0924874c506212400a" translate="yes" xml:space="preserve">
          <source>The following config gives the Default Network ACL the same rules that AWS includes, but pulls the resource under management by Terraform. This means that any ACL rules added or changed will be detected as drift.</source>
          <target state="translated">以下の設定では、Default Network ACLにAWSが含むものと同じルールを与えていますが、Terraformが管理するリソースを引っ張ってきます。つまり、追加や変更されたACLルールはドリフトとして検出されます。</target>
        </trans-unit>
        <trans-unit id="e294efe6fbc6115094375fa5cb67c808e314b3b9" translate="yes" xml:space="preserve">
          <source>The following config gives the Default Security Group the same rules that AWS provides by default, but pulls the resource under management by Terraform. This means that any ingress or egress rules added or changed will be detected as drift.</source>
          <target state="translated">以下の設定では、Default Security GroupにAWSがデフォルトで提供しているのと同じルールを与えますが、Terraformが管理下のリソースを引っ張ってきます。これにより、追加・変更された入退出ルールはドリフトとして検出されます。</target>
        </trans-unit>
        <trans-unit id="8d7e41b2d7479849fc98101bae20e97a6d303ab0" translate="yes" xml:space="preserve">
          <source>The following configuration options / environment variables are supported:</source>
          <target state="translated">以下の設定オプション/環境変数をサポートしています。</target>
        </trans-unit>
        <trans-unit id="592eda3072fd3796c035516492de1d693092104a" translate="yes" xml:space="preserve">
          <source>The following configuration options are supported:</source>
          <target state="translated">以下の構成オプションがサポートされています。</target>
        </trans-unit>
        <trans-unit id="50804084649150c3580a7081b914a5027f266ed5" translate="yes" xml:space="preserve">
          <source>The following configuration options must be supplied if &lt;code&gt;access_key&lt;/code&gt; is not.</source>
          <target state="translated">&lt;code&gt;access_key&lt;/code&gt; が指定されていない場合は、次の構成オプションを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="84bf0d1f54cbf86f1a4d4efd4ee61b7085aba5c3" translate="yes" xml:space="preserve">
          <source>The following configuration options or environment variables are supported:</source>
          <target state="translated">以下の構成オプションまたは環境変数がサポートされています。</target>
        </trans-unit>
        <trans-unit id="3638abf600c85a53af23b7c8ed045a52f69fa4fb" translate="yes" xml:space="preserve">
          <source>The following configuration shows the full capabilities of a Docker Service. Currently, the &lt;a href=&quot;https://docs.docker.com/engine/api/v1.32&quot;&gt;Docker API 1.32&lt;/a&gt; is implemented.</source>
          <target state="translated">次の構成は、Dockerサービスのすべての機能を示しています。現在、&lt;a href=&quot;https://docs.docker.com/engine/api/v1.32&quot;&gt;Docker API 1.32&lt;/a&gt;が実装されています。</target>
        </trans-unit>
        <trans-unit id="e47e56b53b64c2fc1c789e605154825489a88c25" translate="yes" xml:space="preserve">
          <source>The following configuration starts a Docker Service with - the given image, - 1 replica - exposes the port &lt;code&gt;8080&lt;/code&gt; in &lt;code&gt;vip&lt;/code&gt; mode to the host machine - moreover, uses the &lt;code&gt;container&lt;/code&gt; runtime</source>
          <target state="translated">次の構成では、Dockerサービスを開始します-指定されたイメージ-1つのレプリカ-ポート &lt;code&gt;8080&lt;/code&gt; を &lt;code&gt;vip&lt;/code&gt; モードでホストマシンに公開します-さらに、 &lt;code&gt;container&lt;/code&gt; ランタイムを使用します</target>
        </trans-unit>
        <trans-unit id="5fa54721a391dd649dfff69ea706b31aef40c700" translate="yes" xml:space="preserve">
          <source>The following denies all Egress traffic by omitting any &lt;code&gt;egress&lt;/code&gt; rules, while including the default &lt;code&gt;ingress&lt;/code&gt; rule to allow all traffic.</source>
          <target state="translated">次の例では、すべてのトラフィックを許可するデフォルトの &lt;code&gt;ingress&lt;/code&gt; ルールを含め、 &lt;code&gt;egress&lt;/code&gt; ルールを省略してすべての下りトラフィックを拒否します。</target>
        </trans-unit>
        <trans-unit id="7556f6c520485cfb9ff31bd48fe32b431abb9cfd" translate="yes" xml:space="preserve">
          <source>The following dynamodb table description models the table and GSI shown in the &lt;a href=&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html&quot;&gt;AWS SDK example documentation&lt;/a&gt;</source>
          <target state="translated">次のdynamodbテーブルの説明は、&lt;a href=&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/GSI.html&quot;&gt;AWS SDKサンプルドキュメントに&lt;/a&gt;示されているテーブルとGSIをモデル化しています</target>
        </trans-unit>
        <trans-unit id="2903b9a8f826c38b28cc106e4c317243932ce9a9" translate="yes" xml:space="preserve">
          <source>The following environment variables must be set for the running of the acceptance test suite:</source>
          <target state="translated">受け入れテストスイートを実行するためには、以下の環境変数を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="325235b15f0e377aa196883e5d2b49ae041a3e33" translate="yes" xml:space="preserve">
          <source>The following example below creates a CloudFront distribution with an S3 origin.</source>
          <target state="translated">以下の例では、S3オリジンのCloudFrontディストリビューションを作成しています。</target>
        </trans-unit>
        <trans-unit id="3ac458cd5c5243c1ea1c02bdf4e4deb979dede46" translate="yes" xml:space="preserve">
          <source>The following example below creates a CloudFront origin access identity.</source>
          <target state="translated">以下の例では、CloudFrontオリジンのアクセスIDを作成します。</target>
        </trans-unit>
        <trans-unit id="1b55b5c83e74be19fe8f01b9e1f1b9295afed4e3" translate="yes" xml:space="preserve">
          <source>The following example below demonstrates a &quot;standard&quot; example of configuring a vSphere DVS in a 3-node vSphere datacenter named &lt;code&gt;dc1&lt;/code&gt;, across 4 NICs with two being used as active, and two being used as passive. Note that the NIC failover order propagates to any port groups configured on this DVS and can be overridden there.</source>
          <target state="translated">次の例は、2つのアクティブとして使用され、2つのパッシブとして使用される4つのNICにわたって、 &lt;code&gt;dc1&lt;/code&gt; という名前の3ノードのvSphereデータセンターでvSphere DVSを構成する「標準」の例を示しています。NICフェイルオーバーの順序は、このDVSで構成されているすべてのポートグループに伝達され、そこで上書きできることに注意してください。</target>
        </trans-unit>
        <trans-unit id="f521a59fb179e3402a6792cbcc044bec8d7d401e" translate="yes" xml:space="preserve">
          <source>The following example builds on the above example by creating a &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; and applying the created tag to it:</source>
          <target state="translated">次の例は、&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt;を作成し、作成したタグを適用することにより、上記の例に基づいています。</target>
        </trans-unit>
        <trans-unit id="c486d347bd85318383e0d242ee765516148b4840" translate="yes" xml:space="preserve">
          <source>The following example builds on the above example by creating a &lt;a href=&quot;virtual_machine&quot;&gt;&lt;code&gt;vsphere_virtual_machine&lt;/code&gt;&lt;/a&gt; and assigning a value to created custom attribute on it.</source>
          <target state="translated">次の例は、&lt;a href=&quot;virtual_machine&quot;&gt; &lt;code&gt;vsphere_virtual_machine&lt;/code&gt; &lt;/a&gt;を作成し、その上に作成されたカスタム属性に値を割り当てることにより、上記の例に基づいています。</target>
        </trans-unit>
        <trans-unit id="1f5b4e1a001fb8c24a908fedcbe942098e5b6033" translate="yes" xml:space="preserve">
          <source>The following example creates a compute cluster comprised of three hosts, making use of the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource. DPM will be disabled in the cluster as it is the default setting, but we override the setting of the first host referenced by the &lt;a href=&quot;../d/host&quot;&gt;&lt;code&gt;vsphere_host&lt;/code&gt;&lt;/a&gt; data source (&lt;code&gt;esxi1&lt;/code&gt;) by using the &lt;code&gt;vsphere_dpm_host_override&lt;/code&gt; resource so it will be powered off when the cluster does not need it to service virtual machines.</source>
          <target state="translated">次の例では、&lt;a href=&quot;compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt;リソースを使用して、3つのホストで構成される計算クラスターを作成します。DPMはデフォルト設定であるため、クラスターでは無効になりますが、 &lt;code&gt;vsphere_dpm_host_override&lt;/code&gt; リソースを使用して&lt;a href=&quot;../d/host&quot;&gt; &lt;code&gt;vsphere_host&lt;/code&gt; &lt;/a&gt;データソース（ &lt;code&gt;esxi1&lt;/code&gt; ）によって参照される最初のホストの設定を上書きするため、クラスターで不要な場合は電源がオフになります仮想マシンにサービスを提供します。</target>
        </trans-unit>
        <trans-unit id="745a1cfac498c15bfb6f56927cf4c3d00a3c58e4" translate="yes" xml:space="preserve">
          <source>The following example demonstrates using the NSX Terraform provider to create a logical switch and tier1 logical router. It then connects the logical switch to the tier1 logical router and uplinks the T1 router to a pre-created T0 router.</source>
          <target state="translated">次の例は、NSX Terraform プロバイダを使用して論理スイッチと tier1 論理ルータを作成することを示しています。次に、論理スイッチを tier1 論理ルータに接続し、T1 ルータを事前に作成した T0 ルータにアップリンクします。</target>
        </trans-unit>
        <trans-unit id="31c9ea066a81c4891a0f8fa9c3605aee218ddb30" translate="yes" xml:space="preserve">
          <source>The following example locates a DVS that is named &lt;code&gt;terraform-test-dvs&lt;/code&gt;, in the datacenter &lt;code&gt;dc1&lt;/code&gt;. It then uses this DVS to set up a &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; resource that uses the first uplink as a primary uplink and the second uplink as a secondary.</source>
          <target state="translated">次の例では、データセンター &lt;code&gt;dc1&lt;/code&gt; で &lt;code&gt;terraform-test-dvs&lt;/code&gt; という名前のDVSを見つけます。次に、このDVSを使用して、最初のアップリンクをプライマリアップリンクとして使用し、2番目のアップリンクをセカンダリとして使用する &lt;code&gt;vsphere_distributed_port_group&lt;/code&gt; リソースをセットアップします。</target>
        </trans-unit>
        <trans-unit id="92ab118d58d9a405f70d0668b12624fe3e556359" translate="yes" xml:space="preserve">
          <source>The following example makes use of the &lt;a href=&quot;../d/vmfs_disks&quot;&gt;&lt;code&gt;vsphere_vmfs_disks&lt;/code&gt;&lt;/a&gt; data source to auto-detect exported iSCSI LUNS matching a certain NAA vendor ID (in this case, LUNs exported from a &lt;a href=&quot;https://kb.netapp.com/support/s/article/ka31A0000000rLRQAY/how-to-match-a-lun-s-naa-number-to-its-serial-number?language=en_US&quot;&gt;NetApp&lt;/a&gt;). These discovered disks are then loaded into &lt;code&gt;vsphere_vmfs_datastore&lt;/code&gt;. The datastore is also placed in the &lt;code&gt;datastore-folder&lt;/code&gt; folder afterwards.</source>
          <target state="translated">次の例では、&lt;a href=&quot;../d/vmfs_disks&quot;&gt; &lt;code&gt;vsphere_vmfs_disks&lt;/code&gt; &lt;/a&gt;データソースを使用して、特定のNAAベンダーID（この場合は、&lt;a href=&quot;https://kb.netapp.com/support/s/article/ka31A0000000rLRQAY/how-to-match-a-lun-s-naa-number-to-its-serial-number?language=en_US&quot;&gt;NetApp&lt;/a&gt;からエクスポートされたLUN ）に一致するエクスポートされたiSCSI LUNを自動検出します。次に、これらの検出されたディスクは &lt;code&gt;vsphere_vmfs_datastore&lt;/code&gt; にロードされます。データストアは、後で &lt;code&gt;datastore-folder&lt;/code&gt; フォルダーにも配置されます。</target>
        </trans-unit>
        <trans-unit id="0400ac0744a461124d7391eafa3c7ec1db5e1395" translate="yes" xml:space="preserve">
          <source>The following example retrieves a list of VPC Ids with a custom tag of &lt;code&gt;service&lt;/code&gt; set to a value of &quot;production&quot;.</source>
          <target state="translated">次の例では、 &lt;code&gt;service&lt;/code&gt; カスタムタグが「production」の値に設定されたVPC IDのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="d09b3b93f9f39c3323a7174b74ca40f90e0a3a30" translate="yes" xml:space="preserve">
          <source>The following example retrieves a list of all network ACL ids in a VPC with a custom tag of &lt;code&gt;Tier&lt;/code&gt; set to a value of &quot;Private&quot;.</source>
          <target state="translated">次の例では、 &lt;code&gt;Tier&lt;/code&gt; のカスタムタグが「Private」の値に設定されたVPC内のすべてのネットワークACL IDのリストを取得します。</target>
        </trans-unit>
        <trans-unit id="88c82b96f535873507c4a18724d93432f8ff1389" translate="yes" xml:space="preserve">
          <source>The following example retrieves a list of all subnets in a VPC with a custom tag of &lt;code&gt;Tier&lt;/code&gt; set to a value of &quot;Private&quot; so that the &lt;code&gt;aws_instance&lt;/code&gt; resource can loop through the subnets, putting instances across availability zones.</source>
          <target state="translated">次の例では、 &lt;code&gt;Tier&lt;/code&gt; のカスタムタグが「Private」の値に設定されたVPC内のすべてのサブネットのリストを取得して、 &lt;code&gt;aws_instance&lt;/code&gt; リソースがサブネットをループし、可用性ゾーン全体にインスタンスを配置できるようにします。</target>
        </trans-unit>
        <trans-unit id="bebae7b326123b48b9967994d90fc286d5c0bce9" translate="yes" xml:space="preserve">
          <source>The following example retrieves a network ACL id in a VPC which associated with specific subnet.</source>
          <target state="translated">以下の例では、特定のサブネットに関連付けられたVPC内のネットワークACL IDを取得します。</target>
        </trans-unit>
        <trans-unit id="7db0bf65eff49211b450a33e6ea47a87b6aef25b" translate="yes" xml:space="preserve">
          <source>The following example retrieves a text object (which must have a &lt;code&gt;Content-Type&lt;/code&gt; value starting with &lt;code&gt;text/&lt;/code&gt;) and uses it as the &lt;code&gt;user_data&lt;/code&gt; for an EC2 instance:</source>
          <target state="translated">次の例では、テキストオブジェクト（ &lt;code&gt;text/&lt;/code&gt; 始まる &lt;code&gt;Content-Type&lt;/code&gt; 値が必要）を取得し、EC2インスタンスの &lt;code&gt;user_data&lt;/code&gt; として使用します。</target>
        </trans-unit>
        <trans-unit id="d8d56cf2aa48057045468fcc73ddb9fe2ce6177f" translate="yes" xml:space="preserve">
          <source>The following example sets up a cluster and enables DRS and vSphere HA with the default settings. The hosts have to exist already in vSphere and should not already be members of clusters - it's best to add these as standalone hosts before adding them to a cluster.</source>
          <target state="translated">次の例では、クラスタを設定し、既定の設定で DRS と vSphere HA を有効にします。ホストは vSphere に既に存在している必要があり、クラスタのメンバーになっていない必要があります。</target>
        </trans-unit>
        <trans-unit id="00a8f0c1eceb76bf33353f4d5d7fdf9b5518067c" translate="yes" xml:space="preserve">
          <source>The following example sets up a datastore cluster and enables Storage DRS with the default settings. It then creates two NAS datastores using the &lt;a href=&quot;nas_datastore&quot;&gt;&lt;code&gt;vsphere_nas_datastore&lt;/code&gt; resource&lt;/a&gt; and assigns them to the datastore cluster.</source>
          <target state="translated">次の例では、データストアクラスタをセットアップし、デフォルト設定でStorage DRSを有効にします。次に、&lt;a href=&quot;nas_datastore&quot;&gt; &lt;code&gt;vsphere_nas_datastore&lt;/code&gt; リソース&lt;/a&gt;を使用して2つのNASデータストアを作成し、それらをデータストアクラスターに割り当てます。</target>
        </trans-unit>
        <trans-unit id="83c05c0c746747fcea68d7708759640063b17693" translate="yes" xml:space="preserve">
          <source>The following example sets up a resource pool in a compute cluster which uses the default settings for CPU and memory reservations, shares, and limits. The compute cluster needs to already exist in vSphere.</source>
          <target state="translated">次の例では、CPU とメモリの予約、共有、および制限のデフォルト設定を使用するコンピュート クラスタにリソース プールを設定します。このコンピュート クラスタは、vSphere に既に存在している必要があります。</target>
        </trans-unit>
        <trans-unit id="dcab23a80c499895bc0ddc68fd97ec5d5b136179" translate="yes" xml:space="preserve">
          <source>The following example shows a connection between an Azure virtual network and an on-premises VPN device and network.</source>
          <target state="translated">次の例は、Azure 仮想ネットワークとオンプレミスの VPN デバイスとネットワークの間の接続を示しています。</target>
        </trans-unit>
        <trans-unit id="96a0dc415085307e0e2198a4bde677e565305be9" translate="yes" xml:space="preserve">
          <source>The following example shows a connection between two Azure virtual network in different locations/regions.</source>
          <target state="translated">次の例では、異なる場所/地域にある2つのAzure仮想ネットワーク間の接続を示しています。</target>
        </trans-unit>
        <trans-unit id="829e58bb052569333abb98b36fa3b4184e22acc2" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a Route Table id as a variable and use this data source to obtain the data necessary to create a route.</source>
          <target state="translated">以下の例は、ルートテーブル ID を変数として受け入れ、このデータソースを使用してルート作成に必要なデータを取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="d3c2d47e955581443c514c52f2b6be3c4f442c2d" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a Security Group id as a variable and use this data source to obtain the data necessary to create a subnet.</source>
          <target state="translated">次の例では、セキュリティグループIDを変数として受け入れ、このデータソースを使用してサブネットを作成するために必要なデータを取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="709dbf9c30003f700b6b06781cc2bfa42fb95a8b" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a VPC id as a variable and use this data source to obtain the data necessary to create a subnet within it.</source>
          <target state="translated">次の例では、VPC ID を変数として受け入れ、このデータソースを使用して、その中にサブネットを作成するために必要なデータを取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="353ae1799001a1830a3ee6a66713aa4924bec326" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a public IP as a variable and use this data source to obtain the allocation ID.</source>
          <target state="translated">次の例は、パブリックIPを変数として受け入れ、このデータソースを使用して割り当てIDを取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3c080e2d2e6c4d9fe37cbe25f56ca6a0aec394b8" translate="yes" xml:space="preserve">
          <source>The following example shows how one might accept a subnet id as a variable and use this data source to obtain the data necessary to create a security group that allows connections from hosts in that subnet.</source>
          <target state="translated">次の例では、サブネットIDを変数として受け入れ、このデータソースを使用して、そのサブネット内のホストからの接続を許可するセキュリティグループを作成するために必要なデータを取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="0e24ee60517e88f29e69fc2ddb26d541c633f3ee" translate="yes" xml:space="preserve">
          <source>The following example shows how one might use a CIDR value to find a network interface id and use this to create a data source of that network interface.</source>
          <target state="translated">次の例では、CIDR 値を使用してネットワーク・インターフェース ID を見つけ、これを使用してそのネットワーク・インターフェースのデータ・ソースを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2e5dcfb529a112fcc10a822f64f63d3e391d8f2f" translate="yes" xml:space="preserve">
          <source>The following example shows how one might use this resource to produce a directory of configuration files to upload to a compute instance, using Amazon EC2 as a placeholder.</source>
          <target state="translated">以下の例では、Amazon EC2をプレースホルダとして使用して、コンピュートインスタンスにアップロードするための設定ファイルのディレクトリを作成するために、このリソースをどのように使用するかを示しています。</target>
        </trans-unit>
        <trans-unit id="9d2b0f1fbe70deb518e37b6143e647cf94b8c1be" translate="yes" xml:space="preserve">
          <source>The following example shows how the resource might be used to obtain the metrics usage and limit of a given Circonus Account.</source>
          <target state="translated">次の例では、リソースを使用して、特定の Circonus アカウントのメトリクス使用量と制限を取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="3900a5d29c1eef7e58c467565b0079619b9497be" translate="yes" xml:space="preserve">
          <source>The following example shows how the resource might be used to obtain the name of the AWS region configured on the provider.</source>
          <target state="translated">以下の例では、プロバイダに設定されたAWSリージョンの名前を取得するためにリソースを使用する場合の例を示しています。</target>
        </trans-unit>
        <trans-unit id="c7d9416983d62caa86ecc9760de2ce13671044d0" translate="yes" xml:space="preserve">
          <source>The following example shows how the resource might be used to obtain the name of the Circonus Collector configured on the provider.</source>
          <target state="translated">次の例は、リソースを使用してプロバイダに構成された Circonus Collector の名前を取得する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="c8a02273b78e886b80e46cd7eb39579058213e6c" translate="yes" xml:space="preserve">
          <source>The following example shows how this data source might be used to derive VPC and subnet CIDR prefixes systematically for an availability zone.</source>
          <target state="translated">以下の例では、このデータソースを使用して、アベイラビリティゾーンのVPCおよびサブネットCIDRプレフィックスを系統的に導出する方法を示します。</target>
        </trans-unit>
        <trans-unit id="8f5331af3608d69b79a7e4edb82840bfcbeeea3d" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an instance with multiple ephemeral disks:</source>
          <target state="translated">次の例は、複数のエフェメラルディスクでインスタンスを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="e2328a930004ce3407a36f1690cca16a315a826f" translate="yes" xml:space="preserve">
          <source>The following example shows how to generate a random priority between 1 and 99999 for a &lt;code&gt;aws_alb_listener_rule&lt;/code&gt; resource:</source>
          <target state="translated">次の例は、 &lt;code&gt;aws_alb_listener_rule&lt;/code&gt; リソースに対して1〜99999のランダムな優先度を生成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="76c3b70a2dc8b16de9a53e0ed2afcfeee1a092a7" translate="yes" xml:space="preserve">
          <source>The following example shows how to generate a unique name for an AWS EC2 instance that changes each time a new AMI id is selected.</source>
          <target state="translated">次の例では、新しいAMI idが選択されるたびに変更されるAWS EC2インスタンスの一意の名前を生成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="8d3642ff70777c65faed4e5ada18adf9bbdd55f4" translate="yes" xml:space="preserve">
          <source>The following example shows how to generate a unique pet name for an AWS EC2 instance that changes each time a new AMI id is selected.</source>
          <target state="translated">以下の例では、新しいAMI idが選択されるたびに変更されるAWS EC2インスタンス用のユニークなペット名を生成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="91e7f1b3ff98d4e72e73a1ed723e3d47c2ab6fda" translate="yes" xml:space="preserve">
          <source>The following example shows how to get a Hosted Zone from its name and from this data how to create a Record Set.</source>
          <target state="translated">次の例では、Hosted Zone の名前から Hosted Zone を取得する方法と、このデータからレコードセットを作成する方法を示しています。</target>
        </trans-unit>
        <trans-unit id="4e61c885432d54e1727453f0424b1a58b597639b" translate="yes" xml:space="preserve">
          <source>The following example shows how to obtain details of the security group rule and passing the data to the instance at launch.</source>
          <target state="translated">以下の例では、セキュリティグループルールの詳細を取得し、起動時にインスタンスにデータを渡す方法を示しています。</target>
        </trans-unit>
        <trans-unit id="488991d8178d8a53c560aad32f61a0df231440a8" translate="yes" xml:space="preserve">
          <source>The following example shows some input/output boilerplate code for a data source implemented in bash:</source>
          <target state="translated">以下の例では、bashで実装されたデータソースの入出力ボイラプレートコードを示しています。</target>
        </trans-unit>
        <trans-unit id="3ba01e1a153640113ef3a286648d10dfb6f9e882" translate="yes" xml:space="preserve">
          <source>The following example uses the default datacenter and default host to add a datastore with local disks to a single ESXi server.</source>
          <target state="translated">以下の例では、デフォルトのデータセンターとデフォルトのホストを使用して、ローカルディスクを持つデータストアを単一の ESXi サーバーに追加しています。</target>
        </trans-unit>
        <trans-unit id="1bc8bf22e6bed6e0fa7e32c1fa72e38c0b230830" translate="yes" xml:space="preserve">
          <source>The following example would set up a NFS v3 share on 3 hosts connected through vCenter in the same datacenter - &lt;code&gt;esxi1&lt;/code&gt;, &lt;code&gt;esxi2&lt;/code&gt;, and &lt;code&gt;esxi3&lt;/code&gt;. The remote host is named &lt;code&gt;nfs&lt;/code&gt; and has &lt;code&gt;/export/terraform-test&lt;/code&gt; exported.</source>
          <target state="translated">次の例では、同じデータセンター内のvCenterを介して接続された3つのホスト（ &lt;code&gt;esxi2&lt;/code&gt; 、 &lt;code&gt;esxi1&lt;/code&gt; 、esxi3）にNFS v3共有を &lt;code&gt;esxi3&lt;/code&gt; ます。リモートホストの名前は &lt;code&gt;nfs&lt;/code&gt; で、 &lt;code&gt;/export/terraform-test&lt;/code&gt; がエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="8a569d0b8a1b684db5dba0002c8239c25e34bb79" translate="yes" xml:space="preserve">
          <source>The following examples show the basic and advanced usage of the Docker Service resource assuming the host machine is already part of a Swarm.</source>
          <target state="translated">以下の例では、ホストマシンがすでにSwarmの一部であると仮定して、Docker Serviceリソースの基本的な使い方と高度な使い方を示しています。</target>
        </trans-unit>
        <trans-unit id="7c39fa14ad7b86ef6f734e3497b65d5ba2434ded" translate="yes" xml:space="preserve">
          <source>The following extra optional arguments, all lists of Chef recipe names, allow custom Chef recipes to be applied to layer instances at the five different lifecycle events, if custom cookbooks are enabled on the layer's stack:</source>
          <target state="translated">以下の追加のオプション引数、すべてのChefレシピ名のリストは、カスタムクックブックがレイヤーのスタックで有効になっている場合、5つの異なるライフサイクルイベントで、カスタムChefレシピをレイヤーインスタンスに適用することを可能にします。</target>
        </trans-unit>
        <trans-unit id="3ffa094c26ea52f7fda156fbbcb8d7f883a9fde5" translate="yes" xml:space="preserve">
          <source>The following fields are also exported:</source>
          <target state="translated">以下のフィールドもエクスポートされます。</target>
        </trans-unit>
        <trans-unit id="0460261a958480f8f65a08202c431d257adfe278" translate="yes" xml:space="preserve">
          <source>The following fields are available in step adjustments:</source>
          <target state="translated">ステップ調整では、以下のフィールドが利用可能です。</target>
        </trans-unit>
        <trans-unit id="d96767d63448e883ce623fbce5a16ed36604d70a" translate="yes" xml:space="preserve">
          <source>The following fields are available in target tracking configuration:</source>
          <target state="translated">ターゲットトラッキングの設定では、以下のフィールドが利用可能です。</target>
        </trans-unit>
        <trans-unit id="9dbaa7304c7dbf56be47e877a43819e86507ebd1" translate="yes" xml:space="preserve">
          <source>The following is a list of the per-node &lt;code&gt;service&lt;/code&gt; attributes:</source>
          <target state="translated">以下は、ノードごとの &lt;code&gt;service&lt;/code&gt; 属性のリストです。</target>
        </trans-unit>
        <trans-unit id="fd3714dfe1f85fd7f1363b92a092031a993c92f2" translate="yes" xml:space="preserve">
          <source>The following is a list of the per-node attributes contained within the &lt;code&gt;nodes&lt;/code&gt; map:</source>
          <target state="translated">以下は、 &lt;code&gt;nodes&lt;/code&gt; マップ内に含まれるノードごとの属性のリストです。</target>
        </trans-unit>
        <trans-unit id="598970bfa4dfae272bebc265b304b6076e4ea658" translate="yes" xml:space="preserve">
          <source>The following is a minimal example:</source>
          <target state="translated">以下は最低限の例です。</target>
        </trans-unit>
        <trans-unit id="add0b05f71e412adc140dd1c22bbcd49d6ec91be" translate="yes" xml:space="preserve">
          <source>The following is an example discovery document declaring support for version 1 of the module registry protocol:</source>
          <target state="translated">以下に、モジュールレジストリプロトコルのバージョン 1 のサポートを宣言するディスカバリ文書の例を示します。</target>
        </trans-unit>
        <trans-unit id="f7d54003cf8078e8c60b659921877da3c86a50a9" translate="yes" xml:space="preserve">
          <source>The following is an example of how to provision a service instance with the Oracle Traffic Director:</source>
          <target state="translated">以下は、Oracle Traffic Directorでサービスインスタンスをプロビジョニングする方法の例です。</target>
        </trans-unit>
        <trans-unit id="310d729e7392b136c72a87a2766f6f8e655cbf02" translate="yes" xml:space="preserve">
          <source>The following keys can be used to configure the provider.</source>
          <target state="translated">プロバイダの設定には、以下のキーを使用することができます。</target>
        </trans-unit>
        <trans-unit id="501607c6486a4f8eef75f7388138d54edea1f9e3" translate="yes" xml:space="preserve">
          <source>The following options allow control over CPU and memory allocation on the virtual machine. Note that the resource pool that this VM is in may affect these options.</source>
          <target state="translated">次のオプションでは、仮想マシンの CPU およびメモリ割り当てを制御できます。この VM が存在するリソース プールがこれらのオプションに影響を与える可能性があることに注意してください。</target>
        </trans-unit>
        <trans-unit id="e4542bfdb6d3ac2430971f47a1e0a71c51b2c533" translate="yes" xml:space="preserve">
          <source>The following options allow the use of LACP for NIC teaming for ports that this policy applies to.</source>
          <target state="translated">次のオプションを使用すると、このポリシーが適用されるポートのNICチーミングにLACPを使用することができます。</target>
        </trans-unit>
        <trans-unit id="1ddd20dc42e5d4eb7f8d0790fe95ed8b9cce9a41" translate="yes" xml:space="preserve">
          <source>The following options apply to all of (or several of) the initialization steps:</source>
          <target state="translated">以下のオプションは、初期化ステップのすべて(またはいくつか)に適用されます。</target>
        </trans-unit>
        <trans-unit id="c68570f3fdd6d36b8d66f16d463d2b62aae2516f" translate="yes" xml:space="preserve">
          <source>The following options are general virtual machine and Terraform workflow options:</source>
          <target state="translated">以下のオプションは、一般的な仮想マシンとTerraformのワークフローオプションです。</target>
        </trans-unit>
        <trans-unit id="46b0bd78e14161c24bf772a4b37c2532ecde92d6" translate="yes" xml:space="preserve">
          <source>The following options are required:</source>
          <target state="translated">以下のオプションが必要です。</target>
        </trans-unit>
        <trans-unit id="45cc9553ba7860ef6517f8ab7fcf8071a0402618" translate="yes" xml:space="preserve">
          <source>The following options below control whether or not the policies set in the port group can be overridden on the individual port:</source>
          <target state="translated">以下のオプションは、ポートグループで設定したポリシーを個々のポートで上書きできるかどうかを制御します。</target>
        </trans-unit>
        <trans-unit id="eea0449047d5750c19e239523e8b74d8f2b07075" translate="yes" xml:space="preserve">
          <source>The following options control CPU and memory settings on the virtual machine:</source>
          <target state="translated">次のオプションは、仮想マシンの CPU およびメモリの設定を制御します。</target>
        </trans-unit>
        <trans-unit id="e9b82e47d2fe4bcb4aed167bbd27c5724f35f203" translate="yes" xml:space="preserve">
          <source>The following options control HA policy for ports that this policy applies to:</source>
          <target state="translated">以下のオプションは、このポリシーが適用されるポートの HA ポリシーを制御します。</target>
        </trans-unit>
        <trans-unit id="295b9dc1dfb14a4421140b5fff4bacb989d26912" translate="yes" xml:space="preserve">
          <source>The following options control I/O load balancing for Storage DRS on the datastore cluster.</source>
          <target state="translated">以下のオプションは、データストアクラスタ上のストレージDRSのI/Oロードバランシングを制御します。</target>
        </trans-unit>
        <trans-unit id="dd2f500428b34eda555ed8f0721f38cca4734ed6" translate="yes" xml:space="preserve">
          <source>The following options control VMware tools options on the virtual machine:</source>
          <target state="translated">次のオプションは、仮想マシン上のVMwareツールのオプションを制御します。</target>
        </trans-unit>
        <trans-unit id="9efea7064a40b4630d975ed23761b6b06cd27233" translate="yes" xml:space="preserve">
          <source>The following options control advanced operation of the virtual machine, or control various parts of Terraform workflow, and should not need to be modified during basic operation of the resource. Only change these options if they are explicitly required, or if you are having trouble with Terraform's default behavior.</source>
          <target state="translated">以下のオプションは、仮想マシンの高度な操作を制御したり、Terraform ワークフローのさまざまな部分を制御したりするもので、リソースの基本的な操作中に変更する必要はありません。これらのオプションは、明示的に必要な場合や、Terraformのデフォルトの動作に問題がある場合にのみ変更してください。</target>
        </trans-unit>
        <trans-unit id="38978609d4819df8de653705edc83a71b3dbce91" translate="yes" xml:space="preserve">
          <source>The following options control advanced parts of Storage DRS that may not require changing during basic operation:</source>
          <target state="translated">以下のオプションは、基本操作中に変更する必要がない場合があるストレージDRSの高度な部分を制御します。</target>
        </trans-unit>
        <trans-unit id="0241e3b4d680d208d65caccfb703445b734b0a40" translate="yes" xml:space="preserve">
          <source>The following options control boot settings on the virtual machine:</source>
          <target state="translated">次のオプションは、仮想マシンのブート設定を制御します。</target>
        </trans-unit>
        <trans-unit id="d5fa4ef8a2ab526cbc2eb3b9fec20b5ed3973e0c" translate="yes" xml:space="preserve">
          <source>The following options control disk space load balancing for Storage DRS on the datastore cluster.</source>
          <target state="translated">以下のオプションは、データストアクラスタ上のストレージDRSのディスクスペースのロードバランシングを制御します。</target>
        </trans-unit>
        <trans-unit id="a7aacb368181aef939420b4e53de02cfa53e6c40" translate="yes" xml:space="preserve">
          <source>The following options control security settings for the ports that this policy applies to:</source>
          <target state="translated">次のオプションは、このポリシーが適用されるポートのセキュリティ設定を制御します。</target>
        </trans-unit>
        <trans-unit id="65811e700af2067fd83c90ada855602a76e72308" translate="yes" xml:space="preserve">
          <source>The following options control settings that you can use to configure Netflow on the DVS:</source>
          <target state="translated">次のオプションは、DVS でネットフローを設定する際に使用する設定を制御します。</target>
        </trans-unit>
        <trans-unit id="cf30e4447e13d8f9fde2cff21160af7fe3d1c749" translate="yes" xml:space="preserve">
          <source>The following options control the VLAN behaviour of the port groups the port policy applies to. One one of these 3 options may be set:</source>
          <target state="translated">次のオプションは、ポートポリシーが適用されるポートグループの VLAN の動作を制御します。これらの3つのオプションのうち1つを設定することができます。</target>
        </trans-unit>
        <trans-unit id="b45914e1251b147669759d29e6ba7f0e1df8ddc3" translate="yes" xml:space="preserve">
          <source>The following options control the automation levels for Storage DRS on the datastore cluster.</source>
          <target state="translated">以下のオプションは、データストアクラスタ上のストレージDRSの自動化レベルを制御します。</target>
        </trans-unit>
        <trans-unit id="61820c9f80d8520401927042939994466e66480b" translate="yes" xml:space="preserve">
          <source>The following options control the settings for DRS on the cluster.</source>
          <target state="translated">以下のオプションは、クラスタ上のDRSの設定を制御します。</target>
        </trans-unit>
        <trans-unit id="49de4b4cd17de567fae7bfcebfa83ad860292196" translate="yes" xml:space="preserve">
          <source>The following options control traffic shaping settings for the ports that this policy applies to:</source>
          <target state="translated">次のオプションは、このポリシーが適用されるポートのトラフィックシェーピング設定を制御します。</target>
        </trans-unit>
        <trans-unit id="7787926de39975dfd8d7e14fc98784e71b160371" translate="yes" xml:space="preserve">
          <source>The following options relate to how network traffic is handled on this virtual switch. It also controls the NIC failover order. This subset of options is shared with the &lt;a href=&quot;host_port_group&quot;&gt;&lt;code&gt;vsphere_host_port_group&lt;/code&gt;&lt;/a&gt; resource, in which options can be omitted to ensure options are inherited from the switch configuration here.</source>
          <target state="translated">次のオプションは、この仮想スイッチでのネットワークトラフィックの処理方法に関連しています。NICフェイルオーバーの順序も制御します。このオプションのサブセットは&lt;a href=&quot;host_port_group&quot;&gt; &lt;code&gt;vsphere_host_port_group&lt;/code&gt; &lt;/a&gt;リソースと共有され、ここでオプションを省略して、ここでスイッチ構成からオプションを確実に継承できます。</target>
        </trans-unit>
        <trans-unit id="f7d3a57d660d4371599f4be0a94f236bae431c04" translate="yes" xml:space="preserve">
          <source>The following provides a very basic example of setting up an instance (provided by &lt;code&gt;instance&lt;/code&gt;) in the default security group, creating a security group (provided by &lt;code&gt;sg&lt;/code&gt;) and then attaching the security group to the instance's primary network interface via the &lt;code&gt;aws_network_interface_sg_attachment&lt;/code&gt; resource, named &lt;code&gt;sg_attachment&lt;/code&gt;:</source>
          <target state="translated">以下に、（によって提供されるインスタンスの設定の非常に基本的な例を提供 &lt;code&gt;instance&lt;/code&gt; 、デフォルトのセキュリティグループ内の（）によって提供されるセキュリティグループ作成 &lt;code&gt;sg&lt;/code&gt; ）、次いで介しインスタンスの一次ネットワークインタフェースにセキュリティグループを結合 &lt;code&gt;aws_network_interface_sg_attachment&lt;/code&gt; 名前、リソースを &lt;code&gt;sg_attachment&lt;/code&gt; ：</target>
        </trans-unit>
        <trans-unit id="4ff3678e07550f15f4e466ddb75ba5a563c79672" translate="yes" xml:space="preserve">
          <source>The following settings are available for all Admission Control modes, but will infer different meanings in each mode.</source>
          <target state="translated">以下の設定は、すべてのアドミッション制御モードで利用可能ですが、各モードで異なる意味を推論します。</target>
        </trans-unit>
        <trans-unit id="cb5489a3ba45d7bff2589c78266c7ffa27e468d3" translate="yes" xml:space="preserve">
          <source>The following settings are supported for backward compatibility but are no longer recommended for use:</source>
          <target state="translated">以下の設定は下位互換性のためにサポートされていますが、使用を推奨するものではなくなりました。</target>
        </trans-unit>
        <trans-unit id="33e0a112c8ef4eeb98802067b5a487be9ea21509" translate="yes" xml:space="preserve">
          <source>The following settings can be set in the CLI configuration file:</source>
          <target state="translated">CLIの設定ファイルでは、以下の設定を行うことができます。</target>
        </trans-unit>
        <trans-unit id="ab2765312f5908c4da59093b11e8a9beac8da6c2" translate="yes" xml:space="preserve">
          <source>The following settings configure DNS globally, generally for Linux systems. For Windows systems, this is done per-interface, see &lt;a href=&quot;#network-interface-settings&quot;&gt;network interface settings&lt;/a&gt;.</source>
          <target state="translated">次の設定は、DNSをグローバルに構成します。一般的にはLinuxシステムです。Windowsシステムの場合、これはインターフェースごとに行われ&lt;a href=&quot;#network-interface-settings&quot;&gt;ます&lt;/a&gt;。ネットワークインターフェースの設定を参照してください。</target>
        </trans-unit>
        <trans-unit id="13208ce3ac11ed198e86afdaa2ed753ebea1f4ba" translate="yes" xml:space="preserve">
          <source>The following settings control Virtual Machine Component Protection (VMCP) in vSphere HA. VMCP gives vSphere HA the ability to monitor a host for datastore accessibility failures, and automate recovery for affected virtual machines.</source>
          <target state="translated">次の設定では、vSphere HA の Virtual Machine Component Protection (VMCP)を制御します。VMCP を使用すると、vSphere HA では、データストアのアクセシビリティ障害が発生していないかホストを監視し、影響を受けた仮想マシンのリカバリを自動化することができます。</target>
        </trans-unit>
        <trans-unit id="9f2aa9b63a0fab276d39ddefe1a5774a56bcfe15" translate="yes" xml:space="preserve">
          <source>The following settings control Virtual Machine Component Protection (VMCP) overrides.</source>
          <target state="translated">以下の設定では、Virtual Machine Component Protection (VMCP)のオーバーライドを制御します。</target>
        </trans-unit>
        <trans-unit id="1bebd88b81986f4b1fcfd5ef31ef83f963a40145" translate="yes" xml:space="preserve">
          <source>The following settings control cluster membership or tune how hosts are managed within the cluster itself by Terraform.</source>
          <target state="translated">以下の設定では、クラスタのメンバーシップを制御したり、Terraformによるクラスタ内のホストの管理方法を調整したりします。</target>
        </trans-unit>
        <trans-unit id="07ceece75e9c5b915007b13c820b5ecde053e412" translate="yes" xml:space="preserve">
          <source>The following settings control specific settings for Admission Control when &lt;code&gt;failoverHosts&lt;/code&gt; is selected in &lt;a href=&quot;#ha_admission_control_policy&quot;&gt;&lt;code&gt;ha_admission_control_policy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の設定は、&lt;a href=&quot;#ha_admission_control_policy&quot;&gt; &lt;code&gt;ha_admission_control_policy&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;failoverHosts&lt;/code&gt; が選択されている場合のアドミッションコントロールの特定の設定を制御します。</target>
        </trans-unit>
        <trans-unit id="231d1659ef673ba96187af60709b0a78cf12ed5c" translate="yes" xml:space="preserve">
          <source>The following settings control specific settings for Admission Control when &lt;code&gt;resourcePercentage&lt;/code&gt; is selected in &lt;a href=&quot;#ha_admission_control_policy&quot;&gt;&lt;code&gt;ha_admission_control_policy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次の設定は、&lt;a href=&quot;#ha_admission_control_policy&quot;&gt; &lt;code&gt;ha_admission_control_policy&lt;/code&gt; で&lt;/a&gt; &lt;code&gt;resourcePercentage&lt;/code&gt; が選択されている場合のアドミッションコントロールの特定の設定を制御します。</target>
        </trans-unit>
        <trans-unit id="1d0fbc05c3d95b7b66312c970b2583fdf2b4e557" translate="yes" xml:space="preserve">
          <source>The following settings control specific settings for Admission Control when &lt;code&gt;slotPolicy&lt;/code&gt; is selected in &lt;a href=&quot;#ha_admission_control_policy&quot;&gt;&lt;code&gt;ha_admission_control_policy&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">場合は、以下の設定は、アドミッション制御のための特定の設定を制御 &lt;code&gt;slotPolicy&lt;/code&gt; が選択されて&lt;a href=&quot;#ha_admission_control_policy&quot;&gt; &lt;code&gt;ha_admission_control_policy&lt;/code&gt; &lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8b48691e1368b39a78d58349193d5d0db95ac80f" translate="yes" xml:space="preserve">
          <source>The following settings control the &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-5432CA24-14F1-44E3-87FB-61D937831CF6.html&quot;&gt;vSphere HA&lt;/a&gt; settings for the cluster.</source>
          <target state="translated">次の設定は、クラスターの&lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-5432CA24-14F1-44E3-87FB-61D937831CF6.html&quot;&gt;vSphere HA&lt;/a&gt;設定を制御します。</target>
        </trans-unit>
        <trans-unit id="120170a1501f79df9022bb8f9a55148704a54f49" translate="yes" xml:space="preserve">
          <source>The following settings control the &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80.html#GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80&quot;&gt;Distributed Power Management&lt;/a&gt; (DPM) settings for the cluster. DPM allows the cluster to manage host capacity on-demand depending on the needs of the cluster, powering on hosts when capacity is needed, and placing hosts in standby when there is excess capacity in the cluster.</source>
          <target state="translated">次の設定は、クラスターの&lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.resmgmt.doc/GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80.html#GUID-5E5E349A-4644-4C9C-B434-1C0243EBDC80&quot;&gt;分散電源管理&lt;/a&gt;（DPM）設定を制御します。DPMを使用すると、クラスターは、クラスターのニーズに応じてホストの容量をオンデマンドで管理し、容量が必要な場合はホストの電源を入れ、クラスターに過剰な容量がある場合はホストをスタンバイ状態にすることができます。</target>
        </trans-unit>
        <trans-unit id="c145fa4302984a752a4b25af6030eb0b8f5e7ea3" translate="yes" xml:space="preserve">
          <source>The following settings control vSphere HA Admission Control, which controls whether or not specific VM operations are permitted in the cluster in order to protect the reliability of the cluster. Based on the constraints defined in these settings, operations such as power on or migration operations may be blocked to ensure that enough capacity remains to react to host failures.</source>
          <target state="translated">次の設定では、クラスタの信頼性を保護するために、クラスタ内で特定の VM 操作を許可するかどうかを制御する vSphere HA Admission Control を制御します。これらの設定で定義された制約に基づいて、電源投入や移行操作などの操作をブロックして、ホストの障害に対応するための十分な容量を確保することができます。</target>
        </trans-unit>
        <trans-unit id="a08373b7cda3d01ef0abb9e11a4d2ef33c285d4d" translate="yes" xml:space="preserve">
          <source>The following settings control virtual machine and application monitoring overrides.</source>
          <target state="translated">次の設定では、仮想マシンとアプリケーションの監視のオーバーライドを制御します。</target>
        </trans-unit>
        <trans-unit id="171a6984fd9b1bc50cb3290b98356e6aec5a84b3" translate="yes" xml:space="preserve">
          <source>The following settings illustrate the options that can be set to work with virtual machine and application monitoring on vSphere HA.</source>
          <target state="translated">次の設定では、vSphere HA で仮想マシンとアプリケーションの監視を連携させるために設定できるオプションを説明します。</target>
        </trans-unit>
        <trans-unit id="859e2ab66bcdf43f27bd9ad90ed9e45a97783ae5" translate="yes" xml:space="preserve">
          <source>The following settings pertain to &lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-3E3B18CC-8574-46FA-9170-CF549B8E55B8.html&quot;&gt;Proactive HA&lt;/a&gt;, an advanced feature of vSphere HA that allows the cluster to get data from external providers and make decisions based on the data reported.</source>
          <target state="translated">次の設定は、クラスターが外部プロバイダーからデータを取得し、報告されたデータに基づいて決定を行うことができるvSphere HAの高度な機能である&lt;a href=&quot;https://docs.vmware.com/en/VMware-vSphere/6.5/com.vmware.vsphere.avail.doc/GUID-3E3B18CC-8574-46FA-9170-CF549B8E55B8.html&quot;&gt;プロアクティブHA&lt;/a&gt;に関連しています。</target>
        </trans-unit>
        <trans-unit id="d870f66d447667b9332d57741681a119aa651b42" translate="yes" xml:space="preserve">
          <source>The following settings should be in a &lt;code&gt;network_interface&lt;/code&gt; block in the &lt;code&gt;customize&lt;/code&gt; sub-resource. These settings configure network interfaces on a per-interface basis and are matched up to &lt;code&gt;network_interface&lt;/code&gt; sub-resources in the main block in the order they are declared.</source>
          <target state="translated">次の設定は、 &lt;code&gt;customize&lt;/code&gt; サブリソースの &lt;code&gt;network_interface&lt;/code&gt; ブロックにある必要があります。これらの設定は、インターフェイスごとにネットワークインターフェイスを構成し、宣言された順序でメインブロックの &lt;code&gt;network_interface&lt;/code&gt; サブリソースと一致します。</target>
        </trans-unit>
        <trans-unit id="a0add236be1f16b6a2501427d3de63c0049a4a79" translate="yes" xml:space="preserve">
          <source>The following settings work nearly in the same fashion as their counterparts in the &lt;a href=&quot;compute_cluster&quot;&gt;&lt;code&gt;vsphere_compute_cluster&lt;/code&gt;&lt;/a&gt; resource, with the exception that some options also allow settings that denote the use of cluster defaults. See the individual settings below for more details.</source>
          <target state="translated">次の設定は、&lt;a href=&quot;compute_cluster&quot;&gt; &lt;code&gt;vsphere_compute_cluster&lt;/code&gt; &lt;/a&gt;リソースの対応する設定とほぼ同じように機能しますが、一部のオプションでは、クラスターのデフォルトの使用を示す設定も許可されます。詳細については、以下の個々の設定を参照してください。</target>
        </trans-unit>
        <trans-unit id="9f1887d90f8cfaf275093f3f912b2c8dbed382bc" translate="yes" xml:space="preserve">
          <source>The following shows outputing all VPC Ids.</source>
          <target state="translated">以下は、すべての VPC ID を出力していることを示しています。</target>
        </trans-unit>
        <trans-unit id="34748ed0e8604a3f15e7d7257154f8be7db75b28" translate="yes" xml:space="preserve">
          <source>The following shows outputing all cidr blocks for every subnet id in a vpc.</source>
          <target state="translated">以下は、vpc内のサブネットIDごとにすべてのcidrブロックを出力することを示しています。</target>
        </trans-unit>
        <trans-unit id="76fa97859806570b78354aec1cf45d488f474884" translate="yes" xml:space="preserve">
          <source>The following shows outputing all network ACL ids in a vpc.</source>
          <target state="translated">以下は、vpc内のすべてのネットワークACL IDの出力を示しています。</target>
        </trans-unit>
        <trans-unit id="076148724e534a3ee61afa96643d43851f8ae6ae" translate="yes" xml:space="preserve">
          <source>The following table will help you determine what value you need to enter for the managed object type you want the attribute to apply to.</source>
          <target state="translated">次の表は、属性を適用させたい管理オブジェクトタイプに対して、どのような値を入力する必要があるかを決定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="72cd9838fe837abd92a4ed95eb0b5eec2ae87269" translate="yes" xml:space="preserve">
          <source>The following table will help you determine what values you need to enter for the associable type you want to associate with a tag category.</source>
          <target state="translated">次の表は、タグカテゴリに関連付けたい連想型にどのような値を入力する必要があるかを決定するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="653d6a96e01e52736ac6ac4896e32deef5c5fe92" translate="yes" xml:space="preserve">
          <source>The following, more-complex example retrieves only the metadata for a zip file stored in S3, which is then used to pass the most recent &lt;code&gt;version_id&lt;/code&gt; to AWS Lambda for use as a function implementation. More information about Lambda functions is available in the documentation for &lt;a href=&quot;../r/lambda_function&quot;&gt;&lt;code&gt;aws_lambda_function&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">次のより複雑な例では、S3に保存されたzipファイルのメタデータのみを取得します。これを使用して、最新の &lt;code&gt;version_id&lt;/code&gt; をAWS Lambda に渡し、関数の実装として使用します。Lambda関数の詳細については、&lt;a href=&quot;../r/lambda_function&quot;&gt; &lt;code&gt;aws_lambda_function&lt;/code&gt; &lt;/a&gt;のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="303c4546fca74dbb51250e6b1d995d00f1a47e75" translate="yes" xml:space="preserve">
          <source>The format of the configuration files are able to be in two formats: Terraform format and JSON. The Terraform format is more human-readable, supports comments, and is the generally recommended format for most Terraform files. The JSON format is meant for machines to create, modify, and update, but can also be done by Terraform operators if you prefer. Terraform format ends in &lt;code&gt;.tf&lt;/code&gt; and JSON format ends in &lt;code&gt;.tf.json&lt;/code&gt;.</source>
          <target state="translated">構成ファイルの形式は、Terraform形式とJSONの2つの形式にすることができます。Terraform形式はより人間が読める形式で、コメントをサポートしており、ほとんどのTerraformファイルで一般的に推奨されている形式です。JSON形式は、マシンが作成、変更、および更新するためのものですが、必要に応じてTerraformオペレーターでも実行できます。Terraform形式は &lt;code&gt;.tf&lt;/code&gt; で終わり、JSON形式は &lt;code&gt;.tf.json&lt;/code&gt; で終わります。</target>
        </trans-unit>
        <trans-unit id="434eff6d1efe64f915acb86ecf57cd65d5810815" translate="yes" xml:space="preserve">
          <source>The full list of settings that can be specified are listed on the &lt;a href=&quot;../provisioners/connection&quot;&gt;provisioner connection page&lt;/a&gt;.</source>
          <target state="translated">指定可能な設定の完全なリストは、&lt;a href=&quot;../provisioners/connection&quot;&gt;プロビジョナー接続ページに&lt;/a&gt;リストされています。</target>
        </trans-unit>
        <trans-unit id="530f43d060374c069c2e229a896d209bd69f057a" translate="yes" xml:space="preserve">
          <source>The full syntax is:</source>
          <target state="translated">完全な構文は</target>
        </trans-unit>
        <trans-unit id="c13beb9d6bfe9e71465e1275bbd12c9fa6841eed" translate="yes" xml:space="preserve">
          <source>The given URL may be either an &lt;code&gt;http&lt;/code&gt; or &lt;code&gt;https&lt;/code&gt; URL. At present this resource can only retrieve data from URLs that respond with &lt;code&gt;text/*&lt;/code&gt; or &lt;code&gt;application/json&lt;/code&gt; content types, and expects the result to be UTF-8 encoded regardless of the returned content type header.</source>
          <target state="translated">指定するURLは、 &lt;code&gt;http&lt;/code&gt; または &lt;code&gt;https&lt;/code&gt; のいずれかのURLです。現在、このリソースは &lt;code&gt;text/*&lt;/code&gt; または &lt;code&gt;application/json&lt;/code&gt; コンテンツタイプで応答するURLからのみデータを取得でき、返されるコンテンツタイプヘッダーに関係なく、結果がUTF-8でエンコードされることを期待しています。</target>
        </trans-unit>
        <trans-unit id="654fc45f0fee3249785e7513017238b34a6ebf47" translate="yes" xml:space="preserve">
          <source>The graph is outputted in DOT format. The typical program that can read this format is GraphViz, but many web services are also available to read this format.</source>
          <target state="translated">グラフはDOT形式で出力されます。この形式を読み込める代表的なプログラムはGraphVizですが、多くのWebサービスでもこの形式を読み込めるようになっています。</target>
        </trans-unit>
        <trans-unit id="35ce7fe0cfdd8a09787b6bca996be15896e6f24d" translate="yes" xml:space="preserve">
          <source>The guide also expects you to run the cluster on a cloud provider where Kubernetes can automatically provision a load balancer.</source>
          <target state="translated">また、ガイドでは、Kubernetesが自動的にロードバランサーをプロビジョニングできるクラウドプロバイダー上でクラスタを実行することを想定しています。</target>
        </trans-unit>
        <trans-unit id="f74fef07b1c46810962ec81b7de07761487446c8" translate="yes" xml:space="preserve">
          <source>The hostname portion of a module source string is first passed to &lt;a href=&quot;../internals/remote-service-discovery&quot;&gt;the service discovery protocol&lt;/a&gt; to determine if the given host has a module registry and, if so, the base URL for its module registry endpoints.</source>
          <target state="translated">モジュールのソース文字列のホスト名部分は、最初&lt;a href=&quot;../internals/remote-service-discovery&quot;&gt;にサービス検出プロトコル&lt;/a&gt;に渡され、指定されたホストにモジュールレジストリがあるかどうかが確認されます。ある場合は、そのモジュールレジストリエンドポイントのベースURLです。</target>
        </trans-unit>
        <trans-unit id="8e86a11053317275a21a2144cd25ed7bd9fb8174" translate="yes" xml:space="preserve">
          <source>The ignition provider is what we call a &lt;em&gt;logical provider&lt;/em&gt; and doesn't manage any &lt;em&gt;physical&lt;/em&gt; resources. It generates configurations files to be used by other resources.</source>
          <target state="translated">点火プロバイダーは、&lt;em&gt;論理プロバイダー&lt;/em&gt;と呼ばれるものであり、&lt;em&gt;物理&lt;/em&gt;リソースを管理しません。他のリソースが使用する構成ファイルを生成します。</target>
        </trans-unit>
        <trans-unit id="ddd2a3f257f06a28ff04be723f54a88aab54caf4" translate="yes" xml:space="preserve">
          <source>The images data source can be used to search for and return an existing image which can then be used to provision a server.</source>
          <target state="translated">画像データソースは、既存の画像を検索して返し、サーバーのプロビジョニングに使用することができます。</target>
        </trans-unit>
        <trans-unit id="249903da71fd048e126f3d952731c7863e81b41d" translate="yes" xml:space="preserve">
          <source>The important thing about workspace internals is that workspaces are meant to be a shared resource. They aren't a private, local-only notion (unless you're using purely local state and not committing it).</source>
          <target state="translated">ワークスペースの内部について重要なことは、ワークスペースは共有リソースであることを意味します。それらはプライベートでローカルだけの概念ではありません(純粋にローカルな状態を使用していてコミットしていない場合は別です)。</target>
        </trans-unit>
        <trans-unit id="9dd21c2b4565da645e14fee70e3a12586042f54b" translate="yes" xml:space="preserve">
          <source>The instance can be imported as such:</source>
          <target state="translated">インスタンスはこのようにインポートすることができます。</target>
        </trans-unit>
        <trans-unit id="4a6e1a62963235307c6be5b2cda78b57ef84df40" translate="yes" xml:space="preserve">
          <source>The integration with the Lambda function is not functional yet because API Gateway does not have the necessary access to invoke the function. The next step will address this, making the application fully-functional.</source>
          <target state="translated">Lambda関数との統合は、API Gatewayが関数を呼び出すために必要なアクセス権を持っていないため、まだ機能的ではありません。次のステップではこの問題に対処し、アプリケーションを完全に機能させます。</target>
        </trans-unit>
        <trans-unit id="2857b86c54298ed0d7c5f6c43937af65d2281cb8" translate="yes" xml:space="preserve">
          <source>The interface you must implement for providers is &lt;a href=&quot;https://github.com/hashicorp/terraform/blob/master/terraform/resource_provider.go&quot;&gt;ResourceProvider&lt;/a&gt;.</source>
          <target state="translated">プロバイダー用に実装する必要があるインターフェースは&lt;a href=&quot;https://github.com/hashicorp/terraform/blob/master/terraform/resource_provider.go&quot;&gt;ResourceProvider&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="e062709bf2f7ff90508038b1cd0418cd1c2e2e62" translate="yes" xml:space="preserve">
          <source>The interpolation syntax is powerful and allows you to reference variables, attributes of resources, call functions, etc.</source>
          <target state="translated">補間構文は強力で、変数やリソースの属性、関数の呼び出しなどを参照することができます。</target>
        </trans-unit>
        <trans-unit id="43ef2e8f06e2bc2686a7c9bb10886e1158340b86" translate="yes" xml:space="preserve">
          <source>The issue is addressed in a pull request or commit. The issue will be referenced in the commit message so that the code that fixes it is clearly linked.</source>
          <target state="translated">その問題はプルリクエストやコミットで対処されます。コミットメッセージでは、その問題を修正したコードが明確にリンクされるように、その問題が参照されます。</target>
        </trans-unit>
        <trans-unit id="49c30deae622330a741396530fe7d3a02ba6e2c6" translate="yes" xml:space="preserve">
          <source>The issue is closed. Sometimes, valid issues will be closed to keep the issue tracker clean. The issue is still indexed and available for future viewers, or can be re-opened if necessary.</source>
          <target state="translated">課題はクローズされています。有効な課題は、課題追跡をクリーンに保つためにクローズされることがあります。その課題はまだインデックス化されており、将来の閲覧に利用できますが、必要に応じて再オープンすることもできます。</target>
        </trans-unit>
        <trans-unit id="738e7a7b3c7b6e67d65c014bd5397bfeac5e9ac6" translate="yes" xml:space="preserve">
          <source>The issue is reported.</source>
          <target state="translated">問題が報告されています。</target>
        </trans-unit>
        <trans-unit id="3214f0eb498294eaff27ad7068ca7001219f7d4f" translate="yes" xml:space="preserve">
          <source>The issue is verified and categorized by a Terraform collaborator. Categorization is done via GitHub labels. We generally use a two-label system of (1) issue/PR type, and (2) section of the codebase. Type is usually &quot;bug&quot;, &quot;enhancement&quot;, &quot;documentation&quot;, or &quot;question&quot;, and section can be any of the providers or provisioners or &quot;core&quot;.</source>
          <target state="translated">この問題はTerraformの協力者によって検証され、分類されています。分類はGitHubのラベルを使って行います。一般的には、(1)課題/PRのタイプ、(2)コードベースのセクションの2つのラベルシステムを使用します。タイプは通常、「バグ」、「エンハンスメント」、「ドキュメント」、「質問」のいずれかで、セクションはプロバイダやプロビジョナー、または「コア」のいずれかになります。</target>
        </trans-unit>
        <trans-unit id="a233c42ed98cf216e5673a77c10fc4b0f8927077" translate="yes" xml:space="preserve">
          <source>The job resource allows Rundeck jobs to be managed by Terraform. In Rundeck a job is a particular named set of steps that can be executed against one or more of the nodes configured for its associated project.</source>
          <target state="translated">ジョブリソースを使用することで、Rundeck のジョブを Terraform で管理することができます。Rundeck では、ジョブとは、関連するプロジェクトに設定された 1 つ以上のノードに対して実行される、特定の名前のついたステップのセットのことです。</target>
        </trans-unit>
        <trans-unit id="c42f74afe9ce6581b7c27227ea43d5f46d97caae" translate="yes" xml:space="preserve">
          <source>The key material is hashed before it is stored in the state file, so sharing the resulting state will not disclose the private key contents.</source>
          <target state="translated">鍵素材は状態ファイルに格納される前にハッシュ化されているため、結果として得られた状態を共有しても秘密鍵の内容は公開されません。</target>
        </trans-unit>
        <trans-unit id="50a776c074781f7b637d6d51d48c2bdddd1d2ecc" translate="yes" xml:space="preserve">
          <source>The key material is included inline as a string, which is consistent with the way a public key is provided to the &lt;code&gt;aws_key_pair&lt;/code&gt;, &lt;code&gt;cloudstack_ssh_keypair&lt;/code&gt;, &lt;code&gt;digitalocean_ssh_key&lt;/code&gt; and &lt;code&gt;openstack_compute_keypair_v2&lt;/code&gt; resources. This means the &lt;code&gt;key_material&lt;/code&gt; argument can be populated from the interpolation of the &lt;code&gt;public_key&lt;/code&gt; attribute of such a keypair resource, or vice-versa.</source>
          <target state="translated">鍵のマテリアルは文字列としてインラインで含まれます。これは、公開鍵が &lt;code&gt;aws_key_pair&lt;/code&gt; 、 &lt;code&gt;cloudstack_ssh_keypair&lt;/code&gt; 、 &lt;code&gt;digitalocean_ssh_key&lt;/code&gt; および &lt;code&gt;openstack_compute_keypair_v2&lt;/code&gt; リソースに提供される方法と一致しています。つまり、 &lt;code&gt;key_material&lt;/code&gt; 引数には、そのような &lt;code&gt;public_key&lt;/code&gt; リソースのpublic_key属性の補間から、またはその逆を入力できます。</target>
        </trans-unit>
        <trans-unit id="0251621ae3a738396f6951e6412ebbece005e3b6" translate="yes" xml:space="preserve">
          <source>The key part of this message is the first two lines that involve &lt;code&gt;hashicorp/terraform&lt;/code&gt;. In this example:</source>
          <target state="translated">このメッセージの重要な部分は、 &lt;code&gt;hashicorp/terraform&lt;/code&gt; が関係する最初の2行です。この例では：</target>
        </trans-unit>
        <trans-unit id="8975679ccedb2c52f1ea4fd1eea80454ab51e06a" translate="yes" xml:space="preserve">
          <source>The layout now looks like this:</source>
          <target state="translated">今のレイアウトはこんな感じです。</target>
        </trans-unit>
        <trans-unit id="3ecc51adf7310b745e2c403498ea5da851f18073" translate="yes" xml:space="preserve">
          <source>The lifecycle_rule expiration object supports the following:</source>
          <target state="translated">lifecycle_rule expirationオブジェクトは、以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="529d7fae35f00954ada89a255888b2cd1aad1f93" translate="yes" xml:space="preserve">
          <source>The lifecycle_rule object supports the following:</source>
          <target state="translated">lifecycle_ruleオブジェクトは以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="02aaf89638cf6541d6514128cb6ed7f2db5710a6" translate="yes" xml:space="preserve">
          <source>The list below contains all the requirements for publishing a module. Meeting the requirements for publishing a module is extremely easy. The list may appear long only to ensure we're detailed, but adhering to the requirements should happen naturally.</source>
          <target state="translated">以下のリストには、モジュールを発行するためのすべての要件が含まれています。モジュールを公開するための要件を満たすのは非常に簡単です。このリストは、私たちが詳細を確認するためだけに長く見えるかもしれませんが、要件を順守することは自然に起こるはずです。</target>
        </trans-unit>
        <trans-unit id="5fd50c9898aa530791c401d5419be0343ea7c036" translate="yes" xml:space="preserve">
          <source>The list of strings supported for &lt;code&gt;logging&lt;/code&gt; are as follows:</source>
          <target state="translated">&lt;code&gt;logging&lt;/code&gt; サポートされる文字列のリストは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="dec2ced318aadb7436da9eea643801dd6ed1b49e" translate="yes" xml:space="preserve">
          <source>The listener mapping supports the following:</source>
          <target state="translated">リスナーマッピングは以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="1923dca1a9b8d52edf080f0543dd9d807dd6dbcb" translate="yes" xml:space="preserve">
          <source>The local backend stores state on the local filesystem, locks that state using system APIs, and performs operations locally.</source>
          <target state="translated">ローカルバックエンドは、ローカルファイルシステム上に状態を保存し、システムAPIを使用してその状態をロックし、ローカルで操作を実行します。</target>
        </trans-unit>
        <trans-unit id="e0144994733e338a4121a54021ec355e0f53aeeb" translate="yes" xml:space="preserve">
          <source>The locations data source can be used to search for and return an existing location which can then be used elsewhere in the configuration.</source>
          <target state="translated">ロケーションデータソースを使用して、既存のロケーションを検索して返すことができ、そのロケーションは設定の他の場所で使用することができます。</target>
        </trans-unit>
        <trans-unit id="5f78703858fb8c51a1216fb83d0b02ed063bcaa0" translate="yes" xml:space="preserve">
          <source>The log store is a unit in Log Service to collect, store, and query the log data. Each log store belongs to a project, and each project can create multiple Logstores. &lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/48874.htm&quot;&gt;Refer to details&lt;/a&gt;</source>
          <target state="translated">ログストアは、ログデータを収集、保存、およびクエリするためのログサービスのユニットです。各ログストアはプロジェクトに属しており、各プロジェクトは複数のログストアを作成できます。&lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/48874.htm&quot;&gt;詳細を参照&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="129bc1bbb8a41edc7745c57d8f96be2546bbc279" translate="yes" xml:space="preserve">
          <source>The logging object supports the following:</source>
          <target state="translated">ロギングオブジェクトは以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="2ed398cc031022323ce58df7fdbb2b3c7c103dd7" translate="yes" xml:space="preserve">
          <source>The main object in any Kubernetes application is &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/pods/pod/#what-is-a-pod&quot;&gt;a Pod&lt;/a&gt;. Pod consists of one or more containers that are placed on cluster nodes based on CPU or memory availability.</source>
          <target state="translated">Kubernetesアプリケーションの主なオブジェクトは&lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/pods/pod/#what-is-a-pod&quot;&gt;ポッド&lt;/a&gt;です。ポッドは、CPUまたはメモリの可用性に基づいてクラスターノードに配置される1つ以上のコンテナーで構成されます。</target>
        </trans-unit>
        <trans-unit id="3446535f7b6b081885a7b6c2a76fe579e177ba4a" translate="yes" xml:space="preserve">
          <source>The majority of acceptance tests will only invoke &lt;code&gt;resource.Test()&lt;/code&gt; and exit. If at any point this method encounters an error, either in executing the provided Terraform configurations or subsequent developer defined checks, &lt;code&gt;Test()&lt;/code&gt; will invoke the &lt;code&gt;t.Error&lt;/code&gt; method of Go&amp;rsquo;s standard testing framework and the test will fail. A failed test will not halt or otherwise interrupt any other tests currently running.</source>
          <target state="translated">受け入れテストの大部分は、 &lt;code&gt;resource.Test()&lt;/code&gt; を呼び出して終了するだけです。提供されたTerraform構成または後続の開発者定義のチェックの実行中にこのメソッドでエラーが発生した場合、 &lt;code&gt;Test()&lt;/code&gt; はGoの標準テストフレームワークの &lt;code&gt;t.Error&lt;/code&gt; メソッドを呼び出し、テストは失敗します。失敗したテストは、現在実行中の他のテストを停止したりその他の方法で中断したりすることはありません。</target>
        </trans-unit>
        <trans-unit id="1b2e0c22eab85ee257fb35f5de1e9c98185f7a18" translate="yes" xml:space="preserve">
          <source>The market (purchasing) option for the instances.</source>
          <target state="translated">インスタンスの市場(購入)オプション。</target>
        </trans-unit>
        <trans-unit id="7579373102a294cf7bbf46fb86c90598638832e8" translate="yes" xml:space="preserve">
          <source>The modules are downloaded into a local &lt;code&gt;.terraform&lt;/code&gt; folder. This folder should not be committed to version control. The &lt;code&gt;.terraform&lt;/code&gt; folder is created relative to your current working directory regardless of the &lt;code&gt;dir&lt;/code&gt; argument given to this command.</source>
          <target state="translated">モジュールはローカルの &lt;code&gt;.terraform&lt;/code&gt; フォルダーにダウンロードされます。このフォルダーは、バージョン管理にコミットしないでください。 &lt;code&gt;.terraform&lt;/code&gt; のフォルダは関係なく、あなたの現在の作業ディレクトリからの相対に作成された &lt;code&gt;dir&lt;/code&gt; このコマンドに与えられた引数。</target>
        </trans-unit>
        <trans-unit id="94c15d469c680f19a5562e9f2179f5df808f12a7" translate="yes" xml:space="preserve">
          <source>The modules in The Terraform Registry are provided and maintained by trusted HashiCorp partners and the Terraform Community. If you run into issues using a module or have additional contributions to make, you can find a link to the Module's GitHub issues on the module page.</source>
          <target state="translated">The Terraform Registryのモジュールは、信頼できるHashiCorpパートナーとTerraformコミュニティによって提供・管理されています。モジュールを使用して問題が発生した場合や、追加の貢献が必要な場合は、モジュールページにあるモジュールのGitHubの問題へのリンクを参照してください。</target>
        </trans-unit>
        <trans-unit id="17b09953747e143d19e75493eb8c46bfe264b707" translate="yes" xml:space="preserve">
          <source>The most common use of this datasource will be to fetch information about the instances inside regional managed instance groups, for instance:</source>
          <target state="translated">このデータソースの最も一般的な使用法は、例えば、地域管理されたインスタンスグループ内のインスタンスに関する情報を取得することです。</target>
        </trans-unit>
        <trans-unit id="28f448289fb00b97fc7a26fc8e30f206926bd7f9" translate="yes" xml:space="preserve">
          <source>The most important thing you'll configure with Terraform are resources. Resources are a component of your infrastructure. It might be some low level component such as a physical server, virtual machine, or container. Or it can be a higher level component such as an email provider, DNS record, or database provider.</source>
          <target state="translated">Terraformで設定する最も重要なものは、リソースです。リソースはインフラストラクチャのコンポーネントです。リソースは、物理サーバ、仮想マシン、コンテナなどの低レベルのコンポーネントです。また、電子メールプロバイダ、DNSレコード、データベースプロバイダなどの高レベルのコンポーネントである場合もあります。</target>
        </trans-unit>
        <trans-unit id="de4e48002ee0066f3714936d49635283b6a0744d" translate="yes" xml:space="preserve">
          <source>The most interesting part of a crash log is the panic message itself and the backtrace immediately following. So the first thing to do is to search the file for &lt;code&gt;panic:&lt;/code&gt;, which should jump you right to this message. It will look something like this:</source>
          <target state="translated">クラッシュログの最も興味深い部分は、パニックメッセージ自体と直後のバックトレースです。したがって、最初に行うことは、ファイルで &lt;code&gt;panic:&lt;/code&gt; を検索することです。これにより、このメッセージに直接ジャンプします。次のようになります。</target>
        </trans-unit>
        <trans-unit id="928f6722738c31385fa1133a6ea2bf2a1b12ea2e" translate="yes" xml:space="preserve">
          <source>The name &quot;example&quot; here is local to the module where it is declared and is chosen by the configuration author. This is distinct from any ID issued by the remote system, which may change over time while the resource name remains constant.</source>
          <target state="translated">ここでの &quot;example &quot;という名前は、それが宣言されているモジュールのローカルなものであり、設定作者によって選択されます。これはリモートシステムが発行したIDとは区別され、リソース名が一定である間は時間の経過とともに変化する可能性があります。</target>
        </trans-unit>
        <trans-unit id="79a7ad80bc825f25a0a23e7bce6b8bb10767b0c7" translate="yes" xml:space="preserve">
          <source>The name &lt;code&gt;MyPlugin&lt;/code&gt; is a placeholder for the struct type that represents your plugin's implementation. This must implement either &lt;code&gt;terraform.ResourceProvider&lt;/code&gt; or &lt;code&gt;terraform.ResourceProvisioner&lt;/code&gt;, depending on the plugin type.</source>
          <target state="translated">&lt;code&gt;MyPlugin&lt;/code&gt; という名前は、プラグインの実装を表す構造体タイプのプレースホルダーです。これは、プラグインのタイプに応じて、 &lt;code&gt;terraform.ResourceProvider&lt;/code&gt; または &lt;code&gt;terraform.ResourceProvisioner&lt;/code&gt; を実装する必要があります。</target>
        </trans-unit>
        <trans-unit id="56545e63a44dd8500c3c7fe4107e9227329b2388" translate="yes" xml:space="preserve">
          <source>The name given in the block header is used to assign a value to the variable via the CLI and to reference the variable elsewhere in the configuration.</source>
          <target state="translated">ブロックヘッダで指定された名前は、CLI経由で変数に値を代入したり、設定の他の場所で変数を参照したりするために使用されます。</target>
        </trans-unit>
        <trans-unit id="31be2ede75dd592cf6f38d5c80b7d476b8490279" translate="yes" xml:space="preserve">
          <source>The name given in the block header is used to reference the particular module instance from expressions within the calling module, and to refer to the module on the command line. It has no meaning outside of a particular Terraform configuration.</source>
          <target state="translated">ブロックヘッダーで指定された名前は、呼び出し元のモジュール内の式から特定のモジュールインスタンスを参照したり、コマンドライン上でモジュールを参照したりするために使用されます。特定のTerraformコンフィギュレーション以外では意味を持ちません。</target>
        </trans-unit>
        <trans-unit id="4eb98c118afdb31f49799cb5f5db9a88199e7246" translate="yes" xml:space="preserve">
          <source>The name of a variable can be any valid identifier. However, due to the interpretation of &lt;a href=&quot;modules&quot;&gt;module configuration blocks&lt;/a&gt;, the names &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;providers&lt;/code&gt; are reserved for Terraform's own use and are thus not recommended for any module intended to be used as a child module.</source>
          <target state="translated">変数の名前には、任意の有効な識別子を使用できます。ただし、&lt;a href=&quot;modules&quot;&gt;モジュール構成ブロックの&lt;/a&gt;解釈により、 &lt;code&gt;source&lt;/code&gt; 、 &lt;code&gt;version&lt;/code&gt; 、および &lt;code&gt;providers&lt;/code&gt; 名前はTerraform自身の使用のために予約されているため、子モジュールとして使用することを目的としたモジュールには推奨されません。</target>
        </trans-unit>
        <trans-unit id="6de4212a0fef8d79702e034a65daab108e75fe7b" translate="yes" xml:space="preserve">
          <source>The names given for the items in the &lt;code&gt;locals&lt;/code&gt; block must be unique throughout a module. The given value can be any expression that is valid within the current module.</source>
          <target state="translated">&lt;code&gt;locals&lt;/code&gt; ブロックの項目に付ける名前は、モジュール全体で一意である必要があります。指定する値は、現在のモジュール内で有効な任意の式にすることができます。</target>
        </trans-unit>
        <trans-unit id="cf67c3f0c3f6047846f02a235eb51781aa12b9ea" translate="yes" xml:space="preserve">
          <source>The naming scheme for plugins is &lt;code&gt;terraform-&amp;lt;type&amp;gt;-NAME_vX.Y.Z&lt;/code&gt;, where &lt;code&gt;type&lt;/code&gt; is either &lt;code&gt;provider&lt;/code&gt; or &lt;code&gt;provisioner&lt;/code&gt;. Terraform uses the &lt;code&gt;NAME&lt;/code&gt; to understand the name and version of a particular provider binary. Third-party plugins will often be distributed with an appropriate filename already set in the distribution archive so that it can be extracted directly into the plugin directory described above.</source>
          <target state="translated">プラグインの命名体系は &lt;code&gt;terraform-&amp;lt;type&amp;gt;-NAME_vX.Y.Z&lt;/code&gt; で、 &lt;code&gt;type&lt;/code&gt; は &lt;code&gt;provider&lt;/code&gt; または &lt;code&gt;provisioner&lt;/code&gt; のいずれかです。 Terraformは &lt;code&gt;NAME&lt;/code&gt; を使用して、特定のプロバイダーバイナリの名前とバージョンを理解します。サードパーティのプラグインは、上記のプラグインディレクトリに直接抽出できるように、配布アーカイブにすでに設定されている適切なファイル名で配布されることがよくあります。</target>
        </trans-unit>
        <trans-unit id="5ef0fd21456695ef859be530a5b9af0f5e0c01c7" translate="yes" xml:space="preserve">
          <source>The naming scheme for provider plugins is &lt;code&gt;terraform-provider-NAME_vX.Y.Z&lt;/code&gt;, and Terraform uses the name to understand the name and version of a particular provider binary. Third-party plugins will often be distributed with an appropriate filename already set in the distribution archive so that it can be extracted directly into the plugin directory described above.</source>
          <target state="translated">プロバイダープラグインの命名方式は &lt;code&gt;terraform-provider-NAME_vX.Y.Z&lt;/code&gt; であり、Terraformはその名前を使用して特定のプロバイダーバイナリの名前とバージョンを理解します。サードパーティのプラグインは、上記のプラグインディレクトリに直接抽出できるように、配布アーカイブにすでに設定されている適切なファイル名で配布されることがよくあります。</target>
        </trans-unit>
        <trans-unit id="ff5e90cec09883bccdd581e277d0830a3a61dd42" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;assume_role&lt;/code&gt; block supports the following:</source>
          <target state="translated">ネストされた &lt;code&gt;assume_role&lt;/code&gt; ブロックは以下をサポートします：</target>
        </trans-unit>
        <trans-unit id="6e09943a91fd9264dd19b19b1b9931bd1cbd8591" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;conditional_format&lt;/code&gt; blocks has the following structure:</source>
          <target state="translated">ネストされた &lt;code&gt;conditional_format&lt;/code&gt; ブロックの構造は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="062270a238bb0aa649147f385f8ed22c871ed52f" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;style&lt;/code&gt; block is used specifically for styling &lt;code&gt;hostmap&lt;/code&gt; graphs, and has the following structure:</source>
          <target state="translated">ネストされた &lt;code&gt;style&lt;/code&gt; ブロックは、特に &lt;code&gt;hostmap&lt;/code&gt; グラフのスタイル設定に使用され、次の構造を持っています。</target>
        </trans-unit>
        <trans-unit id="42db5b1031c86fe9c2a26b1c9d53a1cbf437904e" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;style&lt;/code&gt; blocks has the following structure:</source>
          <target state="translated">ネストされた &lt;code&gt;style&lt;/code&gt; ブロックの構造は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="d4df467f89d417d197fd73609d85ff89009a0d7c" translate="yes" xml:space="preserve">
          <source>The nested &lt;code&gt;subject&lt;/code&gt; block accepts the following arguments, all optional, with their meaning corresponding to the similarly-named attributes defined in &lt;a href=&quot;https://tools.ietf.org/html/rfc5280#section-4.1.2.4&quot;&gt;RFC5290&lt;/a&gt;:</source>
          <target state="translated">ネストされた &lt;code&gt;subject&lt;/code&gt; ブロックは、次の引数を受け入れます。これらはすべてオプションであり、その意味は&lt;a href=&quot;https://tools.ietf.org/html/rfc5280#section-4.1.2.4&quot;&gt;RFC5290で&lt;/a&gt;定義されている同様の名前の属性に対応しています。</target>
        </trans-unit>
        <trans-unit id="8b3099b7975a9ecbb2b998ceeb522c2834e66102" translate="yes" xml:space="preserve">
          <source>The number of CPU cores to allocate.</source>
          <target state="translated">割り当てるCPUコア数。</target>
        </trans-unit>
        <trans-unit id="4eca29f8862904f547687dc029f850569a25941c" translate="yes" xml:space="preserve">
          <source>The numeric ID can be found in the URL when editing a record on the dnsimple web dashboard.</source>
          <target state="translated">数字のIDは、dnsimpleのWebダッシュボードでレコードを編集する際のURLに記載されています。</target>
        </trans-unit>
        <trans-unit id="e27793ac17882963b113812625074e8e3dfb3196" translate="yes" xml:space="preserve">
          <source>The official Terraform Provisioners are included in the Terraform Core codebase and are compiled into the &lt;code&gt;terraform&lt;/code&gt; binary. While they are built in, Provisioners are still executed in a separate process over RPC, and benefit from the same discovery process as Terraform Providers, making custom Provisioners just as easy to create and use.</source>
          <target state="translated">公式テラフォームプロビジョナーは、テラフォームコアのコードベースに含まれているとにコンパイルされている &lt;code&gt;terraform&lt;/code&gt; バイナリ。プロビジョナーは組み込まれていますが、RPCでは別のプロセスで実行され、Terraformプロバイダーと同じ検出プロセスの恩恵を受けて、カスタムプロビジョナーの作成と使用が簡単になります。</target>
        </trans-unit>
        <trans-unit id="1556d56d58468a73f7487b88c61c833dc200f2f6" translate="yes" xml:space="preserve">
          <source>The only attribute exported is &lt;code&gt;id&lt;/code&gt;, which is the name of the datacenter.</source>
          <target state="translated">エクスポートされる唯一の属性は &lt;code&gt;id&lt;/code&gt; で、これはデータセンターの名前です。</target>
        </trans-unit>
        <trans-unit id="d3d5b0d5143c0401de1738c2724c8a9784240c68" translate="yes" xml:space="preserve">
          <source>The only attribute that is exported for this resource is the &lt;code&gt;id&lt;/code&gt;, which is the uniform resource name (URN) of this tag category.</source>
          <target state="translated">このリソースにエクスポートされる唯一の属性は &lt;code&gt;id&lt;/code&gt; です。これは、このタグカテゴリの統一リソース名（URN）です。</target>
        </trans-unit>
        <trans-unit id="312daa28c2fb1c62596294241f648ae65e68571e" translate="yes" xml:space="preserve">
          <source>The only attribute that is exported for this resource is the &lt;code&gt;id&lt;/code&gt;, which is the uniform resource name (URN) of this tag.</source>
          <target state="translated">このリソースにエクスポートされる唯一の属性は &lt;code&gt;id&lt;/code&gt; です。これは、このタグの統一リソース名（URN）です。</target>
        </trans-unit>
        <trans-unit id="fee3170950e911955baa43e28e276d2bfc1a0b76" translate="yes" xml:space="preserve">
          <source>The only attribute that this resource exports is the &lt;code&gt;id&lt;/code&gt;, which is set to the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object ID&lt;/a&gt; of the folder.</source>
          <target state="translated">このリソースがエクスポートする唯一の属性は &lt;code&gt;id&lt;/code&gt; で、これはフォルダーの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理対象オブジェクトID&lt;/a&gt;に設定されます。</target>
        </trans-unit>
        <trans-unit id="fa4d4da1f9af0bc0fba1c377183b655edb8f31e0" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the UUID of the virtual machine. This is used to look up the override on subsequent plan and apply operations after the override has been created.</source>
          <target state="translated">このリソースがエクスポートする属性は、リソースの &lt;code&gt;id&lt;/code&gt; のみです。これは、クラスターの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理対象オブジェクト参照ID&lt;/a&gt;と仮想マシンのUUIDの組み合わせです。これは、後続のプランでオーバーライドを検索し、オーバーライドが作成された後に操作を適用するために使用されます。</target>
        </trans-unit>
        <trans-unit id="5e469db8b0df29cc3c879a37851c0411c885897b" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the managed object reference ID of the host. This is used to look up the override on subsequent plan and apply operations after the override has been created.</source>
          <target state="translated">これだけリソースの輸出である属性 &lt;code&gt;id&lt;/code&gt; の組合せであるリソースの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理オブジェクト参照ID&lt;/a&gt;クラスタの、ホストの管理オブジェクトの参照ID。これは、後続のプランでオーバーライドを検索し、オーバーライドが作成された後に操作を適用するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c9ed88833fe80f6dbf0c35038353becbf7fd3ad1" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the name of the host group.</source>
          <target state="translated">このリソースがエクスポートする唯一の属性は、リソースの &lt;code&gt;id&lt;/code&gt; です。これは、クラスターの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理オブジェクト参照ID&lt;/a&gt;とホストグループの名前の組み合わせです。</target>
        </trans-unit>
        <trans-unit id="21f51e9df9117a2887dca663b1ab3de7adc28ad2" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the name of the virtual machine group.</source>
          <target state="translated">これだけリソースの輸出である属性 &lt;code&gt;id&lt;/code&gt; の組合せであるリソースの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理オブジェクト参照ID&lt;/a&gt;クラスタの、仮想マシンのグループの名前。</target>
        </trans-unit>
        <trans-unit id="2954a1f4eb75911d3d8775972b56c11b1ee7f7ac" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the cluster, and the rule's key within the cluster configuration.</source>
          <target state="translated">このリソースがエクスポートする唯一の属性は、リソースの &lt;code&gt;id&lt;/code&gt; です。これは、クラスターの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理対象オブジェクト参照ID&lt;/a&gt;と、クラスター構成内のルールのキーの組み合わせです。</target>
        </trans-unit>
        <trans-unit id="84473d82c6684e8649990bc6a62ff145709c2cca" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is a combination of the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the datastore cluster, and the UUID of the virtual machine. This is used to look up the override on subsequent plan and apply operations after the override has been created.</source>
          <target state="translated">このリソースがエクスポートする属性は、リソースの &lt;code&gt;id&lt;/code&gt; のみです。これは、データストアクラスタの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理対象オブジェクト参照ID&lt;/a&gt;と仮想マシンのUUIDの組み合わせです。これは、後続のプランでオーバーライドを検索し、オーバーライドが作成された後に操作を適用するために使用されます。</target>
        </trans-unit>
        <trans-unit id="4834f8ec660c0a5a7a34eba4d25ce3e4dd5456a1" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the &lt;code&gt;id&lt;/code&gt; of the resource, which is the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object ID&lt;/a&gt; of the resource pool.</source>
          <target state="translated">これだけの資源輸出がある属性の &lt;code&gt;id&lt;/code&gt; でリソースの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理オブジェクトID&lt;/a&gt;リソースプールの。</target>
        </trans-unit>
        <trans-unit id="d27bdeb2be7feac5b5f84e4edf1c112dd1f05651" translate="yes" xml:space="preserve">
          <source>The only attribute this resource exports is the resource &lt;code&gt;id&lt;/code&gt;, which is set to the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the snapshot.</source>
          <target state="translated">このリソースがエクスポートする唯一の属性は、スナップショットの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理対象オブジェクト参照ID&lt;/a&gt;に設定されるリソース &lt;code&gt;id&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="2325afc18258ec605218745a304816f5664e154e" translate="yes" xml:space="preserve">
          <source>The only computed attribute that is exported by this resource is the resource &lt;code&gt;id&lt;/code&gt;, which is the the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object reference ID&lt;/a&gt; of the datastore cluster.</source>
          <target state="translated">このリソースによってエクスポートされる唯一の計算された属性は、リソースのある &lt;code&gt;id&lt;/code&gt; であり、&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理オブジェクト参照ID&lt;/a&gt;データストアクラスタの。</target>
        </trans-unit>
        <trans-unit id="7f3180e39e4ec734ddc9a47e044ade8cc2edb3cb" translate="yes" xml:space="preserve">
          <source>The only exported attribute is &lt;code&gt;id&lt;/code&gt;, which is the &lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;managed object ID&lt;/a&gt; of this datacenter.</source>
          <target state="translated">エクスポートされる属性は &lt;code&gt;id&lt;/code&gt; のみです。これは、このデータセンターの&lt;a href=&quot;../index#use-of-managed-object-references-by-the-vsphere-provider&quot;&gt;管理対象オブジェクトID&lt;/a&gt;です。</target>
        </trans-unit>
        <trans-unit id="83e1fef11dbab56640fa24b0f523d3950deb7389" translate="yes" xml:space="preserve">
          <source>The only exported attribute, other than the attributes above, is the &lt;code&gt;id&lt;/code&gt; of the resource. This is set to an ID value unique to Terraform - the convention is a prefix, the host system ID, and the virtual switch name. An example would be &lt;code&gt;tf-HostVirtualSwitch:host-10:vSwitchTerraformTest&lt;/code&gt;.</source>
          <target state="translated">上記の属性以外にエクスポートされる属性は、リソースの &lt;code&gt;id&lt;/code&gt; です。これは、Terraformに固有のID値に設定されます-規則は、プレフィックス、ホストシステムID、および仮想スイッチ名です。たとえば、 &lt;code&gt;tf-HostVirtualSwitch:host-10:vSwitchTerraformTest&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="acfad46b33256bc2bdcb354a67f96d02c34c1664" translate="yes" xml:space="preserve">
          <source>The only limitation Terraform has when reading the configuration files is that the import provider configurations must not depend on non-variable inputs. For example, a provider configuration cannot depend on a data source.</source>
          <target state="translated">Terraformが設定ファイルを読み込む際の唯一の制限は、インポート・プロバイダ設定が非可変入力に依存してはならないということです。例えば、プロバイダ設定はデータソースに依存することはできません。</target>
        </trans-unit>
        <trans-unit id="6c9abccc6021a61297ebff0d736d77395e2d6aa7" translate="yes" xml:space="preserve">
          <source>The only required configuration key for a module is the &lt;code&gt;source&lt;/code&gt; parameter. The value of this tells Terraform where to download the module's source code. Terraform comes with support for a variety of module sources.</source>
          <target state="translated">モジュールに必要な唯一の構成キーは、 &lt;code&gt;source&lt;/code&gt; パラメーターです。この値は、モジュールのソースコードをダウンロードする場所をTerraformに指示します。Terraformは、さまざまなモジュールソースをサポートしています。</target>
        </trans-unit>
        <trans-unit id="6ec22cd6b0426a766240ee89f3806a361db2adf5" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;-out&lt;/code&gt; argument can be used to save the generated plan to a file for later execution with &lt;code&gt;terraform apply&lt;/code&gt;, which can be useful when &lt;a href=&quot;https://www.terraform.io/guides/running-terraform-in-automation.html&quot;&gt;running Terraform in automation&lt;/a&gt;.</source>
          <target state="translated">オプションの &lt;code&gt;-out&lt;/code&gt; 引数を使用して、生成されたプランを後で &lt;code&gt;terraform apply&lt;/code&gt; で実行するためにファイルに保存できます。これは、&lt;a href=&quot;https://www.terraform.io/guides/running-terraform-in-automation.html&quot;&gt;Terraformをオートメーションで実行&lt;/a&gt;するときに役立ちます。</target>
        </trans-unit>
        <trans-unit id="58bc6a76b489df1f104c82a9ab5159dd813ec1e3" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;push_config&lt;/code&gt; block supports:</source>
          <target state="translated">オプションの &lt;code&gt;push_config&lt;/code&gt; ブロックは以下をサポートします：</target>
        </trans-unit>
        <trans-unit id="e8b5879fe61a4fb8c10d24a1d29c742e26acce9f" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;replica_configuration&lt;/code&gt; block must have &lt;code&gt;master_instance_name&lt;/code&gt; set to work, cannot be updated, and supports:</source>
          <target state="translated">オプションの &lt;code&gt;replica_configuration&lt;/code&gt; ブロックでは、 &lt;code&gt;master_instance_name&lt;/code&gt; が機能するように設定する必要があり、更新できません。また、以下をサポートします。</target>
        </trans-unit>
        <trans-unit id="249a427528b66214de097a8aae90566ade798dfe" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.backup_configuration&lt;/code&gt; subblock supports:</source>
          <target state="translated">オプションの &lt;code&gt;settings.backup_configuration&lt;/code&gt; サブブロックは以下をサポートします：</target>
        </trans-unit>
        <trans-unit id="5059a9d8f668d5aa8c7e47416ccc4673b82bc868" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.database_flags&lt;/code&gt; sublist supports:</source>
          <target state="translated">オプションの &lt;code&gt;settings.database_flags&lt;/code&gt; サブリストは以下をサポートします：</target>
        </trans-unit>
        <trans-unit id="31a08aa49b68cbb66446edd433da05821b69a621" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.ip_configuration.authorized_networks[]&lt;/code&gt; sublist supports:</source>
          <target state="translated">オプションの &lt;code&gt;settings.ip_configuration.authorized_networks[]&lt;/code&gt; サブリストは以下をサポートします：</target>
        </trans-unit>
        <trans-unit id="4fb103b6a114b9e3145874539b552ddf95444ba2" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.ip_configuration&lt;/code&gt; subblock supports:</source>
          <target state="translated">オプションの &lt;code&gt;settings.ip_configuration&lt;/code&gt; サブブロックは以下をサポートします：</target>
        </trans-unit>
        <trans-unit id="85de0977018849899f94fc33537a76c125978490" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.location_preference&lt;/code&gt; subblock supports:</source>
          <target state="translated">オプションの &lt;code&gt;settings.location_preference&lt;/code&gt; サブブロックは以下をサポートします：</target>
        </trans-unit>
        <trans-unit id="fc4b8f4e9892ff649625023b246097949cd696d6" translate="yes" xml:space="preserve">
          <source>The optional &lt;code&gt;settings.maintenance_window&lt;/code&gt; subblock for Second Generation instances declares a one-hour &lt;a href=&quot;https://cloud.google.com/sql/docs/instance-settings?hl=en#maintenance-window-2ndgen&quot;&gt;maintenance window&lt;/a&gt; when an Instance can automatically restart to apply updates. The maintenance window is specified in UTC time. It supports:</source>
          <target state="translated">第2世代インスタンスのオプションの &lt;code&gt;settings.maintenance_window&lt;/code&gt; サブブロックは、インスタンスが自動的に再起動して更新を適用できる場合の1時間の&lt;a href=&quot;https://cloud.google.com/sql/docs/instance-settings?hl=en#maintenance-window-2ndgen&quot;&gt;メンテナンスウィンドウを&lt;/a&gt;宣言します。メンテナンスウィンドウはUTC時間で指定されます。それはサポートします：</target>
        </trans-unit>
        <trans-unit id="dbc030680dac1e5576f7a0a32beac02271b1de9f" translate="yes" xml:space="preserve">
          <source>The options are:</source>
          <target state="translated">オプションは</target>
        </trans-unit>
        <trans-unit id="51ff3189a9a5d187ac3ef56b283fe0c56d2b7d96" translate="yes" xml:space="preserve">
          <source>The options available in the &lt;code&gt;clone&lt;/code&gt; sub-resource are:</source>
          <target state="translated">&lt;code&gt;clone&lt;/code&gt; サブリソースで使用できるオプションは次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a748e7c83da404be3c268d6d7b16ab81db5e9fe5" translate="yes" xml:space="preserve">
          <source>The order of variables, resources, etc. defined within the configuration doesn't matter. Terraform configurations are &lt;a href=&quot;https://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;declarative&lt;/a&gt;, so references to other resources and variables do not depend on the order they're defined.</source>
          <target state="translated">構成内で定義される変数、リソースなどの順序は重要ではありません。Terraform構成は&lt;a href=&quot;https://en.wikipedia.org/wiki/Declarative_programming&quot;&gt;宣言型&lt;/a&gt;であるため、他のリソースや変数への参照は、それらが定義されている順序に依存しません。</target>
        </trans-unit>
        <trans-unit id="cfa4b62d40fa14e9f09ba94bf85c205be674ca72" translate="yes" xml:space="preserve">
          <source>The other way is &lt;strong&gt;statically&lt;/strong&gt; define all the credentials:</source>
          <target state="translated">もう1つの方法は、すべての資格情報を&lt;strong&gt;静的に&lt;/strong&gt;定義することです。</target>
        </trans-unit>
        <trans-unit id="ed451b44b2aa66edc4131c3c48aaae03e4530a4c" translate="yes" xml:space="preserve">
          <source>The output (similar to below) will display one or more Subscriptions - with the &lt;code&gt;id&lt;/code&gt; field being the &lt;code&gt;subscription_id&lt;/code&gt; field referenced above.</source>
          <target state="translated">出力（以下と同様）は1つ以上のサブスクリプションを表示します &lt;code&gt;id&lt;/code&gt; フィールドは上記で参照された &lt;code&gt;subscription_id&lt;/code&gt; フィールドです。</target>
        </trans-unit>
        <trans-unit id="d588725043553b0804c9af3ed178795281530e29" translate="yes" xml:space="preserve">
          <source>The output (similar to below) will display one or more Subscriptions - with the &lt;code&gt;id&lt;/code&gt; field being the Subscription ID.</source>
          <target state="translated">出力（以下と同様）には、1つ以上のサブスクリプションが表示されます &lt;code&gt;id&lt;/code&gt; フィールドはサブスクリプションIDです。</target>
        </trans-unit>
        <trans-unit id="9d2e29e672de46f8b28a8ec8ec8fc3e72b0336a8" translate="yes" xml:space="preserve">
          <source>The output and command-line structure of the state subcommands is designed to be easy to use with Unix command-line tools such as grep, awk, etc. Consequently, the output is also friendly to the equivalent PowerShell commands within Windows.</source>
          <target state="translated">state サブコマンドの出力とコマンドラインの構造は、grep や awk などの Unix コマンドラインツールで使いやすいように設計されています。その結果、出力はWindows内の同等のPowerShellコマンドにも対応しています。</target>
        </trans-unit>
        <trans-unit id="e6014d9c6544c0a9a8758fc75e0f61845439ab13" translate="yes" xml:space="preserve">
          <source>The output name (&lt;code&gt;-o&lt;/code&gt;) is &lt;strong&gt;very important&lt;/strong&gt;. Terraform searches for plugins in the format of:</source>
          <target state="translated">出力名（ &lt;code&gt;-o&lt;/code&gt; ）は&lt;strong&gt;非常に重要&lt;/strong&gt;です。Terraformは、次の形式でプラグインを検索します。</target>
        </trans-unit>
        <trans-unit id="0fc89cbf1629a892facf41da7e603146a4c98757" translate="yes" xml:space="preserve">
          <source>The output of &lt;code&gt;terraform graph&lt;/code&gt; is in the DOT format, which can easily be converted to an image by making use of &lt;code&gt;dot&lt;/code&gt; provided by GraphViz:</source>
          <target state="translated">&lt;code&gt;terraform graph&lt;/code&gt; の出力はDOT形式であり、GraphVizが提供する &lt;code&gt;dot&lt;/code&gt; を利用することで簡単に画像に変換できます。</target>
        </trans-unit>
        <trans-unit id="e0c46a01a045c66c50c17c208268e6b54051e5a6" translate="yes" xml:space="preserve">
          <source>The panos provider has support for PAN-OS 6.1 - 8.1.</source>
          <target state="translated">panosプロバイダはPAN-OS 6.1~8.1に対応しています。</target>
        </trans-unit>
        <trans-unit id="1d1cc1a935ae2526a39eed980a3f38ddb375069b" translate="yes" xml:space="preserve">
          <source>The parameter to provider configuration as well as all the CRUD operations on a resource is a &lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema#ResourceData&quot;&gt;schema.ResourceData&lt;/a&gt;. This structure is used to query configurations as well as to set information about the resource such as its ID, connection information, and computed attributes.</source>
          <target state="translated">プロバイダー構成のパラメーター、およびリソースに対するすべてのCRUD操作は&lt;a href=&quot;https://godoc.org/github.com/hashicorp/terraform/helper/schema#ResourceData&quot;&gt;schema.ResourceData&lt;/a&gt;です。この構造は、構成を照会するため、およびID、接続情報、計算された属性などのリソースに関する情報を設定するために使用されます。</target>
        </trans-unit>
        <trans-unit id="1afe64cf4d990d49b72928f43c8aac7384c71023" translate="yes" xml:space="preserve">
          <source>The path for migrating to the current version of this resource is very similar to the &lt;a href=&quot;#importing&quot;&gt;import&lt;/a&gt; path, with the exception that the &lt;code&gt;terraform
import&lt;/code&gt; command does not need to be run. See that section for details on what is required before you run &lt;code&gt;terraform plan&lt;/code&gt; on a state that requires migration.</source>
          <target state="translated">このリソースの現在のバージョンに移行するためのパスは、 &lt;code&gt;terraform import&lt;/code&gt; コマンドを実行する必要がないことを除いて、&lt;a href=&quot;#importing&quot;&gt;インポート&lt;/a&gt;パスと非常に似ています。移行が必要な状態で &lt;code&gt;terraform plan&lt;/code&gt; を実行する前に必要なものの詳細については、そのセクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="4575314a96edfd12da07f085152902ad6de2f378" translate="yes" xml:space="preserve">
          <source>The path to the &lt;code&gt;kernel&lt;/code&gt; and &lt;code&gt;initrd&lt;/code&gt; files must exist before creating a Distro. Usually this involves running &lt;code&gt;cobbler import ...&lt;/code&gt; prior to creating the Distro.</source>
          <target state="translated">&lt;code&gt;kernel&lt;/code&gt; と &lt;code&gt;initrd&lt;/code&gt; ファイルへのパスは、Distroを作成する前に存在している必要があります。通常、これにはDistroを作成する前に &lt;code&gt;cobbler import ...&lt;/code&gt; を実行する必要があります。</target>
        </trans-unit>
        <trans-unit id="d520b0749b08897f9c2d672a4be4e51c392aa075" translate="yes" xml:space="preserve">
          <source>The permissions attribute specifies how you want to share the document. If you share a document privately, you must specify the AWS user account IDs for those people who can use the document. If you share a document publicly, you must specify All as the account ID.</source>
          <target state="translated">permissions属性は、ドキュメントをどのように共有するかを指定します。ドキュメントを非公開で共有する場合は、そのドキュメントを利用できる人のAWSユーザーアカウントIDを指定する必要があります。ドキュメントを公開で共有する場合は、アカウントIDにAllを指定する必要があります。</target>
        </trans-unit>
        <trans-unit id="ec8e4c09f12d61a1d1015f2884bde227f757a585" translate="yes" xml:space="preserve">
          <source>The permissions mapping supports the following:</source>
          <target state="translated">パーミッションマッピングは以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="e7f4b89d61a89407379cf97e740dcc03cab35e96" translate="yes" xml:space="preserve">
          <source>The persistent data stored in the backend belongs to a &lt;em&gt;workspace&lt;/em&gt;. Initially the backend has only one workspace, called &quot;default&quot;, and thus there is only one Terraform state associated with that configuration.</source>
          <target state="translated">バックエンドに保存されている永続データは&lt;em&gt;ワークスペースに&lt;/em&gt;属してい&lt;em&gt;ます&lt;/em&gt;。最初、バックエンドには「デフォルト」と呼ばれるワークスペースが1つしかないため、その構成に関連付けられているTerraform状態は1つだけです。</target>
        </trans-unit>
        <trans-unit id="e6cb03036adc2e64069dcc494b9e217cd8df414d" translate="yes" xml:space="preserve">
          <source>The plan will provide you an overview of planned changes, in this case we should see 2 resources (Pod + Service) being added. This commands gets more useful as your infrastructure grows and becomes more complex with more components depending on each other and it's especially helpful during updates.</source>
          <target state="translated">計画では、計画されている変更の概要が表示されます。この場合、2つのリソース(Pod+Service)が追加されていることがわかります。このコマンドは、インフラストラクチャが成長し、より多くのコンポーネントが相互に依存して複雑になるほど便利になります。</target>
        </trans-unit>
        <trans-unit id="68816edf930ccb57f26274aba975948fef4bb223" translate="yes" xml:space="preserve">
          <source>The plugin cache directory must &lt;em&gt;not&lt;/em&gt; be the third-party plugin directory or any other directory Terraform searches for pre-installed plugins, since the cache management logic conflicts with the normal plugin discovery logic when operating on the same directory.</source>
          <target state="translated">プラグインキャッシュディレクトリは、サードパーティのプラグインディレクトリや、Terraformがプリインストールされたプラグインを検索する他のディレクトリであって&lt;em&gt;は&lt;/em&gt;なりませ&lt;em&gt;ん&lt;/em&gt;。同じディレクトリで操作すると、キャッシュ管理ロジックが通常のプラグイン検出ロジックと競合するためです。</target>
        </trans-unit>
        <trans-unit id="b63c3ea31fcc4cd16fce7a52cebc4575c3214e2d" translate="yes" xml:space="preserve">
          <source>The pre-0.7 interface for reading keys is still supported for backward compatibility, but will be removed in a future version of Terraform.</source>
          <target state="translated">0.7以前のキーを読むためのインターフェイスは後方互換性のためにサポートされていますが、将来のTerraformのバージョンでは削除される予定です。</target>
        </trans-unit>
        <trans-unit id="b59fb6580dc0df9768191cd440b9ad48a5e24a68" translate="yes" xml:space="preserve">
          <source>The prefix &lt;code&gt;sat&lt;/code&gt; stands for &quot;Source Address Translation&quot; while the prefix &quot;dat&quot; stands for &quot;Destination Address Translation&quot;. The order of the params in this resource and their naming matches how the params are presented in the GUI. Thus, having a GUI window open while creating your resource definition will simplify the process.</source>
          <target state="translated">プレフィックス &lt;code&gt;sat&lt;/code&gt; は「Source Address Translation」を表し、プレフィックス「dat」は「Destination Address Translation」を表します。このリソースのパラメーターの順序と名前は、GUIでのパラメーターの表示方法と一致します。したがって、リソース定義の作成中にGUIウィンドウを開いておくと、プロセスが簡単になります。</target>
        </trans-unit>
        <trans-unit id="42c4706910f3f55bfb33832e0a7fedb2a48bed61" translate="yes" xml:space="preserve">
          <source>The pricing group for the Redis Family - either &quot;C&quot; or &quot;P&quot; at present.</source>
          <target state="translated">Redisファミリーの価格設定グループ-現時点では「C」か「P」のどちらか。</target>
        </trans-unit>
        <trans-unit id="bfb5b6473a0c6f43168a0a97b72eb9356008d21e" translate="yes" xml:space="preserve">
          <source>The primary reasons to care about provider plugins are:</source>
          <target state="translated">プロバイダープラグインを気にする第一の理由は</target>
        </trans-unit>
        <trans-unit id="667dbf02ef55685260d28cd72906a793d10b506f" translate="yes" xml:space="preserve">
          <source>The primary responsibilities of Provider Plugins are:</source>
          <target state="translated">プロバイダープラグインの主な役割は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="097e3a9c39c048cb0f0e6727025342cf769633c3" translate="yes" xml:space="preserve">
          <source>The primary responsibilities of Provisioner Plugins are:</source>
          <target state="translated">Provisioner プラグインの主な役割は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="9e2d6937d4846a3131f3bf89b36642ef7f40815a" translate="yes" xml:space="preserve">
          <source>The primary responsibilities of Terraform Core are:</source>
          <target state="translated">Terraform Coreの主な業務は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="1a534c955a7e1003bb232fd7b185a808729ee439" translate="yes" xml:space="preserve">
          <source>The primary use case for this is to target a specific configuration of a provider that is configured multiple times to support multiple regions, etc.</source>
          <target state="translated">主なユースケースは、複数の地域などに対応するために複数回設定されているプロバイダの特定の設定を対象としています。</target>
        </trans-unit>
        <trans-unit id="0a4b5ac19afc0a13601cd4a12bf0e08034fe7e63" translate="yes" xml:space="preserve">
          <source>The primary use case of explicit &lt;code&gt;depends_on&lt;/code&gt; is to depend on a &lt;em&gt;side effect&lt;/em&gt; of another operation. For example: if a provisioner creates a file, and your resource reads that file, then there is no interpolation reference for Terraform to automatically connect the two resources. However, there is a causal ordering that needs to be represented. This is an ideal case for &lt;code&gt;depends_on&lt;/code&gt;. In most cases, however, &lt;code&gt;depends_on&lt;/code&gt; should be avoided and Terraform should be allowed to determine dependencies automatically.</source>
          <target state="translated">明示的な &lt;code&gt;depends_on&lt;/code&gt; の主な使用例は、別の操作の&lt;em&gt;副作用&lt;/em&gt;に依存することです。たとえば、プロビジョニング担当者がファイルを作成し、リソースがそのファイルを読み取る場合、Terraformが2つのリソースを自動的に接続するための補間参照はありません。ただし、表現する必要のある因果関係があります。これは、 &lt;code&gt;depends_on&lt;/code&gt; の理想的なケースです。ただし、ほとんどの場合、 &lt;code&gt;depends_on&lt;/code&gt; は回避し、Terraformは依存関係を自動的に決定できるようにする必要があります。</target>
        </trans-unit>
        <trans-unit id="226e6e503866796657a5a53ab6cf8fd37391c0ae" translate="yes" xml:space="preserve">
          <source>The primary use-case for the null data source is to gather together collections of intermediate values to re-use elsewhere in configuration:</source>
          <target state="translated">nullデータソースの主な使用例は、中間値のコレクションを集めて、設定の他の場所で再利用することです。</target>
        </trans-unit>
        <trans-unit id="9959b72b58ceafc11da23c2feca2f860526d0400" translate="yes" xml:space="preserve">
          <source>The primary use-case for the null resource is as a do-nothing container for arbitrary actions taken by a provisioner, as follows:</source>
          <target state="translated">nullリソースの主なユースケースは、以下のようにプロビジョナーによって行われる任意のアクションのためのdo-nothingコンテナです。</target>
        </trans-unit>
        <trans-unit id="694678941495e993c84ef66a6345f14c3ea03d12" translate="yes" xml:space="preserve">
          <source>The private key resource allows SSH private keys to be stored into Rundeck's key store. The key store is where Rundeck keeps credentials that are needed to access the nodes on which it runs commands.</source>
          <target state="translated">秘密鍵リソースは SSH の秘密鍵を Rundeck の鍵ストアに保存することができます。鍵ストアは Rundeck がコマンドを実行しているノードにアクセスするために必要な認証情報を保存する場所です。</target>
        </trans-unit>
        <trans-unit id="6038058131a34e5104ef309958c511c1764b183e" translate="yes" xml:space="preserve">
          <source>The procedure for writing unit tests for Terraform follows the same setup and conventions of writing any Go unit tests. We recommend naming tests to follow the same convention as our acceptance tests, &lt;code&gt;Test&amp;lt;Provider&amp;gt;_&amp;lt;Test Name&amp;gt;&lt;/code&gt;. For more information on Go tests, see the &lt;a href=&quot;https://golang.org/pkg/testing/&quot;&gt;official Golang docs on testing&lt;/a&gt;.</source>
          <target state="translated">Terraformの単体テストを作成する手順は、Go単体テストを作成する場合と同じ設定と規則に従います。テストの命名には、受け入れテストと同じ規則である &lt;code&gt;Test&amp;lt;Provider&amp;gt;_&amp;lt;Test Name&amp;gt;&lt;/code&gt; に従うことをお勧めします。Goテストの詳細については、テストに関する&lt;a href=&quot;https://golang.org/pkg/testing/&quot;&gt;Golang&lt;/a&gt;の公式ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="a11fb23142d1b60f52abe84d76cab5e64ac0fdd1" translate="yes" xml:space="preserve">
          <source>The program must read all of the data passed to it on &lt;code&gt;stdin&lt;/code&gt;, and parse it as a JSON object. The JSON object contains the contents of the &lt;code&gt;query&lt;/code&gt; argument and its values will always be strings.</source>
          <target state="translated">プログラムは、 &lt;code&gt;stdin&lt;/code&gt; で渡されたすべてのデータを読み取り、JSONオブジェクトとして解析する必要があります。JSONオブジェクトには &lt;code&gt;query&lt;/code&gt; 引数の内容が含まれ、その値は常に文字列になります。</target>
        </trans-unit>
        <trans-unit id="4fe10fc158085d9f06b8c7e57fba52e2eca03c5a" translate="yes" xml:space="preserve">
          <source>The program must then produce a valid JSON object on &lt;code&gt;stdout&lt;/code&gt;, which will be used to populate the &lt;code&gt;result&lt;/code&gt; attribute exported to the rest of the Terraform configuration. This JSON object must again have all of its values as strings. On successful completion it must exit with status zero.</source>
          <target state="translated">次に、プログラムは &lt;code&gt;stdout&lt;/code&gt; に有効なJSONオブジェクトを生成する必要があります。これは、Terraformの残りの構成にエクスポートされる &lt;code&gt;result&lt;/code&gt; 属性を設定するために使用されます。このJSONオブジェクトも、すべての値を文字列として持つ必要があります。正常に完了すると、ステータス0で終了する必要があります。</target>
        </trans-unit>
        <trans-unit id="79f88033ff99ce3c46d53e00af0cf741c02c3a2b" translate="yes" xml:space="preserve">
          <source>The project is the resource management unit in Log Service and is used to isolate and control resources. You can manage all the logs and the related log sources of an application by using projects. &lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/48873.htm&quot;&gt;Refer to details&lt;/a&gt;.</source>
          <target state="translated">プロジェクトはログサービスのリソース管理ユニットであり、リソースの分離と制御に使用されます。プロジェクトを使用して、アプリケーションのすべてのログと関連するログソースを管理できます。&lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/48873.htm&quot;&gt;詳細をご参照ください&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="ac44782d2aaac0d542371743750d7cb3fde255bc" translate="yes" xml:space="preserve">
          <source>The project resource allows Rundeck projects to be managed by Terraform. In Rundeck a project is the container object for a set of jobs and the configuration for which servers those jobs can be run on.</source>
          <target state="translated">プロジェクトリソースを使うと、Rundeck のプロジェクトを Terraform で管理することができます。Rundeck ではプロジェクトはジョブのコンテナオブジェクトであり、それらのジョブを実行できるサーバーの設定を行います。</target>
        </trans-unit>
        <trans-unit id="e936168fb6c61ab3e2ed49ffc053a0fea95b9ee7" translate="yes" xml:space="preserve">
          <source>The provider allows you to manage your GitHub organization's members and teams easily. It needs to be configured with the proper credentials before it can be used.</source>
          <target state="translated">このプロバイダを使うと、GitHub 組織のメンバーやチームを簡単に管理することができます。使用するには、適切な認証情報を設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="eb0afdc8397584ed61f21c7162d6af6f720784f1" translate="yes" xml:space="preserve">
          <source>The provider also can accept both signed and self-signed server certificates. It is recommended that in production environments you only use certificates signed by a certificate authority. NSX ships by default with a self-signed server certificates as the hostname of the NSX manager is not known until the NSX administrator determines what name or IP to use.</source>
          <target state="translated">プロバイダは、署名されたサーバ証明書と自己署名されたサーバ証明書の両方を受け入れることもできます。本番環境では、証明書局が署名した証明書のみを使用することをお勧めします。NSX 管理者が使用する名前または IP を決定するまで、NSX マネージャのホスト名がわからないため、NSX はデフォルトで自己署名サーバー証明書を使用して出荷されます。</target>
        </trans-unit>
        <trans-unit id="8a4462204fd5e7f593e57b6b7f6d4134a1092cf7" translate="yes" xml:space="preserve">
          <source>The provider also provides session persistence options that can be configured below. These can help when using Terraform in a way where session limits could be normally reached by creating a new session for every run, such as a large amount of concurrent or consecutive Terraform runs in a short period of time.</source>
          <target state="translated">プロバイダは、以下のようなセッション永続化オプションも提供しています。短期間に大量の同時実行や連続したTerraformの実行など、通常は実行ごとに新しいセッションを作成してセッションを制限する必要がありますが、Terraformを使用する際には、これらのオプションを使用すると便利です。</target>
        </trans-unit>
        <trans-unit id="d723071a6a878c856c9ea6102ca48dd56a052eb1" translate="yes" xml:space="preserve">
          <source>The provider always first tries to load &lt;strong&gt;a config file&lt;/strong&gt; from a given (or default) location. Depending on whether you have current context set this &lt;em&gt;may&lt;/em&gt; require &lt;code&gt;config_context_auth_info&lt;/code&gt; and/or &lt;code&gt;config_context_cluster&lt;/code&gt; and/or &lt;code&gt;config_context&lt;/code&gt;.</source>
          <target state="translated">プロバイダーは常に最初に、指定された（またはデフォルトの）場所から&lt;strong&gt;設定ファイル&lt;/strong&gt;をロードしようとします。あなたが持っているかどうかに応じて、現在のコンテキストでは、これが設定され&lt;em&gt;て&lt;/em&gt;必要 &lt;code&gt;config_context_auth_info&lt;/code&gt; および/または &lt;code&gt;config_context_cluster&lt;/code&gt; および/または &lt;code&gt;config_context&lt;/code&gt; を。</target>
        </trans-unit>
        <trans-unit id="8f520b502cdef356a4cd0baa0706d2b9feccdc42" translate="yes" xml:space="preserve">
          <source>The provider configuration block accepts the following arguments. In most cases it is recommended to set them via the indicated environment variables in order to keep credential information out of the configuration.</source>
          <target state="translated">プロバイダ設定ブロックは、以下の引数を受け付けます。ほとんどの場合、クレデンシャル情報を設定から除外するために、指定された環境変数を介してこれらを設定することを推奨します。</target>
        </trans-unit>
        <trans-unit id="f13a32ac5ab352856dffd8c23208a35c617a4624" translate="yes" xml:space="preserve">
          <source>The provider configuration block accepts the following arguments:</source>
          <target state="translated">プロバイダ設定ブロックは、以下の引数を受け付けます。</target>
        </trans-unit>
        <trans-unit id="e9d628d0a66c8987f02a6ca1ec6296ce5dd7aad3" translate="yes" xml:space="preserve">
          <source>The provider needs to be configured with proper credentials before it can be used.</source>
          <target state="translated">プロバイダは、使用する前に適切なクレデンシャルで設定する必要があります。</target>
        </trans-unit>
        <trans-unit id="aef6dca3afdbb69306c0e9c0a5ba14967ee31273" translate="yes" xml:space="preserve">
          <source>The providers listed below have been built by the community of Terraform users and vendors. These providers are not tested nor officially maintained by HashiCorp, and are listed here in order to help users find them easily.</source>
          <target state="translated">以下のプロバイダは、Terraformユーザーとベンダーのコミュニティによって構築されたものです。これらのプロバイダは、HashiCorpによってテストされたものでも、公式にメンテナンスされたものでもありません。</target>
        </trans-unit>
        <trans-unit id="5694d656ec378bffed4566c74a330e5bc6920805" translate="yes" xml:space="preserve">
          <source>The public key resource allows SSH public keys to be stored into Rundeck's key store. The key store is where Rundeck keeps credentials that are needed to access the nodes on which it runs commands.</source>
          <target state="translated">公開鍵リソースは SSH の公開鍵を Rundeck の鍵ストアに保存することを可能にします。鍵ストアは Rundeck がコマンドを実行しているノードにアクセスするために必要な認証情報を保存する場所です。</target>
        </trans-unit>
        <trans-unit id="1b33c40c93c482ddd224c5d2073c0e198cf95988" translate="yes" xml:space="preserve">
          <source>The reason Terraform uploads all of these files is because Terraform cannot know what is and isn't being used for provisioning, so it uploads all the files to be safe. To exclude certain files, specify the &lt;code&gt;-exclude&lt;/code&gt; flag when pushing, or specify the &lt;code&gt;exclude&lt;/code&gt; parameter in the &lt;a href=&quot;https://www.terraform.io/docs/configuration/terraform-enterprise.html&quot;&gt;Terraform Enterprise configuration section&lt;/a&gt;.</source>
          <target state="translated">Terraformがこれらのすべてのファイルをアップロードする理由は、Terraformが何がプロビジョニングに使用されているか、何が使用されていないかを認識できないため、安全のためにすべてのファイルをアップロードします。特定のファイルを除外するには、プッシュ時に &lt;code&gt;-exclude&lt;/code&gt; フラグを指定するか、&lt;a href=&quot;https://www.terraform.io/docs/configuration/terraform-enterprise.html&quot;&gt;Terraform Enterprise構成セクション&lt;/a&gt;で &lt;code&gt;exclude&lt;/code&gt; パラメーターを指定します。</target>
        </trans-unit>
        <trans-unit id="35dcbfb998b5a8818f159b523c9d32f7a1f7d5f2" translate="yes" xml:space="preserve">
          <source>The reference of available configuration options is listed below. The only required argument is the path to your local salt state tree.</source>
          <target state="translated">利用可能な設定オプションのリファレンスを以下に示します。必須の引数は、ローカルのソルトステートツリーへのパスのみです。</target>
        </trans-unit>
        <trans-unit id="3560925a2909e73b2c25d851fc659a435a368495" translate="yes" xml:space="preserve">
          <source>The reference page for each resource type provides full details on all of its supported arguments and exported attributes.</source>
          <target state="translated">各リソースタイプのリファレンスページには、サポートされているすべての引数とエクスポートされた属性の詳細が記載されています。</target>
        </trans-unit>
        <trans-unit id="fd467dad3f4a11ec58a5868c81a96280950b60e3" translate="yes" xml:space="preserve">
          <source>The referenced &lt;code&gt;task-definitions/service.json&lt;/code&gt; file contains a valid JSON document, which is shown below, and its content is going to be passed directly into the &lt;code&gt;container_definitions&lt;/code&gt; attribute as a string. Please note that this example contains only a small subset of the available parameters.</source>
          <target state="translated">参照されている &lt;code&gt;task-definitions/service.json&lt;/code&gt; ファイルには、以下に示す有効なJSONドキュメントが含まれており、そのコンテンツは、 &lt;code&gt;container_definitions&lt;/code&gt; 属性に文字列として直接渡されます。この例には、使用可能なパラメーターのごく一部しか含まれていないことに注意してください。</target>
        </trans-unit>
        <trans-unit id="5205128994ff951e3c3ea3680891b20530702266" translate="yes" xml:space="preserve">
          <source>The referer configuration supports the following:</source>
          <target state="translated">リファラ構成は以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="b121667aa5e7129f6a22ecad532b62dfc5b9bac8" translate="yes" xml:space="preserve">
          <source>The registry at &lt;a href=&quot;https://registry.terraform.io&quot;&gt;registry.terraform.io&lt;/a&gt; only hosts public modules, but most organizations have some modules that can't, shouldn't, or don't need to be public.</source>
          <target state="translated">registry.terraform.ioの&lt;a href=&quot;https://registry.terraform.io&quot;&gt;レジストリ&lt;/a&gt;はパブリックモジュールのみをホストしますが、ほとんどの組織には、パブリックにすることができない、またはすべきでない、またはパブリックにする必要がないモジュールがあります。</target>
        </trans-unit>
        <trans-unit id="3c93e24b06bf5eecbf550934e28e589ac1667866" translate="yes" xml:space="preserve">
          <source>The registry extracts information about the module from the module's source. The module name, provider, documentation, inputs/outputs, and dependencies are all parsed and available via the UI or API, as well as the same information for any submodules or examples in the module's source repository.</source>
          <target state="translated">レジストリは、モジュールのソースからモジュールに関する情報を抽出します。モジュール名、プロバイダ、ドキュメント、入出力、依存関係はすべて解析され、UIやAPIを介して利用できます。</target>
        </trans-unit>
        <trans-unit id="77e9b0d58328b6841e51dbd2fb9687047a5e500b" translate="yes" xml:space="preserve">
          <source>The registry is integrated directly into Terraform. You can reference any registry module with a source string of &lt;code&gt;&amp;lt;NAMESPACE&amp;gt;/&amp;lt;NAME&amp;gt;/&amp;lt;PROVIDER&amp;gt;&lt;/code&gt;. Each module's information page on the registry includes its source string.</source>
          <target state="translated">レジストリはTerraformに直接統合されています。 &lt;code&gt;&amp;lt;NAMESPACE&amp;gt;/&amp;lt;NAME&amp;gt;/&amp;lt;PROVIDER&amp;gt;&lt;/code&gt; のソース文字列で任意のレジストリモジュールを参照できます。レジストリの各モジュールの情報ページには、ソース文字列が含まれています。</target>
        </trans-unit>
        <trans-unit id="b65ea9a67ceb8e232d6ae1a9c8712ff195d6ed61" translate="yes" xml:space="preserve">
          <source>The repository and the team must both belong to the same organization on Github. This resource does not actually &lt;em&gt;create&lt;/em&gt; any repositories; to do that, see &lt;a href=&quot;repository&quot;&gt;&lt;code&gt;github_repository&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">リポジトリとチームはどちらもGithubの同じ組織に属している必要があります。このリソースは実際にはリポジトリを&lt;em&gt;作成&lt;/em&gt;しません。これを行うには、&lt;a href=&quot;repository&quot;&gt; &lt;code&gt;github_repository&lt;/code&gt; を&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="af1d0c9b44a8a683db5148894ff04d0d0bb4629f" translate="yes" xml:space="preserve">
          <source>The requested token TTL can be controlled by the &lt;code&gt;max_lease_ttl_seconds&lt;/code&gt; provider argument described below. It is important to consider that Terraform reads from data sources during the &lt;code&gt;plan&lt;/code&gt; phase and writes the result into the plan. Thus a subsequent &lt;code&gt;apply&lt;/code&gt; will likely fail if it is run after the intermediate token has expired, due to the revocation of the secrets that are stored in the plan.</source>
          <target state="translated">要求されたトークンTTLは、以下で説明する &lt;code&gt;max_lease_ttl_seconds&lt;/code&gt; プロバイダー引数によって制御できます。Terraformは、 &lt;code&gt;plan&lt;/code&gt; フェーズ中にデータソースから読み取り、結果を計画に書き込むことを考慮することが重要です。したがって、プランに格納されているシークレットが失効しているため、中間トークンの有効期限が切れた後に実行 &lt;code&gt;apply&lt;/code&gt; と、その後の適用が失敗する可能性があります。</target>
        </trans-unit>
        <trans-unit id="92f8fef81db2e52580d79343a6dfb7e9094d54fd" translate="yes" xml:space="preserve">
          <source>The required &lt;code&gt;settings&lt;/code&gt; block supports:</source>
          <target state="translated">必要な &lt;code&gt;settings&lt;/code&gt; ブロックは以下をサポートします：</target>
        </trans-unit>
        <trans-unit id="182902ef4e99fd12f4f0991bfd856b087f29c481" translate="yes" xml:space="preserve">
          <source>The required arguments for this resource vary depending on the type of data source selected (via the &lt;code&gt;type&lt;/code&gt; argument). The following example is for InfluxDB. See &lt;a href=&quot;http://docs.grafana.org/#data-sources-guides&quot;&gt;Grafana's &lt;em&gt;Data Sources Guides&lt;/em&gt;&lt;/a&gt; for more details on the supported data source types and the arguments they use.</source>
          <target state="translated">このリソースに必要な引数は、（ &lt;code&gt;type&lt;/code&gt; 引数を介して）選択されたデータソースのタイプによって異なります。次の例はInfluxDBの例です。参照&lt;a href=&quot;http://docs.grafana.org/#data-sources-guides&quot;&gt;Grafanaの&lt;em&gt;データソースのガイド&lt;/em&gt;&lt;/a&gt;サポートされているデータソースの種類とそれらが使用する引数の詳細については。</target>
        </trans-unit>
        <trans-unit id="83b176312f93d7ae49a92ef2348a49aee543b674" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_id&lt;/code&gt; generates random numbers that are intended to be used as unique identifiers for other resources.</source>
          <target state="translated">リソース &lt;code&gt;random_id&lt;/code&gt; は、他のリソースの一意の識別子として使用することを目的とした乱数を生成します。</target>
        </trans-unit>
        <trans-unit id="f8fc05571867a20bcadd1f705c6d651d8942a91e" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_integer&lt;/code&gt; generates random values from a given range, described by the &lt;code&gt;min&lt;/code&gt; and &lt;code&gt;max&lt;/code&gt; attributes of a given resource.</source>
          <target state="translated">リソース &lt;code&gt;random_integer&lt;/code&gt; は、特定のリソースの &lt;code&gt;min&lt;/code&gt; および &lt;code&gt;max&lt;/code&gt; 属性によって記述される、特定の範囲からランダムな値を生成します。</target>
        </trans-unit>
        <trans-unit id="2bac9eb6573c22694c870a5b3160c45c61d8ea58" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_pet&lt;/code&gt; generates random pet names that are intended to be used as unique identifiers for other resources.</source>
          <target state="translated">リソース &lt;code&gt;random_pet&lt;/code&gt; は、他のリソースの一意の識別子として使用することを目的としたランダムなペット名を生成します。</target>
        </trans-unit>
        <trans-unit id="c308501b869dea4cb73bd69f291d591b50ece9c8" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_shuffle&lt;/code&gt; generates a random permutation of a list of strings given as an argument.</source>
          <target state="translated">リソース &lt;code&gt;random_shuffle&lt;/code&gt; は、引数として指定された文字列のリストのランダムな順列を生成します。</target>
        </trans-unit>
        <trans-unit id="a41f9a72893dae03f955e72cc21c70032685328a" translate="yes" xml:space="preserve">
          <source>The resource &lt;code&gt;random_string&lt;/code&gt; generates a random permutation of alphanumeric characters and optionally special characters.</source>
          <target state="translated">リソース &lt;code&gt;random_string&lt;/code&gt; は、英数字およびオプションで特殊文字のランダムな順列を生成します。</target>
        </trans-unit>
        <trans-unit id="cea9c0e3691edd4b5a9eb12fad635e530cd60aa4" translate="yes" xml:space="preserve">
          <source>The resource data source can be used to search for and return any existing ProfitBricks resource and optionally their group associations. You can provide a string for the resource type (datacenter,image,snapshot,ipblock) and/or resource id parameters which will be queries against available resources. If a single match is found, it will be returned. If your search results in multiple matches, an error will be generated. When this happens, please refine your search string so that it is specific enough to return only one result.</source>
          <target state="translated">リソースデータソースは、既存の ProfitBricks リソースと、オプションでそれらのグループ関連付けを検索して返すために使用することができます。リソースタイプ(datacenter,image,snapshot,ipblock)および/または利用可能なリソースに対するクエリーとなるリソースIDパラメータに文字列を指定することができる。一致するものが 1 つ見つかった場合は、それが返されます。検索結果が複数一致した場合は、エラーが発生します。このような場合は、検索文字列を絞り込んで、1つの結果のみを返すようにしてください。</target>
        </trans-unit>
        <trans-unit id="1c165b06c52be4015c45a4c620c66d1b5e352c96" translate="yes" xml:space="preserve">
          <source>The resource exports the following attributes:</source>
          <target state="translated">リソースは以下の属性をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="b972b4448fbc97410056f122025d768f3a2c367f" translate="yes" xml:space="preserve">
          <source>The resource makes use of the following data sources to do its job: &lt;a href=&quot;../d/datacenter&quot;&gt;&lt;code&gt;vsphere_datacenter&lt;/code&gt;&lt;/a&gt; to locate the datacenter, &lt;a href=&quot;../d/datastore&quot;&gt;&lt;code&gt;vsphere_datastore&lt;/code&gt;&lt;/a&gt; to locate the default datastore to put the virtual machine in, &lt;a href=&quot;../d/resource_pool&quot;&gt;&lt;code&gt;vsphere_resource_pool&lt;/code&gt;&lt;/a&gt; to locate a resource pool located in a cluster or standalone host, and &lt;a href=&quot;../d/network&quot;&gt;&lt;code&gt;vsphere_network&lt;/code&gt;&lt;/a&gt; to locate a network.</source>
          <target state="translated">リソースは、次のデータソースを使用してジョブを&lt;a href=&quot;../d/datacenter&quot;&gt; &lt;code&gt;vsphere_datacenter&lt;/code&gt; &lt;/a&gt;します。vsphere_datacenterはデータセンターを検索し、&lt;a href=&quot;../d/datastore&quot;&gt; &lt;code&gt;vsphere_datastore&lt;/code&gt; &lt;/a&gt;は仮想マシンを配置するデフォルトのデータストアを検索し、&lt;a href=&quot;../d/resource_pool&quot;&gt; &lt;code&gt;vsphere_resource_pool&lt;/code&gt; &lt;/a&gt;はクラスターまたはスタンドアロンホストにあるリソースプールを検索し、&lt;a href=&quot;../d/network&quot;&gt; &lt;code&gt;vsphere_network&lt;/code&gt; &lt;/a&gt;はネットワークを探します。</target>
        </trans-unit>
        <trans-unit id="7163d4ee81058e1dd81255b0a5b50bd283cb03c4" translate="yes" xml:space="preserve">
          <source>The resource provides a piece of networked storage in the cluster provisioned by an administrator. It is a resource in the cluster just like a node is a cluster resource. Persistent Volumes have a lifecycle independent of any individual pod that uses the PV.</source>
          <target state="translated">リソースは、管理者によってプロビジョニングされたクラスタ内のネットワーク化されたストレージの一部を提供します。ノードがクラスタリソースであるのと同様に、クラスタ内のリソースです。Persistent Volumesは、PVを使用する個々のポッドから独立したライフサイクルを持ちます。</target>
        </trans-unit>
        <trans-unit id="27af452a7f10798a6a80ebee10c551b9851d8e80" translate="yes" xml:space="preserve">
          <source>The resource provides mechanisms to inject containers with configuration data while keeping containers agnostic of Kubernetes. Config Map can be used to store fine-grained information like individual properties or coarse-grained information like entire config files or JSON blobs.</source>
          <target state="translated">このリソースは、コンテナをKubernetesに依存しない状態に保ちつつ、コンフィグデータをコンテナに注入する仕組みを提供します。Config Mapは、個々のプロパティのような細かい粒度の情報や、コンフィグファイル全体やJSONブロブのような粗い粒度の情報を保存するために使用できます。</target>
        </trans-unit>
        <trans-unit id="9c74c27a7c9151e29a6532558f70b3d7258463bf" translate="yes" xml:space="preserve">
          <source>The resource provides mechanisms to inject containers with sensitive information, such as passwords, while keeping containers agnostic of Kubernetes. Secrets can be used to store sensitive information either as individual properties or coarse-grained entries like entire files or JSON blobs. The resource will by default create a secret which is available to any pod in the specified (or default) namespace.</source>
          <target state="translated">このリソースは、Kubernetes に依存しないコンテナを維持しつつ、パスワードなどの機密情報をコンテナに注入するメカニズムを提供します。秘密は、個々のプロパティとして、またはファイル全体やJSONブロブのような粗視化されたエントリとして、機密情報を保存するために使用することができます。このリソースはデフォルトでは、指定された (またはデフォルトの)名前空間のどのポッドでも利用可能な秘密を作成します。</target>
        </trans-unit>
        <trans-unit id="51cc646810be7cb640caa644f6293921f22de038" translate="yes" xml:space="preserve">
          <source>The resources all provide a map argument called &lt;code&gt;keepers&lt;/code&gt; that can be populated with arbitrary key/value pairs that should be selected such that they remain the same until new random values are desired.</source>
          <target state="translated">すべてのリソースは、 &lt;code&gt;keepers&lt;/code&gt; と呼ばれるマップ引数を提供します。これには、新しいランダムな値が必要になるまで同じままになるように選択する必要がある任意のキー/値ペアを入力できます。</target>
        </trans-unit>
        <trans-unit id="44cfe5ed1705a0b7bf74e5c43eceef85ed1b3136" translate="yes" xml:space="preserve">
          <source>The resources created by the test are destroyed. This step happens automatically, and is the equivalent of calling &lt;code&gt;terraform destroy&lt;/code&gt;.</source>
          <target state="translated">テストによって作成されたリソースは破棄されます。このステップは自動的に行われ、 &lt;code&gt;terraform destroy&lt;/code&gt; を呼び出すのと同じです。</target>
        </trans-unit>
        <trans-unit id="b2042de2b14ad16e98f382bc9ffe5186872d2dc3" translate="yes" xml:space="preserve">
          <source>The resources listed are sorted according to module depth order followed by alphabetical. This means that resources that are in your immediate configuration are listed first, and resources that are more deeply nested within modules are listed last.</source>
          <target state="translated">リストされたリソースは、モジュールの深さ順にアルファベット順に並べ替えられています。つまり、すぐに設定されているリソースが最初にリストアップされ、モジュール内でより深く入れ子になっているリソースが最後にリストアップされます。</target>
        </trans-unit>
        <trans-unit id="7c7a6a7bc8efb03dde7b5cfcfb8da9545a5105fe" translate="yes" xml:space="preserve">
          <source>The response for a paginated result set will look like:</source>
          <target state="translated">ページ分割された結果セットに対するレスポンスは次のようになります。</target>
        </trans-unit>
        <trans-unit id="5d9ae57aa8a84571805a2d5721dad1d960c4d33f" translate="yes" xml:space="preserve">
          <source>The result of the above will set a random priority.</source>
          <target state="translated">上記の結果により、ランダムな優先順位が設定されます。</target>
        </trans-unit>
        <trans-unit id="51165fc318e782417b739031c38a5865fe127e54" translate="yes" xml:space="preserve">
          <source>The result of the above will set the Name of the AWS Instance to &lt;code&gt;web-server-simple-snake&lt;/code&gt;.</source>
          <target state="translated">上記の結果により、AWSインスタンスの名前が &lt;code&gt;web-server-simple-snake&lt;/code&gt; に設定されます。</target>
        </trans-unit>
        <trans-unit id="3e34907ffbda6837074898777b5ba10e2973eb4d" translate="yes" xml:space="preserve">
          <source>The result will be that &lt;code&gt;baz&lt;/code&gt; will contain the value &lt;code&gt;bar&lt;/code&gt; because &lt;code&gt;bar.tfvars&lt;/code&gt; has the last definition loaded.</source>
          <target state="translated">結果として、 &lt;code&gt;bar.tfvars&lt;/code&gt; には最後に読み込まれた定義があるため、 &lt;code&gt;baz&lt;/code&gt; には値 &lt;code&gt;bar&lt;/code&gt; が含まれます。</target>
        </trans-unit>
        <trans-unit id="48ee202aab9d0b08d5a619118db3e38168ceb722" translate="yes" xml:space="preserve">
          <source>The resulting value of &lt;code&gt;foo&lt;/code&gt; will be:</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; の結果の値は次のようになります。</target>
        </trans-unit>
        <trans-unit id="9c5d69cabbea02e65fe1d24f6df23a7f8c07df93" translate="yes" xml:space="preserve">
          <source>The same rules apply for migration as they do for VM creation - any host specified needs to be a part of the resource pool supplied. Also keep in mind the implications of moving the virtual machine to a resource pool in another cluster or standalone host, namely ensuring that all hosts in the cluster (or the single standalone host) have access to the datastore that the virtual machine is in.</source>
          <target state="translated">仮想マシンの作成と同じルールがマイグレーションにも適用され、指定したホストはすべて供給されたリソースプールの一部である必要があります。また、仮想マシンを別のクラスタまたはスタンドアロンホストのリソースプールに移動する場合、クラスタ内のすべてのホスト(または単一のスタンドアロンホスト)が仮想マシンが入っているデータストアにアクセスできることを確認するという意味合いも念頭に置いてください。</target>
        </trans-unit>
        <trans-unit id="153e7a418e86b1fe6d6ece43c8aa51de2316e65b" translate="yes" xml:space="preserve">
          <source>The same settings can alternatively be specified on the command line as follows:</source>
          <target state="translated">以下のようにコマンドラインでも同様の設定を行うことができます。</target>
        </trans-unit>
        <trans-unit id="466669c5a374d82c17b9aa3ef9a19b4a77c2e7d5" translate="yes" xml:space="preserve">
          <source>The sample architecture introduced here includes the following resources:</source>
          <target state="translated">今回紹介するサンプルアーキテクチャには、以下のリソースが含まれています。</target>
        </trans-unit>
        <trans-unit id="3adabc2aad25214b60844dd3b49cdee94ff8eac0" translate="yes" xml:space="preserve">
          <source>The schema above defines one element, &lt;code&gt;&quot;address&quot;&lt;/code&gt;, which is a required string. Terraform's schema automatically enforces validation and type casting.</source>
          <target state="translated">上記のスキーマでは、必須の文字列である &lt;code&gt;&quot;address&quot;&lt;/code&gt; 1つの要素を定義しています。Terraformのスキーマは、検証と型キャストを自動的に実行します。</target>
        </trans-unit>
        <trans-unit id="601cbf1bafa91d8124132e58f4f97cdf7f3eb849" translate="yes" xml:space="preserve">
          <source>The schema attribute &lt;code&gt;Type&lt;/code&gt; determines what data is valid in configuring the element, as well as the type of data returned when used in &lt;a href=&quot;../../configuration/interpolation&quot;&gt;interpolation&lt;/a&gt;. Schemas attributes must be one of the types defined below, and can be loosely categorized as either &lt;strong&gt;Primitive&lt;/strong&gt; or &lt;strong&gt;Aggregate&lt;/strong&gt; types:</source>
          <target state="translated">スキーマ属性 &lt;code&gt;Type&lt;/code&gt; は、要素の構成に有効なデータと、&lt;a href=&quot;../../configuration/interpolation&quot;&gt;内挿で&lt;/a&gt;使用したときに返されるデータのタイプを決定します。スキーマ属性は、以下に定義するタイプのいずれかである必要があり、大まかに&lt;strong&gt;プリミティブ&lt;/strong&gt;タイプまたは&lt;strong&gt;集約&lt;/strong&gt;タイプのいずれかに分類できます。</target>
        </trans-unit>
        <trans-unit id="c1ad955da0ffcb489fae71664ab250d439e6df67" translate="yes" xml:space="preserve">
          <source>The second line points to the exact line of code that caused the panic, which--combined with the panic message itself--is normally enough for a developer to quickly figure out the cause of the issue.</source>
          <target state="translated">2行目はパニックの原因となったコードの正確な行を指しており、これはパニックメッセージ自体と組み合わせて、通常は開発者が問題の原因を迅速に把握するのに十分なものです。</target>
        </trans-unit>
        <trans-unit id="2bc3896fafc6313b4552746a1d4ff4990f5c743a" translate="yes" xml:space="preserve">
          <source>The second mechanism is optional, and affects ASGs with attached ELBs specified via the &lt;code&gt;load_balancers&lt;/code&gt; attribute or with ALBs specified with &lt;code&gt;target_group_arns&lt;/code&gt;.</source>
          <target state="translated">2番目のメカニズムはオプションで、 &lt;code&gt;load_balancers&lt;/code&gt; 属性を介して指定された &lt;code&gt;target_group_arns&lt;/code&gt; がアタッチされているASG、またはtarget_group_arnsで指定されているALBに影響します。</target>
        </trans-unit>
        <trans-unit id="1850f81b701a522fea4c28bc687d0e7ac7687e77" translate="yes" xml:space="preserve">
          <source>The servers mapping supports the following:</source>
          <target state="translated">サーバーマッピングは以下をサポートしています。</target>
        </trans-unit>
        <trans-unit id="a114effba2cccb84a92b0778bcd67f851c31b3c3" translate="yes" xml:space="preserve">
          <source>The service account used to run Terraform when creating a &lt;code&gt;google_folder&lt;/code&gt; resource must have &lt;code&gt;roles/resourcemanager.folderCreator&lt;/code&gt;. See the &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/access-control-folders&quot;&gt;Access Control for Folders Using IAM&lt;/a&gt; doc for more information.</source>
          <target state="translated">&lt;code&gt;google_folder&lt;/code&gt; リソースの作成時にTerraformを実行するために使用されるサービスアカウントには、 &lt;code&gt;roles/resourcemanager.folderCreator&lt;/code&gt; が必要です。詳細については、&lt;a href=&quot;https://cloud.google.com/resource-manager/docs/access-control-folders&quot;&gt;IAM&lt;/a&gt;ドキュメントを使用したフォルダーのアクセス制御をご覧ください。</target>
        </trans-unit>
        <trans-unit id="d96eff483cb0901f4d786ad879aa0f2b07e36e82" translate="yes" xml:space="preserve">
          <source>The service account used to run Terraform when creating a &lt;code&gt;google_project&lt;/code&gt; resource must have &lt;code&gt;roles/resourcemanager.projectCreator&lt;/code&gt;. See the &lt;a href=&quot;https://cloud.google.com/resource-manager/docs/access-control-org&quot;&gt;Access Control for Organizations Using IAM&lt;/a&gt; doc for more information.</source>
          <target state="translated">&lt;code&gt;google_project&lt;/code&gt; リソースの作成時にTerraformを実行するために使用されるサービスアカウントには、 &lt;code&gt;roles/resourcemanager.projectCreator&lt;/code&gt; が必要です。詳細については、&lt;a href=&quot;https://cloud.google.com/resource-manager/docs/access-control-org&quot;&gt;IAMを使用した組織&lt;/a&gt;のアクセス制御ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="619dc505c607eb9f4a484fe02490c6a36ab66453" translate="yes" xml:space="preserve">
          <source>The service identifier for this protocol is &lt;code&gt;modules.v1&lt;/code&gt;, and the declared URL should always end with a slash such that the paths shown in the following sections can be appended to it.</source>
          <target state="translated">このプロトコルのサービス識別子は &lt;code&gt;modules.v1&lt;/code&gt; であり、宣言されたURLは常にスラッシュで終了する必要があります。これにより、次のセクションに示すパスを追加できます。</target>
        </trans-unit>
        <trans-unit id="3f3e0eb77bee6d6041cc61a88268f24ec7a4444d" translate="yes" xml:space="preserve">
          <source>The settings for &lt;code&gt;customize&lt;/code&gt; are as follows:</source>
          <target state="translated">&lt;code&gt;customize&lt;/code&gt; の設定は次のとおりです。</target>
        </trans-unit>
        <trans-unit id="a0021fb02368001dcef0f495297fb985a68c16fd" translate="yes" xml:space="preserve">
          <source>The settings here must match the IP/mask of at least one &lt;code&gt;network_interface&lt;/code&gt; supplied to customization.</source>
          <target state="translated">ここでの設定は、カスタマイズに提供される少なくとも1つの &lt;code&gt;network_interface&lt;/code&gt; の IP /マスクと一致する必要があります。</target>
        </trans-unit>
        <trans-unit id="aae2177ed56a652e799980b6d3d6e18281c4fecf" translate="yes" xml:space="preserve">
          <source>The settings in the &lt;code&gt;linux_options&lt;/code&gt; sub-resource pertain to Linux guest OS customization. If you are customizing a Linux operating system, this section must be included.</source>
          <target state="translated">&lt;code&gt;linux_options&lt;/code&gt; サブリソースの設定は、LinuxゲストOSのカスタマイズに関するものです。Linuxオペレーティングシステムをカスタマイズする場合は、このセクションを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="f0d5ab5bd43f78a74d68ba87a412bd81b8bb1a27" translate="yes" xml:space="preserve">
          <source>The settings in the &lt;code&gt;windows_options&lt;/code&gt; sub-resource pertain to Windows guest OS customization. If you are customizing a Windows operating system, this section must be included.</source>
          <target state="translated">&lt;code&gt;windows_options&lt;/code&gt; サブリソースの設定は、WindowsゲストOSのカスタマイズに関するものです。Windowsオペレーティングシステムをカスタマイズする場合は、このセクションを含める必要があります。</target>
        </trans-unit>
        <trans-unit id="cf95e52c57391005990daf2cd7ea48eb6afb78ae" translate="yes" xml:space="preserve">
          <source>The simplest way to expose your application to users is via &lt;a href=&quot;https://kubernetes.io/docs/concepts/services-networking/service/&quot;&gt;Service&lt;/a&gt;. Service is capable of provisioning a load-balancer in some cloud providers and managing the relationship between pods and that load balancer as new pods are launched and others die for any reason.</source>
          <target state="translated">アプリケーションをユーザーに公開する最も簡単な方法は、&lt;a href=&quot;https://kubernetes.io/docs/concepts/services-networking/service/&quot;&gt;Service&lt;/a&gt;を使用することです。サービスは、一部のクラウドプロバイダーでロードバランサーをプロビジョニングし、ポッドとそのロードバランサーとの関係を管理できます。</target>
        </trans-unit>
        <trans-unit id="65c4a1a6bb0ed33bd4a152f19756616a5613b028" translate="yes" xml:space="preserve">
          <source>The snapshots data source can be used to search for and return an existing snapshot which can then be used to provision a server.</source>
          <target state="translated">スナップショットデータソースを使用して、既存のスナップショットを検索して返し、サーバーのプロビジョニングに使用することができます。</target>
        </trans-unit>
        <trans-unit id="e0a9c990f2f1bdbee8ac24cd01790d7ff21a27d7" translate="yes" xml:space="preserve">
          <source>The source tells Terraform what to create. In this example, we instantiate the &lt;a href=&quot;https://registry.terraform.io/modules/hashicorp/consul/aws&quot;&gt;Consul module for AWS&lt;/a&gt; from the &lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt;. Other source types are supported, as described in the following section.</source>
          <target state="translated">ソースはTerraformに何を作成するかを伝えます。この例では、&lt;a href=&quot;https://registry.terraform.io&quot;&gt;Terraform Registry&lt;/a&gt;から&lt;a href=&quot;https://registry.terraform.io/modules/hashicorp/consul/aws&quot;&gt;AWS&lt;/a&gt;のConsulモジュールをインスタンス化します。次のセクションで説明するように、他のソースタイプがサポートされています。</target>
        </trans-unit>
        <trans-unit id="b56f6497db4fd8781cf4e4f83ece937ca5c9be19" translate="yes" xml:space="preserve">
          <source>The special &lt;code&gt;path_part&lt;/code&gt; value &lt;code&gt;&quot;{proxy+}&quot;&lt;/code&gt; activates proxy behavior, which means that this resource will match &lt;em&gt;any&lt;/em&gt; request path. Similarly, the &lt;code&gt;aws_api_gateway_method&lt;/code&gt; block uses a &lt;code&gt;http_method&lt;/code&gt; of &lt;code&gt;&quot;ANY&quot;&lt;/code&gt;, which allows any request method to be used. Taken together, this means that all incoming requests will match this resource.</source>
          <target state="translated">特別な &lt;code&gt;path_part&lt;/code&gt; 値 &lt;code&gt;&quot;{proxy+}&quot;&lt;/code&gt; はプロキシ動作をアクティブにします。つまり、このリソースは&lt;em&gt;すべての&lt;/em&gt;リクエストパスに一致します。同様に、 &lt;code&gt;aws_api_gateway_method&lt;/code&gt; ブロックは、 &lt;code&gt;&quot;ANY&quot;&lt;/code&gt; &lt;code&gt;http_method&lt;/code&gt; を使用します。これにより、任意のリクエストメソッドを使用できます。まとめると、これはすべての着信要求がこのリソースと一致することを意味します。</target>
        </trans-unit>
        <trans-unit id="04fc82b65980f304c3efa6640fb362966b7ee574" translate="yes" xml:space="preserve">
          <source>The special arguments &lt;code&gt;source&lt;/code&gt;, &lt;code&gt;version&lt;/code&gt; and &lt;code&gt;providers&lt;/code&gt; are exceptions. These are used for special purposes by Terraform and should therefore not be used as variable names within a module.</source>
          <target state="translated">特別な引数 &lt;code&gt;source&lt;/code&gt; 、 &lt;code&gt;version&lt;/code&gt; 、および &lt;code&gt;providers&lt;/code&gt; は例外です。これらはTerraformによって特別な目的で使用されるため、モジュール内の変数名として使用しないでください。</target>
        </trans-unit>
        <trans-unit id="052821dd7871d575d3ad0fa8c897b4233b1be0a6" translate="yes" xml:space="preserve">
          <source>The specified RDS instance must be in running status.</source>
          <target state="translated">指定されたRDSインスタンスは、実行中の状態でなければなりません。</target>
        </trans-unit>
        <trans-unit id="f7fa13f3bba284a1d9004a578a1c7263fc594cbe" translate="yes" xml:space="preserve">
          <source>The specified RDS instance&amp;rsquo;s whitelist must have room for more IP addresses.</source>
          <target state="translated">指定されたRDSインスタンスのホワイトリストには、より多くのIPアドレス用のスペースが必要です。</target>
        </trans-unit>
        <trans-unit id="832ed1abb9e7b964ae08a2342d4d82ca914b1ce1" translate="yes" xml:space="preserve">
          <source>The standard module expects the structure documented below. The list may appear long, but everything is optional except for the root module. All items are documented in detail. Most modules don't need to do any work to follow the standard structure.</source>
          <target state="translated">標準モジュールは以下の構造を期待しています。リストは長く見えるかもしれませんが、ルートモジュール以外はすべてオプションです。すべての項目は詳細に文書化されています。ほとんどのモジュールは標準の構造に従うための作業をする必要はありません。</target>
        </trans-unit>
        <trans-unit id="6760f760417b674f8dea534cd24668e7a487997f" translate="yes" xml:space="preserve">
          <source>The standard module structure is a file and folder layout we recommend for reusable modules. Terraform tooling is built to understand the standard module structure and use that structure to generate documentation, index modules for the registry, and more.</source>
          <target state="translated">標準モジュール構造は、再利用可能なモジュールに推奨されるファイルとフォルダのレイアウトです。Terraformのツールは、標準モジュール構造を理解し、その構造を利用してドキュメントを生成したり、レジストリ用のモジュールをインデックス化したりするために構築されています。</target>
        </trans-unit>
        <trans-unit id="ab40e8a351726d73fb8a1789d1aa1f6f4c18b087" translate="yes" xml:space="preserve">
          <source>The state is in JSON format and Terraform will promise backwards compatibility with the state file. The JSON format makes it easy to write tools around the state if you want or to modify it by hand in the case of a Terraform bug. The &quot;version&quot; field on the state contents allows us to transparently move the format forward if we make modifications.</source>
          <target state="translated">ステートはJSON形式で、Terraformはステートファイルとの下位互換性を約束します。JSON形式なので、必要に応じてステートの周りにツールを書いたり、Terraformのバグが発生した場合に手で修正したりすることが簡単にできます。ステートの内容に &quot;version &quot;というフィールドがあることで、修正した場合には透過的にフォーマットを前に進めることができるようになっています。</target>
        </trans-unit>
        <trans-unit id="bf55b729de7b9fce9caf06ef0fff29fedd3d42da" translate="yes" xml:space="preserve">
          <source>The state will only be saved on successful removal of all addresses. If any specific address errors for any reason (such as a syntax error), the state will not be modified at all.</source>
          <target state="translated">状態は、すべてのアドレスの削除に成功した場合にのみ保存されます。何らかの理由(構文エラーなど)で特定のアドレスにエラーが発生した場合、状態は一切変更されません。</target>
        </trans-unit>
        <trans-unit id="a8a2fbbfd3a35d130af96e4b0b6627bf5d14f0fe" translate="yes" xml:space="preserve">
          <source>The supported built-in functions are:</source>
          <target state="translated">サポートされている内蔵機能は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="74e9f30451858b9b619fab8eb6c32041b9ccf4ec" translate="yes" xml:space="preserve">
          <source>The supported operations are:</source>
          <target state="translated">対応している操作は</target>
        </trans-unit>
        <trans-unit id="44a026234629b4302a19be2bf06b986557d1b0d0" translate="yes" xml:space="preserve">
          <source>The supported operators are:</source>
          <target state="translated">対応している演算子は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="937a3de92014164f4980612992f147227599a668" translate="yes" xml:space="preserve">
          <source>The switching profile data source provides information about switching profiles configured in NSX. A switching profile is a template that defines the settings of one or more logical switches. There can be both factory default and user defined switching profiles. One example of a switching profile is a quality of service (QoS) profile which defines the QoS settings of all switches that use the defined switch profile.</source>
          <target state="translated">スイッチングプロファイルデータソースは、NSXで構成されたスイッチングプロファイルに関する情報を提供します。スイッチングプロファイルは、1つまたは複数の論理スイッチの設定を定義するテンプレートです。工場出荷時のデフォルトのスイッチングプロファイルとユーザー定義のスイッチングプロファイルの両方があります。スイッチングプロファイルの一例として、定義されたスイッチプロファイルを使用するすべてのスイッチのQoS設定を定義するQoS(Quality of Service)プロファイルがあります。</target>
        </trans-unit>
        <trans-unit id="f11945754ed21846e5e3f4c90eb397faca389411" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;&quot;${var.LIST}&quot;&lt;/code&gt;. For example, &lt;code&gt;&quot;${var.subnets}&quot;&lt;/code&gt; would get the value of the &lt;code&gt;subnets&lt;/code&gt; list, as a list. You can also return list elements by index: &lt;code&gt;${var.subnets[idx]}&lt;/code&gt;.</source>
          <target state="translated">構文は &lt;code&gt;&quot;${var.LIST}&quot;&lt;/code&gt; です。たとえば、 &lt;code&gt;&quot;${var.subnets}&quot;&lt;/code&gt; は &lt;code&gt;subnets&lt;/code&gt; リストの値をリストとして取得します。インデックスによってリスト要素を返すこともできます： &lt;code&gt;${var.subnets[idx]}&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="006391b81deacd338647bc9c578e7a6f21f3ff0f" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;MODULE.NAME.OUTPUT&lt;/code&gt;. For example &lt;code&gt;${module.foo.bar}&lt;/code&gt; will interpolate the &lt;code&gt;bar&lt;/code&gt; output from the &lt;code&gt;foo&lt;/code&gt;&lt;a href=&quot;../modules/index&quot;&gt;module&lt;/a&gt;.</source>
          <target state="translated">構文は &lt;code&gt;MODULE.NAME.OUTPUT&lt;/code&gt; です。たとえば、 &lt;code&gt;${module.foo.bar}&lt;/code&gt; は、 &lt;code&gt;foo&lt;/code&gt; &lt;a href=&quot;../modules/index&quot;&gt;モジュール&lt;/a&gt;からの &lt;code&gt;bar&lt;/code&gt; 出力を補間します。</target>
        </trans-unit>
        <trans-unit id="68f33922ffef5804ae5e31cba0eb340ba8ac4180" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;TYPE.NAME.ATTRIBUTE&lt;/code&gt;. For example, &lt;code&gt;${aws_instance.web.id}&lt;/code&gt; will interpolate the ID attribute from the &lt;code&gt;aws_instance&lt;/code&gt; resource named &lt;code&gt;web&lt;/code&gt;. If the resource has a &lt;code&gt;count&lt;/code&gt; attribute set, you can access individual attributes with a zero-based index, such as &lt;code&gt;${aws_instance.web.0.id}&lt;/code&gt;. You can also use the splat syntax to get a list of all the attributes: &lt;code&gt;${aws_instance.web.*.id}&lt;/code&gt;.</source>
          <target state="translated">構文は &lt;code&gt;TYPE.NAME.ATTRIBUTE&lt;/code&gt; です。たとえば、 &lt;code&gt;${aws_instance.web.id}&lt;/code&gt; は、 &lt;code&gt;web&lt;/code&gt; という名前の &lt;code&gt;aws_instance&lt;/code&gt; リソースからID属性を補間します。リソースに &lt;code&gt;count&lt;/code&gt; 属性が設定されている場合は、 &lt;code&gt;${aws_instance.web.0.id}&lt;/code&gt; などのゼロベースのインデックスを使用して個々の属性にアクセスできます。 &lt;code&gt;${aws_instance.web.*.id}&lt;/code&gt; 構文を使用して、すべての属性のリストを取得することもできます：$ {aws_instance.web。*。id}。</target>
        </trans-unit>
        <trans-unit id="f8236a78b666d964f0ddb0714d1866da4b51e61e" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;count.FIELD&lt;/code&gt;. For example, &lt;code&gt;${count.index}&lt;/code&gt; will interpolate the current index in a multi-count resource. For more information on &lt;code&gt;count&lt;/code&gt;, see the &lt;a href=&quot;resources&quot;&gt;resource configuration page&lt;/a&gt;.</source>
          <target state="translated">構文は &lt;code&gt;count.FIELD&lt;/code&gt; です。たとえば、 &lt;code&gt;${count.index}&lt;/code&gt; は、マルチカウントリソースの現在のインデックスを補間します。詳細については &lt;code&gt;count&lt;/code&gt; 、参照&lt;a href=&quot;resources&quot;&gt;リソースの設定ページを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="8cbd925b3b2dba2a85b4684fa57403760db955b1" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;data.TYPE.NAME.ATTRIBUTE&lt;/code&gt;. For example. &lt;code&gt;${data.aws_ami.ubuntu.id}&lt;/code&gt; will interpolate the &lt;code&gt;id&lt;/code&gt; attribute from the &lt;code&gt;aws_ami&lt;/code&gt;&lt;a href=&quot;data-sources&quot;&gt;data source&lt;/a&gt; named &lt;code&gt;ubuntu&lt;/code&gt;. If the data source has a &lt;code&gt;count&lt;/code&gt; attribute set, you can access individual attributes with a zero-based index, such as &lt;code&gt;${data.aws_subnet.example.0.cidr_block}&lt;/code&gt;. You can also use the splat syntax to get a list of all the attributes: &lt;code&gt;${data.aws_subnet.example.*.cidr_block}&lt;/code&gt;.</source>
          <target state="translated">構文は &lt;code&gt;data.TYPE.NAME.ATTRIBUTE&lt;/code&gt; です。例えば。 &lt;code&gt;${data.aws_ami.ubuntu.id}&lt;/code&gt; は、 &lt;code&gt;ubuntu&lt;/code&gt; という名前の &lt;code&gt;aws_ami&lt;/code&gt; &lt;a href=&quot;data-sources&quot;&gt;データソース&lt;/a&gt;から &lt;code&gt;id&lt;/code&gt; 属性を補間します。データソースに &lt;code&gt;count&lt;/code&gt; 属性が設定されている場合、 &lt;code&gt;${data.aws_subnet.example.0.cidr_block}&lt;/code&gt; などのゼロベースのインデックスを使用して個々の属性にアクセスできます。 &lt;code&gt;${data.aws_subnet.example.*.cidr_block}&lt;/code&gt; 構文を使用して、すべての属性のリストを取得することもできます：$ {data.aws_subnet.example。*。cidr_block}。</target>
        </trans-unit>
        <trans-unit id="ee768297da108e7275cd69fc04af81c32638e439" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;path.TYPE&lt;/code&gt;. TYPE can be &lt;code&gt;cwd&lt;/code&gt;, &lt;code&gt;module&lt;/code&gt;, or &lt;code&gt;root&lt;/code&gt;. &lt;code&gt;cwd&lt;/code&gt; will interpolate the current working directory. &lt;code&gt;module&lt;/code&gt; will interpolate the path to the current module. &lt;code&gt;root&lt;/code&gt; will interpolate the path of the root module. In general, you probably want the &lt;code&gt;path.module&lt;/code&gt; variable.</source>
          <target state="translated">構文は &lt;code&gt;path.TYPE&lt;/code&gt; です。TYPEは &lt;code&gt;cwd&lt;/code&gt; 、 &lt;code&gt;module&lt;/code&gt; 、または &lt;code&gt;root&lt;/code&gt; です。 &lt;code&gt;cwd&lt;/code&gt; は現在の作業ディレクトリを補間します。 &lt;code&gt;module&lt;/code&gt; は、現在のモジュールへのパスを補間します。 &lt;code&gt;root&lt;/code&gt; は、ルートモジュールのパスを補間します。一般に、おそらく &lt;code&gt;path.module&lt;/code&gt; 変数が必要です。</target>
        </trans-unit>
        <trans-unit id="da0324280111911c82f03a111ec89e10fc75efb9" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;self.ATTRIBUTE&lt;/code&gt;. For example &lt;code&gt;${self.private_ip}&lt;/code&gt; will interpolate that resource's private IP address.</source>
          <target state="translated">構文は &lt;code&gt;self.ATTRIBUTE&lt;/code&gt; です。たとえば、 &lt;code&gt;${self.private_ip}&lt;/code&gt; は、そのリソースのプライベートIPアドレスを補間します。</target>
        </trans-unit>
        <trans-unit id="59c7e199a9e888f6ec8a6433f63104a82d4b544e" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;terraform.FIELD&lt;/code&gt;. This variable type contains metadata about the currently executing Terraform run. FIELD can currently only be &lt;code&gt;env&lt;/code&gt; to reference the currently active &lt;a href=&quot;../state/environments&quot;&gt;state environment&lt;/a&gt;.</source>
          <target state="translated">構文は &lt;code&gt;terraform.FIELD&lt;/code&gt; です。この変数タイプには、現在実行中のTerraform実行に関するメタデータが含まれています。FIELDは現在、現在アクティブな&lt;a href=&quot;../state/environments&quot;&gt;状態の環境&lt;/a&gt;を参照するためにのみ &lt;code&gt;env&lt;/code&gt; にすることができます。</target>
        </trans-unit>
        <trans-unit id="f244672cea7a6db64c8ad8f38382355eee35f38f" translate="yes" xml:space="preserve">
          <source>The syntax is &lt;code&gt;var.MAP[&quot;KEY&quot;]&lt;/code&gt;. For example, &lt;code&gt;${var.amis[&quot;us-east-1&quot;]}&lt;/code&gt; would get the value of the &lt;code&gt;us-east-1&lt;/code&gt; key within the &lt;code&gt;amis&lt;/code&gt; map variable.</source>
          <target state="translated">構文は &lt;code&gt;var.MAP[&quot;KEY&quot;]&lt;/code&gt; です。たとえば、 &lt;code&gt;${var.amis[&quot;us-east-1&quot;]}&lt;/code&gt; は、 &lt;code&gt;amis&lt;/code&gt; マップ変数内の &lt;code&gt;us-east-1&lt;/code&gt; キーの値を取得します。</target>
        </trans-unit>
        <trans-unit id="dea3e32850ac9de1701010b6bb8822de9f77036a" translate="yes" xml:space="preserve">
          <source>The syntax of &lt;code&gt;depends_on&lt;/code&gt; is a list of resources and modules:</source>
          <target state="translated">&lt;code&gt;depends_on&lt;/code&gt; の構文は、リソースとモジュールのリストです。</target>
        </trans-unit>
        <trans-unit id="61d75bd0c429745ba5cceea4ff07d3efe048c6f3" translate="yes" xml:space="preserve">
          <source>The syntax of Terraform configurations is called &lt;a href=&quot;https://github.com/hashicorp/hcl&quot;&gt;HashiCorp Configuration Language (HCL)&lt;/a&gt;. It is meant to strike a balance between human readable and editable as well as being machine-friendly. For machine-friendliness, Terraform can also read JSON configurations. For general Terraform configurations, however, we recommend using the HCL Terraform syntax.</source>
          <target state="translated">Terraform構成の構文は&lt;a href=&quot;https://github.com/hashicorp/hcl&quot;&gt;HashiCorp構成言語（HCL）&lt;/a&gt;と呼ばれます。人間が読める形式と編集可能な形式のバランスを取り、マシンに優しいことを目的としています。マシンの使いやすさのために、TerraformはJSON構成も読み取ることができます。ただし、一般的なTerraform構成では、HCL Terraform構文を使用することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="f5e4c7a681666c62e53a4d046215461320257d51" translate="yes" xml:space="preserve">
          <source>The syntax of the given ID is dependent on the resource type being imported. For example, AWS instances use an opaque ID issued by the EC2 API, but AWS Route53 Zones use the domain name itself. Consult the documentation for each importable resource for details on what form of ID is required.</source>
          <target state="translated">与えられたIDの構文は、インポートするリソースタイプに依存します。例えば、AWSインスタンスではEC2 APIが発行する不透明なIDを使用しますが、AWS Route53 Zonesではドメイン名そのものを使用します。どのような形式のIDが必要かについては、インポート可能な各リソースのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="f1187030f546d43cdac02699f2c1a077e0dfdb1b" translate="yes" xml:space="preserve">
          <source>The syntax of the template files is the same as &lt;a href=&quot;../../../configuration/interpolation&quot;&gt;standard interpolation syntax&lt;/a&gt;, but you only have access to the variables defined in the &lt;code&gt;vars&lt;/code&gt; section.</source>
          <target state="translated">テンプレートファイルの構文は&lt;a href=&quot;../../../configuration/interpolation&quot;&gt;標準の補間構文&lt;/a&gt;と同じですが、 &lt;code&gt;vars&lt;/code&gt; セクションで定義された変数にしかアクセスできません。</target>
        </trans-unit>
        <trans-unit id="87bdbb815f03f4a9ebaa8ea37916963c8f89d992" translate="yes" xml:space="preserve">
          <source>The tags to apply to the resources during launch. You can tag instances and volumes. More information can be found in the &lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateTagSpecificationRequest.html&quot;&gt;EC2 API documentation&lt;/a&gt;.</source>
          <target state="translated">起動時にリソースに適用するタグ。インスタンスとボリュームにタグを付けることができます。詳細については、&lt;a href=&quot;https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_LaunchTemplateTagSpecificationRequest.html&quot;&gt;EC2 APIのドキュメントを&lt;/a&gt;ご覧ください。</target>
        </trans-unit>
        <trans-unit id="60c436fb3f6cc440944125997440fb2b9633e853" translate="yes" xml:space="preserve">
          <source>The template provider exposes data sources to use templates to generate strings for other Terraform resources or outputs.</source>
          <target state="translated">テンプレート・プロバイダは、テンプレートを使用して他のTerraformリソースや出力の文字列を生成するためのデータ・ソースを公開します。</target>
        </trans-unit>
        <trans-unit id="5edffd09856fe375489b10df23ca082e8383ea15" translate="yes" xml:space="preserve">
          <source>The term &lt;em&gt;state environment&lt;/em&gt;, or just &lt;em&gt;environment&lt;/em&gt;, was used within the Terraform 0.9 releases to refer to the idea of having multiple distinct, named states associated with a single configuration directory.</source>
          <target state="translated">Terraform 0.9リリースでは、「&lt;em&gt;状態環境&lt;/em&gt;」または「単に&lt;em&gt;環境&lt;/em&gt;」という用語を使用して、単一の構成ディレクトリに複数の異なる名前付き状態を関連付けるというアイデアを指していました。</target>
        </trans-unit>
        <trans-unit id="c92e3621230fe99e55ab05198f016366d754695c" translate="yes" xml:space="preserve">
          <source>The terraform CLI is a well-behaved command line application. In erroneous cases, a non-zero exit status will be returned. It also responds to -h and --help as you'd most likely expect.</source>
          <target state="translated">terraform CLIはよく動作するコマンドラインアプリケーションです.誤って終了した場合は、0 以外の終了ステータスが返されます。h や --help にも期待通りに反応します。</target>
        </trans-unit>
        <trans-unit id="457e629cb8720237fc397eff48a546b61232bb3b" translate="yes" xml:space="preserve">
          <source>The terraform import function will read in certificate body, certificate chain (if it exists), id, name, path, and arn. It will not retrieve the private key which is not available through the AWS API.</source>
          <target state="translated">terraformのインポート関数は、証明書本体、証明書チェーン(存在する場合)、id、name、path、arnを読み込む。AWS APIでは利用できない秘密鍵は取得しません。</target>
        </trans-unit>
        <trans-unit id="be220da4dfa5f31d73facfcd9b2233f48bbc693b" translate="yes" xml:space="preserve">
          <source>The terraform provider provides access to outputs from the Terraform state of shared infrastructure.</source>
          <target state="translated">terraformプロバイダーは、共有インフラストラクチャのTerraform状態からの出力へのアクセスを提供します。</target>
        </trans-unit>
        <trans-unit id="49c6084af6ca4471e1a7cf30ad80b0c0573d15a2" translate="yes" xml:space="preserve">
          <source>The test resource allows StatusCake tests to be managed by Terraform.</source>
          <target state="translated">テストリソースは、StatusCakeテストをTerraformで管理できるようにします。</target>
        </trans-unit>
        <trans-unit id="48615eb02bcab75b87f1688f92c3680ec0dc21fe" translate="yes" xml:space="preserve">
          <source>The type of record being created affects the interpretation of the &lt;code&gt;value&lt;/code&gt; argument; also, some additional arguments are required for some record types. &lt;a href=&quot;http://help.dnsmadeeasy.com/tutorials/managed-dns/&quot;&gt;http://help.dnsmadeeasy.com/tutorials/managed-dns/&lt;/a&gt; has more information.</source>
          <target state="translated">作成されるレコードのタイプは、 &lt;code&gt;value&lt;/code&gt; 引数の解釈に影響します。また、一部のレコードタイプでは、いくつかの追加の引数が必要です。&lt;a href=&quot;http://help.dnsmadeeasy.com/tutorials/managed-dns/&quot;&gt;http://help.dnsmadeeasy.com/tutorials/managed-dns/&lt;/a&gt;に詳細があります。</target>
        </trans-unit>
        <trans-unit id="f4b4eaacc7f5d4443bc1f7ba8f94e76bd6f706e2" translate="yes" xml:space="preserve">
          <source>The upload page will list your available repositories, filtered to those that match the &lt;a href=&quot;#Requirements&quot;&gt;naming convention described above&lt;/a&gt;. This is shown in the screenshot below. Select the repository of the module you want to add and click &quot;Publish Module.&quot;</source>
          <target state="translated">アップロードページには、使用可能なリポジトリが一覧表示さ&lt;a href=&quot;#Requirements&quot;&gt;れ、上記の命名規則に&lt;/a&gt;一致するリポジトリにフィルタリングされます。これは下のスクリーンショットに示されています。追加するモジュールのリポジトリを選択し、[モジュールの公開]をクリックします。</target>
        </trans-unit>
        <trans-unit id="4e774a845663eb55e2c4c0428dcd36ff4a0dc99b" translate="yes" xml:space="preserve">
          <source>The user resource allows a user to be created on an InfluxDB server.</source>
          <target state="translated">ユーザーリソースは、InfluxDBサーバー上にユーザーを作成することを可能にします。</target>
        </trans-unit>
        <trans-unit id="3a0ba7b26883ba90c7c03a5927d280c773306b38" translate="yes" xml:space="preserve">
          <source>The username and password are expected to be in the following environment variables:</source>
          <target state="translated">ユーザー名とパスワードは、以下の環境変数にあることが予想されます。</target>
        </trans-unit>
        <trans-unit id="4f8636fb355f50f70476b59428dd43cc6652e0c9" translate="yes" xml:space="preserve">
          <source>The users or groups within the administrative account must also have a policy that creates the converse relationship, allowing these users or groups to assume that role.</source>
          <target state="translated">また、管理アカウント内のユーザーやグループは、これらのユーザーやグループがその役割を担うことを可能にする、逆の関係を作成するポリシーを持っていなければなりません。</target>
        </trans-unit>
        <trans-unit id="cb2a574ea299a7464754ab0f1da47749feb6a774" translate="yes" xml:space="preserve">
          <source>The value can be set like this:</source>
          <target state="translated">このように値を設定することができます。</target>
        </trans-unit>
        <trans-unit id="36a4027d613ceada24f94ac810eb59edf1a312c6" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;TF_CLI_ARGS&lt;/code&gt; will specify additional arguments to the command-line. This allows easier automation in CI environments as well as modifying default behavior of Terraform on your own system.</source>
          <target state="translated">&lt;code&gt;TF_CLI_ARGS&lt;/code&gt; の値は、コマンドラインに追加の引数を指定します。これにより、CI環境での自動化が容易になるだけでなく、独自のシステムでTerraformのデフォルトの動作を変更できます。</target>
        </trans-unit>
        <trans-unit id="8f899d0e20fba3fc8c0c120f18ee15e181086ead" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;X-Terraform-Get&lt;/code&gt; may instead be a relative URL, indicated by beginning with &lt;code&gt;/&lt;/code&gt;, &lt;code&gt;./&lt;/code&gt; or &lt;code&gt;../&lt;/code&gt;, in which case it is resolved relative to the full URL of the download endpoint.</source>
          <target state="translated">値は &lt;code&gt;X-Terraform-Get&lt;/code&gt; 代わりに相対URLであってもよいし、始まるで示される &lt;code&gt;/&lt;/code&gt; 、 &lt;code&gt;./&lt;/code&gt; または &lt;code&gt;../&lt;/code&gt; それは、ダウンロードエンドポイントの完全なURLに関連した解決された場合には、。</target>
        </trans-unit>
        <trans-unit id="66fd6d3cc05313d7909004064097871adc6ee858" translate="yes" xml:space="preserve">
          <source>The value of each object element is the base URL for the service in question. This URL may be either absolute or relative, and if relative it is resolved against the final discovery URL (&lt;em&gt;after&lt;/em&gt; following redirects).</source>
          <target state="translated">各オブジェクト要素の値は、問題のサービスのベースURLです。このURLは絶対または相対のいずれかであり、相対の場合は、最終的な検出URLに対して解決されます（リダイレクト&lt;em&gt;後&lt;/em&gt;）。</target>
        </trans-unit>
        <trans-unit id="9559f031b437aa8e0b0771454cb3295e81ea0d95" translate="yes" xml:space="preserve">
          <source>The value of the &lt;code&gt;provider&lt;/code&gt; argument is always the provider name and an alias separated by a period, such as &lt;code&gt;&quot;aws.west&quot;&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;provider&lt;/code&gt; 引数の値は常に、プロバイダー名とピリオドで区切られたエイリアス（上記の &lt;code&gt;&quot;aws.west&quot;&lt;/code&gt; など）です。</target>
        </trans-unit>
        <trans-unit id="344c6682649355635bc2d4a5a84079a700c00716" translate="yes" xml:space="preserve">
          <source>The value of the field should be &lt;code&gt;TYPE&lt;/code&gt; or &lt;code&gt;TYPE.ALIAS&lt;/code&gt;. The &lt;code&gt;ALIAS&lt;/code&gt; value comes from the &lt;code&gt;alias&lt;/code&gt; field value when configuring the &lt;a href=&quot;providers&quot;&gt;provider&lt;/a&gt;.</source>
          <target state="translated">フィールドの値は &lt;code&gt;TYPE&lt;/code&gt; または &lt;code&gt;TYPE.ALIAS&lt;/code&gt; である必要があります。 &lt;code&gt;ALIAS&lt;/code&gt; の値はから来て &lt;code&gt;alias&lt;/code&gt; 設定するときにフィールドの値&lt;a href=&quot;providers&quot;&gt;プロバイダを&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="59423a2c82e9368ed9e3a497158b0d88f902b3a3" translate="yes" xml:space="preserve">
          <source>The value of the flag is parsed as if you typed it directly to the shell. Double and single quotes are allowed to capture strings and arguments will be separated by spaces otherwise.</source>
          <target state="translated">フラグの値は、シェルに直接タイプしたかのように解析されます。ダブルクォーテーションとシングルクォーテーションは文字列をキャプチャするために許可されており、そうでない場合は引数はスペースで区切られます。</target>
        </trans-unit>
        <trans-unit id="6ddc4c901a26438d08a6fa495abf504ac57f87f4" translate="yes" xml:space="preserve">
          <source>The value of this configuration is a comma-separated list of constraints. A constraint is an operator followed by a version, such as &lt;code&gt;&amp;gt; 0.7.0&lt;/code&gt;. Constraints support the following operations:</source>
          <target state="translated">この構成の値は、コンマで区切られた制約のリストです。制約とは、 &lt;code&gt;&amp;gt; 0.7.0&lt;/code&gt; などのバージョンが後に続く演算子です。制約は次の操作をサポートします。</target>
        </trans-unit>
        <trans-unit id="3911f0c7b4fd96d0f40ad01732e1810575039abc" translate="yes" xml:space="preserve">
          <source>The values of sensitive outputs are still stored in the Terraform state, and available using the &lt;code&gt;terraform output&lt;/code&gt; command, so cannot be relied on as a sole means of protecting values.</source>
          <target state="translated">機密出力の値はTerraform状態で引き続き保存され、terraform &lt;code&gt;terraform output&lt;/code&gt; コマンドを使用して利用できるため、値を保護する唯一の手段として信頼することはできません。</target>
        </trans-unit>
        <trans-unit id="fdf62b2882ca079e8a56482f5c11c13be220c046" translate="yes" xml:space="preserve">
          <source>The variable can be set via an environment variable:</source>
          <target state="translated">環境変数で設定することができます。</target>
        </trans-unit>
        <trans-unit id="461ae406c83e9bd68d06878e852a72b28856c523" translate="yes" xml:space="preserve">
          <source>The variable could be set like so:</source>
          <target state="translated">変数はこのように設定することができます。</target>
        </trans-unit>
        <trans-unit id="9ece8e0fd2f8ab295919b6d83e10bc87b9594cbc" translate="yes" xml:space="preserve">
          <source>The variable values can be updated using the &lt;code&gt;-overwrite&lt;/code&gt; flag or via the &lt;a href=&quot;https://www.hashicorp.com/products/terraform/&quot;&gt;Terraform Enterprise website&lt;/a&gt;. An example of updating just a single variable &lt;code&gt;foo&lt;/code&gt; is shown below:</source>
          <target state="translated">変数値は、 &lt;code&gt;-overwrite&lt;/code&gt; フラグを使用するか、&lt;a href=&quot;https://www.hashicorp.com/products/terraform/&quot;&gt;Terraform Enterprise Webサイトを&lt;/a&gt;介して更新できます。単一の変数 &lt;code&gt;foo&lt;/code&gt; のみを更新する例を以下に示します。</target>
        </trans-unit>
        <trans-unit id="9aebdf512f0750d1e31c18534ec4c91a62f69f35" translate="yes" xml:space="preserve">
          <source>The vrack attachment isn't a proper resource with an ID. As such, the resource id will be forged from the vrack and project ids and there's no correct way to import the resource in terraform. When the resource is created by terraform, it first checks if the attachment already exists within OVH infrastructure; if it exists it set the resource id without modifying anything. Otherwise, it will try to attach the vrack with the public cloud project.</source>
          <target state="translated">vrack の添付ファイルは ID を持つ適切なリソースではありません。そのため、リソースIDはvrackとプロジェクトIDから偽造されてしまい、terraformでリソースをインポートする正しい方法はありません。terraformがリソースを作成すると、まず最初に添付ファイルがOVHインフラストラクチャ内に既に存在するかどうかをチェックし、存在する場合は何も変更せずにリソースIDを設定します。そうでない場合は、パブリッククラウドプロジェクトでvrackをアタッチしようとします。</target>
        </trans-unit>
        <trans-unit id="0ec5895051ae47eaa5542bdc5cbe25c653375df5" translate="yes" xml:space="preserve">
          <source>The website mapping supports the following:</source>
          <target state="translated">Webサイトのマッピングでは、以下のように対応しています。</target>
        </trans-unit>
        <trans-unit id="c876f5761a4167101054f8a5e894a3837a9fda7e" translate="yes" xml:space="preserve">
          <source>Then execute it like this:</source>
          <target state="translated">そして、このように実行します。</target>
        </trans-unit>
        <trans-unit id="673902b8b81fea25ea5e0d4136497c08a1e7764f" translate="yes" xml:space="preserve">
          <source>Then locate the &lt;code&gt;aws_lambda_function&lt;/code&gt; resource defined earlier and change its &lt;code&gt;s3_key&lt;/code&gt; argument to include the version variable:</source>
          <target state="translated">次に、 &lt;code&gt;aws_lambda_function&lt;/code&gt; 定義したaws_lambda_functionリソースを探し、その &lt;code&gt;s3_key&lt;/code&gt; 引数を変更して、バージョン変数を含めます。</target>
        </trans-unit>
        <trans-unit id="647cb0dd9317b03dab4c32e029b918f0d5a5002b" translate="yes" xml:space="preserve">
          <source>Then specifing an &lt;code&gt;entry&lt;/code&gt; of &lt;code&gt;3&lt;/code&gt;, the returned &lt;code&gt;machine_images&lt;/code&gt; array will have a sigle element: &lt;code&gt;&quot;image3&quot;&lt;/code&gt;. If &lt;code&gt;entry&lt;/code&gt; was omitted, or set to &lt;code&gt;0&lt;/code&gt;, the returned &lt;code&gt;machine_images&lt;/code&gt; array will contain all of the images for that image list version.</source>
          <target state="translated">次に、 &lt;code&gt;3&lt;/code&gt; の &lt;code&gt;entry&lt;/code&gt; を指定すると、返された &lt;code&gt;machine_images&lt;/code&gt; 配列に &lt;code&gt;&quot;image3&quot;&lt;/code&gt; という単一の要素が含まれます。 &lt;code&gt;entry&lt;/code&gt; が省略された場合、または &lt;code&gt;0&lt;/code&gt; に設定された場合、返される &lt;code&gt;machine_images&lt;/code&gt; 配列には、そのイメージリストバージョンのすべてのイメージが含まれます。</target>
        </trans-unit>
        <trans-unit id="9062f99fdf863ae93a701f60479705235ce4ecef" translate="yes" xml:space="preserve">
          <source>Then the AMI for the one resource will be replaced with &quot;foo&quot;. Note that the override syntax can be Terraform syntax or JSON. You can mix and match syntaxes without issue.</source>
          <target state="translated">すると、1つのリソースのAMIは &quot;foo &quot;に置き換えられます。オーバーライド構文はTerraform構文かJSONであることに注意してください。構文を混在させても問題ありません。</target>
        </trans-unit>
        <trans-unit id="4017e0717cded31804b8284591a1eda86d600038" translate="yes" xml:space="preserve">
          <source>Then the rendered value would be &lt;code&gt;goodnight moon!&lt;/code&gt;.</source>
          <target state="translated">次に、レンダリングされた値は &lt;code&gt;goodnight moon!&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="383574b7ea37c103687b50309270cd40f5759847" translate="yes" xml:space="preserve">
          <source>Then the value of &lt;code&gt;foo&lt;/code&gt; will be &lt;code&gt;baz&lt;/code&gt;, since it was the last definition seen.</source>
          <target state="translated">&lt;code&gt;foo&lt;/code&gt; の値は最後に定義されたため、 &lt;code&gt;baz&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="8fd13fbd35b9a37623508a61469e32e7a4852d84" translate="yes" xml:space="preserve">
          <source>Then, depending on where you specify overrides, the behavior can differ:</source>
          <target state="translated">そして、オーバーライドを指定する場所によって、動作が異なることがあります。</target>
        </trans-unit>
        <trans-unit id="d3e2b11e3f868b80cbb58fd93b6dec0a8aeb84ed" translate="yes" xml:space="preserve">
          <source>There are 2 configuration levels, &lt;code&gt;supervisor&lt;/code&gt; and &lt;code&gt;service&lt;/code&gt;. Configuration placed directly within the &lt;code&gt;provisioner&lt;/code&gt; block are supervisor configurations, and a provisioner can define zero or more services to run, and each service will have a &lt;code&gt;service&lt;/code&gt; block within the &lt;code&gt;provisioner&lt;/code&gt;. A &lt;code&gt;service&lt;/code&gt; block can also contain zero or more &lt;code&gt;bind&lt;/code&gt; blocks to create service group bindings.</source>
          <target state="translated">&lt;code&gt;supervisor&lt;/code&gt; と &lt;code&gt;service&lt;/code&gt; 2つの構成レベルがあります。 &lt;code&gt;provisioner&lt;/code&gt; ブロック内に直接配置される構成はスーパーバイザ構成であり、プロビジョナーは実行するサービスを0個以上定義でき、各サービスは &lt;code&gt;provisioner&lt;/code&gt; ナー内に &lt;code&gt;service&lt;/code&gt; ブロックを持ちます。 &lt;code&gt;service&lt;/code&gt; ブロックもゼロまたはそれ以上含むことができます &lt;code&gt;bind&lt;/code&gt; サービスグループバインディングを作成するために、ブロックを。</target>
        </trans-unit>
        <trans-unit id="ad73ec39e8464bda5a19c24998f4b978247cc8e6" translate="yes" xml:space="preserve">
          <source>There are 4 traffic resource options for each class, prefixed with the name of the traffic classes seen above.</source>
          <target state="translated">各クラスには4つのトラフィックリソースオプションがあり、上で見たトラフィッククラスの名前がプレフィックスになっています。</target>
        </trans-unit>
        <trans-unit id="b899ceee0e362e289a0574eca3584497e5067f68" translate="yes" xml:space="preserve">
          <source>There are &lt;a href=&quot;https://aws.amazon.com/marketplace/seller-profile?id=0ed48363-5064-4d47-b41b-a53f7c937314&quot;&gt;a few types&lt;/a&gt; of PAN-OS VMs available to bring up in AWS. Both these VMs as well as the ones that can be deployed in Google Cloud Platform are different in that the &lt;code&gt;admin&lt;/code&gt; password is unset, but it has an SSH key associated with it. As the panos Terraform provider package authenticates via username/password, an initialization step of configuring a password using the given SSH key is required. Right now, this initialization step requires manual intervention; the user must download this SSH key, at which point the following may be used to automate this initialization:</source>
          <target state="translated">AWSで利用できるPAN-OS VMに&lt;a href=&quot;https://aws.amazon.com/marketplace/seller-profile?id=0ed48363-5064-4d47-b41b-a53f7c937314&quot;&gt;はいくつかのタイプ&lt;/a&gt;があります。これらのVMとGoogle Cloud PlatformにデプロイできるVMはどちらも、 &lt;code&gt;admin&lt;/code&gt; パスワードが設定されていないという点で異なりますが、SSHキーが関連付けられています。panos Terraformプロバイダーパッケージはユーザー名/パスワードで認証するため、所定のSSHキーを使用してパスワードを設定する初期化ステップが必要です。現在、この初期化手順には手動での介入が必要です。ユーザーはこのSSHキーをダウンロードする必要があります。この時点で、以下を使用してこの初期化を自動化できます。</target>
        </trans-unit>
        <trans-unit id="9e42ab05a65e13b4efb708ab0dda577ef6bec0b7" translate="yes" xml:space="preserve">
          <source>There are &lt;strong&gt;meta-parameters&lt;/strong&gt; available to all resources:</source>
          <target state="translated">あり&lt;strong&gt;、メタパラメータの&lt;/strong&gt;すべてのリソースが利用可能に：</target>
        </trans-unit>
        <trans-unit id="f8698675a6c4b36e34b55a074c70ae2054b66235" translate="yes" xml:space="preserve">
          <source>There are a couple of exceptions to keep in mind when setting up a restricted provisioning user:</source>
          <target state="translated">制限付きプロビジョニングユーザを設定する際に注意すべき例外がいくつかあります。</target>
        </trans-unit>
        <trans-unit id="47bb6cfd2f6a1aba48085a8cf15103d2d3a2c598" translate="yes" xml:space="preserve">
          <source>There are a few possible reasons for authoring a custom Terraform provider, such as:</source>
          <target state="translated">カスタムTerraformプロバイダをオーサリングする理由としては、以下のようなものが考えられます。</target>
        </trans-unit>
        <trans-unit id="b8f8dec5d95d72185e584f0252f4c783247d488e" translate="yes" xml:space="preserve">
          <source>There are a variety of S3 bucket addressing schemes, most are &lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro&quot;&gt;documented in the S3 configuration&lt;/a&gt;. Here are a couple of examples.</source>
          <target state="translated">S3バケットアドレッシングスキームにはさまざまなものがありますが、ほとんどは&lt;a href=&quot;http://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro&quot;&gt;S3構成に記載されています&lt;/a&gt;。次に例をいくつか示します。</target>
        </trans-unit>
        <trans-unit id="e0a6e6e3977f13eb9a7a35eaeeba271b23d66108" translate="yes" xml:space="preserve">
          <source>There are a variety of available variable references you can use.</source>
          <target state="translated">使用可能な変数参照は様々です。</target>
        </trans-unit>
        <trans-unit id="d9c82eb7a4c50858d63f881e843c503d0fd18bcc" translate="yes" xml:space="preserve">
          <source>There are also a number of other parameters that can be set to tune how the provider connects to the NSX REST API. It is recommended you leave these to the defaults unless you experience issues in which case they can be tuned to optimize the system in your environment.</source>
          <target state="translated">プロバイダが NSX REST API に接続する方法を調整するために設定できるパラメータは他にも多数あります。問題が発生しない限り、これらのパラメータはデフォルトのままにしておくことをお勧めします。</target>
        </trans-unit>
        <trans-unit id="691c57485bccffc8170066d9ce25b137bb3607be" translate="yes" xml:space="preserve">
          <source>There are at least 2 steps involved in scheduling your first container on a Kubernetes cluster. You need the Kubernetes cluster with all its components running &lt;em&gt;somewhere&lt;/em&gt; and then schedule the Kubernetes resources, like Pods, Replication Controllers, Services etc.</source>
          <target state="translated">Kubernetesクラスターで最初のコンテナーをスケジュールするには、少なくとも2つのステップが必要です。すべてのコンポーネントが&lt;em&gt;どこか&lt;/em&gt;で実行されているKubernetesクラスターが必要であり、ポッド、レプリケーションコントローラー、サービスなどのKubernetesリソースをスケジュールします。</target>
        </trans-unit>
        <trans-unit id="8336324053c291a253fcfb7d94c1a3ef81155814" translate="yes" xml:space="preserve">
          <source>There are certain points in time that you may need to locate the managed object ID of a specific vSphere resource yourself. A couple of methods are documented below.</source>
          <target state="translated">特定の vSphere リソースの管理オブジェクト ID を自分で検索する必要がある場合があります。以下に、いくつかの方法を説明します。</target>
        </trans-unit>
        <trans-unit id="ffadd1ead725d03e7d3e7a977b591d0e863c2c63" translate="yes" xml:space="preserve">
          <source>There are certainly duplicates</source>
          <target state="translated">確かに重複がある</target>
        </trans-unit>
        <trans-unit id="a25429a07326ab0d662ab5684d14eb5512dd0dbd" translate="yes" xml:space="preserve">
          <source>There are currently 9 traffic classes that can be used for network I/O control - they are below.</source>
          <target state="translated">ネットワーク I/O 制御に使用できるトラフィッククラスは現在 9 つあります。</target>
        </trans-unit>
        <trans-unit id="a3c46cb0203c1105d2c6bb2eb192d588358ebb34" translate="yes" xml:space="preserve">
          <source>There are generally two ways to configure the Kubernetes provider.</source>
          <target state="translated">Kubernetesのプロバイダを設定する方法は一般的に2つあります。</target>
        </trans-unit>
        <trans-unit id="1dd9f085d1c27f3d6e647defa4530a209a74de4a" translate="yes" xml:space="preserve">
          <source>There are many types of Dataflow jobs. Some Dataflow jobs run constantly, getting new data from (e.g.) a GCS bucket, and outputting data continuously. Some jobs process a set amount of data then terminate. All jobs can fail while running due to programming errors or other issues. In this way, Dataflow jobs are different from most other Terraform / Google resources.</source>
          <target state="translated">Dataflow ジョブには多くの種類があります。Dataflow ジョブの中には、(例)GCS バケットから新しいデータを取得し、継続的にデータを出力しながら継続的に実行しているものもあります。ジョブの中には、設定された量のデータを処理した後に終了するものもあります。すべてのジョブは、実行中にプログラミングエラーやその他の問題で失敗する可能性があります。このように、Dataflow ジョブは他の Terraform/Google リソースとは異なります。</target>
        </trans-unit>
        <trans-unit id="1a19cf1d89ecd92b63696b4e9529533753731bbd" translate="yes" xml:space="preserve">
          <source>There are no arguments available for this data source.</source>
          <target state="translated">このデータソースには引数はありません。</target>
        </trans-unit>
        <trans-unit id="13b89bd4c20417da67aecfdb4a1124ce51192efa" translate="yes" xml:space="preserve">
          <source>There are no outputs for this resource.</source>
          <target state="translated">このリソースの出力はありません。</target>
        </trans-unit>
        <trans-unit id="ea908d3f049a093b2384d28330ef7f0573794e8f" translate="yes" xml:space="preserve">
          <source>There are only a handful of node types that can exist within the graph. We'll cover these first before explaining how they're determined and built:</source>
          <target state="translated">グラフ内に存在することができるノードタイプは一握りしかありません。まず最初にこれらのタイプを取り上げてから、それらがどのように決定され、構築されるのかを説明します。</target>
        </trans-unit>
        <trans-unit id="6cf72dcc456597359751288e1182d96eb8e06de1" translate="yes" xml:space="preserve">
          <source>There are several data sources (such as &lt;a href=&quot;d/datacenter&quot;&gt;&lt;code&gt;vsphere_datacenter&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/host&quot;&gt;&lt;code&gt;vsphere_host&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/resource_pool&quot;&gt;&lt;code&gt;vsphere_resource_pool&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;d/datastore&quot;&gt;&lt;code&gt;vsphere_datastore&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;d/network&quot;&gt;&lt;code&gt;vsphere_network&lt;/code&gt;&lt;/a&gt;) that assist with searching for a specific resource in Terraform. For usage details on a specific data source, look for the appropriate link in the sidebar. In addition, most vSphere resources in Terraform supply the managed object ID (or UUID, when it makes more sense) as the &lt;code&gt;id&lt;/code&gt; attribute, which can be supplied to downstream resources that should depend on the parent.</source>
          <target state="translated">Terraformで特定のリソースを検索するのに役立ついくつかのデータソース（&lt;a href=&quot;d/datacenter&quot;&gt; &lt;code&gt;vsphere_datacenter&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;d/host&quot;&gt; &lt;code&gt;vsphere_host&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;d/resource_pool&quot;&gt; &lt;code&gt;vsphere_resource_pool&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;d/datastore&quot;&gt; &lt;code&gt;vsphere_datastore&lt;/code&gt; &lt;/a&gt;、&lt;a href=&quot;d/network&quot;&gt; &lt;code&gt;vsphere_network&lt;/code&gt; など&lt;/a&gt;）があります。特定のデータソースの使用法の詳細については、サイドバーで適切なリンクを探してください。さらに、TerraformのほとんどのvSphereリソースは、管理対象オブジェクトID（または、意味がある場合はUUID）を &lt;code&gt;id&lt;/code&gt; 属性として提供します。これは、親に依存する必要があるダウンストリームリソースに提供できます。</target>
        </trans-unit>
        <trans-unit id="cc0334ac4f11ffb53e538c6cb3df01062306ce69" translate="yes" xml:space="preserve">
          <source>There are several different kinds of contribution, each of which has its own standards for a speedy review. The following sections describe guidelines for each type of contribution.</source>
          <target state="translated">投稿にはいくつかの種類があり、それぞれがスピーディーな審査のための基準を持っています。以下のセクションでは、投稿の種類ごとのガイドラインを説明します。</target>
        </trans-unit>
        <trans-unit id="c38817f848031d8fabbd88db5cd8e233b17c1211" translate="yes" xml:space="preserve">
          <source>There are some notes to consider when connecting Instances to networks using Ports. Please see the &lt;code&gt;flexibleengine_compute_instance_v2&lt;/code&gt; documentation for further documentation.</source>
          <target state="translated">ポートを使用してインスタンスをネットワークに接続する際に注意すべき点がいくつかあります。詳細については、 &lt;code&gt;flexibleengine_compute_instance_v2&lt;/code&gt; のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="8bdc9b26a7d290de9cd4f1d996a1ac5ad63730cd" translate="yes" xml:space="preserve">
          <source>There are some notes to consider when connecting Instances to networks using Ports. Please see the &lt;code&gt;openstack_compute_instance_v2&lt;/code&gt; documentation for further documentation.</source>
          <target state="translated">ポートを使用してインスタンスをネットワークに接続する際に注意すべき点がいくつかあります。詳細については、 &lt;code&gt;openstack_compute_instance_v2&lt;/code&gt; のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="1599f59aaf2cd8ffd1f571ebff9662387724bf31" translate="yes" xml:space="preserve">
          <source>There are some notes to consider when connecting Instances to networks using Ports. Please see the &lt;code&gt;opentelekomcloud_compute_instance_v2&lt;/code&gt; documentation for further documentation.</source>
          <target state="translated">ポートを使用してインスタンスをネットワークに接続する際に注意すべき点がいくつかあります。詳細については、 &lt;code&gt;opentelekomcloud_compute_instance_v2&lt;/code&gt; のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="6754a1af2ea33a7b985d7bc073dc7e582b885e7d" translate="yes" xml:space="preserve">
          <source>There are some notes to consider when connecting Instances to networks using Ports. Please see the &lt;code&gt;telefonicaopencloud_compute_instance_v2&lt;/code&gt; documentation for further documentation.</source>
          <target state="translated">ポートを使用してインスタンスをネットワークに接続する際に注意すべき点がいくつかあります。詳細については、 &lt;code&gt;telefonicaopencloud_compute_instance_v2&lt;/code&gt; のドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="17c206680b0ea3fa53d538125d45ec58518d8228" translate="yes" xml:space="preserve">
          <source>There are some special concerns when running &lt;code&gt;init&lt;/code&gt; in such an environment, including optionally making plugins available locally to avoid repeated re-installation. For more information, see &lt;a href=&quot;https://www.terraform.io/guides/running-terraform-in-automation.html&quot;&gt;&lt;code&gt;Running Terraform in Automation&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">このような環境で &lt;code&gt;init&lt;/code&gt; を実行する場合、再インストールの繰り返しを回避するためにオプションでプラグインをローカルで使用できるようにするなど、いくつかの特別な懸念があります。詳細については、「&lt;a href=&quot;https://www.terraform.io/guides/running-terraform-in-automation.html&quot;&gt; &lt;code&gt;Running Terraform in Automation&lt;/code&gt; &lt;/a&gt;を実行する」を参照してください。</target>
        </trans-unit>
        <trans-unit id="8a0d8a45833cfb6c39851832fc87562a9f208d7d" translate="yes" xml:space="preserve">
          <source>There are two different ways to identify the snapshot in which to restore the storage volume:</source>
          <target state="translated">ストレージボリュームをリストアするスナップショットを特定する方法は2つあります。</target>
        </trans-unit>
        <trans-unit id="178760e633947d769f440e878e1f32d8f72c5345" translate="yes" xml:space="preserve">
          <source>There are two tasks needed to create a Service Principal via &lt;a href=&quot;https://portal.azure.com&quot;&gt;the Azure Portal&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;https://portal.azure.com&quot;&gt;Azure Portalを&lt;/a&gt;介してサービスプリンシパルを作成するには、次の2つのタスクが必要です。</target>
        </trans-unit>
        <trans-unit id="b19a7175cee7f80a68b891e8b774d7451faa93e4" translate="yes" xml:space="preserve">
          <source>There are two types of locations, regional or multi-regional. A regional location is a specific geographic place, such as Tokyo, and a multi-regional location is a large geographic area, such as the United States, that contains at least two geographic places</source>
          <target state="translated">ロケーションには、地域的なロケーションと複数の地域的なロケーションの2種類があります。地域的な場所とは、東京のような特定の地理的な場所のことであり、多地域的な場所とは、米国のような広い地理的なエリアで、少なくとも2つの地理的な場所が含まれていることです。</target>
        </trans-unit>
        <trans-unit id="e5c4685e435090c8f01e9cd8a78552ce27a89ebb" translate="yes" xml:space="preserve">
          <source>There are two types of plugins supported by Terraform:</source>
          <target state="translated">Terraformがサポートするプラグインには2種類あります。</target>
        </trans-unit>
        <trans-unit id="ff9963cae60e9496f58ff7e27436fd26061f2db1" translate="yes" xml:space="preserve">
          <source>There are various use cases for removing items from a Terraform state file. The most common is refactoring a configuration to no longer manage that resource (perhaps moving it to another Terraform configuration/state).</source>
          <target state="translated">Terraform ステートファイルからアイテムを削除するには、さまざまなユースケースがあります。最も一般的なのは、リソースを管理しないようにコンフィグレーションをリファクタリングすることです(おそらく別のTerraformコンフィグレーション/ステートに移動させる)。</target>
        </trans-unit>
        <trans-unit id="1cdabf6d2cf12df96064b9e69ceb2b66787d1e1d" translate="yes" xml:space="preserve">
          <source>There is a significant downside to this approach. Statically compiled binaries are much larger than dynamically-linked binaries because they include everything they need to run. And because Terraform shares a lot of code with its plugins, there is a lot of binary data duplicated between each of these programs.</source>
          <target state="translated">このアプローチには大きな欠点があります。静的にコンパイルされたバイナリは、動的にリンクされたバイナリに比べて、実行に必要なすべてのものが含まれているため、非常に大きくなります。また、Terraform はプラグインと多くのコードを共有しているため、これらのプログラム間では多くのバイナリデータが重複しています。</target>
        </trans-unit>
        <trans-unit id="822e48efc994e0734015513a7bc0de00132c0003" translate="yes" xml:space="preserve">
          <source>There is no way currently to unset map values in Terraform. Whenever a map is modified either via variable input or being passed into a module, the values are always merged.</source>
          <target state="translated">現在のところ、Terraform にはマップ値の設定を解除する方法はありません。変数入力やモジュールに渡されたマップが変更されると、常に値がマージされます。</target>
        </trans-unit>
        <trans-unit id="b0bb6d4f3f8b6da8fcc9e88070cae381d23cd468" translate="yes" xml:space="preserve">
          <source>There were several major deprecation notices introduced in 2.0.0. This reviews the details of each and provides migration instructions to the appropriate resources.</source>
          <target state="translated">2.0.0 で導入されたいくつかの主要な非推奨の通知がありましたが、これはそれぞれの詳細をレビューし、適切なリソースへの移行指示を提供します。</target>
        </trans-unit>
        <trans-unit id="b1da3dd6a8b96b36d686bba7195883b7fe548518" translate="yes" xml:space="preserve">
          <source>Therefore in a development environment with frequent deployments it may be convenient to set a relatively-short expiration time and use early renewal to automatically provision a new certificate when the current one is about to expire.</source>
          <target state="translated">そのため、デプロイが頻繁に行われる開発環境では、比較的短い有効期限を設定して、現在の証明書の有効期限が切れそうになったときに自動的に新しい証明書を提供するために、早期更新を利用すると便利かもしれません。</target>
        </trans-unit>
        <trans-unit id="3a216d4590191bc63c6dbd10cdb91d75318e7158" translate="yes" xml:space="preserve">
          <source>Therefore, for mapping configuration to resources in the real world, Terraform uses its own state structure.</source>
          <target state="translated">そのため、実世界のリソースに設定をマッピングするために、Terraformは独自の状態構造を使用しています。</target>
        </trans-unit>
        <trans-unit id="5ed50e90b20c90ab39c7743340508140ecdb48af" translate="yes" xml:space="preserve">
          <source>Therefore, you can enter the source of any module, satisfy any required variables, run &lt;code&gt;terraform apply&lt;/code&gt;, and expect it to work.</source>
          <target state="translated">したがって、任意のモジュールのソースを入力し、必要な変数を満たし、 &lt;code&gt;terraform apply&lt;/code&gt; を実行して、それが機能することを期待できます。</target>
        </trans-unit>
        <trans-unit id="cd76a6a3480a1c69bd6fb5abd188ec27cfd0fdf1" translate="yes" xml:space="preserve">
          <source>These are unsupported because the endpoint needs to be authorized and does not generate an ARN until the target email address has been validated. This breaks the Terraform model and as a result are not currently supported.</source>
          <target state="translated">これらはサポートされていません。なぜなら、エンドポイントは認証を受ける必要があり、ターゲットのメールアドレスが検証されるまで ARN を生成しないからです。これはTerraformモデルを壊しているため、現在はサポートされていません。</target>
        </trans-unit>
        <trans-unit id="2663b027015ccfb0c5f982d1afd68d109d300796" translate="yes" xml:space="preserve">
          <source>These arguments are inserted directly &lt;em&gt;after&lt;/em&gt; the subcommand (such as &lt;code&gt;plan&lt;/code&gt;) and &lt;em&gt;before&lt;/em&gt; any flags specified directly on the command-line. This behavior ensures that flags on the command-line take precedence over environment variables.</source>
          <target state="translated">これらの引数は、サブコマンド（ &lt;code&gt;plan&lt;/code&gt; など）の&lt;em&gt;直後&lt;/em&gt;、およびコマンドラインで直接指定されたフラグの&lt;em&gt;前に&lt;/em&gt;挿入されます。この動作により、コマンドラインのフラグが環境変数よりも優先されます。&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f3d1040f51aa0b1e97589e17bd6adaa5f60a64da" translate="yes" xml:space="preserve">
          <source>These arguments are supported for backwards compatibility, and may be removed in a future version:</source>
          <target state="translated">これらの引数は下位互換性のためにサポートされており、将来のバージョンでは削除される可能性があります。</target>
        </trans-unit>
        <trans-unit id="a55b2640432d3a9d530f6a5edbbe2a57e59f79c0" translate="yes" xml:space="preserve">
          <source>These attributes are exported, but they are expected to change over time and so should only be used for informational purposes, not for resource dependencies:</source>
          <target state="translated">これらの属性はエクスポートされますが、時間の経過とともに変化することが予想されるため、情報提供のみを目的として使用し、リソースの依存関係には使用しないようにしてください。</target>
        </trans-unit>
        <trans-unit id="5571e09d964f3a064f99c0dfa2e2cea55b88f53f" translate="yes" xml:space="preserve">
          <source>These can be specified as &quot;on&quot; or &quot;off&quot; string. Similar to boolean values, but here the empty string also means to use the existing value. Attributes available:</source>
          <target state="translated">これらは &quot;on &quot;または &quot;off &quot;の文字列として指定することができます。ブーリアン値と似ていますが、ここでは空文字列も既存の値を使用することを意味します。利用可能な属性。</target>
        </trans-unit>
        <trans-unit id="78e0a5172a4925f77a8c9aa4b69c01cef9d14149" translate="yes" xml:space="preserve">
          <source>These changes only update Terraform state when applied, hence it is safe to run when the virtual machine is running. If more settings are being modified, you may need to plan maintenance accordingly for any necessary re-configuration of the virtual machine.</source>
          <target state="translated">これらの変更は適用されたときにのみ Terraform の状態を更新するため、仮想マシンが実行されているときに実行しても安全です。より多くの設定が変更されている場合、仮想マシンの再設定が必要な場合は、それに応じてメンテナンスを計画する必要があるかもしれません。</target>
        </trans-unit>
        <trans-unit id="8d3d25b50765fb2c2d115ae734d89997db2039e6" translate="yes" xml:space="preserve">
          <source>These endpoints list modules according to some criteria.</source>
          <target state="translated">これらのエンドポイントは、いくつかの基準に従ってモジュールをリストアップします。</target>
        </trans-unit>
        <trans-unit id="75b0a17f4cf2a8e8c30121baa8b660bf91f58f74" translate="yes" xml:space="preserve">
          <source>These examples assume the following Terraform output snippet.</source>
          <target state="translated">これらの例では、次のようなTerraformの出力スニペットを想定しています。</target>
        </trans-unit>
        <trans-unit id="cefdda29cf2d7484d6aefb6523fa5d814b5f2a5e" translate="yes" xml:space="preserve">
          <source>These functions usually test only for the resource directly under test: we skip the check that the &lt;code&gt;azurerm_resource_group&lt;/code&gt; has been destroyed when testing &lt;code&gt;azurerm_resource_group&lt;/code&gt;, under the assumption that &lt;code&gt;azurerm_resource_group&lt;/code&gt; is tested independently in its own acceptance tests.</source>
          <target state="translated">これらの関数は通常、テスト対象のリソースのみをテストします &lt;code&gt;azurerm_resource_group&lt;/code&gt; が独自の受け入れテストで個別にテストされるという前提で、 &lt;code&gt;azurerm_resource_group&lt;/code&gt; のテスト時に &lt;code&gt;azurerm_resource_group&lt;/code&gt; が破棄されていることのチェックをスキップします。</target>
        </trans-unit>
        <trans-unit id="2285f481f62918582bbbc1443d15e5750d37dc1e" translate="yes" xml:space="preserve">
          <source>These inherit their settings from the replication group.</source>
          <target state="translated">これらはレプリケーショングループの設定を継承します。</target>
        </trans-unit>
        <trans-unit id="0d915e809dc5c64378a136b1bee09c70cc8921d1" translate="yes" xml:space="preserve">
          <source>These parameters can be used to ensure that service is being provided before Terraform moves on. If new instances don't pass the ELB's health checks for any reason, the Terraform apply will time out, and the ASG will be marked as tainted (i.e. marked to be destroyed in a follow up run).</source>
          <target state="translated">これらのパラメータは、Terraformが移動する前にサービスが提供されていることを確認するために使用できます。新しいインスタンスが何らかの理由でELBのヘルスチェックをパスしない場合、Terraformの適用はタイムアウトし、ASGは汚染されたものとしてマークされます(つまり、フォローアップランで破壊されるようにマークされます)。</target>
        </trans-unit>
        <trans-unit id="cab0d9df8b4fc8198c160e919d43c82150011063" translate="yes" xml:space="preserve">
          <source>These resources have been updated (or created) to use the correct catalog APIs as with &lt;code&gt;consul_catalog_entry&lt;/code&gt;, but provide a first-class resource name.</source>
          <target state="translated">これらのリソースは、 &lt;code&gt;consul_catalog_entry&lt;/code&gt; と同様に正しいカタログAPIを使用するように更新（または作成）されていますが、ファーストクラスのリソース名を提供しています。</target>
        </trans-unit>
        <trans-unit id="2db8fe2b3e776a673419c1313556eaeee3e38604" translate="yes" xml:space="preserve">
          <source>These settings require vSphere 6.0 or higher:</source>
          <target state="translated">これらの設定には、vSphere 6.0 以上が必要です。</target>
        </trans-unit>
        <trans-unit id="a1821743bc371198f86952acf57bcaee91e5f095" translate="yes" xml:space="preserve">
          <source>These settings require vSphere 6.5 or higher:</source>
          <target state="translated">これらの設定には、vSphere 6.5 以上が必要です。</target>
        </trans-unit>
        <trans-unit id="ae9e627652d2a5b71823e3de37448c4ec474ae70" translate="yes" xml:space="preserve">
          <source>These two packages are both &quot;main&quot; packages that can be built into separate executables with &lt;code&gt;go install&lt;/code&gt;:</source>
          <target state="translated">これら2つのパッケージはどちらも「メイン」パッケージであり、 &lt;code&gt;go install&lt;/code&gt; を使用して個別の実行可能ファイルにビルドできます。</target>
        </trans-unit>
        <trans-unit id="beff9a447c74d1b20428e01d0de05ec7c3df5578" translate="yes" xml:space="preserve">
          <source>These values map to the Terraform variables like so:</source>
          <target state="translated">これらの値は、以下のようにTerraform変数にマッピングされます。</target>
        </trans-unit>
        <trans-unit id="3e5a20915859676b0aa56c4b062553482ca39dcd" translate="yes" xml:space="preserve">
          <source>These will fetch the modules using HTTPS. If you want to use SSH instead:</source>
          <target state="translated">これらは HTTPS を使ってモジュールを取得します。代わりにSSHを使いたい場合</target>
        </trans-unit>
        <trans-unit id="96d8eb61a039a0b6d31643340cb064b50b3c6983" translate="yes" xml:space="preserve">
          <source>They accept positive integer query variables &lt;code&gt;offset&lt;/code&gt; and &lt;code&gt;limit&lt;/code&gt; which have the usual SQL-like semantics. Each endpoint will have a sane default limit and a default offset of &lt;code&gt;0&lt;/code&gt;. Each endpoint will also apply a sane maximum limit, requesting more results will just result in the maximum limit being used.</source>
          <target state="translated">これらは、通常のSQLのようなセマンティクスを持つ正の整数のクエリ変数の &lt;code&gt;offset&lt;/code&gt; と &lt;code&gt;limit&lt;/code&gt; を受け入れます。各エンドポイントには、適切なデフォルト制限とデフォルトオフセット &lt;code&gt;0&lt;/code&gt; があります。各エンドポイントは、まともな最大制限も適用します。より多くの結果を要求すると、最大制限が使用されます。</target>
        </trans-unit>
        <trans-unit id="db8fa0de0548c3007dfcd5d3e0b5a48a9fd1783b" translate="yes" xml:space="preserve">
          <source>Third-Party Integrations</source>
          <target state="translated">サードパーティの統合</target>
        </trans-unit>
        <trans-unit id="ae3f7cc351d36204b32513e32bd1744353b84a52" translate="yes" xml:space="preserve">
          <source>Third-party Plugins</source>
          <target state="translated">サードパーティプラグイン</target>
        </trans-unit>
        <trans-unit id="2dd4a9991b699f91620bfe417e3b984437b8cfa3" translate="yes" xml:space="preserve">
          <source>Third-party providers can be manually installed by placing their plugin executables in one of the following locations depending on the host operating system:</source>
          <target state="translated">サードパーティのプロバイダは、ホストのオペレーティングシステムに応じて、プラグインの実行ファイルを以下のいずれかの場所に配置することで、手動でインストールすることができます。</target>
        </trans-unit>
        <trans-unit id="34c5f1d33d724a529f3fa7bb2608d45bfa05f851" translate="yes" xml:space="preserve">
          <source>This allows fine-grained control over when provisioners run in the dependency graph.</source>
          <target state="translated">これにより、依存性グラフでプロビジョナがいつ実行されるかを細かく制御することができます。</target>
        </trans-unit>
        <trans-unit id="55a0f4b8946eb5a261955ea3f6931d25b695d55c" translate="yes" xml:space="preserve">
          <source>This allows the user to have full control over the attributes supplied to an instance during instance creation. There are, as well, some attributes that get populated during instance creation, and the full attributes map can be seen via the exported &lt;code&gt;attributes&lt;/code&gt; attribute.</source>
          <target state="translated">これにより、ユーザーはインスタンスの作成時にインスタンスに提供される属性を完全に制御できます。同様に、インスタンスの作成中に入力されるいくつかの属性があり、完全な属性マップはエクスポートされた &lt;code&gt;attributes&lt;/code&gt; 属性を介して見ることができます。</target>
        </trans-unit>
        <trans-unit id="0224b1684f4abf701afb866453f1689ff3469ff9" translate="yes" xml:space="preserve">
          <source>This allows volumes to be attached to servers.</source>
          <target state="translated">これにより、ボリュームをサーバーにアタッチすることができます。</target>
        </trans-unit>
        <trans-unit id="b44ccb744333e2511e2a181ff6b07d973ccd5b1e" translate="yes" xml:space="preserve">
          <source>This allows you to manage your webhooks on a repository.</source>
          <target state="translated">これにより、リポジトリ上のウェブフックを管理することができます。</target>
        </trans-unit>
        <trans-unit id="0ac5cb2ea3ebd0827f9c80cfcb416baa7a824509" translate="yes" xml:space="preserve">
          <source>This alternate example details how to clone a VM from a template that came from an OVF/OVA file. This leverages the resource's &lt;a href=&quot;#using-vapp-properties-to-supply-ovf-ova-configuration&quot;&gt;vApp properties&lt;/a&gt; capabilities to set appropriate keys that control various configuration settings on the virtual machine or virtual appliance. In this scenario, using &lt;code&gt;customize&lt;/code&gt; is not recommended as the functionality has tendency to overlap.</source>
          <target state="translated">この代替例では、OVF / OVAファイルから取得したテンプレートからVMを複製する方法について詳しく説明します。これは、リソースの&lt;a href=&quot;#using-vapp-properties-to-supply-ovf-ova-configuration&quot;&gt;vAppプロパティ&lt;/a&gt;機能を利用して、仮想マシンまたは仮想アプライアンスのさまざまな構成設定を制御する適切なキーを設定します。このシナリオでは、機能が重複する傾向があるため、 &lt;code&gt;customize&lt;/code&gt; 使用は推奨されません。</target>
        </trans-unit>
        <trans-unit id="4703f71a64bc7c3ca145e6fdd0d5f74a717f89b9" translate="yes" xml:space="preserve">
          <source>This approach is recommended in the common case where only a single configuration is needed for each provider across the entire configuration.</source>
          <target state="translated">このアプローチは、構成全体に渡って各プロバイダに対して単一の構成のみが必要な一般的なケースで推奨されています。</target>
        </trans-unit>
        <trans-unit id="07d38cf69c26ac2618d86ebb68019520bcc1b3eb" translate="yes" xml:space="preserve">
          <source>This assumes we have a bucket created called &lt;code&gt;mybucket&lt;/code&gt;. The Terraform state is written to the key &lt;code&gt;path/to/my/key&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;mybucket&lt;/code&gt; という名前のバケットが作成されていることを前提としています。Terraform状態はキー &lt;code&gt;path/to/my/key&lt;/code&gt; に書き込まれます。</target>
        </trans-unit>
        <trans-unit id="4b68ed37ca8d6f6bad879416ca155999e6a3908f" translate="yes" xml:space="preserve">
          <source>This attribute has been deprecated. Use the &lt;a href=&quot;google_service_account_iam&quot;&gt;google_service_account_iam_* resources&lt;/a&gt; instead.</source>
          <target state="translated">この属性は廃止されました。代わりに&lt;a href=&quot;google_service_account_iam&quot;&gt;google_service_account_iam_ *リソースを&lt;/a&gt;使用してください。</target>
        </trans-unit>
        <trans-unit id="74ae7e4ce13e7b3e4a2509efc8953fb81d8ef42b" translate="yes" xml:space="preserve">
          <source>This backend supports &lt;a href=&quot;../../state/locking&quot;&gt;state locking&lt;/a&gt;.</source>
          <target state="translated">このバックエンドは&lt;a href=&quot;../../state/locking&quot;&gt;状態ロックを&lt;/a&gt;サポートしています。</target>
        </trans-unit>
        <trans-unit id="ee1393fe46bd093b28df26ceaa7dd1eed0e89724" translate="yes" xml:space="preserve">
          <source>This behavior was adopted from the standard behavior of &lt;a href=&quot;https://linux.die.net/man/1/rsync&quot;&gt;rsync&lt;/a&gt;.</source>
          <target state="translated">この動作は、&lt;a href=&quot;https://linux.die.net/man/1/rsync&quot;&gt;rsync&lt;/a&gt;の標準動作から採用されました。</target>
        </trans-unit>
        <trans-unit id="6e0a0dfe31a43e8eff3b1a1078b4d3a7233631f6" translate="yes" xml:space="preserve">
          <source>This can be set prior to running the unit tests to opt-out of any tests requiring remote network connectivity. The unit tests make an attempt to automatically detect when connectivity is unavailable and skip the relevant tests, but by setting this variable you can force these tests to be skipped.</source>
          <target state="translated">これは、ユニットテストを実行する前に設定して、リモートネットワーク接続を必要とするテストをオプトアウトすることができます。ユニットテストは、接続が利用できない場合に自動的に検出し、関連するテストをスキップしようとしますが、この変数を設定することで、これらのテストを強制的にスキップさせることができます。</target>
        </trans-unit>
        <trans-unit id="bbcc96466ef477cdb434fb97faa5f1900516b5cf" translate="yes" xml:space="preserve">
          <source>This can be used both to validate a prefix list given in a variable and to obtain the CIDR blocks (IP address ranges) for the associated AWS service. The latter may be useful e.g. for adding network ACL rules.</source>
          <target state="translated">これは、変数で与えられたプレフィックスリストの検証と、関連するAWSサービスのCIDRブロック(IPアドレス範囲)の取得の両方に利用できます。後者は、例えばネットワークのACLルールを追加するのに便利です。</target>
        </trans-unit>
        <trans-unit id="a898ab1d247ff5e6f831c4e4b33739d90306cb90" translate="yes" xml:space="preserve">
          <source>This can be used both to validate an availability zone given in a variable and to split the AZ name into its component parts of an AWS region and an AZ identifier letter. The latter may be useful e.g. for implementing a consistent subnet numbering scheme across several regions by mapping both the region and the subnet letter to network numbers.</source>
          <target state="translated">これは、変数で与えられたアベイラビリティゾーンを検証したり、AZ名をAWSのリージョンとAZの識別子文字に分割したりするために使用することができます。後者は、例えば、リージョンとサブネット文字の両方をネットワーク番号にマッピングすることで、複数のリージョン間で一貫したサブネット番号付けスキームを実装するのに便利です。</target>
        </trans-unit>
        <trans-unit id="010842ac0094e1277c0212efff6b370d0a027d95" translate="yes" xml:space="preserve">
          <source>This can be used for simple resource renaming, moving items to and from a module, moving entire modules, and more. And because this command can also move data to a completely new state, it can also be used for refactoring one configuration into multiple separately managed Terraform configurations.</source>
          <target state="translated">これは、単純なリソースのリネーム、モジュールへのアイテムの移動、モジュール全体の移動などに使用できます。また、このコマンドはデータを完全に新しい状態に移動させることもできるので、1つのコンフィグレーションを複数の別々に管理されたTerraformコンフィグレーションにリファクタリングする際にも使用することができます。</target>
        </trans-unit>
        <trans-unit id="ddeb1e05e2adba2353e1e2acc6ffaee605524c7e" translate="yes" xml:space="preserve">
          <source>This can be used to initialize your cluster with system jobs, common services, and more. In day to day Nomad use it is common for developers to submit jobs to Nomad directly, such as for general app deployment. In addition to these apps, a Nomad cluster often runs core system services that are ideally setup during infrastructure creation. This resource is ideal for the latter type of job, but can be used to manage any job within Nomad.</source>
          <target state="translated">これはシステムジョブや共通サービスなどでクラスタを初期化するために使用することができます。日常的なNomadの利用では、一般的なアプリのデプロイなど、開発者が直接Nomadにジョブを投入するのが一般的です。これらのアプリに加えて、Nomadクラスタはコアシステムサービスを実行していることが多く、インフラストラクチャの構築時に理想的に設定されます。このリソースは後者のタイプのジョブに最適ですが、Nomad内のあらゆるジョブを管理するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="2b2e1e7ba9542f550f98db517bcc45ff704da9b1" translate="yes" xml:space="preserve">
          <source>This command &lt;em&gt;will not&lt;/em&gt; modify infrastructure, but does modify the state file in order to mark a resource as tainted. Once a resource is marked as tainted, the next &lt;a href=&quot;plan&quot;&gt;plan&lt;/a&gt; will show that the resource will be destroyed and recreated and the next &lt;a href=&quot;apply&quot;&gt;apply&lt;/a&gt; will implement this change.</source>
          <target state="translated">このコマンド&lt;em&gt;は&lt;/em&gt;インフラストラクチャを変更し&lt;em&gt;ません&lt;/em&gt;が、汚染されたリソースをマークするために状態ファイルを変更します。リソースが汚染されているとマークされると、次の&lt;a href=&quot;plan&quot;&gt;計画で&lt;/a&gt;は、リソースが破棄されて再作成され、次の&lt;a href=&quot;apply&quot;&gt;適用で&lt;/a&gt;この変更が実装されることが示されます。</target>
        </trans-unit>
        <trans-unit id="f4b126b382d1025a5b9c729ccd1e252c2f841fe0" translate="yes" xml:space="preserve">
          <source>This command &lt;em&gt;will not&lt;/em&gt; modify infrastructure, but does modify the state file in order to unmark a resource as tainted.</source>
          <target state="translated">このコマンド&lt;em&gt;は&lt;/em&gt;インフラストラクチャを変更し&lt;em&gt;ません&lt;/em&gt;が、汚染されたリソースのマークを外すために状態ファイルを変更します。</target>
        </trans-unit>
        <trans-unit id="880018b100e51397c1fafd6db6c86c016c1ddfa0" translate="yes" xml:space="preserve">
          <source>This command &lt;strong&gt;does not&lt;/strong&gt; check formatting (e.g. tabs vs spaces, newlines, comments etc.).</source>
          <target state="translated">このコマンド&lt;strong&gt;は&lt;/strong&gt;フォーマットをチェック&lt;strong&gt;しません&lt;/strong&gt;（たとえば、タブとスペース、改行、コメントなど）。</target>
        </trans-unit>
        <trans-unit id="2d4530165ff5b154e81c03f759114f4e4b03916d" translate="yes" xml:space="preserve">
          <source>This command accepts all the arguments and flags that the &lt;a href=&quot;apply&quot;&gt;apply command&lt;/a&gt; accepts, with the exception of a plan file argument.</source>
          <target state="translated">このコマンドは、計画ファイル引数を除いて、&lt;a href=&quot;apply&quot;&gt;apply&lt;/a&gt;コマンドが受け入れるすべての引数とフラグを受け入れます。</target>
        </trans-unit>
        <trans-unit id="70408063ba0290e8c34f6c206bc7670488050f0e" translate="yes" xml:space="preserve">
          <source>This command flags that this object must be re-created in the next Terraform plan, so a subsequent &lt;code&gt;terraform apply&lt;/code&gt; will then replace the deployment and thus activate the latest configuration changes.</source>
          <target state="translated">このコマンドは、このオブジェクトを次のTerraformプランで再作成する必要があることを示すフラグです。これにより、後続のTerraformの &lt;code&gt;terraform apply&lt;/code&gt; によってデプロイメントが置き換えられ、最新の構成変更がアクティブになります。</target>
        </trans-unit>
        <trans-unit id="a019cae9b457689e95efd7ca76dae8ac1ec46e4a" translate="yes" xml:space="preserve">
          <source>This command gives an overview of all of the current dependencies, as an aid to understanding why a particular provider is needed.</source>
          <target state="translated">このコマンドは、特定のプロバイダが必要な理由を理解するための助けとして、現在のすべての依存関係の概要を提供します。</target>
        </trans-unit>
        <trans-unit id="8378fb1040000bb7458341e5deff77afab056b77" translate="yes" xml:space="preserve">
          <source>This command is a container for further subcommands. These subcommands are listed in the navigation bar.</source>
          <target state="translated">このコマンドは、さらなるサブコマンドのためのコンテナです。これらのサブコマンドはナビゲーションバーに表示されます。</target>
        </trans-unit>
        <trans-unit id="466d7987824390e769aadd1c6769612659d5e739" translate="yes" xml:space="preserve">
          <source>This command is a convenient way to check whether the execution plan for a set of changes matches your expectations without making any changes to real resources or to the state. For example, &lt;code&gt;terraform plan&lt;/code&gt; might be run before committing a change to version control, to create confidence that it will behave as expected.</source>
          <target state="translated">このコマンドは、実際のリソースや状態に変更を加えることなく、一連の変更の実行計画が期待どおりかどうかを確認する便利な方法です。たとえば、 &lt;code&gt;terraform plan&lt;/code&gt; は、バージョン管理への変更をコミットする前に実行して、期待どおりに動作することを確認することができます。</target>
        </trans-unit>
        <trans-unit id="f59d0b1feb96300f69785af8ce2be80e5d3aad7e" translate="yes" xml:space="preserve">
          <source>This command is a nested subcommand, meaning that it has further subcommands. These subcommands are listed to the left.</source>
          <target state="translated">このコマンドは入れ子になっているサブコマンドであり、それ以上のサブコマンドがあることを意味します。これらのサブコマンドは左にリストアップされています。</target>
        </trans-unit>
        <trans-unit id="1bd49e52791989154042f93cad808a7ed899a71b" translate="yes" xml:space="preserve">
          <source>This command is always safe to run multiple times, to bring the working directory up to date with changes in the configuration. Though subsequent runs may give errors, this command will never delete your existing configuration or state.</source>
          <target state="translated">このコマンドは常に複数回実行しても安全で、設定の変更に合わせて作業ディレクトリを最新の状態に保つことができます。その後の実行でエラーが発生することがありますが、このコマンドは既存の設定や状態を削除することはありません。</target>
        </trans-unit>
        <trans-unit id="0f50f7e35efa2920f7f49b12719a943f9519a077" translate="yes" xml:space="preserve">
          <source>This command locates the AWS instance with ID &lt;code&gt;i-abcd1234&lt;/code&gt; and attaches its existing settings, as described by the EC2 API, to the name &lt;code&gt;aws_instance.example&lt;/code&gt; in the Terraform state.</source>
          <target state="translated">このコマンドは、IDが &lt;code&gt;i-abcd1234&lt;/code&gt; のAWSインスタンスを特定し、EC2 APIで記述されている既存の設定をTerraform状態の名前 &lt;code&gt;aws_instance.example&lt;/code&gt; にアタッチします。</target>
        </trans-unit>
        <trans-unit id="caba3a43260ce387e34a7fa777a997f705726326" translate="yes" xml:space="preserve">
          <source>This command performs several different initialization steps in order to prepare a working directory for use. More details on these are in the sections below, but in most cases it is not necessary to worry about these individual steps.</source>
          <target state="translated">このコマンドは、使用するための作業ディレクトリを準備するために、いくつかの異なる初期化ステップを実行します。これらについての詳細は以下のセクションで説明しますが、ほとんどの場合、これらの個別のステップを気にする必要はありません。</target>
        </trans-unit>
        <trans-unit id="a4b58ea2481d3345220f2f605b32bfad91794843" translate="yes" xml:space="preserve">
          <source>This command requires a address that points to a single resource in the state. Addresses are in &lt;a href=&quot;addressing&quot;&gt;resource addressing format&lt;/a&gt;.</source>
          <target state="translated">このコマンドには、状態の単一のリソースを指すアドレスが必要です。アドレスは&lt;a href=&quot;addressing&quot;&gt;リソースアドレス形式です&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="aa82cee053280bfed72f956a385da0df952b4398" translate="yes" xml:space="preserve">
          <source>This command requires a source and destination address of the item to move. Addresses are in &lt;a href=&quot;addressing&quot;&gt;resource addressing format&lt;/a&gt;.</source>
          <target state="translated">このコマンドでは、移動するアイテムの送信元と宛先のアドレスが必要です。アドレスは&lt;a href=&quot;addressing&quot;&gt;リソースアドレス形式です&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="27ef4580d9d3b3498f06ffb476825a024002190a" translate="yes" xml:space="preserve">
          <source>This command requires one or more addresses that point to a resources in the state. Addresses are in &lt;a href=&quot;addressing&quot;&gt;resource addressing format&lt;/a&gt;.</source>
          <target state="translated">このコマンドには、状態のリソースを指す1つ以上のアドレスが必要です。アドレスは&lt;a href=&quot;addressing&quot;&gt;リソースアドレス形式です&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="478092c4bba5c45a0f7b98aab046ce15ac3b3b95" translate="yes" xml:space="preserve">
          <source>This command should rarely be used. It is meant only as a utility in case manual intervention is necessary with the remote state.</source>
          <target state="translated">このコマンドはめったに使用しないでください。これは、リモート状態に手動で介入する必要がある場合のユーティリティとしてのみ意味します。</target>
        </trans-unit>
        <trans-unit id="fc3ff4d8dde168524c2d8209b5db781ef0881f43" translate="yes" xml:space="preserve">
          <source>This command will create a new workspace with the given name. A workspace with this name must not already exist.</source>
          <target state="translated">このコマンドは、指定された名前の新しいワークスペースを作成します。この名前のワークスペースは、既に存在してはいけません。</target>
        </trans-unit>
        <trans-unit id="41f977673529627ba6874c322f476a912e58f777" translate="yes" xml:space="preserve">
          <source>This command will delete the specified workspace.</source>
          <target state="translated">このコマンドは、指定したワークスペースを削除します。</target>
        </trans-unit>
        <trans-unit id="8c0f7ef8243119c39e9f3c1ab1849c8cb50be34d" translate="yes" xml:space="preserve">
          <source>This command will download any modules that haven't been updated already, as well as performing other Terraform working directory initialization such as installing providers.</source>
          <target state="translated">このコマンドは、まだ更新されていないモジュールをダウンロードし、プロバイダのインストールなど、Terraformの作業ディレクトリの初期化を行います。</target>
        </trans-unit>
        <trans-unit id="2529874bcc496823935a7e206e80e5412339e81c" translate="yes" xml:space="preserve">
          <source>This command will download the state from its current location and output the raw format to stdout.</source>
          <target state="translated">このコマンドは、現在の場所から状態をダウンロードし、生のフォーマットを標準出力に出力します。</target>
        </trans-unit>
        <trans-unit id="0ecda9a87730046f636b241ba75f47a961f28466" translate="yes" xml:space="preserve">
          <source>This command will move an item matched by the address given to the destination address. This command can also move to a destination address in a completely different state file.</source>
          <target state="translated">このコマンドは、移動先アドレスに指定されたアドレスにマッチしたアイテムを移動します。このコマンドは、全く異なる状態のファイル内の移動先アドレスに移動することもできます。</target>
        </trans-unit>
        <trans-unit id="d41ee65976faf9a72901f3925b100a157f10e640" translate="yes" xml:space="preserve">
          <source>This command will output 5 values:</source>
          <target state="translated">このコマンドは5つの値を出力します。</target>
        </trans-unit>
        <trans-unit id="3af0b5143217b3358e90dfec637671806db6c0eb" translate="yes" xml:space="preserve">
          <source>This command will output a backup copy of the state prior to saving any changes. The backup cannot be disabled. Due to the destructive nature of this command, backups are required.</source>
          <target state="translated">このコマンドは、変更を保存する前の状態のバックアップコピーを出力します。バックアップを無効にすることはできません。このコマンドの破壊的な性質のため、バックアップが必要です。</target>
        </trans-unit>
        <trans-unit id="fa930d1dcb14abdfcbc1eb463ba44929f8f20533" translate="yes" xml:space="preserve">
          <source>This command will push the state specified by PATH to the currently configured &lt;a href=&quot;../../backends&quot;&gt;backend&lt;/a&gt;.</source>
          <target state="translated">このコマンドは、PATHで指定された状態を現在構成されている&lt;a href=&quot;../../backends&quot;&gt;バックエンドに&lt;/a&gt;プッシュします。</target>
        </trans-unit>
        <trans-unit id="fa258287f8bf36e8bf8b5c2f07fcf65a83e74857" translate="yes" xml:space="preserve">
          <source>This command will select another workspace. The named workspace must already exist.</source>
          <target state="translated">このコマンドは、別のワークスペースを選択します。指定されたワークスペースは既に存在している必要があります。</target>
        </trans-unit>
        <trans-unit id="36f2d0819f366588008ce9987dd79b75e52e77d3" translate="yes" xml:space="preserve">
          <source>This config denies all traffic in the Default ACL. This can be useful if you want a locked down default to force all resources in the VPC to assign a non-default ACL.</source>
          <target state="translated">この設定は、デフォルト ACL のすべてのトラフィックを拒否します。これは、デフォルトをロックダウンして、VPC 内のすべてのリソースにデフォルト以外の ACL を強制的に割り当てたい場合に便利です。</target>
        </trans-unit>
        <trans-unit id="46127da7589ba1d6cdff6f7b6f5185641a534447" translate="yes" xml:space="preserve">
          <source>This config will write a single service unit (shown below) with the contents of an example service. This unit will be enabled as a dependency of multi-user.target and therefore start on boot</source>
          <target state="translated">この設定では、サービスの例の内容を含む単一のサービスユニット(以下に示す)を書き込みます。このユニットは multi-user.target の依存関係として有効になり、起動時に起動します。</target>
        </trans-unit>
        <trans-unit id="510058f8cded2853c8ccaa45dad4809fe030a15c" translate="yes" xml:space="preserve">
          <source>This data source allows to find a Hosted Zone ID given Hosted Zone name and certain search criteria.</source>
          <target state="translated">このデータソースでは、ホストゾーン名と特定の検索条件を指定してホストゾーンIDを検索することができます。</target>
        </trans-unit>
        <trans-unit id="030ed910aec2f4a515cc5162ff154bc94dea1f75" translate="yes" xml:space="preserve">
          <source>This data source allows you to use data encrypted with Google Cloud KMS within your resource definitions.</source>
          <target state="translated">このデータソースでは、Google Cloud KMSで暗号化されたデータをリソース定義内で使用することができます。</target>
        </trans-unit>
        <trans-unit id="3ede5ac1e4b34a4a0d6d2d4f77095dbc500728bb" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM group. By using this data source, you can reference IAM group properties without having to hard code ARNs as input.</source>
          <target state="translated">このデータソースは、特定のIAMグループに関する情報を取得するために使用することができます。このデータソースを使用することで、入力としてARNをハードコードすることなく、IAMグループのプロパティを参照することができます。</target>
        </trans-unit>
        <trans-unit id="20b5e00d0c3bbeaedb0a5bd4e6ba2a8be9dcfcc3" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM instance profile. By using this data source, you can reference IAM instance profile properties without having to hard code ARNs as input.</source>
          <target state="translated">このデータ・ソースは、特定のIAMインスタンス・プロファイルに関する情報を取得するために使用できます。このデータ・ソースを使用することで、入力として ARN をハード・コードすることなく、IAM インスタンス・プロファイルのプロパティを参照することができます。</target>
        </trans-unit>
        <trans-unit id="d6c143ca17e73f13ec4b149f4775de4b54ca6038" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM policy.</source>
          <target state="translated">このデータソースは、特定のIAMポリシーに関する情報を取得するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="bd58c29b3592a4b5a701bb407ea30571c28fdc16" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM role. By using this data source, you can reference IAM role properties without having to hard code ARNs as input.</source>
          <target state="translated">このデータソースは、特定のIAMロールに関する情報を取得するために使用することができます。このデータ・ソースを使用することで、入力としてARNをハード・コードすることなく、IAMロール・プロパティを参照することができます。</target>
        </trans-unit>
        <trans-unit id="326a2b7b7fce612b1c5568d7757aa9d2783d090c" translate="yes" xml:space="preserve">
          <source>This data source can be used to fetch information about a specific IAM user. By using this data source, you can reference IAM user properties without having to hard code ARNs or unique IDs as input.</source>
          <target state="translated">このデータソースは、特定のIAMユーザーに関する情報を取得するために使用することができます。このデータソースを使用することで、入力として ARN や一意の ID をハードコードすることなく、IAM ユーザーのプロパティを参照することができます。</target>
        </trans-unit>
        <trans-unit id="001c3886e4220915cf6b03ea0ae69ac25e0585cc" translate="yes" xml:space="preserve">
          <source>This data source can prove useful when a module accepts an LB Listener as an input variable and needs to know the LB it is attached to, or other information specific to the listener in question.</source>
          <target state="translated">このデータソースは、モジュールが入力変数として LB リスナーを受け入れ、それがアタッチされている LB や、問題のリスナーに固有の他の情報を知る必要がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="74da52f87f9b9281bea4590ad4bed24ab38ccfd9" translate="yes" xml:space="preserve">
          <source>This data source can prove useful when a module accepts an LB Target Group as an input variable and needs to know its attributes. It can also be used to get the ARN of an LB Target Group for use in other resources, given LB Target Group name.</source>
          <target state="translated">このデータソースは、モジュールが入力変数として LB ターゲットグループを受け入れ、その属性を知る必要がある場合に便利です。また、LB ターゲットグループ名を指定して、他のリソースで使用するための LB ターゲットグループの ARN を取得するためにも使用できます。</target>
        </trans-unit>
        <trans-unit id="8713370b52a95eeeaf252a06248f08977c31cd43" translate="yes" xml:space="preserve">
          <source>This data source can prove useful when a module accepts an LB as an input variable and needs to, for example, determine the security groups associated with it, etc.</source>
          <target state="translated">このデータソースは、モジュールが入力変数として LB を受け入れ、例えば、それに関連付けられたセキュリティグループを決定する必要がある場合などに便利です。</target>
        </trans-unit>
        <trans-unit id="793d6ce40a561d7ebc53f61b5c2e498f49621ca5" translate="yes" xml:space="preserve">
          <source>This data source fetches the project name, and provides the appropriate URLs to use for container registry for this project.</source>
          <target state="translated">このデータソースは、プロジェクト名を取得し、このプロジェクトのコンテナレジストリに使用する適切なURLを提供します。</target>
        </trans-unit>
        <trans-unit id="1f2495446cfb8b28e0eb692ac21fb8eb059cac18" translate="yes" xml:space="preserve">
          <source>This data source is different from the &lt;code&gt;consul_service&lt;/code&gt; (singular) data source, which provides a detailed response about a specific Consul service.</source>
          <target state="translated">このデータソースは、特定のConsulサービスに関する詳細な応答を提供する &lt;code&gt;consul_service&lt;/code&gt; （単一）データソースとは異なります。</target>
        </trans-unit>
        <trans-unit id="75788ef2062611bf04c5832afd2131847d23c77a" translate="yes" xml:space="preserve">
          <source>This data source is different from the &lt;code&gt;consul_services&lt;/code&gt; (plural) data source, which provides a summary of the current Consul services.</source>
          <target state="translated">このデータソースは、現在のConsulサービスの概要を提供する &lt;code&gt;consul_services&lt;/code&gt; （複数）データソースとは異なります。</target>
        </trans-unit>
        <trans-unit id="7ae5c2539ad97b455148df0585713f475a814f25" translate="yes" xml:space="preserve">
          <source>This data source is used to define IAM policies to apply to other resources. Currently, defining a policy through a datasource and referencing that policy from another resource is the only way to apply an IAM policy to a resource.</source>
          <target state="translated">このデータソースは、他のリソースに適用するIAMポリシーを定義するために使用されます。現在のところ、データソースを通じてポリシーを定義し、他のリソースからそのポリシーを参照することが、リソースにIAMポリシーを適用する唯一の方法です。</target>
        </trans-unit>
        <trans-unit id="2b3be4693faa82144de420a8b6b96524bb4e16b5" translate="yes" xml:space="preserve">
          <source>This data source provides information about Edge clusters configured in NSX. An Edge cluster is a collection of Edge nodes which can be deployed as either VM form-factor or bare-metal form-factor machines for connectivity between overlay logical switches and non-NSX underlay networking for north/south layer 2 or layer 3 connectivity. Each T0 router will be placed on one ore more Edge nodes in an Edge cluster therefore this data source is needed for the creation of T0 logical routers.</source>
          <target state="translated">このデータ ソースでは、NSX で構成された Edge クラスタに関する情報を提供します。エッジ クラスタは、オーバーレイ論理スイッチとNSX 以外のアンダーレイ ネットワーキング間の接続用に VM フォームファクタまたはベアメタル フォームファクタ マシンとしてデプロイ可能なエッジ ノードの集合体で、南北のレイヤ 2 またはレイヤ 3 接続を実現します。各T0ルータは、エッジクラスタ内の1つ以上のエッジノードに配置されるため、このデータソースはT0論理ルータの作成に必要となります。</target>
        </trans-unit>
        <trans-unit id="64f641de9b3f8e25fbc1b8bbaad8dbe217fafa75" translate="yes" xml:space="preserve">
          <source>This data source provides information about Transport Zones (TZ) configured in NSX. A Transport Zone defines the scope to which a network can extend in NSX. For example an overlay based Transport Zone is associated with both hypervisors and logical switches and defines which hypervisors will be able to serve the defined logical switch. Virtual machines on the hypervisor associated with a Transport Zone can be attached to logical switches in that same Transport Zone.</source>
          <target state="translated">このデータ ソースでは、NSX で構成されたトランスポート ゾーン(TZ)に関する情報を提供します。トランスポート ゾーンは、NSX でネットワークが拡張できる範囲を定義します。例えば、オーバーレイベースのトランスポートゾーンは、ハイパーバイザと論理スイッチの両方に関連付けられ、定義された論理スイッチにどのハイパーバイザがサービスを提供できるかを定義します。トランスポート ゾーンに関連付けられたハイパーバイザ上の仮想マシンは、同じトランスポート ゾーン内の論理スイッチにアタッチできます。</target>
        </trans-unit>
        <trans-unit id="506e414957f9e1173f66686a55c7a1889a8e6208" translate="yes" xml:space="preserve">
          <source>This data source provides information about a network and security (NS) service configured in NSX. NS services are either factory defined in NSX or can be defined by the NSX administrator. They provide a convenience name for a port/protocol pair that is often used in fire walling or load balancing.</source>
          <target state="translated">このデータ ソースは、NSX で構成されたネットワークおよびセキュリティ(NS)サービスに関する情報を提供します。NS サービスは、NSX で工場出荷時に定義されているか、NSX 管理者が定義できます。NS サービスは、ファイアウォールやロードバランシングでよく使用されるポート/プロトコルペアの便利な名前を提供します。</target>
        </trans-unit>
        <trans-unit id="1c3b1709b00380c9e583ffa96637b4692a598482" translate="yes" xml:space="preserve">
          <source>This data source provides information about logical Tier 0 routers configured in NSX. A Tier 0 router is used to connect NSX networking with traditional physical networking. Tier 0 routers are placed on an Edge cluster and will exist on one or more Edge node depending on deployment settings (i.e. active/active or active/passive). A Tier 0 router forwards layer 3 IP packets and typically peers with a traditional physical router using BGP or can use static routing.</source>
          <target state="translated">このデータソースは、NSX で構成された論理 Tier 0 ルーターに関する情報を提供します。Tier 0 ルーターは、NSX ネットワーキングと従来の物理ネットワーキングを接続するために使用されます。Tier 0 ルーターは Edge クラスターに配置され、配置設定(アクティブ/アクティブ、アクティブ/パッシブなど)に応じて 1 つ以上の Edge ノード上に存在します。Tier 0 ルーターは、レイヤ 3 IP パケットを転送し、通常は BGP を使用して従来の物理ルーターとピアリングするか、スタティック ルーティングを使用します。</target>
        </trans-unit>
        <trans-unit id="2aff7b013285885f444814e2ca1d95a33827b51c" translate="yes" xml:space="preserve">
          <source>This directory must already exist before Terraform will cache plugins; Terraform will not create the directory itself.</source>
          <target state="translated">このディレクトリは、Terraformがプラグインをキャッシュする前に既に存在していなければなりません。</target>
        </trans-unit>
        <trans-unit id="19f9b04d8caff89b0d22e1aff079a8ab4a28e34c" translate="yes" xml:space="preserve">
          <source>This does not actually attach a volume to an instance. Please use the &lt;code&gt;openstack_compute_volume_attach_v2&lt;/code&gt; resource for that.</source>
          <target state="translated">これは実際にはインスタンスにボリュームをアタッチしません。そのために &lt;code&gt;openstack_compute_volume_attach_v2&lt;/code&gt; リソースを使用してください。</target>
        </trans-unit>
        <trans-unit id="ca402e7f7814e0dcaeb6cf656d7d6cdf0003471c" translate="yes" xml:space="preserve">
          <source>This does not actually attach a volume to an instance. Please use the &lt;code&gt;openstack_compute_volume_attach_v3&lt;/code&gt; resource for that.</source>
          <target state="translated">これは実際にはインスタンスにボリュームをアタッチしません。そのために &lt;code&gt;openstack_compute_volume_attach_v3&lt;/code&gt; リソースを使用してください。</target>
        </trans-unit>
        <trans-unit id="381721fd1597318dcb7099b9e0a8302dd3ee8912" translate="yes" xml:space="preserve">
          <source>This does not modify infrastructure, but does modify the state file. If the state is changed, this may cause changes to occur during the next plan or apply.</source>
          <target state="translated">これはインフラストラクチャを変更するものではありませんが、ステートファイルを変更します。状態が変更されると、次の計画または適用時に変更が発生する可能性があります。</target>
        </trans-unit>
        <trans-unit id="503ab6404c97b3a1aa898e03215a5ddd3668a2f5" translate="yes" xml:space="preserve">
          <source>This endpoint allows searching modules.</source>
          <target state="translated">このエンドポイントでは、モジュールを検索することができます。</target>
        </trans-unit>
        <trans-unit id="961c3598b331b4caf28ac782d98dfefc60dac61a" translate="yes" xml:space="preserve">
          <source>This endpoint downloads the latest version of a module for a single provider.</source>
          <target state="translated">このエンドポイントは、単一のプロバイダのモジュールの最新バージョンをダウンロードします。</target>
        </trans-unit>
        <trans-unit id="b0a7984fe89a07c97fda3a51cb6133b52daeb967" translate="yes" xml:space="preserve">
          <source>This endpoint downloads the specified version of a module for a single provider.</source>
          <target state="translated">このエンドポイントは、単一のプロバイダの指定されたバージョンのモジュールをダウンロードします。</target>
        </trans-unit>
        <trans-unit id="f90689653a2233df7425dbb14c7132c359140c6e" translate="yes" xml:space="preserve">
          <source>This endpoint returns the latest version of a module for a single provider.</source>
          <target state="translated">このエンドポイントは、単一のプロバイダのモジュールの最新バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="a81b0917af405351d840b3eb7bae9021918148f9" translate="yes" xml:space="preserve">
          <source>This endpoint returns the latest version of each provider for a module.</source>
          <target state="translated">このエンドポイントは、モジュールの各プロバイダの最新バージョンを返します。</target>
        </trans-unit>
        <trans-unit id="99ad59a5b97306719a3787b149a9ecac43676b3b" translate="yes" xml:space="preserve">
          <source>This endpoint returns the specified version of a module for a single provider.</source>
          <target state="translated">このエンドポイントは、単一のプロバイダのモジュールの指定されたバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="c4a02208c73601f4c29131f467d87b40680a155f" translate="yes" xml:space="preserve">
          <source>This establishes the main function to produce a valid, executable Go binary. The contents of the main function consume Terraform's &lt;code&gt;plugin&lt;/code&gt; library. This library deals with all the communication between Terraform core and the plugin.</source>
          <target state="translated">これにより、有効な実行可能なGoバイナリを生成するメイン関数が確立されます。main関数の内容は、Terraformの &lt;code&gt;plugin&lt;/code&gt; ライブラリを使用します。このライブラリは、Terraformコアとプラグイン間のすべての通信を扱います。</target>
        </trans-unit>
        <trans-unit id="cee1ebf637ff335d2fe77592cc05997940548640" translate="yes" xml:space="preserve">
          <source>This example &lt;code&gt;addons_config&lt;/code&gt; disables two addons:</source>
          <target state="translated">この例の &lt;code&gt;addons_config&lt;/code&gt; は、2つのアドオンを無効にします。</target>
        </trans-unit>
        <trans-unit id="4d31375aa763d35ad692b5fc0cd7dc4336b5b408" translate="yes" xml:space="preserve">
          <source>This example creates a custom attribute named &lt;code&gt;terraform-test-attribute&lt;/code&gt;. The resulting custom attribute can be assigned to VMs only.</source>
          <target state="translated">この例では、 &lt;code&gt;terraform-test-attribute&lt;/code&gt; という名前のカスタム属性を作成します。結果のカスタム属性は、VMにのみ割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="ddbe40d64427096a005209cb6b53af0b721d7ce2" translate="yes" xml:space="preserve">
          <source>This example creates a tag category named &lt;code&gt;terraform-test-category&lt;/code&gt;, with single cardinality (meaning that only one tag in this category can be assigned to an object at any given time). Tags in this category can only be assigned to VMs and datastores.</source>
          <target state="translated">この例では、カーディナリティが1つである &lt;code&gt;terraform-test-category&lt;/code&gt; categoryという名前のタグカテゴリを作成します（つまり、このカテゴリの1つのタグのみが、常にオブジェクトに割り当てられることを意味します）。このカテゴリのタグは、VMとデータストアにのみ割り当てることができます。</target>
        </trans-unit>
        <trans-unit id="7a0897a4b29727cfda6c5fa13ce8e506507adbdc" translate="yes" xml:space="preserve">
          <source>This example creates a tag named &lt;code&gt;terraform-test-tag&lt;/code&gt;. This tag is assigned the &lt;code&gt;terraform-test-category&lt;/code&gt; category, which was created by the &lt;a href=&quot;tag_category&quot;&gt;&lt;code&gt;vsphere_tag_category&lt;/code&gt; resource&lt;/a&gt;. The resulting tag can be assigned to VMs and datastores only, and can be the only value in the category that can be assigned, as per the restrictions defined by the category.</source>
          <target state="translated">この例では、 &lt;code&gt;terraform-test-tag&lt;/code&gt; という名前のタグを作成します。このタグには、&lt;a href=&quot;tag_category&quot;&gt; &lt;code&gt;vsphere_tag_category&lt;/code&gt; &lt;/a&gt;リソースによって作成されたterraform &lt;code&gt;terraform-test-category&lt;/code&gt; カテゴリが割り当てられます。結果のタグはVMとデータストアにのみ割り当てることができ、カテゴリで定義された制限に従って、カテゴリ内で割り当てることができる唯一の値にすることができます。</target>
        </trans-unit>
        <trans-unit id="b969d1d711b9587f79787b503c4596e0eaf2c283" translate="yes" xml:space="preserve">
          <source>This example defines a local child module in the &lt;code&gt;./publish_bucket&lt;/code&gt; subdirectory. That module has configuration to create an S3 bucket. The module wraps the bucket and all the other implementation details required to configure a bucket.</source>
          <target state="translated">この例では、。 &lt;code&gt;./publish_bucket&lt;/code&gt; サブディレクトリにローカルの子モジュールを定義しています。そのモジュールには、S3バケットを作成する構成があります。このモジュールは、バケットと、バケットの構成に必要なその他すべての実装の詳細をラップします。</target>
        </trans-unit>
        <trans-unit id="bd298b72ae52628de77f66ce5fd481b2ec1f5729" translate="yes" xml:space="preserve">
          <source>This example is the common case of creating a repository within Google Cloud Source Repositories:</source>
          <target state="translated">この例は、Google Cloud Source Repositories内にリポジトリを作成する場合によくあるケースです。</target>
        </trans-unit>
        <trans-unit id="b65b463438becb1ee94d4781017bac2a04b36b34" translate="yes" xml:space="preserve">
          <source>This example sets the trunk mode VLAN (&lt;code&gt;4095&lt;/code&gt;, which passes through all tags) and sets &lt;a href=&quot;host_virtual_switch#allow_promiscuous&quot;&gt;&lt;code&gt;allow_promiscuous&lt;/code&gt;&lt;/a&gt; to ensure that all traffic is seen on the port. The latter setting overrides the implicit default of &lt;code&gt;false&lt;/code&gt; set on the virtual switch.</source>
          <target state="translated">この例では、トランクモードVLAN（ &lt;code&gt;4095&lt;/code&gt; 、すべてのタグを通過）を設定し、&lt;a href=&quot;host_virtual_switch#allow_promiscuous&quot;&gt; &lt;code&gt;allow_promiscuous&lt;/code&gt; &lt;/a&gt;を設定して、すべてのトラフィックがポートで確実に認識されるようにします。後者の設定は、仮想スイッチで暗黙的に設定されているデフォルトの &lt;code&gt;false&lt;/code&gt; を上書きします。</target>
        </trans-unit>
        <trans-unit id="e66e500899a5c6d51971a017cfbf85eacf5701b7" translate="yes" xml:space="preserve">
          <source>This example shows how to customize the TLS settings of an HTTPS listener.</source>
          <target state="translated">この例では、HTTPS リスナーの TLS 設定をカスタマイズする方法を示します。</target>
        </trans-unit>
        <trans-unit id="6bc0caa5ca2a8418856d4c7721b39677bd33b87b" translate="yes" xml:space="preserve">
          <source>This example shows how to enable backend authentication for an ELB as well as customize the TLS settings.</source>
          <target state="translated">この例では、ELBのバックエンド認証を有効にし、TLS設定をカスタマイズする方法を示しています。</target>
        </trans-unit>
        <trans-unit id="2162e9b51d9e6acfb20db851802212c206478a0e" translate="yes" xml:space="preserve">
          <source>This example will import an AWS instance:</source>
          <target state="translated">この例ではAWSインスタンスをインポートします。</target>
        </trans-unit>
        <trans-unit id="86fa4cd7aeab57084d29a2e88ac4419f26f2042c" translate="yes" xml:space="preserve">
          <source>This example will list all resources, including modules:</source>
          <target state="translated">この例では、モジュールを含むすべてのリソースを一覧表示します。</target>
        </trans-unit>
        <trans-unit id="8aa4ad2afe87474dd8d5bfd7b85f8849c794faef" translate="yes" xml:space="preserve">
          <source>This example will only list resources for the given name:</source>
          <target state="translated">この例では、指定された名前のリソースのみをリストアップします。</target>
        </trans-unit>
        <trans-unit id="0d124174505cfcf6d38596834d9ce461c2dbadd9" translate="yes" xml:space="preserve">
          <source>This example will only list resources in the given module:</source>
          <target state="translated">この例では、指定されたモジュール内のリソースのみをリストアップします。</target>
        </trans-unit>
        <trans-unit id="4b2991fd76dccdd2bd7beeec3818241995546313" translate="yes" xml:space="preserve">
          <source>This example will only list the resource whose ID is specified on the command line. This is useful to find where in your configuration a specific resource is located.</source>
          <target state="translated">この例では、コマンドラインで ID が指定されたリソースのみをリストアップします。これは、特定のリソースが設定のどこにあるかを見つけるのに便利です。</target>
        </trans-unit>
        <trans-unit id="801a2faa6053ec3283d5dde81d9842cc32db9041" translate="yes" xml:space="preserve">
          <source>This example will only taint a resource within a module:</source>
          <target state="translated">この例では、モジュール内のリソースのみを汚染します。</target>
        </trans-unit>
        <trans-unit id="ac94b391f1c694e200ed37c429b0bd3e6fd9841f" translate="yes" xml:space="preserve">
          <source>This example will taint a single resource:</source>
          <target state="translated">この例では、単一のリソースを汚染します。</target>
        </trans-unit>
        <trans-unit id="6be084e4bc258be1df28e81455723dafd765f48d" translate="yes" xml:space="preserve">
          <source>This file allows you to define some variables that can be reused in multiple .tf files.</source>
          <target state="translated">このファイルでは、複数の.tfファイルで再利用できる変数を定義することができます。</target>
        </trans-unit>
        <trans-unit id="688cc06ef18598eeab9482f3def5129d251adb72" translate="yes" xml:space="preserve">
          <source>This file allows you to set some variables that can be reused in multiple .tf files.</source>
          <target state="translated">このファイルでは、複数の.tfファイルで再利用できる変数を設定することができます。</target>
        </trans-unit>
        <trans-unit id="f199590efdc1b3be1433d681dd1a540ba83fc5c2" translate="yes" xml:space="preserve">
          <source>This file will define the logical networking topology that Terraform will create in NSX.</source>
          <target state="translated">このファイルは、TerraformがNSXで作成する論理ネットワークトポロジーを定義します。</target>
        </trans-unit>
        <trans-unit id="03d3614234a7335b64e1b0e06c99ba7952b2597e" translate="yes" xml:space="preserve">
          <source>This group includes cloud providers offering a range of services including IaaS, SaaS, and PaaS offerings. This group of cloud providers includes some smaller scale clouds or ones with more specialized offerings. The Terraform provider and associated resources for these clouds are primarily supported by the cloud vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">このグループには、IaaS、SaaS、PaaSなどのサービスを提供するクラウドプロバイダーが含まれます。このグループには、小規模なクラウドや、より専門的なサービスを提供するクラウド・プロバイダーも含まれています。これらのクラウドのテラフォーム・プロバイダーと関連リソースは、主にクラウド・ベンダーがHashiCorpと緊密に協力してサポートし、HashiCorpによってテストされています。</target>
        </trans-unit>
        <trans-unit id="183386cf5fdd34c38acf9e95cfa49813832d4d5c" translate="yes" xml:space="preserve">
          <source>This group includes hyper-scale cloud providers that offer a range of services including IaaS, SaaS, and PaaS. A large percentage of Terraform users provision their infrastructure on these major cloud providers. HashiCorp closely partners with these cloud providers to offer best-in-class integration to provision and manage the majority of the services offered. These providers are primarily supported by the cloud vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">このグループには、IaaS、SaaS、PaaSなど、さまざまなサービスを提供するハイパースケール・クラウド・プロバイダーが含まれています。Terraformユーザの大部分は、これらの主要なクラウド・プロバイダでインフラストラクチャをプロビジョニングしています。HashiCorpは、これらのクラウドプロバイダーと緊密に連携し、クラス最高の統合機能を提供し、提供されるサービスの大部分をプロビジョニングおよび管理しています。これらのプロバイダーは、主にクラウドベンダーがHashiCorpと緊密に協力してサポートし、HashiCorpによってテストされています。</target>
        </trans-unit>
        <trans-unit id="a0f70cdeb90d21ee4507ac2519020511bfa10ee9" translate="yes" xml:space="preserve">
          <source>This guide assumes that you have &lt;a href=&quot;https://github.com/Azure/azure-cli&quot;&gt;the Azure CLI 2.0 (Python)&lt;/a&gt; installed.</source>
          <target state="translated">このガイドでは&lt;a href=&quot;https://github.com/Azure/azure-cli&quot;&gt;、Azure CLI 2.0（Python）が&lt;/a&gt;インストールされていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="4ef3ad297f55c41fd3e0ef844310898acc67523a" translate="yes" xml:space="preserve">
          <source>This guide covers the schema and structure for implementing a Terraform provider using the provider framework. As next steps, reference the internal providers for examples. Terraform also includes a full framework for testing providers.</source>
          <target state="translated">このガイドでは、プロバイダ・フレームワークを使用して Terraform プロバイダを実装するためのスキーマと構造について説明します。次のステップとして、内部プロバイダの例を参照してください。Terraformには、プロバイダをテストするための完全なフレームワークも含まれています。</target>
        </trans-unit>
        <trans-unit id="e2acf3d77bcb3e739b9962ad3c494d0125cf41d1" translate="yes" xml:space="preserve">
          <source>This guide creates a very simple API Gateway Configuration with a single resource that passes through all requests to a single destination. The upgrade steps then modify only the AWS Lambda function, leaving the API Gateway configuration unchanged.</source>
          <target state="translated">このガイドでは、すべてのリクエストを単一の宛先に通過させる単一のリソースを使用して、非常にシンプルなAPI Gateway構成を作成します。アップグレードのステップでは、AWS Lambda関数のみを変更し、API Gatewayの設定は変更しません。</target>
        </trans-unit>
        <trans-unit id="84465be9de92a26fc8acb356066eb0886ab3060c" translate="yes" xml:space="preserve">
          <source>This guide focuses mainly on the latter part and expects you to have a properly configured &amp;amp; running Kubernetes cluster.</source>
          <target state="translated">このガイドは主に後半部分に焦点を当てており、適切に構成され実行されているKubernetesクラスターを持っていることを前提としています。</target>
        </trans-unit>
        <trans-unit id="8c2e642a1a973c9a1faca902151eff4dd5bc63bc" translate="yes" xml:space="preserve">
          <source>This guide will show how to deploy a sample architecture using Terraform. The guide assumes some basic familiarity with Kubernetes but does not assume any pre-existing deployment. It also assumes that you are familiar with the usual Terraform plan/apply workflow; if you're new to Terraform itself, refer first to &lt;a href=&quot;https://www.terraform.io/intro/getting-started/install.html&quot;&gt;the Getting Started guide&lt;/a&gt;.</source>
          <target state="translated">このガイドでは、Terraformを使用してサンプルアーキテクチャをデプロイする方法を示します。このガイドは、Kubernetesについてある程度の基本的な知識があることを前提としていますが、既存のデプロイを想定していません。また、通常のTerraform計画/適用ワークフローに精通していることも前提としています。Terraform自体を初めて使用する場合&lt;a href=&quot;https://www.terraform.io/intro/getting-started/install.html&quot;&gt;は、&lt;/a&gt;最初にスタートガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="270b58b5e25e819fa878a52dc375c3771ffdc8a8" translate="yes" xml:space="preserve">
          <source>This guide will show how to deploy such an architecture using Terraform. The guide assumes some basic familiarity with Lambda and API Gateway but does not assume any pre-existing deployment. It also assumes that you are familiar with the usual Terraform plan/apply workflow; if you're new to Terraform itself, refer first to &lt;a href=&quot;https://www.terraform.io/intro/getting-started/install.html&quot;&gt;the Getting Started guide&lt;/a&gt;.</source>
          <target state="translated">このガイドでは、Terraformを使用してこのようなアーキテクチャをデプロイする方法を示します。このガイドは、LambdaとAPI Gatewayの基本的な知識があることを前提としていますが、既存のデプロイは想定していません。また、通常のTerraform計画/適用ワークフローに精通していることも前提としています。Terraform自体を初めて使用する場合&lt;a href=&quot;https://www.terraform.io/intro/getting-started/install.html&quot;&gt;は、&lt;/a&gt;最初にスタートガイドを参照してください。</target>
        </trans-unit>
        <trans-unit id="f242707a7e0abdff76b8c8805b269f7f470d77e7" translate="yes" xml:space="preserve">
          <source>This information can then be fed into a provisioner or a template shell script, where the final result would look something like:</source>
          <target state="translated">この情報をプロビジョナーやテンプレートシェルスクリプトに入力すると、最終的な結果は次のようになります。</target>
        </trans-unit>
        <trans-unit id="e79188694c70c4edb6d17ee6a2001c15e60a9b20" translate="yes" xml:space="preserve">
          <source>This integration uses the new DNSimple API v2 &lt;a href=&quot;https://blog.dnsimple.com/2016/12/api-v2-stable/&quot;&gt;released on December 2016&lt;/a&gt;. The API v2 provides support for multi-accounts and requires a new authentication mechanism.</source>
          <target state="translated">この統合では、&lt;a href=&quot;https://blog.dnsimple.com/2016/12/api-v2-stable/&quot;&gt;2016年12月にリリースされ&lt;/a&gt;た新しいDNSimple API v2を使用します。API v2はマルチアカウントのサポートを提供し、新しい認証メカニズムを必要とします。</target>
        </trans-unit>
        <trans-unit id="9b82f3cedc93433a08ee27b986aedee54ef0980d" translate="yes" xml:space="preserve">
          <source>This interface is extremely low level, however, and we don't recommend you implement it directly. Implementing the interface directly is error prone, complicated, and difficult.</source>
          <target state="translated">しかし、このインターフェイスは非常に低レベルなものであり、直接実装することはお勧めしません。直接実装することは、エラーが発生しやすく、複雑で困難です。</target>
        </trans-unit>
        <trans-unit id="4413b8e76cbec8956f84ade2fc4c7d16a528797f" translate="yes" xml:space="preserve">
          <source>This is a &lt;em&gt;logical resource&lt;/em&gt;, so it contributes only to the current Terraform state and does not create any external managed resources.</source>
          <target state="translated">これは&lt;em&gt;論理リソース&lt;/em&gt;であるため、現在のTerraform状態にのみ寄与し、外部の管理対象リソースを作成しません。</target>
        </trans-unit>
        <trans-unit id="07bfa42ff2128d2ffc9361d59edaa9cf13db5e0b" translate="yes" xml:space="preserve">
          <source>This is a data source which can be used to construct a JSON representation of an IAM policy document, for use with resources which expect policy documents, such as the &lt;code&gt;aws_iam_policy&lt;/code&gt; resource.</source>
          <target state="translated">これは、 &lt;code&gt;aws_iam_policy&lt;/code&gt; リソースなどのポリシードキュメントを期待するリソースで使用するために、IAMポリシードキュメントのJSON表現を構築するために使用できるデータソースです。</target>
        </trans-unit>
        <trans-unit id="0d7caf81dc3149f9bd6ca6ba3a7a5275be094712" translate="yes" xml:space="preserve">
          <source>This is a good milestone! The first version of the application is deployed and accessible. Next we will see how to deploy a new version of the application.</source>
          <target state="translated">これは良い節目です! アプリケーションの最初のバージョンがデプロイされ、アクセス可能になりました。次に、新しいバージョンのアプリケーションをデプロイする方法を見てみましょう。</target>
        </trans-unit>
        <trans-unit id="07d029cb3cb25dfca0ee3ec3e8039644f7f2840a" translate="yes" xml:space="preserve">
          <source>This is a great way to slowly transition infrastructure to Terraform, or to be able to be confident that you can use Terraform in the future if it potentially doesn't support every feature you need today.</source>
          <target state="translated">これは、インフラストラクチャをゆっくりとTerraformに移行したい場合や、将来的にTerraformが必要な機能をすべてサポートしていない可能性がある場合に、自信を持ってTerraformを使用できるようにするために最適な方法です。</target>
        </trans-unit>
        <trans-unit id="608fede3468a1fe145254314d5f370958f127eed" translate="yes" xml:space="preserve">
          <source>This is a group of Version Control System (VCS) providers that offer capabilities of using Terraform to manage your VCS projects, teams and repositories. Terraform integrates with these services to create and manage resources provided by the VCS. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">VCSのプロジェクト、チーム、リポジトリを管理するためにTerraformを使用する機能を提供するバージョン管理システム(VCS)プロバイダーのグループです。Terraformは、これらのサービスと統合して、VCSが提供するリソースの作成と管理を行います。これらのプロバイダは、主にベンダーがHashiCorpと緊密に協力してサポートし、HashiCorpによってテストされています。</target>
        </trans-unit>
        <trans-unit id="f3e149d4c603ee8a317154b12592636d80eb0469" translate="yes" xml:space="preserve">
          <source>This is a group of database providers offer specific capabilities to provision and configure your database resources. Terraform integrates with with these database services using the specific provider to provision and manages database resources. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">これは、データベースリソースのプロビジョニングと設定を行うための特定の機能を提供するデータベースプロバイダのグループです。Terraformは、特定のプロバイダを使用してこれらのデータベース・サービスと統合し、データベース・リソースのプロビジョニングと管理を行います。これらのプロバイダは、主にベンダーがHashiCorpと緊密に協力してサポートしており、HashiCorpによってテストされています。</target>
        </trans-unit>
        <trans-unit id="04b5c7c33b8adb44aa9d4178abaaec2d88d17b2b" translate="yes" xml:space="preserve">
          <source>This is a group of miscellaneous providers offer specific capabilities that can be useful when working with Terraform. These providers are primarily supported by the vendors and the Terraform community, and are tested by HashiCorp.</source>
          <target state="translated">これは、Terraformを使用する際に役立つ特定の機能を提供している雑多なプロバイダのグループです。これらのプロバイダは、主にベンダーとTerraformコミュニティによってサポートされており、HashiCorpによってテストされています。</target>
        </trans-unit>
        <trans-unit id="9c78c022df9db3226ace0861f7281884bd22f00b" translate="yes" xml:space="preserve">
          <source>This is a group of monitoring &amp;amp; system management providers that offer the capability to configure and manage services such as loggers, metric tools, and monitoring services. Terraform integrates with these services using the specific provider to enable these specialized monitoring capabilities. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">これは、ロガー、メトリックツール、監視サービスなどのサービスを構成および管理する機能を提供する監視およびシステム管理プロバイダーのグループです。Terraformは、特定のプロバイダーを使用してこれらのサービスと統合し、これらの特殊な監視機能を有効にします。これらのプロバイダーは、主にベンダーによってHashiCorpと密接に連携してサポートされており、HashiCorpによってテストされています。</target>
        </trans-unit>
        <trans-unit id="e80a22c6fd16702f6b454f521c897a43ac564a14" translate="yes" xml:space="preserve">
          <source>This is a group of network providers that offer specific network capabilities such and DNS, routing, and firewall configuration. The providers generally offer a cloud-based service and Terraform integrates with these services using the specific providers. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">これは、DNS、ルーティング、ファイアウォール設定などの特定のネットワーク機能を提供するネットワークプロバイダのグループです。プロバイダは一般的にクラウドベースのサービスを提供しており、Terraformは特定のプロバイダを使用してこれらのサービスと統合しています。これらのプロバイダは、主にベンダーがHashiCorpと緊密に協力してサポートし、HashiCorpがテストを行っています。</target>
        </trans-unit>
        <trans-unit id="0dcd949ae16e3db7453e2df20c09099f7ef62cc1" translate="yes" xml:space="preserve">
          <source>This is a group of software providers offering specialized infrastructure management capabilities such as configuration management. Terraform integrates with these tools using the specific providers to enable these specialized tools to execute tasks during the provisioning of infrastructure. These providers are primarily supported by the vendor in close collaboration with HashiCorp, and are tested by HashiCorp.</source>
          <target state="translated">これは、構成管理などのインフラストラクチャ管理機能に特化した機能を提供するソフトウェア・プロバイダのグループです。Terraformは、特定のプロバイダを使用してこれらのツールと統合し、インフラストラクチャのプロビジョニング中にこれらの専門ツールがタスクを実行できるようにしています。これらのプロバイダは、主にベンダーがHashiCorpと緊密に連携してサポートしており、HashiCorpがテストを行っています。</target>
        </trans-unit>
        <trans-unit id="c983d9692de16640a5145a1d82201d6749fd5b5c" translate="yes" xml:space="preserve">
          <source>This is a preferred approach over any other when running in EC2 as you can avoid hard coding credentials. Instead these are leased on-the-fly by Terraform which reduces the chance of leakage.</source>
          <target state="translated">これは、EC2で実行する場合には他のどのアプローチよりも好ましい方法です。その代わりにTerraformがその場でリースしてくれるので、漏洩の可能性が低くなります。</target>
        </trans-unit>
        <trans-unit id="a8382b9a2dcd2c3e104ccc81107ec805acfe4570" translate="yes" xml:space="preserve">
          <source>This is a slightly-opinionated guide, which chooses to ignore the built-in versioning and staged deployment mechanisms in AWS Lambda and API Gateway. In many cases these features are not necessary when using Terraform because changes can be tracked and deployed by keeping the Terraform configuration in a version-control repository. It also uses API Gateway in a very simple way, proxying all requests to a single AWS Lambda function that is expected to contain its own request routing logic.</source>
          <target state="translated">これは、AWS LambdaとAPI Gatewayに組み込まれているバージョニングと段階的なデプロイの仕組みを無視した、やや偏見に満ちたガイドです。多くの場合、Terraformを使用する際には、Terraformの設定をバージョン管理リポジトリに保持することで変更を追跡してデプロイすることができるため、これらの機能は必要ありません。また、API Gatewayを非常にシンプルな方法で使用し、すべてのリクエストを、独自のリクエストルーティングロジックを含むことが期待される単一のAWS Lambda関数にプロキシしています。</target>
        </trans-unit>
        <trans-unit id="75b56ed5d77d80fd00ea07887d004c6f56ef2400" translate="yes" xml:space="preserve">
          <source>This is an advanced section! If you are looking for information on using Terraform with any of the existing Plugins, please refer to the &lt;a href=&quot;../index&quot;&gt;Docs&lt;/a&gt; section of this website.</source>
          <target state="translated">これは高度なセクションです！既存のプラグインでTerraformを使用する方法については、このWebサイトの&lt;a href=&quot;../index&quot;&gt;ドキュメント&lt;/a&gt;セクションを参照してください。</target>
        </trans-unit>
        <trans-unit id="229b99b373df78bb60803b5b9ce21e8ec335bc5f" translate="yes" xml:space="preserve">
          <source>This is deliberately very similar to accessing resource attributes. Instead of referencing a resource attribute, however, the expression in this case references an output of the module.</source>
          <target state="translated">これは意図的にリソース属性へのアクセスと非常に似ています。しかし、リソース属性を参照する代わりに、この場合の式はモジュールの出力を参照します。</target>
        </trans-unit>
        <trans-unit id="4feb33cfec1805d36e0a7befa9fa384affafc295" translate="yes" xml:space="preserve">
          <source>This is different from the &lt;code&gt;aws_availability_zone&lt;/code&gt; (singular) data source, which provides some details about a specific availability zone.</source>
          <target state="translated">これは、特定のアベイラビリティーゾーンに関する詳細を提供する &lt;code&gt;aws_availability_zone&lt;/code&gt; （単一）データソースとは異なります。</target>
        </trans-unit>
        <trans-unit id="2a4514e6e3a19a5f71933bde174109c4306eee03" translate="yes" xml:space="preserve">
          <source>This is different from the &lt;code&gt;aws_availability_zones&lt;/code&gt; (plural) data source, which provides a list of the available zones.</source>
          <target state="translated">これは、使用可能なゾーンのリストを提供する &lt;code&gt;aws_availability_zones&lt;/code&gt; （複数）データソースとは異なります。</target>
        </trans-unit>
        <trans-unit id="22de64269ac7692d68dfb70351c15ef95b961b7a" translate="yes" xml:space="preserve">
          <source>This is equivalent to using the &lt;code&gt;--add-host&lt;/code&gt; option when using the &lt;code&gt;run&lt;/code&gt; command of the Docker CLI.</source>
          <target state="translated">これは、Docker CLIの &lt;code&gt;run&lt;/code&gt; コマンドを使用するときに &lt;code&gt;--add-host&lt;/code&gt; オプションを使用するのと同じです。</target>
        </trans-unit>
        <trans-unit id="be7a17c46a203993822bc59c42a4026f2b181471" translate="yes" xml:space="preserve">
          <source>This is seen in the following AWS IAM Statement:</source>
          <target state="translated">これは、以下のAWSのIAMステートメントに見られます。</target>
        </trans-unit>
        <trans-unit id="538338fb9a90db738d253038074d50ade4a1b65e" translate="yes" xml:space="preserve">
          <source>This is the appropriate resource to use if &lt;code&gt;terraform destroy&lt;/code&gt; should delete the device group.</source>
          <target state="translated">これは、 &lt;code&gt;terraform destroy&lt;/code&gt; がデバイスグループを削除する必要がある場合に使用する適切なリソースです。</target>
        </trans-unit>
        <trans-unit id="2a23e652cdc653bb31e19e29a73b6b73a1244195" translate="yes" xml:space="preserve">
          <source>This is the appropriate resource to use if you have a pre-existing device group in Panorama and don't want Terraform to delete it on &lt;code&gt;terraform destroy&lt;/code&gt;.</source>
          <target state="translated">これは、Panoramaに既存のデバイスグループがあり、TerraformがTerraform &lt;code&gt;terraform destroy&lt;/code&gt; 削除しないようにする場合に使用する適切なリソースです。</target>
        </trans-unit>
        <trans-unit id="7135239207e8f79aec4bea9123d1dce6557dc260" translate="yes" xml:space="preserve">
          <source>This is the basic project structure and scaffolding for a Terraform plugin. To recap, the file structure is:</source>
          <target state="translated">これがTerraformプラグインの基本的なプロジェクト構造と足場です。要約すると、ファイル構造は以下の通りです。</target>
        </trans-unit>
        <trans-unit id="2439a1d45b3a9a58e88148f9b1a63c4d752b3fcb" translate="yes" xml:space="preserve">
          <source>This is the primary endpoint for resolving module sources, returning the available versions for a given fully-qualified module.</source>
          <target state="translated">これは、モジュールのソースを解決するための主要なエンドポイントであり、 与えられた完全修飾モジュールの利用可能なバージョンを返します。</target>
        </trans-unit>
        <trans-unit id="43739d5f758207fa93d3284d3a1fa04d8302d42c" translate="yes" xml:space="preserve">
          <source>This is useful for reading values out of state (potentially pairing this command with something like &lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jq&lt;/a&gt;). It is also useful if you need to make manual modifications to state.</source>
          <target state="translated">これは、状態から値を読み取るのに役立ちます（このコマンドを&lt;a href=&quot;https://stedolan.github.io/jq/&quot;&gt;jqの&lt;/a&gt;ようなものと組み合わせる可能性があります）。また、状態を手動で変更する必要がある場合にも役立ちます。</target>
        </trans-unit>
        <trans-unit id="a8ae2dfda563a46793936efd4deb33aa61d0263e" translate="yes" xml:space="preserve">
          <source>This is useful for taking a single AMI provisioned in one region and making it available in another for a multi-region deployment.</source>
          <target state="translated">これは、あるリージョンでプロビジョニングされた単一のAMIを別のリージョンで利用できるようにして、複数のリージョンで展開する場合に便利です。</target>
        </trans-unit>
        <trans-unit id="402f63edceab9b725d8854ebf7c2820c4970344c" translate="yes" xml:space="preserve">
          <source>This is where the EKS service comes into play. It requires a few operator managed resources beforehand so that Kubernetes can properly manage other AWS services as well as allow inbound networking communication from your local workstation (if desired) and worker nodes.</source>
          <target state="translated">ここでEKSサービスの出番です。これは、Kubernetesが他のAWSサービスを適切に管理できるように、(必要に応じて)ローカルのワークステーションとワーカーノードからのインバウンドネットワーク通信を可能にするために、事前にいくつかのオペレータ管理されたリソースを必要とします。</target>
        </trans-unit>
        <trans-unit id="9b31b4141b3db96f5dc8f28ca9f9ecfc7afead22" translate="yes" xml:space="preserve">
          <source>This limitation may be addressed in future versions of Terraform. For now, destroy-time provisioners must be used sparingly and with care.</source>
          <target state="translated">この制限は、将来の Terraform のバージョンで対処されるかもしれません。今のところ、破壊時間プロビジョナーは控えめに、そして注意して使用しなければなりません。</target>
        </trans-unit>
        <trans-unit id="83aee622c5a43495ec1cc9d724385e24f9831e37" translate="yes" xml:space="preserve">
          <source>This makes it significantly easier to use Terraform as a team: team members modify the Terraform configurations locally and continue to use normal version control. When the Terraform configurations are ready to be run, they are pushed to Terraform Enterprise, and any member of your team can run Terraform with the push of a button.</source>
          <target state="translated">これにより、チームとしてのTerraformの使用が格段に容易になりました。チームメンバーはローカルでTerraformの設定を変更し、通常のバージョン管理を継続します。Terraformの設定が実行可能な状態になると、Terraform Enterpriseにプッシュされ、チームメンバーはボタンを押すだけでTerraformを実行することができます。</target>
        </trans-unit>
        <trans-unit id="3bbcbca95b5ba6ff70736dffa6fefc14e4cd9d18" translate="yes" xml:space="preserve">
          <source>This map is most commonly constructed once in a common &lt;code&gt;init()&lt;/code&gt; method of the Provider&amp;rsquo;s main test file, and includes an object of the current Provider type.</source>
          <target state="translated">このマップは、通常、プロバイダーのメインテストファイルの共通の &lt;code&gt;init()&lt;/code&gt; メソッドで一度作成され、現在のプロバイダータイプのオブジェクトを含みます。</target>
        </trans-unit>
        <trans-unit id="764a6f60114b53a40d5118cb40dc3404548db92b" translate="yes" xml:space="preserve">
          <source>This opens an interactive console for experimenting with interpolations. This is useful for testing interpolations before using them in configurations as well as interacting with an existing &lt;a href=&quot;../state/index&quot;&gt;state&lt;/a&gt;.</source>
          <target state="translated">これにより、補間を試すためのインタラクティブコンソールが開きます。これは、構成で補間を使用する前に補間をテストしたり、既存の&lt;a href=&quot;../state/index&quot;&gt;状態&lt;/a&gt;と相互作用したりするのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="8caa5b9e5ac509835e9c5282a46c3cdd2728d408" translate="yes" xml:space="preserve">
          <source>This option takes a value of true or false. If this option is not set for a metric it will default to false.</source>
          <target state="translated">このオプションは、trueまたはfalseの値を取ります。このオプションがメトリックに設定されていない場合、デフォルトはFalseになります。</target>
        </trans-unit>
        <trans-unit id="25609816d4f9a82d194a003cf2423587671671ea" translate="yes" xml:space="preserve">
          <source>This page assumes you are familiar with the &lt;a href=&quot;syntax&quot;&gt;configuration syntax&lt;/a&gt; already.</source>
          <target state="translated">このページは、&lt;a href=&quot;syntax&quot;&gt;構成構文に&lt;/a&gt;精通していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="6e8af0ee0a94dc9fecdd7c84af542ec1cc4f11f1" translate="yes" xml:space="preserve">
          <source>This page assumes you're already familiar with &lt;a href=&quot;syntax&quot;&gt;the configuration syntax&lt;/a&gt;.</source>
          <target state="translated">このページは&lt;a href=&quot;syntax&quot;&gt;、設定構文に&lt;/a&gt;精通していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="ac0a5c215f9cc19974bd78ee64b9bcf0fdaed476" translate="yes" xml:space="preserve">
          <source>This page assumes you're familiar with the &lt;a href=&quot;syntax&quot;&gt;configuration syntax&lt;/a&gt; already.</source>
          <target state="translated">このページは、&lt;a href=&quot;syntax&quot;&gt;設定構文に&lt;/a&gt;精通していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="04fb884ea5b80d93caf2c929ed60666a6ff7a9ab" translate="yes" xml:space="preserve">
          <source>This page documents the basics of how the plugin system in Terraform works, and how to setup a basic development environment for plugin development if you're writing a Terraform plugin.</source>
          <target state="translated">このページでは、Terraformのプラグインシステムの基本的な仕組みと、Terraformのプラグインを書く場合の基本的な開発環境の設定方法を説明します。</target>
        </trans-unit>
        <trans-unit id="25847e25d3bc69f04967647a1c8b399a6927dc17" translate="yes" xml:space="preserve">
          <source>This page includes details on our compatibility promise and guidelines to follow when upgrading between versions of the provider. Whenever possible, we recommend verifying upgrades in isolated test environments.</source>
          <target state="translated">このページには、当社の互換性の約束の詳細と、プロバイダのバージョン間でアップグレードする際に従うべきガイドラインが記載されています。可能な限り、隔離されたテスト環境でアップグレードを検証することをお勧めします。</target>
        </trans-unit>
        <trans-unit id="ba9b9002203c7f5b52386553bbcfd2695d06a1cd" translate="yes" xml:space="preserve">
          <source>This post assumes familiarity with Golang and basic programming concepts.</source>
          <target state="translated">この投稿は、Golangやプログラミングの基本的な概念に精通していることを前提としています。</target>
        </trans-unit>
        <trans-unit id="dcfa00c1898cb4867d709a0ca671ed4e4eb4cdb2" translate="yes" xml:space="preserve">
          <source>This provider can be used in conjunction with other resources that create MySQL servers. For example, &lt;code&gt;aws_db_instance&lt;/code&gt; is able to create MySQL servers in Amazon's RDS service.</source>
          <target state="translated">このプロバイダーは、MySQLサーバーを作成する他のリソースと組み合わせて使用​​できます。たとえば、 &lt;code&gt;aws_db_instance&lt;/code&gt; は、AmazonのRDSサービスでMySQLサーバーを作成できます。</target>
        </trans-unit>
        <trans-unit id="4b20f0bdab4b124d8973dbabf672e82f519d5da3" translate="yes" xml:space="preserve">
          <source>This provider has the ability to log all HTTP requests and responses between Terraform and the FlexibleEngine cloud which is useful for troubleshooting and debugging.</source>
          <target state="translated">このプロバイダは、TerraformとFlexibleEngineクラウド間のすべてのHTTPリクエストとレスポンスをログに記録する機能を備えており、トラブルシューティングやデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="7e765341d594a79ac4b1c04c7c6db24a1014100c" translate="yes" xml:space="preserve">
          <source>This provider has the ability to log all HTTP requests and responses between Terraform and the OpenStack cloud which is useful for troubleshooting and debugging.</source>
          <target state="translated">このプロバイダは、TerraformとOpenStackクラウド間のすべてのHTTPリクエストとレスポンスをログに記録する機能を持っており、トラブルシューティングやデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="47021253394af039b514a6325ed8ac0e87e9c163" translate="yes" xml:space="preserve">
          <source>This provider has the ability to log all HTTP requests and responses between Terraform and the OpenTelekomCloud cloud which is useful for troubleshooting and debugging.</source>
          <target state="translated">このプロバイダは、TerraformとOpenTelekomCloud間のすべてのHTTPリクエストとレスポンスをログに記録する機能を備えており、トラブルシューティングやデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="54402f71a061de217889f5518d11ed1ab82339e4" translate="yes" xml:space="preserve">
          <source>This provider has the ability to log all HTTP requests and responses between Terraform and the TelefonicaOpenCloud cloud which is useful for troubleshooting and debugging.</source>
          <target state="translated">このプロバイダは、TerraformとTelefonicaOpenCloudクラウド間のすべてのHTTPリクエストとレスポンスをログに記録する機能を持っており、トラブルシューティングやデバッグに役立ちます。</target>
        </trans-unit>
        <trans-unit id="083ccb397eb3ce5bc3f90b00a86f4bcb2f84eb65" translate="yes" xml:space="preserve">
          <source>This provider is intended to be used for simple situations where you wish to integrate Terraform with a system for which a first-class provider doesn't exist. It is not as powerful as a first-class Terraform provider, so users of this interface should carefully consider the implications described on each of the child documentation pages (available from the navigation bar) for each type of object this provider supports.</source>
          <target state="translated">このプロバイダは、第一級のプロバイダが存在しないシステムとTerraformを統合したい場合に使用することを想定しています。ファーストクラスのTerraformプロバイダほど強力ではありませんので、このインターフェースのユーザーは、このプロバイダがサポートするオブジェクトのタイプごとに、各子ドキュメント・ページ(ナビゲーション・バーから入手可能)で説明されている意味合いを慎重に検討する必要があります。</target>
        </trans-unit>
        <trans-unit id="252618338ff2d374e01be1d4bf73af9e711e7fb8" translate="yes" xml:space="preserve">
          <source>This provider is not particularly useful on its own, but it can be used to create certificates and credentials that can then be used with other providers when creating resources that expose TLS services or that themselves provision TLS certificates.</source>
          <target state="translated">このプロバイダは単体では特に有用ではありませんが、証明書やクレデンシャルを作成するために使用することができ、TLS サービスを公開するリソースを作成したり、TLS 証明書をプロビジョニングするリソースを作成する際に、他のプロバイダと一緒に使用することができます。</target>
        </trans-unit>
        <trans-unit id="6d3c7a79d3e583c27528d92de4377a0ce7cdbb73" translate="yes" xml:space="preserve">
          <source>This provider requires no configuration. For information on the resources it provides, see the navigation bar.</source>
          <target state="translated">このプロバイダは設定を必要としません。提供するリソースの詳細については、ナビゲーションバーを参照してください。</target>
        </trans-unit>
        <trans-unit id="f01ea4b96be99153c643624e0ada668a7420bbaa" translate="yes" xml:space="preserve">
          <source>This provider serves two pretty-distinct use-cases, which each have their own security trade-offs and caveats that are covered in the sections that follow. Consider these carefully before using this provider within your Terraform configuration.</source>
          <target state="translated">このプロバイダは2つの異なるユースケースに対応しており、それぞれにセキュリティ上のトレードオフや注意点があります。Terraform の構成でこのプロバイダを使用する前に、これらをよく検討してください。</target>
        </trans-unit>
        <trans-unit id="75ed30c3c0e8a666ebe2ea83d31a7b1d6b2cc174" translate="yes" xml:space="preserve">
          <source>This resource allows the user to request for and claim to a persistent volume.</source>
          <target state="translated">このリソースは、ユーザーが永続的なボリュームを要求したり、主張したりすることを可能にします。</target>
        </trans-unit>
        <trans-unit id="c4be9884de20db94c7ce1eb0ebbc39199b089153" translate="yes" xml:space="preserve">
          <source>This resource allows you manage your repositories such as scm type, if it is private, how to fork the repository and other options.</source>
          <target state="translated">このリソースでは、scmの種類、プライベートかどうか、リポジトリをフォークする方法、その他のオプションなど、リポジトリを管理することができます。</target>
        </trans-unit>
        <trans-unit id="f51d9187b24c3a8cbfe30281aabc85c88ec12ad2" translate="yes" xml:space="preserve">
          <source>This resource allows you to add and remove dynamic address group tags.</source>
          <target state="translated">このリソースでは、動的なアドレスグループタグの追加と削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="f03718f02f8f25942792e2e6b6617d379d0bb17a" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove collaborators from repositories in your organization. Collaborators can have explicit (and differing levels of) read, write, or administrator access to specific repositories in your organization, without giving the user full organization membership.</source>
          <target state="translated">このリソースを使用すると、組織内のリポジトリから共同作業者を追加/削除することができます。コラボレータは、組織内の特定のリポジトリへの読み取り、書き込み、または管理者アクセスを明示的に (異なるレベルで)許可することができますが、ユーザーに組織の完全なメンバーシップを与えることはできません。</target>
        </trans-unit>
        <trans-unit id="7246cf7307b3966195d631b40e826899124b8b14" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove repository deploy keys.</source>
          <target state="translated">このリソースでは、リポジトリのデプロイキーを追加/削除することができます。</target>
        </trans-unit>
        <trans-unit id="64868804fed0e9c5c3a0682859c7ab0c3784a1fe" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove teams from your organization. When applied, a new team will be created. When destroyed, that team will be removed.</source>
          <target state="translated">このリソースでは、組織内のチームを追加/削除することができます。適用されると、新しいチームが作成されます。破壊されると、そのチームは削除されます。</target>
        </trans-unit>
        <trans-unit id="a1d755801d1197ca81be4204a9c03428e9128bc4" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove users from teams in your organization. When applied, the user will be added to the team. If the user hasn't accepted their invitation to the organization, they won't be part of the team until they do. When destroyed, the user will be removed from the team.</source>
          <target state="translated">このリソースを使用すると、組織内のチームにユーザーを追加/削除することができます。適用されると、そのユーザーはチームに追加されます。ユーザーが組織への招待を受け入れていない場合、受け入れられるまでそのユーザーはチームの一員にはなりません。ユーザーが破棄されると、そのユーザーはチームから削除されます。</target>
        </trans-unit>
        <trans-unit id="251ebbc642751c57b3278fdf61e41d714a46d808" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/remove users from your organization. When applied, an invitation will be sent to the user to become part of the organization. When destroyed, either the invitation will be cancelled or the user will be removed.</source>
          <target state="translated">このリソースでは、組織からユーザーを追加/削除することができます。適用されると、組織の一部になるための招待状がユーザーに送信されます。破壊されると、招待状がキャンセルされるか、ユーザーが削除されます。</target>
        </trans-unit>
        <trans-unit id="a0941a5d87dd3e14c92fb1196401e8493980b729" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete NAT rules.</source>
          <target state="translated">このリソースでは、NATルールの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="1e122f735ba7fd129b406616a47aa137513c7d55" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama NAT rules.</source>
          <target state="translated">このリソースでは、Panorama NAT ルールの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="63d99df2cb69d917e015c4fa3884de329cfec066" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama address groups.</source>
          <target state="translated">このリソースでは、Panorama アドレス グループの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="679ce128dd7d74fdc92b35c9cf99ad41d7d5d6c9" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama administrative tags.</source>
          <target state="translated">このリソースでは、Panorama の管理タグを追加/更新/削除することができます。</target>
        </trans-unit>
        <trans-unit id="697e78ada132e6c5f59be13c0f13d78d9508e0c5" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama device groups.</source>
          <target state="translated">このリソースでは、Panorama デバイス グループの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="a11eff4f289fb31eaf3010b5ff4574e5cd99a28d" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama security rule groups.</source>
          <target state="translated">このリソースでは、Panorama セキュリティ ルール グループを追加/更新/削除することができます。</target>
        </trans-unit>
        <trans-unit id="734e6b3c405e9c99a21351968cca08f77e6e2adf" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama service groups.</source>
          <target state="translated">このリソースでは、Panorama サービス グループの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="ce5b9faf1fcaee0af58e505be16aeb329f95a3fc" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete Panorama service objects.</source>
          <target state="translated">このリソースでは、Panorama サービス オブジェクトの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="04031afe8beec4ad20befadfd1aad62a06600ff0" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete a specific device in a Panorama device group.</source>
          <target state="translated">このリソースを使用すると、Panorama デバイス グループの特定のデバイスを追加/更新/削除することができます。</target>
        </trans-unit>
        <trans-unit id="df46267a0fb6419abd669b0c82477756730e2d74" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete address groups.</source>
          <target state="translated">このリソースでは、アドレスグループの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="db9bc679d2f0e2df050cdb0efd4f7a29ae7de437" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete address objects on Panorama.</source>
          <target state="translated">このリソースでは、Panorama上のアドレス オブジェクトを追加/更新/削除することができます。</target>
        </trans-unit>
        <trans-unit id="4e47a701baf99f066ac987a4a415d1479c837b83" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete address objects.</source>
          <target state="translated">このリソースでは、アドレスオブジェクトの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="925be032cee80e80e00099832d8dfa0da7c39cb0" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete administrative tags.</source>
          <target state="translated">このリソースでは、管理タグの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="61e8c0e98f915519954ce4efb359011aa10e0a65" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete ethernet interfaces.</source>
          <target state="translated">このリソースでは、イーサネットインターフェイスの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="34ab8fbb003fc9f42a2d7b2d1dd67f03e2f0938b" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete interface management profiles.</source>
          <target state="translated">このリソースでは、インターフェイス管理プロファイルの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="502228886ddf9caba41e1fa7867f4515d27280a2" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete security rule groups.</source>
          <target state="translated">このリソースでは、セキュリティ ルール グループの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="03fb1609442e44d4a82d616c530c4dd7c5ac98db" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete service groups.</source>
          <target state="translated">このリソースでは、サービスグループの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="ad23861d39283cbddc2c6427219193700d05f865" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete service objects.</source>
          <target state="translated">このリソースでは、サービスオブジェクトの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="3468b034a50fe6cfe6360dcd7285bfc053587aa4" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete telemetry sharing.</source>
          <target state="translated">このリソースでは、遠隔測定の共有を追加/更新/削除することができます。</target>
        </trans-unit>
        <trans-unit id="ef99d004a08b15dbe34f9774617e3ebec5d358a8" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete virtual routers.</source>
          <target state="translated">このリソースでは、仮想ルーターの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="448cf693d8e14bd757f8e101dc3c14af9c223ce5" translate="yes" xml:space="preserve">
          <source>This resource allows you to add/update/delete zones.</source>
          <target state="translated">このリソースでは、ゾーンの追加/更新/削除を行うことができます。</target>
        </trans-unit>
        <trans-unit id="f4d3dd501e96903cc6d06112b70d008250652afd" translate="yes" xml:space="preserve">
          <source>This resource allows you to configure branch protection for repositories in your organization. When applied, the branch will be protected from forced pushes and deletion. Additional constraints, such as required status checks or restrictions on users and teams, can also be configured.</source>
          <target state="translated">このリソースでは、組織内のリポジトリのブランチ保護を設定することができます。適用すると、ブランチは強制的なプッシュや削除から保護されます。また、必須のステータスチェックやユーザーやチームの制限など、追加の制約を設定することもできます。</target>
        </trans-unit>
        <trans-unit id="f8eb0678fffb14c73ffcbecfc101bbec6654a0ca" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage GitLab groups. Note your provider will need to be configured with admin-level access for this resource to work.</source>
          <target state="translated">このリソースでは、GitLab グループを作成したり管理したりすることができます。このリソースを使用するには、管理者レベルのアクセス権を持つプロバイダを設定する必要があることに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="2bec008cc073839c38cd4f9e588d3f6dbd559642" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage GitLab users. Note your provider will need to be configured with admin-level access for this resource to work.</source>
          <target state="translated">このリソースでは、GitLab ユーザーの作成と管理を行います。このリソースを使用するには、管理者レベルのアクセス権を持つプロバイダを設定する必要があることに注意しましょう。</target>
        </trans-unit>
        <trans-unit id="b512e907bc009a67226d092a18495fd58bf95719" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage deploy keys for your GitLab projects.</source>
          <target state="translated">このリソースでは、GitLab プロジェクト用のデプロイキーを作成・管理することができます。</target>
        </trans-unit>
        <trans-unit id="7dba1880bf3ad248dcd664feda00f9086472dbfa" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage hooks for your GitLab projects. For further information on hooks, consult the &lt;a href=&quot;https://docs.gitlab.com/ce/user/project/integrations/webhooks.html&quot;&gt;gitlab documentation&lt;/a&gt;.</source>
          <target state="translated">このリソースを使用すると、GitLabプロジェクトのフックを作成および管理できます。フックの詳細については、&lt;a href=&quot;https://docs.gitlab.com/ce/user/project/integrations/webhooks.html&quot;&gt;gitlabのドキュメントをご覧&lt;/a&gt;ください。</target>
        </trans-unit>
        <trans-unit id="60423e0d302ffbfe5d39d10623c133d2ba67b243" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage issue labels within your Github organization.</source>
          <target state="translated">このリソースでは、Github組織内での課題ラベルの作成と管理を行うことができます。</target>
        </trans-unit>
        <trans-unit id="28bf06d4252d70bb427aa350c336cc7942eb0542" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage labels for your GitLab projects. For further information on labels, consult the &lt;a href=&quot;https://docs.gitlab.com/ee/user/project/labels.htm&quot;&gt;gitlab documentation&lt;/a&gt;.</source>
          <target state="translated">このリソースを使用すると、GitLabプロジェクトのラベルを作成および管理できます。ラベルの詳細については、&lt;a href=&quot;https://docs.gitlab.com/ee/user/project/labels.htm&quot;&gt;gitlabのドキュメントをご覧&lt;/a&gt;ください。</target>
        </trans-unit>
        <trans-unit id="4b4953b8212174587b401932c1e7327a27b6292f" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage projects within your GitLab group or within your user.</source>
          <target state="translated">このリソースを使用すると、GitLab グループ内やユーザー内でプロジェクトを作成・管理することができます。</target>
        </trans-unit>
        <trans-unit id="7c089a315c545687ff310d6d0c5072c04cbe10ee" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage repositories within your Github organization.</source>
          <target state="translated">このリソースを使用すると、Github組織内でリポジトリを作成して管理することができます。</target>
        </trans-unit>
        <trans-unit id="f123c798ab25ce6261c8380c0e6f8a24ef8ea126" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage webhooks for Github organization.</source>
          <target state="translated">このリソースでは、Github組織のWebhookを作成して管理することができます。</target>
        </trans-unit>
        <trans-unit id="01915a36008bf1a2439f361dc446bbeaf7117fd0" translate="yes" xml:space="preserve">
          <source>This resource allows you to create and manage webhooks for repositories within your Github organization.</source>
          <target state="translated">このリソースを使用すると、Github組織内のリポジトリ用のウェブフックを作成して管理することができます。</target>
        </trans-unit>
        <trans-unit id="12896e92450a0de5bc16778423959a5541d28dd9" translate="yes" xml:space="preserve">
          <source>This resource allows you to manage the full security posture.</source>
          <target state="translated">このリソースを使用することで、万全のセキュリティ姿勢を管理することができます。</target>
        </trans-unit>
        <trans-unit id="561ea50a8101b3670f0c90a30d0af8ed933495cf" translate="yes" xml:space="preserve">
          <source>This resource allows you to update the general device settings, such as DNS or the hostname.</source>
          <target state="translated">このリソースを使用して、DNSやホスト名などの一般的なデバイス設定を更新することができます。</target>
        </trans-unit>
        <trans-unit id="4679558859a40b1939daa9ebdf9361b9d8f0f9cb" translate="yes" xml:space="preserve">
          <source>This resource also allows the retrieval of an existing public key from the store, so that it may be used in the configuration of other resources such as &lt;code&gt;aws_key_pair&lt;/code&gt;.</source>
          <target state="translated">このリソースを使用すると、既存の公開鍵をストアから取得できるため、 &lt;code&gt;aws_key_pair&lt;/code&gt; などの他のリソースの構成で使用できます。</target>
        </trans-unit>
        <trans-unit id="7e83a4d518688d20bd98642d554541ef48cf3b05" translate="yes" xml:space="preserve">
          <source>This resource also exports a full set of attributes corresponding to the arguments of the &lt;a href=&quot;ami&quot;&gt;&lt;code&gt;aws_ami&lt;/code&gt;&lt;/a&gt; resource, allowing the properties of the created AMI to be used elsewhere in the configuration.</source>
          <target state="translated">このリソースは、&lt;a href=&quot;ami&quot;&gt; &lt;code&gt;aws_ami&lt;/code&gt; &lt;/a&gt;リソースの引数に対応する属性の完全なセットもエクスポートするため、作成されたAMIのプロパティを構成の他の場所で使用できます。</target>
        </trans-unit>
        <trans-unit id="6a68fad875e043d265e47e1dd54f024022e25246" translate="yes" xml:space="preserve">
          <source>This resource also exports a full set of attributes corresponding to the arguments of the &lt;code&gt;aws_ami&lt;/code&gt; resource, allowing the properties of the created AMI to be used elsewhere in the configuration.</source>
          <target state="translated">このリソースは、 &lt;code&gt;aws_ami&lt;/code&gt; リソースの引数に対応する属性の完全なセットもエクスポートするため、作成されたAMIのプロパティを構成の他の場所で使用できます。</target>
        </trans-unit>
        <trans-unit id="8ca416a8e8ce2480f4d198de86a00a5aecf85d02" translate="yes" xml:space="preserve">
          <source>This resource also exposes the full set of arguments from the &lt;a href=&quot;ami&quot;&gt;&lt;code&gt;aws_ami&lt;/code&gt;&lt;/a&gt; resource.</source>
          <target state="translated">このリソースは、&lt;a href=&quot;ami&quot;&gt; &lt;code&gt;aws_ami&lt;/code&gt; &lt;/a&gt;リソースからの引数の完全なセットも公開します。</target>
        </trans-unit>
        <trans-unit id="dc5f920cfbb5b7465dc5f05f275a494a69ca50da" translate="yes" xml:space="preserve">
          <source>This resource attaches a security group to an Elastic Network Interface (ENI). It can be used to attach a security group to any existing ENI, be it a secondary ENI or one attached as the primary interface on an instance.</source>
          <target state="translated">このリソースは、セキュリティグループを Elastic Network Interface (ENI)にアタッチします。既存のENIにセキュリティグループをアタッチするために使用できます。セカンダリENIであっても、インスタンスのプライマリインタフェースとしてアタッチされたENIであってもです。</target>
        </trans-unit>
        <trans-unit id="86f76c4f9ac5eb4c8fecb4af58c827b1d0ac4064" translate="yes" xml:space="preserve">
          <source>This resource can be imported by specifying all three arguments, separated by a forward slash:</source>
          <target state="translated">このリソースは、3つの引数をすべて前方スラッシュで区切って指定することでインポートすることができます。</target>
        </trans-unit>
        <trans-unit id="33ab87c5fe80ef1d85a633ba39b034c9e25b7d5a" translate="yes" xml:space="preserve">
          <source>This resource can be imported by specifying the zone ID and recordset ID, separated by a forward slash.</source>
          <target state="translated">このリソースは、ゾーンIDとレコードセットIDを前方スラッシュで区切って指定することで、インポートすることができます。</target>
        </trans-unit>
        <trans-unit id="5ea3dd92642f8831df85ca191333832b7fccb2d1" translate="yes" xml:space="preserve">
          <source>This resource can be imported by specifying the zone ID:</source>
          <target state="translated">このリソースは、ゾーンIDを指定してインポートすることができます。</target>
        </trans-unit>
        <trans-unit id="901db8b030449abdaab828178be2e6409e4fb483" translate="yes" xml:space="preserve">
          <source>This resource can be used in conjunction with resources that have the &lt;code&gt;create_before_destroy&lt;/code&gt; lifecycle flag set, to avoid conflicts with unique names during the brief period where both the old and new resources exist concurrently.</source>
          <target state="translated">このリソースを &lt;code&gt;create_before_destroy&lt;/code&gt; ライフサイクルフラグが設定されているリソースと組み合わせて使用​​すると、古いリソースと新しいリソースの両方が同時に存在する短い期間に一意の名前との競合を回避できます。</target>
        </trans-unit>
        <trans-unit id="42c13902a99dd515330db07140a7573e16367ad8" translate="yes" xml:space="preserve">
          <source>This resource can be used in conjunction with resources that have, the &lt;code&gt;create_before_destroy&lt;/code&gt; lifecycle flag set, to avoid conflicts with unique names during the brief period where both the old and new resources exist concurrently.</source>
          <target state="translated">このリソースは、 &lt;code&gt;create_before_destroy&lt;/code&gt; ライフサイクルフラグが設定されているリソースと組み合わせて使用​​して、古いリソースと新しいリソースの両方が同時に存在する短い期間に一意の名前との競合を回避できます。</target>
        </trans-unit>
        <trans-unit id="2a939b954057b47aa4f017c0af7003155873e436" translate="yes" xml:space="preserve">
          <source>This resource can be used to configure a NSX DHCP relay profile on the NSX manager. A DHCP relay profile is a type of template that can be used to define a remote DHCP server where DHCP packets can be relayed for DHCP requests of machines attached to NSX logical topologies. The DHCP relay profile can be used in a DHCP relay service and later consumed by a router link port.</source>
          <target state="translated">このリソースは、NSX マネージャで NSX DHCP リレープロファイルを構成するために使用できます。DHCPリレープロファイルは、NSX論理トポロジに接続されたマシンのDHCP要求に対してDHCPパケットをリレーできるリモートDHCPサーバを定義するために使用できるテンプレートの一種です。DHCPリレープロファイルは、DHCPリレーサービスで使用され、後にルータのリンクポートで消費されます。</target>
        </trans-unit>
        <trans-unit id="805d5a71162bb578d0cb2e961def28c034609337" translate="yes" xml:space="preserve">
          <source>This resource can be useful for getting back a list of VPC Ids for a region.</source>
          <target state="translated">このリソースは、ある地域のVPC IDのリストを取得するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="994aff1f0a8d786022c7583ad9323cdfa1b767ce" translate="yes" xml:space="preserve">
          <source>This resource can be useful for getting back a list of route table ids to be referenced elsewhere.</source>
          <target state="translated">このリソースは、他の場所で参照されるルートテーブルIDのリストを取得するのに便利です。</target>
        </trans-unit>
        <trans-unit id="9dad745ac3c8b839364c270abcc18fd63c409887" translate="yes" xml:space="preserve">
          <source>This resource can be useful for getting back a list of subnet ids for a vpc.</source>
          <target state="translated">このリソースは、vpc のサブネット ID のリストを取得するのに役立ちます。</target>
        </trans-unit>
        <trans-unit id="b671e1116fc7364dd7462bda785b37b8e2e795ae" translate="yes" xml:space="preserve">
          <source>This resource can create both &lt;em&gt;affinity rules&lt;/em&gt;, where virtual machines run on specified hosts, or &lt;em&gt;anti-affinity&lt;/em&gt; rules, where virtual machines run on hosts outside of the ones specified in the rule. Virtual machines and hosts are supplied via groups, which can be managed via the &lt;a href=&quot;compute_cluster_vm_group&quot;&gt;&lt;code&gt;vsphere_compute_cluster_vm_group&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;compute_cluster_host_group&quot;&gt;&lt;code&gt;vsphere_compute_cluster_host_group&lt;/code&gt;&lt;/a&gt; resources.</source>
          <target state="translated">このリソースは、両方作成することができ&lt;em&gt;アフィニティルール&lt;/em&gt;仮想マシンが指定したホスト、または上で実行、&lt;em&gt;非アフィニティ&lt;/em&gt;仮想マシンがルールで指定されたもののホスト外で実行するルールを、。仮想マシンとホストは、&lt;a href=&quot;compute_cluster_vm_group&quot;&gt; &lt;code&gt;vsphere_compute_cluster_vm_group&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;compute_cluster_host_group&quot;&gt; &lt;code&gt;vsphere_compute_cluster_host_group&lt;/code&gt; &lt;/a&gt;リソースを介して管理できるグループを介して提供されます。</target>
        </trans-unit>
        <trans-unit id="2d8234b9c8f46508ebaa742ed80eed5367a3b4f2" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts a Security Group id as an input variable and needs to, for example, determine the id of the VPC that the security group belongs to.</source>
          <target state="translated">このリソースは、モジュールが入力変数としてセキュリティグループIDを受け入れ、例えば、セキュリティグループが属するVPCのIDを決定する必要がある場合に有用であることを証明することができます。</target>
        </trans-unit>
        <trans-unit id="948d4b2c3239b399eb428144ce299ae8c700dacf" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts a Subnet id as an input variable and needs to, for example, add a route in the Route Table.</source>
          <target state="translated">このリソースは、モジュールが入力変数としてSubnet idを受け取り、例えばルートテーブルにルートを追加する必要がある場合に有用であることを証明することができます。</target>
        </trans-unit>
        <trans-unit id="86d691820cd5332ca23ee8f9878c7e25e9dc3b5b" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts a subnet id as an input variable and needs to, for example, determine the id of the VPC that the subnet belongs to.</source>
          <target state="translated">このリソースは、モジュールが入力変数としてサブネットIDを受け取り、例えばサブネットが属するVPCのIDを決定する必要がある場合に便利です。</target>
        </trans-unit>
        <trans-unit id="5d33d91e88aeb0e36235fe002f25f947a0693037" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts a vpc id as an input variable and needs to, for example, determine the CIDR block of that VPC.</source>
          <target state="translated">このリソースは、モジュールが入力変数としてvpc idを受け入れ、例えばそのVPCのCIDRブロックを決定する必要がある場合に有用であることを証明することができます。</target>
        </trans-unit>
        <trans-unit id="08e80dda6724cda0d7decf7cd96d1c8b0f4a34f7" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when a module accepts an allocation ID or public IP as an input variable and needs to determine the other.</source>
          <target state="translated">このリソースは、モジュールが入力変数としてアロケーションIDまたはパブリックIPを受け入れ、他方を決定する必要がある場合に有用であることを証明することができます。</target>
        </trans-unit>
        <trans-unit id="46e981e0db4861c64b90667e3c98809744b0ac4c" translate="yes" xml:space="preserve">
          <source>This resource can prove useful when finding the resource associated with a CIDR. For example, finding the peering connection associated with a CIDR value.</source>
          <target state="translated">このリソースは、CIDRに関連付けられたリソースを見つけるときに有用であることを証明することができます。例えば、CIDR 値に関連付けられたピアリング接続を見つけることができます。</target>
        </trans-unit>
        <trans-unit id="149f523dc45db40b7762355633d26b72a090f814" translate="yes" xml:space="preserve">
          <source>This resource cannot currently be used to manage &lt;em&gt;personal&lt;/em&gt; repositories, outside of organizations.</source>
          <target state="translated">このリソースは現在、組織外の&lt;em&gt;個人&lt;/em&gt;リポジトリの管理には使用できません。</target>
        </trans-unit>
        <trans-unit id="d3bb86bcd70e8f8106356d6c0e5d54ecbe12236f" translate="yes" xml:space="preserve">
          <source>This resource cannot currently be used to manage webhooks for &lt;em&gt;personal&lt;/em&gt; repositories, outside of organizations.</source>
          <target state="translated">このリソースは現在、組織外の&lt;em&gt;個人&lt;/em&gt;リポジトリのWebhookの管理には使用できません。</target>
        </trans-unit>
        <trans-unit id="be5da671b0ec67edf6219b12ee8340c8ab2c7008" translate="yes" xml:space="preserve">
          <source>This resource considers its instances to have been deleted after either their validity periods ends or the early renewal period is reached. At this time, applying the Terraform configuration will cause a new certificate to be generated for the instance.</source>
          <target state="translated">このリソースは、そのインスタンスの有効期間が終了するか、早期更新期間に達すると、そのインスタンスが削除されたとみなします。このとき、Terraform 構成を適用すると、インスタンスに新しい証明書が生成されます。</target>
        </trans-unit>
        <trans-unit id="e5629035207b9ee1c042340ca74112ea0f8d1e0d" translate="yes" xml:space="preserve">
          <source>This resource creates a Beanstalk Application Version that can be deployed to a Beanstalk Environment.</source>
          <target state="translated">このリソースは、Beanstalk環境にデプロイ可能なBeanstalkアプリケーションバージョンを作成します。</target>
        </trans-unit>
        <trans-unit id="a4b6475867a05e54cc3fb3edd291e982c9d375f5" translate="yes" xml:space="preserve">
          <source>This resource creates an application that has one configuration template named &lt;code&gt;default&lt;/code&gt;, and no application versions</source>
          <target state="translated">このリソースは、 &lt;code&gt;default&lt;/code&gt; という名前の1つの構成テンプレートがあり、アプリケーションのバージョンがないアプリケーションを作成します</target>
        </trans-unit>
        <trans-unit id="92055c414eba4dedf5fffda30cdf8863380b4eb8" translate="yes" xml:space="preserve">
          <source>This resource creates and rolls out a Cloud Endpoints service using OpenAPI or gRPC. View the relevant docs for &lt;a href=&quot;https://cloud.google.com/endpoints/docs/openapi/&quot;&gt;OpenAPI&lt;/a&gt; and &lt;a href=&quot;https://cloud.google.com/endpoints/docs/grpc/&quot;&gt;gRPC&lt;/a&gt;.</source>
          <target state="translated">このリソースは、OpenAPIまたはgRPCを使用してCloud Endpointsサービスを作成およびロールアウトします。&lt;a href=&quot;https://cloud.google.com/endpoints/docs/openapi/&quot;&gt;OpenAPI&lt;/a&gt;と&lt;a href=&quot;https://cloud.google.com/endpoints/docs/grpc/&quot;&gt;gRPCの&lt;/a&gt;関連ドキュメントをご覧ください。</target>
        </trans-unit>
        <trans-unit id="12906d5e4d5f0153ab3942c3e45788710da601ce" translate="yes" xml:space="preserve">
          <source>This resource creates objects within an existing data bag. To create the data bag itself, use the &lt;code&gt;chef_data_bag&lt;/code&gt; resource.</source>
          <target state="translated">このリソースは、既存のデータバッグ内にオブジェクトを作成します。データバッグ自体を作成するには、 &lt;code&gt;chef_data_bag&lt;/code&gt; リソースを使用します。</target>
        </trans-unit>
        <trans-unit id="c1316b59dece5fe0653386a5373c348556b62ada" translate="yes" xml:space="preserve">
          <source>This resource creates the data bag itself. Inside each data bag is a collection of items which can be created using the &lt;code&gt;chef_data_bag_item&lt;/code&gt; resource.</source>
          <target state="translated">このリソースは、データバッグ自体を作成します。各データバッグの内部には、 &lt;code&gt;chef_data_bag_item&lt;/code&gt; リソースを使用して作成できるアイテムのコレクションがあります。</target>
        </trans-unit>
        <trans-unit id="38ac3537f0487de1707303929caffddcf2f0e618" translate="yes" xml:space="preserve">
          <source>This resource does not &lt;em&gt;read&lt;/em&gt; the secret data back from Terraform on refresh by default. This avoids the need for &lt;code&gt;read&lt;/code&gt; access on the given path, but it means that Terraform is not able to detect and repair &quot;drift&quot; on this resource should the data be updated or deleted outside of Terraform. This limitation can be negated by setting &lt;code&gt;allow_read&lt;/code&gt; to true</source>
          <target state="translated">このリソースは、デフォルトでは更新時にTerraformからシークレットデータを&lt;em&gt;読み取り&lt;/em&gt;ません。これにより、指定されたパスでの &lt;code&gt;read&lt;/code&gt; アクセスが不要になりますが、Terraformの外部でデータが更新または削除された場合、Terraformはこのリソースの「ドリフト」を検出および修復できません。この制限は、 &lt;code&gt;allow_read&lt;/code&gt; をtrueに設定することで無効にできます。</target>
        </trans-unit>
        <trans-unit id="b1402a31038415270f34d7169ba08efa36b1cdd2" translate="yes" xml:space="preserve">
          <source>This resource does not export any additional attributes.</source>
          <target state="translated">このリソースは、追加の属性をエクスポートしません。</target>
        </trans-unit>
        <trans-unit id="4eaf5232aa1ae7751aea69ff7bd389dc04c40205" translate="yes" xml:space="preserve">
          <source>This resource does not support importing.</source>
          <target state="translated">このリソースはインポートをサポートしていません。</target>
        </trans-unit>
        <trans-unit id="a20bd583126fbc9e3da12910abe4c478c9667837" translate="yes" xml:space="preserve">
          <source>This resource exports no further attributes.</source>
          <target state="translated">このリソースは、それ以上の属性をエクスポートしません。</target>
        </trans-unit>
        <trans-unit id="5d403c7165dc28b89d97dc5b647f842c9ecc20da" translate="yes" xml:space="preserve">
          <source>This resource exports the following attributes:</source>
          <target state="translated">このリソースは、以下の属性をエクスポートします。</target>
        </trans-unit>
        <trans-unit id="a977ec83477918fa29d40445043ef3dbf3031432" translate="yes" xml:space="preserve">
          <source>This resource has been updated to use the correct catalog APIs in place of service registration APIs. The &lt;code&gt;consul_agent_service&lt;/code&gt; resource previously also used the service registration API designed for registration against an agent running on a local node. Because Terraform is intended to be run externally to the cluster, and for other internal reasons, this API was the incorrect one to use.</source>
          <target state="translated">このリソースは、サービス登録APIの代わりに正しいカタログAPIを使用するように更新されました。 &lt;code&gt;consul_agent_service&lt;/code&gt; のリソースは、以前にも、ローカル・ノード上で実行中のエージェントに対する登録のために設計されたサービス登録APIを使用していました。Terraformはクラスターの外部で実行することを目的としているため、およびその他の内部的な理由により、このAPIを使用するのは正しくありませんでした。</target>
        </trans-unit>
        <trans-unit id="0e2cf8dd3685f6cb398a44f38b25c75232ca96f6" translate="yes" xml:space="preserve">
          <source>This resource has some overlap with the &lt;code&gt;panos_panorama_device_group&lt;/code&gt; resource. If you want to use this resource with the other one, then make sure that your &lt;code&gt;panos_panorama_device_group&lt;/code&gt; spec does not define any &lt;code&gt;device&lt;/code&gt; blocks, and just stays as &quot;computed&quot;.</source>
          <target state="translated">このリソースは、 &lt;code&gt;panos_panorama_device_group&lt;/code&gt; リソースと一部重複しています。このリソースを他のリソースで使用する場合は、 &lt;code&gt;panos_panorama_device_group&lt;/code&gt; 仕様で &lt;code&gt;device&lt;/code&gt; ブロックが定義されておらず、「計算済み」のままであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="f37f1d40247d1b6f7b8082e225757fbe09d609c3" translate="yes" xml:space="preserve">
          <source>This resource has some overlap with the &lt;code&gt;panos_panorama_device_group_entry&lt;/code&gt; resource. If you want to use this resource with the other one, then make sure that your &lt;code&gt;panos_panorama_device_group&lt;/code&gt; spec does not define any &lt;code&gt;device&lt;/code&gt; blocks, and just stays as &quot;computed&quot;.</source>
          <target state="translated">このリソースは、 &lt;code&gt;panos_panorama_device_group_entry&lt;/code&gt; リソースと一部重複しています。このリソースを他のリソースで使用する場合は、 &lt;code&gt;panos_panorama_device_group&lt;/code&gt; 仕様で &lt;code&gt;device&lt;/code&gt; ブロックが定義されておらず、「計算済み」のままであることを確認してください。</target>
        </trans-unit>
        <trans-unit id="c0e8aa7822dbd2b00c91be59aa84c871858dc6d0" translate="yes" xml:space="preserve">
          <source>This resource is best applied to an instance that is stopped when this instance is created, so that the contents of the created image are predictable. When applied to an instance that is running, &lt;em&gt;the instance will be stopped before taking the snapshots and then started back up again&lt;/em&gt;, resulting in a period of downtime.</source>
          <target state="translated">このリソースは、このインスタンスの作成時に停止されるインスタンスに最適に適用されるため、作成されるイメージの内容は予測可能です。実行中&lt;em&gt;のインスタンスに&lt;/em&gt;適用すると、インスタンス&lt;em&gt;はスナップショットを取得する前に停止され&lt;/em&gt;、&lt;em&gt;その後再び起動します&lt;/em&gt;。その結果、ダウンタイムが発生します。</target>
        </trans-unit>
        <trans-unit id="2afdbff6df4fc2cf8d2bcc6e7b2a774fda1eb3d9" translate="yes" xml:space="preserve">
          <source>This resource is experimental and may be removed in the future! Feedback is requested if you find this resource useful or if you find any problems with it.</source>
          <target state="translated">このリソースは実験的なものであり、将来的には削除される可能性があります。このリソースが有用であると思われる場合、または問題があると思われる場合は、フィードバックをお願いします。</target>
        </trans-unit>
        <trans-unit id="319b05499e596dd6c388e4e74e7fc19db6ef0ed8" translate="yes" xml:space="preserve">
          <source>This resource is for additional certificates and does not replace the default certificate on the listener.</source>
          <target state="translated">このリソースは追加の証明書のためのものであり、リスナーのデフォルトの証明書を置き換えるものではありません。</target>
        </trans-unit>
        <trans-unit id="3a188b40123fd9e12af2ce4a9cb4a3bcf60454fb" translate="yes" xml:space="preserve">
          <source>This resource is intended to be used in conjunction with a Terraform provider for a particular certificate authority in order to provision a new certificate. This is a &lt;em&gt;logical resource&lt;/em&gt;, so it contributes only to the current Terraform state and does not create any external managed resources.</source>
          <target state="translated">このリソースは、新しい証明書をプロビジョニングするために、特定の認証局のTerraformプロバイダーと組み合わせて使用​​することを目的としています。これは&lt;em&gt;論理リソース&lt;/em&gt;であるため、現在のTerraform状態にのみ寄与し、外部の管理対象リソースを作成しません。</target>
        </trans-unit>
        <trans-unit id="51487a29440be820e8060c52b84fcdb942ad73a9" translate="yes" xml:space="preserve">
          <source>This resource is intended to be used in conjunction with a Terraform provider that has a resource that requires a TLS certificate, such as:</source>
          <target state="translated">このリソースは、TLS 証明書を必要とするリソースを持つ Terraform プロバイダと組み合わせて使用することを意図しています。</target>
        </trans-unit>
        <trans-unit id="dbcb1f226d1ce2d688bea3e5e0e6075fad6de138" translate="yes" xml:space="preserve">
          <source>This resource is primarily intended to be used with &lt;a href=&quot;https://www.vaultproject.io/docs/secrets/generic/index.html&quot;&gt;Vault's &quot;generic&quot; secret backend&lt;/a&gt;, but it is also compatible with any other Vault endpoint that supports the &lt;code&gt;vault read&lt;/code&gt; command.</source>
          <target state="translated">このリソースは、主に&lt;a href=&quot;https://www.vaultproject.io/docs/secrets/generic/index.html&quot;&gt;Vaultの「汎用」シークレットバックエンド&lt;/a&gt;で使用することを目的としていますが、 &lt;code&gt;vault read&lt;/code&gt; コマンドをサポートする他のVaultエンドポイントとも互換性があります。</target>
        </trans-unit>
        <trans-unit id="6faf27654b1b1bbc0a051597a58302b7fe91b720" translate="yes" xml:space="preserve">
          <source>This resource is primarily intended to be used with &lt;a href=&quot;https://www.vaultproject.io/docs/secrets/generic/index.html&quot;&gt;Vault's &quot;generic&quot; secret backend&lt;/a&gt;, but it is also compatible with any other Vault endpoint that supports the &lt;code&gt;vault write&lt;/code&gt; command to create and the &lt;code&gt;vault delete&lt;/code&gt; command to delete.</source>
          <target state="translated">このリソースは、主に&lt;a href=&quot;https://www.vaultproject.io/docs/secrets/generic/index.html&quot;&gt;Vaultの「汎用」シークレットバックエンド&lt;/a&gt;で使用することを目的としていますが、作成する &lt;code&gt;vault write&lt;/code&gt; コマンドと &lt;code&gt;vault delete&lt;/code&gt; コマンドをサポートする他のすべてのVaultエンドポイントとも互換性があります。</target>
        </trans-unit>
        <trans-unit id="fbac90846acaebecd281a578be6b7048fc275adb" translate="yes" xml:space="preserve">
          <source>This resource is the actual Kubernetes master cluster. It can take a few minutes to provision in AWS.</source>
          <target state="translated">このリソースが実際のKubernetesマスタークラスタです。AWSでのプロビジョニングに数分かかることがあります。</target>
        </trans-unit>
        <trans-unit id="5242acfaa96085cf599b356d364f69e74f8e85de" translate="yes" xml:space="preserve">
          <source>This resource is thus useful in the case where Terraform is exclusively managing a set of related keys.</source>
          <target state="translated">このリソースは、Terraformが排他的に関連キーのセットを管理する場合に有用です。</target>
        </trans-unit>
        <trans-unit id="2d9e40c6d5c2abae5a90bb2945f71599fba159ee" translate="yes" xml:space="preserve">
          <source>This resource just establishes ownership of and the TLS settings for a particular domain name. An API can be attached to a particular path under the registered domain name using &lt;a href=&quot;api_gateway_base_path_mapping&quot;&gt;the &lt;code&gt;aws_api_gateway_base_path_mapping&lt;/code&gt; resource&lt;/a&gt;.</source>
          <target state="translated">このリソースは、特定のドメイン名の所有権とTLS設定を確立するだけです。APIは&lt;a href=&quot;api_gateway_base_path_mapping&quot;&gt;、 &lt;code&gt;aws_api_gateway_base_path_mapping&lt;/code&gt; リソース&lt;/a&gt;を使用して、登録済みドメイン名の下の特定のパスにアタッチできます。</target>
        </trans-unit>
        <trans-unit id="32f3d80804ac89de2c7564f3128fc4c5660dd7e0" translate="yes" xml:space="preserve">
          <source>This resource mainly serves as an input to the &lt;a href=&quot;compute_cluster_vm_dependency_rule&quot;&gt;&lt;code&gt;vsphere_compute_cluster_vm_dependency_rule&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;compute_cluster_vm_host_rule&quot;&gt;&lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt;&lt;/a&gt; resources. See the individual resource documentation pages for more information.</source>
          <target state="translated">このリソースは、主に&lt;a href=&quot;compute_cluster_vm_dependency_rule&quot;&gt; &lt;code&gt;vsphere_compute_cluster_vm_dependency_rule&lt;/code&gt; &lt;/a&gt;および&lt;a href=&quot;compute_cluster_vm_host_rule&quot;&gt; &lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt; &lt;/a&gt;リソースへの入力として機能します。詳細については、個々のリソースのドキュメントページを参照してください。</target>
        </trans-unit>
        <trans-unit id="257f815a619ee3fb02a605461d1777f0496a7883" translate="yes" xml:space="preserve">
          <source>This resource mainly serves as an input to the &lt;a href=&quot;compute_cluster_vm_host_rule&quot;&gt;&lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt;&lt;/a&gt; resource - see the documentation for that resource for further details on how to use host groups.</source>
          <target state="translated">このリソースは、主に&lt;a href=&quot;compute_cluster_vm_host_rule&quot;&gt; &lt;code&gt;vsphere_compute_cluster_vm_host_rule&lt;/code&gt; &lt;/a&gt;リソースへの入力として機能します。ホストグループの使用方法の詳細については、そのリソースのドキュメントを参照してください。</target>
        </trans-unit>
        <trans-unit id="483af3e03dab3a49a7e354963e729d01a6e0bd5e" translate="yes" xml:space="preserve">
          <source>This resource manages clusters of security rules in a single device group, enforcing both the contents of individual rules as well as their ordering. Rules are defined in a &lt;code&gt;rule&lt;/code&gt; config block.</source>
          <target state="translated">このリソースは、単一のデバイスグループ内のセキュリティルールのクラスターを管理し、個々のルールの内容とその順序の両方を適用します。ルールは、 &lt;code&gt;rule&lt;/code&gt; 構成ブロックで定義されます。</target>
        </trans-unit>
        <trans-unit id="8db825792d0388e8dbd91ff00939448430b30f30" translate="yes" xml:space="preserve">
          <source>This resource manages clusters of security rules in a single vsys, enforcing both the contents of individual rules as well as their ordering. Rules are defined in a &lt;code&gt;rule&lt;/code&gt; config block.</source>
          <target state="translated">このリソースは、単一のvsysでセキュリティルールのクラスターを管理し、個々のルールの内容とその順序の両方を適用します。ルールは、 &lt;code&gt;rule&lt;/code&gt; 構成ブロックで定義されます。</target>
        </trans-unit>
        <trans-unit id="dc4d248e86b8b28b965a0c94a15b5b43057cd8df" translate="yes" xml:space="preserve">
          <source>This resource manages individual keys, and thus it can create, update and delete the keys explicitly given. However, it is not able to detect and remove additional keys that have been added by non-Terraform means. To manage &lt;em&gt;all&lt;/em&gt; keys sharing a common prefix, and thus have Terraform remove errant keys not present in the configuration, consider using the &lt;code&gt;consul_key_prefix&lt;/code&gt; resource instead.</source>
          <target state="translated">このリソースは個々のキーを管理するため、明示的に指定されたキーを作成、更新、削除できます。ただし、Terraform以外の方法で追加されたキーを検出して削除することはできません。共通のプレフィックスを共有する&lt;em&gt;すべての&lt;/em&gt;キーを管理&lt;em&gt;し&lt;/em&gt;、Terraformに構成に存在しない誤ったキーを削除させるには、代わりに &lt;code&gt;consul_key_prefix&lt;/code&gt; リソースの使用を検討してください。</target>
        </trans-unit>
        <trans-unit id="702062b235285329c9e48876bbbf87221bf7ee81" translate="yes" xml:space="preserve">
          <source>This resource manages relationships between teams and repositories in your Github organization.</source>
          <target state="translated">このリソースは、Github組織内のチームとリポジトリ間の関係を管理します。</target>
        </trans-unit>
        <trans-unit id="9d0e0b3003651d5995c758adf746491d3024a39f" translate="yes" xml:space="preserve">
          <source>This resource manages the full set of security rules in a vsys, enforcing both the contents of individual rules as well as their ordering. Rules are defined in a &lt;code&gt;rule&lt;/code&gt; config block.</source>
          <target state="translated">このリソースは、vsysのセキュリティルールの完全なセットを管理し、個々のルールの内容とその順序の両方を適用します。ルールは、 &lt;code&gt;rule&lt;/code&gt; 構成ブロックで定義されます。</target>
        </trans-unit>
        <trans-unit id="45ce8e89237583e20d028595e67ddcbc3236a33d" translate="yes" xml:space="preserve">
          <source>This resource manages the full set of security rules, enforcing both the contents of individual rules as well as their ordering. Rules are defined in a &lt;code&gt;rule&lt;/code&gt; config block. As this manages the full set of security rules for a given rulebase, any extraneous rules are removed on &lt;code&gt;terraform apply&lt;/code&gt;.</source>
          <target state="translated">このリソースはセキュリティルールの完全なセットを管理し、個々のルールの内容とその順序の両方を適用します。ルールは、 &lt;code&gt;rule&lt;/code&gt; 構成ブロックで定義されます。これは特定のルールベースのセキュリティルールの完全なセットを管理するため、不要なルールは &lt;code&gt;terraform apply&lt;/code&gt; で削除されます。</target>
        </trans-unit>
        <trans-unit id="701ac3031fabb3d39942ebbc9c4991b54950a090" translate="yes" xml:space="preserve">
          <source>This resource manages the lifecycle of a Docker service. By default, the creation, update and delete of services are detached.</source>
          <target state="translated">このリソースはDockerサービスのライフサイクルを管理します。デフォルトでは、サービスの作成、更新、削除は切り離されています。</target>
        </trans-unit>
        <trans-unit id="86e82dd4aba66f709091d5cd12a28a0fd8855977" translate="yes" xml:space="preserve">
          <source>This resource may prove useful when setting up a Route53 record, or an origin for a CloudFront Distribution.</source>
          <target state="translated">このリソースは、Route53レコードやCloudFront Distributionのオリジンを設定する際に役立つかもしれません。</target>
        </trans-unit>
        <trans-unit id="def6f9e2885bf327484606c9853ce02bc9405ff5" translate="yes" xml:space="preserve">
          <source>This resource only exports the &lt;code&gt;id&lt;/code&gt; attribute for the vSphere custom attribute.</source>
          <target state="translated">このリソースは、vSphereカスタム属性の &lt;code&gt;id&lt;/code&gt; 属性のみをエクスポートします。</target>
        </trans-unit>
        <trans-unit id="7438d886d0b9a9846a2144d7cb3385da89226dd1" translate="yes" xml:space="preserve">
          <source>This resource provides a alarm rule resource and it can be used to monitor several cloud services according different metrics. Details for &lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/28608.htm&quot;&gt;alarm rule&lt;/a&gt;.</source>
          <target state="translated">このリソースはアラームルールリソースを提供し、さまざまなメトリックに従っていくつかのクラウドサービスを監視するために使用できます。&lt;a href=&quot;https://www.alibabacloud.com/help/doc-detail/28608.htm&quot;&gt;アラームルールの&lt;/a&gt;詳細。</target>
        </trans-unit>
        <trans-unit id="f02ca4cc44a148db0534bfeb827e27b5f06ee567" translate="yes" xml:space="preserve">
          <source>This resource provides a means to configure a NAT rule in NSX. NAT provides network address translation between one IP address space and another IP address space. NAT rules can be destination NAT or source NAT rules.</source>
          <target state="translated">このリソースは、NSX で NAT ルールを構成するための手段を提供します。NAT は、ある IP アドレス空間と別の IP アドレス空間間のネットワーク アドレス変換を提供します。NAT ルールは、宛先 NAT またはソース NAT ルールにすることができます。</target>
        </trans-unit>
        <trans-unit id="4fcbcaf12ab9bd7b50e07f83e87c21862462ecbb" translate="yes" xml:space="preserve">
          <source>This resource provides a means to configure static routes in NSX to determine where IP traffic is routed.</source>
          <target state="translated">このリソースは、NSX で静的ルートを構成し、IP トラフィックがどこにルーティングされるかを決定する手段を提供します。</target>
        </trans-unit>
        <trans-unit id="19324574a3a48075d048b0707fd9685ad2072f0b" translate="yes" xml:space="preserve">
          <source>This resource provides a means to configure tags that are applied to objects such as virtual machines. A virtual machine is not directly managed by NSX however, NSX allows attachment of tags to a virtual machine. This tagging enables tag based grouping of objects. Deletion of &lt;code&gt;nsxt_vm_tags&lt;/code&gt; resource will remove all tags from the virtual machine and is equivalent to update operation with empty tag set.</source>
          <target state="translated">このリソースは、仮想マシンなどのオブジェクトに適用されるタグを構成する手段を提供します。仮想マシンはNSXによって直接管理されませんが、NSXでは仮想マシンにタグを添付できます。このタグ付けにより、タグベースのオブジェクトのグループ化が可能になります。削除 &lt;code&gt;nsxt_vm_tags&lt;/code&gt; のリソースは、仮想マシンからすべてのタグを削除し、空のタグが設定された更新操作に相当します。</target>
        </trans-unit>
        <trans-unit id="b8f4edcf221e02a462f36bbe6f91dcf24a6e157d" translate="yes" xml:space="preserve">
          <source>This resource provides a means to define a downlink port on a logical router to connect a logical router to a logical switch. The result of this is to provide a default gateway to virtual machines running on the logical switch.</source>
          <target state="translated">このリソースは、論理ルータを論理スイッチに接続するための論理ルータ上のダウンリンクポートを定義する手段を提供します。その結果、論理スイッチ上で動作する仮想マシンにデフォルトゲートウェイを提供します。</target>
        </trans-unit>
        <trans-unit id="4d3593a99371f3f042174614587c7fe1fdf173c5" translate="yes" xml:space="preserve">
          <source>This resource provides a method for the management of a tier 1 logical router. A tier 1 logical router is often used for tenants, users and applications. There can be many tier 1 logical routers connected to a common tier 0 provider router.</source>
          <target state="translated">このリソースは、Tier 1 論理ルータの管理方法を提供します。階層1論理ルータは、テナント、ユーザ、アプリケーションによく使用されます。共通のティア 0 プロバイダ ルータに接続されているティア 1 論理ルータが多数存在することがあります。</target>
        </trans-unit>
        <trans-unit id="9b5d7db60f72da865d3d86933bb5f83e16dce44c" translate="yes" xml:space="preserve">
          <source>This resource provides a method to create a logical switch in NSX. Virtual machines can then be connected to the appropriate logical switch for the desired topology and network connectivity.</source>
          <target state="translated">このリソースは、NSX で論理スイッチを作成する方法を提供します。これにより、仮想マシンは、希望するトポロジとネットワーク接続性に応じて適切な論理スイッチに接続することができます。</target>
        </trans-unit>
        <trans-unit id="86488d0d94379d84631a5ca7cb6e3bb609006cfc" translate="yes" xml:space="preserve">
          <source>This resource provides a method to create and manage a network and security (NS) group in NSX. A NS group is used to group other objects into collections for application of other settings.</source>
          <target state="translated">このリソースは、NSX でネットワークとセキュリティ(NS)グループを作成して管理する方法を提供します。NS グループは、他の設定を適用するために、他のオブジェクトをコレクションにグループ化するために使用されます。</target>
        </trans-unit>
        <trans-unit id="c4a94e4939deb73d722b7e7bdba6fee45129eedc" translate="yes" xml:space="preserve">
          <source>This resource provides a resource to configure a logical port on a logical switch in the NSX system. Like physical switches a logical switch can have one or more ports which can be connected to virtual machines or logical routers.</source>
          <target state="translated">このリソースは、NSX システムの論理スイッチの論理ポートを設定するためのリソースを提供します。物理スイッチと同様に、論理スイッチは仮想マシンや論理ルータに接続できる1つ以上のポートを持つことができます。</target>
        </trans-unit>
        <trans-unit id="e7861967a7134b470abf65af1f5ce6d32f005645" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a firewall section on the NSX manager. A firewall section is a collection of firewall rules that are grouped together.</source>
          <target state="translated">このリソースは、NSX マネージャでファイアウォール セクションを構成する方法を提供します。ファイアウォール セクションは、グループ化されたファイアウォール ルールの集合体です。</target>
        </trans-unit>
        <trans-unit id="a2dd625237d417a7f59020bc7fd5a4072fbda155" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used with the NSX firewall. A networking and security service is an object that contains the TCP/UDP algorithm, source ports and destination ports in a single entity.</source>
          <target state="translated">このリソースは、NSX ファイアウォールで使用できるネットワークおよびセキュリティサービスを構成する方法を提供します。ネットワークおよびセキュリティサービスは、TCP/UDP アルゴリズム、ソースポート、およびデスティネーションポートを 1 つのエンティティに含むオブジェクトです。</target>
        </trans-unit>
        <trans-unit id="e968250aa81a218218e8424d2c5847734fddbf42" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for configuration of layer 4 ports.</source>
          <target state="translated">このリソースは、NSX 内で使用できるネットワークおよびセキュリティサービスを構成する方法を提供します。この特定のサービスは、レイヤ 4 ポートの構成のためのものです。</target>
        </trans-unit>
        <trans-unit id="39e6cab1fc405700b9dd5d1d0cf40647aa77f297" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for the ICMP protocol.</source>
          <target state="translated">このリソースは、NSX 内で使用できるネットワークおよびセキュリティ サービスを構成する方法を提供します。この特定のサービスは、ICMP プロトコルのためのものです。</target>
        </trans-unit>
        <trans-unit id="cebd12ed460c6c6c5eb0652051487bb9e371f742" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for the IGMP protocol.</source>
          <target state="translated">このリソースは、NSX 内で使用できるネットワークおよびセキュリティサービスを構成する方法を提供します。この特定のサービスは、IGMP プロトコルに対応しています。</target>
        </trans-unit>
        <trans-unit id="c9f06e9db350b88b81e6c49202952e763b4c0006" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for the IP protocol.</source>
          <target state="translated">このリソースは、NSX 内で使用できるネットワークおよびセキュリティ サービスを構成する方法を提供します。この特定のサービスは、IP プロトコル用です。</target>
        </trans-unit>
        <trans-unit id="cc85ace8faf8f30ec8d63cb47985c2eee32a7f8e" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure a networking and security service which can be used within NSX. This specific service is for the layer 2 Ethernet protocol.</source>
          <target state="translated">このリソースは、NSX 内で使用できるネットワークおよびセキュリティ サービスを構成する方法を提供します。この特定のサービスは、レイヤ 2 イーサネット プロトコル用です。</target>
        </trans-unit>
        <trans-unit id="40620f3070037d8e3c0bc8fae1baba133f3c7733" translate="yes" xml:space="preserve">
          <source>This resource provides a way to configure the DHCP relay service on the NSX manager. The DHCP relay service uses a DHCP relay profile and later consumed by a router link port to provide DHCP addresses to virtual machines connected to a logical switch.</source>
          <target state="translated">このリソースは、NSX マネージャで DHCP リレーサービスを構成する方法を提供します。DHCP リレーサービスは、論理スイッチに接続された仮想マシンに DHCP アドレスを提供するために、DHCP リレープロファイルを使用し、後にルータリンクポートによって消費されます。</target>
        </trans-unit>
        <trans-unit id="c461b6f3a6d7208a2ec4ce9d75ad48e080e2358f" translate="yes" xml:space="preserve">
          <source>This resource provides the ability to configure a logical router link port on a tier 0 logical router. This port can then be used to connect the tier 0 logical router to another logical router.</source>
          <target state="translated">このリソースは、ティア 0 論理ルータ上の論理ルータリンクポートを設定する機能を提供します。このポートを使用して、ティア 0 論理ルータを別の論理ルータに接続することができます。</target>
        </trans-unit>
        <trans-unit id="20775f0f04b35e2918e13b14af6ee24ee8af1573" translate="yes" xml:space="preserve">
          <source>This resource provides the ability to configure a logical router link port on a tier 1 logical router. This port can then be used to connect the tier 1 logical router to another logical router.</source>
          <target state="translated">このリソースは、Tier 1 論理ルータ上の論理ルータリンクポートを設定する機能を提供します。このポートは、ティア 1 論理ルータを別の論理ルータに接続するために使用できます。</target>
        </trans-unit>
        <trans-unit id="711163b6d570b3ee481bbc8ce6b0d89148561d3d" translate="yes" xml:space="preserve">
          <source>This resource provides the following &lt;a href=&quot;../../../configuration/resources#timeouts&quot;&gt;Timeouts&lt;/a&gt; configuration options:</source>
          <target state="translated">このリソースは、次の&lt;a href=&quot;../../../configuration/resources#timeouts&quot;&gt;タイムアウト&lt;/a&gt;構成オプションを提供します。</target>
        </trans-unit>
        <trans-unit id="078628f0278745423a4700bde7ef040597e165a5" translate="yes" xml:space="preserve">
          <source>This resource represents a successful validation of an ACM certificate in concert with other resources.</source>
          <target state="translated">このリソースは、他のリソースと連携してACM証明書の検証に成功したことを表しています。</target>
        </trans-unit>
        <trans-unit id="637574e5ae7bc9b818a000a7af46f1d3d31cd4f9" translate="yes" xml:space="preserve">
          <source>This resource sets the AWS public key and the type of document that can be verified against the key that Vault can then use to verify the instance identity documents making auth requests.</source>
          <target state="translated">このリソースは、AWS の公開鍵と、Vault が auth リクエストを行うインスタンス ID ドキュメントを検証するために使用できる鍵に対して検証可能なドキュメントの種類を設定します。</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
