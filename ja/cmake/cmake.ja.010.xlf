<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="07b2b8ce7853c0a4c65d922e145c461dddb05990" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;a href=&quot;../prop_tgt/runtime_output_directory#prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot; id=&quot;index-0-prop_tgt:RUNTIME_OUTPUT_DIRECTORY&quot;&gt;&lt;code&gt;RUNTIME_OUTPUT_DIRECTORY&lt;/code&gt;&lt;/a&gt; property on all the targets. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2778b3a0e486f0c721c0222c6fea5123019d983" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;a href=&quot;../prop_tgt/vs_just_my_code_debugging#prop_tgt:VS_JUST_MY_CODE_DEBUGGING&quot; id=&quot;index-0-prop_tgt:VS_JUST_MY_CODE_DEBUGGING&quot;&gt;&lt;code&gt;VS_JUST_MY_CODE_DEBUGGING&lt;/code&gt;&lt;/a&gt; property on all targets when they are created. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="726aa8c3a37e97efb035d1ae3dc0a21350a92b6b" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-1-prop_tgt:WIN32_EXECUTABLE&quot;&gt;&lt;code&gt;WIN32_EXECUTABLE&lt;/code&gt;&lt;/a&gt; property on all the targets. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e80bb4f05972388e2ca062db1d86a5084c5c71b9" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;code&gt;ARCHIVE_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property on all the targets. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a592fe089a64cf39ae7cd254302db2ad833af9b8" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;code&gt;INTERPROCEDURAL_OPTIMIZATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property on all the targets. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78708c753855b181aee47bea75b5a83ce3badcdc" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;code&gt;LIBRARY_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property on all the targets. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10f89fa76c5e52a57fcb8060d52c8995847834f" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;code&gt;MAP_IMPORTED_CONFIG_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property on all the targets. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fb246c3c9013a50c7f02bae9027867682dd54e3" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;code&gt;NETRC&lt;/code&gt; option for &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(DOWNLOAD)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-1-command:file&quot;&gt;&lt;code&gt;file(UPLOAD)&lt;/code&gt;&lt;/a&gt; commands and the module &lt;a href=&quot;../module/externalproject#module:ExternalProject&quot; id=&quot;index-0-module:ExternalProject&quot;&gt;&lt;code&gt;ExternalProject&lt;/code&gt;&lt;/a&gt;. See those commands for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72eebc04de5c6441d7003342edb2d44ae166e79" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;code&gt;NETRC_FILE&lt;/code&gt; option for &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(DOWNLOAD)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-1-command:file&quot;&gt;&lt;code&gt;file(UPLOAD)&lt;/code&gt;&lt;/a&gt; commands and the module &lt;a href=&quot;../module/externalproject#module:ExternalProject&quot; id=&quot;index-0-module:ExternalProject&quot;&gt;&lt;code&gt;ExternalProject&lt;/code&gt;&lt;/a&gt;. See those commands for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717b44f133e8c46f5b6555a30e0ee4a4ad5ee935" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the &lt;code&gt;RUNTIME_OUTPUT_DIRECTORY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; property on all the targets. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e99177474080b798e3a3a5a6e6abc45c2a52062" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the property on each target as it is created. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="218dff583d5b22c76da78630d54487696114348f" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the target property &lt;a href=&quot;../prop_tgt/enable_exports#prop_tgt:ENABLE_EXPORTS&quot; id=&quot;index-0-prop_tgt:ENABLE_EXPORTS&quot;&gt;&lt;code&gt;ENABLE_EXPORTS&lt;/code&gt;&lt;/a&gt; for executable targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79686565b21265a81d1b5f2f456e5df2824ba317" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the target property &lt;a href=&quot;../prop_tgt/link_search_end_static#prop_tgt:LINK_SEARCH_END_STATIC&quot; id=&quot;index-0-prop_tgt:LINK_SEARCH_END_STATIC&quot;&gt;&lt;code&gt;LINK_SEARCH_END_STATIC&lt;/code&gt;&lt;/a&gt; for all targets. If set, it&amp;rsquo;s value is also used by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7582d814a7cd214ef472327eb1896c535241b39" translate="yes" xml:space="preserve">
          <source>This variable is used to initialize the target property &lt;a href=&quot;../prop_tgt/link_search_start_static#prop_tgt:LINK_SEARCH_START_STATIC&quot; id=&quot;index-0-prop_tgt:LINK_SEARCH_START_STATIC&quot;&gt;&lt;code&gt;LINK_SEARCH_START_STATIC&lt;/code&gt;&lt;/a&gt; for all targets. If set, it&amp;rsquo;s value is also used by the &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fffaa5da74af8621650dffa36e650fd392f3547" translate="yes" xml:space="preserve">
          <source>This variable is used with &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_WRAPPER_FLAG&lt;/code&gt; variable to format &lt;code&gt;LINKER:&lt;/code&gt; prefix in the link options (see &lt;a href=&quot;../command/add_link_options#command:add_link_options&quot; id=&quot;index-0-command:add_link_options&quot;&gt;&lt;code&gt;add_link_options()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/target_link_options#command:target_link_options&quot; id=&quot;index-0-command:target_link_options&quot;&gt;&lt;code&gt;target_link_options()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cf0f293ddeaf15d9d124f9e21ece8d692225ffa" translate="yes" xml:space="preserve">
          <source>This variable may be set to a path to install to when cross-compiling. This can be useful if the path in &lt;a href=&quot;cmake_sysroot#variable:CMAKE_SYSROOT&quot; id=&quot;index-0-variable:CMAKE_SYSROOT&quot;&gt;&lt;code&gt;CMAKE_SYSROOT&lt;/code&gt;&lt;/a&gt; is read-only, or otherwise should remain pristine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8adaeabdff6311228ecd2561ad02c5b0d49985" translate="yes" xml:space="preserve">
          <source>This variable may be useful when a developer has compiled a custom version of a common library and wishes to link it to a dependent project. If this variable is set to &lt;code&gt;TRUE&lt;/code&gt;, it would prevent a dependent project&amp;rsquo;s call to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; from selecting the default library located by the system&amp;rsquo;s &lt;code&gt;Find&amp;lt;pkg&amp;gt;.cmake&lt;/code&gt; module before finding the developer&amp;rsquo;s custom built library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="519d607c6fc84336fd1bc755ec6fa3e8dc4e786b" translate="yes" xml:space="preserve">
          <source>This variable may hold a single prefix or a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; of multiple prefixes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ecd5164e90ad94a6eaf53cb3ac07d0b5c4894ca" translate="yes" xml:space="preserve">
          <source>This variable may hold a single prefix or a list of prefixes separated by &lt;code&gt;:&lt;/code&gt; on UNIX or &lt;code&gt;;&lt;/code&gt; on Windows (the same as the &lt;code&gt;PATH&lt;/code&gt; environment variable convention on those platforms).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369f4360f842f7d0000fede6e92df3e530205095" translate="yes" xml:space="preserve">
          <source>This variable may only be set in a toolchain file specified by the &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9aa3f279def53d969879eecbcb013b4974288e" translate="yes" xml:space="preserve">
          <source>This variable serves the same purpose during packaging as the &lt;a href=&quot;cmake_install_default_directory_permissions#variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot; id=&quot;index-0-variable:CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&quot;&gt;&lt;code&gt;CMAKE_INSTALL_DEFAULT_DIRECTORY_PERMISSIONS&lt;/code&gt;&lt;/a&gt; variable serves during installation (e.g. &lt;code&gt;make install&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fcdd3d9330a018ee9aabe29668ad3560a91cf37" translate="yes" xml:space="preserve">
          <source>This variable should not be set by a project in CMake code. Project developers running CMake may set this variable in their cache to enable the warning (e.g. &lt;code&gt;-DCMAKE_POLICY_WARNING_CMP&amp;lt;NNNN&amp;gt;=ON&lt;/code&gt;). Alternatively, running &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;--debug-output&lt;/code&gt;, &lt;code&gt;--trace&lt;/code&gt;, or &lt;code&gt;--trace-expand&lt;/code&gt; option will also enable the warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391c29da8ad9907fb77d6616e30206b9f69d020f" translate="yes" xml:space="preserve">
          <source>This variable should not be set by a project in CMake code; use &lt;a href=&quot;../command/cmake_policy#command:cmake_policy&quot; id=&quot;index-1-command:cmake_policy&quot;&gt;&lt;code&gt;cmake_policy(SET)&lt;/code&gt;&lt;/a&gt; instead. Users running CMake may set this variable in the cache (e.g. &lt;code&gt;-DCMAKE_POLICY_DEFAULT_CMP&amp;lt;NNNN&amp;gt;=&amp;lt;OLD|NEW&amp;gt;&lt;/code&gt;) to set a policy not otherwise set by the project. Set to &lt;code&gt;OLD&lt;/code&gt; to quiet a policy warning while using old behavior or to &lt;code&gt;NEW&lt;/code&gt; to try building the project with new behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5faf8907d4f29616c3cf279b326979e7e5b02ed8" translate="yes" xml:space="preserve">
          <source>This variable should not be set by project code. It is meant to be set by CMake&amp;rsquo;s platform information modules for the current toolchain, or by a toolchain file when used with &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60f3d7a07b11f4b7322ab6db27324fa80cdc0e49" translate="yes" xml:space="preserve">
          <source>This variable triggers the definition of &lt;a href=&quot;cmake_warn_on_absolute_install_destination#variable:CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION&quot; id=&quot;index-0-variable:CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION&quot;&gt;&lt;code&gt;CMAKE_WARN_ON_ABSOLUTE_INSTALL_DESTINATION&lt;/code&gt;&lt;/a&gt; when CPack runs &lt;code&gt;cmake_install.cmake&lt;/code&gt; scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de42c3958f2fa71114b27e5bd92dd6482e11dbfa" translate="yes" xml:space="preserve">
          <source>This variable will be set to true by CMake if the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable has been set manually (i.e. in a toolchain file or as a cache entry from the &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake&lt;/code&gt;&lt;/a&gt; command line). In most cases, manually setting &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; will only be done when cross compiling, since it will otherwise be given the same value as &lt;a href=&quot;cmake_host_system_name#variable:CMAKE_HOST_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_HOST_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_HOST_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; if not manually set, which is correct for the non-cross-compiling case. In the event that &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; is manually set to the same value as &lt;a href=&quot;cmake_host_system_name#variable:CMAKE_HOST_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_HOST_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_HOST_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt;, then &lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt; will still be set to true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd14bb9b9bc6197cb6fe39fe9658325559faa1f0" translate="yes" xml:space="preserve">
          <source>This was undocumented behavior.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cecc2a64d12c90a27d375d6258315a1031e656b" translate="yes" xml:space="preserve">
          <source>This way, the build specification of &lt;code&gt;exe1&lt;/code&gt; is expressed entirely as linked targets, and the complexity of compiler-specific flags is encapsulated in an &lt;code&gt;INTERFACE&lt;/code&gt; library target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d205ab6df6ad693dc2a342b4a78feb65a6695c36" translate="yes" xml:space="preserve">
          <source>This will also be used to display a weighted test timing result in label and subproject summaries in the command line output of &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;. The wall clock time for the test run will be multiplied by this property to give a better idea of how much cpu resource CTest allocated for the test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f8c2ca71269005da72a6cc503da351347d1bdd" translate="yes" xml:space="preserve">
          <source>This will be the working directory for the test. If specified it will also be the output directory used for the log file of the test run. If not specified the temporary directory &lt;code&gt;${CMAKE_BINARY_DIR}/Matlab&lt;/code&gt; will be used as the working directory and the log location.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11d87a82b6dc2d93d7603862fced8d455ba20d69" translate="yes" xml:space="preserve">
          <source>This will cause the export macros to expand to nothing when building the static library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7c551e2a9aa6b7e19475a3720855450fc04d7db" translate="yes" xml:space="preserve">
          <source>This will check that the &lt;code&gt;REQUIRED_VARS&lt;/code&gt; contain values (that do not end in &lt;code&gt;-NOTFOUND&lt;/code&gt;) and set &lt;code&gt;Foo_FOUND&lt;/code&gt; appropriately. It will also cache those values. If &lt;code&gt;Foo_VERSION&lt;/code&gt; is set, and a required version was passed to &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-3-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt;, it will check the requested version against the one in &lt;code&gt;Foo_VERSION&lt;/code&gt;. It will also print messages as appropriate; note that if the package was found, it will print the contents of the first required variable to indicate where it was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc05a0006dee9066b853dd7aba87f95f5b0ef3b" translate="yes" xml:space="preserve">
          <source>This will define the following variables in your project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a41cdefb6483bcb2cef47213840651236ce54d2" translate="yes" xml:space="preserve">
          <source>This will install all of the symlinks and &lt;code&gt;libfoo.so.1.2.3&lt;/code&gt; itself into &lt;code&gt;lib&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1863df214c1641f329513530887cc5243a3af25f" translate="yes" xml:space="preserve">
          <source>This will print the LOCATION and INTERFACE_INCLUDE_DIRS properties for both targets foo and bar.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="716dc3b5d227f627d5acb134662d68ef77086e11" translate="yes" xml:space="preserve">
          <source>This works well for all generators except &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Ninja.html#generator:Ninja&quot; id=&quot;index-0-generator:Ninja&quot;&gt;&lt;code&gt;Ninja&lt;/code&gt;&lt;/a&gt;. The Ninja build tool sees a rule listing &lt;code&gt;byproduct.txt&lt;/code&gt; as a dependency and no rule listing it as an output. Ninja then complains that there is no way to satisfy the dependency and stops building even though there are order-only dependencies that ensure &lt;code&gt;byproduct.txt&lt;/code&gt; will exist before its consumers need it. See discussion of this problem in &lt;a href=&quot;https://github.com/martine/ninja/issues/760&quot;&gt;Ninja Issue 760&lt;/a&gt; for further details on why Ninja works this way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c9c49d9005d0686826fb4192cd457502326063" translate="yes" xml:space="preserve">
          <source>Though Producer isn&amp;rsquo;t directly part of OpenSceneGraph, its primary user is OSG so I consider this part of the Findosg* suite used to find OpenSceneGraph components. You&amp;rsquo;ll notice that I accept OSGDIR as an environment path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52086dae7c15ef7926a1b26791327c8287e7ec2c" translate="yes" xml:space="preserve">
          <source>Thread-local variables, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2659.htm&quot;&gt;N2659&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d1337250b57bee318062084ee837c4dad22135" translate="yes" xml:space="preserve">
          <source>Three components are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c00fe8e7c9fafc073ca91098f4c4cdaf8cfea34" translate="yes" xml:space="preserve">
          <source>Three different states possible that control when the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator emits the &lt;code&gt;EFFECTIVE_PLATFORM_NAME&lt;/code&gt; variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d618b2b0a4e000f2f26aeec10cf61cb5c0915b4d" translate="yes" xml:space="preserve">
          <source>To add a path or a jar file to the class path you can do this with the &lt;code&gt;CMAKE_JAVA_INCLUDE_PATH&lt;/code&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e873af964c7d0117f70d742379775d358751982" translate="yes" xml:space="preserve">
          <source>To add a version to the target output name you can set it using the &lt;code&gt;VERSION&lt;/code&gt; named argument to &lt;code&gt;add_jar()&lt;/code&gt;. The following example will create a jar file with the name &lt;code&gt;shibboleet-1.0.0.jar&lt;/code&gt; and will create a symlink &lt;code&gt;shibboleet.jar&lt;/code&gt; pointing to the jar with the version information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ea2a1e377b6cd175620269a788a5333fdbd5179" translate="yes" xml:space="preserve">
          <source>To add compile flags to the target you can set these flags with the following variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bee2b57dc6bf9f7c81604683dd788863e9796dc5" translate="yes" xml:space="preserve">
          <source>To be &amp;ldquo;compatible&amp;rdquo;, the &lt;a href=&quot;../prop_tgt/position_independent_code#prop_tgt:POSITION_INDEPENDENT_CODE&quot; id=&quot;index-3-prop_tgt:POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property, if set must be either the same, in a boolean sense, as the &lt;a href=&quot;../prop_tgt/interface_position_independent_code#prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot; id=&quot;index-1-prop_tgt:INTERFACE_POSITION_INDEPENDENT_CODE&quot;&gt;&lt;code&gt;INTERFACE_POSITION_INDEPENDENT_CODE&lt;/code&gt;&lt;/a&gt; property of all transitively specified dependencies on which that property is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59008da40b2ea266b9abeaa841f22097ea212647" translate="yes" xml:space="preserve">
          <source>To be able to build managed C++ targets with VS 2017 and above the component &lt;code&gt;C++/CLI support&lt;/code&gt; must be installed, which may not be done by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a0b0fe9dd20427f45a85ef3d5b7ff7fd0e97c0d" translate="yes" xml:space="preserve">
          <source>To build Tcl wrappers, you should add shared library and link it to ${CABLE_TCL_LIBRARY}. You should also add ${CABLE_INCLUDE_DIR} as an include directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ae88c7bfdddb36f963cff1f5c76d765426ba78f" translate="yes" xml:space="preserve">
          <source>To build a software project with CMake, &lt;a href=&quot;#generate-a-project-buildsystem&quot;&gt;Generate a Project Buildsystem&lt;/a&gt;. Optionally use &lt;strong&gt;cmake&lt;/strong&gt; to &lt;a href=&quot;#build-a-project&quot;&gt;Build a Project&lt;/a&gt;, &lt;a href=&quot;#install-a-project&quot;&gt;Install a Project&lt;/a&gt; or just run the corresponding build tool (e.g. &lt;code&gt;make&lt;/code&gt;) directly. &lt;strong&gt;cmake&lt;/strong&gt; can also be used to &lt;a href=&quot;#view-help&quot;&gt;View Help&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dbcf4da256b6c9ceb51c4d267ad5bfa9925fdf" translate="yes" xml:space="preserve">
          <source>To change any of these defaults or override any other Doxygen config option, set relevant variables before calling &lt;code&gt;doxygen_add_docs()&lt;/code&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f833844898f38f3afe71b68ee4180f4b05ee4a0" translate="yes" xml:space="preserve">
          <source>To configure a build directory already containing cmake files, it is enough to set &amp;ldquo;buildDirectory&amp;rdquo; via &amp;ldquo;setGlobalSettings&amp;rdquo;. To create a fresh build directory you also need to set &amp;ldquo;currentGenerator&amp;rdquo; and &amp;ldquo;sourceDirectory&amp;rdquo; via &amp;ldquo;setGlobalSettings&amp;rdquo; in addition to &amp;ldquo;buildDirectory&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bde2eabc596974dc209498d0e89ddc66551fd19" translate="yes" xml:space="preserve">
          <source>To control generation of Position Independent Executable (&lt;code&gt;PIE&lt;/code&gt;) or not, some flags are required at link time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f724b4f026e219e014bab4abdbe80ed25682b42" translate="yes" xml:space="preserve">
          <source>To control the order in which &lt;code&gt;find_package&lt;/code&gt; checks for compatibility use the two variables &lt;a href=&quot;../variable/cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-1-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../variable/cmake_find_package_sort_direction#variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_DIRECTION&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_SORT_DIRECTION&lt;/code&gt;&lt;/a&gt;. For instance in order to select the highest version one can set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be54c69c84857a70d5d4759c41c2966885e0e4c0" translate="yes" xml:space="preserve">
          <source>To control the sort order, the &lt;code&gt;ORDER&lt;/code&gt; keyword can be given. The &lt;code&gt;&amp;lt;order&amp;gt;&lt;/code&gt; option should be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f4ca82a19d6ff8d50adfb359582acf7d64ff5d0" translate="yes" xml:space="preserve">
          <source>To customize &lt;code&gt;Info.plist&lt;/code&gt; file in the framework, use &lt;a href=&quot;macosx_framework_info_plist#prop_tgt:MACOSX_FRAMEWORK_INFO_PLIST&quot; id=&quot;index-0-prop_tgt:MACOSX_FRAMEWORK_INFO_PLIST&quot;&gt;&lt;code&gt;MACOSX_FRAMEWORK_INFO_PLIST&lt;/code&gt;&lt;/a&gt; target property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c024ad2df4dfc7d8c160ac0d80984fa50fb410f" translate="yes" xml:space="preserve">
          <source>To define a custom manifest for the jar, you can set it with the &lt;code&gt;MANIFEST&lt;/code&gt; named argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aee7e294d6f342669cc8697a9f3a3691c0c11b7" translate="yes" xml:space="preserve">
          <source>To define an entry point in your jar you can set it with the &lt;code&gt;ENTRY_POINT&lt;/code&gt; named argument:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1a5e95d577649bf3e2bde0f61fc6483909e991" translate="yes" xml:space="preserve">
          <source>To disable this behavior, enable the &lt;code&gt;Qt5_NO_LINK_QTMAIN&lt;/code&gt; target property for Qt 5 based targets or &lt;code&gt;QT4_NO_LINK_QTMAIN&lt;/code&gt; target property for Qt 4 based targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ea625592664cc7989e86900dcb0ba194c8db33" translate="yes" xml:space="preserve">
          <source>To enable submissions to a CDash server, create a &lt;code&gt;CTestConfig.cmake&lt;/code&gt; file at the top of the project with content such as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdde9b6a18d32de9e16d6724bd13dedf8a2974f3" translate="yes" xml:space="preserve">
          <source>To ensure consistent versions between components &lt;code&gt;Interpreter&lt;/code&gt;, &lt;code&gt;Compiler&lt;/code&gt;, &lt;code&gt;Development&lt;/code&gt; and &lt;code&gt;NumPy&lt;/code&gt;, specify all components at the same time:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dfe969c0946de6f33bc4c9a7c27f9490a4e4ceb" translate="yes" xml:space="preserve">
          <source>To generate a buildsystem with CMake, the following must be selected:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae0773c62eb4c3bd49dee7314bc416b87f03599" translate="yes" xml:space="preserve">
          <source>To get the location of an imported target read one of the &lt;a href=&quot;location#prop_tgt:LOCATION&quot; id=&quot;index-0-prop_tgt:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;LOCATION_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; properties.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82534e82714f9a2c53095ca916c0f9e267e04283" translate="yes" xml:space="preserve">
          <source>To have the expected result (i.e. &lt;code&gt;FOO_EXTRA_THINGS&lt;/code&gt; if config is &lt;code&gt;Debug&lt;/code&gt;), it is required to evaluate the output of &lt;code&gt;$&amp;lt;TARGET_PROPERTY:foo,CUSTOM_KEYS&amp;gt;&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee98229490f2aa27c248fdfff0446e66d8293902" translate="yes" xml:space="preserve">
          <source>To join list&amp;rsquo;s elements, use preferably the &lt;code&gt;JOIN&lt;/code&gt; operator from &lt;a href=&quot;list#command:list&quot; id=&quot;index-0-command:list&quot;&gt;&lt;code&gt;list()&lt;/code&gt;&lt;/a&gt; command. This allows for the elements to have special characters like &lt;code&gt;;&lt;/code&gt; in them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ccb7aa0f6ccf6e860bada79776f102d2e3b93a8" translate="yes" xml:space="preserve">
          <source>To maintain a pristine source tree, perform an &lt;em&gt;out-of-source&lt;/em&gt; build by using a separate dedicated build tree. An &lt;em&gt;in-source&lt;/em&gt; build in which the build tree is placed in the same directory as the source tree is also supported, but discouraged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62b2d19444737209eb56eab09ba5ef2a435cceff" translate="yes" xml:space="preserve">
          <source>To make packages compliant with distribution filesystem layout policies, if projects must specify a &lt;code&gt;DESTINATION&lt;/code&gt;, it is recommended that they use a path that begins with the appropriate &lt;a href=&quot;../module/gnuinstalldirs#module:GNUInstallDirs&quot; id=&quot;index-1-module:GNUInstallDirs&quot;&gt;&lt;code&gt;GNUInstallDirs&lt;/code&gt;&lt;/a&gt; variable. This allows package maintainers to control the install destination by setting the appropriate cache variables. The following example shows a static library being installed to the default destination provided by &lt;a href=&quot;../module/gnuinstalldirs#module:GNUInstallDirs&quot; id=&quot;index-2-module:GNUInstallDirs&quot;&gt;&lt;code&gt;GNUInstallDirs&lt;/code&gt;&lt;/a&gt;, but with its headers installed to a project-specific subdirectory that follows the above recommendation:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f7106605828d2db7eade43973fc17616f14ab1" translate="yes" xml:space="preserve">
          <source>To make packages compliant with distribution filesystem layout policies, if projects must specify a &lt;code&gt;DESTINATION&lt;/code&gt;, it is recommended that they use a path that begins with the appropriate &lt;a href=&quot;../module/gnuinstalldirs#module:GNUInstallDirs&quot; id=&quot;index-4-module:GNUInstallDirs&quot;&gt;&lt;code&gt;GNUInstallDirs&lt;/code&gt;&lt;/a&gt; variable. This allows package maintainers to control the install destination by setting the appropriate cache variables. The following example shows how to follow this advice while installing headers to a project-specific subdirectory:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="183cf5157749026e0c75b366055ea7029c4ca1d5" translate="yes" xml:space="preserve">
          <source>To make packages compliant with distribution filesystem layout policies, if projects must specify a &lt;code&gt;DESTINATION&lt;/code&gt;, it is recommended that they use a path that begins with the appropriate &lt;a href=&quot;../module/gnuinstalldirs#module:GNUInstallDirs&quot; id=&quot;index-6-module:GNUInstallDirs&quot;&gt;&lt;code&gt;GNUInstallDirs&lt;/code&gt;&lt;/a&gt; variable. This allows package maintainers to control the install destination by setting the appropriate cache variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64f74c9c0366345f67b01f2b8cb9c34d93b25d1" translate="yes" xml:space="preserve">
          <source>To obtain the description from the most recent call to &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; in the current directory scope or above, see the &lt;a href=&quot;project_description#variable:PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:PROJECT_DESCRIPTION&quot;&gt;&lt;code&gt;PROJECT_DESCRIPTION&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77b90eb5cb771aea7cef1bc15e682924c4098c2f" translate="yes" xml:space="preserve">
          <source>To obtain the homepage URL from the most recent call to &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; in the current directory scope or above, see the &lt;a href=&quot;project_homepage_url#variable:PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:PROJECT_HOMEPAGE_URL&quot;&gt;&lt;code&gt;PROJECT_HOMEPAGE_URL&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb4c0b469cd1ec586301cdfbeaf10022a23c7f28" translate="yes" xml:space="preserve">
          <source>To obtain the name from the most recent call to &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; in the current directory scope or above, see the &lt;a href=&quot;project_name#variable:PROJECT_NAME&quot; id=&quot;index-0-variable:PROJECT_NAME&quot;&gt;&lt;code&gt;PROJECT_NAME&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e339e27f6e269ab85224f1eca23b4ef9efe5d0" translate="yes" xml:space="preserve">
          <source>To obtain the version from the most recent call to &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-3-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; in the current directory scope or above, see the &lt;a href=&quot;project_version#variable:PROJECT_VERSION&quot; id=&quot;index-0-variable:PROJECT_VERSION&quot;&gt;&lt;code&gt;PROJECT_VERSION&lt;/code&gt;&lt;/a&gt; variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f06a8d5735330270105b08af337314c21d1d94" translate="yes" xml:space="preserve">
          <source>To pass options to the linker tool, each compiler driver has is own syntax. The &lt;code&gt;LINKER:&lt;/code&gt; prefix can be used to specify, in a portable way, options to pass to the linker tool. The &lt;code&gt;LINKER:&lt;/code&gt; prefix is replaced by the required driver option and the rest of the option string defines linker arguments using &lt;code&gt;,&lt;/code&gt; as separator. These arguments will be formatted according to the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_WRAPPER_FLAG&lt;/code&gt; and &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_WRAPPER_FLAG_SEP&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b738a77aeecf0988d929ca13cd535807987cd69" translate="yes" xml:space="preserve">
          <source>To prevent ambiguity, potential variable or keyword names can be specified in a &lt;a href=&quot;../manual/cmake-language.7#quoted-argument&quot;&gt;Quoted Argument&lt;/a&gt; or a &lt;a href=&quot;../manual/cmake-language.7#bracket-argument&quot;&gt;Bracket Argument&lt;/a&gt;. A quoted or bracketed variable or keyword will be interpreted as a string and not dereferenced or interpreted. See policy &lt;a href=&quot;../policy/cmp0054#policy:CMP0054&quot; id=&quot;index-0-policy:CMP0054&quot;&gt;&lt;code&gt;CMP0054&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f69900341d20cb3c6907a0fa8ac774354238cb" translate="yes" xml:space="preserve">
          <source>To prevent users being overwhelmed with settings to configure, try to keep as many options as possible out of the cache, leaving at least one option which can be used to disable use of the module, or locate a not-found library (e.g. &lt;code&gt;Xxx_ROOT_DIR&lt;/code&gt;). For the same reason, mark most cache options as advanced. For packages which provide both debug and release binaries, it is common to create cache variables with a &lt;code&gt;_LIBRARY_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; suffix, such as &lt;code&gt;Foo_LIBRARY_RELEASE&lt;/code&gt; and &lt;code&gt;Foo_LIBRARY_DEBUG&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b9083764a071dd4f361beae09229867fed9afee" translate="yes" xml:space="preserve">
          <source>To print selected pages from the CMake documentation, use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37eb112c12663132388f7f8fea66a66b61978cb" translate="yes" xml:space="preserve">
          <source>To provide the module with a hint about where to find your &lt;code&gt;HDF5&lt;/code&gt; installation, you can set the environment variable &lt;code&gt;HDF5_ROOT&lt;/code&gt;. The Find module will then look in this path when searching for &lt;code&gt;HDF5&lt;/code&gt; executables, paths, and libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c11299d2fcf0cef7d91cba905ad759aae7b19838" translate="yes" xml:space="preserve">
          <source>To reference the installation prefix itself with a relative path use &lt;code&gt;.&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd550fda84dc96e8fb914f43b8723d96a52ff6e4" translate="yes" xml:space="preserve">
          <source>To silence the &lt;code&gt;CMP0071&lt;/code&gt; warning source files can be excluded from &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-5-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-5-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; processing by setting the source file properties &lt;a href=&quot;../prop_sf/skip_automoc#prop_sf:SKIP_AUTOMOC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOMOC&quot;&gt;&lt;code&gt;SKIP_AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/skip_autouic#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt;&lt;code&gt;SKIP_AUTOUIC&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt;&lt;code&gt;SKIP_AUTOGEN&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c61f86dedb4273b2f795fd808d2d219253b05d4" translate="yes" xml:space="preserve">
          <source>To support legacy CMake code, unquoted arguments may also contain double-quoted strings (&lt;code&gt;&quot;...&quot;&lt;/code&gt;, possibly enclosing horizontal whitespace), and make-style variable references (&lt;code&gt;$(MAKEVAR)&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8a1dcb51bc1f4a4df71f552ab02592c4156d76" translate="yes" xml:space="preserve">
          <source>To test whether an environment variable is defined, use the signature &lt;code&gt;if(DEFINED ENV{&amp;lt;name&amp;gt;})&lt;/code&gt; of the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72a0be973efa84c4a660de1f408d047ebccacead" translate="yes" xml:space="preserve">
          <source>To use a different output directory than &lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt; you can set it with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce26f6a8da3097087e0fab0e140c7e4daf5f0ee8" translate="yes" xml:space="preserve">
          <source>To use a different output name for the target you can set it with:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3e1900240d888bab5f06b753a8c3bb00531b99" translate="yes" xml:space="preserve">
          <source>To use launchers, set CTEST_USE_LAUNCHERS to ON in a ctest -S dashboard script, and then also set it in the cache of the configured project. Both cmake and ctest need to know the value of it for the launchers to work properly. CMake needs to know in order to generate proper build rules, and ctest, in order to produce the proper error and warning analysis.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1a102b07177455ee01dcc2cb55cc90aee24f831" translate="yes" xml:space="preserve">
          <source>Tool that can launch the native build system. The value may be the full path to an executable or just the tool name if it is expected to be in the &lt;code&gt;PATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcd0a4c1c4fdbad2d04d1b22f986cb0c97f5cc23" translate="yes" xml:space="preserve">
          <source>Toolchain Features</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48b261dea122ce10891759e72c4749655e953281" translate="yes" xml:space="preserve">
          <source>Toolchains</source>
          <target state="translated">Toolchains</target>
        </trans-unit>
        <trans-unit id="870371aea009e630ec039dc1ec902d092a53726c" translate="yes" xml:space="preserve">
          <source>Tools for building CUDA C files: libraries and build dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d979e98e86cde7bf0738f0c067c9894a00c8813c" translate="yes" xml:space="preserve">
          <source>Toolset specification for the generator, if supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="339a5ae9ae4b62270ef1063d09b4f01dff1f6b2e" translate="yes" xml:space="preserve">
          <source>Toolset specification is supported only on specific generators:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8bdac513f31c1a9f49208d53f04a784431f959c" translate="yes" xml:space="preserve">
          <source>Top level binary directory for the named project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cc5bec5b6705e2c15461f0207dbf553078c4535" translate="yes" xml:space="preserve">
          <source>Top level source directory for the current project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f24c37bfa5644ab18f5897529187e5c89649e8f" translate="yes" xml:space="preserve">
          <source>Top level source directory for the named project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="164d46dc8140f495c99f268033aed201b3b1cb18" translate="yes" xml:space="preserve">
          <source>Total physical memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id3&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4910fe9523fae18f40267f28531dae5007c42d47" translate="yes" xml:space="preserve">
          <source>Total virtual memory in MiB &lt;a href=&quot;#mebibytes&quot; id=&quot;id1&quot;&gt;[1]&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80ffb5070af6cd7c1aebbcbc83061dec1cbc7af" translate="yes" xml:space="preserve">
          <source>Touch a file if it exists but do not create it. If a file does not exist it will be silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb4cc49824bf79827cde838e005848027ca0a38" translate="yes" xml:space="preserve">
          <source>Transfer</source>
          <target state="translated">Transfer</target>
        </trans-unit>
        <trans-unit id="f9844e9b44ebd35a8f055c40be3ac4c4138161d6" translate="yes" xml:space="preserve">
          <source>Transform a string like &lt;a href=&quot;configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; transforms a file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02900a202874de631abf160ed0aa589d3a97571b" translate="yes" xml:space="preserve">
          <source>Transforms the list by applying an action to all or, by specifying a &lt;code&gt;&amp;lt;SELECTOR&amp;gt;&lt;/code&gt;, to the selected elements of the list, storing the result in-place or in the specified output variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07583672e88e44b32e853f1964c69cdad543231" translate="yes" xml:space="preserve">
          <source>Transitive Usage Requirements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d447ac77f12906a5918e29828dce556f740d584a" translate="yes" xml:space="preserve">
          <source>Transitive link interface of an &lt;code&gt;IMPORTED&lt;/code&gt; target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eb124d2169c10ea7701fc486c2f745b0bb1b7e4" translate="yes" xml:space="preserve">
          <source>Treat newline characters (&lt;code&gt;\n&lt;/code&gt;, LF) as part of string content instead of terminating at them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="333d06a5b32fd59d2c51518357d4e78f925ac02b" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_LINKER_PREFERENCE&lt;/code&gt; propagates across targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2adf06a3403383a98063faf7a84c8e7b81a202c" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;file1&lt;/code&gt; is newer than &lt;code&gt;file2&lt;/code&gt; or if one of the two files doesn&amp;rsquo;t exist. Behavior is well-defined only for full paths. If the file time stamps are exactly the same, an &lt;code&gt;IS_NEWER_THAN&lt;/code&gt; comparison returns true, so that any dependent build operations will occur in the event of a tie. This includes the case of passing the same file name for both file1 and file2.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09959381fa49162c8836882c11c23a878fa4db4c" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;ncurses/curses.h&lt;/code&gt; is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb83a8d1e42dbc810670d5974d226709164f21f8" translate="yes" xml:space="preserve">
          <source>True if &lt;code&gt;ncurses/ncurses.h&lt;/code&gt; is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="394c2c1224e3428e9135087e1e4772c736c210cf" translate="yes" xml:space="preserve">
          <source>True if ALSA_INCLUDE_DIR &amp;amp; ALSA_LIBRARY are found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ab53b8d93ba782510f87fe5ce648e3410de528f" translate="yes" xml:space="preserve">
          <source>True if Curses is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b93023db8c627fa74d7444edd027731b453138c2" translate="yes" xml:space="preserve">
          <source>True if FLUID is found, used to enable the FLTK_WRAP_UI command</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e74dd94e5bf02f542dce1f015fcde53190e0bb3" translate="yes" xml:space="preserve">
          <source>True if GDAL is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc6b64f89106ded52c18ce677c2058a4aba71c7d" translate="yes" xml:space="preserve">
          <source>True if PostgreSQL is found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcdb4676f727e8e54edb06714bc0cf6218d007f8" translate="yes" xml:space="preserve">
          <source>True if a compatible environment modules framework was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f9db177c16e988644d443b62a510f958a45b85" translate="yes" xml:space="preserve">
          <source>True if a variable, cache variable or environment variable with given &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt; is defined. The value of the variable does not matter. Note that macro arguments are not variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50328f2666c0ba833bb46fe84ce54bd902cca954" translate="yes" xml:space="preserve">
          <source>True if all components not skipped were found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1367fedeb62ea82c2ed5181f1b06d6ba5de9948e" translate="yes" xml:space="preserve">
          <source>True if both conditions would be considered true individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54a6678c2a23da5816ee630387be11768008ce39" translate="yes" xml:space="preserve">
          <source>True if curses.h is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7417e30e45460ac9fadeca173df5674d312abdc" translate="yes" xml:space="preserve">
          <source>True if either condition would be considered true individually.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f10d2dad532f1e5ff1c58d4b2fd31a0671c4110" translate="yes" xml:space="preserve">
          <source>True if entry should be hidden by default in GUIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51b777031e9526f53aad59c7233e5d4a14720be" translate="yes" xml:space="preserve">
          <source>True if given a variable that is defined to a value that is not a false constant. False otherwise. (Note macro arguments are not variables.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96b2f738fe0051fe16ca94e872075b0736c18c7f" translate="yes" xml:space="preserve">
          <source>True if liblzma headers and library were found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e569fc71142c9b93f7013f29f58e068144ea19" translate="yes" xml:space="preserve">
          <source>True if lzma_auto_decoder() is found (required).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e2d2876b9d732b89e868153b657a8d9b97d9b36" translate="yes" xml:space="preserve">
          <source>True if lzma_easy_encoder() is found (required).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e26dde66269268a3545206fe5a59bcf30d0da1" translate="yes" xml:space="preserve">
          <source>True if lzma_lzma_preset() is found (required).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3047aed7ece190768a51e0e5c3bec4e16689c3" translate="yes" xml:space="preserve">
          <source>True if ncurses.h is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7616e71e5b595c7463c56f007578b2a1b783d775" translate="yes" xml:space="preserve">
          <source>True if the &lt;code&gt;C&lt;/code&gt; compiler is GNU. Use &lt;code&gt;CMAKE_C_COMPILER_ID&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2eeb5344cf9b21a7cda9b85072315fe4a230685c" translate="yes" xml:space="preserve">
          <source>True if the &lt;code&gt;Fortran&lt;/code&gt; compiler is GNU. Use &lt;code&gt;CMAKE_Fortran_COMPILER_ID&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49257d52675d75c3f2906c013648a851d5620ca2" translate="yes" xml:space="preserve">
          <source>True if the &lt;code&gt;dot&lt;/code&gt; executable was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29ec48ebcccaf294927b715974fdaf23497e9a15" translate="yes" xml:space="preserve">
          <source>True if the &lt;code&gt;doxygen&lt;/code&gt; executable was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df439adc0b3f756ffc4e0ad6e6d5f030da62b1f0" translate="yes" xml:space="preserve">
          <source>True if the C++ (&lt;code&gt;CXX&lt;/code&gt;) compiler is GNU. Use &lt;code&gt;CMAKE_CXX_COMPILER_ID&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="171ed7b25cddbd289efb31a6d7fcc5f36eb643a1" translate="yes" xml:space="preserve">
          <source>True if the Fortran 2008 &lt;code&gt;mpi_f08&lt;/code&gt; is available to MPI programs (MPI-3 and higher only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8620065da3ecb165e9fd5167b3c897e2d74414de" translate="yes" xml:space="preserve">
          <source>True if the Fortran 77 header &lt;code&gt;mpif.h&lt;/code&gt; is available.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7133d445ddaaa0cf5fb0ad0985954fc95065c41a" translate="yes" xml:space="preserve">
          <source>True if the Fortran 90 module &lt;code&gt;mpi&lt;/code&gt; can be used for accessing MPI (MPI-2 and higher only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="089e90d70e468a669e1882ef071c79ee3ba22dd3" translate="yes" xml:space="preserve">
          <source>True if the Git command-line client was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d4f928af1bdd6ddace374e8acb6279b090af5d6" translate="yes" xml:space="preserve">
          <source>True if the XCTest Framework and executable were found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ea3a17b566966a303ab19c1c1d663dbbd0fc9f" translate="yes" xml:space="preserve">
          <source>True if the condition is not true.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afbd4911f48d3a7b94c5d1baa280494a6b1ebdcc" translate="yes" xml:space="preserve">
          <source>True if the constant is &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;ON&lt;/code&gt;, &lt;code&gt;YES&lt;/code&gt;, &lt;code&gt;TRUE&lt;/code&gt;, &lt;code&gt;Y&lt;/code&gt;, or a non-zero number. False if the constant is &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;OFF&lt;/code&gt;, &lt;code&gt;NO&lt;/code&gt;, &lt;code&gt;FALSE&lt;/code&gt;, &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;IGNORE&lt;/code&gt;, &lt;code&gt;NOTFOUND&lt;/code&gt;, the empty string, or ends in the suffix &lt;code&gt;-NOTFOUND&lt;/code&gt;. Named boolean constants are case-insensitive. If the argument is not one of these specific constants, it is treated as a variable or string and the following signature is used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb10667ff344a1ce5649695a4d59302396cdb430" translate="yes" xml:space="preserve">
          <source>True if the given element is contained in the named list variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d91a98540f1c47e34af2de3c66e5b6c46ee7011" translate="yes" xml:space="preserve">
          <source>True if the given name is a command, macro or function that can be invoked.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1efb225f39c1bade232126f5d9b71daad72c8a55" translate="yes" xml:space="preserve">
          <source>True if the given name is a directory. Behavior is well-defined only for full paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d63028b058a70ef9bc674fc8d1e646e79300f41d" translate="yes" xml:space="preserve">
          <source>True if the given name is a symbolic link. Behavior is well-defined only for full paths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19963d1e9dc75c73f183d6db5823c0afc7930d3d" translate="yes" xml:space="preserve">
          <source>True if the given name is an existing logical target name created by a call to the &lt;a href=&quot;add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; command that has already been invoked (in any directory).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039e7817dd7244624f1754114364ca8ff10c3801" translate="yes" xml:space="preserve">
          <source>True if the given name is an existing policy (of the form &lt;code&gt;CMP&amp;lt;NNNN&amp;gt;&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855a673a4febd8df678dc0b3f985164de05d7ea0" translate="yes" xml:space="preserve">
          <source>True if the given name is an existing test name created by the &lt;a href=&quot;add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcec7d148471e1da7553113f12560e7b1715b248" translate="yes" xml:space="preserve">
          <source>True if the given path is an absolute path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fe24bb691bd436876d4fdb61c59f450c2bfbf5" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is a valid number and equal to that on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efc218e7d1f4f3a5fdeb9a290ceace0820b6a80e" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is a valid number and greater than or equal to that on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bc8f0e4fe43efbba00de6fa6fa533fc3635ba43" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is a valid number and greater than that on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a828ba1862756650d91f1ac0620c36e3ff19889" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is a valid number and less than or equal to that on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b5e30408a2acda69d6078781eccca784289c18" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is a valid number and less than that on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89967b9ec12c19217f878c08f863ecd5aac7942f" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is lexicographically equal to the string or variable on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789c731419c0d32a1f978d1ce75ff4bff381e070" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is lexicographically greater than or equal to the string or variable on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea4008b3958e0aef858dec3f1e4e28a74157964" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is lexicographically greater than the string or variable on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c24575843c79d047a3dc39c3aee618cc29fd7bcd" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is lexicographically less than or equal to the string or variable on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00a4f0808e9cee84c281b6b8585b0bac8b49a79" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value is lexicographically less than the string or variable on the right.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12df15afe383552671b9b96202eb90215513a71c" translate="yes" xml:space="preserve">
          <source>True if the given string or variable&amp;rsquo;s value matches the given regular condition. See &lt;a href=&quot;string#regex-specification&quot;&gt;Regex Specification&lt;/a&gt; for regex format. &lt;code&gt;()&lt;/code&gt; groups are captured in &lt;code&gt;CMAKE_MATCH_&amp;lt;n&amp;gt;&lt;/code&gt; variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c1de366ef1d3c2a3f5d7cb97d955d4f7d09e9c6" translate="yes" xml:space="preserve">
          <source>True if the named file or directory exists. Behavior is well-defined only for full paths. Resolves symbolic links, i.e. if the named file or directory is a symbolic link, returns true if the target of the symbolic link exists.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74f53af9dc26bf8a1f07fcc4547a4cbc3271b873" translate="yes" xml:space="preserve">
          <source>True if the patch command-line executable was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1641ed4bef17514374d6793a6ae8efc0294b81fa" translate="yes" xml:space="preserve">
          <source>True if this component is hidden from the user.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae285eb9134d504cc01c6f898fc48353a56859bc" translate="yes" xml:space="preserve">
          <source>True if this component is not selected to be installed by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6bc8206e9d40df5f242d789df05c2ef053c67b7" translate="yes" xml:space="preserve">
          <source>True if this component is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ecc7edc5edb333b0ddf2641d3ecd04f3cf0174d" translate="yes" xml:space="preserve">
          <source>True if unsuitable as any version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a924e9bacddaa929fe507183b89cfbdb3f755ca" translate="yes" xml:space="preserve">
          <source>True if version is compatible</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56b5fb313e90e5923f55e834cdf283d7f4cd350d" translate="yes" xml:space="preserve">
          <source>True if version is exact match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5773210c9de7b0ce28a220c8ef4117b69db0fae5" translate="yes" xml:space="preserve">
          <source>True when building a project inside a &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/try_run#command:try_run&quot; id=&quot;index-0-command:try_run&quot;&gt;&lt;code&gt;try_run()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecd3774d460c4fb306f6aa624eb235e21a7d8958" translate="yes" xml:space="preserve">
          <source>True when the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable is set to &lt;code&gt;WindowsCE&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62352b8bf4b0cf3fa2f1d55d9501c99803d17a3a" translate="yes" xml:space="preserve">
          <source>True when the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable is set to &lt;code&gt;WindowsPhone&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c83d3073ed7f65ac563607aef1ff4ecdf5c2f2f" translate="yes" xml:space="preserve">
          <source>True when the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable is set to &lt;code&gt;WindowsStore&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0942b06d3faf8a3bae354d33857ebecd39ea6814" translate="yes" xml:space="preserve">
          <source>True when using a multi-configuration generator (such as &lt;a href=&quot;../manual/cmake-generators.7#visual-studio-generators&quot;&gt;Visual Studio Generators&lt;/a&gt; or &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt;). Multi-config generators use &lt;a href=&quot;../variable/cmake_configuration_types#variable:CMAKE_CONFIGURATION_TYPES&quot; id=&quot;index-0-variable:CMAKE_CONFIGURATION_TYPES&quot;&gt;&lt;code&gt;CMAKE_CONFIGURATION_TYPES&lt;/code&gt;&lt;/a&gt; as the set of configurations and ignore &lt;a href=&quot;../variable/cmake_build_type#variable:CMAKE_BUILD_TYPE&quot; id=&quot;index-0-variable:CMAKE_BUILD_TYPE&quot;&gt;&lt;code&gt;CMAKE_BUILD_TYPE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1751c5dff285d400793edc8fa4feefc27762feb0" translate="yes" xml:space="preserve">
          <source>True, if the system has EGL.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdd8e7bb8a94a8c457e3de9847b290a50548d2e" translate="yes" xml:space="preserve">
          <source>True, if the system has GLU.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6c005f3350ec9b9912f59c856d7c910f69610d" translate="yes" xml:space="preserve">
          <source>True, if the system has GLX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b3c695d26771b8987206119668bf4e8677887e" translate="yes" xml:space="preserve">
          <source>True, if the system has OpenGL and all components are found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075b018f9b183dd9fdc217ea454fd94955cbb6ea" translate="yes" xml:space="preserve">
          <source>True, if the system has XMESA.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4d4638966be8d20ddc0bd1535eee41d42a47b3b" translate="yes" xml:space="preserve">
          <source>True, if the system has an OpenGL library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33661a21aad19edc9b46bf257e3a1164f9160360" translate="yes" xml:space="preserve">
          <source>Try Compiling Source Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2899b933a9ed9c1e31a09dd11011cc05beeaf7cc" translate="yes" xml:space="preserve">
          <source>Try Compiling Whole Projects</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a79656f8046aff7ef21e6f9b79ab1103a70762f2" translate="yes" xml:space="preserve">
          <source>Try Compiling and Running Source Files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6dd6964092f1396bc47b1c7ef161679f246b35" translate="yes" xml:space="preserve">
          <source>Try building a project. The success or failure of the &lt;code&gt;try_compile&lt;/code&gt;, i.e. &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt; respectively, is returned in &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81e2d1816938290971bf269561e69e96d9d8f967" translate="yes" xml:space="preserve">
          <source>Try building an executable or static library from one or more source files (which one is determined by the &lt;a href=&quot;../variable/cmake_try_compile_target_type#variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot; id=&quot;index-0-variable:CMAKE_TRY_COMPILE_TARGET_TYPE&quot;&gt;&lt;code&gt;CMAKE_TRY_COMPILE_TARGET_TYPE&lt;/code&gt;&lt;/a&gt; variable). The success or failure of the &lt;code&gt;try_compile&lt;/code&gt;, i.e. &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt; respectively, is returned in &lt;code&gt;&amp;lt;resultVar&amp;gt;&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c295b697fa61fd2c45e126cf0c1c10ef2eaedc0" translate="yes" xml:space="preserve">
          <source>Try building some code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33679d0fa636037bdb2e6c4c7ead4905f232cc78" translate="yes" xml:space="preserve">
          <source>Try compiling a &lt;code&gt;&amp;lt;srcfile&amp;gt;&lt;/code&gt;. Returns &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt; for success or failure in &lt;code&gt;&amp;lt;compileResultVar&amp;gt;&lt;/code&gt;. If the compile succeeded, runs the executable and returns its exit code in &lt;code&gt;&amp;lt;runResultVar&amp;gt;&lt;/code&gt;. If the executable was built, but failed to run, then &lt;code&gt;&amp;lt;runResultVar&amp;gt;&lt;/code&gt; will be set to &lt;code&gt;FAILED_TO_RUN&lt;/code&gt;. See the &lt;a href=&quot;try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; command for information on how the test project is constructed to build the source file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="945a871cebcb9489efa02f185f2cc2e1932ee319" translate="yes" xml:space="preserve">
          <source>Try compiling and then running some code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="065b34b50da73c84ad44c2fdbf147bf42fedb508" translate="yes" xml:space="preserve">
          <source>Try to find ASPELL</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d688f5a717fe451ef265346078841d07e875b4" translate="yes" xml:space="preserve">
          <source>Try to find BZip2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c673c7f36ee4f790c528c0d9f3c9734481d1c5de" translate="yes" xml:space="preserve">
          <source>Try to find Hebrew spell-checker (Hspell) and morphology engine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e350ccb47a5ea27b34f0478c4b4af8aebcdab7e4" translate="yes" xml:space="preserve">
          <source>Try to find M&amp;amp;S HLA RTI libraries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afdf62d922478fd32ba71acf70a30ec325d60f62" translate="yes" xml:space="preserve">
          <source>Try to find Motif (or lesstif)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669150aee3a64fa5a6c248d67421321d8843359c" translate="yes" xml:space="preserve">
          <source>Try to find X11 on UNIX systems. The following values are defined</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37c3aec63f2c2dd3d36bfc4ab5671aa3909d4bb" translate="yes" xml:space="preserve">
          <source>Try to find an MPI implementation that does not ship such a wrapper by guessing settings. Currently, only Microsoft MPI and MPICH2 on Windows are supported.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdfb0280765dc86391b34f342e92b6ccbf530925" translate="yes" xml:space="preserve">
          <source>Try to find application bundles after standard programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5854de7bbc292e4697a695bde812aebfae73b24" translate="yes" xml:space="preserve">
          <source>Try to find application bundles before standard programs. This is the default on Darwin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6df0c48e8377b81ad6c1ee051f9fa9948f16e3" translate="yes" xml:space="preserve">
          <source>Try to find frameworks after standard libraries or headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e72f74adf58b512ef695424d9c9389d973ff3fa2" translate="yes" xml:space="preserve">
          <source>Try to find frameworks before standard libraries or headers. This is the default on Darwin.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc599f3e0b2ee32092a7640fcd2381ed4f6f025" translate="yes" xml:space="preserve">
          <source>Try to find the Bullet physics engine</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2008eda942dbb0316e7395f5fad329605aa12030" translate="yes" xml:space="preserve">
          <source>Try to find the Jasper JPEG2000 library</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c3324e13c328638f6416035c67e1fd123c31d24" translate="yes" xml:space="preserve">
          <source>Trying to lock file twice is not allowed. Any intermediate directories and file itself will be created if they not exist. &lt;code&gt;GUARD&lt;/code&gt; and &lt;code&gt;TIMEOUT&lt;/code&gt; options ignored on &lt;code&gt;RELEASE&lt;/code&gt; operation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7137acad5462ee2486263b44ba96c24d4443b9c4" translate="yes" xml:space="preserve">
          <source>Tweak version if provided, else 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55500a4f8873fed21f06ba4091780ee660a6bd5" translate="yes" xml:space="preserve">
          <source>Tweak version if requested, else 0</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e4d75a062f7bc352a1715767e62021636415535" translate="yes" xml:space="preserve">
          <source>Two convenience APIs are provided relating to include directories usage requirements. The &lt;a href=&quot;../variable/cmake_include_current_dir_in_interface#variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot; id=&quot;index-1-variable:CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&quot;&gt;&lt;code&gt;CMAKE_INCLUDE_CURRENT_DIR_IN_INTERFACE&lt;/code&gt;&lt;/a&gt; variable may be enabled, with an equivalent effect to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4aa5e057e1ed71ff4dcbe80c61fe425af047be6" translate="yes" xml:space="preserve">
          <source>Two fixtures are defined: &lt;code&gt;DB&lt;/code&gt; and &lt;code&gt;Foo&lt;/code&gt;. Tests can require a single fixture as &lt;code&gt;fooOnly&lt;/code&gt; and &lt;code&gt;dbOnly&lt;/code&gt; do, or they can depend on multiple fixtures like &lt;code&gt;dbWithFoo&lt;/code&gt; does.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa6e9d264ef8d5fe688f49fafa89f11f11478f0" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;cache&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71c09ca7c6dab0acdc9483b1d24d46272c46cf1" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;cmakeInputs&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a534986c6c746b854716c458df1e976f1cf3e6" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;codemodel&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e85b93607f7d2b18c65ea9297481ea1182d0482d" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;compute&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b415c2de54796a49ed5dcadd96968263fde0b0c" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;configure&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cffeaafb4ae53ab14364de7b11efaab2c2ccfc" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;ctestInfo&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b0d23e6e896bdbd44b5f2076bee1181be266d6" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;error&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f59d870efa2e0b0cd309e76490f547b877167459" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;fileSystemWatchers&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d1dacf1a2bfdbfaef304aae2fc376ee263dbf96" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;globalSettings&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b32a3708b3424b72289aa6f84a9f7d715fd19e83" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;handshake&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d40001295c2e9f7b1a5286ef996d502de98232f" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;hello&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37923fa9392b8a69c3ff166f996420c706fdd3cf" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;message&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de9f7d2f8ef670e324d1e8000110d66daaace04d" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;progress&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f67697130dbb3e17adf863718f20e97e5441441" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;reply&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c3819f7c6d958ba7e7f820ca74b89b3d56e2b8" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;setGlobalSettings&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff57bb6cfc05504237fadfd9dd1467262579268b" translate="yes" xml:space="preserve">
          <source>Type &amp;ldquo;signal&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3130e549f4c0c3c5b447cb510cc4fac89cb2939" translate="yes" xml:space="preserve">
          <source>Type of target generated for &lt;a href=&quot;../command/try_compile#command:try_compile&quot; id=&quot;index-0-command:try_compile&quot;&gt;&lt;code&gt;try_compile()&lt;/code&gt;&lt;/a&gt; calls using the source file signature. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac429d9d6ee7fa710e199f3f62898c54199defc" translate="yes" xml:space="preserve">
          <source>Typical usage could be something like:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e41d4e1e362dd4ed2b847d243cb6bbfc4661c1c" translate="yes" xml:space="preserve">
          <source>Typical usage is to generate of header file using &lt;a href=&quot;../command/configure_file#command:configure_file&quot; id=&quot;index-0-command:configure_file&quot;&gt;&lt;code&gt;configure_file()&lt;/code&gt;&lt;/a&gt; with the contents like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f433de3a09f2cf5cd13a827c57725457d725e39" translate="yes" xml:space="preserve">
          <source>Typical usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a58437865aeec25d1509a573dba549ace950c26b" translate="yes" xml:space="preserve">
          <source>Typically only one target is needed to manage all external data within a project. Call this function once at the end of configuration after all data references have been processed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c28916a84e8a9ab1061f6d6c4e62134671455afc" translate="yes" xml:space="preserve">
          <source>Typically, the &lt;code&gt;condition&lt;/code&gt; is a &lt;a href=&quot;#boolean-generator-expressions&quot;&gt;boolean generator expression&lt;/a&gt;. For instance,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64dcffc0d1ed79718f01fbdead69ec371a82088b" translate="yes" xml:space="preserve">
          <source>Typically, you should not use these variables directly, and you should use SDL_SOUND_LIBRARIES which contains SDL_SOUND_LIBRARY and the other audio libraries (if needed) to successfully compile on your system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="039571ef60c9b1a6527c96a684dccfc0e4f32a75" translate="yes" xml:space="preserve">
          <source>UNIX</source>
          <target state="translated">UNIX</target>
        </trans-unit>
        <trans-unit id="0358f9638968b26c81ad9e49c1de9ec320b59223" translate="yes" xml:space="preserve">
          <source>UPLOAD_DIRECTORY is the local directory where CPack will create the various archives for each of the components. The contents of this directory should be uploaded to a location accessible by the URL given in the site argument. If omitted, CPack will use the directory CPackUploads inside the CMake binary directory to store the generated archives.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="133e9335bf6e3fafacf71df665a1d83d342c4df7" translate="yes" xml:space="preserve">
          <source>URL of the Subversion repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71d731fabb5b6f8fb918ed4589c1966b3ba2f74b" translate="yes" xml:space="preserve">
          <source>URL of the git repository. Any URL understood by the &lt;code&gt;git&lt;/code&gt; command may be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fbe01ae06e1f2ff092b752a0ab17f1301384378" translate="yes" xml:space="preserve">
          <source>URL of the mercurial repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cffc106cf2f55c9d457c4c94c74ffc928758ae" translate="yes" xml:space="preserve">
          <source>US Secure Hash Algorithm 1, RFC 3174.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="445773636ff5085c378c7494e8a685ab7dce605e" translate="yes" xml:space="preserve">
          <source>US Secure Hash Algorithms, RFC 4634.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf3bfa9a159c5a5ddc20da1eccd6bbddbdc037e4" translate="yes" xml:space="preserve">
          <source>USAGE</source>
          <target state="translated">USAGE</target>
        </trans-unit>
        <trans-unit id="526e17802d5e428ad056a5fb1638e0d3f633a4c9" translate="yes" xml:space="preserve">
          <source>USAGE:</source>
          <target state="translated">USAGE:</target>
        </trans-unit>
        <trans-unit id="8aefa122239e64aa1983f02f4a8051e21f3a88e0" translate="yes" xml:space="preserve">
          <source>USE_FOLDERS</source>
          <target state="translated">USE_FOLDERS</target>
        </trans-unit>
        <trans-unit id="538361dd8b38662a5c25fe9be76ce85fd1dc51e5" translate="yes" xml:space="preserve">
          <source>UUIDs are semicolon-delimited.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec2e1584bda4da55513c15c222beef1ea73eca96" translate="yes" xml:space="preserve">
          <source>Under the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-1-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, this is the version of Xcode as specified in &lt;code&gt;Xcode.app/Contents/version.plist&lt;/code&gt; (such as &lt;code&gt;3.1.2&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e7eabc72a3ff4fae4bcb29ec522ef4e393405e0" translate="yes" xml:space="preserve">
          <source>Unescaped double-quotes must balance, may not appear at the beginning of an unquoted argument, and are treated as part of the content. For example, the unquoted arguments &lt;code&gt;-Da=&quot;b c&quot;&lt;/code&gt;, &lt;code&gt;-Da=$(v)&lt;/code&gt;, and &lt;code&gt;a&quot; &quot;b&quot;c&quot;d&lt;/code&gt; are each interpreted literally. They may instead be written as quoted arguments &lt;code&gt;&quot;-Da=\&quot;b c\&quot;&quot;&lt;/code&gt;, &lt;code&gt;&quot;-Da=$(v)&quot;&lt;/code&gt;, and &lt;code&gt;&quot;a\&quot; \&quot;b\&quot;c\&quot;d&quot;&lt;/code&gt;, respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee914db72702155af8166b628c172db98e33006a" translate="yes" xml:space="preserve">
          <source>Unfortunately many &lt;a href=&quot;cmake-modules.7#manual:cmake-modules(7)&quot; id=&quot;index-0-manual:cmake-modules(7)&quot;&gt;&lt;code&gt;modules&lt;/code&gt;&lt;/a&gt; shipped with CMake do not yet provide &lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt; because their development pre-dated this approach. This may improve incrementally over time. Workarounds to create relocatable packages using such modules include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="693397bbcdcd1bd1b855120df9e97e9e37673482" translate="yes" xml:space="preserve">
          <source>Unfortunately this change can break code like</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ec1e35d8687ac3bfce6a4b4f7bd57da859bbbf1" translate="yes" xml:space="preserve">
          <source>Unicode string literals, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2442.htm&quot;&gt;N2442&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18181bce063bfa1c1e4f2c739247d3c574541728" translate="yes" xml:space="preserve">
          <source>Uniform initialization, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2640.pdf&quot;&gt;N2640&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d418c169e34a20116d222d74896d3fb53c47a91" translate="yes" xml:space="preserve">
          <source>Unix Makefiles</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ba4dcb117cfdbc30938167af8d3e96a0f0f3cd" translate="yes" xml:space="preserve">
          <source>Unix: The desired Matlab should be accessible from the &lt;code&gt;PATH&lt;/code&gt;. This does not work for MCR installation and &lt;a href=&quot;#variable:Matlab_ROOT_DIR&quot; id=&quot;index-1-variable:Matlab_ROOT_DIR&quot;&gt;&lt;code&gt;Matlab_ROOT_DIR&lt;/code&gt;&lt;/a&gt; should be specified on this platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f947a7274c3f95b3d9f1ea9d709192fbcb34aa77" translate="yes" xml:space="preserve">
          <source>Unknown format specifiers will be ignored and copied to the output as-is.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3e829a583fca0aeac65cfda76d451f65aa26a2b" translate="yes" xml:space="preserve">
          <source>Unlike the case of an upstream-provided package configuration file, no single point of reference identifies the package as being found, so the &lt;code&gt;&amp;lt;PackageName&amp;gt;_FOUND&lt;/code&gt; variable is not automatically set by the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-5-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command. It can still be expected to be set by convention however and should be set by the author of the Find-module. Similarly there is no &lt;code&gt;&amp;lt;PackageName&amp;gt;_DIR&lt;/code&gt; variable, but each of the artifacts such as library locations and header file locations provide a separate cache variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66bd96fa8222c654603e30d347ee6112bc9f3ab" translate="yes" xml:space="preserve">
          <source>Unquoted Argument</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae1ecf13d9d68cb5f8b7a99655fd412b347d7487" translate="yes" xml:space="preserve">
          <source>Unquoted argument content consists of all text in a contiguous block of allowed or escaped characters. Both &lt;a href=&quot;#escape-sequences&quot;&gt;Escape Sequences&lt;/a&gt; and &lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt; are evaluated. The resulting value is divided in the same way &lt;a href=&quot;#lists&quot;&gt;Lists&lt;/a&gt; divide into elements. Each non-empty element is given to the command invocation as an argument. Therefore an unquoted argument may be given to a command invocation as zero or more arguments.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290e9ab73ee31e0c3701902e2af937d94636ebe8" translate="yes" xml:space="preserve">
          <source>Unrestricted unions, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2544.pdf&quot;&gt;N2544&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44f5186e8d7f488496b216c843a2a54128bda5d2" translate="yes" xml:space="preserve">
          <source>Unset Environment Variable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9ced4e6ec9474c70e90c187f6a7bb8dee3be868" translate="yes" xml:space="preserve">
          <source>Unset Normal Variable or Cache Entry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9187ff99828840b4e54b3e3d518d9e556682dc8e" translate="yes" xml:space="preserve">
          <source>Unset a variable, cache variable, or environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e472539f6d9ea05cd2ea9295b5db4efae071e1" translate="yes" xml:space="preserve">
          <source>Until all clients update to the more recent DCMTK, build systems will need to support different versions of DCMTK.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222868ba7923257887522554d42407ce9d3a48f4" translate="yes" xml:space="preserve">
          <source>Update &lt;a href=&quot;http://doc.qt.io/qtinstallerframework/index.html&quot;&gt;QtIFW&lt;/a&gt; specific repository from remote repository.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b91898ec2b6f33c0e4e8322b382bf70c491621" translate="yes" xml:space="preserve">
          <source>Update the source tree from its version control repository. Record the old and new versions and the list of updated source files. See the &lt;a href=&quot;#ctest-update-step&quot;&gt;CTest Update Step&lt;/a&gt; section below.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba2b8850595ca719cd8f43b7b223fd3bcd6c5ce" translate="yes" xml:space="preserve">
          <source>Update the source tree from version control and record results in &lt;code&gt;Update.xml&lt;/code&gt; for submission with the &lt;a href=&quot;ctest_submit#command:ctest_submit&quot; id=&quot;index-0-command:ctest_submit&quot;&gt;&lt;code&gt;ctest_submit()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8080b873164d9081d49b6a89365ca9163ee72d7a" translate="yes" xml:space="preserve">
          <source>Upload files to a dashboard server as a &lt;a href=&quot;../manual/ctest.1#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="9d3bfdcd420e8473b746b53e440ce2a56899d8f2" translate="yes" xml:space="preserve">
          <source>Usage describes the basic command line interface and its options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6bde09b8fca6fb4bbfb3174dde736e7216e3b560" translate="yes" xml:space="preserve">
          <source>Usage of mpiexec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60b35529f39bee7fcd8c558ec27a010d26859a06" translate="yes" xml:space="preserve">
          <source>Usage requirements are propagated by reading the &lt;code&gt;INTERFACE_&lt;/code&gt; variants of target properties from dependencies and appending the values to the non-&lt;code&gt;INTERFACE_&lt;/code&gt; variants of the operand. For example, the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-3-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of dependencies is read and appended to the &lt;a href=&quot;../prop_tgt/include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-5-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of the operand. In cases where order is relevant and maintained, and the order resulting from the &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-7-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; calls does not allow correct compilation, use of an appropriate command to set the property directly may update the order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="768673c182d273a0c1188c7860aa0a649ec6fa25" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;exepath&amp;gt; and &amp;lt;dirs&amp;gt; if necessary to resolve non-absolute &amp;lt;file&amp;gt; values &amp;ndash; but only for non-embedded items.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3e5dad88500ed136f67a622b30c53b00159c0ff" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../command/add_executable#command:add_executable&quot; id=&quot;index-0-command:add_executable&quot;&gt;&lt;code&gt;add_executable()&lt;/code&gt;&lt;/a&gt; to name the source file in the generated project. This is the default if no value is given.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41d18d253a473c2f3d9c454d5332a04877b33cf0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../command/add_library#command:add_library&quot; id=&quot;index-0-command:add_library&quot;&gt;&lt;code&gt;add_library()&lt;/code&gt;&lt;/a&gt; with the &lt;code&gt;STATIC&lt;/code&gt; option to name the source file in the generated project. This avoids running the linker and is intended for use with cross-compiling toolchains that cannot link without custom flags or linker scripts.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be611f9f31ed90f4449aa328107275a48e41739f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-1-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; only for libraries installed with &lt;a href=&quot;../variable/cmake_ios_install_combined#variable:CMAKE_IOS_INSTALL_COMBINED&quot; id=&quot;index-0-variable:CMAKE_IOS_INSTALL_COMBINED&quot;&gt;&lt;code&gt;CMAKE_IOS_INSTALL_COMBINED&lt;/code&gt;&lt;/a&gt; feature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9e7ee33a1a47d00e13e54501b12e710b651c6e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;generator expressions&lt;/code&gt;&lt;/a&gt; to support per-configuration specification. For example, the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="321353621eca519fc24470f0e51f549a22582c5a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;add_compile_definitions#command:add_compile_definitions&quot; id=&quot;index-0-command:add_compile_definitions&quot;&gt;&lt;code&gt;add_compile_definitions()&lt;/code&gt;&lt;/a&gt; to add preprocessor definitions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff38b2e077f9fe49488fd7f66c5c86a60e499d0c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;add_compile_options#command:add_compile_options&quot; id=&quot;index-0-command:add_compile_options&quot;&gt;&lt;code&gt;add_compile_options()&lt;/code&gt;&lt;/a&gt; to add other options.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3576d455ff359d319b8f40c264c0d700e9414da9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt; to add include directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8af763f626d932884b86f364d8ca1fd7136ade7c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b3df87bc6e6b361ffee9fdfd44129ec332dce1c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;set_source_files_properties#command:set_source_files_properties&quot; id=&quot;index-0-command:set_source_files_properties&quot;&gt;&lt;code&gt;set_source_files_properties()&lt;/code&gt;&lt;/a&gt; to set property values. Source file properties usually control how the file is built. One property that is always there is &lt;a href=&quot;../prop_sf/location#prop_sf:LOCATION&quot; id=&quot;index-0-prop_sf:LOCATION&quot;&gt;&lt;code&gt;LOCATION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae983e608b761151c027e38527594b3b560a2f9" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;set_target_properties#command:set_target_properties&quot; id=&quot;index-0-command:set_target_properties&quot;&gt;&lt;code&gt;set_target_properties()&lt;/code&gt;&lt;/a&gt; to set target property values. Properties are usually used to control how a target is built, but some query the target instead. This command can get properties for any target so far created. The targets do not need to be in the current &lt;code&gt;CMakeLists.txt&lt;/code&gt; file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="269667687099607ecad15a51d9101c42d692c93a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;${CMAKE_SYSTEM}&lt;/code&gt; and &lt;code&gt;${CMAKE_CXX_COMPILER}&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b36da08a4a1742060ffc6f072f035b07290e426" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;MPIEXEC_EXECUTABLE&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57a417d501d6d7a3e93a8a2e8fc1fa53e8722954" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_COMPILE_OPTIONS&lt;/code&gt; and &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_COMPILE_DEFINITIONS&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8099d274ae01f3d155f0f067a8d3f8b7e20f6866" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;QCC&lt;/code&gt; compiler id for the qcc drivers on QNX.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39945ad75a1af87e07c5ad38938252e2e272bf3a" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Release&lt;/code&gt; version of library for &lt;code&gt;MinSizeRel&lt;/code&gt; and &lt;code&gt;RelWithDebInfo&lt;/code&gt; build types:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca30b5f800c77f6f4d8d7f4344fa947871ce1f2b" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;foo_debug&lt;/code&gt; path for &lt;code&gt;Debug&lt;/code&gt; build type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42b5f5f0481c799068208960c5b2f264bd8554b4" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;foo_release&lt;/code&gt; path for &lt;code&gt;Release&lt;/code&gt; build type:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1f2013935351a40af0047ed3e97f83e95e95bc0" translate="yes" xml:space="preserve">
          <source>Use Module for Java</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c123dc26f359c4ab59c018acdccd30d181ccf14b" translate="yes" xml:space="preserve">
          <source>Use TOUCH_NOCREATE to touch a file if it exists but not create it. If a file does not exist it will be silently ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8f254278bd8ac663dbe5753ef22a4698a4288d" translate="yes" xml:space="preserve">
          <source>Use a random order for scheduling tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56dcf687772ab4376f80749c1c9abbd1f0dee9f9" translate="yes" xml:space="preserve">
          <source>Use after &lt;code&gt;COPY_FILE&lt;/code&gt; to capture into variable &lt;code&gt;&amp;lt;var&amp;gt;&lt;/code&gt; any error message encountered while trying to copy the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14a29ba383c84d15925a42f871530f52904ae908" translate="yes" xml:space="preserve">
          <source>Use cases</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb76d4c335998e91854f2676cf3f82818d812b85" translate="yes" xml:space="preserve">
          <source>Use explicit &lt;code&gt;-framework&lt;/code&gt; linker flag, e.g. &lt;code&gt;target_link_libraries(foo PUBLIC &quot;-framework CoreFoundation&quot;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7c5b1aad55d12b5c7a43821108fee19f68ae0a5" translate="yes" xml:space="preserve">
          <source>Use explicit &lt;code&gt;-l&lt;/code&gt; linker flag, e.g. &lt;code&gt;target_link_libraries(foo PUBLIC &quot;-lz&quot;)&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2c739bcbf703043ad22dbd1a338aff57651732" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../command/if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command &lt;code&gt;VERSION_LESS&lt;/code&gt;, &lt;code&gt;VERSION_GREATER&lt;/code&gt;, &lt;code&gt;VERSION_EQUAL&lt;/code&gt;, &lt;code&gt;VERSION_LESS_EQUAL&lt;/code&gt;, or &lt;code&gt;VERSION_GREATER_EQUAL&lt;/code&gt; operators to compare version string values against &lt;code&gt;CMAKE_VERSION&lt;/code&gt; using a component-wise test. Version component values may be 10 or larger so do not attempt to compare version strings as floating-point numbers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="548c4db577af91f44fdbd7e480d59d919f9a1a92" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../module/checkiposupported#module:CheckIPOSupported&quot; id=&quot;index-1-module:CheckIPOSupported&quot;&gt;&lt;code&gt;CheckIPOSupported&lt;/code&gt;&lt;/a&gt; module to detect whether IPO is supported by the current compiler, environment, and CMake version. Produce a fatal error if support is not available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9bd579934922aad7c2947ae42302f1c7425d57a" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../module/checkpiesupported#module:CheckPIESupported&quot; id=&quot;index-2-module:CheckPIESupported&quot;&gt;&lt;code&gt;CheckPIESupported&lt;/code&gt;&lt;/a&gt; module to detect whether &lt;code&gt;PIE&lt;/code&gt; is supported by the current linker and environment. Apply &lt;code&gt;PIE&lt;/code&gt; flags only if the linker supports them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3796ce3d9004754bad4abb44ac006f564b3bd92c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../module/gnuinstalldirs#module:GNUInstallDirs&quot; id=&quot;index-0-module:GNUInstallDirs&quot;&gt;&lt;code&gt;GNUInstallDirs&lt;/code&gt;&lt;/a&gt; module to provide GNU-style options for the layout of directories within the installation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4864b89b8de1c615ad9014d82007423f17a0d2ce" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../prop_tgt/folder#prop_tgt:FOLDER&quot; id=&quot;index-0-prop_tgt:FOLDER&quot;&gt;&lt;code&gt;FOLDER&lt;/code&gt;&lt;/a&gt; target property to organize targets into folders.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fbfa563dfb94dce9c86669a076f348f662331d" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;add_dependencies#command:add_dependencies&quot; id=&quot;index-1-command:add_dependencies&quot;&gt;&lt;code&gt;add_dependencies()&lt;/code&gt;&lt;/a&gt; command to add dependencies on other targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198a06d823b2480a14003ee0a20f51d60319f8b5" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;if#command:if&quot; id=&quot;index-0-command:if&quot;&gt;&lt;code&gt;if()&lt;/code&gt;&lt;/a&gt; command instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d09d07a49a9c6ca78174b0182690a8637a3abfb" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;vs_global_keyword#prop_tgt:VS_GLOBAL_KEYWORD&quot; id=&quot;index-0-prop_tgt:VS_GLOBAL_KEYWORD&quot;&gt;&lt;code&gt;VS_GLOBAL_KEYWORD&lt;/code&gt;&lt;/a&gt; target property to set the keyword for Visual Studio 10 (2010) and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f412534dbbc656e06654dc79484b9eeb09f1f4f3" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;vs_keyword#prop_tgt:VS_KEYWORD&quot; id=&quot;index-0-prop_tgt:VS_KEYWORD&quot;&gt;&lt;code&gt;VS_KEYWORD&lt;/code&gt;&lt;/a&gt; target property to set the keyword for Visual Studio 9 (2008) and older.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca69c2780439fea59d9f4f32f8f77bd0bf94fa47" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;CASE&lt;/code&gt; keyword to select a case sensitive or case insensitive sort mode. The &lt;code&gt;&amp;lt;case&amp;gt;&lt;/code&gt; option should be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856a2ab2edb2b0298f9a10087bbaa146f21126bf" translate="yes" xml:space="preserve">
          <source>Use the ANSI codepage.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f38fdd7d2a9150b104698607b33327a76ffc0943" translate="yes" xml:space="preserve">
          <source>Use the MFC library for an executable or dll.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6f86f90369938d60d5134ad87a345487c6dd736" translate="yes" xml:space="preserve">
          <source>Use the UTF-8 codepage. Prior to CMake 3.11.0, only &lt;code&gt;UTF8&lt;/code&gt; was accepted for this encoding. In CMake 3.11.0, &lt;code&gt;UTF-8&lt;/code&gt; was added for consistency with the &lt;a href=&quot;https://www.ietf.org/rfc/rfc3629&quot;&gt;UTF-8 RFC&lt;/a&gt; naming convention.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e507023bde50ebe4f85b4db3401dcdceb9972b0d" translate="yes" xml:space="preserve">
          <source>Use the content from a given file as input. A relative path is treated with respect to the value of &lt;a href=&quot;../variable/cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;. See policy &lt;a href=&quot;../policy/cmp0070#policy:CMP0070&quot; id=&quot;index-0-policy:CMP0070&quot;&gt;&lt;code&gt;CMP0070&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67d921700552b9e1f316707206caa2e59cd27240" translate="yes" xml:space="preserve">
          <source>Use the content given explicitly as input.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be33e281c619cb0962aafdcd6d50ae92757932f2" translate="yes" xml:space="preserve">
          <source>Use the current active console&amp;rsquo;s codepage or if that isn&amp;rsquo;t available then use ANSI.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbf464beada3786962f17645c0f1a3aadaa69808" translate="yes" xml:space="preserve">
          <source>Use the given emulator to run executables created when crosscompiling. This command will be added as a prefix to &lt;a href=&quot;../command/add_test#command:add_test&quot; id=&quot;index-0-command:add_test&quot;&gt;&lt;code&gt;add_test()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-0-command:add_custom_target&quot;&gt;&lt;code&gt;add_custom_target()&lt;/code&gt;&lt;/a&gt; commands for built target system executables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bac3437e2785c0c01ad20c8aeb745042083c713" translate="yes" xml:space="preserve">
          <source>Use the install path for the &lt;code&gt;RPATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d10f921a5c20f7abe5d4d6d6ef8d5294eb1b106" translate="yes" xml:space="preserve">
          <source>Use the original equipment manufacturer (OEM) code page.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f07ef91823088f3e09ade7370f2ba58b056dad" translate="yes" xml:space="preserve">
          <source>Use the syntax &lt;code&gt;$CACHE{VAR}&lt;/code&gt; to read cache entry &lt;code&gt;VAR&lt;/code&gt;. See the &lt;a href=&quot;../manual/cmake-language.7#cmake-language-variables&quot;&gt;cmake-language(7) variables&lt;/a&gt; documentation for more complete documentation of the interaction of normal variables and cache entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b24692d9045f206ab5f3c6ba1e4312ab7819d19" translate="yes" xml:space="preserve">
          <source>Use the syntax &lt;code&gt;$ENV{VAR}&lt;/code&gt; to read environment variable &lt;code&gt;VAR&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d589e0635e15d85da9681caefa29ed0307b6a0be" translate="yes" xml:space="preserve">
          <source>Use this macro to add information about a feature with the given &lt;code&gt;&amp;lt;name&amp;gt;&lt;/code&gt;. &lt;code&gt;&amp;lt;enabled&amp;gt;&lt;/code&gt; contains whether this feature is enabled or not. It can be a variable or a list of conditions. &lt;code&gt;&amp;lt;description&amp;gt;&lt;/code&gt; is a text describing the feature. The information can be displayed using &lt;code&gt;feature_summary()&lt;/code&gt; for &lt;code&gt;ENABLED_FEATURES&lt;/code&gt; and &lt;code&gt;DISABLED_FEATURES&lt;/code&gt; respectively.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c87875515e353e32a223dd7eb15e16f8a42ddc" translate="yes" xml:space="preserve">
          <source>Use this macro to set up information about the named package, which can then be displayed via &lt;code&gt;feature_summary()&lt;/code&gt;. This can be done either directly in the Find-module or in the project which uses the module after the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; call. The features for which information can be set are added automatically by the &lt;code&gt;find_package()&lt;/code&gt; command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437d0ab30c5a4f85a5656675a5ed19988eeef072" translate="yes" xml:space="preserve">
          <source>Use this macro to set up information about the named package, which can then be displayed via FEATURE_SUMMARY(). This can be done either directly in the Find-module or in the project which uses the module after the find_package() call. The features for which information can be set are added automatically by the find_package() command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5585bacd1b80085900a91f3e1bf0d02305ae93" translate="yes" xml:space="preserve">
          <source>Use this module by invoking find_package with the form:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb34a78c8b53ecbe2ef0d5ee9063128c208a520" translate="yes" xml:space="preserve">
          <source>Use this module to push data needed for testing an Android device behavior onto a connected Android device. The module will accept files and libraries as well as separate destinations for each. It will create a test that loads the files into a device object store and link to them from the specified destination. The files are only uploaded if they are not already in the object store.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562ffa2cc8d0fede4d40bb66a386b56294de7f3e" translate="yes" xml:space="preserve">
          <source>Use this module to unambiguously reference data files stored outside the source tree and fetch them at build time from arbitrary local and remote content-addressed locations. Functions provided by this module recognize arguments with the syntax &lt;code&gt;DATA{&amp;lt;name&amp;gt;}&lt;/code&gt; as references to external data, replace them with full paths to local copies of those data, and create build rules to fetch and update the local copies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643911bed560fd4d28ee1669f68cae0321230ad4" translate="yes" xml:space="preserve">
          <source>Use this option in conjunction with the ctest_test &lt;code&gt;PARALLEL_LEVEL&lt;/code&gt; option to specify that this test should not be run in parallel with any other tests.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5a174d75b5938e85d29acc0ab6ab481bfebc15" translate="yes" xml:space="preserve">
          <source>Use with care, you can make your &lt;code&gt;CMakeCache.txt&lt;/code&gt; non-working.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deb045e1db03a540e40676698c46a8c27d1be7ce" translate="yes" xml:space="preserve">
          <source>UseEcos</source>
          <target state="translated">UseEcos</target>
        </trans-unit>
        <trans-unit id="39d41a63e290e494934e8c817d672e23dbc80ede" translate="yes" xml:space="preserve">
          <source>UseJava</source>
          <target state="translated">UseJava</target>
        </trans-unit>
        <trans-unit id="74396137e3149e2f327a7fb1eb5951d769ec494f" translate="yes" xml:space="preserve">
          <source>UseJavaClassFilelist</source>
          <target state="translated">UseJavaClassFilelist</target>
        </trans-unit>
        <trans-unit id="8eb44c2cfe20e1898f7bcf9f40c889e562776836" translate="yes" xml:space="preserve">
          <source>UseJavaSymlinks</source>
          <target state="translated">UseJavaSymlinks</target>
        </trans-unit>
        <trans-unit id="a2d810d570c215551a71b5a0ca784e2e8307005c" translate="yes" xml:space="preserve">
          <source>UsePkgConfig</source>
          <target state="translated">UsePkgConfig</target>
        </trans-unit>
        <trans-unit id="c7e875b875f014050acd18da576f3a5e157195d8" translate="yes" xml:space="preserve">
          <source>UseSWIG</source>
          <target state="translated">UseSWIG</target>
        </trans-unit>
        <trans-unit id="4b32d8bb8c21a8fcc3e38e3c7bd1f04ae4a217e2" translate="yes" xml:space="preserve">
          <source>Use_wxWindows</source>
          <target state="translated">Use_wxWindows</target>
        </trans-unit>
        <trans-unit id="d7964c4d777b7814a60f7c5c26264ff957627ddf" translate="yes" xml:space="preserve">
          <source>Used to initialize &lt;code&gt;MPI_&amp;lt;lang&amp;gt;_COMPILER_FLAGS&lt;/code&gt; if no language specific flag has been given. Empty by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2db5cc977db0f39c85d9ef6ad1906eabda8d0f68" translate="yes" xml:space="preserve">
          <source>Used to specify the .NET target framework version for C++/CLI. For example, &amp;ldquo;v4.5&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6d1346229a1ce4adbd303c25ca8610f153da038" translate="yes" xml:space="preserve">
          <source>Used to specify the .NET target framework version for C++/CLI. For example: &lt;code&gt;v4.5&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e78c94af42982956410ada9d65f5856081e391d" translate="yes" xml:space="preserve">
          <source>User Package Registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef66416bb71211b87fa52397dbf966d831355bc" translate="yes" xml:space="preserve">
          <source>User code should generally look for packages using the above &lt;a href=&quot;#basic-signature&quot;&gt;basic signature&lt;/a&gt;. The remainder of this command documentation specifies the full command signature and details of the search process. Project maintainers wishing to provide a package to be found by this command are encouraged to read on.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0111484d87244a9df1c4a9357f4fd318ae7fe31" translate="yes" xml:space="preserve">
          <source>User-defined &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-0-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s and &lt;a href=&quot;../command/macro#command:macro&quot; id=&quot;index-0-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt;&amp;rsquo;s (note that &lt;a href=&quot;../command/function#command:function&quot; id=&quot;index-1-command:function&quot;&gt;&lt;code&gt;function()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/macro#command:macro&quot; id=&quot;index-1-command:macro&quot;&gt;&lt;code&gt;macro()&lt;/code&gt;&lt;/a&gt; themselves don&amp;rsquo;t increase recursion depth)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="275d8a9adb91089983344f2d8ad456a739a8b102" translate="yes" xml:space="preserve">
          <source>User-defined literals, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2008/n2765.pdf&quot;&gt;N2765&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3846a20be28d847bc9311b99cbfd47a96c5222ca" translate="yes" xml:space="preserve">
          <source>Username for the Subversion checkout and update.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0834d65f7b62f929c7789dd6b057d7f06d40aeb6" translate="yes" xml:space="preserve">
          <source>Username for the download operation if authentication is required.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5273906c303c8a6382584c062e896c8a731bb6d" translate="yes" xml:space="preserve">
          <source>Users may set these hints or results as &lt;code&gt;CACHE&lt;/code&gt; entries. Projects should not read these entries directly but instead use the above result variables. Note that some hint names start in upper-case &amp;ldquo;BOOST&amp;rdquo;. One may specify these as environment variables if they are not specified as CMake variables or cache entries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9c867e0969c5cb6921985e50cb688f25d6fdbdc" translate="yes" xml:space="preserve">
          <source>Users or projects may set the following variables to configure the module behaviour:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d3487a33a207c76013ee0d96db74ec04b7ebb5a" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;&amp;lt;path-to-build&amp;gt;&lt;/code&gt; as the build tree and &lt;code&gt;&amp;lt;path-to-source&amp;gt;&lt;/code&gt; as the source tree. The specified paths may be absolute or relative to the current working directory. The source tree must contain a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file. The build tree will be created automatically if it does not already exist. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59d340f35b71e99b13be40888a30716ed01638fb" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;&amp;lt;path-to-existing-build&amp;gt;&lt;/code&gt; as the build tree, and loads the path to the source tree from its &lt;code&gt;CMakeCache.txt&lt;/code&gt; file, which must have already been generated by a previous run of CMake. The specified path may be absolute or relative to the current working directory. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4555d8f3c570e4fe07e7434ba968edba8171e7a" translate="yes" xml:space="preserve">
          <source>Uses the current working directory as the build tree, and &lt;code&gt;&amp;lt;path-to-source&amp;gt;&lt;/code&gt; as the source tree. The specified path may be absolute or relative to the current working directory. The source tree must contain a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file and must &lt;em&gt;not&lt;/em&gt; contain a &lt;code&gt;CMakeCache.txt&lt;/code&gt; file because the latter identifies an existing build tree. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3430fb1175e5df72b7a9d8aa93f50ef2b9669ba" translate="yes" xml:space="preserve">
          <source>UsewxWidgets</source>
          <target state="translated">UsewxWidgets</target>
        </trans-unit>
        <trans-unit id="385ca4db9f0c83852f89359b81f4ed3c33ca6c64" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;http://cobertura.github.io/cobertura/&quot;&gt;Cobertura&lt;/a&gt; as the coverage generation within your multi-module Java project can generate a series of XML files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99c09570c240595aa114d5e8b9e725766a54c038" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;configure_package_config_file&lt;/code&gt; helps. If used correctly, it makes the resulting &lt;code&gt;FooConfig.cmake&lt;/code&gt; file relocatable. Usage:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1021af2a591fe56147b1fe49ca2bfa73f1242b9d" translate="yes" xml:space="preserve">
          <source>Using Armadillo:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af984b2184e30a490dcce136c877ecd629f46590" translate="yes" xml:space="preserve">
          <source>Using Packages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461df49e700228ef22b672b97026636176a9f36d" translate="yes" xml:space="preserve">
          <source>Using Stub Libraries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68c6515d846bc557c8de27f9f086d2d96c677757" translate="yes" xml:space="preserve">
          <source>Using a specific git hash ensures that the main project&amp;rsquo;s own history is fully traceable to a specific point in the external project&amp;rsquo;s evolution. If a branch or tag name is used instead, then checking out a specific commit of the main project doesn&amp;rsquo;t necessarily pin the whole build to a specific point in the life of the external project. The lack of such deterministic behavior makes the main project lose traceability and repeatability.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6de70c7bcf5a27e82d0445bef0e4838700830b05" translate="yes" xml:space="preserve">
          <source>Using a target in this way causes :cmake(1)` to use the appropriate include directories and compile definitions for the target when compiling &lt;code&gt;myexe&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="306ed7b2eedb856845034a4f06f8c64dcb4b217a" translate="yes" xml:space="preserve">
          <source>Using the Visual Studio 2005 compiler from Microsoft</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b263c9d26337141ae5f0198352565479cb0b149" translate="yes" xml:space="preserve">
          <source>Using the macro MACRO_ADD_FILE_DEPENDENCIES() is discouraged. There are usually better ways to specify the correct dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75d8bfacfefd8906a2c98fc938953b149bc8c946" translate="yes" xml:space="preserve">
          <source>Usually set by the module environment implementation, used as a hint to locate the module command to execute.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9da379fb41683335ad2ca80fc62ecad28f541666" translate="yes" xml:space="preserve">
          <source>Usually this property does not need to be set. Only consider this property if auto-detection of &lt;code&gt;moc&lt;/code&gt; can not work &amp;ndash; e.g. because you are building the &lt;code&gt;moc&lt;/code&gt; binary as part of your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ee9a74276890e4bb7ff13f3828a91c789ac5a9" translate="yes" xml:space="preserve">
          <source>Usually this property does not need to be set. Only consider this property if auto-detection of &lt;code&gt;rcc&lt;/code&gt; can not work &amp;ndash; e.g. because you are building the &lt;code&gt;rcc&lt;/code&gt; binary as part of your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dfb42a5e7eb02da45d62bc599bcce6af03654c6" translate="yes" xml:space="preserve">
          <source>Usually this property does not need to be set. Only consider this property if auto-detection of &lt;code&gt;uic&lt;/code&gt; can not work &amp;ndash; e.g. because you are building the &lt;code&gt;uic&lt;/code&gt; binary as part of your project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58d51ae42099510c2cc3dbffc9358e46ea64f3f" translate="yes" xml:space="preserve">
          <source>Usually, the upstream depends on CMake itself and can use some CMake facilities for creating the package files. Consider an upstream which provides a single shared library:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70de2a810ff08c1bf24510e547b13955223964b1" translate="yes" xml:space="preserve">
          <source>Utility Modules</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b77ee7b6dc766ff553b720189f9e0f5c7594eb9" translate="yes" xml:space="preserve">
          <source>Utility targets may not have link dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc10180b878fd7bd185c2d6a23c0519a292a3a0" translate="yes" xml:space="preserve">
          <source>VALUE</source>
          <target state="translated">VALUE</target>
        </trans-unit>
        <trans-unit id="b5fcb61029823124da78ad195388293fa0fe55ea" translate="yes" xml:space="preserve">
          <source>VARIABLES</source>
          <target state="translated">VARIABLES</target>
        </trans-unit>
        <trans-unit id="a95558add3f80f61a7e7875e0c263324890e3782" translate="yes" xml:space="preserve">
          <source>VERBOSE</source>
          <target state="translated">VERBOSE</target>
        </trans-unit>
        <trans-unit id="b33892fbddeffc3368077b4904ad0b3d562a7312" translate="yes" xml:space="preserve">
          <source>VERSION</source>
          <target state="translated">VERSION</target>
        </trans-unit>
        <trans-unit id="3329d2d87ec429991aacc9a119b2bff4f47ceaa0" translate="yes" xml:space="preserve">
          <source>VISIBILITY_INLINES_HIDDEN</source>
          <target state="translated">VISIBILITY_INLINES_HIDDEN</target>
        </trans-unit>
        <trans-unit id="91411d1ed623ed18957a51cb789ed900db2d9188" translate="yes" xml:space="preserve">
          <source>VS 10 and above use MSBuild under the hood and support multiple compiler toolchains. CMake may specify a toolset explicitly, such as &lt;code&gt;v110&lt;/code&gt; for VS 11 or &lt;code&gt;Windows7.1SDK&lt;/code&gt; for 64-bit support in VS 10 Express. CMake provides the name of the chosen toolset in this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf6d3164342b5543cec6851b0f3ea152bd529de" translate="yes" xml:space="preserve">
          <source>VS 8 and above allow project files to specify a target platform. CMake provides the name of the chosen platform in this variable. See the &lt;a href=&quot;cmake_generator_platform#variable:CMAKE_GENERATOR_PLATFORM&quot; id=&quot;index-0-variable:CMAKE_GENERATOR_PLATFORM&quot;&gt;&lt;code&gt;CMAKE_GENERATOR_PLATFORM&lt;/code&gt;&lt;/a&gt; variable for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="238fc1ba09bcb0d55db00f48a2f845a88fd92cac" translate="yes" xml:space="preserve">
          <source>VS_CONFIGURATION_TYPE</source>
          <target state="translated">VS_CONFIGURATION_TYPE</target>
        </trans-unit>
        <trans-unit id="93b9a6788d3dc5da6b6902ce9c37ff101099ae52" translate="yes" xml:space="preserve">
          <source>VS_COPY_TO_OUT_DIR</source>
          <target state="translated">VS_COPY_TO_OUT_DIR</target>
        </trans-unit>
        <trans-unit id="b8ac15d54626f473f2ea5be3876accfdf379db66" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_&amp;lt;tagname&amp;gt;</source>
          <target state="translated">VS_CSHARP_&amp;lt;tagname&amp;gt;</target>
        </trans-unit>
        <trans-unit id="feb448652c33ec67f0892918b7a5b27e702e7c24" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_AutoGen &amp;ldquo;&amp;rdquo;(delete tag if previously defined)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bb3ba73a2c172f558e331688d61c38b5a960fb9" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_AutoGen &amp;ldquo;True&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14bda74bdbba5e09decbd044dc04f4147b15f989" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_DependentUpon &amp;lt;cs-filename&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1bc644181423d6ce9d0aec709597aaeb23bff20" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_DependentUpon &amp;lt;resx-filename&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="929bd5204c3eb12f0f6323c34078032e165c7434" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_DependentUpon &amp;lt;settings-filename&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="804fdbfe5fffe921e1f1a311ea3ac789118ee04b" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_DependentUpon &amp;lt;xaml-filename&amp;gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64460b80dc448d27637334ee0f8fd4013a47a2a8" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_DesignTime &amp;ldquo;&amp;rdquo; (delete tag if previously defined)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d13a77bee9f526d623ea50ba6e467dbdd3e72c" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_DesignTime &amp;ldquo;True&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3441bc5602c5b1781b0acea32b5a809a6d8837c7" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_DesignTimeSharedInput &amp;ldquo;True&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53f9f7f751d6ca3ff40061aa61ce17e26c5d9699" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_SubType &amp;ldquo;Designer&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6c3b18723f294c440cf59d5b7f3591cc72ec98" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_SubType &amp;ldquo;Form&amp;rdquo;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d767fb4eda1bab2bb22daf1c782ccde5ef4647c8" translate="yes" xml:space="preserve">
          <source>VS_CSHARP_tagname</source>
          <target state="translated">VS_CSHARP_tagname</target>
        </trans-unit>
        <trans-unit id="7209a3f9a390a05f2f1cb6ff17fa887cdee9202d" translate="yes" xml:space="preserve">
          <source>VS_DEBUGGER_COMMAND</source>
          <target state="translated">VS_DEBUGGER_COMMAND</target>
        </trans-unit>
        <trans-unit id="7169f1fde6715d911cace765f14c17b265cebde9" translate="yes" xml:space="preserve">
          <source>VS_DEBUGGER_COMMAND_ARGUMENTS</source>
          <target state="translated">VS_DEBUGGER_COMMAND_ARGUMENTS</target>
        </trans-unit>
        <trans-unit id="92be4ac7f4ab58c6f44bab974213fa677ded6623" translate="yes" xml:space="preserve">
          <source>VS_DEBUGGER_ENVIRONMENT</source>
          <target state="translated">VS_DEBUGGER_ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="028ab036aeb66e1c6fd66a1837bc8bdcabaebdda" translate="yes" xml:space="preserve">
          <source>VS_DEBUGGER_WORKING_DIRECTORY</source>
          <target state="translated">VS_DEBUGGER_WORKING_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="7979b4cb4e839262ca98bfedbc12a7be8e187943" translate="yes" xml:space="preserve">
          <source>VS_DEPLOYMENT_CONTENT</source>
          <target state="translated">VS_DEPLOYMENT_CONTENT</target>
        </trans-unit>
        <trans-unit id="172c7b6b1588e562b130fca8da63d062a9f3b865" translate="yes" xml:space="preserve">
          <source>VS_DEPLOYMENT_LOCATION</source>
          <target state="translated">VS_DEPLOYMENT_LOCATION</target>
        </trans-unit>
        <trans-unit id="7182c5f463ca4ab3c127bb9b5210a7b4a761510d" translate="yes" xml:space="preserve">
          <source>VS_DESKTOP_EXTENSIONS_VERSION</source>
          <target state="translated">VS_DESKTOP_EXTENSIONS_VERSION</target>
        </trans-unit>
        <trans-unit id="6ae1aea9ae0588a8ec5b77dedbec960d7f9420c2" translate="yes" xml:space="preserve">
          <source>VS_DOTNET_REFERENCEPROP_&amp;lt;refname&amp;gt;_TAG_&amp;lt;tagname&amp;gt;</source>
          <target state="translated">VS_DOTNET_REFERENCEPROP_&amp;lt;refname&amp;gt;_TAG_&amp;lt;tagname&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1c5c5b6731bd7fa22d30ec030f59d7831186f338" translate="yes" xml:space="preserve">
          <source>VS_DOTNET_REFERENCEPROP_refname_TAG_tagname</source>
          <target state="translated">VS_DOTNET_REFERENCEPROP_refname_TAG_tagname</target>
        </trans-unit>
        <trans-unit id="52e10423a3ed5e6a373f20e74217ad2f0deb8a2a" translate="yes" xml:space="preserve">
          <source>VS_DOTNET_REFERENCES</source>
          <target state="translated">VS_DOTNET_REFERENCES</target>
        </trans-unit>
        <trans-unit id="3eb81b47fe979f5f8d6027469a1142d0cc84bb7c" translate="yes" xml:space="preserve">
          <source>VS_DOTNET_REFERENCES_COPY_LOCAL</source>
          <target state="translated">VS_DOTNET_REFERENCES_COPY_LOCAL</target>
        </trans-unit>
        <trans-unit id="ebb9838a729373a3995e4700aac9bba0888269a0" translate="yes" xml:space="preserve">
          <source>VS_DOTNET_REFERENCE_&amp;lt;refname&amp;gt;</source>
          <target state="translated">VS_DOTNET_REFERENCE_&amp;lt;refname&amp;gt;</target>
        </trans-unit>
        <trans-unit id="fda95ac3dc240829be1f86673a51be4fe569b786" translate="yes" xml:space="preserve">
          <source>VS_DOTNET_REFERENCE_refname</source>
          <target state="translated">VS_DOTNET_REFERENCE_refname</target>
        </trans-unit>
        <trans-unit id="14361460fcb637016c7452610f85fe8d07cd4f16" translate="yes" xml:space="preserve">
          <source>VS_DOTNET_TARGET_FRAMEWORK_VERSION</source>
          <target state="translated">VS_DOTNET_TARGET_FRAMEWORK_VERSION</target>
        </trans-unit>
        <trans-unit id="996e94e6215769e9b7de7c07323268e618925305" translate="yes" xml:space="preserve">
          <source>VS_GLOBAL_&amp;lt;variable&amp;gt;</source>
          <target state="translated">VS_GLOBAL_&amp;lt;variable&amp;gt;</target>
        </trans-unit>
        <trans-unit id="cdf311964854b2ae8b67b541e9a76a902900fd6a" translate="yes" xml:space="preserve">
          <source>VS_GLOBAL_KEYWORD</source>
          <target state="translated">VS_GLOBAL_KEYWORD</target>
        </trans-unit>
        <trans-unit id="3f60708920ef0891957904184fe9fa10df21b165" translate="yes" xml:space="preserve">
          <source>VS_GLOBAL_PROJECT_TYPES</source>
          <target state="translated">VS_GLOBAL_PROJECT_TYPES</target>
        </trans-unit>
        <trans-unit id="718a4b2c81087b61cd627fc2fa17452bd79335c8" translate="yes" xml:space="preserve">
          <source>VS_GLOBAL_ROOTNAMESPACE</source>
          <target state="translated">VS_GLOBAL_ROOTNAMESPACE</target>
        </trans-unit>
        <trans-unit id="247fdbf189b089046e42ee6bdba30b102b645109" translate="yes" xml:space="preserve">
          <source>VS_GLOBAL_SECTION_POST_&amp;lt;section&amp;gt;</source>
          <target state="translated">VS_GLOBAL_SECTION_POST_&amp;lt;section&amp;gt;</target>
        </trans-unit>
        <trans-unit id="1b40c1c65b44bc58a54a622dcb455856fcb45198" translate="yes" xml:space="preserve">
          <source>VS_GLOBAL_SECTION_POST_section</source>
          <target state="translated">VS_GLOBAL_SECTION_POST_section</target>
        </trans-unit>
        <trans-unit id="fcc5ba55a35f059acb2e53a7de9623019ee3bb28" translate="yes" xml:space="preserve">
          <source>VS_GLOBAL_SECTION_PRE_&amp;lt;section&amp;gt;</source>
          <target state="translated">VS_GLOBAL_SECTION_PRE_&amp;lt;section&amp;gt;</target>
        </trans-unit>
        <trans-unit id="85c3aaabe8290858dd7202f2ea08d3fe2281181b" translate="yes" xml:space="preserve">
          <source>VS_GLOBAL_SECTION_PRE_section</source>
          <target state="translated">VS_GLOBAL_SECTION_PRE_section</target>
        </trans-unit>
        <trans-unit id="5c1406aa6791f589b0f57e1bd33d8622841d1270" translate="yes" xml:space="preserve">
          <source>VS_GLOBAL_variable</source>
          <target state="translated">VS_GLOBAL_variable</target>
        </trans-unit>
        <trans-unit id="57ef3bdf193510705d63243187d5444c6584eeaa" translate="yes" xml:space="preserve">
          <source>VS_INCLUDE_IN_VSIX</source>
          <target state="translated">VS_INCLUDE_IN_VSIX</target>
        </trans-unit>
        <trans-unit id="4d6b257a7730ce6872786fee95a8c7d77587e31d" translate="yes" xml:space="preserve">
          <source>VS_IOT_EXTENSIONS_VERSION</source>
          <target state="translated">VS_IOT_EXTENSIONS_VERSION</target>
        </trans-unit>
        <trans-unit id="098c3da760d4bdf29777f14cdeeb15c7d1c4f831" translate="yes" xml:space="preserve">
          <source>VS_IOT_STARTUP_TASK</source>
          <target state="translated">VS_IOT_STARTUP_TASK</target>
        </trans-unit>
        <trans-unit id="5f725ad9f46cd31a9e25f02c067b1b2e42b0f540" translate="yes" xml:space="preserve">
          <source>VS_JUST_MY_CODE_DEBUGGING</source>
          <target state="translated">VS_JUST_MY_CODE_DEBUGGING</target>
        </trans-unit>
        <trans-unit id="e37c14666668225cd3a25c4e751084c6105e0012" translate="yes" xml:space="preserve">
          <source>VS_KEYWORD</source>
          <target state="translated">VS_KEYWORD</target>
        </trans-unit>
        <trans-unit id="b3903e39f55bb1150f4d731b28860d42d81d94cf" translate="yes" xml:space="preserve">
          <source>VS_MOBILE_EXTENSIONS_VERSION</source>
          <target state="translated">VS_MOBILE_EXTENSIONS_VERSION</target>
        </trans-unit>
        <trans-unit id="40cadc8019c7aca0fa6a406b3f61bb4a6bc8bc4b" translate="yes" xml:space="preserve">
          <source>VS_NO_SOLUTION_DEPLOY</source>
          <target state="translated">VS_NO_SOLUTION_DEPLOY</target>
        </trans-unit>
        <trans-unit id="ce9c83c904b244cc3555c6e3527bcaadc5496324" translate="yes" xml:space="preserve">
          <source>VS_PACKAGE_REFERENCES</source>
          <target state="translated">VS_PACKAGE_REFERENCES</target>
        </trans-unit>
        <trans-unit id="61664387ad3658063164f98ae6d1788a05138853" translate="yes" xml:space="preserve">
          <source>VS_PROJECT_IMPORT</source>
          <target state="translated">VS_PROJECT_IMPORT</target>
        </trans-unit>
        <trans-unit id="44617104aba8e7a4e13e9febf29b266bbb035c3f" translate="yes" xml:space="preserve">
          <source>VS_RESOURCE_GENERATOR</source>
          <target state="translated">VS_RESOURCE_GENERATOR</target>
        </trans-unit>
        <trans-unit id="15e178229b1f690e644c57a9b564c2a0b91c6f85" translate="yes" xml:space="preserve">
          <source>VS_RESOURCE_GENERATOR &amp;ldquo;&amp;rdquo; (delete tag if previously defined)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a63d9e99f5c02ff362da7bd8b918c20ce73be180" translate="yes" xml:space="preserve">
          <source>VS_SCC_AUXPATH</source>
          <target state="translated">VS_SCC_AUXPATH</target>
        </trans-unit>
        <trans-unit id="9639d9304a1f9b148caa012cea911e1238bc139d" translate="yes" xml:space="preserve">
          <source>VS_SCC_LOCALPATH</source>
          <target state="translated">VS_SCC_LOCALPATH</target>
        </trans-unit>
        <trans-unit id="3dd34831183307a80af05fce54957af45281cfe7" translate="yes" xml:space="preserve">
          <source>VS_SCC_PROJECTNAME</source>
          <target state="translated">VS_SCC_PROJECTNAME</target>
        </trans-unit>
        <trans-unit id="2bd02bdde23bbeff5ba44ef97b7eba4b719d4240" translate="yes" xml:space="preserve">
          <source>VS_SCC_PROVIDER</source>
          <target state="translated">VS_SCC_PROVIDER</target>
        </trans-unit>
        <trans-unit id="d3876817dfd257978fee10c20da2a57546c111b3" translate="yes" xml:space="preserve">
          <source>VS_SDK_REFERENCES</source>
          <target state="translated">VS_SDK_REFERENCES</target>
        </trans-unit>
        <trans-unit id="df5779044090db5774bb5932c4a8fe58ff0afaff" translate="yes" xml:space="preserve">
          <source>VS_SHADER_DISABLE_OPTIMIZATIONS</source>
          <target state="translated">VS_SHADER_DISABLE_OPTIMIZATIONS</target>
        </trans-unit>
        <trans-unit id="cb4077746b3297ba2c740a601bb8893c90c6234a" translate="yes" xml:space="preserve">
          <source>VS_SHADER_ENABLE_DEBUG</source>
          <target state="translated">VS_SHADER_ENABLE_DEBUG</target>
        </trans-unit>
        <trans-unit id="0f7a8045dc315c4bd7544a13f5fdd41e143d8d31" translate="yes" xml:space="preserve">
          <source>VS_SHADER_ENTRYPOINT</source>
          <target state="translated">VS_SHADER_ENTRYPOINT</target>
        </trans-unit>
        <trans-unit id="c870faa3fac31807bb3fbce9df86b9cbea45ee78" translate="yes" xml:space="preserve">
          <source>VS_SHADER_FLAGS</source>
          <target state="translated">VS_SHADER_FLAGS</target>
        </trans-unit>
        <trans-unit id="6bdbd417bfb40e55e758a009a475b9ef2b0403a0" translate="yes" xml:space="preserve">
          <source>VS_SHADER_MODEL</source>
          <target state="translated">VS_SHADER_MODEL</target>
        </trans-unit>
        <trans-unit id="d2a2f7c72dcd2f20c3ef50457ead129989bd588b" translate="yes" xml:space="preserve">
          <source>VS_SHADER_OBJECT_FILE_NAME</source>
          <target state="translated">VS_SHADER_OBJECT_FILE_NAME</target>
        </trans-unit>
        <trans-unit id="5983fae6c05627de6569fadb5b14f9358f71a420" translate="yes" xml:space="preserve">
          <source>VS_SHADER_OUTPUT_HEADER_FILE</source>
          <target state="translated">VS_SHADER_OUTPUT_HEADER_FILE</target>
        </trans-unit>
        <trans-unit id="5883a91f7f019d347fda402749aa7a30cb90b59f" translate="yes" xml:space="preserve">
          <source>VS_SHADER_TYPE</source>
          <target state="translated">VS_SHADER_TYPE</target>
        </trans-unit>
        <trans-unit id="5fffdb16a274af8e12e3205945eae98f51aa0bb1" translate="yes" xml:space="preserve">
          <source>VS_SHADER_VARIABLE_NAME</source>
          <target state="translated">VS_SHADER_VARIABLE_NAME</target>
        </trans-unit>
        <trans-unit id="e3614119083688b96fcd20b304cf02e8874b8c19" translate="yes" xml:space="preserve">
          <source>VS_STARTUP_PROJECT</source>
          <target state="translated">VS_STARTUP_PROJECT</target>
        </trans-unit>
        <trans-unit id="acb13b150eb09ef69622335fdf8b09de00d23e5e" translate="yes" xml:space="preserve">
          <source>VS_TOOL_OVERRIDE</source>
          <target state="translated">VS_TOOL_OVERRIDE</target>
        </trans-unit>
        <trans-unit id="b52ca4a697442591254b49d44397d78796526ce7" translate="yes" xml:space="preserve">
          <source>VS_USER_PROPS</source>
          <target state="translated">VS_USER_PROPS</target>
        </trans-unit>
        <trans-unit id="ebdd26c5f247815af75631afd1af6557934030a8" translate="yes" xml:space="preserve">
          <source>VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION</source>
          <target state="translated">VS_WINDOWS_TARGET_PLATFORM_MIN_VERSION</target>
        </trans-unit>
        <trans-unit id="be3a36c96c19c5bfe412a04fc0698090d2b00226" translate="yes" xml:space="preserve">
          <source>VS_WINRT_COMPONENT</source>
          <target state="translated">VS_WINRT_COMPONENT</target>
        </trans-unit>
        <trans-unit id="0d7dd1799977ab79f96de82eeecf1ec02aa9c831" translate="yes" xml:space="preserve">
          <source>VS_WINRT_EXTENSIONS</source>
          <target state="translated">VS_WINRT_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="4c6afecc29019e5092a56a40a0c6e98a6eb68492" translate="yes" xml:space="preserve">
          <source>VS_WINRT_REFERENCES</source>
          <target state="translated">VS_WINRT_REFERENCES</target>
        </trans-unit>
        <trans-unit id="8fcc1f5b03a0dc7d2c910925d3dc338f286bb475" translate="yes" xml:space="preserve">
          <source>VS_XAML_TYPE</source>
          <target state="translated">VS_XAML_TYPE</target>
        </trans-unit>
        <trans-unit id="4d9979eda49ba498c039b6ca0c1ba6901a7e0c46" translate="yes" xml:space="preserve">
          <source>Valid graph types are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffa20f8fc94d94bfc5dd230016cf99e3affa21a4" translate="yes" xml:space="preserve">
          <source>Valid values are &lt;code&gt;MSMPI&lt;/code&gt; and &lt;code&gt;MPICH2&lt;/code&gt;. If set, only the given library will be searched for. By default, &lt;code&gt;MSMPI&lt;/code&gt; will be preferred over &lt;code&gt;MPICH2&lt;/code&gt; if both are available. This also sets &lt;code&gt;MPI_SKIP_COMPILER_WRAPPER&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;, which may be overridden.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437929028f9856bbba1867466aea2fc15492c547" translate="yes" xml:space="preserve">
          <source>Value &lt;code&gt;ONLY&lt;/code&gt; is not supported so &lt;code&gt;FIRST&lt;/code&gt; will be used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80858bfe8010c37c0a22755e4ea3bc3e75c5958" translate="yes" xml:space="preserve">
          <source>Value for symbol visibility compile flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="882cf35ef6907872754374675088a2390aea6008" translate="yes" xml:space="preserve">
          <source>Value given to the &lt;code&gt;DESCRIPTION&lt;/code&gt; option of the most recent call to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command with project name &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;&lt;/code&gt;, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763fb91915cf8e554694662a3096bbd219c91cd2" translate="yes" xml:space="preserve">
          <source>Value given to the &lt;code&gt;HOMEPAGE_URL&lt;/code&gt; option of the most recent call to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command with project name &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;&lt;/code&gt;, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6dba60957b967a98b8e86ff89bd3d68de9bacaf8" translate="yes" xml:space="preserve">
          <source>Value given to the &lt;code&gt;VERSION&lt;/code&gt; option of the most recent call to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command with project name &lt;code&gt;&amp;lt;PROJECT-NAME&amp;gt;&lt;/code&gt;, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d773de965ce37a702e389d5c047aab0a2ec2ee2" translate="yes" xml:space="preserve">
          <source>Value given to the &lt;code&gt;VERSION&lt;/code&gt; option of the most recent call to the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command, if any.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81572fdba5fd71b9fe8dce42a251bda9100b542" translate="yes" xml:space="preserve">
          <source>Value of a cache entry.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31e9f2e71edead82aaeb595e140ea48db3e8212" translate="yes" xml:space="preserve">
          <source>Value of the &lt;code&gt;-c&lt;/code&gt; option to the &lt;code&gt;P4Command&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3212c586c7b765a8ee1d7b336a153fc382e7a34" translate="yes" xml:space="preserve">
          <source>Value of the property &lt;code&gt;prop&lt;/code&gt; on the target &lt;code&gt;tgt&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cab7c56d5a4f7f402ca5888bd1b91ad32aedc8ad" translate="yes" xml:space="preserve">
          <source>Value of the property &lt;code&gt;prop&lt;/code&gt; on the target on which the generator expression is evaluated. Note that for generator expressions in &lt;a href=&quot;cmake-buildsystem.7#target-usage-requirements&quot;&gt;Transitive Usage Requirements&lt;/a&gt; this is the value of the property on the consuming target rather than the target specifying the requirement.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63dd1c4a8eb08a3f5af69d3c9cc2a1fd72b517f5" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;a href=&quot;cmake_exe_linker_flags#variable:CMAKE_EXE_LINKER_FLAGS&quot; id=&quot;index-0-variable:CMAKE_EXE_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; cache entry the first time a build tree is configured. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30eab6a811b36c9cf8dcc0e87d628f539964b8c0" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;a href=&quot;cmake_module_linker_flags#variable:CMAKE_MODULE_LINKER_FLAGS&quot; id=&quot;index-0-variable:CMAKE_MODULE_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_MODULE_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; cache entry the first time a build tree is configured. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1117d96a2001f6200b8262142c2871aedac0234c" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;a href=&quot;cmake_shared_linker_flags#variable:CMAKE_SHARED_LINKER_FLAGS&quot; id=&quot;index-0-variable:CMAKE_SHARED_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_SHARED_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; cache entry the first time a build tree is configured. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2784ebdffebad95fe1d01b77dbc824a39e972f12" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;a href=&quot;cmake_static_linker_flags#variable:CMAKE_STATIC_LINKER_FLAGS&quot; id=&quot;index-0-variable:CMAKE_STATIC_LINKER_FLAGS&quot;&gt;&lt;code&gt;CMAKE_STATIC_LINKER_FLAGS&lt;/code&gt;&lt;/a&gt; cache entry the first time a build tree is configured. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba5bd7f8d5c90e96367d2f7cff3f8b6f2ac9eec1" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; cache entry the first time a build tree is configured for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc7f415fd75eb26ba61a526bf57019ab3e934d18" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; cache entry the first time a build tree is configured for language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt;. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe4fd3ea91df701f11608dfd4b59a24dddaddffb" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;code&gt;CMAKE_EXE_LINKER_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; cache entry the first time a build tree is configured. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef054dfc460170e3309da61650163f2932fd45c" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;code&gt;CMAKE_MODULE_LINKER_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; cache entry the first time a build tree is configured. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55f0bfbbabdc4e36c8a4966209a49b8be4bc87e8" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;code&gt;CMAKE_SHARED_LINKER_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; cache entry the first time a build tree is configured. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c114135e463a8f596b29e13b060fc76da88bd4b" translate="yes" xml:space="preserve">
          <source>Value used to initialize the &lt;code&gt;CMAKE_STATIC_LINKER_FLAGS_&amp;lt;CONFIG&amp;gt;&lt;/code&gt; cache entry the first time a build tree is configured. This variable is meant to be set by a &lt;a href=&quot;cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;toolchain file&lt;/code&gt;&lt;/a&gt;. CMake may prepend or append content to the value based on the environment and target platform.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e5f6617ee8a70de0b73ae94c00eb97394792ab" translate="yes" xml:space="preserve">
          <source>Variable &lt;a href=&quot;../variable/cmake_osx_architectures#variable:CMAKE_OSX_ARCHITECTURES&quot; id=&quot;index-0-variable:CMAKE_OSX_ARCHITECTURES&quot;&gt;&lt;code&gt;CMAKE_OSX_ARCHITECTURES&lt;/code&gt;&lt;/a&gt; can be used to set architectures for both device and simulator. Variable &lt;a href=&quot;../variable/cmake_osx_deployment_target#variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot; id=&quot;index-0-variable:CMAKE_OSX_DEPLOYMENT_TARGET&quot;&gt;&lt;code&gt;CMAKE_OSX_DEPLOYMENT_TARGET&lt;/code&gt;&lt;/a&gt; can be used to set an iOS/tvOS/watchOS deployment target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717f424609cddc220cea8e288c292f0635007eee" translate="yes" xml:space="preserve">
          <source>Variable Expansion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae0c46995a971c53d94991655229942801a42ed" translate="yes" xml:space="preserve">
          <source>Variable Expansion Operators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a9e89ce8314718928bac92a9913c5c5a25da7a0" translate="yes" xml:space="preserve">
          <source>Variable Queries</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c966366eaca8b449fcd98425713df698e4077a65" translate="yes" xml:space="preserve">
          <source>Variable References</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5274194cdb681c339e9dbdb562758474bdff45c5" translate="yes" xml:space="preserve">
          <source>Variable for disabling &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; calls.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ac47715d4d3782b416ac56d9ea8d1f82ffc58a" translate="yes" xml:space="preserve">
          <source>Variable indicating if OpenACC support for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; was detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1fe63330cad0f851091222cfc342a96efc90292" translate="yes" xml:space="preserve">
          <source>Variable indicating if OpenMP support for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; was detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f47dfa515bf5400b8af5abfa7df304c7f539aa" translate="yes" xml:space="preserve">
          <source>Variable indicating if the iconv support was found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3736e2a0d8a5518c54e6c14c8f5e279634b0f721" translate="yes" xml:space="preserve">
          <source>Variable indicating that MPI settings for all requested languages have been found. If no components are specified, this is true if MPI settings for all enabled languages were detected. Note that the &lt;code&gt;MPICXX&lt;/code&gt; component does not affect this variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7795e169f5d1f89a7622576ac847469b266a0c1d" translate="yes" xml:space="preserve">
          <source>Variable indicating that OpenMP flags for all requested languages have been found. If no components are specified, this is true if OpenMP settings for all enabled languages were detected.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54953208ba4f9c9ddc2c6c32f3977669225015b3" translate="yes" xml:space="preserve">
          <source>Variable indicating the MPI settings for &lt;code&gt;&amp;lt;lang&amp;gt;&lt;/code&gt; were found and that simple MPI test programs compile with the provided settings.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f826c5028e14359f5cac2098b3bc2af960e3e68b" translate="yes" xml:space="preserve">
          <source>Variable indicating whether the MPI-2 C++ bindings are present (introduced in MPI-2, removed with MPI-3).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cefba15c9630a1cbd97cd27f1f9c78eaf49018d" translate="yes" xml:space="preserve">
          <source>Variable templates, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3651.pdf&quot;&gt;N3651&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf131f909207d428489239e9b55133667bb3c83" translate="yes" xml:space="preserve">
          <source>Variable to define with autogenerated Python files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001774f75f4ef52770b445ae9e22f7b755d89eed" translate="yes" xml:space="preserve">
          <source>Variable to define with autogenerated descriptor files, if requested.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="419a18c80987f7d7126e1aa9cac43a99fa5f1768" translate="yes" xml:space="preserve">
          <source>Variable to define with autogenerated header files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ed6d1231dd6617beea9cb1ed07106b2b1a0178" translate="yes" xml:space="preserve">
          <source>Variable to define with autogenerated source files</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="3b1d988155f966c435579a30a6aee3b4c339ecdf" translate="yes" xml:space="preserve">
          <source>Variables Affecting Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ae7d6bba55db62a694fa96c3f535b85d3ab9207" translate="yes" xml:space="preserve">
          <source>Variables and Properties</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0318b8b77b0bec5eb6aa044a54a8a0abba602c" translate="yes" xml:space="preserve">
          <source>Variables are the basic unit of storage in the CMake Language. Their values are always of string type, though some commands may interpret the strings as values of other types. The &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/unset#command:unset&quot; id=&quot;index-0-command:unset&quot;&gt;&lt;code&gt;unset()&lt;/code&gt;&lt;/a&gt; commands explicitly set or unset a variable, but other commands have semantics that modify variables as well. Variable names are case-sensitive and may consist of almost any text, but we recommend sticking to names consisting only of alphanumeric characters plus &lt;code&gt;_&lt;/code&gt; and &lt;code&gt;-&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f87e03ea21d28e714b8c234975083752cd44c72" translate="yes" xml:space="preserve">
          <source>Variables common to all CPack Generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd6332ec8b7100365d5fd81be029f201b021d218" translate="yes" xml:space="preserve">
          <source>Variables concerning CPack Components</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc0b577a0d78c4dcabcab6acdef26204f6e759b" translate="yes" xml:space="preserve">
          <source>Variables defined by the module</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58c44c82fb93fdcf341e8701f726be1ded304d6f" translate="yes" xml:space="preserve">
          <source>Variables for Advanced Use</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b9cbd721ddbbad87de9b6207d461674cc4ae49" translate="yes" xml:space="preserve">
          <source>Variables for CPack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d492813a704a2e1ce99d0fa9ab5fc99bbcdaa528" translate="yes" xml:space="preserve">
          <source>Variables for CTest</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c51cc8a5cba41192ca2582c234b3ec189c549b2" translate="yes" xml:space="preserve">
          <source>Variables for Languages</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d74f7bcd8affe8c843dace7d1380acc66b354776" translate="yes" xml:space="preserve">
          <source>Variables for Source Package Generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95c39a1877db728b5c61ee62883e20cf6f788fff" translate="yes" xml:space="preserve">
          <source>Variables for locating MPI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59fa8aa43c075083edbec783a530dc8d64507131" translate="yes" xml:space="preserve">
          <source>Variables for using MPI</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f601afeb6fc9dd3a292e32ca6a4d5ab1b84b8a2" translate="yes" xml:space="preserve">
          <source>Variables have dynamic scope. Each variable &amp;ldquo;set&amp;rdquo; or &amp;ldquo;unset&amp;rdquo; creates a binding in the current scope:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13c0ad1de2c16aabcc7ff57bb3f0ac43d44eba20" translate="yes" xml:space="preserve">
          <source>Variables meaningful to CMake, such as &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt;, are propagated automatically. The &lt;code&gt;CMAKE_TRY_COMPILE_PLATFORM_VARIABLES&lt;/code&gt; variable may be set to pass custom variables meaningful to a toolchain file. For example, a toolchain file may contain:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b28539dcfda63a1cc5606bf8e889a0dd322594b" translate="yes" xml:space="preserve">
          <source>Variables specific to the graphviz support</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85bed3699731e03ea47e8aa2cd80ebf8d96cec60" translate="yes" xml:space="preserve">
          <source>Variables that Change Behavior</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cb5c5ae4dcbf7a3d2b90635836ce1ce0d6f0de" translate="yes" xml:space="preserve">
          <source>Variables that Control the Build</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33aee83e2e3f33308c678138237d1fe2e42b09a8" translate="yes" xml:space="preserve">
          <source>Variables that Describe the System</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf4e615d57cc7773933c03385bb3d5cbfc6d00c" translate="yes" xml:space="preserve">
          <source>Variables that Provide Information</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d5fcd3f8804a98d2ae6fb6a051e683b9a9ebe4a" translate="yes" xml:space="preserve">
          <source>Variables that indicate if the mangling is found:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34749650c2faf7593537c6860dc6e2020477e50a" translate="yes" xml:space="preserve">
          <source>Variadic macros, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1653.htm&quot;&gt;N1653&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c01139808887f6744afc4108e4ecef9626575a8" translate="yes" xml:space="preserve">
          <source>Variadic macros, as defined in &lt;code&gt;ISO/IEC 9899:1999&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7ba1eee2a31e82a94ac8c7d0f5acb69d31922de" translate="yes" xml:space="preserve">
          <source>Variadic templates, as defined in &lt;a href=&quot;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2242.pdf&quot;&gt;N2242&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="346a211b0d8c903ae1938b4eb3544504c75bd473" translate="yes" xml:space="preserve">
          <source>Verifies that an application &lt;code&gt;&amp;lt;app&amp;gt;&lt;/code&gt; appears valid based on running analysis tools on it. Calls &lt;a href=&quot;../command/message#command:message&quot; id=&quot;index-0-command:message&quot;&gt;&lt;code&gt;message(FATAL_ERROR)&lt;/code&gt;&lt;/a&gt; if the application is not verified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d015e2f74eaae69979e8423382d07d4b0c4f38ec" translate="yes" xml:space="preserve">
          <source>Verifies that any symlinks found in the &lt;code&gt;&amp;lt;bundle&amp;gt;&lt;/code&gt; bundle point to other files that are already also in the bundle&amp;hellip; Anything that points to an external file causes this function to fail the verification.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc85a33df019d9cd976e0dee554b43310308cd2" translate="yes" xml:space="preserve">
          <source>Verifies that the sum of all prerequisites of all files inside the bundle are contained within the bundle or are &lt;code&gt;system&lt;/code&gt; libraries, presumed to exist everywhere.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c3c7c5b1ccad8a4b6b83ecea9ae806d9e339851" translate="yes" xml:space="preserve">
          <source>Verify that the downloaded content hash matches the expected value, where &lt;code&gt;ALGO&lt;/code&gt; is one of the algorithms supported by &lt;code&gt;file(&amp;lt;HASH&amp;gt;)&lt;/code&gt;. If it does not match, the operation fails with an error.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a083ebe61d068ecf69f91867ac5f4fa46c862f0b" translate="yes" xml:space="preserve">
          <source>Version Selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e6de74f6e40e5cdee1a986a378f3cd97ad72b0" translate="yes" xml:space="preserve">
          <source>Version files are loaded in a nested scope so they are free to set any variables they wish as part of their computation. The find_package command wipes out the scope when the version file has completed and it has checked the output variables. When the version file claims to be an acceptable match for the requested version the find_package command sets the following variables for use by the project:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c260c24505b18fb64915db66112088e60b1c9eb6" translate="yes" xml:space="preserve">
          <source>Version of Xcode (&lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-0-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator only).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7daa85e2000518990fc04937cadd965d1748868" translate="yes" xml:space="preserve">
          <source>Version of a framework created using the &lt;a href=&quot;framework#prop_tgt:FRAMEWORK&quot; id=&quot;index-0-prop_tgt:FRAMEWORK&quot;&gt;&lt;code&gt;FRAMEWORK&lt;/code&gt;&lt;/a&gt; target property (e.g. &lt;code&gt;A&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="364f810aa1d55aba832b0022df76cc755844390c" translate="yes" xml:space="preserve">
          <source>Version of package found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2162d9bb564abdc0e53bae657e54653f1d3712aa" translate="yes" xml:space="preserve">
          <source>Version string of &amp;ldquo;simulated&amp;rdquo; compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a06204baf08c1fb1b0a5476595d3bc1962d728" translate="yes" xml:space="preserve">
          <source>View Help</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddb57faf8b9f71194fff094daeedb47ca8a6201a" translate="yes" xml:space="preserve">
          <source>View mode only.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b160a5efc2b70d01b0b4e90c71c27dbf33c3f9" translate="yes" xml:space="preserve">
          <source>Visual Studio 10 2010</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d9f018b51ec385c52c75cc5a1e0c34704aced70" translate="yes" xml:space="preserve">
          <source>Visual Studio 11 2012</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c778763e8f37f60b0211097064e67f19fc5a1d5e" translate="yes" xml:space="preserve">
          <source>Visual Studio 12 2013</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6178504334d9d2f6ad4f563589c7502f805bd260" translate="yes" xml:space="preserve">
          <source>Visual Studio 14 2015</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b254cb387189ea162da232349bb76371490a3826" translate="yes" xml:space="preserve">
          <source>Visual Studio 15 2017</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732ade174fd543e2382bab072b96d5b26cc6515b" translate="yes" xml:space="preserve">
          <source>Visual Studio 16 2019</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68cc7739a8b88415f0b9019d950dda047838796e" translate="yes" xml:space="preserve">
          <source>Visual Studio 2013 requires a target device IP address be entered for each target marked for deployment. For large numbers of targets, this can be tedious. NOTE: Visual Studio &lt;em&gt;will&lt;/em&gt; deploy all project dependencies of a project tagged for deployment to the IP address configured for that project even if those dependencies are not tagged for deployment.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4547dc685d5e60b177ee3befdca56f4f7fba7e" translate="yes" xml:space="preserve">
          <source>Visual Studio 6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba12391c89c52cb5f536cde4a081f997b2268e41" translate="yes" xml:space="preserve">
          <source>Visual Studio 7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24f92c10fa903fc4452e00b537e381e077d9cd9a" translate="yes" xml:space="preserve">
          <source>Visual Studio 7 .NET 2003</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed1f8dc947f2148f0aeb20de3d7f62c30803af26" translate="yes" xml:space="preserve">
          <source>Visual Studio 8 2005</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d41fdac40d1777f8306f9b1a0042ce607a5fbf" translate="yes" xml:space="preserve">
          <source>Visual Studio 9 2008</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2ac8c71d47276c2aa4f662db63d45e2ca783524" translate="yes" xml:space="preserve">
          <source>Visual Studio Generators</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea161bed4ce60bc03be3e16625a8f9aa9db019d6" translate="yes" xml:space="preserve">
          <source>Visual Studio Platform Selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43a1817b5b57e615e0aca94c736aacb3a4bf79b" translate="yes" xml:space="preserve">
          <source>Visual Studio Platform Toolset name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6081679bf422851eba1f809e275115ea17f9aca0" translate="yes" xml:space="preserve">
          <source>Visual Studio Platform Toolset version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f51279c64c1eb09feed317e085a2fb119239a995" translate="yes" xml:space="preserve">
          <source>Visual Studio Source Code Control Aux Path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bc036a32e5bc40de7a425c761da47c54df7de06" translate="yes" xml:space="preserve">
          <source>Visual Studio Source Code Control Local Path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7405bcba6efd69515a3984bd5d0e0acd411bb241" translate="yes" xml:space="preserve">
          <source>Visual Studio Source Code Control Project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93f917941ced82008c40093af7dcf40e6edf4876" translate="yes" xml:space="preserve">
          <source>Visual Studio Source Code Control Provider.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85e70d78bd3750259bfd0ab0a80c614bb0fedac9" translate="yes" xml:space="preserve">
          <source>Visual Studio Toolset Selection</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d23825a9262f021e55ed539b996d2de1ef10313" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows 10 Desktop Extensions Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dddb3d7be40530ba90430cbd72736039e05f635a" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows 10 IoT Continuous Background Task</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253fb9f84828e6e90f44f0d1b9084cef47524615" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows 10 IoT Extensions Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c53c48fe7abc10b66af55f26cfb9070433c7c2e" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows 10 Mobile Extensions Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa787aa8c0972ba916761253a114e08187829fc0" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows Target Platform Minimum Version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d25152db15781724e23212de4d38c374a3a8bbb" translate="yes" xml:space="preserve">
          <source>Visual Studio Windows Target Platform Version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="467a5e7dbe1517a4a7c99f71df9c0b88e4c64309" translate="yes" xml:space="preserve">
          <source>Visual Studio and CSharp source-file-specific configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f172a883b38decf5fbb74857ead5f250afdf3b58" translate="yes" xml:space="preserve">
          <source>Visual Studio managed project .NET reference with name &lt;code&gt;&amp;lt;refname&amp;gt;&lt;/code&gt; and hint path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660e39b59cc5cae9b775491cf9e84cc09db73bb4" translate="yes" xml:space="preserve">
          <source>Visual Studio managed project .NET references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1a7f0f1623f13fdefc8a7616b565eaebb0402a" translate="yes" xml:space="preserve">
          <source>Visual Studio managed project imports</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbff17ca01fc05b75ef536174f92b43e34526c63" translate="yes" xml:space="preserve">
          <source>Visual Studio package references for nuget.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbe0951cdfdda8f728cad28cfd93623429c39931" translate="yes" xml:space="preserve">
          <source>Visual Studio preferred tool architecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6daaf8246019241fdf4497f1fbf55865585ec03b" translate="yes" xml:space="preserve">
          <source>Visual Studio project SDK references. Specify a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; of SDK references to be added to a generated Visual Studio project, e.g. &lt;code&gt;Microsoft.AdMediatorWindows81, Version=1.0&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2adb342235b0c81b9b13522373f6d9519c56bbb" translate="yes" xml:space="preserve">
          <source>Visual Studio project Windows Runtime Metadata references</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d33cf32f4e0c2f2c0fc2a268aa2f7311c12520b" translate="yes" xml:space="preserve">
          <source>Visual Studio project configuration type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e664757287bcc4462f910d6a37ac5c74045e19ff" translate="yes" xml:space="preserve">
          <source>Visual Studio project keyword for VS 10 (2010) and newer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab3c13cf98e551430a4fda1f3fcbdb2a854af8fe" translate="yes" xml:space="preserve">
          <source>Visual Studio project keyword for VS 9 (2008) and older.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="063b4ec24d4b1d6656f94c16f0007b92aa1107f0" translate="yes" xml:space="preserve">
          <source>Visual Studio project root namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95df0948c425e7c0ea203afbe4d3aa5682f345f1" translate="yes" xml:space="preserve">
          <source>Visual Studio project type(s).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81f20619119a6d71d349aba3259a850dd7e296d" translate="yes" xml:space="preserve">
          <source>Visual Studio project-specific global variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2376c83a78d75803bebdcc17ab5bb63e4572cfb4" translate="yes" xml:space="preserve">
          <source>Visual Studio target platform name used by the current generator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46e8baaab25a7968872e8196e22b6b418566e99c" translate="yes" xml:space="preserve">
          <source>WARNING: &lt;code&gt;DESTDIR&lt;/code&gt; may not be used on Windows because installation prefix usually contains a drive letter like in &lt;code&gt;C:/Program Files&lt;/code&gt; which cannot be prepended with some other prefix.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ad4c32ce94dfda043ff719d74c084cad639f51" translate="yes" xml:space="preserve">
          <source>WILL_FAIL</source>
          <target state="translated">WILL_FAIL</target>
        </trans-unit>
        <trans-unit id="6bfeade79e554c96c5980b1640b2b6530b970f83" translate="yes" xml:space="preserve">
          <source>WIN32</source>
          <target state="translated">WIN32</target>
        </trans-unit>
        <trans-unit id="b24206695c16611762116e6093715dcd592159e1" translate="yes" xml:space="preserve">
          <source>WIN32_EXECUTABLE</source>
          <target state="translated">WIN32_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="a29007b9402fb6e6c62434f7e21b5a8f581c5016" translate="yes" xml:space="preserve">
          <source>WINCE</source>
          <target state="translated">WINCE</target>
        </trans-unit>
        <trans-unit id="9fcf4aa13bae898e604e37fe967b93eca1a0da35" translate="yes" xml:space="preserve">
          <source>WINDOWS_EXPORT_ALL_SYMBOLS</source>
          <target state="translated">WINDOWS_EXPORT_ALL_SYMBOLS</target>
        </trans-unit>
        <trans-unit id="e7a7a9e1211d22cbc212681ad8edd8642497d85f" translate="yes" xml:space="preserve">
          <source>WINDOWS_PHONE</source>
          <target state="translated">WINDOWS_PHONE</target>
        </trans-unit>
        <trans-unit id="7bd1a1067be681c533911ac785b8d669ace8f27e" translate="yes" xml:space="preserve">
          <source>WINDOWS_STORE</source>
          <target state="translated">WINDOWS_STORE</target>
        </trans-unit>
        <trans-unit id="b05688bdb9367f3cbe59460cb3d921d250d0020e" translate="yes" xml:space="preserve">
          <source>WORKING_DIRECTORY</source>
          <target state="translated">WORKING_DIRECTORY</target>
        </trans-unit>
        <trans-unit id="f1c1c7f785be473663f6d68714550ed8b1c91028" translate="yes" xml:space="preserve">
          <source>WRAP_EXCLUDE</source>
          <target state="translated">WRAP_EXCLUDE</target>
        </trans-unit>
        <trans-unit id="b77e993de8edba5e6924c042eb6f9dd0737b56db" translate="yes" xml:space="preserve">
          <source>Warn about uninitialized values.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ff08be0de6e9337d7fc4f867329cffece90e73" translate="yes" xml:space="preserve">
          <source>Warn about unused variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e5cf3e7be1ac057ae0ea92f43ac11715a4403b7" translate="yes" xml:space="preserve">
          <source>Warning-free future-compatible code which works with CMake 2.8.7 onwards can be written by using the &lt;code&gt;LINK_PRIVATE&lt;/code&gt; and &lt;code&gt;LINK_PUBLIC&lt;/code&gt; keywords of &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-1-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b5af252510dd4044a5b2e94f629ce2d1691b6df" translate="yes" xml:space="preserve">
          <source>Was osgDB found?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06dbd1c62eff470d6ba170c68f0a69f9f6a7ac6b" translate="yes" xml:space="preserve">
          <source>Watch the CMake variable for change.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2fdeec2e3ddcf903eb4f64f7fec525b2b0c8d47" translate="yes" xml:space="preserve">
          <source>Watcom WMake</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f11906db711e938b46c4aad972c17c6f6e39e19" translate="yes" xml:space="preserve">
          <source>We assume &lt;code&gt;info.json&lt;/code&gt; is a plain (not &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-1-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt;) file that is listed in the target&amp;rsquo;s source. Therefore we do not need to add it to &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09e378cf02fbc0b1213cb3f84c7ce8dc96297433" translate="yes" xml:space="preserve">
          <source>We do not recommend using GLOB to collect a list of source files from your source tree. If no CMakeLists.txt file changes when a source is added or removed then the generated build system cannot know when to ask CMake to regenerate. The &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; flag may not work reliably on all generators, or if a new generator is added in the future that cannot support it, projects using it will be stuck. Even if &lt;code&gt;CONFIGURE_DEPENDS&lt;/code&gt; works reliably, there is still a cost to perform the check on every rebuild.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="444bb8e0fab48ec0f1c17f84c48e4ed31df59d03" translate="yes" xml:space="preserve">
          <source>We want the &lt;code&gt;moc&lt;/code&gt; file of &lt;code&gt;complex_class.hpp&lt;/code&gt; to depend on &lt;code&gt;meta.json&lt;/code&gt;. So we add a filter to &lt;a href=&quot;../variable/cmake_automoc_depend_filters#variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-2-variable:CMAKE_AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;CMAKE_AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec5c5830735352e9a9b941d14f5e04122881195" translate="yes" xml:space="preserve">
          <source>We will describe how to create a simple find module for a library &lt;code&gt;Foo&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dae3336f51c177e35ea38732ae4fad6af7cf5d33" translate="yes" xml:space="preserve">
          <source>Welcome file to be embedded in the installer. It welcomes users to this installer. Typically used in the graphical installers on Windows and Mac OS X.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="968e5dce393024a58e8b6f74efab81d97daec9c4" translate="yes" xml:space="preserve">
          <source>What CMake generator should be used if the project is a CMake project. Defaults to the value of &lt;a href=&quot;../variable/cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt;. Few users will want to change this setting.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6be53bd7410f5e5c60c6d556a8ff49ef4cb5ec1d" translate="yes" xml:space="preserve">
          <source>What comes after the import library name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29c14cd3b665c5bf6685c33ed478e0579999208" translate="yes" xml:space="preserve">
          <source>What comes after the target name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d102d6db5c4d0b0e0d55c37557771ef79b7f078e" translate="yes" xml:space="preserve">
          <source>What comes before the import library name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="062fc15a674883d530ecf519d5b2875bf1e4e20d" translate="yes" xml:space="preserve">
          <source>What comes before the library name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ce5d33b996789615080dd294900d7ca2879bb6b" translate="yes" xml:space="preserve">
          <source>What programming language is the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2c49a5b4fde72c72cb6e18a12a7f17e11001cc" translate="yes" xml:space="preserve">
          <source>What to do if my project finds a different version of DCMTK?</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1d15c1b66b849a8c73b7d0c8bbe32766174561e" translate="yes" xml:space="preserve">
          <source>What type of dependency has the using project on that package. Default is &lt;code&gt;OPTIONAL&lt;/code&gt;. In this case it is a package which can be used by the project when available at buildtime, but it also work without. &lt;code&gt;RECOMMENDED&lt;/code&gt; is similar to &lt;code&gt;OPTIONAL&lt;/code&gt;, i.e. the project will build if the package is not present, but the functionality of the resulting binaries will be severely limited. If a &lt;code&gt;REQUIRED&lt;/code&gt; package is not available at buildtime, the project may not even build. This can be combined with the &lt;code&gt;FATAL_ON_MISSING_REQUIRED_PACKAGES&lt;/code&gt; argument for &lt;code&gt;feature_summary()&lt;/code&gt;. Last, a &lt;code&gt;RUNTIME&lt;/code&gt; package is a package which is actually not used at all during the build, but which is required for actually running the resulting binaries. So if such a package is missing, the project can still be built, but it may not work later on. If &lt;code&gt;set_package_properties()&lt;/code&gt; is called multiple times for the same package with different TYPEs, the &lt;code&gt;TYPE&lt;/code&gt; is only changed to higher TYPEs (&lt;code&gt;RUNTIME &amp;lt; OPTIONAL &amp;lt; RECOMMENDED &amp;lt; REQUIRED&lt;/code&gt;), lower TYPEs are ignored. The &lt;code&gt;TYPE&lt;/code&gt; property is project-specific, so it cannot be set by the Find-module, but must be set in the project. Type accepted can be changed by setting the &lt;a href=&quot;#variable:FeatureSummary_PKG_TYPES&quot; id=&quot;index-3-variable:FeatureSummary_PKG_TYPES&quot;&gt;&lt;code&gt;FeatureSummary_PKG_TYPES&lt;/code&gt;&lt;/a&gt; global property.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5078d04669c0f21db62b40171926730815cae9" translate="yes" xml:space="preserve">
          <source>What version number is this target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac58e6f10237f7419dcc002116f2a3452c4ab39" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt;&lt;/a&gt; is enabled, a custom target &lt;code&gt;autorcc&lt;/code&gt; is generated. This target depends on all &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-0-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; generated &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_arcc_&amp;lt;QRC&amp;gt;&lt;/code&gt; targets in the project. By building the global &lt;code&gt;autorcc&lt;/code&gt; target, all &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt; files in the project will be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="609cda4b702cef9fc55594f0624cefef9973dbf1" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; and &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; is set to &lt;code&gt;armeabi-v7a&lt;/code&gt; set &lt;code&gt;CMAKE_ANDROID_ARM_NEON&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; to target ARM NEON devices.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3400d37f5bc1ad4d363f8bde79f30c5754a30d7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; and &lt;a href=&quot;cmake_android_arch_abi#variable:CMAKE_ANDROID_ARCH_ABI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_ARCH_ABI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_ARCH_ABI&lt;/code&gt;&lt;/a&gt; is set to one of the &lt;code&gt;armeabi&lt;/code&gt; architectures, set &lt;code&gt;CMAKE_ANDROID_ARM_MODE&lt;/code&gt; to &lt;code&gt;ON&lt;/code&gt; to target 32-bit ARM processors (&lt;code&gt;-marm&lt;/code&gt;). Otherwise, the default is to target the 16-bit Thumb processors (&lt;code&gt;-mthumb&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8e8469fa8097dccbf10f318328bf633776e669a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; this variable contains the absolute path prefixing the toolchain GNU compiler and its binutils.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14d2248f4ab5b17c082477fec6b28cf622fc0e4a" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; this variable contains the host platform suffix of the toolchain GNU compiler and its binutils.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912edf3e6a48a7cc458b9c7267a4a2f85d74790d" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt; this variable contains the toolchain binutils machine name (e.g. &lt;code&gt;gcc -dumpmachine&lt;/code&gt;). The binutils typically have a &lt;code&gt;&amp;lt;machine&amp;gt;-&lt;/code&gt; prefix on their name.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc247f0561a4c147612e0bb30138b90cd8613323" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android&quot;&gt;Cross Compiling for Android&lt;/a&gt;, this variable specifies the target architecture and ABI to be used. Valid values are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55da4ec3f10c2f11cf6f6e8c4bf644091983ddf7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-a-standalone-toolchain&quot;&gt;Cross Compiling for Android with a Standalone Toolchain&lt;/a&gt;, this variable holds the absolute path to the root directory of the toolchain. The specified directory must contain a &lt;code&gt;sysroot&lt;/code&gt; subdirectory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0636b5c728332ef23123a7ac768c802f3205eb58" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this property sets the Android target API version (e.g. &lt;code&gt;15&lt;/code&gt;). The version number must be a positive decimal integer. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_android_api#variable:CMAKE_ANDROID_API&quot; id=&quot;index-0-variable:CMAKE_ANDROID_API&quot;&gt;&lt;code&gt;CMAKE_ANDROID_API&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e25abdda308d913d5efff81db6503cb91c7ba08" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this property sets the Android target architecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9befa485f7ebf18c2ae84092dc78fc363e0ea447" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this property specifies the type of STL support for the project. This is a string property that could set to the one of the following values:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a68fb2aae894aa288773e9d32d922febd56e0d8c" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this property specifies whether to build an executable as an application package on Android.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="076fda0013f852981a7815e10e3bd97af4729b96" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this variable may be set to specify the default value for the &lt;a href=&quot;../prop_tgt/android_api#prop_tgt:ANDROID_API&quot; id=&quot;index-0-prop_tgt:ANDROID_API&quot;&gt;&lt;code&gt;ANDROID_API&lt;/code&gt;&lt;/a&gt; target property. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04ebd6cfbe98d36d6b545f3853af03a0c3cd5cd7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this variable may be set to specify the default value for the &lt;a href=&quot;../prop_tgt/android_arch#prop_tgt:ANDROID_ARCH&quot; id=&quot;index-0-prop_tgt:ANDROID_ARCH&quot;&gt;&lt;code&gt;ANDROID_ARCH&lt;/code&gt;&lt;/a&gt; target property. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6592c01ed0e92fb09de0808ab36420b001b0652" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-nvidia-nsight-tegra-visual-studio-edition&quot;&gt;Cross Compiling for Android with NVIDIA Nsight Tegra Visual Studio Edition&lt;/a&gt;, this variable may be set to specify the default value for the &lt;a href=&quot;../prop_tgt/android_stl_type#prop_tgt:ANDROID_STL_TYPE&quot; id=&quot;index-0-prop_tgt:ANDROID_STL_TYPE&quot;&gt;&lt;code&gt;ANDROID_STL_TYPE&lt;/code&gt;&lt;/a&gt; target property. See that target property for additional information.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfd3700294fabf996e7a6946c39cdc98958c7832" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable holds the absolute path to the root directory of the NDK. The directory must contain a &lt;code&gt;platforms&lt;/code&gt; subdirectory holding the &lt;code&gt;android-&amp;lt;api&amp;gt;&lt;/code&gt; directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1d5a53b16ad89cefd71d674672aa7668325cb7" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable may be set to specify the STL variant to be used. The value may be one of:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b016e51dfd5e4b7c1d8a2a7c619e86fc6bd3ad0b" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable may be set to specify the version of the toolchain to be used as the compiler. The variable must be set to one of these forms:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2587023935e7a8ce42e4954eb96ee99cc390db0" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable may be set to specify whether to use the deprecated per-api-level headers instead of the unified headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e00e3387e9a6ffbcd0b9a6a86f9674065ce9b3ff" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-for-android-with-the-ndk&quot;&gt;Cross Compiling for Android with the NDK&lt;/a&gt;, this variable provides the NDK&amp;rsquo;s &amp;ldquo;host tag&amp;rdquo; used to construct the path to prebuilt toolchains that run on the host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c9c6f9c3f95451ed03f97d7d43669a49faa8331" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;cmake_global_autogen_target#variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET&lt;/code&gt;&lt;/a&gt; is enabled, a global custom target named &lt;code&gt;autogen&lt;/code&gt; is created. &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTOGEN_TARGET_NAME&lt;/code&gt;&lt;/a&gt; allows to set a different name for that target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00aa00fb98a46f8e22b3398813543ce2793ac815" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;cmake_global_autorcc_target#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt;&lt;/a&gt; is enabled, a custom target &lt;code&gt;autogen&lt;/code&gt; is generated. This target depends on all &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-0-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-0-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; generated &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt; targets in the project. By building the global &lt;code&gt;autogen&lt;/code&gt; target, all &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-1-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; files in the project will be generated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80dfbe5f1caf20685486a25d27470557a7f1c6f5" translate="yes" xml:space="preserve">
          <source>When &lt;a href=&quot;cmake_global_autorcc_target#variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET&lt;/code&gt;&lt;/a&gt; is enabled, a global custom target named &lt;code&gt;autorcc&lt;/code&gt; is created. &lt;a href=&quot;#variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot; id=&quot;index-0-variable:CMAKE_GLOBAL_AUTORCC_TARGET_NAME&quot;&gt;&lt;code&gt;CMAKE_GLOBAL_AUTORCC_TARGET_NAME&lt;/code&gt;&lt;/a&gt; allows to set a different name for that target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ded6e397c3056ef32633200059b244dc77e96a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;CMAKE_NINJA_OUTPUT_PATH_PREFIX&lt;/code&gt; is set, the project generated by CMake cannot be used as a standalone project. No default targets are specified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9c1bbfb43690cb35a97c9032e14608b14ea30a" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;NAMELINK_ONLY&lt;/code&gt; is given, either &lt;code&gt;NAMELINK_COMPONENT&lt;/code&gt; or &lt;code&gt;COMPONENT&lt;/code&gt; may be used to specify the installation component of the namelink, but &lt;code&gt;COMPONENT&lt;/code&gt; should generally be preferred.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca5c8eea584a64f26e79b5e082fcaf4951ca8a56" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;ctest&lt;/code&gt; is run as a &lt;a href=&quot;#dashboard-client&quot;&gt;Dashboard Client&lt;/a&gt; this sets the &lt;code&gt;TestLoad&lt;/code&gt; option of the &lt;a href=&quot;#ctest-test-step&quot;&gt;CTest Test Step&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8860af8d81e79e01d4bb55aa46d4a8954068b8f1" translate="yes" xml:space="preserve">
          <source>When CMake is first run in an empty build tree, it creates a &lt;code&gt;CMakeCache.txt&lt;/code&gt; file and populates it with customizable settings for the project. This option may be used to specify a file from which to load cache entries before the first pass through the project&amp;rsquo;s CMake listfiles. The loaded entries take priority over the project&amp;rsquo;s default values. The given file should be a CMake script containing &lt;a href=&quot;../command/set#command:set&quot; id=&quot;index-0-command:set&quot;&gt;&lt;code&gt;set()&lt;/code&gt;&lt;/a&gt; commands that use the &lt;code&gt;CACHE&lt;/code&gt; option, not a cache-format file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3404ccab1254d7e6e57ce8d0dca2136757381a" translate="yes" xml:space="preserve">
          <source>When CMake is first run in an empty build tree, it creates a &lt;code&gt;CMakeCache.txt&lt;/code&gt; file and populates it with customizable settings for the project. This option may be used to specify a setting that takes priority over the project&amp;rsquo;s default value. The option may be repeated for as many &lt;code&gt;CACHE&lt;/code&gt; entries as desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc0587b738eafa7dc2f7944a35f8fa8aa111b74b" translate="yes" xml:space="preserve">
          <source>When CMake processes a project source tree, the entry point is a source file called &lt;code&gt;CMakeLists.txt&lt;/code&gt; in the top-level source directory. This file may contain the entire build specification or use the &lt;a href=&quot;../command/add_subdirectory#command:add_subdirectory&quot; id=&quot;index-0-command:add_subdirectory&quot;&gt;&lt;code&gt;add_subdirectory()&lt;/code&gt;&lt;/a&gt; command to add subdirectories to the build. Each subdirectory added by the command must also contain a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file as the entry point to that directory. For each source directory whose &lt;code&gt;CMakeLists.txt&lt;/code&gt; file is processed CMake generates a corresponding directory in the build tree to act as the default working and output directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9674a45c12f859fd162b77bd177884394e90b6" translate="yes" xml:space="preserve">
          <source>When CMake processes the &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, it will download and unpack the tarball into &lt;code&gt;_deps/mycompany_toolchains-src&lt;/code&gt; relative to the build directory. The &lt;a href=&quot;../variable/cmake_toolchain_file#variable:CMAKE_TOOLCHAIN_FILE&quot; id=&quot;index-0-variable:CMAKE_TOOLCHAIN_FILE&quot;&gt;&lt;code&gt;CMAKE_TOOLCHAIN_FILE&lt;/code&gt;&lt;/a&gt; variable is not used until the &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-1-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; command is reached, at which point CMake looks for the named toolchain file relative to the build directory. Because the tarball has already been downloaded and unpacked by then, the toolchain file will be in place, even the very first time that &lt;code&gt;cmake&lt;/code&gt; is run in the build directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87f0c566bdbebb1f031e09aa21de8d5059345882" translate="yes" xml:space="preserve">
          <source>When CTest is asked to execute only a subset of tests (e.g. by the use of regular expressions or when run with the &lt;code&gt;--rerun-failed&lt;/code&gt; command line option), it will automatically add any setup or cleanup tests for fixtures required by any of the tests that are in the execution set. This behavior can be overridden with the &lt;code&gt;-FS&lt;/code&gt;, &lt;code&gt;-FC&lt;/code&gt; and &lt;code&gt;-FA&lt;/code&gt; command line options to &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt; if desired.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b19eb214593d687c3d2f50181c8abfc8703ecfa" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;&amp;lt;min&amp;gt;&lt;/code&gt; version higher than 2.4 is specified the command implicitly invokes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72ac0a01779d9f77ed0e9c7e1175dcb93400121" translate="yes" xml:space="preserve">
          <source>When a &lt;code&gt;COMPONENT&lt;/code&gt; option is given, the listed &lt;code&gt;&amp;lt;component&amp;gt;&lt;/code&gt; implicitly depends on all components mentioned in the export set. The exported &lt;code&gt;&amp;lt;name&amp;gt;.cmake&lt;/code&gt; file will require each of the exported components to be present in order for dependent projects to build properly. For example, a project may define components &lt;code&gt;Runtime&lt;/code&gt; and &lt;code&gt;Development&lt;/code&gt;, with shared libraries going into the &lt;code&gt;Runtime&lt;/code&gt; component and static libraries and headers going into the &lt;code&gt;Development&lt;/code&gt; component. The export set would also typically be part of the &lt;code&gt;Development&lt;/code&gt; component, but it would export targets from both the &lt;code&gt;Runtime&lt;/code&gt; and &lt;code&gt;Development&lt;/code&gt; components. Therefore, the &lt;code&gt;Runtime&lt;/code&gt; component would need to be installed if the &lt;code&gt;Development&lt;/code&gt; component was installed, but not vice versa. If the &lt;code&gt;Development&lt;/code&gt; component was installed without the &lt;code&gt;Runtime&lt;/code&gt; component, dependent projects that try to link against it would have build errors. Package managers, such as APT and RPM, typically handle this by listing the &lt;code&gt;Runtime&lt;/code&gt; component as a dependency of the &lt;code&gt;Development&lt;/code&gt; component in the package metadata, ensuring that the library is always installed if the headers and CMake export file are present.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6596a4d31d10beecbbb7f80df83983cacca7017e" translate="yes" xml:space="preserve">
          <source>When a custom fetch script fails to fetch the requested content, it must set this variable to a short one-line message describing the reason for failure.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583e2f49cbfecaef4b19210f1f9e8a8f4813be38" translate="yes" xml:space="preserve">
          <source>When a custom fetch script is loaded, this variable is set to the full path to a file in which the script must store the fetched content. The name of the file is unspecified and should not be interpreted in any way.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85d7e50258c9f83a792d37602fbde8919ef3c827" translate="yes" xml:space="preserve">
          <source>When a custom fetch script is loaded, this variable is set to the location part of the URL, which will contain the substituted hash algorithm name and content hash value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed6d727c38fac18f2fe0e602011c2a7a9b948b0f" translate="yes" xml:space="preserve">
          <source>When a data file must be fetched from one of the URL templates specified in the &lt;code&gt;ExternalData_URL_TEMPLATES&lt;/code&gt; variable, it is normally downloaded using the &lt;a href=&quot;../command/file#command:file&quot; id=&quot;index-0-command:file&quot;&gt;&lt;code&gt;file(DOWNLOAD)&lt;/code&gt;&lt;/a&gt; command. One may specify usage of a custom fetch script by using a URL template of the form &lt;code&gt;ExternalDataCustomScript://&amp;lt;key&amp;gt;/&amp;lt;loc&amp;gt;&lt;/code&gt;. The &lt;code&gt;&amp;lt;key&amp;gt;&lt;/code&gt; must be a C identifier, and the &lt;code&gt;&amp;lt;loc&amp;gt;&lt;/code&gt; must contain the &lt;code&gt;%(algo)&lt;/code&gt; and &lt;code&gt;%(hash)&lt;/code&gt; placeholders. A variable corresponding to the key, &lt;code&gt;ExternalData_CUSTOM_SCRIPT_&amp;lt;key&amp;gt;&lt;/code&gt;, must be set to the full path to a &lt;code&gt;.cmake&lt;/code&gt; script file. The script will be included to perform the actual fetch, and provided with the following variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74599bbf09fc07f2bd8a66ebc1e5fb0ac9bfe43f" translate="yes" xml:space="preserve">
          <source>When a generated file created by an &lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-1-command:add_custom_command&quot;&gt;&lt;code&gt;add_custom_command()&lt;/code&gt;&lt;/a&gt; command is explicitly listed as a source file for any target in the same directory scope (which usually means the same &lt;code&gt;CMakeLists.txt&lt;/code&gt; file), CMake will automatically create a dependency to make sure the file is generated before building that target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20d4424d1de54a4f853967c6e91fc1f27ce6f44f" translate="yes" xml:space="preserve">
          <source>When a language is enabled, CMake finds a compiler for that language, and determines some information, such as the vendor and version of the compiler, the target architecture and bitwidth, the location of corresponding utilities etc.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="615488c5ac59f20c62bf096a784ae812627de616" translate="yes" xml:space="preserve">
          <source>When a macro is invoked, the commands recorded in the macro are first modified by replacing formal parameters (&lt;code&gt;${arg1}&lt;/code&gt;, &amp;hellip;) with the arguments passed, and then invoked as normal commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b096ae7e59f57e66f3ad3b794300137ccd5505d5" translate="yes" xml:space="preserve">
          <source>When a non-executable target is created its &lt;code&gt;&amp;lt;CONFIG&amp;gt;_POSTFIX&lt;/code&gt; target property is initialized with the value of this variable if it is set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="001bf972053b13b750af47d01e450d7b79932d60" translate="yes" xml:space="preserve">
          <source>When a regular expression match is used, CMake fills in &lt;code&gt;CMAKE_MATCH_&amp;lt;n&amp;gt;&lt;/code&gt; variables with the match contents. The &lt;a href=&quot;cmake_match_count#variable:CMAKE_MATCH_COUNT&quot; id=&quot;index-0-variable:CMAKE_MATCH_COUNT&quot;&gt;&lt;code&gt;CMAKE_MATCH_COUNT&lt;/code&gt;&lt;/a&gt; variable holds the number of match expressions when these are filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a4859977851aa124396be13f7db16f7d724ed49" translate="yes" xml:space="preserve">
          <source>When a regular expression match is used, CMake fills in &lt;code&gt;CMAKE_MATCH_&amp;lt;n&amp;gt;&lt;/code&gt; variables with the match contents. The &lt;code&gt;CMAKE_MATCH_COUNT&lt;/code&gt; variable holds the number of match expressions when these are filled.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f286b2a3d3db9e7dbb0b925f83ecae816559d603" translate="yes" xml:space="preserve">
          <source>When a third-party utility&amp;rsquo;s source is included in the distribution, this command specifies its location and name. The cache entry will not be set unless the &lt;code&gt;path_to_source&lt;/code&gt; and all listed files exist. It is assumed that the source tree of the utility will have been built before it is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efef651831d0c89e0e06ee258194ca555f40cf8c" translate="yes" xml:space="preserve">
          <source>When all items on the link line have known paths CMake does not check this policy so it has no effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ab4d54fe2b2e9ddabd51c2219586366209448e" translate="yes" xml:space="preserve">
          <source>When an ELF binary needs to have a different RPATH after installation than it does in the build tree, CMake uses a builtin editor to change the RPATH in the installed copy. If this variable is set to true then CMake will relink the binary before installation instead of using its builtin editor.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98bf2bbfc9dde90c98b9aff0501f98b0d5291293" translate="yes" xml:space="preserve">
          <source>When an intermediate file generated during the build is consumed by an expensive operation or a large tree of dependents, one may reduce the work needed for an incremental rebuild by updating the file timestamp only when its content changes. With this approach the generation rule must have a separate output file that is always updated with a new timestamp that is newer than any dependencies of the rule so that the build tool re-runs the rule only when the input changes. We refer to the separate output file as a rule&amp;rsquo;s &lt;em&gt;witness&lt;/em&gt; and the generated file as a rule&amp;rsquo;s &lt;em&gt;byproduct&lt;/em&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96e8ac00a59aae6e597f996c82d926c8279634f2" translate="yes" xml:space="preserve">
          <source>When both &lt;code&gt;-R&lt;/code&gt; and &lt;code&gt;-I&lt;/code&gt; are specified by default the intersection of tests are run. By specifying &lt;code&gt;-U&lt;/code&gt; the union of tests is run instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caf5ab3f43b2e5d467f95ccfef7ea0dbf101ea3b" translate="yes" xml:space="preserve">
          <source>When building the complete GNU system, the prefix will be empty and &lt;code&gt;/usr&lt;/code&gt; will be a symbolic link to &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce7f9e6f6104fb029845b666990e815128c927c7" translate="yes" xml:space="preserve">
          <source>When building the package, specify each &lt;code&gt;Foo_LIBRARY&lt;/code&gt; cache entry as just a library name, e.g. &lt;code&gt;-DFoo_LIBRARY=foo&lt;/code&gt;. This tells the corresponding find module to populate the &lt;code&gt;Foo_LIBRARIES&lt;/code&gt; with just &lt;code&gt;foo&lt;/code&gt; to ask the linker to search for the library instead of hard-coding a path.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28af2f0a0cbbb72a047bb9ee264228bc88e88601" translate="yes" xml:space="preserve">
          <source>When building with configuration &amp;lt;CONFIG&amp;gt; the value of this property is appended to the target file name built on disk. For non-executable targets, this property is initialized by the value of the variable CMAKE_&amp;lt;CONFIG&amp;gt;_POSTFIX if it is set when a target is created. This property is ignored on the Mac for Frameworks and App Bundles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54bef114e22da459ee1c1edc487c08812f78b637" translate="yes" xml:space="preserve">
          <source>When compiling with MSVC, if this cache variable is set the protobuf-default VS project build locations (vsprojects/Debug and vsprojects/Release or vsprojects/x64/Debug and vsprojects/x64/Release) will be searched for libraries and binaries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0115c957af95fda1678b5a5c1b3410d6b974d05" translate="yes" xml:space="preserve">
          <source>When configuring for any of the embedded platforms, one can target either real devices or the simulator. Both have their own separate SDK, but CMake only supports specifying a single SDK for the configuration phase. This means the developer must select one or the other at configuration time. When using the &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Xcode.html#generator:Xcode&quot; id=&quot;index-2-generator:Xcode&quot;&gt;&lt;code&gt;Xcode&lt;/code&gt;&lt;/a&gt; generator, this is less of a limitation because Xcode still allows you to build for either a device or a simulator, even though configuration was only performed for one of the two. From within the Xcode IDE, builds are performed for the selected &amp;ldquo;destination&amp;rdquo; platform. When building from the command line, the desired sdk can be specified directly by passing a &lt;code&gt;-sdk&lt;/code&gt; option to the underlying build tool (&lt;code&gt;xcodebuild&lt;/code&gt;). For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e309a9e959792bf4010c06e442e3476f6e52eea" translate="yes" xml:space="preserve">
          <source>When connecting to the server (via named pipe or by starting it in &lt;code&gt;--debug&lt;/code&gt; mode), the server will reply with a hello message:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a046790342a34a60f08302184c44b2a951beeef9" translate="yes" xml:space="preserve">
          <source>When cross compiling CMake will print a warning if a &lt;code&gt;utility_source()&lt;/code&gt; command is executed, because in many cases it is used to build an executable which is executed later on. This doesn&amp;rsquo;t work when cross compiling, since the executable can run only on their target platform. So in this case the cache entry has to be adjusted manually so it points to an executable which is runnable on the build host.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ceec8028ab748f8ac89587b50ba389337247e708" translate="yes" xml:space="preserve">
          <source>When cross compiling, the executable compiled in the first step usually cannot be run on the build host. The &lt;code&gt;try_run&lt;/code&gt; command checks the &lt;a href=&quot;../variable/cmake_crosscompiling#variable:CMAKE_CROSSCOMPILING&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING&lt;/code&gt;&lt;/a&gt; variable to detect whether CMake is in cross-compiling mode. If that is the case, it will still try to compile the executable, but it will not try to run the executable unless the &lt;a href=&quot;../variable/cmake_crosscompiling_emulator#variable:CMAKE_CROSSCOMPILING_EMULATOR&quot; id=&quot;index-0-variable:CMAKE_CROSSCOMPILING_EMULATOR&quot;&gt;&lt;code&gt;CMAKE_CROSSCOMPILING_EMULATOR&lt;/code&gt;&lt;/a&gt; variable is set. Instead it will create cache variables which must be filled by the user or by presetting them in some CMake script file to the values the executable would have produced if it had been run on its actual target platform. These cache entries are:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bf8ce83856e4d8f29c59a7fa89a50971a9e8454" translate="yes" xml:space="preserve">
          <source>When done, &lt;code&gt;cmake_parse_arguments&lt;/code&gt; will consider for each of the keywords listed in &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;one_value_keywords&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;multi_value_keywords&amp;gt;&lt;/code&gt; a variable composed of the given &lt;code&gt;&amp;lt;prefix&amp;gt;&lt;/code&gt; followed by &lt;code&gt;&quot;_&quot;&lt;/code&gt; and the name of the respective keyword. These variables will then hold the respective value from the argument list or be undefined if the associated option could not be found. For the &lt;code&gt;&amp;lt;options&amp;gt;&lt;/code&gt; keywords, these will always be defined, to &lt;code&gt;TRUE&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt;, whether the option is in the argument list or not.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f44852ee349e029853fcf8a70a7f133f2e8535d" translate="yes" xml:space="preserve">
          <source>When enabled, stdout and stderr will be merged for any step whose output is being logged to files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97faa7a816fc322400499d72cdbc061691f07a3c" translate="yes" xml:space="preserve">
          <source>When enabled, the generated Makefiles will produce colored output. Default is &lt;code&gt;ON&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1223de0cc2b1a3def3be114be75e33bf28b8825" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the build step is logged to files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ecc610e6d4e97b12f853b0545f51540134dc839" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the configure step is logged to files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3b97689b37f61059e8a8cc63d0fe7973e3662e" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the download step is logged to files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f10d72bfb311d72d60b07963b126331c805ced9" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the install step is logged to files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09d6f58b28848b18d546cafc709edf69137b55be" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the patch step is logged to files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3859f1ede5a184a7c56aad92ebaff4c60fa12dc" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the test step is logged to files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c9a3d996e7cd9328abc1f6f4126f243ff9c7202" translate="yes" xml:space="preserve">
          <source>When enabled, the output of the update step is logged to files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4e8b24ea38fb8cd17e5e40501bd401b7e05ab97" translate="yes" xml:space="preserve">
          <source>When enabled, this option causes the update step to be skipped. It does not, however, prevent the download step. The update step can still be added as a step target (see &lt;a href=&quot;#command:externalproject_add_steptargets&quot; id=&quot;index-0-command:externalproject_add_steptargets&quot;&gt;&lt;code&gt;ExternalProject_Add_StepTargets()&lt;/code&gt;&lt;/a&gt;) and called manually. This is useful if you want to allow developers to build the project when disconnected from the network (the network may still be needed for the download step though).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2c4303ef0ef40f582d9a84f8b638dae395fddb9" translate="yes" xml:space="preserve">
          <source>When enabled, this option excludes the external project from the default ALL target of the main build.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83dbb8cc273305f6b371f2325df01474f12d3995" translate="yes" xml:space="preserve">
          <source>When enabled, this option instructs the &lt;code&gt;git clone&lt;/code&gt; operation to report its progress by passing it the &lt;code&gt;--progress&lt;/code&gt; option. Without this option, the clone step for large projects may appear to make the build stall, since nothing will be logged until the clone operation finishes. While this option can be used to provide progress to prevent the appearance of the build having stalled, it may also make the build overly noisy if lots of external projects are used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f408b3a839d0804ff428697397b1f37fbc139fd" translate="yes" xml:space="preserve">
          <source>When enabled, this option specifies that the custom step should always be run (i.e. that it is always considered out of date).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5098e5fcac72539b6e2155b8118abfd824b16c2b" translate="yes" xml:space="preserve">
          <source>When enabled, this option specifies that the external project&amp;rsquo;s main target does not depend on the custom step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe0f19eac78825a117efdc7baf8db4824149cb47" translate="yes" xml:space="preserve">
          <source>When evaluating &lt;a href=&quot;#variable-references&quot;&gt;Variable References&lt;/a&gt;, CMake first searches the function call stack, if any, for a binding and then falls back to the binding in the current directory scope, if any. If a &amp;ldquo;set&amp;rdquo; binding is found, its value is used. If an &amp;ldquo;unset&amp;rdquo; binding is found, or no binding is found, CMake then searches for a cache entry. If a cache entry is found, its value is used. Otherwise, the variable reference evaluates to an empty string. The &lt;code&gt;$CACHE{VAR}&lt;/code&gt; syntax can be used to do direct cache entry lookups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8429a2ff756cfe546a69a48beed4f520bc38a126" translate="yes" xml:space="preserve">
          <source>When evaluating &lt;a href=&quot;../manual/cmake-language.7#variable-references&quot;&gt;Variable References&lt;/a&gt; of the form &lt;code&gt;${VAR}&lt;/code&gt;, CMake first searches for a normal variable with that name, and if not found CMake will search for a cache entry with that name. The &lt;code&gt;$CACHE{VAR}&lt;/code&gt; syntax can be used to do direct cache lookup and ignore any existing normal variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d01259ed7ddb1a96d04f16bc6f01cdde90b12ae" translate="yes" xml:space="preserve">
          <source>When generating for &lt;a href=&quot;https://cmake.org/cmake/help/v3.15/generator/Visual%20Studio%209%202008.html#generator:Visual%20Studio%209%202008&quot; id=&quot;index-0-generator:Visual Studio 9 2008&quot;&gt;&lt;code&gt;Visual Studio 9 2008&lt;/code&gt;&lt;/a&gt; or greater with the Intel Fortran plugin installed, this specifies the &lt;code&gt;.vfproj&lt;/code&gt; project file format version. This is intended for internal use by CMake and should not be used by project code.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33943b40e8491bf8533f537d21cd2ff7e35ddc06" translate="yes" xml:space="preserve">
          <source>When invoked, this &lt;code&gt;cmake --build&lt;/code&gt; command line will launch the underlying build system tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db429da91507a09832395971dfb640aa2dd8249a" translate="yes" xml:space="preserve">
          <source>When language &lt;code&gt;&amp;lt;LANG&amp;gt;&lt;/code&gt; is enabled by &lt;a href=&quot;../command/project#command:project&quot; id=&quot;index-0-command:project&quot;&gt;&lt;code&gt;project()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/enable_language#command:enable_language&quot; id=&quot;index-0-command:enable_language&quot;&gt;&lt;code&gt;enable_language()&lt;/code&gt;&lt;/a&gt; this variable is defined to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fab894ea5bccc12036d78f550dead6caddc3120" translate="yes" xml:space="preserve">
          <source>When linking a shared library or executable that exports symbols using GNU tools on Windows (MinGW/MSYS) with Visual Studio installed convert the import library (&lt;code&gt;.dll.a&lt;/code&gt;) from GNU to MS format (&lt;code&gt;.lib&lt;/code&gt;). Both import libraries will be installed by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; and exported by &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-1-command:install&quot;&gt;&lt;code&gt;install(EXPORT)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../command/export#command:export&quot; id=&quot;index-0-command:export&quot;&gt;&lt;code&gt;export()&lt;/code&gt;&lt;/a&gt; to be linked by applications with either GNU- or MS-compatible tools.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3397e53fd72d361ff0b0d6eae616787fb9f4081" translate="yes" xml:space="preserve">
          <source>When linking to a &lt;code&gt;STATIC&lt;/code&gt; library target with cyclic dependencies the linker may need to scan more than once through the archives in the strongly connected component of the dependency graph. CMake by default constructs the link line so that the linker will scan through the component at least twice. This property specifies the minimum number of scans if it is larger than the default. CMake uses the largest value specified by any target in a component.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6773c0c14ac5ac20cb3c38b7753ebfb64a2de00" translate="yes" xml:space="preserve">
          <source>When loading a find module or package configuration file &lt;code&gt;find_package&lt;/code&gt; defines variables to provide information about the call arguments (and restores their original state before returning):</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ba2cad2908a24cd41da5de2796aa5418fe88e09" translate="yes" xml:space="preserve">
          <source>When more than one value is given to the &lt;code&gt;NAMES&lt;/code&gt; option this command by default will consider one name at a time and search every directory for it. The &lt;code&gt;NAMES_PER_DIR&lt;/code&gt; option tells this command to consider one directory at a time and search for all names in it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bac38a3472c30f80c749b870193349dc3a4c2d" translate="yes" xml:space="preserve">
          <source>When no &lt;code&gt;CONFIGURE_COMMAND&lt;/code&gt; option is specified, the configure step assumes the external project has a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file at the top of its source tree (i.e. in &lt;code&gt;SOURCE_DIR&lt;/code&gt;). The &lt;code&gt;SOURCE_SUBDIR&lt;/code&gt; option can be used to point to an alternative directory within the source tree to use as the top of the CMake source tree instead. This must be a relative path and it will be interpreted as being relative to &lt;code&gt;SOURCE_DIR&lt;/code&gt;. When &lt;code&gt;BUILD_IN_SOURCE 1&lt;/code&gt; is specified, the &lt;code&gt;BUILD_COMMAND&lt;/code&gt; is used to point to an alternative directory within the source tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eddb51f31a8b68dcb58d948d2a9d661640604af" translate="yes" xml:space="preserve">
          <source>When preparing a package CPack installs the item under the so-called top level directory. The purpose of is to include (set to &lt;code&gt;1&lt;/code&gt; or &lt;code&gt;ON&lt;/code&gt; or &lt;code&gt;TRUE&lt;/code&gt;) the top level directory in the package or not (set to &lt;code&gt;0&lt;/code&gt; or &lt;code&gt;OFF&lt;/code&gt; or &lt;code&gt;FALSE&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dec1df06a3840554c5ed2d8190ab881e151cce1" translate="yes" xml:space="preserve">
          <source>When provided, only the listed files will be scanned for test cases. If this option is not given, the &lt;a href=&quot;../prop_tgt/sources#prop_tgt:SOURCES&quot; id=&quot;index-0-prop_tgt:SOURCES&quot;&gt;&lt;code&gt;SOURCES&lt;/code&gt;&lt;/a&gt; property of the specified &lt;code&gt;target&lt;/code&gt; will be used to obtain the list of sources.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c149678260bd674f6161bb119d1a3e0cb53c809" translate="yes" xml:space="preserve">
          <source>When providing imported targets, these should be namespaced (hence the &lt;code&gt;Foo::&lt;/code&gt; prefix); CMake will recognize that values passed to &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; that contain &lt;code&gt;::&lt;/code&gt; in their name are supposed to be imported targets (rather than just library names), and will produce appropriate diagnostic messages if that target does not exist (see policy &lt;a href=&quot;../policy/cmp0028#policy:CMP0028&quot; id=&quot;index-0-policy:CMP0028&quot;&gt;&lt;code&gt;CMP0028&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a628aebc1e4efbbf7103d71f541fb77b12558c8b" translate="yes" xml:space="preserve">
          <source>When run in -P script mode, CMake sets the variables &lt;a href=&quot;#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-1-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; to the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729cb5de2434a67eebdabc9d1cba03519c5e654d" translate="yes" xml:space="preserve">
          <source>When run in -P script mode, CMake sets the variables &lt;a href=&quot;cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; to the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c913be503151c600c0053cee6470ea8c22544e12" translate="yes" xml:space="preserve">
          <source>When run in -P script mode, CMake sets the variables &lt;a href=&quot;cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_source_dir#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; to the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15b101598df52d4e520700254d07d467bdfa6994" translate="yes" xml:space="preserve">
          <source>When run in &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-1-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;&lt;code&gt;-P&lt;/code&gt; script mode, CMake sets this variable to the full path of the script file. When run to configure a &lt;code&gt;CMakeLists.txt&lt;/code&gt; file, this variable is not set.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b3329a89c1e52722948b6ddc53c3aa66a701b39" translate="yes" xml:space="preserve">
          <source>When run in &lt;a href=&quot;../manual/cmake.1#script-processing-mode&quot;&gt;-P&lt;/a&gt; script mode, CMake sets this variable to the first command line argument. It then also sets &lt;code&gt;CMAKE_ARGV1&lt;/code&gt;, &lt;code&gt;CMAKE_ARGV2&lt;/code&gt;, &amp;hellip; and so on, up to the number of command line arguments given. See also &lt;a href=&quot;cmake_argc#variable:CMAKE_ARGC&quot; id=&quot;index-0-variable:CMAKE_ARGC&quot;&gt;&lt;code&gt;CMAKE_ARGC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc4a06a5ef4368e650619c5831833000ecd3ed38" translate="yes" xml:space="preserve">
          <source>When run in &lt;a href=&quot;../manual/cmake.1#script-processing-mode&quot;&gt;-P&lt;/a&gt; script mode, CMake sets this variable to the number of command line arguments. See also &lt;a href=&quot;cmake_argv0#variable:CMAKE_ARGV0&quot; id=&quot;index-0-variable:CMAKE_ARGV0&quot;&gt;&lt;code&gt;CMAKE_ARGV0&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;1&lt;/code&gt;, &lt;code&gt;2&lt;/code&gt; &amp;hellip;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395dfc15ab7d0c15b90cedae2eacf9136fde2131" translate="yes" xml:space="preserve">
          <source>When run in &lt;code&gt;-P&lt;/code&gt; script mode, CMake sets the variables &lt;a href=&quot;cmake_binary_dir#variable:CMAKE_BINARY_DIR&quot; id=&quot;index-1-variable:CMAKE_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_BINARY_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#variable:CMAKE_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_SOURCE_DIR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;cmake_current_source_dir#variable:CMAKE_CURRENT_SOURCE_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_SOURCE_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_SOURCE_DIR&lt;/code&gt;&lt;/a&gt; to the current working directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea711ae8a7369a5b488b81e0d0b8913874da3b9" translate="yes" xml:space="preserve">
          <source>When running &lt;a href=&quot;../manual/cmake.1#manual:cmake(1)&quot; id=&quot;index-0-manual:cmake(1)&quot;&gt;&lt;code&gt;cmake(1)&lt;/code&gt;&lt;/a&gt;, this option can be enabled with the &lt;code&gt;-Wdeprecated&lt;/code&gt; option, or disabled with the &lt;code&gt;-Wno-deprecated&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6f8de8fda6cfffcd65c10a952263fe24913863" translate="yes" xml:space="preserve">
          <source>When running &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;, CMake searches for the strings listed in &lt;a href=&quot;#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt; in C++ source and header files. If any of the strings is found</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c45164861e10f10c84a2c8585494c027dc0994aa" translate="yes" xml:space="preserve">
          <source>When saving a failing test&amp;rsquo;s output, this is the maximum size, in bytes, that will be collected by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. Defaults to 307200 (300 KiB).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2e937561a13d3ba8c88d972d1f3fafeaac59cfe" translate="yes" xml:space="preserve">
          <source>When saving a passing test&amp;rsquo;s output, this is the maximum size, in bytes, that will be collected by the &lt;a href=&quot;../command/ctest_test#command:ctest_test&quot; id=&quot;index-0-command:ctest_test&quot;&gt;&lt;code&gt;ctest_test()&lt;/code&gt;&lt;/a&gt; command. Defaults to 1024 (1 KiB).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c80dd222b2b0afe44a389275546153ab2bbdd41" translate="yes" xml:space="preserve">
          <source>When searching for frameworks, if the file is specified as &lt;code&gt;A/b.h&lt;/code&gt;, then the framework search will look for &lt;code&gt;A.framework/Headers/b.h&lt;/code&gt;. If that is found the path will be set to the path to the framework. CMake will convert this to the correct &lt;code&gt;-F&lt;/code&gt; option to include the file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba0e46d6a50d1f5c56de012e346edbe9b6d22aee" translate="yes" xml:space="preserve">
          <source>When set this is used instead of &lt;a href=&quot;autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; for files generated by &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-1-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="982e9a681464423f19a76e6b963f469e9e81f4d3" translate="yes" xml:space="preserve">
          <source>When set this is used instead of &lt;a href=&quot;autogen_source_group#prop_gbl:AUTOGEN_SOURCE_GROUP&quot; id=&quot;index-0-prop_gbl:AUTOGEN_SOURCE_GROUP&quot;&gt;&lt;code&gt;AUTOGEN_SOURCE_GROUP&lt;/code&gt;&lt;/a&gt; for files generated by &lt;a href=&quot;../prop_tgt/autorcc#prop_tgt:AUTORCC&quot; id=&quot;index-1-prop_tgt:AUTORCC&quot;&gt;&lt;code&gt;AUTORCC&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c115f66314311ef67036c23c2581e4493fd8cdb" translate="yes" xml:space="preserve">
          <source>When set to &lt;code&gt;TRUE&lt;/code&gt; in a directory, the build system produced by the &lt;a href=&quot;../manual/cmake-generators.7#makefile-generators&quot;&gt;Makefile Generators&lt;/a&gt; is set up to only consider dependencies on source files that appear either in the source or in the binary directories. Changes to source files outside of these directories will not cause rebuilds.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d32c0511e81c0d84107db4abcdd18d639623d546" translate="yes" xml:space="preserve">
          <source>When specified, arguments of the &lt;code&gt;LINKER:&lt;/code&gt; prefix will be concatenated using this value as separator.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ebe6e47616a467b52988a55e1ee38b920fc052" translate="yes" xml:space="preserve">
          <source>When specifying index values, if &lt;code&gt;&amp;lt;element index&amp;gt;&lt;/code&gt; is 0 or greater, it is indexed from the beginning of the list, with 0 representing the first list element. If &lt;code&gt;&amp;lt;element index&amp;gt;&lt;/code&gt; is -1 or lesser, it is indexed from the end of the list, with -1 representing the last list element. Be careful when counting with negative indices: they do not start from 0. -0 is equivalent to 0, the first list element.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7d1a5e7a143228c62e9f544a9ded60180a5427e" translate="yes" xml:space="preserve">
          <source>When target dependencies are specified using &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, CMake will read this property from all target dependencies to determine the build properties of the consumer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d097c5b6934c281cdea7601f5be524c384c0a114" translate="yes" xml:space="preserve">
          <source>When target dependencies are specified using &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, CMake will read this property from all target dependencies to determine the sources of the consumer.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75a65b05b20258928b8651c34e10073121e7617" translate="yes" xml:space="preserve">
          <source>When target dependencies are specified using &lt;a href=&quot;../command/target_link_libraries#command:target_link_libraries&quot; id=&quot;index-0-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt;, CMake will read this property from all target dependencies to mark the same include directories as containing system headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5271b79b3cf50615ecef00ebb733d1df1363ed0" translate="yes" xml:space="preserve">
          <source>When targeting Windows 10 and above Visual Studio 2015 and above support specification of a target Windows version to select a corresponding SDK. The &lt;a href=&quot;cmake_system_version#variable:CMAKE_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable may be set to specify a version. Otherwise CMake computes a default version based on the Windows SDK versions available. The chosen Windows target version number is provided in &lt;code&gt;CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION&lt;/code&gt;. If no Windows 10 SDK is available this value will be empty.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374e7d28e82b0941e81071267b4059043789bf63" translate="yes" xml:space="preserve">
          <source>When test &lt;code&gt;MyTest&lt;/code&gt; runs the &lt;code&gt;DATA{MyInput.png}&lt;/code&gt; argument will be replaced by the full path to a real instance of the data file &lt;code&gt;MyInput.png&lt;/code&gt; on disk. If the source tree contains a content link such as &lt;code&gt;MyInput.png.md5&lt;/code&gt; then the &lt;code&gt;MyData&lt;/code&gt; target creates a real &lt;code&gt;MyInput.png&lt;/code&gt; in the build tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7845b4bf711121b4e262cde72e6cc7c2a99b3e96" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-8-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command finds a candidate package configuration file it looks next to it for a version file. The version file is loaded to test whether the package version is an acceptable match for the version requested. If the version file claims compatibility the configuration file is accepted. Otherwise it is ignored.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9971f8ee32a214acd471331a666825b8266672" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-9-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; command loads a version file it first sets the following variables:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a66b80bb1bc3e2af3868d7ebe2fe319362c99ab7" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../command/option#command:option&quot; id=&quot;index-7-command:option&quot;&gt;&lt;code&gt;option()&lt;/code&gt;&lt;/a&gt; command sees a normal variable of the given name:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61f98fc868046e3795f30078bcf9805cca368ab6" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../prop_test/processors#prop_test:PROCESSORS&quot; id=&quot;index-1-prop_test:PROCESSORS&quot;&gt;&lt;code&gt;PROCESSORS&lt;/code&gt;&lt;/a&gt; test property is set, CTest will display a weighted test timing result in label and subproject summaries. The time is reported with &lt;code&gt;sec*proc&lt;/code&gt; instead of just &lt;code&gt;sec&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7f39f3be1fdf72532dbe74f94ceabe856888de0" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;../prop_tgt/interface_include_directories#prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot; id=&quot;index-6-prop_tgt:INTERFACE_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of an &lt;a href=&quot;#imported-targets&quot;&gt;imported target&lt;/a&gt; is consumed, the entries in the property are treated as &lt;code&gt;SYSTEM&lt;/code&gt; include directories, as if they were listed in the &lt;a href=&quot;../prop_tgt/interface_system_include_directories#prop_tgt:INTERFACE_SYSTEM_INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INTERFACE_SYSTEM_INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INTERFACE_SYSTEM_INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt; of the dependency. This can result in omission of compiler warnings for headers found in those directories. This behavior for &lt;a href=&quot;#imported-targets&quot;&gt;Imported Targets&lt;/a&gt; may be controlled by setting the &lt;a href=&quot;../prop_tgt/no_system_from_imported#prop_tgt:NO_SYSTEM_FROM_IMPORTED&quot; id=&quot;index-0-prop_tgt:NO_SYSTEM_FROM_IMPORTED&quot;&gt;&lt;code&gt;NO_SYSTEM_FROM_IMPORTED&lt;/code&gt;&lt;/a&gt; target property on the &lt;em&gt;consumers&lt;/em&gt; of imported targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ad4b6542b11b88ccc55ee173173e573bc43d84" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-1-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable takes its default value then &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; is by default set to the same value as the &lt;a href=&quot;cmake_host_system_version#variable:CMAKE_HOST_SYSTEM_VERSION&quot; id=&quot;index-0-variable:CMAKE_HOST_SYSTEM_VERSION&quot;&gt;&lt;code&gt;CMAKE_HOST_SYSTEM_VERSION&lt;/code&gt;&lt;/a&gt; variable so that the build targets the host system version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360a6ad80f694cc8eea1eb4307ca4dc2d20c5856" translate="yes" xml:space="preserve">
          <source>When the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-2-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable is set explicitly to enable &lt;a href=&quot;../manual/cmake-toolchains.7#cross-compiling-toolchain&quot;&gt;cross compiling&lt;/a&gt; then the value of &lt;code&gt;CMAKE_SYSTEM_VERSION&lt;/code&gt; must also be set explicitly to specify the target system version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf4066c7d99750ea647587fe47ed7c6fcff6b7ae" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;--show-only=json-v1&lt;/code&gt; command line option is given, the test information is output in JSON format. Version 1.0 of the JSON object model is defined as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3573503f3dfd7c9b96126cad4b8703c04edf050" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;CUDA&lt;/code&gt; language has been enabled, this provides a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;semicolon-separated list&lt;/a&gt; of include directories provided by the CUDA Toolkit. The value may be useful for C++ source files to include CUDA headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="706d3e585302e47bf40625d8b7035bba222b2bf0" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;QUIET&lt;/code&gt; argument is given, no status messages will be printed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c55753c9fb7a8b882a41af0dd923e20644b99545" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;REQUIRED&lt;/code&gt; argument is given, the command will fail with an error if module(s) could not be found.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483f68ff3aecf47c6c3a5bed9fbf504993c80ff4" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;[version]&lt;/code&gt; argument is given Config mode will only find a version of the package that claims compatibility with the requested version (format is &lt;code&gt;major[.minor[.patch[.tweak]]]&lt;/code&gt;). If the &lt;code&gt;EXACT&lt;/code&gt; option is given only a version of the package claiming an exact match of the requested version may be found. CMake does not establish any convention for the meaning of version numbers. Package version numbers are checked by &amp;ldquo;version&amp;rdquo; files provided by the packages themselves. For a candidate package configuration file &lt;code&gt;&amp;lt;config-file&amp;gt;.cmake&lt;/code&gt; the corresponding version file is located next to it and named either &lt;code&gt;&amp;lt;config-file&amp;gt;-version.cmake&lt;/code&gt; or &lt;code&gt;&amp;lt;config-file&amp;gt;Version.cmake&lt;/code&gt;. If no such version file is available then the configuration file is assumed to not be compatible with any requested version. A basic version file containing generic version matching code can be created using the &lt;a href=&quot;../module/cmakepackageconfighelpers#module:CMakePackageConfigHelpers&quot; id=&quot;index-0-module:CMakePackageConfigHelpers&quot;&gt;&lt;code&gt;CMakePackageConfigHelpers&lt;/code&gt;&lt;/a&gt; module. When a version file is found it is loaded to check the requested version number. The version file is loaded in a nested scope in which the following variables have been defined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82ef581d059d8dbf02da3783a540cdd15be891b4" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;_autogen&lt;/code&gt; target doesn&amp;rsquo;t require all the origin target&amp;rsquo;s dependencies, and &lt;a href=&quot;#prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot; id=&quot;index-4-prop_tgt:AUTOGEN_ORIGIN_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_ORIGIN_DEPENDS&lt;/code&gt;&lt;/a&gt; is disabled, it might be necessary to extend &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt; to add missing dependencies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="247754f448317c9a39b15dd8bc98e90ceb8acf14" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;cxx_static_assert&lt;/code&gt; feature is not provided by the compiler, a compatibility implementation is available via the &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT(COND)&lt;/code&gt; and &lt;code&gt;&amp;lt;PREFIX&amp;gt;_STATIC_ASSERT_MSG(COND, MSG)&lt;/code&gt; function-like macros. The macros expand to &lt;code&gt;static_assert&lt;/code&gt; where that compiler feature is available, and to a compatibility implementation otherwise. In the first form, the condition is stringified in the message field of &lt;code&gt;static_assert&lt;/code&gt;. In the second form, the message &lt;code&gt;MSG&lt;/code&gt; is passed to the message field of &lt;code&gt;static_assert&lt;/code&gt;, or ignored if using the backward compatibility implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d76af17c8d67913f712b53aefe5210d866f8ab" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;project()&lt;/code&gt; command is called from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, then the URL also is stored in the variable &lt;a href=&quot;../variable/cmake_project_homepage_url#variable:CMAKE_PROJECT_HOMEPAGE_URL&quot; id=&quot;index-0-variable:CMAKE_PROJECT_HOMEPAGE_URL&quot;&gt;&lt;code&gt;CMAKE_PROJECT_HOMEPAGE_URL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19abdd15771da5fe9b1aff7b8b8edcd516ca701b" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;project()&lt;/code&gt; command is called from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, then the description is also stored in the variable &lt;a href=&quot;../variable/cmake_project_description#variable:CMAKE_PROJECT_DESCRIPTION&quot; id=&quot;index-0-variable:CMAKE_PROJECT_DESCRIPTION&quot;&gt;&lt;code&gt;CMAKE_PROJECT_DESCRIPTION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0af3e4f68073a1fb76871dcd4921bc68fe599d0" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;project()&lt;/code&gt; command is called from the top-level &lt;code&gt;CMakeLists.txt&lt;/code&gt;, then the version is also stored in the variable &lt;a href=&quot;../variable/cmake_project_version#variable:CMAKE_PROJECT_VERSION&quot; id=&quot;index-0-variable:CMAKE_PROJECT_VERSION&quot;&gt;&lt;code&gt;CMAKE_PROJECT_VERSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f408ca58b55115680fb37ed4f65ff9104711ae72" translate="yes" xml:space="preserve">
          <source>When the build system to be launched allows build-time selection of the configuration (e.g. &lt;code&gt;Debug&lt;/code&gt;, &lt;code&gt;Release&lt;/code&gt;), this specifies the default configuration to be built when no &lt;code&gt;-C&lt;/code&gt; option is given to the &lt;code&gt;ctest&lt;/code&gt; command. The value will be substituted into the value of &lt;code&gt;MakeCommand&lt;/code&gt; to replace the literal string &lt;code&gt;${CTEST_CONFIGURATION_TYPE}&lt;/code&gt; if it appears.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8c0cd55492fa497e6e4d64984323393af624c02" translate="yes" xml:space="preserve">
          <source>When the command will happen is determined by which of the following is specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a140c0fd16d292c55d148459e5eeea9e83a9ff1" translate="yes" xml:space="preserve">
          <source>When the cost of a test is not defined by the project, &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest&lt;/code&gt;&lt;/a&gt; will initially use a default cost of &lt;code&gt;0&lt;/code&gt;. It computes a weighted average of the cost each time a test is run and uses that as an improved estimate of the cost for the next run. The more a test is re-run in the same build directory, the more representative the cost should become.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebd94b06691ea837d1cf593513b10e372d22462b" translate="yes" xml:space="preserve">
          <source>When the function is invoked, the recorded &lt;code&gt;&amp;lt;commands&amp;gt;&lt;/code&gt; are first modified by replacing formal parameters (&lt;code&gt;${arg1}&lt;/code&gt;, &amp;hellip;) with the arguments passed, and then invoked as normal commands.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bb14219895a26747c439b3f3ca54dc0f87ef6da" translate="yes" xml:space="preserve">
          <source>When the output of &lt;strong&gt;ctest&lt;/strong&gt; is being sent directly to a terminal, the progress through the set of tests is reported by updating the same line rather than printing start and end messages for each test on new lines. This can significantly reduce the verbosity of the test output. Test completion messages are still output on their own line for failed tests and the final test summary will also still be logged.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c225a9f1024da27fcee497ba763d66e0ab6f6aa6" translate="yes" xml:space="preserve">
          <source>When the second script runs &lt;code&gt;ctest_start(APPEND)&lt;/code&gt;, it will read the &lt;code&gt;Experimental&lt;/code&gt; model and &lt;code&gt;TrackExperimental&lt;/code&gt; track from the &lt;code&gt;TAG&lt;/code&gt; file generated by the first &lt;code&gt;ctest_start()&lt;/code&gt; command. Please note that if you call &lt;code&gt;ctest_start(APPEND)&lt;/code&gt; and specify a different model or track than in the first &lt;code&gt;ctest_start()&lt;/code&gt; command, a warning will be issued, and the new model and track will be used.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6ca24e1c3a2d96d10d52f3563d8db381968e264" translate="yes" xml:space="preserve">
          <source>When the server is busy for a long time, it is polite to send back replies of type &amp;ldquo;progress&amp;rdquo; to the client. These will contain a &amp;ldquo;progressMessage&amp;rdquo; with a string describing the action currently taking place as well as &amp;ldquo;progressMinimum&amp;rdquo;, &amp;ldquo;progressMaximum&amp;rdquo; and &amp;ldquo;progressCurrent&amp;rdquo; with integer values describing the range of progress.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e59c383fab5c8863520a8ead39562c841cd72a2" translate="yes" xml:space="preserve">
          <source>When the special case for libraries in implicit link directories was first introduced the list of implicit link directories was simply hard-coded (e.g. &lt;code&gt;/lib&lt;/code&gt;, &lt;code&gt;/usr/lib&lt;/code&gt;, and a few others). Since that time, CMake has learned to detect the implicit link directories used by the compiler front-end. If necessary, the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-1-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command could be taught to use this information to help find libraries of the proper architecture.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2929a0d0c84ec824624fbd428e14b314febb78e8" translate="yes" xml:space="preserve">
          <source>When the standalone toolchain targets ARM v7, optionally set thisto &lt;code&gt;ON&lt;/code&gt; to target ARM NEON devices. See variable documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="393f3936ea8f83c6c48a63652e59b3f58125c1bc" translate="yes" xml:space="preserve">
          <source>When the standalone toolchain targets ARM, optionally set this to &lt;code&gt;ON&lt;/code&gt; to target 32-bit ARM instead of 16-bit Thumb. See variable documentation for details.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08090826adbbc6e28947195494aad64f8d409510" translate="yes" xml:space="preserve">
          <source>When the test outputs a line that matches &lt;code&gt;regex&lt;/code&gt; its start time is reset to the current time and its timeout duration is changed to &lt;code&gt;seconds&lt;/code&gt;. Prior to this, the timeout duration is determined by the &lt;a href=&quot;timeout#prop_test:TIMEOUT&quot; id=&quot;index-0-prop_test:TIMEOUT&quot;&gt;&lt;code&gt;TIMEOUT&lt;/code&gt;&lt;/a&gt; property or the &lt;a href=&quot;../variable/ctest_test_timeout#variable:CTEST_TEST_TIMEOUT&quot; id=&quot;index-0-variable:CTEST_TEST_TIMEOUT&quot;&gt;&lt;code&gt;CTEST_TEST_TIMEOUT&lt;/code&gt;&lt;/a&gt; variable if either of these are set. Because the test&amp;rsquo;s start time is reset, its execution time will not include any time that was spent waiting for the matching output.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f558810d55707bd9bfec1d650e456204cd0598" translate="yes" xml:space="preserve">
          <source>When there are multiple &lt;code&gt;.qrc&lt;/code&gt; files with the same name, CMake will generate unspecified unique output file names for &lt;code&gt;rcc&lt;/code&gt;. Therefore, if &lt;code&gt;Q_INIT_RESOURCE()&lt;/code&gt; or &lt;code&gt;Q_CLEANUP_RESOURCE()&lt;/code&gt; need to be used, the &lt;code&gt;.qrc&lt;/code&gt; file name must be unique.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f160f6cd4402a8ef3f279abc8f3f0faa6a9cae" translate="yes" xml:space="preserve">
          <source>When this behavior is enable for generated Xcode projects, the &lt;code&gt;EFFECTIVE_PLATFORM_NAME&lt;/code&gt; variable will leak into &lt;a href=&quot;../manual/cmake-generator-expressions.7#manual:cmake-generator-expressions(7)&quot; id=&quot;index-0-manual:cmake-generator-expressions(7)&quot;&gt;&lt;code&gt;Generator expressions&lt;/code&gt;&lt;/a&gt; like &lt;code&gt;TARGET_FILE&lt;/code&gt; and will render those mostly unusable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b265194de40a1bd025c1116f2857fa7a85037150" translate="yes" xml:space="preserve">
          <source>When this option is enabled, no attempt is made to download or update any content. It is assumed that all content has already been populated in a previous run or the source directories have been pointed at existing contents the developer has provided manually (using options described further below). When the developer knows that no changes have been made to any content details, turning this option &lt;code&gt;ON&lt;/code&gt; can significantly speed up the configure stage. It is &lt;code&gt;OFF&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a558dab87bffe441d3d71b976a868a56bf39336" translate="yes" xml:space="preserve">
          <source>When this option is enabled, the &lt;code&gt;git clone&lt;/code&gt; operation will be given the &lt;code&gt;--depth 1&lt;/code&gt; option. This performs a shallow clone, which avoids downloading the whole history and instead retrieves just the commit denoted by the &lt;code&gt;GIT_TAG&lt;/code&gt; option.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f46115136076dc5fa5edd31a38650bc7e54f845" translate="yes" xml:space="preserve">
          <source>When this option is enabled, the build will be done directly within the external project&amp;rsquo;s source tree. This should generally be avoided, the use of a separate build directory is usually preferred, but it can be useful when the external project assumes an in-source build. The &lt;code&gt;BINARY_DIR&lt;/code&gt; option should not be specified if building in-source.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffe50bcc448fc57cb4f244598a55cd62609f45bd" translate="yes" xml:space="preserve">
          <source>When this option is enabled, the test step will be executed before the install step. The default behavior is for the test step to run after the install step.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58f5d348e31d6015e2cc64875492b63901093073" translate="yes" xml:space="preserve">
          <source>When this option is present, it is generally advisable to make the value a cache variable under the developer&amp;rsquo;s control rather than hard-coding it. If this option is not present, the default value is taken from the &lt;code&gt;EP_UPDATE_DISCONNECTED&lt;/code&gt; directory property. If that is also not defined, updates are performed as normal. The &lt;code&gt;EP_UPDATE_DISCONNECTED&lt;/code&gt; directory property is intended as a convenience for controlling the &lt;code&gt;UPDATE_DISCONNECTED&lt;/code&gt; behavior for an entire section of a project&amp;rsquo;s directory hierarchy and may be a more convenient method of giving developers control over whether or not to perform updates (assuming the project also provides a cache variable or some other convenient method for setting the directory property).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6add963b4d2cb7e29f370b05b504e4e5aac65c65" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;ON&lt;/code&gt; or if &lt;a href=&quot;../variable/cmake_ghs_no_source_group_file#variable:CMAKE_GHS_NO_SOURCE_GROUP_FILE&quot; id=&quot;index-0-variable:CMAKE_GHS_NO_SOURCE_GROUP_FILE&quot;&gt;&lt;code&gt;CMAKE_GHS_NO_SOURCE_GROUP_FILE&lt;/code&gt;&lt;/a&gt; is &lt;code&gt;ON&lt;/code&gt; then only a single project file is generated for the target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e700f211a8aa1675dda3ad7d8aab364b8e61a270" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;ON&lt;/code&gt;, CMake will handle &lt;code&gt;.qrc&lt;/code&gt; files added as target sources at build time and invoke &lt;code&gt;rcc&lt;/code&gt; accordingly. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_autorcc#variable:CMAKE_AUTORCC&quot; id=&quot;index-0-variable:CMAKE_AUTORCC&quot;&gt;&lt;code&gt;CMAKE_AUTORCC&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e84c208ef8a74623ed93426812662c44b1e4fc5" translate="yes" xml:space="preserve">
          <source>When this property is &lt;code&gt;ON&lt;/code&gt;, CMake will scan the header and source files at build time and invoke &lt;code&gt;uic&lt;/code&gt; accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92aadb5cf36050d57cad48004f2160fc89ee129e" translate="yes" xml:space="preserve">
          <source>When this property is enabled, zero or more &lt;code&gt;.def&lt;/code&gt; files may also be specified as source files of the target. The exports named by these files will be merged with those detected from the object files to generate a single module definition file to be passed to the linker. This can be used to export symbols from a &lt;code&gt;.dll&lt;/code&gt; that are not in any of its object files but are added by the linker from dependencies (e.g. &lt;code&gt;msvcrt.lib&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1908c564c90bc5057c746fe74de078df2d76ff5" translate="yes" xml:space="preserve">
          <source>When this property is set &lt;code&gt;ON&lt;/code&gt;, CMake will scan the header and source files at build time and invoke &lt;code&gt;moc&lt;/code&gt; accordingly.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae5a990b71ddb173252f3e048167fc727e1e040b" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;code&gt;TRUE&lt;/code&gt; the executable when built on macOS or iOS will be created as an application bundle. This makes it a GUI executable that can be launched from the Finder. See the &lt;a href=&quot;macosx_bundle_info_plist#prop_tgt:MACOSX_BUNDLE_INFO_PLIST&quot; id=&quot;index-0-prop_tgt:MACOSX_BUNDLE_INFO_PLIST&quot;&gt;&lt;code&gt;MACOSX_BUNDLE_INFO_PLIST&lt;/code&gt;&lt;/a&gt; target property for information about creation of the &lt;code&gt;Info.plist&lt;/code&gt; file for the application bundle. This property is initialized by the value of the variable &lt;a href=&quot;../variable/cmake_macosx_bundle#variable:CMAKE_MACOSX_BUNDLE&quot; id=&quot;index-0-variable:CMAKE_MACOSX_BUNDLE&quot;&gt;&lt;code&gt;CMAKE_MACOSX_BUNDLE&lt;/code&gt;&lt;/a&gt; if it is set when a target is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9a61b1a9359baa70d05738d7acf46978ad60ba3" translate="yes" xml:space="preserve">
          <source>When this property is set to &lt;code&gt;TRUE&lt;/code&gt;, the directory portion of the &lt;code&gt;install_name&lt;/code&gt; field of this shared library will be &lt;code&gt;@rpath&lt;/code&gt; unless overridden by &lt;a href=&quot;install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt;. This indicates the shared library is to be found at runtime using runtime paths (rpaths).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e39663c2578e8f431949c112bc9bda0e319d50c2" translate="yes" xml:space="preserve">
          <source>When this property is set to set to false (which is the default) then it will either be built with the device SDK or the simulator SDK depending on the SDK set. But if this property is set to true then the target will at install time also be built for the corresponding SDK and combined into one library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d9387a900b2ae8bb81208920ace6e146133364a" translate="yes" xml:space="preserve">
          <source>When this property is set to true that enables the ProGuard tool to shrink, optimize, and obfuscate the code by removing unused code and renaming classes, fields, and methods with semantically obscure names. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_android_proguard#variable:CMAKE_ANDROID_PROGUARD&quot; id=&quot;index-0-variable:CMAKE_ANDROID_PROGUARD&quot;&gt;&lt;code&gt;CMAKE_ANDROID_PROGUARD&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39169c4d462b9132e80f81ee6231c8d77f95570a" translate="yes" xml:space="preserve">
          <source>When this property is set to true the executable when built for Android will be created as an application package. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_android_gui#variable:CMAKE_ANDROID_GUI&quot; id=&quot;index-0-variable:CMAKE_ANDROID_GUI&quot;&gt;&lt;code&gt;CMAKE_ANDROID_GUI&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25625ffa513de3540cc16df75ed17620ca7f2809" translate="yes" xml:space="preserve">
          <source>When this property is set to true the executable when linked on Windows will be created with a WinMain() entry point instead of just main(). This makes it a GUI executable instead of a console application. See the &lt;a href=&quot;../variable/cmake_mfc_flag#variable:CMAKE_MFC_FLAG&quot; id=&quot;index-0-variable:CMAKE_MFC_FLAG&quot;&gt;&lt;code&gt;CMAKE_MFC_FLAG&lt;/code&gt;&lt;/a&gt; variable documentation to configure use of the Microsoft Foundation Classes (MFC) for WinMain executables. This property is initialized by the value of the &lt;a href=&quot;../variable/cmake_win32_executable#variable:CMAKE_WIN32_EXECUTABLE&quot; id=&quot;index-0-variable:CMAKE_WIN32_EXECUTABLE&quot;&gt;&lt;code&gt;CMAKE_WIN32_EXECUTABLE&lt;/code&gt;&lt;/a&gt; variable if it is set when a target is created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cba4157e926b92ec84e7edebe6e9ce6787ec2449" translate="yes" xml:space="preserve">
          <source>When this variable is set to a non-empty string, CTest will report the value you specified rather than using the update command to discover the current version that is checked out. Use of this variable supersedes &lt;code&gt;UpdateVersionOnly&lt;/code&gt;. Like &lt;code&gt;UpdateVersionOnly&lt;/code&gt;, using this variable tells CTest not to update the source tree to a different version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e2fdbfc6cb9de39d2a227026fd253c407f31c0d" translate="yes" xml:space="preserve">
          <source>When unset or empty the directory &lt;code&gt;&amp;lt;dir&amp;gt;/&amp;lt;target-name&amp;gt;_autogen&lt;/code&gt; is used where &lt;code&gt;&amp;lt;dir&amp;gt;&lt;/code&gt; is &lt;a href=&quot;../variable/cmake_current_binary_dir#variable:CMAKE_CURRENT_BINARY_DIR&quot; id=&quot;index-0-variable:CMAKE_CURRENT_BINARY_DIR&quot;&gt;&lt;code&gt;CMAKE_CURRENT_BINARY_DIR&lt;/code&gt;&lt;/a&gt; and &lt;code&gt;&amp;lt;target-name&amp;gt;&lt;/code&gt; is &lt;a href=&quot;name#prop_tgt:NAME&quot; id=&quot;index-0-prop_tgt:NAME&quot;&gt;&lt;code&gt;NAME&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78641c71e42a73333db9903b83fe15f94a80fea5" translate="yes" xml:space="preserve">
          <source>When using &lt;a href=&quot;../prop_tgt/imported#prop_tgt:IMPORTED&quot; id=&quot;index-1-prop_tgt:IMPORTED&quot;&gt;&lt;code&gt;IMPORTED&lt;/code&gt;&lt;/a&gt; targets, the qtmain.lib static library is automatically linked on Windows for &lt;a href=&quot;../prop_tgt/win32_executable#prop_tgt:WIN32_EXECUTABLE&quot; id=&quot;index-0-prop_tgt:WIN32_EXECUTABLE&quot;&gt;&lt;code&gt;WIN32&lt;/code&gt;&lt;/a&gt; executables. To disable that globally, set the &lt;code&gt;QT4_NO_LINK_QTMAIN&lt;/code&gt; variable before finding Qt4. To disable that for a particular executable, set the &lt;code&gt;QT4_NO_LINK_QTMAIN&lt;/code&gt; target property to &lt;code&gt;TRUE&lt;/code&gt; on the executable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="100ef1fda23a0848c48dd351c366546f338ff9b6" translate="yes" xml:space="preserve">
          <source>When using &lt;code&gt;MPIEXEC_EXECUTABLE&lt;/code&gt; to execute MPI applications, you should typically use all of the &lt;code&gt;MPIEXEC_EXECUTABLE&lt;/code&gt; flags as follows:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="013a7823ffa73cae6b2a530f11693266477e6262" translate="yes" xml:space="preserve">
          <source>When using MSVC-like compilers in CMake 3.14 and below, warning flags like &lt;code&gt;/W3&lt;/code&gt; are added to &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; by default. This is problematic for projects that want to choose a different warning level programmatically. In particular, it requires string editing of the &lt;code&gt;CMAKE_&amp;lt;LANG&amp;gt;_FLAGS&lt;/code&gt; variables with knowledge of the CMake builtin defaults so they can be replaced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4d36fbfa394769833437782305ec452c8e24382" translate="yes" xml:space="preserve">
          <source>When using a Visual Studio generator with the &lt;a href=&quot;cmake_system_name#variable:CMAKE_SYSTEM_NAME&quot; id=&quot;index-0-variable:CMAKE_SYSTEM_NAME&quot;&gt;&lt;code&gt;CMAKE_SYSTEM_NAME&lt;/code&gt;&lt;/a&gt; variable set to &lt;code&gt;Android&lt;/code&gt;, this variable contains the version number of the installed NVIDIA Nsight Tegra Visual Studio Edition.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68913d42910b1e9308ef02ba8f5a31cc771ce02" translate="yes" xml:space="preserve">
          <source>When using one of the &lt;a href=&quot;cmake-generators.7#command-line-build-tool-generators&quot;&gt;Command-Line Build Tool Generators&lt;/a&gt; CMake expects that the environment needed by the compiler toolchain is already configured in the shell. When using one of the &lt;a href=&quot;cmake-generators.7#ide-build-tool-generators&quot;&gt;IDE Build Tool Generators&lt;/a&gt;, no particular environment is needed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04d6d21cf0f9411fb6f3a7774f605a1fca2c169" translate="yes" xml:space="preserve">
          <source>When using saved content details, a call to &lt;a href=&quot;#command:fetchcontent_populate&quot; id=&quot;index-2-command:fetchcontent_populate&quot;&gt;&lt;code&gt;FetchContent_Populate()&lt;/code&gt;&lt;/a&gt; records information in global properties which can be queried at any time. This information includes the source and binary directories associated with the content and also whether or not the content population has been processed during the current configure run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be773f8b94c2161b1637bbd7dcc7a6c0161f292c" translate="yes" xml:space="preserve">
          <source>When using the &lt;a href=&quot;cmake-generators.7#manual:cmake-generators(7)&quot; id=&quot;index-0-manual:cmake-generators(7)&quot;&gt;&lt;code&gt;Visual Studio generators&lt;/code&gt;&lt;/a&gt;, CMake generates a &lt;code&gt;PRE_BUILD&lt;/code&gt;&lt;a href=&quot;../command/add_custom_command#command:add_custom_command&quot; id=&quot;index-0-command:add_custom_command&quot;&gt;&lt;code&gt;custom command&lt;/code&gt;&lt;/a&gt; instead of the &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt;&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-1-command:add_custom_target&quot;&gt;&lt;code&gt;custom target&lt;/code&gt;&lt;/a&gt; (for &lt;a href=&quot;../prop_tgt/automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-3-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../prop_tgt/autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-4-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt;). This isn&amp;rsquo;t always possible though and an &lt;code&gt;&amp;lt;ORIGIN&amp;gt;_autogen&lt;/code&gt;&lt;a href=&quot;../command/add_custom_target#command:add_custom_target&quot; id=&quot;index-2-command:add_custom_target&quot;&gt;&lt;code&gt;custom target&lt;/code&gt;&lt;/a&gt; is used, when either</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11971a8c12f253769510d0d30f370f484f452e9f" translate="yes" xml:space="preserve">
          <source>When using the Eclipse project generator, CMake tries to find the Eclipse executable and detect the version of it. Depending on the version it finds, some features are enabled or disabled. If CMake doesn&amp;rsquo;t find Eclipse, it assumes the oldest supported version, Eclipse Callisto (3.2).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0974f99b2861b4be86b4bcd0e7bf57e4fd66283" translate="yes" xml:space="preserve">
          <source>When using the Eclipse, CodeBlocks, CodeLite, Kate or Sublime generators, CMake generates Makefiles (&lt;a href=&quot;cmake_generator#variable:CMAKE_GENERATOR&quot; id=&quot;index-0-variable:CMAKE_GENERATOR&quot;&gt;&lt;code&gt;CMAKE_GENERATOR&lt;/code&gt;&lt;/a&gt;) and additionally project files for the respective IDE. This IDE project file generator is stored in &lt;code&gt;CMAKE_EXTRA_GENERATOR&lt;/code&gt; (e.g. &lt;code&gt;Eclipse CDT4&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e430c39845fdbb5af2c16ab04ad3e69fc990895" translate="yes" xml:space="preserve">
          <source>When using this to specify names with and without a version suffix, we recommend specifying the unversioned name first so that locally-built packages can be found before those provided by distributions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ca418c473b64bedf9db97e620a78712930e34c" translate="yes" xml:space="preserve">
          <source>Whenever CMake is re-run, by default the external project&amp;rsquo;s sources will be updated if the download method supports updates (e.g. a git repository would be checked if the &lt;code&gt;GIT_TAG&lt;/code&gt; does not refer to a specific commit).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be0520063c28d9175c137ca7b913b0e47548978" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;AUTOGEN_BUILD_DIR&amp;gt;&lt;/code&gt; is the value of the target property &lt;a href=&quot;autogen_build_dir#prop_tgt:AUTOGEN_BUILD_DIR&quot; id=&quot;index-0-prop_tgt:AUTOGEN_BUILD_DIR&quot;&gt;&lt;code&gt;AUTOGEN_BUILD_DIR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43b035bdb5029adb2f799a3eb9ab5115a9cb81be" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; is the name of an ICU component, for example &lt;code&gt;ICU::i18n&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d8aa0fb72864a6f15f7c603361d985997a23f7f" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;C&amp;gt;&lt;/code&gt; is the name of an Ice component, for example &lt;code&gt;Ice::Glacier2&lt;/code&gt; or &lt;code&gt;Ice++11&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c4c83159b8e1899f38aba15d35ccf7a3ec99087" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;&amp;lt;SOURCE_DIR_CHECKSUM&amp;gt;&lt;/code&gt; is a checksum computed from the relative parent directory path of the &lt;code&gt;moc&lt;/code&gt; input file. This scheme allows to have &lt;code&gt;moc&lt;/code&gt; input files with the same name in different directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569eb300b22228bc2299cf146b6b3a6a774f358a" translate="yes" xml:space="preserve">
          <source>Where to find headers for using the Xxx library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="855d238181126c2bbc0bdb70802e4c2a7f6a3652" translate="yes" xml:space="preserve">
          <source>Where to find headers for using the Yy library of the Xxx system.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="383d8218cee9266001f0a6a545a369b6be1588e3" translate="yes" xml:space="preserve">
          <source>Where to find the ALSA headers.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bfb340f5781dc3a6a0458d09fc927001f32a4cf" translate="yes" xml:space="preserve">
          <source>Where to find the Xxx tool.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ef078b9a648607726cfd4eb8dbadff5481f25cd" translate="yes" xml:space="preserve">
          <source>Where to find the Yyy tool that comes with Xxx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fc77c5d76cea0f14b1c22f81c89d9853fde1ecb" translate="yes" xml:space="preserve">
          <source>Where to find the base directory of Xxx.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b8ff3d814c99f24d47cf34898c93e317cdf588e" translate="yes" xml:space="preserve">
          <source>Where to find the headers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ecfa0e91dcb1d5de36886237af2e41721bb3a3" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files when built for a specific configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fb3ffcdc2a7c85343f28a7b3b6c9508483e24b" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#archive-output-artifacts&quot;&gt;ARCHIVE&lt;/a&gt; target files when built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a84191fde0e17c5cba009b43e7fc36cbe6dcb551" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files when built for a specific configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f509706a93af3c1b02caa264d66fdb18c80fa4b4" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#library-output-artifacts&quot;&gt;LIBRARY&lt;/a&gt; target files when built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2f92c184e053416d2be5cb5c2c224792b10b9d5" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files when built for a specific configuration.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e06d4ac41b2c4141f2155389a4b29ba664adaad" translate="yes" xml:space="preserve">
          <source>Where to put all the &lt;a href=&quot;../manual/cmake-buildsystem.7#runtime-output-artifacts&quot;&gt;RUNTIME&lt;/a&gt; target files when built.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fd99d38e8051493f7673f92833a97486a8d7b7b" translate="yes" xml:space="preserve">
          <source>Whether &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; should automatically search lib64 directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="198f9a597fcc2948b50d539b3bf058c615142cf5" translate="yes" xml:space="preserve">
          <source>Whether &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; should find OpenBSD-style shared libraries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="860627de20c1a30f386f94f2f94bc63d4a35825f" translate="yes" xml:space="preserve">
          <source>Whether consumers need to create a position-independent target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10712c9366a5c8e2127bb605c633af61e0e4f3e7" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command should automatically search &lt;code&gt;lib32&lt;/code&gt; directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5881ce08179e3dc65ccf97ca75da6522ce6acb9" translate="yes" xml:space="preserve">
          <source>Whether the &lt;a href=&quot;../command/find_library#command:find_library&quot; id=&quot;index-0-command:find_library&quot;&gt;&lt;code&gt;find_library()&lt;/code&gt;&lt;/a&gt; command should automatically search &lt;code&gt;libx32&lt;/code&gt; directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91044746d2ffa5c4cfd8dfc84f9d600057e6995c" translate="yes" xml:space="preserve">
          <source>Whether this target on macOS or iOS is located at runtime using rpaths.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d5e0be368ad63c13847a6edfa202115ca9dad6c" translate="yes" xml:space="preserve">
          <source>Whether to add a compile flag to hide symbols of inline functions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591b257dce79daebe3d1b7dc4ba0482a74753c79" translate="yes" xml:space="preserve">
          <source>Whether to append or prepend directories by default in &lt;a href=&quot;../command/include_directories#command:include_directories&quot; id=&quot;index-0-command:include_directories&quot;&gt;&lt;code&gt;include_directories()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b837516f9d4468d99bb6bf4f9743cd9de337ce9" translate="yes" xml:space="preserve">
          <source>Whether to append or prepend directories by default in &lt;a href=&quot;../command/link_directories#command:link_directories&quot; id=&quot;index-0-command:link_directories&quot;&gt;&lt;code&gt;link_directories()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ebea1ff4e0b7baa221fcf388c9c0f0eb2c5e2e0" translate="yes" xml:space="preserve">
          <source>Whether to create a position-independent target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd01df774803a583469e57ea27e87c19dd604ed7" translate="yes" xml:space="preserve">
          <source>Whether to debug the target as &amp;lsquo;root&amp;rsquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a2da3a7ad398022d525beef42e2e1e8a2e18ee0" translate="yes" xml:space="preserve">
          <source>Whether to disable generation of installation rules.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dc82ecfd946d2b054ffc3908a74e214939e21a0" translate="yes" xml:space="preserve">
          <source>Whether to disable the &lt;code&gt;Main Thread Checker&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="931dec6e46fcc9fffadb7e41be7527f4b4151347" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Address Sanitizer&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a223d0b083111796441e2b1ed6c00a39ed83e2b8" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Detect use of stack after return&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83f69c8018e0771f3d24b5222e60965ba153bb1" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Dynamic Library Loads&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391a2a8c3d5ffe798f7946d186206b90b1a3cd70" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Dynamic Linker API usage&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0842ef94352b69ef9d052d5e0ec78dc75df955f1" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Guard Malloc&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a73429ec74aaeba8ce5ccac37fe0fb277a4db027" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Malloc Guard Edges&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b7ac9f2b562e1d7d6832bca1bf66b61388b763" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Malloc Scribble&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3c6a75f5a578642dba86a753144785448e250c0" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Malloc Stack&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0db0b2e3b8525ba9263e83602ea11378abeb869" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Thread Sanitizer - Pause on issues&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe7fa75a69a74801d710a900219a580d7883925" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Thread Sanitizer&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25af21b86fc2e754c1fa660e3a5cf1294755a86f" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Undefined Behavior Sanitizer&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4ed8c9fd5cc4dea4fc4ac4dcc0fa31d4b7c6a4" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Undefined Behavior Sanitizer&lt;/code&gt; option &lt;code&gt;Pause on issues&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66dd82366850214941fa5f95f9571d1b519a523d" translate="yes" xml:space="preserve">
          <source>Whether to enable &lt;code&gt;Zombie Objects&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c83d892c83d40f150ce0a676cb5f2825c401e943" translate="yes" xml:space="preserve">
          <source>Whether to enable the &lt;code&gt;Main Thread Checker&lt;/code&gt; option &lt;code&gt;Pause on issues&lt;/code&gt; in the Diagnostics section of the generated Xcode scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea56c61b5ed5859d8a0e98bbeaebfe58fdcde1fc" translate="yes" xml:space="preserve">
          <source>Whether to force prepending of project include directories.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a887c540793db8807305c3168e91a544fba913" translate="yes" xml:space="preserve">
          <source>Whether to handle &lt;code&gt;moc&lt;/code&gt; automatically for Qt targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eaaea678d25551eda043cb5ff9f861c65804d91" translate="yes" xml:space="preserve">
          <source>Whether to handle &lt;code&gt;rcc&lt;/code&gt; automatically for Qt targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa33190fd25e2758f83f52b2160ff30f7d5d1b9" translate="yes" xml:space="preserve">
          <source>Whether to handle &lt;code&gt;uic&lt;/code&gt; automatically for Qt targets.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a57361a86a40b2f7888bd81b3f450c8e59d1807" translate="yes" xml:space="preserve">
          <source>Whether to issue errors for deprecated functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3f0ae351ea7169eba09893a43b4facfc1a58483" translate="yes" xml:space="preserve">
          <source>Whether to issue warnings for deprecated functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a9571de1ddc63bda9ccc87ae2a7643a2d58850" translate="yes" xml:space="preserve">
          <source>Whether to set &lt;code&gt;soname&lt;/code&gt; when linking a shared library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff5abc306cab86b83e41622df9e3fcc7b6adbd89" translate="yes" xml:space="preserve">
          <source>Whether to skip link dependencies on shared library files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a77d65329c56e85390cb3632a9c5fe5bd964f3fe" translate="yes" xml:space="preserve">
          <source>Whether to use &lt;a href=&quot;../prop_tgt/install_name_dir#prop_tgt:INSTALL_NAME_DIR&quot; id=&quot;index-0-prop_tgt:INSTALL_NAME_DIR&quot;&gt;&lt;code&gt;INSTALL_NAME_DIR&lt;/code&gt;&lt;/a&gt; on targets in the build tree.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="277201881414eb6a3eae214ee757f32db11bd5d5" translate="yes" xml:space="preserve">
          <source>Whether to use relative paths for the build &lt;code&gt;RPATH&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba7840807a3925f5d1afe80a8f22f074535ec439" translate="yes" xml:space="preserve">
          <source>Whether to use rpaths on macOS and iOS.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf939e79bf8a095175e1bb2a013d64aa3f0c826" translate="yes" xml:space="preserve">
          <source>While &lt;code&gt;projA&lt;/code&gt; defines content details for &lt;code&gt;projE&lt;/code&gt;, it does not need to explicitly call &lt;code&gt;FetchContent_MakeAvailable(projE)&lt;/code&gt; or &lt;code&gt;FetchContent_Populate(projD)&lt;/code&gt; itself. Instead, it leaves that to the child &lt;code&gt;projB&lt;/code&gt;. For higher level projects, it is often enough to just define the override content details and leave the actual population to the child projects. This saves repeating the same thing at each level of the project hierarchy unnecessarily.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc413a12a0749227669f28623dc5077546b1c51e" translate="yes" xml:space="preserve">
          <source>While building a project for submission to CDash, CTest scans the build output for errors and warnings and reports them with surrounding context from the build log. This generic approach works for all build tools, but does not give details about the command invocation that produced a given problem. One may get more detailed reports by setting the &lt;a href=&quot;../variable/ctest_use_launchers#variable:CTEST_USE_LAUNCHERS&quot; id=&quot;index-0-variable:CTEST_USE_LAUNCHERS&quot;&gt;&lt;code&gt;CTEST_USE_LAUNCHERS&lt;/code&gt;&lt;/a&gt; variable:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dc0d4592a4eeacf6f19fb4be56cdb8947e7fd0" translate="yes" xml:space="preserve">
          <source>While features are typically specified in programming language standards, CMake provides a primary user interface based on granular handling of the features, not the language standard that introduced the feature.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9710c2459ccdfc70e840768bbf315e08a59492c6" translate="yes" xml:space="preserve">
          <source>While processing a CMake file loaded by &lt;a href=&quot;../command/include#command:include&quot; id=&quot;index-0-command:include&quot;&gt;&lt;code&gt;include()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; this variable contains the full path to the file including it. The top of the include stack is always the &lt;code&gt;CMakeLists.txt&lt;/code&gt; for the current directory. See also &lt;a href=&quot;cmake_current_list_file#variable:CMAKE_CURRENT_LIST_FILE&quot; id=&quot;index-0-variable:CMAKE_CURRENT_LIST_FILE&quot;&gt;&lt;code&gt;CMAKE_CURRENT_LIST_FILE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b562f39a964b62b25fed3de9da08a8ef803f4d4d" translate="yes" xml:space="preserve">
          <source>While running tests in parallel (e.g. with &lt;code&gt;-j&lt;/code&gt;), try not to start tests when they may cause the CPU load to pass above a given threshold.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704be1527fca6d8092aca3afa0b04066654a9156" translate="yes" xml:space="preserve">
          <source>While running tests in parallel, try not to start tests when they may cause the CPU load to pass above a given threshold. If not specified the &lt;a href=&quot;../variable/ctest_test_load#variable:CTEST_TEST_LOAD&quot; id=&quot;index-0-variable:CTEST_TEST_LOAD&quot;&gt;&lt;code&gt;CTEST_TEST_LOAD&lt;/code&gt;&lt;/a&gt; variable will be checked, and then the &lt;code&gt;--test-load&lt;/code&gt; command-line argument to &lt;a href=&quot;../manual/ctest.1#manual:ctest(1)&quot; id=&quot;index-0-manual:ctest(1)&quot;&gt;&lt;code&gt;ctest(1)&lt;/code&gt;&lt;/a&gt;. See also the &lt;code&gt;TestLoad&lt;/code&gt; setting in the &lt;a href=&quot;../manual/ctest.1#ctest-test-step&quot;&gt;CTest Test Step&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0262ff0576cd5b733005fcdb6e42c419b0c3e3dc" translate="yes" xml:space="preserve">
          <source>While these are the standard variable names, you should provide backwards compatibility for any old names that were actually in use. Make sure you comment them as deprecated, so that no-one starts using them.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a46098fc833342738e2a9d8ebb9e0091f819bf17" translate="yes" xml:space="preserve">
          <source>Widget type for entry in GUIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6119dd6f86340c2de9285d4261b1dd61289a8dd4" translate="yes" xml:space="preserve">
          <source>Will loop over &lt;code&gt;a;b;c&lt;/code&gt; and not over &lt;code&gt;x;y;z&lt;/code&gt; as one might have expected. If you want true CMake variables and/or better CMake scope control you should look at the function command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e58c0c3f0dd810481ddde525742f4fea2c40bbb" translate="yes" xml:space="preserve">
          <source>Will only be used by CMake on the first configuration to determine the default linker flags, after which the value for &lt;code&gt;LDFLAGS&lt;/code&gt; is stored in the cache as &lt;a href=&quot;../variable/cmake_exe_linker_flags_init#variable:CMAKE_EXE_LINKER_FLAGS_INIT&quot; id=&quot;index-0-variable:CMAKE_EXE_LINKER_FLAGS_INIT&quot;&gt;&lt;code&gt;CMAKE_EXE_LINKER_FLAGS_INIT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../variable/cmake_shared_linker_flags_init#variable:CMAKE_SHARED_LINKER_FLAGS_INIT&quot; id=&quot;index-0-variable:CMAKE_SHARED_LINKER_FLAGS_INIT&quot;&gt;&lt;code&gt;CMAKE_SHARED_LINKER_FLAGS_INIT&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../variable/cmake_module_linker_flags_init#variable:CMAKE_MODULE_LINKER_FLAGS_INIT&quot; id=&quot;index-0-variable:CMAKE_MODULE_LINKER_FLAGS_INIT&quot;&gt;&lt;code&gt;CMAKE_MODULE_LINKER_FLAGS_INIT&lt;/code&gt;&lt;/a&gt;. For any configuration run (including the first), the environment variable will be ignored if the equivalent &lt;code&gt;CMAKE_&amp;lt;TYPE&amp;gt;_LINKER_FLAGS_INIT&lt;/code&gt; variable is defined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e2dbcf1fd8cbb5794599f014ae6e46fed2259aa" translate="yes" xml:space="preserve">
          <source>Windows Versions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808a70783ddd534ffadefc687c51ddee71dc0b3f" translate="yes" xml:space="preserve">
          <source>Windows-specific Command-Line Tools</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e9ae6bf80d10d6d28b76870329f9d43e270bef4" translate="yes" xml:space="preserve">
          <source>Windows: The installed versions of Matlab/MCR are retrieved from the Windows registry</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b44ce2007aad8cc60bb0eea8ac830740bb441f6d" translate="yes" xml:space="preserve">
          <source>With &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; set to false or not set at all, the target will be brought up to date as part of doing a &lt;code&gt;make install&lt;/code&gt; or its equivalent for the CMake generator being used. If a target has &lt;code&gt;EXCLUDE_FROM_ALL&lt;/code&gt; set to true, then any attempt to install that target has undefined behavior. Note that such a target can still safely be listed in an &lt;a href=&quot;../command/install#command:install&quot; id=&quot;index-0-command:install&quot;&gt;&lt;code&gt;install(TARGETS)&lt;/code&gt;&lt;/a&gt; command as long as the install components the target belongs to are not part of the set of components that anything tries to install.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0aa8af71c4a8691d9acd30b28efe8ecaa0f36d14" translate="yes" xml:space="preserve">
          <source>With TOUCH and TOUCH_NOCREATE the contents of an existing file will not be modified.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6cacb38ed1bf47a288d099276d237fe4b66f597" translate="yes" xml:space="preserve">
          <source>With the exception of the &lt;code&gt;ALL&lt;/code&gt; value, these values can be combined in order to customize the output. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5007716b54422b954e8064ef8ed52f74766b17f5" translate="yes" xml:space="preserve">
          <source>With the policy set to &lt;code&gt;NEW&lt;/code&gt; the quoted arguments will not be further dereferenced:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e98581a0c668451fa06fd0fb0ba02ea42dfc202" translate="yes" xml:space="preserve">
          <source>With the policy set to &lt;code&gt;OLD&lt;/code&gt; implicit expansion reduces this semantically to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c3f223da67cd581fdcf701ca04b5615ab1c33f2" translate="yes" xml:space="preserve">
          <source>With this approach the package references its external dependencies only through the names of &lt;a href=&quot;cmake-buildsystem.7#imported-targets&quot;&gt;IMPORTED targets&lt;/a&gt;. When a consumer uses the installed package, the consumer will run the appropriate &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-13-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; commands (via the &lt;code&gt;find_dependency&lt;/code&gt; macro described above) to find the dependencies and populate the imported targets with appropriate paths on their own machine.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230da9a853d4c946694cb20bbd0d5526aa29dd05" translate="yes" xml:space="preserve">
          <source>Within a &amp;ldquo;major&amp;rdquo; version all &amp;ldquo;minor&amp;rdquo; versions are fully backwards compatible. New &amp;ldquo;minor&amp;rdquo; versions may introduce functionality in such a way that existing clients of the same &amp;ldquo;major&amp;rdquo; version will continue to work, provided they ignore keys in the output that they do not know about.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59e0d254ea1fe4cedc897d0cf4b1c21463c12b28" translate="yes" xml:space="preserve">
          <source>Without the &lt;code&gt;COMPILE_LANG_AND_ID&lt;/code&gt; generator expression the same logic would be expressed as:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a796d7af1eabb80bc4632499652cf1a3c5cc25" translate="yes" xml:space="preserve">
          <source>Write &lt;code&gt;&amp;lt;content&amp;gt;&lt;/code&gt; into a file called &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt;. If the file does not exist, it will be created. If the file already exists, &lt;code&gt;WRITE&lt;/code&gt; mode will overwrite it and &lt;code&gt;APPEND&lt;/code&gt; mode will append to the end. Any directories in the path specified by &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt; that do not exist will be created.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da7710098bf1906e6c6dc1a3e1b3c21879f0457" translate="yes" xml:space="preserve">
          <source>Write Windows registry value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060145118d028307069bf43d2ded049e2e9346ec" translate="yes" xml:space="preserve">
          <source>Write a string representation of the current date and/or time to the output variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edb3151c30375e79339e7515ae52c0bffe339483" translate="yes" xml:space="preserve">
          <source>WriteBasicConfigVersionFile</source>
          <target state="translated">WriteBasicConfigVersionFile</target>
        </trans-unit>
        <trans-unit id="08671d8fc340a83e1b0925e743ebd16013deda37" translate="yes" xml:space="preserve">
          <source>WriteCompilerDetectionHeader</source>
          <target state="translated">WriteCompilerDetectionHeader</target>
        </trans-unit>
        <trans-unit id="af86716f2a1b3bc929d5f2382e960fadcd5f195e" translate="yes" xml:space="preserve">
          <source>Writes a file for use as &lt;code&gt;&amp;lt;PackageName&amp;gt;ConfigVersion.cmake&lt;/code&gt; file to &lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt;. See the documentation of &lt;a href=&quot;../command/find_package#command:find_package&quot; id=&quot;index-0-command:find_package&quot;&gt;&lt;code&gt;find_package()&lt;/code&gt;&lt;/a&gt; for details on this.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3453a4cb1b4f3df27c35d8b7e9316cebb05cc8b2" translate="yes" xml:space="preserve">
          <source>Writes a qt.conf file with the &amp;lt;qt_conf_contents&amp;gt; into &amp;lt;qt_conf_dir&amp;gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dabb8334b6cbbc19635a160f00032f11eeb9962" translate="yes" xml:space="preserve">
          <source>Writing</source>
          <target state="translated">Writing</target>
        </trans-unit>
        <trans-unit id="14621ea99fecbc2561e38e2653805fd06f90c356" translate="yes" xml:space="preserve">
          <source>XCODE</source>
          <target state="translated">XCODE</target>
        </trans-unit>
        <trans-unit id="c3da0189d4aacf894574cd43d5fd7f9132d8a79e" translate="yes" xml:space="preserve">
          <source>XCODE_ATTRIBUTE_&amp;lt;an-attribute&amp;gt;</source>
          <target state="translated">XCODE_ATTRIBUTE_&amp;lt;an-attribute&amp;gt;</target>
        </trans-unit>
        <trans-unit id="bb00edfecf9d57d94fd37f56e2d3ea7520e26b43" translate="yes" xml:space="preserve">
          <source>XCODE_ATTRIBUTE_an-attribute</source>
          <target state="translated">XCODE_ATTRIBUTE_an-attribute</target>
        </trans-unit>
        <trans-unit id="f0572e6a1a6c2c6cb26c1992ddf88b836f700168" translate="yes" xml:space="preserve">
          <source>XCODE_EMIT_EFFECTIVE_PLATFORM_NAME</source>
          <target state="translated">XCODE_EMIT_EFFECTIVE_PLATFORM_NAME</target>
        </trans-unit>
        <trans-unit id="b0ea10f75cd8f3e2fa31d241570132ef56738144" translate="yes" xml:space="preserve">
          <source>XCODE_EXPLICIT_FILE_TYPE</source>
          <target state="translated">XCODE_EXPLICIT_FILE_TYPE</target>
        </trans-unit>
        <trans-unit id="0c7acb857a43726191197e79f972b6483f009a5d" translate="yes" xml:space="preserve">
          <source>XCODE_FILE_ATTRIBUTES</source>
          <target state="translated">XCODE_FILE_ATTRIBUTES</target>
        </trans-unit>
        <trans-unit id="9c863a7d7985d101181c96996d3d7c58bcf237d3" translate="yes" xml:space="preserve">
          <source>XCODE_GENERATE_SCHEME</source>
          <target state="translated">XCODE_GENERATE_SCHEME</target>
        </trans-unit>
        <trans-unit id="e4cff556e29bb9741334153191e79a3da521d94d" translate="yes" xml:space="preserve">
          <source>XCODE_LAST_KNOWN_FILE_TYPE</source>
          <target state="translated">XCODE_LAST_KNOWN_FILE_TYPE</target>
        </trans-unit>
        <trans-unit id="64b8f36369ba1bbd601ae99d8c560f5c82706b3e" translate="yes" xml:space="preserve">
          <source>XCODE_PRODUCT_TYPE</source>
          <target state="translated">XCODE_PRODUCT_TYPE</target>
        </trans-unit>
        <trans-unit id="889390df4e0984ee0d1c22234df586a703db6630" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ADDRESS_SANITIZER</source>
          <target state="translated">XCODE_SCHEME_ADDRESS_SANITIZER</target>
        </trans-unit>
        <trans-unit id="e74601be34f0ce251e28d112697e7f39ffbcc37c" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN</source>
          <target state="translated">XCODE_SCHEME_ADDRESS_SANITIZER_USE_AFTER_RETURN</target>
        </trans-unit>
        <trans-unit id="949bcec198cce6b60d2fcdcf63108955f1a030c9" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ARGUMENTS</source>
          <target state="translated">XCODE_SCHEME_ARGUMENTS</target>
        </trans-unit>
        <trans-unit id="b35c0a4868666fecee6cecff4b102df13b12605b" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_DEBUG_AS_ROOT</source>
          <target state="translated">XCODE_SCHEME_DEBUG_AS_ROOT</target>
        </trans-unit>
        <trans-unit id="f7b5894b4e65837714aa9dce53a8a8a4e362abf7" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER</source>
          <target state="translated">XCODE_SCHEME_DISABLE_MAIN_THREAD_CHECKER</target>
        </trans-unit>
        <trans-unit id="db8591de0c939ffb088b523dc5ddebd4426d2fcb" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS</source>
          <target state="translated">XCODE_SCHEME_DYNAMIC_LIBRARY_LOADS</target>
        </trans-unit>
        <trans-unit id="e990a779c304630c2a961d5ba8e1c162fbea0497" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE</source>
          <target state="translated">XCODE_SCHEME_DYNAMIC_LINKER_API_USAGE</target>
        </trans-unit>
        <trans-unit id="04618a7637a9756c0666a6419b57292213270b6f" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ENVIRONMENT</source>
          <target state="translated">XCODE_SCHEME_ENVIRONMENT</target>
        </trans-unit>
        <trans-unit id="7207a9faa1ff025b77b9bfd91f4e8e5e2f6a08af" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_EXECUTABLE</source>
          <target state="translated">XCODE_SCHEME_EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="7fb3f1eea502ff217fd48ad63c5fbff25b1d4690" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_GUARD_MALLOC</source>
          <target state="translated">XCODE_SCHEME_GUARD_MALLOC</target>
        </trans-unit>
        <trans-unit id="1e61069ce5832fe2c740d66c414612b64595f846" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP</source>
          <target state="translated">XCODE_SCHEME_MAIN_THREAD_CHECKER_STOP</target>
        </trans-unit>
        <trans-unit id="c68fab0c6825900576ebf4b77d129d1b324a5663" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_MALLOC_GUARD_EDGES</source>
          <target state="translated">XCODE_SCHEME_MALLOC_GUARD_EDGES</target>
        </trans-unit>
        <trans-unit id="96cb563c38d8170a86658fb7081a64e044d4c61b" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_MALLOC_SCRIBBLE</source>
          <target state="translated">XCODE_SCHEME_MALLOC_SCRIBBLE</target>
        </trans-unit>
        <trans-unit id="26e6e81a014e4eb96b631e85c39e82ba5c4adf59" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_MALLOC_STACK</source>
          <target state="translated">XCODE_SCHEME_MALLOC_STACK</target>
        </trans-unit>
        <trans-unit id="0f312ea4bccae7bf4a487eeda31bd2b05fbc0bc7" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_THREAD_SANITIZER</source>
          <target state="translated">XCODE_SCHEME_THREAD_SANITIZER</target>
        </trans-unit>
        <trans-unit id="2f570e4dd561a376299a62d584cff78a29e9e007" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_THREAD_SANITIZER_STOP</source>
          <target state="translated">XCODE_SCHEME_THREAD_SANITIZER_STOP</target>
        </trans-unit>
        <trans-unit id="9f206283d37b0f2241461a07a2832c4b73126749" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER</source>
          <target state="translated">XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER</target>
        </trans-unit>
        <trans-unit id="d1f676d34544ecd7af78ba388bfb9e8ffee9b5cf" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP</source>
          <target state="translated">XCODE_SCHEME_UNDEFINED_BEHAVIOUR_SANITIZER_STOP</target>
        </trans-unit>
        <trans-unit id="cd75bf841b9d66ba6aa49824b0ba560bac33786d" translate="yes" xml:space="preserve">
          <source>XCODE_SCHEME_ZOMBIE_OBJECTS</source>
          <target state="translated">XCODE_SCHEME_ZOMBIE_OBJECTS</target>
        </trans-unit>
        <trans-unit id="4310227e04990a71deab062396407855068f90e4" translate="yes" xml:space="preserve">
          <source>XCODE_VERSION</source>
          <target state="translated">XCODE_VERSION</target>
        </trans-unit>
        <trans-unit id="7ca8673e37c99db50a2870f4d7922e00fe3fc899" translate="yes" xml:space="preserve">
          <source>XCTEST</source>
          <target state="translated">XCTEST</target>
        </trans-unit>
        <trans-unit id="e4ec18b906d14514b6ea33cda3c0449410915050" translate="yes" xml:space="preserve">
          <source>XMLRPC modules may be specified as components for this find module. Modules may be listed by running &amp;ldquo;xmlrpc-c-config&amp;rdquo;. Modules include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1820432a6f06824e3a9f41c5f5426eda5d6a54f5" translate="yes" xml:space="preserve">
          <source>Xalan libraries to be linked; note &lt;code&gt;XercesC_LIBRARIES&lt;/code&gt; is also required</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="656953987c8764d8d3e71acc04ce7b2fc782c6cb" translate="yes" xml:space="preserve">
          <source>Xalan release version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d36ae69ab9210cfc1f0a43d303686988db04f8" translate="yes" xml:space="preserve">
          <source>Xcode</source>
          <target state="translated">Xcode</target>
        </trans-unit>
        <trans-unit id="95eb061fc4e1ea5831a47f5c29035f5f44a777e4" translate="yes" xml:space="preserve">
          <source>Xcode compiler selection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9855407a077153887feb9105bf83af572d0a79" translate="yes" xml:space="preserve">
          <source>Xerces libraries to be linked</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b464a8263a55f69b033eb0b983d519ed4512f696" translate="yes" xml:space="preserve">
          <source>Xerces release version</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fff039853f5c2bbb8a28d056b579c7dcb7d137f" translate="yes" xml:space="preserve">
          <source>YES</source>
          <target state="translated">YES</target>
        </trans-unit>
        <trans-unit id="4146fb146136318ae506d705ae1141ef9838ed52" translate="yes" xml:space="preserve">
          <source>YES (*)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2fb53f0839fbed646f08c61af49b8722da8699" translate="yes" xml:space="preserve">
          <source>You can then continue and process these variables.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcf6df7d1bf3e413719a30b576132e6cac924b5a" translate="yes" xml:space="preserve">
          <source>You don&amp;rsquo;t need to include anything or link anything to use it.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="232cba15a4ae1818eab977ba83dd49b74af88351" translate="yes" xml:space="preserve">
          <source>You may a list of strings to &amp;ldquo;configure&amp;rdquo; via the &amp;ldquo;cacheArguments&amp;rdquo; key. These strings will be interpreted similar to command line arguments related to cache handling that are passed to the cmake command line client.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36f5bb403fdd11b4e202242e2e896e76eef76c55" translate="yes" xml:space="preserve">
          <source>You should add_definitions(${PNG_DEFINITIONS}) before compiling code that includes png library files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9acd1d781555673c187a6a5f879f3b5085ce49c" translate="yes" xml:space="preserve">
          <source>[ ] DCMTKConfig</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db3f08b84863f8dd90c9e8f9437cd960329dcb52" translate="yes" xml:space="preserve">
          <source>[ ] DCMTKConfig ..: Means that the version of DCMTK does NOT export a DCMTKConfig.cmake file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08c71e5afc287bab059cbe5262b0667972ff83bc" translate="yes" xml:space="preserve">
          <source>[CMake 2.8.10]: The CMake variable &lt;code&gt;OSG_DIR&lt;/code&gt; can now be used as well to influence detection, instead of needing to specify an environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dbcb1a4fa45566e0597a6d786e0cd5b903be7fd" translate="yes" xml:space="preserve">
          <source>[CMake 2.8.10]: The CMake variables OPENTHREADS_DIR or OSG_DIR can now be used as well to influence detection, instead of needing to specify an environment variable.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90d855d099e8412da1bf38c02af935a1b4ff857" translate="yes" xml:space="preserve">
          <source>[X] DCMTKConfig</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d2e3cfb46e6f63e5632463053c51a04101926e" translate="yes" xml:space="preserve">
          <source>[X] DCMTKConfig ..: Means that the version of DCMTK exports a DCMTKConfig.cmake file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="786bb327390d1f943535627c421b4561a8f55b0d" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;#v1-reply-file-reference&quot;&gt;v1 Reply File Reference&lt;/a&gt; to the corresponding reply file for the requested object kind and selected version.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d02474175932c264ef7dba446ecd70c6e7c130ea" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of header search paths to pass to the compiler.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f722ab3da4f0ec68a22e3209d2fd31017d0f833e" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of libraries to add to the link command. See policy &lt;a href=&quot;../policy/cmp0075#policy:CMP0075&quot; id=&quot;index-0-policy:CMP0075&quot;&gt;&lt;code&gt;CMP0075&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="862f56944b90a056c3a8c16f687a731ea999119b" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of macros to define (-DFOO=bar).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e03597f9707b456702258e2a554294b13241bf2c" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../manual/cmake-language.7#cmake-language-lists&quot;&gt;;-list&lt;/a&gt; of options to add to the link command.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cf2166e5dd75f66683bb665d60745c9bf9180f0" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-0-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; non C++ file (e.g. a &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-1-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt;&lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.ui&lt;/code&gt; file) or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01675c157059c7fdd272dd7b6990f9c02a4c6869" translate="yes" xml:space="preserve">
          <source>a &lt;a href=&quot;../prop_sf/generated#prop_sf:GENERATED&quot; id=&quot;index-2-prop_sf:GENERATED&quot;&gt;&lt;code&gt;GENERATED&lt;/code&gt;&lt;/a&gt; C++ file that isn&amp;rsquo;t recognized by &lt;a href=&quot;automoc#prop_tgt:AUTOMOC&quot; id=&quot;index-2-prop_tgt:AUTOMOC&quot;&gt;&lt;code&gt;AUTOMOC&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;autouic#prop_tgt:AUTOUIC&quot; id=&quot;index-2-prop_tgt:AUTOUIC&quot;&gt;&lt;code&gt;AUTOUIC&lt;/code&gt;&lt;/a&gt; because it&amp;rsquo;s skipped by &lt;a href=&quot;../prop_sf/skip_automoc#prop_sf:SKIP_AUTOMOC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOMOC&quot;&gt;&lt;code&gt;SKIP_AUTOMOC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/skip_autouic#prop_sf:SKIP_AUTOUIC&quot; id=&quot;index-0-prop_sf:SKIP_AUTOUIC&quot;&gt;&lt;code&gt;SKIP_AUTOUIC&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../prop_sf/skip_autogen#prop_sf:SKIP_AUTOGEN&quot; id=&quot;index-0-prop_sf:SKIP_AUTOGEN&quot;&gt;&lt;code&gt;SKIP_AUTOGEN&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../policy/cmp0071#policy:CMP0071&quot; id=&quot;index-0-policy:CMP0071&quot;&gt;&lt;code&gt;CMP0071&lt;/code&gt;&lt;/a&gt; or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491d235f2bd8a701dbca605edfee1e9b0b1cb6fa" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;foo.dot.&amp;lt;target&amp;gt;.dependers&lt;/code&gt; file, showing which other targets depend on the respective target</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc76a1dcfce74e82473dedde7f7063af6b4bd719" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;foo.dot.&amp;lt;target&amp;gt;&lt;/code&gt; file for each target, file showing on which other targets the respective target depends</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c1027f40dc6bf92b9344e25d04f1963e649c1e4" translate="yes" xml:space="preserve">
          <source>a &lt;code&gt;foo.dot&lt;/code&gt; file showing all dependencies in the project</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c8a7d432696d8ab724557bc3c0b84d3b380fb7" translate="yes" xml:space="preserve">
          <source>a JSON array whose elements are each one of the above.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d6e78e25806010247a5e9bd9201e63b2ac6aa0" translate="yes" xml:space="preserve">
          <source>a JSON integer specifying a (non-negative) major version number, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68bdfc79ab8afb093f16f1d4f56ea8c64358a2ae" translate="yes" xml:space="preserve">
          <source>a JSON object containing &lt;code&gt;major&lt;/code&gt; and (optionally) &lt;code&gt;minor&lt;/code&gt; members specifying non-negative integer version components, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fac5fc763fe44a71760a85d2e7ed7714b8afd29" translate="yes" xml:space="preserve">
          <source>a JSON object with a single &lt;code&gt;error&lt;/code&gt; member containing a string with an error message, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76a7f1ceeb6a3743e08852def3e03b43f3dfa70" translate="yes" xml:space="preserve">
          <source>a Qt macro from &lt;a href=&quot;automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-0-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b31b066a5620f7c7c743d3385456d077411a9bb0" translate="yes" xml:space="preserve">
          <source>a Qt macro from &lt;a href=&quot;automoc_macro_names#prop_tgt:AUTOMOC_MACRO_NAMES&quot; id=&quot;index-1-prop_tgt:AUTOMOC_MACRO_NAMES&quot;&gt;&lt;code&gt;AUTOMOC_MACRO_NAMES&lt;/code&gt;&lt;/a&gt;,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7160ed2e29306eba9b5878a5fb6fe8eebaf1b87" translate="yes" xml:space="preserve">
          <source>a cache entry of the specified name does not exist at all, or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61ccd8d405cd02d1dde6af2328c713763f181baf" translate="yes" xml:space="preserve">
          <source>a cache entry of the specified name exists but has not been given a type (e.g. via &lt;code&gt;-D&amp;lt;name&amp;gt;=ON&lt;/code&gt; on the command line).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a7faa9f70a36c21519b24f04232dd314052727" translate="yes" xml:space="preserve">
          <source>a file that isn&amp;rsquo;t in the origin target&amp;rsquo;s sources</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6dd84624d0a9d2efea462a1d16652bc9e5fb88" translate="yes" xml:space="preserve">
          <source>a list of additional link dependencies. The target links to &lt;code&gt;libmex&lt;/code&gt; and &lt;code&gt;libmx&lt;/code&gt; by default.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f4735c4599eaefe613c2d817254c12d7d4e5d8" translate="yes" xml:space="preserve">
          <source>a list of additional option in order to run Matlab from the command line. &lt;code&gt;-nosplash -nodesktop -nodisplay&lt;/code&gt; are always added.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="940585ae03cfc53a1ee1ee927d509d2cab1724e3" translate="yes" xml:space="preserve">
          <source>a list of paths to add to the Matlab path prior to running the unit test.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0020e65c3c5b962eabe73b98cdef010deb68602" translate="yes" xml:space="preserve">
          <source>a private header with the same base name and a &lt;code&gt;_p&lt;/code&gt; suffix (&lt;code&gt;&amp;lt;source_base&amp;gt;_p.&amp;lt;header_extention&amp;gt;&lt;/code&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3679c4e7e4ae3a2229a2805c3cb8ba6530fc59fb" translate="yes" xml:space="preserve">
          <source>a regular header with the same base name (&lt;code&gt;&amp;lt;source_base&amp;gt;.&amp;lt;header_extention&amp;gt;&lt;/code&gt;) and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51717226ed8c98ab80fd2bab212d44ceb1438b3f" translate="yes" xml:space="preserve">
          <source>absolute path to the location where the data is stored on-device</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfaecb5d6854b5f1fdc6bc9886477094e366307a" translate="yes" xml:space="preserve">
          <source>absolute path to the root directory of the on-device test location</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01683d1680a9e321039e3703b959359ddd4a8a8a" translate="yes" xml:space="preserve">
          <source>absolute path where the data files are expected to be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe2ef2826435669274dac1d91a5d7b4033658350" translate="yes" xml:space="preserve">
          <source>absolute path where the libraries are expected to be</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01213c78479a1946f8d27956cd0abca915892382" translate="yes" xml:space="preserve">
          <source>add_compile_definitions</source>
          <target state="translated">add_compile_definitions</target>
        </trans-unit>
        <trans-unit id="032fd07275a6fa18e4fbd02ac434ae4ec122bab6" translate="yes" xml:space="preserve">
          <source>add_compile_definitions()</source>
          <target state="translated">add_compile_definitions()</target>
        </trans-unit>
        <trans-unit id="e526028417358ecedee8684cab23226755d20527" translate="yes" xml:space="preserve">
          <source>add_compile_options</source>
          <target state="translated">add_compile_options</target>
        </trans-unit>
        <trans-unit id="c67e522fc6963fe850998d446ac931ea3f0f5d37" translate="yes" xml:space="preserve">
          <source>add_compile_options()</source>
          <target state="translated">add_compile_options()</target>
        </trans-unit>
        <trans-unit id="39199f5f3a9ab60f3d01f48d8a6ba535124c29e2" translate="yes" xml:space="preserve">
          <source>add_custom_command</source>
          <target state="translated">add_custom_command</target>
        </trans-unit>
        <trans-unit id="49639d2cae441b5bc5740e898ec6ce93915eaa9e" translate="yes" xml:space="preserve">
          <source>add_custom_command()</source>
          <target state="translated">add_custom_command()</target>
        </trans-unit>
        <trans-unit id="0d796f30984bc499dde8a886268e20865d00a82d" translate="yes" xml:space="preserve">
          <source>add_custom_target</source>
          <target state="translated">add_custom_target</target>
        </trans-unit>
        <trans-unit id="6e40f9fc29641416ccc92dc534d9e5e2008038ca" translate="yes" xml:space="preserve">
          <source>add_custom_target()</source>
          <target state="translated">add_custom_target()</target>
        </trans-unit>
        <trans-unit id="acaca10b3af099b572965eee14e56699091ce646" translate="yes" xml:space="preserve">
          <source>add_definitions</source>
          <target state="translated">add_definitions</target>
        </trans-unit>
        <trans-unit id="a986e92e180384d55b8171f21b1009f1c3bb6d40" translate="yes" xml:space="preserve">
          <source>add_definitions()</source>
          <target state="translated">add_definitions()</target>
        </trans-unit>
        <trans-unit id="68571758925d73076c165034e6d63b73e1c18a0f" translate="yes" xml:space="preserve">
          <source>add_dependencies</source>
          <target state="translated">add_dependencies</target>
        </trans-unit>
        <trans-unit id="3296f5516068c4a9f88173114de082902f7e5a05" translate="yes" xml:space="preserve">
          <source>add_dependencies()</source>
          <target state="translated">add_dependencies()</target>
        </trans-unit>
        <trans-unit id="7589cceab45b96e7a1605c11f91f4a8e6b3f9c4b" translate="yes" xml:space="preserve">
          <source>add_executable</source>
          <target state="translated">add_executable</target>
        </trans-unit>
        <trans-unit id="e5368a85e38d69928a279808d596952e58e2ad8e" translate="yes" xml:space="preserve">
          <source>add_executable()</source>
          <target state="translated">add_executable()</target>
        </trans-unit>
        <trans-unit id="b5aaf26c3418e8ae7a28505a779bbbe93ca4e04d" translate="yes" xml:space="preserve">
          <source>add_library</source>
          <target state="translated">add_library</target>
        </trans-unit>
        <trans-unit id="71d86799367064b55c54776185a9fa95324d5115" translate="yes" xml:space="preserve">
          <source>add_library()</source>
          <target state="translated">add_library()</target>
        </trans-unit>
        <trans-unit id="7c62dbfb90c14a6905ec3929df7bd0eb74e65846" translate="yes" xml:space="preserve">
          <source>add_link_options</source>
          <target state="translated">add_link_options</target>
        </trans-unit>
        <trans-unit id="dc29a515d0d51b44fed9392808da3a3a324c31b2" translate="yes" xml:space="preserve">
          <source>add_link_options()</source>
          <target state="translated">add_link_options()</target>
        </trans-unit>
        <trans-unit id="698493212da1d2ea81d80d21e24c9356d31ae444" translate="yes" xml:space="preserve">
          <source>add_subdirectory</source>
          <target state="translated">add_subdirectory</target>
        </trans-unit>
        <trans-unit id="d1a4bc25ff870f9dfa35d133938b4a185109ea09" translate="yes" xml:space="preserve">
          <source>add_subdirectory()</source>
          <target state="translated">add_subdirectory()</target>
        </trans-unit>
        <trans-unit id="fdf38772a46072339beef8e533961e34fc50ce63" translate="yes" xml:space="preserve">
          <source>add_test</source>
          <target state="translated">add_test</target>
        </trans-unit>
        <trans-unit id="c651160988d08023a6f520a50fc7ff46c5a69b6a" translate="yes" xml:space="preserve">
          <source>add_test()</source>
          <target state="translated">add_test()</target>
        </trans-unit>
        <trans-unit id="c518a7b1798ece4eb32775c6eb8cda87079236b5" translate="yes" xml:space="preserve">
          <source>additional file dependencies detected by filters defined in &lt;a href=&quot;automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-0-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a31c43bbb4d0ef967a0b1e8832a86df2b84b389e" translate="yes" xml:space="preserve">
          <source>additional file dependencies detected by filters defined in &lt;a href=&quot;automoc_depend_filters#prop_tgt:AUTOMOC_DEPEND_FILTERS&quot; id=&quot;index-1-prop_tgt:AUTOMOC_DEPEND_FILTERS&quot;&gt;&lt;code&gt;AUTOMOC_DEPEND_FILTERS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc3d34f03a3d9fb149f10f41bd3c04c4080ee2b6" translate="yes" xml:space="preserve">
          <source>additional file dependencies from the &lt;code&gt;FILE&lt;/code&gt; argument of a &lt;code&gt;Q_PLUGIN_METADATA&lt;/code&gt; macro and</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08b76f6e81365aec9be17d07cb10bb060383a3d1" translate="yes" xml:space="preserve">
          <source>additional user defined dependencies from &lt;a href=&quot;#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-1-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530b50cea444a13c47368290dc0327106b1a9b67" translate="yes" xml:space="preserve">
          <source>additional user defined dependencies from &lt;a href=&quot;autogen_target_depends#prop_tgt:AUTOGEN_TARGET_DEPENDS&quot; id=&quot;index-0-prop_tgt:AUTOGEN_TARGET_DEPENDS&quot;&gt;&lt;code&gt;AUTOGEN_TARGET_DEPENDS&lt;/code&gt;&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ffd530768aa2f0e8de0b38f86847a1afa99fef4" translate="yes" xml:space="preserve">
          <source>additional versions of Matlab for the automatic retrieval of the installed versions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cc28921af521328bd1acca2976e3a0c153f8929" translate="yes" xml:space="preserve">
          <source>adds a Matlab unit test file as a test to the project.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bac7963ec468ad4832498742d61884014a6b7c" translate="yes" xml:space="preserve">
          <source>adds a target compiling a MEX file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e8c9f962ca5ebee28a51f7322362bd55bbaed5" translate="yes" xml:space="preserve">
          <source>all compilers and versions listed above for C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ed1ff4f28bc9ec48dcd1a10591fc1ca58965ec6" translate="yes" xml:space="preserve">
          <source>all compilers and versions listed above with only meta-features for C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae15626f47aeb37756ba9af765b58c2d7d991c5" translate="yes" xml:space="preserve">
          <source>all other linker flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a68035d397eeae20e1c440564af0f91dfba726" translate="yes" xml:space="preserve">
          <source>all required cflags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92cd51fd70a40188437082ff58ea27a3ec973d3b" translate="yes" xml:space="preserve">
          <source>all required linker flags</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3403d48c07444118f5e2931ffe57f990c879be" translate="yes" xml:space="preserve">
          <source>allowing the dependency to be followed.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d91385b21747d29f9d3886644cd87ba92a8865b5" translate="yes" xml:space="preserve">
          <source>also defined, but not for general use are</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1c2725633a3d391b8da6430ea8e81e4d9c0204" translate="yes" xml:space="preserve">
          <source>and adds these to the scan list.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9193c1368551663afd9de0f27d11409b88a4158" translate="yes" xml:space="preserve">
          <source>and afterwards in the target&amp;rsquo;s &lt;a href=&quot;include_directories#prop_tgt:INCLUDE_DIRECTORIES&quot; id=&quot;index-0-prop_tgt:INCLUDE_DIRECTORIES&quot;&gt;&lt;code&gt;INCLUDE_DIRECTORIES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7360be2bf957109b50ecf494d59c9a7fb7929f6" translate="yes" xml:space="preserve">
          <source>and also the following more fine grained variables and targets:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fa367462f9d977997a66bd4fc772d77c027b109" translate="yes" xml:space="preserve">
          <source>and is evaluated according to the &lt;code&gt;if(&amp;lt;variable&amp;gt;)&lt;/code&gt; case documented above. The result is &lt;code&gt;OFF&lt;/code&gt; which is false. However, if we remove the &lt;code&gt;${}&lt;/code&gt; from the example then the command sees</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f3522d8409fab2c8bd7a9a935e5958b1545b923" translate="yes" xml:space="preserve">
          <source>and not</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbb75902f3df459c29357ba58a727b125ccd2b88" translate="yes" xml:space="preserve">
          <source>and saves search results persistently in CMake cache entries:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f042514a0306d806c7d2aa1069fb0ede936bdcb" translate="yes" xml:space="preserve">
          <source>and so on. However, it is strongly recommended to stay with the case chosen in the function definition. Typically functions use all-lowercase names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ff58e8fc5ce0902272c2fd5111c69bfb6766b18" translate="yes" xml:space="preserve">
          <source>and so on. However, it is strongly recommended to stay with the case chosen in the macro definition. Typically macros use all-lowercase names.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c9d3794fef35df6e9d6ecc4b4799298cbf7b2a4" translate="yes" xml:space="preserve">
          <source>and the corresponding package configuration file is loaded. When multiple package configuration files are available whose version files claim compatibility with the version requested it is unspecified which one is chosen: unless the variable &lt;a href=&quot;../variable/cmake_find_package_sort_order#variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot; id=&quot;index-0-variable:CMAKE_FIND_PACKAGE_SORT_ORDER&quot;&gt;&lt;code&gt;CMAKE_FIND_PACKAGE_SORT_ORDER&lt;/code&gt;&lt;/a&gt; is set no attempt is made to choose a highest or closest version number.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8addf946d7b3a77247de80e0b9ee6e8bbf8ce04" translate="yes" xml:space="preserve">
          <source>and then it is used as an argument to &lt;a href=&quot;target_link_libraries#command:target_link_libraries&quot; id=&quot;index-3-command:target_link_libraries&quot;&gt;&lt;code&gt;target_link_libraries()&lt;/code&gt;&lt;/a&gt; like any other target.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b089dd2372d8afec13a095574408e30e1b34a883" translate="yes" xml:space="preserve">
          <source>and you do:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5230bf3ac1fc697c044aa12dc9e2fb2c6ea3dcf" translate="yes" xml:space="preserve">
          <source>and:</source>
          <target state="translated">and:</target>
        </trans-unit>
        <trans-unit id="20279e4d619af4def87a78e7b820dbcc6a05b84e" translate="yes" xml:space="preserve">
          <source>another example is the Java OEM, with: &lt;code&gt;Java_VERSION_STRING = 1.8.0-oem&lt;/code&gt; and &lt;code&gt;Java_VERSION = 1.8.0&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9a056406face8727f9575e31b25ca4700efb01" translate="yes" xml:space="preserve">
          <source>appears to the if command as</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fdbe48e43c03b67ab41ce0506c0debe6e5f327a3" translate="yes" xml:space="preserve">
          <source>appletvos</source>
          <target state="translated">appletvos</target>
        </trans-unit>
        <trans-unit id="19acfe99039c1d6995c874793726a5c731f43311" translate="yes" xml:space="preserve">
          <source>appletvsimulator</source>
          <target state="translated">appletvsimulator</target>
        </trans-unit>
        <trans-unit id="50cbf829b3847caa8a2c634665f40e8463c2d3bf" translate="yes" xml:space="preserve">
          <source>are each pairs of package configuration files and corresponding package version files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70cecab9cd4818e63ae7cf4036e7b9491841ec6" translate="yes" xml:space="preserve">
          <source>as a &lt;code&gt;REG_SZ&lt;/code&gt; value, with arbitrary name, that specifies the directory containing the package configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36c0426a23bd6fbfe8e8abefdcbe95266f1704a" translate="yes" xml:space="preserve">
          <source>as a file, with arbitrary name, whose content specifies the directory containing the package configuration file.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d104714e2aaf5cd05b04008eae2573906bfce01a" translate="yes" xml:space="preserve">
          <source>as the first non space string after a &lt;code&gt;{&lt;/code&gt; on a new line,</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3731e5a8c0e58e457edbbe2472ea081a6a231e1a" translate="yes" xml:space="preserve">
          <source>as the first non space string on a new line or</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542381ec09bc59f66adcc80c77838511ced1d306" translate="yes" xml:space="preserve">
          <source>aux_source_directory</source>
          <target state="translated">aux_source_directory</target>
        </trans-unit>
        <trans-unit id="e14e9affb3f305c4346542771f33b48e984009e5" translate="yes" xml:space="preserve">
          <source>aux_source_directory()</source>
          <target state="translated">aux_source_directory()</target>
        </trans-unit>
        <trans-unit id="b9e2c5c9b81ab1605f269dab3ed81a8dd42016cb" translate="yes" xml:space="preserve">
          <source>bare</source>
          <target state="translated">bare</target>
        </trans-unit>
        <trans-unit id="9d09817daa855023683e74ec495c1bd49eb50eeb" translate="yes" xml:space="preserve">
          <source>before calling &lt;code&gt;find_package&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="484d524b4278fba4b84ad35364f2fcc8eca0a075" translate="yes" xml:space="preserve">
          <source>before including FortranCInterface to specify manglings of the symbols &lt;code&gt;MySub&lt;/code&gt;, &lt;code&gt;My_Sub&lt;/code&gt;, &lt;code&gt;MyModule:MySub&lt;/code&gt;, and &lt;code&gt;My_Module:My_Sub&lt;/code&gt;. For example, the code:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f9cac8dbc4c67a388b8379dcc126c90c7c5e72a" translate="yes" xml:space="preserve">
          <source>break</source>
          <target state="translated">break</target>
        </trans-unit>
        <trans-unit id="0ca944ad9e57dbb30f37b9c4be42d0106780af3e" translate="yes" xml:space="preserve">
          <source>break()</source>
          <target state="translated">break()</target>
        </trans-unit>
        <trans-unit id="f880f76b3de299a3f5da441376afba5af6426e4a" translate="yes" xml:space="preserve">
          <source>build_command</source>
          <target state="translated">build_command</target>
        </trans-unit>
        <trans-unit id="ad0c696a472de73e71b1f431ad8762520e5dae0b" translate="yes" xml:space="preserve">
          <source>build_command()</source>
          <target state="translated">build_command()</target>
        </trans-unit>
        <trans-unit id="6dd3929aad3cc1a1285ed8b35edd9a8da4300064" translate="yes" xml:space="preserve">
          <source>build_name</source>
          <target state="translated">build_name</target>
        </trans-unit>
        <trans-unit id="a1fcaa56e5849b0abfaa0bb8843f86f59ca1b821" translate="yes" xml:space="preserve">
          <source>build_name()</source>
          <target state="translated">build_name()</target>
        </trans-unit>
        <trans-unit id="4a27a673fc9425b01656f6740dcf4d6d694e7654" translate="yes" xml:space="preserve">
          <source>can be embedded in &lt;code&gt;top-build-dir/build.ninja&lt;/code&gt; with a directive like this:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b83f11af63893b668cbc472638ee95ecebe0507" translate="yes" xml:space="preserve">
          <source>can be invoked through any of</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2a7a6188b61386e402f148c1c5944e10ffa83ef" translate="yes" xml:space="preserve">
          <source>ccmake(1)</source>
          <target state="translated">ccmake(1)</target>
        </trans-unit>
        <trans-unit id="2496d5e68bb433206dc46044228ec7a71fe7d5d6" translate="yes" xml:space="preserve">
          <source>check if the compiler supports std:: on stl classes</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82d5e3be9ea975d06c9defb46209141bc192d0a5" translate="yes" xml:space="preserve">
          <source>check if the compiler supports the standard ANSI iostream header (without the .h)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="221974ab90aad4d170e2d7bacba91a9492cb117f" translate="yes" xml:space="preserve">
          <source>check if the compiler supports the standard ANSI sstream header</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80d692cec589b11695f8d2db65caeb1643c3798" translate="yes" xml:space="preserve">
          <source>cmake(1)</source>
          <target state="translated">cmake(1)</target>
        </trans-unit>
        <trans-unit id="4e1b4d7b28befad7351e315fdad0927e3cf66053" translate="yes" xml:space="preserve">
          <source>cmake-buildsystem(7)</source>
          <target state="translated">cmake-buildsystem(7)</target>
        </trans-unit>
        <trans-unit id="4856dba83044ed3f89dc37165c470db84e0e0086" translate="yes" xml:space="preserve">
          <source>cmake-commands(7)</source>
          <target state="translated">cmake-commands(7)</target>
        </trans-unit>
        <trans-unit id="c931c76420ea36ab1d36fa0f8bf3d07d55ea2df3" translate="yes" xml:space="preserve">
          <source>cmake-compile-features(7)</source>
          <target state="translated">cmake-compile-features(7)</target>
        </trans-unit>
        <trans-unit id="4630a7609e6efb50dd573faf020165ba0bcf4005" translate="yes" xml:space="preserve">
          <source>cmake-developer(7)</source>
          <target state="translated">cmake-developer(7)</target>
        </trans-unit>
        <trans-unit id="cf8999d4d9c266082a08c98ae6507ee1cc1bc93c" translate="yes" xml:space="preserve">
          <source>cmake-env-variables(7)</source>
          <target state="translated">cmake-env-variables(7)</target>
        </trans-unit>
        <trans-unit id="08325074e99ca860fbcfb306d33c15e9132bac43" translate="yes" xml:space="preserve">
          <source>cmake-file-api(7)</source>
          <target state="translated">cmake-file-api(7)</target>
        </trans-unit>
        <trans-unit id="efe2f37e69f8d77aa4de09d507447b9f7e3b87e8" translate="yes" xml:space="preserve">
          <source>cmake-generator-expressions(7)</source>
          <target state="translated">cmake-generator-expressions(7)</target>
        </trans-unit>
        <trans-unit id="3dcb4b3adb10a182a5486ef124ce2c116c5b9b34" translate="yes" xml:space="preserve">
          <source>cmake-generators(7)</source>
          <target state="translated">cmake-generators(7)</target>
        </trans-unit>
        <trans-unit id="c3087f83e2ed2c9c5a7b5770c0e6c7072e32c54a" translate="yes" xml:space="preserve">
          <source>cmake-gui(1)</source>
          <target state="translated">cmake-gui(1)</target>
        </trans-unit>
        <trans-unit id="977bfffa8761d1bee86d5202d01b7c215fb0c04d" translate="yes" xml:space="preserve">
          <source>cmake-language(7)</source>
          <target state="translated">cmake-language(7)</target>
        </trans-unit>
        <trans-unit id="fece6134eb8869d4dec001d05764e3c7dd77f435" translate="yes" xml:space="preserve">
          <source>cmake-modules(7)</source>
          <target state="translated">cmake-modules(7)</target>
        </trans-unit>
        <trans-unit id="485f3de800da6490cd0b261dfd374107fd381979" translate="yes" xml:space="preserve">
          <source>cmake-packages(7)</source>
          <target state="translated">cmake-packages(7)</target>
        </trans-unit>
        <trans-unit id="a1f28a950ac3cfdd4431997323565f76792eab31" translate="yes" xml:space="preserve">
          <source>cmake-policies(7)</source>
          <target state="translated">cmake-policies(7)</target>
        </trans-unit>
        <trans-unit id="d9144c7fc3a7749a858093bd16aa5684cbdefc37" translate="yes" xml:space="preserve">
          <source>cmake-properties(7)</source>
          <target state="translated">cmake-properties(7)</target>
        </trans-unit>
        <trans-unit id="3ef79600dca574725577caf6ffd784cc389cdf7f" translate="yes" xml:space="preserve">
          <source>cmake-qt(7)</source>
          <target state="translated">cmake-qt(7)</target>
        </trans-unit>
        <trans-unit id="22c2f923cf707906b9986635239d3b04bc30bef6" translate="yes" xml:space="preserve">
          <source>cmake-server(7)</source>
          <target state="translated">cmake-server(7)</target>
        </trans-unit>
        <trans-unit id="eec0fd32832136f7fd5fb781352080b27df1266b" translate="yes" xml:space="preserve">
          <source>cmake-toolchains(7)</source>
          <target state="translated">cmake-toolchains(7)</target>
        </trans-unit>
        <trans-unit id="29030cb47a22e2d4d018770a8b16cde4e590d3dc" translate="yes" xml:space="preserve">
          <source>cmake-variables(7)</source>
          <target state="translated">cmake-variables(7)</target>
        </trans-unit>
        <trans-unit id="b0c48b8c6e019affd7b50e79f51ec57bf89f3bc2" translate="yes" xml:space="preserve">
          <source>cmake_host_system_information</source>
          <target state="translated">cmake_host_system_information</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
