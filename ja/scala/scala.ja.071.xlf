<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="3aecdbd9cf2c429ea63124d490174b3509433979" translate="yes" xml:space="preserve">
          <source>implicit def short2int(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532d442eb3179b65f38ebab2af2813419c39f0ee" translate="yes" xml:space="preserve">
          <source>implicit def short2long(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5feb62aa931f3fca1eb7b8860464fdc566e0b058" translate="yes" xml:space="preserve">
          <source>implicit def shortArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3257247903b4a90ba6e480a8ff027487b8f390e5" translate="yes" xml:space="preserve">
          <source>implicit def shortWrapper(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.runtime.RichShort&quot;&gt;RichShort&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43214ceaf0b1ba991acbbfa248dd5d6793207111" translate="yes" xml:space="preserve">
          <source>implicit def sortedMapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d93c638bd1ad0f86183338c195a56d2d593c1e9" translate="yes" xml:space="preserve">
          <source>implicit def sortedMapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d80b3bb9bf819855abc2c60e9955d8f63da034" translate="yes" xml:space="preserve">
          <source>implicit def sortedMapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0876a5a4cf8e8f7be1c01fd9ece53df72ae3be4d" translate="yes" xml:space="preserve">
          <source>implicit def sortedMapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b742e1976f0df4fdc03fb3d0f8108721fcb8ed6" translate="yes" xml:space="preserve">
          <source>implicit def sortedMapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc0119d539f1501b7b588d413c992fe6c2de05af" translate="yes" xml:space="preserve">
          <source>implicit def sortedMapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ff02e371a2375248d7c2bee8998c4797d5f7891" translate="yes" xml:space="preserve">
          <source>implicit def sortedMapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.SortedMapFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2ca88f49b0f70015fdde7986632795080da4c2" translate="yes" xml:space="preserve">
          <source>implicit def sortedMapFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.sortedMapFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13207cd0864d08a7fe079b558630cdc0a3663eb2" translate="yes" xml:space="preserve">
          <source>implicit def sortedSetEquiv[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../collection/sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.ExtraImplicits.sortedSetEquiv.CC.X&quot;&gt;X&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;eqv&quot;&gt;eqv: &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.ExtraImplicits.sortedSetEquiv.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;span name=&quot;scala.math.Equiv.ExtraImplicits.sortedSetEquiv.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.math.Equiv.ExtraImplicits.sortedSetEquiv.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e24325c94461e8931c82a78c088d00fe594f46d" translate="yes" xml:space="preserve">
          <source>implicit def sortedSetOrdering[&lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;X&quot;&gt;X&lt;/span&gt;] &amp;lt;: &lt;a href=&quot;../collection/sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.ExtraImplicits.sortedSetOrdering.CC.X&quot;&gt;X&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.ExtraImplicits.sortedSetOrdering.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.ExtraImplicits.sortedSetOrdering.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.math.Ordering.ExtraImplicits.sortedSetOrdering.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3352a6c9dc9c65ca3750eeff45b45b828ec6848f" translate="yes" xml:space="preserve">
          <source>implicit def specificIterableFactory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65f62ed5af40fd1c7f11191c8ae9379e2755bea5" translate="yes" xml:space="preserve">
          <source>implicit def specificIterableFactory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1afc968bda5c282a8b70f13325f0e190bfe16046" translate="yes" xml:space="preserve">
          <source>implicit def specificIterableFactory: &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a0709576344429b0a2e9d9e8e8a36145586d199" translate="yes" xml:space="preserve">
          <source>implicit def specificIterableFactory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc12975cd6f2959659a4b9804f61561f0f88c65c" translate="yes" xml:space="preserve">
          <source>implicit def specificIterableFactory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6715385b532d1d01b21daf043e6233e6220f6068" translate="yes" xml:space="preserve">
          <source>implicit def specificIterableFactory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33dbd2678ac77e04acae4d5c1c957279a046e251" translate="yes" xml:space="preserve">
          <source>implicit def specificIterableFactory: &lt;a href=&quot;collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;, &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c5ba12cb9747071a846096e74efd3fda4a3de2f" translate="yes" xml:space="preserve">
          <source>implicit def specificIterableFactory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e9dc5660dff7aad36ddb5299fd3c16a4d862b2" translate="yes" xml:space="preserve">
          <source>implicit def specificIterableFactory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c125ef8a7476080a0f0ee6fec68f79b00eece29f" translate="yes" xml:space="preserve">
          <source>implicit def string2codec(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f434165ee053af2ed8ed1a789c4f2a76f0a9cbc3" translate="yes" xml:space="preserve">
          <source>implicit def stringSeqToProcess(&lt;span name=&quot;command&quot;&gt;command: &lt;a href=&quot;../../collection/seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;collection.Seq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67118b46038aeb212a0c52a6f1c9b483c4c184d4" translate="yes" xml:space="preserve">
          <source>implicit def stringToProcess(&lt;span name=&quot;command&quot;&gt;command: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc921a505d7b5cdceb5080496627b5811027ec7" translate="yes" xml:space="preserve">
          <source>implicit def systemPropertiesToCompanion(&lt;span name=&quot;p&quot;&gt;p: &lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;systemproperties%24&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de77db180e8552ed85cf7b8f26dd635539860fed" translate="yes" xml:space="preserve">
          <source>implicit def throwableSubtypeToCatcher[&lt;span name=&quot;Ex&quot;&gt;Ex &amp;lt;: &lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.throwableSubtypeToCatcher.Ex&quot;&gt;Ex&lt;/span&gt;, &lt;span name=&quot;scala.util.control.Exception.throwableSubtypeToCatcher.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.throwableSubtypeToCatcher.Ex&quot;&gt;Ex&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;Catcher&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.throwableSubtypeToCatcher.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57cf787e460affc885504d39ea7c8b02736155d0" translate="yes" xml:space="preserve">
          <source>implicit def toBuildFrom[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.toBuildFrom.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableFactory.toBuildFrom.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.toBuildFrom.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.toBuildFrom.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edea11a929d9de4426b4fed80de0a7d94c955d30" translate="yes" xml:space="preserve">
          <source>implicit def toBuildFrom[&lt;span name=&quot;Ev&quot;&gt;Ev[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.toBuildFrom.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.toBuildFrom.Ev&quot;&gt;Ev&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.toBuildFrom.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.toBuildFrom.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.toBuildFrom.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.toBuildFrom.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.toBuildFrom.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43ba3d09945a411085ce62df5cc72f9b1c08e65b" translate="yes" xml:space="preserve">
          <source>implicit def toBuildFrom[&lt;span name=&quot;K&quot;&gt;K &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;anyrefmap%24&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;, (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.toBuildFrom.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.toBuildFrom.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.toBuildFrom.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.toBuildFrom.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b77a18a9c4348a4a4a6934b1dd98b42b3e19c8f" translate="yes" xml:space="preserve">
          <source>implicit def toBuildFrom[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;, &lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;, (&lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.toBuildFrom.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0110eb822c4ff3ee1aaf92a944814097c22fa45" translate="yes" xml:space="preserve">
          <source>implicit def toBuildFrom[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;, &lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.toBuildFrom.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.toBuildFrom.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;, (&lt;span name=&quot;scala.collection.SortedMapFactory.toBuildFrom.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.toBuildFrom.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.SortedMapFactory.toBuildFrom.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.toBuildFrom.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.toBuildFrom.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db0635ccc09054c9d3cd56f7b70777d2d3a8d9f0" translate="yes" xml:space="preserve">
          <source>implicit def toBuildFrom[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;intmap%24&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;, (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.toBuildFrom.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.toBuildFrom.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b25d8bf910a417fe6ade980764d2fcf3cee38f4" translate="yes" xml:space="preserve">
          <source>implicit def toBuildFrom[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;longmap%24&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;, (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.toBuildFrom.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.toBuildFrom.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bffb7da48b7028e546ea33ce94bb829ef94bb8" translate="yes" xml:space="preserve">
          <source>implicit def toBuildFrom[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;longmap%24&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;, (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.toBuildFrom.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.toBuildFrom.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a37c1147b5216d5a50fe18b5da14b5f7f4ffcae" translate="yes" xml:space="preserve">
          <source>implicit def toDeferrer[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;l&quot;&gt;l: =&amp;gt; &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.toDeferrer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist%24%24deferrer&quot; id=&quot;scala.collection.immutable.LazyList.Deferrer&quot; name=&quot;scala.collection.immutable.LazyList.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.toDeferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17bcc5cda711c19b06de9198ce9d1583bb6693ae" translate="yes" xml:space="preserve">
          <source>implicit def toDeferrer[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;l&quot;&gt;l: =&amp;gt; &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.toDeferrer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream%24%24deferrer&quot; id=&quot;scala.collection.immutable.Stream.Deferrer&quot; name=&quot;scala.collection.immutable.Stream.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.toDeferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854719c02b637292770ef7013e89bb8984bd5b80" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;C&quot;&gt;C&lt;/span&gt;](&lt;span name=&quot;sa&quot;&gt;sa: &lt;a href=&quot;accumulator%24&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt;.type&lt;/span&gt;)(implicit &lt;span name=&quot;canAccumulate&quot;&gt;canAccumulate: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.toFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.toFactory.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.toFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.toFactory.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4efb31bdeb41eb537abb86d1b74fcaffaa21e8d" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.toFactory.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.toFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactory.toFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableFactory.toFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d431194d247ff28defce9a9f2daf6a757c09aa5" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;dummy&quot;&gt;dummy: &lt;a href=&quot;array%24&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;.type&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.Array.toFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.Array.toFactory.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.Array.toFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c5a1400221df2f7b345b9d03d7f20bf2607f707" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;Ev&quot;&gt;Ev[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.toFactory.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.toFactory.Ev&quot;&gt;Ev&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;scala.collection.EvidenceIterableFactory.toFactory.Ev&quot;&gt;Ev&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.toFactory.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.toFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.toFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.toFactory.A&quot;&gt;A&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4f1d1ddcea0025f66e08159bd874e2163ee2a17" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;K&quot;&gt;K &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;dummy&quot;&gt;dummy: &lt;a href=&quot;anyrefmap%24&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.toFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.toFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.toFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.toFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ac8bd7c8f9ac2a959f416c21a7d2a6546b4bda5" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;, &lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.toFactory.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactory.toFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.toFactory.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.MapFactory.toFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapFactory.toFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactory.toFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97897c1c2d902b09a84836b276ba48b17024babb" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;CC&quot;&gt;CC[&lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;, &lt;span name=&quot;_&quot;&gt;_&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.toFactory.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.toFactory.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactory.toFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.toFactory.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.SortedMapFactory.toFactory.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.toFactory.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactory.toFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a441ab878780cacd45c9512527023fe65f141b2" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;dummy&quot;&gt;dummy: &lt;a href=&quot;intmap%24&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.toFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.toFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1a8d3d7732b28ad495a093bb82248108333f24" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;dummy&quot;&gt;dummy: &lt;a href=&quot;longmap%24&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.toFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.toFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a057c13a9e3f68f19fa53f14b4dd5106b320dab" translate="yes" xml:space="preserve">
          <source>implicit def toFactory[&lt;span name=&quot;V&quot;&gt;V&lt;/span&gt;](&lt;span name=&quot;dummy&quot;&gt;dummy: &lt;a href=&quot;longmap%24&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.toFactory.V&quot;&gt;V&lt;/span&gt;), &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.toFactory.V&quot;&gt;V&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a60dce277943cfe1108566444f87940c200638de" translate="yes" xml:space="preserve">
          <source>implicit def toJavaDoubleAccumulator(&lt;span name=&quot;ia&quot;&gt;ia: &lt;a href=&quot;doubleaccumulator%24&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../collection/specificiterablefactory&quot; id=&quot;scala.collection.SpecificIterableFactory&quot; name=&quot;scala.collection.SpecificIterableFactory&quot;&gt;SpecificIterableFactory&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f6a610c865c22a049d99d95eb1336360c4f11d2" translate="yes" xml:space="preserve">
          <source>implicit def toJavaIntegerAccumulator(&lt;span name=&quot;ia&quot;&gt;ia: &lt;a href=&quot;intaccumulator%24&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../collection/specificiterablefactory&quot; id=&quot;scala.collection.SpecificIterableFactory&quot; name=&quot;scala.collection.SpecificIterableFactory&quot;&gt;SpecificIterableFactory&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="458996cc59654cbe70581da85f5504a3b0fb800d" translate="yes" xml:space="preserve">
          <source>implicit def toJavaLongAccumulator(&lt;span name=&quot;ia&quot;&gt;ia: &lt;a href=&quot;longaccumulator%24&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;.type&lt;/span&gt;): &lt;a href=&quot;../collection/specificiterablefactory&quot; id=&quot;scala.collection.SpecificIterableFactory&quot; name=&quot;scala.collection.SpecificIterableFactory&quot;&gt;SpecificIterableFactory&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a1358c1ead8cacc50b15007b34b7885d8f32f0c" translate="yes" xml:space="preserve">
          <source>implicit def unitArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a01540469640270dd4bb738b3621cdefaea955" translate="yes" xml:space="preserve">
          <source>implicit def urlToProcess(&lt;span name=&quot;url&quot;&gt;url: &lt;span name=&quot;scala.sys.process.processInternal.URL&quot;&gt;URL&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;URLBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d70b555b3b59c5c1e8913afd9bc9a6f344ad9786" translate="yes" xml:space="preserve">
          <source>implicit def wrapBooleanArray(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cebeffcf7587d0f4968b43af7e28d3b26477c598" translate="yes" xml:space="preserve">
          <source>implicit def wrapByteArray(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77eb0e8c5a6ab8007cf50b1aa12ee2de8db9db1c" translate="yes" xml:space="preserve">
          <source>implicit def wrapCharArray(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8074ad4d197781efb6c09f40038071219a7b6dfe" translate="yes" xml:space="preserve">
          <source>implicit def wrapDoubleArray(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a013327d8230a62d87aa7fa7095b734bfc3c9d6" translate="yes" xml:space="preserve">
          <source>implicit def wrapFloatArray(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbcab34b26975f3c9b417a29bde12ecb766a4382" translate="yes" xml:space="preserve">
          <source>implicit def wrapIntArray(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53525aa00c0e0a59193caeb7551e44b6e982afc9" translate="yes" xml:space="preserve">
          <source>implicit def wrapLongArray(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00d83dd2277ea23c9ebccb657ee09a5f5ec060c8" translate="yes" xml:space="preserve">
          <source>implicit def wrapRefArray[&lt;span name=&quot;T&quot;&gt;T &amp;lt;: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.LowPriorityImplicits.wrapRefArray.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.LowPriorityImplicits.wrapRefArray.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251879bd9176f84336b9b056cae1bf0fd4e947fa" translate="yes" xml:space="preserve">
          <source>implicit def wrapShortArray(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74411f1ec513e99ae08eedcddfeac318c6c17120" translate="yes" xml:space="preserve">
          <source>implicit def wrapString(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8955969fb6bdc4f194f75807c80ef6fd5a7aa106" translate="yes" xml:space="preserve">
          <source>implicit def wrapUnitArray(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/mutable/arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="986e086b21c764bb1d93d9169dd35995e5106f3d" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;durationconverters%24%24javadurationops&quot;&gt;JavaDurationOps&lt;/a&gt; extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d5fe5356c98bb8d518b65b8234a6b54214d641" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;durationconverters%24%24scaladurationops&quot;&gt;ScalaDurationOps&lt;/a&gt; extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="808116ef66000d08d2f2abfa9e881b040a181d4f" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;either%24%24mergeableeither&quot;&gt;MergeableEither&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b911b573769933d38cce646a2eb7580e7f7e6bc" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;function1%24%24unliftops&quot;&gt;UnliftOps&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;] extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8265f6ff7d8b1ce04a7619154c32ecb905d6e0c6" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;futureconverters%24%24completionstageops&quot;&gt;CompletionStageOps&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391e928b165861a0aedf76ce47d79bf82f74318f" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;futureconverters%24%24futureops&quot;&gt;FutureOps&lt;/a&gt;[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a128efe79b4eb8a859269325e43a2b340e4fbfb" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;optionconverters%24%24richoption&quot;&gt;RichOption&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf8bce51851bf390a2ed55fea7546400c16aa4e" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;optionconverters%24%24richoptional&quot;&gt;RichOptional&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a40a45d0a93bfad3a2929b8f0dc72a659fccb08" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;optionconverters%24%24richoptionaldouble&quot;&gt;RichOptionalDouble&lt;/a&gt; extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bac11529f05d4e72d2641a1dd4aa6188b4af699" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;optionconverters%24%24richoptionalint&quot;&gt;RichOptionalInt&lt;/a&gt; extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243b4b8034e37c97a29fedac682fc00a0add0191" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;optionconverters%24%24richoptionallong&quot;&gt;RichOptionalLong&lt;/a&gt; extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5aa964be1650492d66a7ceb5f775bf764e4d01f" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;package%24%24doublemult&quot;&gt;DoubleMult&lt;/a&gt; extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac39674a7b30112bf24a53567502b7c2df6e3a82" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;package%24%24durationdouble&quot;&gt;DurationDouble&lt;/a&gt; extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt; with &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb3f866da258a2a5bd6924babc388931d7ee31c" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;package%24%24durationint&quot;&gt;DurationInt&lt;/a&gt; extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt; with &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="478796760ea99032442e36249be9957ff247f9fc" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;package%24%24durationlong&quot;&gt;DurationLong&lt;/a&gt; extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt; with &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95e0ad7f4f27c2beb88649ed35d242dbe5ad9c4d" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;package%24%24intmult&quot;&gt;IntMult&lt;/a&gt; extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb7559906e1503e470a16c40656f346913030920" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;package%24%24longmult&quot;&gt;LongMult&lt;/a&gt; extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29e6d08f2e97c4782b15dedbfc52010b68df3154" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;predef%24%24arraycharsequence&quot;&gt;ArrayCharSequence&lt;/a&gt; extends &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da2e622d27c60858acd404b7470e14aa1c36975d" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;predef%24%24arrowassoc&quot;&gt;ArrowAssoc&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c50c39bce78241a3ef3a498f5589ce32a34e1f5" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;predef%24%24ensuring&quot;&gt;Ensuring&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230b0ad3526383a1b870429698ccd35ed53801f5" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;predef%24%24seqcharsequence&quot;&gt;SeqCharSequence&lt;/a&gt; extends &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af0880ccc42810eb6066531cbd961ebb6c9082f1" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;predef%24%24stringformat&quot;&gt;StringFormat&lt;/a&gt;[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5007f553ad91b9ffe65709d9894f4b4a691f311e" translate="yes" xml:space="preserve">
          <source>implicit final class &lt;a href=&quot;wrappedstring%24%24unwrapop&quot;&gt;UnwrapOp&lt;/a&gt; extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24a6eae16bedca3903a8f5e19a9fbbdf77dde37e" translate="yes" xml:space="preserve">
          <source>implicit final classArrayCharSequence extends &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89205a13a2e1a8dace2756d56321cb4aefc96437" translate="yes" xml:space="preserve">
          <source>implicit final classArrowAssoc[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b52352c5fad34a4f70466b2a2508270e684ca6" translate="yes" xml:space="preserve">
          <source>implicit final classCompletionStageOps[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e02e3a63f18c35d6e6978e67ca81f2b9d7326794" translate="yes" xml:space="preserve">
          <source>implicit final classDoubleMult extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd2caf1af1539decb62ad8f4a222bf858f23da89" translate="yes" xml:space="preserve">
          <source>implicit final classDurationDouble extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt; with &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6ef0613937fc365e296f414ae07033c9476a9bd" translate="yes" xml:space="preserve">
          <source>implicit final classDurationInt extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt; with &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36789986c007e8210b887302f25e8d1528557c50" translate="yes" xml:space="preserve">
          <source>implicit final classDurationLong extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt; with &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="240d7d6a71d7366eab7b8af387ee3d6544b122ee" translate="yes" xml:space="preserve">
          <source>implicit final classEnsuring[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59474d35087fdcd26e5a15ccf4a92d2c1f1c0a91" translate="yes" xml:space="preserve">
          <source>implicit final classFutureOps[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5c936d2229f624a5c41408c53d1eb53b761f578" translate="yes" xml:space="preserve">
          <source>implicit final classIntMult extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f216264ce4565021a57f2b70f41f50978f7418ed" translate="yes" xml:space="preserve">
          <source>implicit final classJavaDurationOps extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e127ba2e97a944a07d055ec77f4f5fcc783638c" translate="yes" xml:space="preserve">
          <source>implicit final classLongMult extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f57c4745a8e371eb0c06441c558b01a4f8d6dd05" translate="yes" xml:space="preserve">
          <source>implicit final classMergeableEither[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="826f3826198bb0eaa8849609241207381a84c3b6" translate="yes" xml:space="preserve">
          <source>implicit final classRichOption[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da31fbcec0e93c3e528236b86dbe1470c784405a" translate="yes" xml:space="preserve">
          <source>implicit final classRichOptionalDouble extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a868f3a9149e49eec47caa9cef17b827d20d07" translate="yes" xml:space="preserve">
          <source>implicit final classRichOptionalInt extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="983fcda64d9f5861c2e9e45032473b7ce02963e9" translate="yes" xml:space="preserve">
          <source>implicit final classRichOptionalLong extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37e4f1619618f40e19c21d1a6fa58ce7f16e9fc2" translate="yes" xml:space="preserve">
          <source>implicit final classRichOptional[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00897751b10d4ac51f6a19ec07f87835673138c9" translate="yes" xml:space="preserve">
          <source>implicit final classScalaDurationOps extends &lt;a href=&quot;../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6064e7c1b797f6b6c5fc991c18d6134f0c96f0" translate="yes" xml:space="preserve">
          <source>implicit final classSeqCharSequence extends &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a04314d852902cbd8541ba12015732a9dbc9c43" translate="yes" xml:space="preserve">
          <source>implicit final classStringFormat[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c4179eb6db79379a4341e3fc9c4855e4f22390" translate="yes" xml:space="preserve">
          <source>implicit final classUnliftOps[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;] extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eabc6db36f3145376e6ed0e7eb70b1dc63ed2fff" translate="yes" xml:space="preserve">
          <source>implicit final classUnwrapOp extends &lt;a href=&quot;../../anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284989676680618816c299574f56c461a414ad4a" translate="yes" xml:space="preserve">
          <source>implicit final classany2stringadd[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;] extends &lt;a href=&quot;anyval&quot; id=&quot;scala.AnyVal&quot; name=&quot;scala.AnyVal&quot;&gt;AnyVal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f604e3618a0d601d42e7f54d0b064f1133dda4" translate="yes" xml:space="preserve">
          <source>implicit final def global: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472224a44f945e4d8a1f90e08107fcdfeb2f1143" translate="yes" xml:space="preserve">
          <source>implicit final def scalaUtilChainingOps[&lt;span name=&quot;A&quot;&gt;A&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;span name=&quot;scala.util.ChainingSyntax.scalaUtilChainingOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;chainingops&quot; id=&quot;scala.util.ChainingOps&quot; name=&quot;scala.util.ChainingOps&quot;&gt;ChainingOps&lt;/a&gt;[&lt;span name=&quot;scala.util.ChainingSyntax.scalaUtilChainingOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fff8d0a1744a9a4988f10baf15b988c4fec987c" translate="yes" xml:space="preserve">
          <source>implicit lazy val dynamics: &lt;a href=&quot;languagefeature%24%24dynamics&quot; id=&quot;scala.languageFeature.dynamics&quot; name=&quot;scala.languageFeature.dynamics&quot;&gt;dynamics&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ad979ea8bee526be0f0e9a649628b620765b5e" translate="yes" xml:space="preserve">
          <source>implicit lazy val existentials: &lt;a href=&quot;languagefeature%24%24existentials&quot; id=&quot;scala.languageFeature.existentials&quot; name=&quot;scala.languageFeature.existentials&quot;&gt;existentials&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e5f2d046935eba1bc604c9555c4aebcc54e3a0" translate="yes" xml:space="preserve">
          <source>implicit lazy val fallbackSystemCodec: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98131d68b6cc084b41a3ba60accbde1c6347cdc0" translate="yes" xml:space="preserve">
          <source>implicit lazy val higherKinds: &lt;a href=&quot;languagefeature%24%24higherkinds&quot; id=&quot;scala.languageFeature.higherKinds&quot; name=&quot;scala.languageFeature.higherKinds&quot;&gt;higherKinds&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67b9a7afbf0b94161550601a5e6917624d26e922" translate="yes" xml:space="preserve">
          <source>implicit lazy val implicitConversions: &lt;a href=&quot;languagefeature%24%24implicitconversions&quot; id=&quot;scala.languageFeature.implicitConversions&quot; name=&quot;scala.languageFeature.implicitConversions&quot;&gt;implicitConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ba8c37b6b37da103c199209dcea0f057e2cea81" translate="yes" xml:space="preserve">
          <source>implicit lazy val macros: &lt;a href=&quot;languagefeature%24%24experimental%24%24macros&quot; id=&quot;scala.languageFeature.experimental.macros&quot; name=&quot;scala.languageFeature.experimental.macros&quot;&gt;macros&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="564d861f33dbd4bbdc914a6006667fbca44fd63a" translate="yes" xml:space="preserve">
          <source>implicit lazy val postfixOps: &lt;a href=&quot;languagefeature%24%24postfixops&quot; id=&quot;scala.languageFeature.postfixOps&quot; name=&quot;scala.languageFeature.postfixOps&quot;&gt;postfixOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be51984cead823630958e208c4e739b4fbc12ae1" translate="yes" xml:space="preserve">
          <source>implicit lazy val reflectiveCalls: &lt;a href=&quot;languagefeature%24%24reflectivecalls&quot; id=&quot;scala.languageFeature.reflectiveCalls&quot; name=&quot;scala.languageFeature.reflectiveCalls&quot;&gt;reflectiveCalls&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff637b53ad65eced434813410b0b0b87d09ae08e" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;../enumeration%24valueordering%24&quot;&gt;ValueOrdering&lt;/a&gt; extends &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c3e3b71e6e9f4325ae9742680946349bb672bab" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;deadline%24%24deadlineisordered%24&quot;&gt;DeadlineIsOrdered&lt;/a&gt; extends &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c272d24d507029c45c924416ad38e06f35148b37" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;duration%24%24durationisordered%24&quot;&gt;DurationIsOrdered&lt;/a&gt; extends &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32208bc14fb85ca94dc2065c003afbcc8b766cd5" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;durationconversions%24%24fromnowconvert%24&quot;&gt;fromNowConvert&lt;/a&gt; extends &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;a href=&quot;package%24%24fromnow%24&quot; id=&quot;scala.concurrent.duration.fromNow&quot; name=&quot;scala.concurrent.duration.fromNow&quot;&gt;fromNow&lt;/a&gt;.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fe1dd1612e06ffdf1f5956aaaa50e9aaca2c16" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;durationconversions%24%24spanconvert%24&quot;&gt;spanConvert&lt;/a&gt; extends &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;a href=&quot;package%24%24span%24&quot; id=&quot;scala.concurrent.duration.span&quot; name=&quot;scala.concurrent.duration.span&quot;&gt;span&lt;/a&gt;.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fb179ac7b566cafcd20d2d6202a29cc10cc4f3" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;enumeration%24valueordering%24&quot;&gt;ValueOrdering&lt;/a&gt; extends &lt;a href=&quot;index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="455b5a98dbeec56874f4b0b5d7d9bebe772dc74f" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24bigdecimal%24&quot;&gt;BigDecimal&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="141d1ed17d62471a41dc0ad9e03d71e4fa6d11bb" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24bigint%24&quot;&gt;BigInt&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a87d07a9745f4757cab82bedc5e8bc2c50082a" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24boolean%24&quot;&gt;Boolean&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1e65c60d6cf4fb272742e2083fad9d0f1d1470b" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24byte%24&quot;&gt;Byte&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67f95b1bc57464962d87b6bfce6ff64905786c56" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24char%24&quot;&gt;Char&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf7a2af23510b00e9f44110c8dfa904fb7fc64ee" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24double%24%24ieeeequiv%24&quot;&gt;IeeeEquiv&lt;/a&gt; extends &lt;a href=&quot;equiv%24%24double%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Double.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Double.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1f36300e705caa203715aad15e6d37cdf1dbfd" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24double%24%24strictequiv%24&quot;&gt;StrictEquiv&lt;/a&gt; extends &lt;a href=&quot;equiv%24%24double%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Double.StrictEquiv&quot; name=&quot;scala.math.Equiv.Double.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dbf6d35dada9d2f1a3653a6e7b4d7e257a684a52" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24float%24%24ieeeequiv%24&quot;&gt;IeeeEquiv&lt;/a&gt; extends &lt;a href=&quot;equiv%24%24float%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Float.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Float.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a21a289d1a3b7fad2819c273a0094c346bc02830" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24float%24%24strictequiv%24&quot;&gt;StrictEquiv&lt;/a&gt; extends &lt;a href=&quot;equiv%24%24float%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Float.StrictEquiv&quot; name=&quot;scala.math.Equiv.Float.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90a36dbc6d3b016ba430a13be13d16ef33a5c8b6" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24int%24&quot;&gt;Int&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c0b13cffdb683eb43679a2ccd4305453153e620" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24long%24&quot;&gt;Long&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17ce2fd5d3b87d1f828289e28fb827b3a14bee26" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24short%24&quot;&gt;Short&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c991bd36078c2a587d21153781edd4ba1b203fd" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24string%24&quot;&gt;String&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80ee5395434f38e89bce8ff963688012bdd8c32" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24symbol%24&quot;&gt;Symbol&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807cacd9b69ce87598e4dc8f071ab36b502c687e" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;equiv%24%24unit%24&quot;&gt;Unit&lt;/a&gt; extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34256e7bc24b8edca01d643ce613ca2767b5ad3d" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;finiteduration%24%24finitedurationisordered%24&quot;&gt;FiniteDurationIsOrdered&lt;/a&gt; extends &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05052933d7726170ad186a84dc9f8036829529c8" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;numeric%24%24bigdecimalisfractional%24&quot;&gt;BigDecimalIsFractional&lt;/a&gt; extends &lt;a href=&quot;numeric%24%24bigdecimalisfractional&quot; id=&quot;scala.math.Numeric.BigDecimalIsFractional&quot; name=&quot;scala.math.Numeric.BigDecimalIsFractional&quot;&gt;BigDecimalIsFractional&lt;/a&gt; with &lt;a href=&quot;ordering%24%24bigdecimalordering&quot; id=&quot;scala.math.Ordering.BigDecimalOrdering&quot; name=&quot;scala.math.Ordering.BigDecimalOrdering&quot;&gt;BigDecimalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3cb6d68464fb51f57e1ce884d3ce3d7cfc71ac5" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;numeric%24%24bigintisintegral%24&quot;&gt;BigIntIsIntegral&lt;/a&gt; extends &lt;a href=&quot;numeric%24%24bigintisintegral&quot; id=&quot;scala.math.Numeric.BigIntIsIntegral&quot; name=&quot;scala.math.Numeric.BigIntIsIntegral&quot;&gt;BigIntIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24bigintordering&quot; id=&quot;scala.math.Ordering.BigIntOrdering&quot; name=&quot;scala.math.Ordering.BigIntOrdering&quot;&gt;BigIntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9948c5c6b049d78be8791708c604188ea4a2728" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;numeric%24%24byteisintegral%24&quot;&gt;ByteIsIntegral&lt;/a&gt; extends &lt;a href=&quot;numeric%24%24byteisintegral&quot; id=&quot;scala.math.Numeric.ByteIsIntegral&quot; name=&quot;scala.math.Numeric.ByteIsIntegral&quot;&gt;ByteIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24byteordering&quot; id=&quot;scala.math.Ordering.ByteOrdering&quot; name=&quot;scala.math.Ordering.ByteOrdering&quot;&gt;ByteOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08635ac74c8e13c9b54a0db5fe7cec4cbb5d6eb" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;numeric%24%24charisintegral%24&quot;&gt;CharIsIntegral&lt;/a&gt; extends &lt;a href=&quot;numeric%24%24charisintegral&quot; id=&quot;scala.math.Numeric.CharIsIntegral&quot; name=&quot;scala.math.Numeric.CharIsIntegral&quot;&gt;CharIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24charordering&quot; id=&quot;scala.math.Ordering.CharOrdering&quot; name=&quot;scala.math.Ordering.CharOrdering&quot;&gt;CharOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1e42a57891d562d4f1153c3a731c0aa415cc7e5" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;numeric%24%24doubleisfractional%24&quot;&gt;DoubleIsFractional&lt;/a&gt; extends &lt;a href=&quot;numeric%24%24doubleisfractional&quot; id=&quot;scala.math.Numeric.DoubleIsFractional&quot; name=&quot;scala.math.Numeric.DoubleIsFractional&quot;&gt;DoubleIsFractional&lt;/a&gt; with &lt;a href=&quot;ordering%24%24double%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Double.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Double.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c2e02aacd6dac992790c441fc71fc95426c8ddb" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;numeric%24%24floatisfractional%24&quot;&gt;FloatIsFractional&lt;/a&gt; extends &lt;a href=&quot;numeric%24%24floatisfractional&quot; id=&quot;scala.math.Numeric.FloatIsFractional&quot; name=&quot;scala.math.Numeric.FloatIsFractional&quot;&gt;FloatIsFractional&lt;/a&gt; with &lt;a href=&quot;ordering%24%24float%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Float.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Float.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db27935be3900650a4345fa800ffc802608c6b4" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;numeric%24%24intisintegral%24&quot;&gt;IntIsIntegral&lt;/a&gt; extends &lt;a href=&quot;numeric%24%24intisintegral&quot; id=&quot;scala.math.Numeric.IntIsIntegral&quot; name=&quot;scala.math.Numeric.IntIsIntegral&quot;&gt;IntIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24intordering&quot; id=&quot;scala.math.Ordering.IntOrdering&quot; name=&quot;scala.math.Ordering.IntOrdering&quot;&gt;IntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2203e2a6720ef04d40ce6de78c310bbc8a3f3688" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;numeric%24%24longisintegral%24&quot;&gt;LongIsIntegral&lt;/a&gt; extends &lt;a href=&quot;numeric%24%24longisintegral&quot; id=&quot;scala.math.Numeric.LongIsIntegral&quot; name=&quot;scala.math.Numeric.LongIsIntegral&quot;&gt;LongIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24longordering&quot; id=&quot;scala.math.Ordering.LongOrdering&quot; name=&quot;scala.math.Ordering.LongOrdering&quot;&gt;LongOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91b26e6e84ed1fde679b8cf8412bca37d80e89b" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;numeric%24%24shortisintegral%24&quot;&gt;ShortIsIntegral&lt;/a&gt; extends &lt;a href=&quot;numeric%24%24shortisintegral&quot; id=&quot;scala.math.Numeric.ShortIsIntegral&quot; name=&quot;scala.math.Numeric.ShortIsIntegral&quot;&gt;ShortIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24shortordering&quot; id=&quot;scala.math.Ordering.ShortOrdering&quot; name=&quot;scala.math.Ordering.ShortOrdering&quot;&gt;ShortOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31f007710aaa074f836ab988ceb730149c7a75ab" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24bigdecimal%24&quot;&gt;BigDecimal&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24bigdecimalordering&quot; id=&quot;scala.math.Ordering.BigDecimalOrdering&quot; name=&quot;scala.math.Ordering.BigDecimalOrdering&quot;&gt;BigDecimalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9d4ab0486ff4f722f79cbdd8bbc9b1a7bf3f305" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24bigint%24&quot;&gt;BigInt&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24bigintordering&quot; id=&quot;scala.math.Ordering.BigIntOrdering&quot; name=&quot;scala.math.Ordering.BigIntOrdering&quot;&gt;BigIntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5ea2644b003cfa0b6fc7961c4697d4a11a816da" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24boolean%24&quot;&gt;Boolean&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24booleanordering&quot; id=&quot;scala.math.Ordering.BooleanOrdering&quot; name=&quot;scala.math.Ordering.BooleanOrdering&quot;&gt;BooleanOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1573d872d028fa844f39bb9bdc4f37b8f175d07" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24byte%24&quot;&gt;Byte&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24byteordering&quot; id=&quot;scala.math.Ordering.ByteOrdering&quot; name=&quot;scala.math.Ordering.ByteOrdering&quot;&gt;ByteOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="377f3958ceede998fa25f5e05a475c6f44c828cd" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24char%24&quot;&gt;Char&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24charordering&quot; id=&quot;scala.math.Ordering.CharOrdering&quot; name=&quot;scala.math.Ordering.CharOrdering&quot;&gt;CharOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0753c599b8365553cc81cc71295d7122f728e08" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24double%24%24ieeeordering%24&quot;&gt;IeeeOrdering&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24double%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Double.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Double.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="308ca47e65c966f6002d443d431627520817f493" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24double%24%24totalordering%24&quot;&gt;TotalOrdering&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24double%24%24totalordering&quot; id=&quot;scala.math.Ordering.Double.TotalOrdering&quot; name=&quot;scala.math.Ordering.Double.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41868b83df11fb67ea03d35577f6b3db725fff76" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24float%24%24ieeeordering%24&quot;&gt;IeeeOrdering&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24float%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Float.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Float.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8249424a1b56c7f4b5cb7c0eaac82250a9e63743" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24float%24%24totalordering%24&quot;&gt;TotalOrdering&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24float%24%24totalordering&quot; id=&quot;scala.math.Ordering.Float.TotalOrdering&quot; name=&quot;scala.math.Ordering.Float.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b12657c53325bf0fbdc68672fc761dea59e91f9" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24int%24&quot;&gt;Int&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24intordering&quot; id=&quot;scala.math.Ordering.IntOrdering&quot; name=&quot;scala.math.Ordering.IntOrdering&quot;&gt;IntOrdering&lt;/a&gt; with &lt;a href=&quot;ordering%24%24cachedreverse&quot; id=&quot;scala.math.Ordering.CachedReverse&quot; name=&quot;scala.math.Ordering.CachedReverse&quot;&gt;CachedReverse&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f8886a756cfc8b75d644378d0e2e83444d10d8" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24long%24&quot;&gt;Long&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24longordering&quot; id=&quot;scala.math.Ordering.LongOrdering&quot; name=&quot;scala.math.Ordering.LongOrdering&quot;&gt;LongOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75b5e71621aea255d3c40eec51ae8072afd0ca21" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24short%24&quot;&gt;Short&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24shortordering&quot; id=&quot;scala.math.Ordering.ShortOrdering&quot; name=&quot;scala.math.Ordering.ShortOrdering&quot;&gt;ShortOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82107de8299d6d6361f9b6d8772acbeb2df32585" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24string%24&quot;&gt;String&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24stringordering&quot; id=&quot;scala.math.Ordering.StringOrdering&quot; name=&quot;scala.math.Ordering.StringOrdering&quot;&gt;StringOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec23a49d512f2ca1be8bc895bcbb1617b408c0b6" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24symbol%24&quot;&gt;Symbol&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24symbolordering&quot; id=&quot;scala.math.Ordering.SymbolOrdering&quot; name=&quot;scala.math.Ordering.SymbolOrdering&quot;&gt;SymbolOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b30b546350d2c3c68465851b20d644070eb8de5a" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;ordering%24%24unit%24&quot;&gt;Unit&lt;/a&gt; extends &lt;a href=&quot;ordering%24%24unitordering&quot; id=&quot;scala.math.Ordering.UnitOrdering&quot; name=&quot;scala.math.Ordering.UnitOrdering&quot;&gt;UnitOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01cac3c1d66c7902d68b842a9da82dfc172f6039" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;prop%24%24doubleprop%24&quot;&gt;DoubleProp&lt;/a&gt; extends &lt;span name=&quot;scala.sys.CreatorImpl&quot;&gt;CreatorImpl&lt;/span&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17d67158378833cf3dc84ac09a39f47992b5b0e2" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;prop%24%24fileprop%24&quot;&gt;FileProp&lt;/a&gt; extends &lt;span name=&quot;scala.sys.CreatorImpl&quot;&gt;CreatorImpl&lt;/span&gt;[&lt;span name=&quot;java.io.File&quot;&gt;File&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d15ebb7c452df2c60a4bd1f28b9b8fac67fbdc" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;prop%24%24intprop%24&quot;&gt;IntProp&lt;/a&gt; extends &lt;span name=&quot;scala.sys.CreatorImpl&quot;&gt;CreatorImpl&lt;/span&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5d6a995c6aae2116afc804be2c1f3b7e1d47a5" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;prop%24%24stringprop%24&quot;&gt;StringProp&lt;/a&gt; extends &lt;span name=&quot;scala.sys.CreatorImpl&quot;&gt;CreatorImpl&lt;/span&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3059641f6962a9c24a36a3722c4b9317b54b3ea2" translate="yes" xml:space="preserve">
          <source>implicit object &lt;a href=&quot;using%24%24releasable%24%24autocloseableisreleasable%24&quot;&gt;AutoCloseableIsReleasable&lt;/a&gt; extends &lt;a href=&quot;using%24%24releasable&quot; id=&quot;scala.util.Using.Releasable&quot; name=&quot;scala.util.Using.Releasable&quot;&gt;Releasable&lt;/a&gt;[&lt;span name=&quot;java.lang.AutoCloseable&quot;&gt;AutoCloseable&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07032b382aea647a782f5ec2033dc3ef935603c" translate="yes" xml:space="preserve">
          <source>implicit objectAutoCloseableIsReleasable extends &lt;a href=&quot;using%24%24releasable&quot; id=&quot;scala.util.Using.Releasable&quot; name=&quot;scala.util.Using.Releasable&quot;&gt;Releasable&lt;/a&gt;[&lt;span name=&quot;java.lang.AutoCloseable&quot;&gt;AutoCloseable&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54ef0a1d6d70e9ac6fdf79214154048c04e62a85" translate="yes" xml:space="preserve">
          <source>implicit objectBigDecimal extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23e2d407f13ac6b84773a282f9f4980ebb661e0c" translate="yes" xml:space="preserve">
          <source>implicit objectBigDecimal extends &lt;a href=&quot;ordering%24%24bigdecimalordering&quot; id=&quot;scala.math.Ordering.BigDecimalOrdering&quot; name=&quot;scala.math.Ordering.BigDecimalOrdering&quot;&gt;BigDecimalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dde4c6ee5dd9df28f984900751ba4552ade98898" translate="yes" xml:space="preserve">
          <source>implicit objectBigDecimalIsFractional extends &lt;a href=&quot;numeric%24%24bigdecimalisfractional&quot; id=&quot;scala.math.Numeric.BigDecimalIsFractional&quot; name=&quot;scala.math.Numeric.BigDecimalIsFractional&quot;&gt;BigDecimalIsFractional&lt;/a&gt; with &lt;a href=&quot;ordering%24%24bigdecimalordering&quot; id=&quot;scala.math.Ordering.BigDecimalOrdering&quot; name=&quot;scala.math.Ordering.BigDecimalOrdering&quot;&gt;BigDecimalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5f9c80a055ddf0da18c45a91a60751d9fb4f2c" translate="yes" xml:space="preserve">
          <source>implicit objectBigInt extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="771ff6b82d8589483df32ddf5640bf00134e6073" translate="yes" xml:space="preserve">
          <source>implicit objectBigInt extends &lt;a href=&quot;ordering%24%24bigintordering&quot; id=&quot;scala.math.Ordering.BigIntOrdering&quot; name=&quot;scala.math.Ordering.BigIntOrdering&quot;&gt;BigIntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="281d21afde3e6f6fa034f86b8a3a75b99cebbf78" translate="yes" xml:space="preserve">
          <source>implicit objectBigIntIsIntegral extends &lt;a href=&quot;numeric%24%24bigintisintegral&quot; id=&quot;scala.math.Numeric.BigIntIsIntegral&quot; name=&quot;scala.math.Numeric.BigIntIsIntegral&quot;&gt;BigIntIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24bigintordering&quot; id=&quot;scala.math.Ordering.BigIntOrdering&quot; name=&quot;scala.math.Ordering.BigIntOrdering&quot;&gt;BigIntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a7e9e187f7c5044db8f4b90e5f4a756ccd22a42" translate="yes" xml:space="preserve">
          <source>implicit objectBoolean extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df4165a9c25a085817aeeaaa33ea6f87f848e7dd" translate="yes" xml:space="preserve">
          <source>implicit objectBoolean extends &lt;a href=&quot;ordering%24%24booleanordering&quot; id=&quot;scala.math.Ordering.BooleanOrdering&quot; name=&quot;scala.math.Ordering.BooleanOrdering&quot;&gt;BooleanOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32dfa617b5b18599a1f201d650f3d3b8c232756a" translate="yes" xml:space="preserve">
          <source>implicit objectByte extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71b941119714bef0d5b5859a69250c13637090b2" translate="yes" xml:space="preserve">
          <source>implicit objectByte extends &lt;a href=&quot;ordering%24%24byteordering&quot; id=&quot;scala.math.Ordering.ByteOrdering&quot; name=&quot;scala.math.Ordering.ByteOrdering&quot;&gt;ByteOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6590b15417bc11f0c7c83e38d8bd257c5968b76c" translate="yes" xml:space="preserve">
          <source>implicit objectByteIsIntegral extends &lt;a href=&quot;numeric%24%24byteisintegral&quot; id=&quot;scala.math.Numeric.ByteIsIntegral&quot; name=&quot;scala.math.Numeric.ByteIsIntegral&quot;&gt;ByteIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24byteordering&quot; id=&quot;scala.math.Ordering.ByteOrdering&quot; name=&quot;scala.math.Ordering.ByteOrdering&quot;&gt;ByteOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff19fc8829f26b201b61457f147d7e6e4e1c2e0b" translate="yes" xml:space="preserve">
          <source>implicit objectChar extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db43ad584304f34a369a1b60c951cf2e39dd8c0a" translate="yes" xml:space="preserve">
          <source>implicit objectChar extends &lt;a href=&quot;ordering%24%24charordering&quot; id=&quot;scala.math.Ordering.CharOrdering&quot; name=&quot;scala.math.Ordering.CharOrdering&quot;&gt;CharOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a486529253d2889324cec67183e200321fdb4e73" translate="yes" xml:space="preserve">
          <source>implicit objectCharIsIntegral extends &lt;a href=&quot;numeric%24%24charisintegral&quot; id=&quot;scala.math.Numeric.CharIsIntegral&quot; name=&quot;scala.math.Numeric.CharIsIntegral&quot;&gt;CharIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24charordering&quot; id=&quot;scala.math.Ordering.CharOrdering&quot; name=&quot;scala.math.Ordering.CharOrdering&quot;&gt;CharOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95598b996833949cc0da6cad48ad5526e9be97a1" translate="yes" xml:space="preserve">
          <source>implicit objectDeadlineIsOrdered extends &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d236794cbc43ee86a778389c49e3b68389b43376" translate="yes" xml:space="preserve">
          <source>implicit objectDeprecatedDoubleEquiv extends &lt;a href=&quot;equiv%24%24double%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Double.StrictEquiv&quot; name=&quot;scala.math.Equiv.Double.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bbc71dbf7a78ad8476480f0d3cc6de9f7aa566d" translate="yes" xml:space="preserve">
          <source>implicit objectDeprecatedDoubleOrdering extends &lt;a href=&quot;ordering%24%24double%24%24totalordering&quot; id=&quot;scala.math.Ordering.Double.TotalOrdering&quot; name=&quot;scala.math.Ordering.Double.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd22b887d0e606c7e96b64efb0eedef4e707ebd" translate="yes" xml:space="preserve">
          <source>implicit objectDeprecatedFloatEquiv extends &lt;a href=&quot;equiv%24%24float%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Float.StrictEquiv&quot; name=&quot;scala.math.Equiv.Float.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ccdfcdc578e249ce2826b57df88b1c30725e207" translate="yes" xml:space="preserve">
          <source>implicit objectDeprecatedFloatOrdering extends &lt;a href=&quot;ordering%24%24float%24%24totalordering&quot; id=&quot;scala.math.Ordering.Float.TotalOrdering&quot; name=&quot;scala.math.Ordering.Float.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="387c1140051f8d9897c1f55e9a5b3e5ad40ca601" translate="yes" xml:space="preserve">
          <source>implicit objectDoubleIsFractional extends &lt;a href=&quot;numeric%24%24doubleisfractional&quot; id=&quot;scala.math.Numeric.DoubleIsFractional&quot; name=&quot;scala.math.Numeric.DoubleIsFractional&quot;&gt;DoubleIsFractional&lt;/a&gt; with &lt;a href=&quot;ordering%24%24double%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Double.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Double.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9fb3222ea9989674c8f671cd296b82277f2df05" translate="yes" xml:space="preserve">
          <source>implicit objectDoubleProp extends &lt;span name=&quot;scala.sys.CreatorImpl&quot;&gt;CreatorImpl&lt;/span&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cd11073f2638eba3dc9c28412821a37692af3ef" translate="yes" xml:space="preserve">
          <source>implicit objectDurationIsOrdered extends &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03532b2e9fcb3b7908cccab1f59281202849f982" translate="yes" xml:space="preserve">
          <source>implicit objectFileProp extends &lt;span name=&quot;scala.sys.CreatorImpl&quot;&gt;CreatorImpl&lt;/span&gt;[&lt;span name=&quot;java.io.File&quot;&gt;File&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70c8941aa63514a7950faddc926d02917e7b146" translate="yes" xml:space="preserve">
          <source>implicit objectFiniteDurationIsOrdered extends &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0b2cb6bb17dd5956c181cd4bbd3a8b1be74e2b5" translate="yes" xml:space="preserve">
          <source>implicit objectFloatIsFractional extends &lt;a href=&quot;numeric%24%24floatisfractional&quot; id=&quot;scala.math.Numeric.FloatIsFractional&quot; name=&quot;scala.math.Numeric.FloatIsFractional&quot;&gt;FloatIsFractional&lt;/a&gt; with &lt;a href=&quot;ordering%24%24float%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Float.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Float.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3fa35022fff39acbd0c8e7c02c048fb6263bf5f5" translate="yes" xml:space="preserve">
          <source>implicit objectIeeeEquiv extends &lt;a href=&quot;equiv%24%24double%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Double.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Double.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ea64efd9ea921b5e21857a6d55ba16ea5c7564" translate="yes" xml:space="preserve">
          <source>implicit objectIeeeEquiv extends &lt;a href=&quot;equiv%24%24float%24%24ieeeequiv&quot; id=&quot;scala.math.Equiv.Float.IeeeEquiv&quot; name=&quot;scala.math.Equiv.Float.IeeeEquiv&quot;&gt;IeeeEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f72489dcb49c128ff8fc294c4cb0efbbfa5025e4" translate="yes" xml:space="preserve">
          <source>implicit objectIeeeOrdering extends &lt;a href=&quot;ordering%24%24double%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Double.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Double.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adb73bfb526921edaaa3860cdb71b85102f41958" translate="yes" xml:space="preserve">
          <source>implicit objectIeeeOrdering extends &lt;a href=&quot;ordering%24%24float%24%24ieeeordering&quot; id=&quot;scala.math.Ordering.Float.IeeeOrdering&quot; name=&quot;scala.math.Ordering.Float.IeeeOrdering&quot;&gt;IeeeOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0eeb809c9b929cff9a31bc8ae4d0fb8acdba24ad" translate="yes" xml:space="preserve">
          <source>implicit objectInt extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8dd85131c94213fbdf90907367faa48d1bee64" translate="yes" xml:space="preserve">
          <source>implicit objectInt extends &lt;a href=&quot;ordering%24%24intordering&quot; id=&quot;scala.math.Ordering.IntOrdering&quot; name=&quot;scala.math.Ordering.IntOrdering&quot;&gt;IntOrdering&lt;/a&gt; with &lt;a href=&quot;ordering%24%24cachedreverse&quot; id=&quot;scala.math.Ordering.CachedReverse&quot; name=&quot;scala.math.Ordering.CachedReverse&quot;&gt;CachedReverse&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd6dbbb4cb8ab0094e10fcc4868d3876fb1f379b" translate="yes" xml:space="preserve">
          <source>implicit objectIntIsIntegral extends &lt;a href=&quot;numeric%24%24intisintegral&quot; id=&quot;scala.math.Numeric.IntIsIntegral&quot; name=&quot;scala.math.Numeric.IntIsIntegral&quot;&gt;IntIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24intordering&quot; id=&quot;scala.math.Ordering.IntOrdering&quot; name=&quot;scala.math.Ordering.IntOrdering&quot;&gt;IntOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b295183642e4ca7f4ee563e1c05a104c4e5e9fa6" translate="yes" xml:space="preserve">
          <source>implicit objectIntProp extends &lt;span name=&quot;scala.sys.CreatorImpl&quot;&gt;CreatorImpl&lt;/span&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d87404b23d77fc31a346a7628ccf1011eb2440c" translate="yes" xml:space="preserve">
          <source>implicit objectLong extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88e5a927938a4aaee8ebe83463cad7d67bb41d11" translate="yes" xml:space="preserve">
          <source>implicit objectLong extends &lt;a href=&quot;ordering%24%24longordering&quot; id=&quot;scala.math.Ordering.LongOrdering&quot; name=&quot;scala.math.Ordering.LongOrdering&quot;&gt;LongOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e40e9b83a0a47821c052133f23d2c626652e1af0" translate="yes" xml:space="preserve">
          <source>implicit objectLongIsIntegral extends &lt;a href=&quot;numeric%24%24longisintegral&quot; id=&quot;scala.math.Numeric.LongIsIntegral&quot; name=&quot;scala.math.Numeric.LongIsIntegral&quot;&gt;LongIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24longordering&quot; id=&quot;scala.math.Ordering.LongOrdering&quot; name=&quot;scala.math.Ordering.LongOrdering&quot;&gt;LongOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="655052d9add167a016c89526c32280b690939a22" translate="yes" xml:space="preserve">
          <source>implicit objectShort extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8fd5ba37003f100fee6aa2a92635294996b573e" translate="yes" xml:space="preserve">
          <source>implicit objectShort extends &lt;a href=&quot;ordering%24%24shortordering&quot; id=&quot;scala.math.Ordering.ShortOrdering&quot; name=&quot;scala.math.Ordering.ShortOrdering&quot;&gt;ShortOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576d9d1c1f3bbe701148e7801ffbef858a6fe577" translate="yes" xml:space="preserve">
          <source>implicit objectShortIsIntegral extends &lt;a href=&quot;numeric%24%24shortisintegral&quot; id=&quot;scala.math.Numeric.ShortIsIntegral&quot; name=&quot;scala.math.Numeric.ShortIsIntegral&quot;&gt;ShortIsIntegral&lt;/a&gt; with &lt;a href=&quot;ordering%24%24shortordering&quot; id=&quot;scala.math.Ordering.ShortOrdering&quot; name=&quot;scala.math.Ordering.ShortOrdering&quot;&gt;ShortOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d4341652f0de9d099613a86c9be419572c19812" translate="yes" xml:space="preserve">
          <source>implicit objectStrictEquiv extends &lt;a href=&quot;equiv%24%24double%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Double.StrictEquiv&quot; name=&quot;scala.math.Equiv.Double.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d23b2349029f890c22ca82ba036f0976143224" translate="yes" xml:space="preserve">
          <source>implicit objectStrictEquiv extends &lt;a href=&quot;equiv%24%24float%24%24strictequiv&quot; id=&quot;scala.math.Equiv.Float.StrictEquiv&quot; name=&quot;scala.math.Equiv.Float.StrictEquiv&quot;&gt;StrictEquiv&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45880a6f54ec6a0bd9aa0a77f79a93fd6d5ee015" translate="yes" xml:space="preserve">
          <source>implicit objectString extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="101b19bc70c1a88acc3b81602fa0e4ccc4fd8df7" translate="yes" xml:space="preserve">
          <source>implicit objectString extends &lt;a href=&quot;ordering%24%24stringordering&quot; id=&quot;scala.math.Ordering.StringOrdering&quot; name=&quot;scala.math.Ordering.StringOrdering&quot;&gt;StringOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="643504823a11a4ff179a95be40b4aea47d71c9e4" translate="yes" xml:space="preserve">
          <source>implicit objectStringProp extends &lt;span name=&quot;scala.sys.CreatorImpl&quot;&gt;CreatorImpl&lt;/span&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96bca42c5a322723c13fc92554aa9a3fb0044709" translate="yes" xml:space="preserve">
          <source>implicit objectSymbol extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6358afd7a1a78da08493197263ed2a1125cc4f31" translate="yes" xml:space="preserve">
          <source>implicit objectSymbol extends &lt;a href=&quot;ordering%24%24symbolordering&quot; id=&quot;scala.math.Ordering.SymbolOrdering&quot; name=&quot;scala.math.Ordering.SymbolOrdering&quot;&gt;SymbolOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a73473e6892c294c9f3d36c76597a0747b81759" translate="yes" xml:space="preserve">
          <source>implicit objectTotalOrdering extends &lt;a href=&quot;ordering%24%24double%24%24totalordering&quot; id=&quot;scala.math.Ordering.Double.TotalOrdering&quot; name=&quot;scala.math.Ordering.Double.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d330e4585c484ec169036cd30cf61833fd6779" translate="yes" xml:space="preserve">
          <source>implicit objectTotalOrdering extends &lt;a href=&quot;ordering%24%24float%24%24totalordering&quot; id=&quot;scala.math.Ordering.Float.TotalOrdering&quot; name=&quot;scala.math.Ordering.Float.TotalOrdering&quot;&gt;TotalOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65b0526f1767b40ade9c39450bafb1579894529a" translate="yes" xml:space="preserve">
          <source>implicit objectUnit extends &lt;a href=&quot;equiv&quot; id=&quot;scala.math.Equiv&quot; name=&quot;scala.math.Equiv&quot;&gt;Equiv&lt;/a&gt;[&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ecaa70812d4f5108221380cc6696d799459307b" translate="yes" xml:space="preserve">
          <source>implicit objectUnit extends &lt;a href=&quot;ordering%24%24unitordering&quot; id=&quot;scala.math.Ordering.UnitOrdering&quot; name=&quot;scala.math.Ordering.UnitOrdering&quot;&gt;UnitOrdering&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92ed9e89af86af408b2c8c0a237a6b4dd5150162" translate="yes" xml:space="preserve">
          <source>implicit objectValueOrdering extends &lt;a href=&quot;index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e24b43b731e17f9bf58c201d1a48bd5ffb8e71" translate="yes" xml:space="preserve">
          <source>implicit objectfromNowConvert extends &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;a href=&quot;package%24%24fromnow%24&quot; id=&quot;scala.concurrent.duration.fromNow&quot; name=&quot;scala.concurrent.duration.fromNow&quot;&gt;fromNow&lt;/a&gt;.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d23aa6d3fb9b63ccddc33e98f4e7d0e8e47388c9" translate="yes" xml:space="preserve">
          <source>implicit objectspanConvert extends &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;a href=&quot;package%24%24span%24&quot; id=&quot;scala.concurrent.duration.span&quot; name=&quot;scala.concurrent.duration.span&quot;&gt;span&lt;/a&gt;.type]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36fe588647918a144a3cb83c8b0e1e290aaad96a" translate="yes" xml:space="preserve">
          <source>implicit ordering used to compare the elements of type &lt;code&gt;A&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d86fc0906429ad4cd780225e59fb56e483338b3" translate="yes" xml:space="preserve">
          <source>implicit val bigDecAsIntegral: &lt;a href=&quot;../../math/numeric%24%24bigdecimalasifintegral&quot; id=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot; name=&quot;scala.math.Numeric.BigDecimalAsIfIntegral&quot;&gt;BigDecimalAsIfIntegral&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4408e612337d1df0cf9a27fd23abfaf1f73602d0" translate="yes" xml:space="preserve">
          <source>implicit val buildFromString: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad46d0e73fec4534ed479d6a10c171f8c8c1c9cf" translate="yes" xml:space="preserve">
          <source>implicit val buildFromWrappedString: &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;a href=&quot;immutable/wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;, &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;immutable/wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="399317fe4ac93ab707c3732ca55f77dd9023d8b5" translate="yes" xml:space="preserve">
          <source>implicit val byteStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a434e0e496f76fc23ad835ed33d8a3f2c661801" translate="yes" xml:space="preserve">
          <source>implicit val byteStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;, &lt;a href=&quot;../intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="621647a22acce399d1ea42cc8d9e8d40afe44b5b" translate="yes" xml:space="preserve">
          <source>implicit val charStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="020082eab48467c1b68994832c01990f7b8d4bcb" translate="yes" xml:space="preserve">
          <source>implicit val charStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;, &lt;a href=&quot;../intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50c6cedb3c4b467bf9f2bab5177e1ffd67b8bcc7" translate="yes" xml:space="preserve">
          <source>implicit val codec: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80862459f15e4c38d8abe35e1329856d58365320" translate="yes" xml:space="preserve">
          <source>implicit val doubleAccumulatorFactoryInfo: &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../../jdk/doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db69275fc6c98a98be5eecc30d2e66acbb6ee97d" translate="yes" xml:space="preserve">
          <source>implicit val doubleAccumulatorFactoryShape: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517d483c3c00b35ad68af082c0096100071fc721" translate="yes" xml:space="preserve">
          <source>implicit val doubleOptionShape: &lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;java.util.OptionalDouble&quot;&gt;OptionalDouble&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a07f0d773c924badeceb4e53e27235e378d63177" translate="yes" xml:space="preserve">
          <source>implicit val doubleStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0a83e6afe1ef142fcd47a553dad7cedefd24ca" translate="yes" xml:space="preserve">
          <source>implicit val doubleStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;, &lt;a href=&quot;../doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d49d6ac02a6ddaf9f20228db8dcc4760dc63f836" translate="yes" xml:space="preserve">
          <source>implicit val doubleStreamUnboxer: &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1c00578a51dbe155dc76524b3fa4b28313ebab3" translate="yes" xml:space="preserve">
          <source>implicit val dummyImplicit: &lt;a href=&quot;dummyimplicit&quot; id=&quot;scala.DummyImplicit&quot; name=&quot;scala.DummyImplicit&quot;&gt;DummyImplicit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36117d600f113d4bbbd25ef4d5b8504e4d3035bf" translate="yes" xml:space="preserve">
          <source>implicit val ec: scala.concurrent.ExecutionContext = scala.concurrent.ExecutionContext.global&quot;&quot;&quot;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d67065b5f27f307f81234b10e62cd90672c471" translate="yes" xml:space="preserve">
          <source>implicit val floatStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25237336cc1a8ee8534c1289dbbe6c5f0ca5063f" translate="yes" xml:space="preserve">
          <source>implicit val floatStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;, &lt;a href=&quot;../doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e3c6198e636669c311e5ed316a9f76fb7c7f6e" translate="yes" xml:space="preserve">
          <source>implicit val intAccumulatorFactoryInfo: &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../../jdk/intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11896ed77b2e2c17a3a49d5716e63af09c424bd1" translate="yes" xml:space="preserve">
          <source>implicit val intAccumulatorFactoryShape: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f279b9949e7751107bbd74ab8b184c836ec32010" translate="yes" xml:space="preserve">
          <source>implicit val intOptionShape: &lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;java.util.OptionalInt&quot;&gt;OptionalInt&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3ec5f6e9284c0c589ed312faf45527789df8ea0" translate="yes" xml:space="preserve">
          <source>implicit val intStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14865e5b75909496f93fffcf0875e78305ddd9da" translate="yes" xml:space="preserve">
          <source>implicit val intStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;, &lt;a href=&quot;../intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="604ed03bb5a8ed4624d5177635901389d20d4bd8" translate="yes" xml:space="preserve">
          <source>implicit val intStreamUnboxer: &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f9b210f79a4c83e223ecf50f5693a012e9f705c" translate="yes" xml:space="preserve">
          <source>implicit val jByteStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;, &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45a2878ea6b9b03733b9750485e9af741eff9bd8" translate="yes" xml:space="preserve">
          <source>implicit val jByteStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Byte&quot;&gt;java.lang.Byte&lt;/span&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;, &lt;a href=&quot;../intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="732483415b8aed8a5461573287b948931342462f" translate="yes" xml:space="preserve">
          <source>implicit val jCharacterStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;, &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d0cf4dfc40d183e016c8853c2d5af78a6a74491" translate="yes" xml:space="preserve">
          <source>implicit val jCharacterStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Character&quot;&gt;Character&lt;/span&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;, &lt;a href=&quot;../intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74813503d0d499705b5808150d67654f45c5e34b" translate="yes" xml:space="preserve">
          <source>implicit val jDoubleAccumulatorFactoryInfo: &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;a href=&quot;../../jdk/intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f997e6df3a24e9988da3f0b880b8265a524b458" translate="yes" xml:space="preserve">
          <source>implicit val jDoubleAccumulatorFactoryShape: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64d2e4491314869e14ae58c9815c17b13c1d5de" translate="yes" xml:space="preserve">
          <source>implicit val jDoubleOptionShape: &lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;span name=&quot;java.util.OptionalDouble&quot;&gt;OptionalDouble&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c306ccee8f78fe8a052b9d71a893fb3fd6bc42a" translate="yes" xml:space="preserve">
          <source>implicit val jDoubleStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d4dbf0c83540f3875bb48b7a22082fe263a014" translate="yes" xml:space="preserve">
          <source>implicit val jDoubleStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;, &lt;a href=&quot;../doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5726c1c4470c14b4bac9d28aeccc984254747819" translate="yes" xml:space="preserve">
          <source>implicit val jFloatStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;, &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6134c85005ce5ad6fe20654cc695f29029d28777" translate="yes" xml:space="preserve">
          <source>implicit val jFloatStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Float&quot;&gt;java.lang.Float&lt;/span&gt;, &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;, &lt;a href=&quot;../doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223a8ea49b60ac0e602e83a06f9851fd4688cf3d" translate="yes" xml:space="preserve">
          <source>implicit val jIntegerAccumulatorFactoryInfo: &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;a href=&quot;../../jdk/intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b6f709a734f2b6975f09517831146a1627d1bb3" translate="yes" xml:space="preserve">
          <source>implicit val jIntegerAccumulatorFactoryShape: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0d4902573cb86f44b0dcd7917121743b6caa583" translate="yes" xml:space="preserve">
          <source>implicit val jIntegerOptionShape: &lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;span name=&quot;java.util.OptionalInt&quot;&gt;OptionalInt&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a04b1d1f5e4056ca983719e4bf612383fbfb8633" translate="yes" xml:space="preserve">
          <source>implicit val jIntegerStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90bd715b8a204781ee7ef2b9e7180716a68fa68c" translate="yes" xml:space="preserve">
          <source>implicit val jIntegerStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;, &lt;a href=&quot;../intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ba077978c48eb1a6ee87244814e4720e95da55" translate="yes" xml:space="preserve">
          <source>implicit val jLongAccumulatorFactoryInfo: &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;a href=&quot;../../jdk/intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e749ffe48b690332891f28f13370fdbdfb5451" translate="yes" xml:space="preserve">
          <source>implicit val jLongAccumulatorFactoryShape: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf6b56dbe7786a1e4b2796b3f4372a6390a66baf" translate="yes" xml:space="preserve">
          <source>implicit val jLongOptionShape: &lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;span name=&quot;java.util.OptionalLong&quot;&gt;OptionalLong&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c647d7f48962d28a03f1e15743e89afc18724d02" translate="yes" xml:space="preserve">
          <source>implicit val jLongStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984931d2251be62a80d3f1edc5971a75ea0bc64b" translate="yes" xml:space="preserve">
          <source>implicit val jLongStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;, &lt;a href=&quot;../longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97df700f8c68f811d483379efcbcd5fc290edf83" translate="yes" xml:space="preserve">
          <source>implicit val jShortStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;, &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a92f081d1d85c0fe03aaff19f96f9ac33d279a7" translate="yes" xml:space="preserve">
          <source>implicit val jShortStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;java.lang.Short&quot;&gt;java.lang.Short&lt;/span&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;, &lt;a href=&quot;../intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fe18d95e2dbd005d792a27f337ab35e6367f3f5" translate="yes" xml:space="preserve">
          <source>implicit val javaDoubleStreamUnboxer: &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;java.lang.Double&quot;&gt;java.lang.Double&lt;/span&gt;, &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6f51fee6c147584d90078fe5d51a2497733197b" translate="yes" xml:space="preserve">
          <source>implicit val javaIntegerStreamUnboxer: &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;java.lang.Integer&quot;&gt;Integer&lt;/span&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f269f845cb3b3712eb0737837a523273fdd9764" translate="yes" xml:space="preserve">
          <source>implicit val javaLongStreamUnboxer: &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;java.lang.Long&quot;&gt;java.lang.Long&lt;/span&gt;, &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9155adc38f2829f1c5c5601e1709eeb441123f" translate="yes" xml:space="preserve">
          <source>implicit val longAccumulatorFactoryInfo: &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../../jdk/longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab27fc7fa4791a7708c600fc7e34b42d647ade4" translate="yes" xml:space="preserve">
          <source>implicit val longAccumulatorFactoryShape: &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd1a33725e83e6d721d407acc5dbc14923d37fc8" translate="yes" xml:space="preserve">
          <source>implicit val longOptionShape: &lt;a href=&quot;optionshape&quot; id=&quot;scala.jdk.OptionShape&quot; name=&quot;scala.jdk.OptionShape&quot;&gt;OptionShape&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;java.util.OptionalLong&quot;&gt;OptionalLong&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a346f7ef4c7c078c2c1dbf8d6a40d044154aa5f" translate="yes" xml:space="preserve">
          <source>implicit val longStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b21222b336740f601b553377b1f9eefef1ce1a2" translate="yes" xml:space="preserve">
          <source>implicit val longStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;, &lt;a href=&quot;../longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c252225a0335629cf38a9083d47b2db73bf980c" translate="yes" xml:space="preserve">
          <source>implicit val longStreamUnboxer: &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc88b9636bc38251b7f1629ca8fc6de0047edeb3" translate="yes" xml:space="preserve">
          <source>implicit val ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a444c464ce1a5b19cc9f99679a640b26f1bc62f" translate="yes" xml:space="preserve">
          <source>implicit val ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0edbe8b3919170978c1baeeeef09406432eb1a4a" translate="yes" xml:space="preserve">
          <source>implicit val ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfa59a7a5e18848d135ddd4e29f9a30a031f251" translate="yes" xml:space="preserve">
          <source>implicit val ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0e934f88aad76ebba2323b400d09ed19723500f" translate="yes" xml:space="preserve">
          <source>implicit val ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53655ba79e553ed78512d7b7a095ed48abc53b8d" translate="yes" xml:space="preserve">
          <source>implicit val shortStepperShape: &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2531fd8879f229e203e84e7f9c264ac19ebae07" translate="yes" xml:space="preserve">
          <source>implicit val shortStreamShape: &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;, &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;, &lt;a href=&quot;../intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f2b9b72d0c83308bbce78c00329bef23d788f1a" translate="yes" xml:space="preserve">
          <source>implicit val stringFactory: &lt;a href=&quot;factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6007068d63b7d9421f7d8a3989f6c9b55a069ae" translate="yes" xml:space="preserve">
          <source>implicit val stringIsSeq: &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe5bbad8e9cf60fefee22706fea12d087645a547" translate="yes" xml:space="preserve">
          <source>implicit val stringViewIsSeq: &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;a href=&quot;../stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt;] { ... /* 2 definitions in type refinement */ }</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a266a7b1a7d8bb0fe6cf2973ed399c69e19214bc" translate="yes" xml:space="preserve">
          <source>implicit val tag: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7a8934d588329b0583f5c5107edf71809603fdc" translate="yes" xml:space="preserve">
          <source>implicitAmbiguous</source>
          <target state="translated">implicitAmbiguous</target>
        </trans-unit>
        <trans-unit id="84f2e74efc5156ef45839e314b9e24835d1ddb09" translate="yes" xml:space="preserve">
          <source>implicitAmbiguous.scala</source>
          <target state="translated">implicitAmbiguous.scala</target>
        </trans-unit>
        <trans-unit id="a9d5cf525f95bce0f2e4f72697e4b647198a8809" translate="yes" xml:space="preserve">
          <source>implicitConversions</source>
          <target state="translated">implicitConversions</target>
        </trans-unit>
        <trans-unit id="944626365991a3342b423542235608d7d28cb21f" translate="yes" xml:space="preserve">
          <source>implicitNotFound</source>
          <target state="translated">implicitNotFound</target>
        </trans-unit>
        <trans-unit id="0337dc0f1d9651097d58516472541c19dd9bff28" translate="yes" xml:space="preserve">
          <source>implicitNotFound.scala</source>
          <target state="translated">implicitNotFound.scala</target>
        </trans-unit>
        <trans-unit id="af10ef20dd9060bbeead0afbc55381a66af442ef" translate="yes" xml:space="preserve">
          <source>in</source>
          <target state="translated">in</target>
        </trans-unit>
        <trans-unit id="d7d7af048c9f35cf54ec4c16fe176d9be87eea02" translate="yes" xml:space="preserve">
          <source>in the default implementation, an &lt;code&gt;Iterator[Any]&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3afe50aba3d651856c9e1a5ea76908981ac5fc4a" translate="yes" xml:space="preserve">
          <source>in the default implementation, the empty string</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6618638f9abc2fb9cb9acd0c1c09de9eeefcda5f" translate="yes" xml:space="preserve">
          <source>in.reverse</source>
          <target state="translated">in.reverse</target>
        </trans-unit>
        <trans-unit id="a6508d4b88d22cba12cb67cb38c603bb819d6ced" translate="yes" xml:space="preserve">
          <source>include the subrange types as well as &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt; and &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;scala.Long&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a972b8629d76b99b6dade1825f7bcb3d28de99bf" translate="yes" xml:space="preserve">
          <source>include the subrange types as well as &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt; and &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;scala.Long&lt;/a&gt;.The</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00f554d678f26112aad9d51d7a8d2d590eb74801" translate="yes" xml:space="preserve">
          <source>included</source>
          <target state="translated">included</target>
        </trans-unit>
        <trans-unit id="e540cdd1328b2b21e29a95405c301b9313b7c346" translate="yes" xml:space="preserve">
          <source>index</source>
          <target state="translated">index</target>
        </trans-unit>
        <trans-unit id="1aa47148101c8670b802ca6c8a4c4864db7cfbc7" translate="yes" xml:space="preserve">
          <source>index at which to insert the subarray.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a35ee7eaec8cc5d95d6fb34fd8a6fa0cda877e1" translate="yes" xml:space="preserve">
          <source>index of the element to return</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd62812fbd9ec4c7f99aa4f6253fead2388eb238" translate="yes" xml:space="preserve">
          <source>init</source>
          <target state="translated">init</target>
        </trans-unit>
        <trans-unit id="8ad7d21c71b049b7003ba31b5f1322974df77ac8" translate="yes" xml:space="preserve">
          <source>initial</source>
          <target state="translated">initial</target>
        </trans-unit>
        <trans-unit id="b022f7202c40bb57425973b24bb38cdbef16787e" translate="yes" xml:space="preserve">
          <source>initialSize</source>
          <target state="translated">initialSize</target>
        </trans-unit>
        <trans-unit id="6e9937e7ddf42c6644513492f9c75aa07378e781" translate="yes" xml:space="preserve">
          <source>inline</source>
          <target state="translated">inline</target>
        </trans-unit>
        <trans-unit id="31cc21ed03c1d26d5722be3c3833bb6f27ec173c" translate="yes" xml:space="preserve">
          <source>inline.scala</source>
          <target state="translated">inline.scala</target>
        </trans-unit>
        <trans-unit id="140f86aae51ab9e1cda9b4254fe98a74eb54c1a1" translate="yes" xml:space="preserve">
          <source>input</source>
          <target state="translated">input</target>
        </trans-unit>
        <trans-unit id="8d00e0826a48b16355450b15005590f32da00ee5" translate="yes" xml:space="preserve">
          <source>inputStream</source>
          <target state="translated">inputStream</target>
        </trans-unit>
        <trans-unit id="355bae677b72d1210292b93fee805d8f1dc1575b" translate="yes" xml:space="preserve">
          <source>insertionPoint</source>
          <target state="translated">insertionPoint</target>
        </trans-unit>
        <trans-unit id="c51b88aa92c27dee1080572d4e7b9056b5c265bb" translate="yes" xml:space="preserve">
          <source>instead of the number &lt;code&gt;300&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46f8ab7c0cff9df7cd124852e26022a6bf89e315" translate="yes" xml:space="preserve">
          <source>int</source>
          <target state="translated">int</target>
        </trans-unit>
        <trans-unit id="f6bb2d7b18309b3464e268b3492dc695ecd5984a" translate="yes" xml:space="preserve">
          <source>integer types</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a258230180d9c643f761089d7e33b8b52288ed3" translate="yes" xml:space="preserve">
          <source>io</source>
          <target state="translated">io</target>
        </trans-unit>
        <trans-unit id="34cb804efda748d4e43c641854b40151cf0e5ff5" translate="yes" xml:space="preserve">
          <source>io.AnsiColor()</source>
          <target state="translated">io.AnsiColor()</target>
        </trans-unit>
        <trans-unit id="f117da9ed8f3bb4f81731cde118fab5bc48b4b53" translate="yes" xml:space="preserve">
          <source>io.BufferedSource()</source>
          <target state="translated">io.BufferedSource()</target>
        </trans-unit>
        <trans-unit id="4ac6f03ac82ebac541908bcff730ccefdcb5f7b3" translate="yes" xml:space="preserve">
          <source>io.Codec()</source>
          <target state="translated">io.Codec()</target>
        </trans-unit>
        <trans-unit id="bf7a436ea23b730ef2c1a035a2d90adea6a22a2f" translate="yes" xml:space="preserve">
          <source>io.LowPriorityCodecImplicits()</source>
          <target state="translated">io.LowPriorityCodecImplicits()</target>
        </trans-unit>
        <trans-unit id="f852e030a10a3909313878375e9d2542beb4e18d" translate="yes" xml:space="preserve">
          <source>io.Source()</source>
          <target state="translated">io.Source()</target>
        </trans-unit>
        <trans-unit id="94b107eedaee6cd25c987ea9314ddcf5fe1c3425" translate="yes" xml:space="preserve">
          <source>io.StdIn()</source>
          <target state="translated">io.StdIn()</target>
        </trans-unit>
        <trans-unit id="fa553b7ceca2fe4beeb844086613538715966bba" translate="yes" xml:space="preserve">
          <source>is a trait that extends &lt;code&gt;Any&lt;/code&gt;, only has &lt;code&gt;def&lt;/code&gt;s as members, and does no initialization.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85a88118ce4b2960aabf8df18f73c9579b8842c1" translate="yes" xml:space="preserve">
          <source>is rewritten to be:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2b28700f0f0e3e8e8b0d79f714200b8ce13d2a" translate="yes" xml:space="preserve">
          <source>is translated to:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e7a59d96cdb72c6747fcb9986a4e80b6829857e" translate="yes" xml:space="preserve">
          <source>isomorphic to &lt;code&gt;java.lang.Double&lt;/code&gt; when it comes to infinite or undefined values</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c5522ca8af86fc5069b737bb8892b3ea61002c2" translate="yes" xml:space="preserve">
          <source>it</source>
          <target state="translated">it</target>
        </trans-unit>
        <trans-unit id="36ad668464132d490dca6fb75386d211ca88b685" translate="yes" xml:space="preserve">
          <source>it is the result of otherwise invalid operationsit does not equal itself (according to &lt;code&gt;equals()&lt;/code&gt;)it compares greater than any other Duration apart from itself (for which &lt;code&gt;compare&lt;/code&gt; returns 0)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed8fa0dad3304c9c7f0c82beba15fbe11d1f16d5" translate="yes" xml:space="preserve">
          <source>iter</source>
          <target state="translated">iter</target>
        </trans-unit>
        <trans-unit id="9dd94c6934186333a00e635592ff461c9140c174" translate="yes" xml:space="preserve">
          <source>iterable</source>
          <target state="translated">iterable</target>
        </trans-unit>
        <trans-unit id="e3a733a3ad789f5b332c15ab6372a8f27586120a" translate="yes" xml:space="preserve">
          <source>iterableAsScalaIterable</source>
          <target state="translated">iterableAsScalaIterable</target>
        </trans-unit>
        <trans-unit id="aa6073b1ed3866787e39f8711d4a598f62909752" translate="yes" xml:space="preserve">
          <source>iterator with distinct elements</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5702ab9bea0482df5cf276c0094ffb20bd27e37" translate="yes" xml:space="preserve">
          <source>javaapi</source>
          <target state="translated">javaapi</target>
        </trans-unit>
        <trans-unit id="8c5a80410374d2f0ee36b75d7c3a87f4646a8edd" translate="yes" xml:space="preserve">
          <source>javaapi.CollectionConverters()</source>
          <target state="translated">javaapi.CollectionConverters()</target>
        </trans-unit>
        <trans-unit id="a6630dea5db9278c464f217c57d042c7512f5886" translate="yes" xml:space="preserve">
          <source>javaapi.DurationConverters()</source>
          <target state="translated">javaapi.DurationConverters()</target>
        </trans-unit>
        <trans-unit id="92c1e3057321d8a7922c8f45674eb10539cce0ae" translate="yes" xml:space="preserve">
          <source>javaapi.FunctionConverters()</source>
          <target state="translated">javaapi.FunctionConverters()</target>
        </trans-unit>
        <trans-unit id="2a8d0d76f5128e6fb46d5cb0114b5a0c4f008689" translate="yes" xml:space="preserve">
          <source>javaapi.FutureConverters()</source>
          <target state="translated">javaapi.FutureConverters()</target>
        </trans-unit>
        <trans-unit id="86994903dab59cfeb587c7234e9e79638f0cd808" translate="yes" xml:space="preserve">
          <source>javaapi.OptionConverters()</source>
          <target state="translated">javaapi.OptionConverters()</target>
        </trans-unit>
        <trans-unit id="14b93661d0ce5bd9a35bb2ad8f48ce5d3f1eae24" translate="yes" xml:space="preserve">
          <source>javaapi.StreamConverters()</source>
          <target state="translated">javaapi.StreamConverters()</target>
        </trans-unit>
        <trans-unit id="a46e7d934a9177a152637f238a54ea28cd131548" translate="yes" xml:space="preserve">
          <source>jdk</source>
          <target state="translated">jdk</target>
        </trans-unit>
        <trans-unit id="6283c8d0c890fcb4d7507d7df511e9db45bae44e" translate="yes" xml:space="preserve">
          <source>jdk.Accumulator()</source>
          <target state="translated">jdk.Accumulator()</target>
        </trans-unit>
        <trans-unit id="63d7287c814ee1d03d447424b508a7d0f1c7ebae" translate="yes" xml:space="preserve">
          <source>jdk.AnyAccumulator()</source>
          <target state="translated">jdk.AnyAccumulator()</target>
        </trans-unit>
        <trans-unit id="0dfba65ca9073d6913752a0f04c03cd77958daf9" translate="yes" xml:space="preserve">
          <source>jdk.CollectionConverters()</source>
          <target state="translated">jdk.CollectionConverters()</target>
        </trans-unit>
        <trans-unit id="0103810d03397369c32ecba4b256055d73043100" translate="yes" xml:space="preserve">
          <source>jdk.DoubleAccumulator()</source>
          <target state="translated">jdk.DoubleAccumulator()</target>
        </trans-unit>
        <trans-unit id="c70bad045d9fde91ef2c75eb42cea2bd5a9f7d9c" translate="yes" xml:space="preserve">
          <source>jdk.DurationConverters()</source>
          <target state="translated">jdk.DurationConverters()</target>
        </trans-unit>
        <trans-unit id="be36a4ec2d93c34719c3e1b9cd2a643440cc0cf4" translate="yes" xml:space="preserve">
          <source>jdk.FunctionConverters()</source>
          <target state="translated">jdk.FunctionConverters()</target>
        </trans-unit>
        <trans-unit id="f124be23a344522424ab29f1232b652e17e8cf33" translate="yes" xml:space="preserve">
          <source>jdk.FunctionWrappers()</source>
          <target state="translated">jdk.FunctionWrappers()</target>
        </trans-unit>
        <trans-unit id="b0e352899da8b5f75a6b2fa0a580fb748429b9bd" translate="yes" xml:space="preserve">
          <source>jdk.FutureConverters()</source>
          <target state="translated">jdk.FutureConverters()</target>
        </trans-unit>
        <trans-unit id="83554976a80881f8931b87b0bb07a84d1d8e1dd8" translate="yes" xml:space="preserve">
          <source>jdk.IntAccumulator()</source>
          <target state="translated">jdk.IntAccumulator()</target>
        </trans-unit>
        <trans-unit id="f291acf5b92cca30ec38d458577de9777f74fe75" translate="yes" xml:space="preserve">
          <source>jdk.LongAccumulator()</source>
          <target state="translated">jdk.LongAccumulator()</target>
        </trans-unit>
        <trans-unit id="a4f4fe94d9663932011343cd6e740a07a16665d6" translate="yes" xml:space="preserve">
          <source>jdk.OptionConverters()</source>
          <target state="translated">jdk.OptionConverters()</target>
        </trans-unit>
        <trans-unit id="8d5def8569085a3e86b51baed0def121536b0feb" translate="yes" xml:space="preserve">
          <source>jdk.OptionShape()</source>
          <target state="translated">jdk.OptionShape()</target>
        </trans-unit>
        <trans-unit id="ae030a8396e5131e494b87e7c106d9ac61b40a7b" translate="yes" xml:space="preserve">
          <source>jdk.Priority0FunctionExtensions()</source>
          <target state="translated">jdk.Priority0FunctionExtensions()</target>
        </trans-unit>
        <trans-unit id="1e809cdbd80b1bce552a00cca29c650b0935c1d8" translate="yes" xml:space="preserve">
          <source>jdk.Priority1FunctionExtensions()</source>
          <target state="translated">jdk.Priority1FunctionExtensions()</target>
        </trans-unit>
        <trans-unit id="325b467aa1be326d22d17ee3ea0e666441e7ad5c" translate="yes" xml:space="preserve">
          <source>jdk.Priority2FunctionExtensions()</source>
          <target state="translated">jdk.Priority2FunctionExtensions()</target>
        </trans-unit>
        <trans-unit id="3960f9952382f59af65fed58742852f9960dab6e" translate="yes" xml:space="preserve">
          <source>jdk.Priority3FunctionExtensions()</source>
          <target state="translated">jdk.Priority3FunctionExtensions()</target>
        </trans-unit>
        <trans-unit id="cb0c5e8fabaafc420babd989885499f3d2b8e6a4" translate="yes" xml:space="preserve">
          <source>jdk.StreamConverters()</source>
          <target state="translated">jdk.StreamConverters()</target>
        </trans-unit>
        <trans-unit id="13fbd79c3d390e5d6585a21e11ff5ec1970cff0c" translate="yes" xml:space="preserve">
          <source>k</source>
          <target state="translated">k</target>
        </trans-unit>
        <trans-unit id="1264bdfe5ff3215cf6abac2152fff607f7dc78dc" translate="yes" xml:space="preserve">
          <source>keep</source>
          <target state="translated">keep</target>
        </trans-unit>
        <trans-unit id="a62f2225bf70bfaccbc7f1ef2a397836717377de" translate="yes" xml:space="preserve">
          <source>key</source>
          <target state="translated">key</target>
        </trans-unit>
        <trans-unit id="4b1acaff933a3da22cf7d2ee0d258e6be6cbb322" translate="yes" xml:space="preserve">
          <source>key for which the entry should be removed</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fcf452f11811476b554545c87ddea7f1f53e5c3" translate="yes" xml:space="preserve">
          <source>key for which the entry should be replaced</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="650890d2ef65390222b81e015b6500bd108364f5" translate="yes" xml:space="preserve">
          <source>key with which the specified value is to be associated with</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5944ae25418ceabcf285dca1d721b77888dac89b" translate="yes" xml:space="preserve">
          <source>keys</source>
          <target state="translated">keys</target>
        </trans-unit>
        <trans-unit id="88f2baedfb0a00b41fccfc4b3c3fe259d351c59d" translate="yes" xml:space="preserve">
          <source>kv</source>
          <target state="translated">kv</target>
        </trans-unit>
        <trans-unit id="07c342be6e560e7f43842e2e21b774e61d85f047" translate="yes" xml:space="preserve">
          <source>l</source>
          <target state="translated">l</target>
        </trans-unit>
        <trans-unit id="b75092cd21733600b99ff9c2fcc50b217a54fe76" translate="yes" xml:space="preserve">
          <source>language$</source>
          <target state="translated">language$</target>
        </trans-unit>
        <trans-unit id="35c3ae6113f41491e3d406a378ae8def7552ab7d" translate="yes" xml:space="preserve">
          <source>language$.dynamics()</source>
          <target state="translated">language$.dynamics()</target>
        </trans-unit>
        <trans-unit id="600ad07dd5e3bdb1e234aa96c771a2f44a27b7e5" translate="yes" xml:space="preserve">
          <source>language$.existentials()</source>
          <target state="translated">language$.existentials()</target>
        </trans-unit>
        <trans-unit id="3fe8b11414ba1da9aafb3813c0698d78d156a106" translate="yes" xml:space="preserve">
          <source>language$.experimental$</source>
          <target state="translated">language$.experimental$</target>
        </trans-unit>
        <trans-unit id="b5027c5b66a318639f03fb038f6d83c5eb2ead35" translate="yes" xml:space="preserve">
          <source>language$.experimental$.macros()</source>
          <target state="translated">language$.experimental$.macros()</target>
        </trans-unit>
        <trans-unit id="26c04e94faa543e2756bc3dd785710673f3e6061" translate="yes" xml:space="preserve">
          <source>language$.experimental()</source>
          <target state="translated">language$.experimental()</target>
        </trans-unit>
        <trans-unit id="07df17a3f1b27602a96745ff4afabbfd8a463868" translate="yes" xml:space="preserve">
          <source>language$.higherKinds()</source>
          <target state="translated">language$.higherKinds()</target>
        </trans-unit>
        <trans-unit id="622fab677bf1ebcfad6af318fc68bdf13cbd921f" translate="yes" xml:space="preserve">
          <source>language$.implicitConversions()</source>
          <target state="translated">language$.implicitConversions()</target>
        </trans-unit>
        <trans-unit id="467d3dd57302d8f992587bfbcdda4fc640d1bf59" translate="yes" xml:space="preserve">
          <source>language$.postfixOps()</source>
          <target state="translated">language$.postfixOps()</target>
        </trans-unit>
        <trans-unit id="345bee497f15c6a3bc9e7de2b48ded8ea04e4f7e" translate="yes" xml:space="preserve">
          <source>language$.reflectiveCalls()</source>
          <target state="translated">language$.reflectiveCalls()</target>
        </trans-unit>
        <trans-unit id="931fc243a82a64c4a9b5f948a4ddf886ac627bb5" translate="yes" xml:space="preserve">
          <source>language.scala</source>
          <target state="translated">language.scala</target>
        </trans-unit>
        <trans-unit id="24bc47c45d1bdc1eb4a2789588c303373f807e55" translate="yes" xml:space="preserve">
          <source>languageFeature</source>
          <target state="translated">languageFeature</target>
        </trans-unit>
        <trans-unit id="01fdd72642815a7e40273ba14df83b42228dfd5c" translate="yes" xml:space="preserve">
          <source>languageFeature$</source>
          <target state="translated">languageFeature$</target>
        </trans-unit>
        <trans-unit id="9a66cf1925273b859b5032b499c93f1251e7f33d" translate="yes" xml:space="preserve">
          <source>languageFeature$.dynamics</source>
          <target state="translated">languageFeature$.dynamics</target>
        </trans-unit>
        <trans-unit id="318a81edf8bf9c3a6fcadc591a67a6856b64598c" translate="yes" xml:space="preserve">
          <source>languageFeature$.dynamics$</source>
          <target state="translated">languageFeature$.dynamics$</target>
        </trans-unit>
        <trans-unit id="c804321e32d8357b2db887ccfa8d1db50b3f0fab" translate="yes" xml:space="preserve">
          <source>languageFeature$.dynamics()</source>
          <target state="translated">languageFeature$.dynamics()</target>
        </trans-unit>
        <trans-unit id="c10dbd4fe7cb8b3bad7a06156b84ba943167062d" translate="yes" xml:space="preserve">
          <source>languageFeature$.existentials</source>
          <target state="translated">languageFeature$.existentials</target>
        </trans-unit>
        <trans-unit id="38b4ca3cd6c34e3276f7cbc17db5bea1ee9a09cd" translate="yes" xml:space="preserve">
          <source>languageFeature$.existentials$</source>
          <target state="translated">languageFeature$.existentials$</target>
        </trans-unit>
        <trans-unit id="65c914b02b7278be9723400d67042213a7c8fdfe" translate="yes" xml:space="preserve">
          <source>languageFeature$.existentials()</source>
          <target state="translated">languageFeature$.existentials()</target>
        </trans-unit>
        <trans-unit id="4e1671644097b0ccd15c80baf939ebf940958aa0" translate="yes" xml:space="preserve">
          <source>languageFeature$.experimental$</source>
          <target state="translated">languageFeature$.experimental$</target>
        </trans-unit>
        <trans-unit id="8f724339babac038f8d365803d1f671fb3dae5c9" translate="yes" xml:space="preserve">
          <source>languageFeature$.experimental$.macros</source>
          <target state="translated">languageFeature$.experimental$.macros</target>
        </trans-unit>
        <trans-unit id="871491765f224365a40f903fa3e73adf269545d5" translate="yes" xml:space="preserve">
          <source>languageFeature$.experimental$.macros$</source>
          <target state="translated">languageFeature$.experimental$.macros$</target>
        </trans-unit>
        <trans-unit id="03b412c5d5e242b41e739ec6787f34ac8bf0f7d8" translate="yes" xml:space="preserve">
          <source>languageFeature$.experimental$.macros()</source>
          <target state="translated">languageFeature$.experimental$.macros()</target>
        </trans-unit>
        <trans-unit id="a324b1b1c65613ea915f51ab6994383adaa39721" translate="yes" xml:space="preserve">
          <source>languageFeature$.experimental()</source>
          <target state="translated">languageFeature$.experimental()</target>
        </trans-unit>
        <trans-unit id="ab5a3c730b6f20842442701493a6dea4e3c0d722" translate="yes" xml:space="preserve">
          <source>languageFeature$.higherKinds</source>
          <target state="translated">languageFeature$.higherKinds</target>
        </trans-unit>
        <trans-unit id="08072c1511125e2ad62ad66832dcaa6cdf9e195a" translate="yes" xml:space="preserve">
          <source>languageFeature$.higherKinds$</source>
          <target state="translated">languageFeature$.higherKinds$</target>
        </trans-unit>
        <trans-unit id="cce3f5e07f2939ed9c05cfffcbb817a618fa5eba" translate="yes" xml:space="preserve">
          <source>languageFeature$.higherKinds()</source>
          <target state="translated">languageFeature$.higherKinds()</target>
        </trans-unit>
        <trans-unit id="ab2bf758a15328c48c2040d4122c788d8cb710fd" translate="yes" xml:space="preserve">
          <source>languageFeature$.implicitConversions</source>
          <target state="translated">languageFeature$.implicitConversions</target>
        </trans-unit>
        <trans-unit id="cc711d6323bbd6b668e7384488d502657e89633d" translate="yes" xml:space="preserve">
          <source>languageFeature$.implicitConversions$</source>
          <target state="translated">languageFeature$.implicitConversions$</target>
        </trans-unit>
        <trans-unit id="e708f91a063a90a33e68e6af65d1fd6cc1909d5e" translate="yes" xml:space="preserve">
          <source>languageFeature$.implicitConversions()</source>
          <target state="translated">languageFeature$.implicitConversions()</target>
        </trans-unit>
        <trans-unit id="7dab456ea964e531ec60b80fcb7644350c2a0ab8" translate="yes" xml:space="preserve">
          <source>languageFeature$.postfixOps</source>
          <target state="translated">languageFeature$.postfixOps</target>
        </trans-unit>
        <trans-unit id="80bc934c637e44f8661d4923a9d678d69b291bcf" translate="yes" xml:space="preserve">
          <source>languageFeature$.postfixOps$</source>
          <target state="translated">languageFeature$.postfixOps$</target>
        </trans-unit>
        <trans-unit id="12cba8e39c9dc2400cb0ec367e13d0dc7a10d279" translate="yes" xml:space="preserve">
          <source>languageFeature$.postfixOps()</source>
          <target state="translated">languageFeature$.postfixOps()</target>
        </trans-unit>
        <trans-unit id="6c9f923871568d19eb323c76f40961bd379e075a" translate="yes" xml:space="preserve">
          <source>languageFeature$.reflectiveCalls</source>
          <target state="translated">languageFeature$.reflectiveCalls</target>
        </trans-unit>
        <trans-unit id="7a6804f6e34990b6b47fa7cfe24da1af7b7cb589" translate="yes" xml:space="preserve">
          <source>languageFeature$.reflectiveCalls$</source>
          <target state="translated">languageFeature$.reflectiveCalls$</target>
        </trans-unit>
        <trans-unit id="5db6f123b2ffbd71812201249111e6628dee46c6" translate="yes" xml:space="preserve">
          <source>languageFeature$.reflectiveCalls()</source>
          <target state="translated">languageFeature$.reflectiveCalls()</target>
        </trans-unit>
        <trans-unit id="6d0e79b577fbf98ed309339afd0788c099a223df" translate="yes" xml:space="preserve">
          <source>languageFeature.scala</source>
          <target state="translated">languageFeature.scala</target>
        </trans-unit>
        <trans-unit id="dc80f4c135e11fddc8e0bf811b7ccb0447f0a5d4" translate="yes" xml:space="preserve">
          <source>lazy val elemTag: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a5f2818e2c83f71e2a0a44a85864783eec15a2e" translate="yes" xml:space="preserve">
          <source>lazy val elemTag: &lt;a href=&quot;../../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6191c6716a49f9baf8284bc226dd838fe7e1424" translate="yes" xml:space="preserve">
          <source>lazy val hashCode: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb592ca279994c28247f74326f13b608c88d08c7" translate="yes" xml:space="preserve">
          <source>lazy val headless: &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d90a6dfb41cb1df98bd518285cacfc50e16b730f" translate="yes" xml:space="preserve">
          <source>lazy val iter: &lt;a href=&quot;../collection/bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;collection.BufferedIterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df725cdcad5fc49ca0104456634469df34313975" translate="yes" xml:space="preserve">
          <source>lazy val length: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd6b9f18ccff7f6b9dda9162c962b07cd89b44c" translate="yes" xml:space="preserve">
          <source>lazy val noTraceSuppression: &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ab3d5ec6f8f0193a732bb61f39a934995ff3c5" translate="yes" xml:space="preserve">
          <source>lazy val preferIPv4Stack: &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bac9cc55a86f22576682a4740c45bb2080eb2627" translate="yes" xml:space="preserve">
          <source>lazy val preferIPv6Addresses: &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b150f7e3920b345688204dd6dd246dcd7ab40c2" translate="yes" xml:space="preserve">
          <source>lazy val scalaProps: &lt;span name=&quot;java.util.Properties&quot;&gt;java.util.Properties&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cc166fa1e9034ee1694639698d19d86fa1b4261" translate="yes" xml:space="preserve">
          <source>lazy val tail: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12c0f1fbadc4046b5f2bb9e063b227ef8750d9d6" translate="yes" xml:space="preserve">
          <source>left</source>
          <target state="translated">left</target>
        </trans-unit>
        <trans-unit id="a573b540d2dde90ba6da3b9d6286c8ec60c10044" translate="yes" xml:space="preserve">
          <source>len</source>
          <target state="translated">len</target>
        </trans-unit>
        <trans-unit id="3d54973f528b01019a58a52d34d518405a01b891" translate="yes" xml:space="preserve">
          <source>length</source>
          <target state="translated">length</target>
        </trans-unit>
        <trans-unit id="6742c995ad81c6b01f89904384f5655c39469489" translate="yes" xml:space="preserve">
          <source>lengthIs</source>
          <target state="translated">lengthIs</target>
        </trans-unit>
        <trans-unit id="ddf418e5db83f28e4e6ac57d672ea67aa6e32566" translate="yes" xml:space="preserve">
          <source>list and removed from the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31831b2b0f8a2479d58b41c0dc12cf55cc6e1540" translate="yes" xml:space="preserve">
          <source>list by</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a7c2a5b7ef751d81308df441d85002b1496ce8" translate="yes" xml:space="preserve">
          <source>list runs dry, the queue is pivoted by replacing the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19028dd78d103c6be91985df84dc78941e522730" translate="yes" xml:space="preserve">
          <source>list. When the</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef6866ce0a7d40aa9a2c8ad0c3ee75d3b586ab68" translate="yes" xml:space="preserve">
          <source>literal</source>
          <target state="translated">literal</target>
        </trans-unit>
        <trans-unit id="7babc233de26ab19ead1b9c278128d5c434910ee" translate="yes" xml:space="preserve">
          <source>log</source>
          <target state="translated">log</target>
        </trans-unit>
        <trans-unit id="bd3027fa569ea15ca76d84db21c67e2d514c1a5a" translate="yes" xml:space="preserve">
          <source>long</source>
          <target state="translated">long</target>
        </trans-unit>
        <trans-unit id="5f3acfbeb4f6fa5007dd1137ab1e96149af87281" translate="yes" xml:space="preserve">
          <source>lt</source>
          <target state="translated">lt</target>
        </trans-unit>
        <trans-unit id="6b0d31c0d563223024da45691584643ac78c96e8" translate="yes" xml:space="preserve">
          <source>m</source>
          <target state="translated">m</target>
        </trans-unit>
        <trans-unit id="b2238eb1f5af5965af858fe543f33695fd0f996b" translate="yes" xml:space="preserve">
          <source>macro def f[&lt;span name=&quot;A&quot;&gt;A &amp;gt;: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;args&quot;&gt;args: &lt;span name=&quot;scala.StringContext.f.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;): &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f35b2757dd5e4f3f8c66caae70f3e60bde63c7b0" translate="yes" xml:space="preserve">
          <source>macro def raw(&lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91485f569944e520fe451b530ee6fb88dc26dedd" translate="yes" xml:space="preserve">
          <source>macro def s(&lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;*&lt;/span&gt;): &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0731498bb0d6bbf3825fbde289392d549930ce57" translate="yes" xml:space="preserve">
          <source>macros</source>
          <target state="translated">macros</target>
        </trans-unit>
        <trans-unit id="37745ed7a0f005fb14522c5cc7c1ba3d9e0df579" translate="yes" xml:space="preserve">
          <source>map</source>
          <target state="translated">map</target>
        </trans-unit>
        <trans-unit id="8a4fa0abd2b8de21c71d3a44fbcbc813e0b721b9" translate="yes" xml:space="preserve">
          <source>mapAsJavaMap</source>
          <target state="translated">mapAsJavaMap</target>
        </trans-unit>
        <trans-unit id="046043473a7cfda6b6372e9564835cec044144f5" translate="yes" xml:space="preserve">
          <source>mapAsScalaConcurrentMap</source>
          <target state="translated">mapAsScalaConcurrentMap</target>
        </trans-unit>
        <trans-unit id="6e333318e208983e809a050fb4cb1f6b1d32abc9" translate="yes" xml:space="preserve">
          <source>mapAsScalaMap</source>
          <target state="translated">mapAsScalaMap</target>
        </trans-unit>
        <trans-unit id="5ed085decdb9fa2c303a21d393da5e32ade7421e" translate="yes" xml:space="preserve">
          <source>matching</source>
          <target state="translated">matching</target>
        </trans-unit>
        <trans-unit id="e052a70d68fa3ff864e1ccb27e6cc92199fbced8" translate="yes" xml:space="preserve">
          <source>matching.Regex()</source>
          <target state="translated">matching.Regex()</target>
        </trans-unit>
        <trans-unit id="2b7f242b2709a0d430fe02e65ba730e1dc8a30a9" translate="yes" xml:space="preserve">
          <source>matching.UnanchoredRegex()</source>
          <target state="translated">matching.UnanchoredRegex()</target>
        </trans-unit>
        <trans-unit id="7a488390a939c4795cc1a801e51751d5f25d800d" translate="yes" xml:space="preserve">
          <source>math</source>
          <target state="translated">math</target>
        </trans-unit>
        <trans-unit id="1e906dbe17de0a0ee9ec6362776036621a03b748" translate="yes" xml:space="preserve">
          <source>math.BigDecimal()</source>
          <target state="translated">math.BigDecimal()</target>
        </trans-unit>
        <trans-unit id="3d5ead2639bff89df0cfbaca437004fb994a06e6" translate="yes" xml:space="preserve">
          <source>math.BigInt()</source>
          <target state="translated">math.BigInt()</target>
        </trans-unit>
        <trans-unit id="a2d13714196ffd264a0cf17d2acde5f0bc1f3f9d" translate="yes" xml:space="preserve">
          <source>math.E()</source>
          <target state="translated">math.E()</target>
        </trans-unit>
        <trans-unit id="1c4d2229fab229232727ed35a0e6c0e87cf85de6" translate="yes" xml:space="preserve">
          <source>math.Equiv()</source>
          <target state="translated">math.Equiv()</target>
        </trans-unit>
        <trans-unit id="0fcc27dd796d011ab431ebfc93cbab3ea2eac14d" translate="yes" xml:space="preserve">
          <source>math.Fractional()</source>
          <target state="translated">math.Fractional()</target>
        </trans-unit>
        <trans-unit id="b32218e341f93d8ce4d51b2299c9d0bcce1666c8" translate="yes" xml:space="preserve">
          <source>math.IEEEremainder()</source>
          <target state="translated">math.IEEEremainder()</target>
        </trans-unit>
        <trans-unit id="1e5ac59c6e1f57f3eebf881a9d7d7106082e249e" translate="yes" xml:space="preserve">
          <source>math.Integral()</source>
          <target state="translated">math.Integral()</target>
        </trans-unit>
        <trans-unit id="f909edf11e3ee17df22e725f3a76ade3d1b98a31" translate="yes" xml:space="preserve">
          <source>math.LowPriorityEquiv()</source>
          <target state="translated">math.LowPriorityEquiv()</target>
        </trans-unit>
        <trans-unit id="d3189b80fee87480ac1ad91f35d98b12a2b1e078" translate="yes" xml:space="preserve">
          <source>math.LowPriorityOrderingImplicits()</source>
          <target state="translated">math.LowPriorityOrderingImplicits()</target>
        </trans-unit>
        <trans-unit id="84de296ca8426caed1da790637e7d2dd3b6843f8" translate="yes" xml:space="preserve">
          <source>math.Numeric()</source>
          <target state="translated">math.Numeric()</target>
        </trans-unit>
        <trans-unit id="5ba77a5ae3507415199ba3e7dcd0e1f499cf4736" translate="yes" xml:space="preserve">
          <source>math.Ordered()</source>
          <target state="translated">math.Ordered()</target>
        </trans-unit>
        <trans-unit id="eca30a077e722b22299646dd1b400f54e00a8b78" translate="yes" xml:space="preserve">
          <source>math.Ordering()</source>
          <target state="translated">math.Ordering()</target>
        </trans-unit>
        <trans-unit id="2bc83c69dfc2e1a4d3add56e243b1154b2d84d8d" translate="yes" xml:space="preserve">
          <source>math.PartialOrdering()</source>
          <target state="translated">math.PartialOrdering()</target>
        </trans-unit>
        <trans-unit id="d4225db58588e3511309c1186668a85c241b8ac8" translate="yes" xml:space="preserve">
          <source>math.PartiallyOrdered()</source>
          <target state="translated">math.PartiallyOrdered()</target>
        </trans-unit>
        <trans-unit id="10e522ac1d97ac35e0bc877f31b67f88e984b3a1" translate="yes" xml:space="preserve">
          <source>math.Pi()</source>
          <target state="translated">math.Pi()</target>
        </trans-unit>
        <trans-unit id="7d9feed11ee31d2d3678730589089f471c815259" translate="yes" xml:space="preserve">
          <source>math.ScalaNumericAnyConversions()</source>
          <target state="translated">math.ScalaNumericAnyConversions()</target>
        </trans-unit>
        <trans-unit id="341cd4906cce30cbd5ff10a36f5c88205e7a1f26" translate="yes" xml:space="preserve">
          <source>math.ScalaNumericConversions()</source>
          <target state="translated">math.ScalaNumericConversions()</target>
        </trans-unit>
        <trans-unit id="14486fda1e254a8db9b3b855f4452a70146a8915" translate="yes" xml:space="preserve">
          <source>math.abs()</source>
          <target state="translated">math.abs()</target>
        </trans-unit>
        <trans-unit id="06627e4da56211ae35f7229b1edce7be9105ac96" translate="yes" xml:space="preserve">
          <source>math.acos()</source>
          <target state="translated">math.acos()</target>
        </trans-unit>
        <trans-unit id="4b1041330c2b7ededf04ad6a4c92ec05c5ba7a4a" translate="yes" xml:space="preserve">
          <source>math.addExact()</source>
          <target state="translated">math.addExact()</target>
        </trans-unit>
        <trans-unit id="0304e54b36652de26660e58896d1fe1f8672c293" translate="yes" xml:space="preserve">
          <source>math.asin()</source>
          <target state="translated">math.asin()</target>
        </trans-unit>
        <trans-unit id="19a39764f54e3e5a7f292316199235934849bb8b" translate="yes" xml:space="preserve">
          <source>math.atan()</source>
          <target state="translated">math.atan()</target>
        </trans-unit>
        <trans-unit id="877e21d34f1e5fa7ab6f6021fa8e860bb6f1696f" translate="yes" xml:space="preserve">
          <source>math.atan2()</source>
          <target state="translated">math.atan2()</target>
        </trans-unit>
        <trans-unit id="d64897fcfae3d0b8b19dc13270c1050ad34eddf1" translate="yes" xml:space="preserve">
          <source>math.cbrt()</source>
          <target state="translated">math.cbrt()</target>
        </trans-unit>
        <trans-unit id="565046f5373f5304d0a0946f2c2782a522e90251" translate="yes" xml:space="preserve">
          <source>math.ceil()</source>
          <target state="translated">math.ceil()</target>
        </trans-unit>
        <trans-unit id="3eb767fd2196a3e8fdd6c92b42aac8b869518175" translate="yes" xml:space="preserve">
          <source>math.copySign()</source>
          <target state="translated">math.copySign()</target>
        </trans-unit>
        <trans-unit id="a27ccff89f1a2c88cf91fb8f2fdfbeefa6591c9d" translate="yes" xml:space="preserve">
          <source>math.cos()</source>
          <target state="translated">math.cos()</target>
        </trans-unit>
        <trans-unit id="da04e08f27169df7ef27078d2a4d2fea3476fbdc" translate="yes" xml:space="preserve">
          <source>math.cosh()</source>
          <target state="translated">math.cosh()</target>
        </trans-unit>
        <trans-unit id="e162617ab5968f457a17997905e9a00bcf368821" translate="yes" xml:space="preserve">
          <source>math.decrementExact()</source>
          <target state="translated">math.decrementExact()</target>
        </trans-unit>
        <trans-unit id="aeb4334e3bda0aca62a45ddb17e3937bc409937c" translate="yes" xml:space="preserve">
          <source>math.exp()</source>
          <target state="translated">math.exp()</target>
        </trans-unit>
        <trans-unit id="1c11b1357f7d37a499b563eb925dbe7462de2ac2" translate="yes" xml:space="preserve">
          <source>math.expm1()</source>
          <target state="translated">math.expm1()</target>
        </trans-unit>
        <trans-unit id="fe1de4e4d94fb7b9924b1f9c64b94cdbe688ec9e" translate="yes" xml:space="preserve">
          <source>math.floor()</source>
          <target state="translated">math.floor()</target>
        </trans-unit>
        <trans-unit id="feba6c7e33db5065a2e9f1175621423cb90d5f17" translate="yes" xml:space="preserve">
          <source>math.floorDiv()</source>
          <target state="translated">math.floorDiv()</target>
        </trans-unit>
        <trans-unit id="6ab9fa940a0048b08b415e55b52de17efc9c0563" translate="yes" xml:space="preserve">
          <source>math.floorMod()</source>
          <target state="translated">math.floorMod()</target>
        </trans-unit>
        <trans-unit id="70bc7df2e255175ad0db77981f6c251b9f6266fc" translate="yes" xml:space="preserve">
          <source>math.getExponent()</source>
          <target state="translated">math.getExponent()</target>
        </trans-unit>
        <trans-unit id="88cee993cb806549f5c2894d3db72d5bd50a7b31" translate="yes" xml:space="preserve">
          <source>math.hypot()</source>
          <target state="translated">math.hypot()</target>
        </trans-unit>
        <trans-unit id="82e649d74f1d2ffb8d5c79d690c563b33211f72f" translate="yes" xml:space="preserve">
          <source>math.incrementExact()</source>
          <target state="translated">math.incrementExact()</target>
        </trans-unit>
        <trans-unit id="5c5d9b74a0806c4357bc6c85738b618342b998ea" translate="yes" xml:space="preserve">
          <source>math.log()</source>
          <target state="translated">math.log()</target>
        </trans-unit>
        <trans-unit id="d515ff8944f5de6beb732a6ab89d7978c516266e" translate="yes" xml:space="preserve">
          <source>math.log10()</source>
          <target state="translated">math.log10()</target>
        </trans-unit>
        <trans-unit id="91eb3eb635af4d7fe5e8b83c96716a3d5476d3f6" translate="yes" xml:space="preserve">
          <source>math.log1p()</source>
          <target state="translated">math.log1p()</target>
        </trans-unit>
        <trans-unit id="d6857224fcee08574793bb82cd4dca59c1d3fb49" translate="yes" xml:space="preserve">
          <source>math.max()</source>
          <target state="translated">math.max()</target>
        </trans-unit>
        <trans-unit id="c0fedb9a59de2aa4a979a6d37232d95dba37e71b" translate="yes" xml:space="preserve">
          <source>math.min()</source>
          <target state="translated">math.min()</target>
        </trans-unit>
        <trans-unit id="cc216b5572bbce582c49236ca2b6529dd3ef5161" translate="yes" xml:space="preserve">
          <source>math.multiplyExact()</source>
          <target state="translated">math.multiplyExact()</target>
        </trans-unit>
        <trans-unit id="2bc47cf0efb167da331ecc17a02784b4ed39c468" translate="yes" xml:space="preserve">
          <source>math.negateExact()</source>
          <target state="translated">math.negateExact()</target>
        </trans-unit>
        <trans-unit id="09f6698fa1c2346241f412fc089d92b0b830e90e" translate="yes" xml:space="preserve">
          <source>math.nextAfter()</source>
          <target state="translated">math.nextAfter()</target>
        </trans-unit>
        <trans-unit id="eaa555b4166ec95262602f832eb89507b4fe21fb" translate="yes" xml:space="preserve">
          <source>math.nextDown()</source>
          <target state="translated">math.nextDown()</target>
        </trans-unit>
        <trans-unit id="70270eb3675bc8a7dfc3d193e2b0a029904dece1" translate="yes" xml:space="preserve">
          <source>math.nextUp()</source>
          <target state="translated">math.nextUp()</target>
        </trans-unit>
        <trans-unit id="799a4346daf7e7d11fe018c8eccfafb81de5523e" translate="yes" xml:space="preserve">
          <source>math.pow()</source>
          <target state="translated">math.pow()</target>
        </trans-unit>
        <trans-unit id="b1121e1ef316fc6c09dc53b3bf6a8b378ef4156a" translate="yes" xml:space="preserve">
          <source>math.random()</source>
          <target state="translated">math.random()</target>
        </trans-unit>
        <trans-unit id="9701cbc5bcf3f130ea9915fc5761c15f4f15d241" translate="yes" xml:space="preserve">
          <source>math.rint()</source>
          <target state="translated">math.rint()</target>
        </trans-unit>
        <trans-unit id="0c9ee625e47e218ae4b8b758af13e520e1061de0" translate="yes" xml:space="preserve">
          <source>math.round()</source>
          <target state="translated">math.round()</target>
        </trans-unit>
        <trans-unit id="d8f361b845f8830f31a4a1428674658e610833a1" translate="yes" xml:space="preserve">
          <source>math.scalb()</source>
          <target state="translated">math.scalb()</target>
        </trans-unit>
        <trans-unit id="2cbf3cb926a559ea5aba71f1f99fbef82dc90b93" translate="yes" xml:space="preserve">
          <source>math.signum()</source>
          <target state="translated">math.signum()</target>
        </trans-unit>
        <trans-unit id="7910d71eca1c8dbc95e1bdcb7451d104ca55acf6" translate="yes" xml:space="preserve">
          <source>math.sin()</source>
          <target state="translated">math.sin()</target>
        </trans-unit>
        <trans-unit id="81f31245919207a264bbc8e72c1ffb2fa2f22f1e" translate="yes" xml:space="preserve">
          <source>math.sinh()</source>
          <target state="translated">math.sinh()</target>
        </trans-unit>
        <trans-unit id="6862a2055e6d6e4f44427537e335413b9ecf2c19" translate="yes" xml:space="preserve">
          <source>math.sqrt()</source>
          <target state="translated">math.sqrt()</target>
        </trans-unit>
        <trans-unit id="a3a25c27b04dee0399ebbd2a105e21302e2feca0" translate="yes" xml:space="preserve">
          <source>math.subtractExact()</source>
          <target state="translated">math.subtractExact()</target>
        </trans-unit>
        <trans-unit id="c87729e68db07bbbb1a584f15ddae0f905524d6d" translate="yes" xml:space="preserve">
          <source>math.tan()</source>
          <target state="translated">math.tan()</target>
        </trans-unit>
        <trans-unit id="dbe7e99379aff0af95e306a8cf533d22fb641bd6" translate="yes" xml:space="preserve">
          <source>math.tanh()</source>
          <target state="translated">math.tanh()</target>
        </trans-unit>
        <trans-unit id="deeeb7ece296d478ef41ed0aa0cc9eaf94279863" translate="yes" xml:space="preserve">
          <source>math.toDegrees()</source>
          <target state="translated">math.toDegrees()</target>
        </trans-unit>
        <trans-unit id="a3c66213ff0ccd73ead40151380ced2589e6f65c" translate="yes" xml:space="preserve">
          <source>math.toIntExact()</source>
          <target state="translated">math.toIntExact()</target>
        </trans-unit>
        <trans-unit id="9ac3cfedb91dde1c52870e40670324ae710392ae" translate="yes" xml:space="preserve">
          <source>math.toRadians()</source>
          <target state="translated">math.toRadians()</target>
        </trans-unit>
        <trans-unit id="32bcc084ffe6eb7f3a6c3e5156452272e26645b9" translate="yes" xml:space="preserve">
          <source>math.ulp()</source>
          <target state="translated">math.ulp()</target>
        </trans-unit>
        <trans-unit id="37ff455e46ff06f6ed9b4651750248fa2961b701" translate="yes" xml:space="preserve">
          <source>maximum wait time, which may be negative (no waiting is done), &lt;a href=&quot;duration/duration%24#Inf:scala.concurrent.duration.Duration.Infinite&quot; id=&quot;scala.concurrent.duration.Duration#Inf&quot; name=&quot;scala.concurrent.duration.Duration#Inf&quot;&gt;Duration.Inf&lt;/a&gt; for unbounded waiting, or a finite positive duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0cc08b1187155ecdd8b11bd7527c5048f093caf" translate="yes" xml:space="preserve">
          <source>may not override &lt;code&gt;equals&lt;/code&gt; or &lt;code&gt;hashCode&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcab2065d59495532bbce07c9af6c778f6afe178" translate="yes" xml:space="preserve">
          <source>mc</source>
          <target state="translated">mc</target>
        </trans-unit>
        <trans-unit id="6f9b9af3cd6e8b8a73c2cdced37fe9f59226e27d" translate="yes" xml:space="preserve">
          <source>message</source>
          <target state="translated">message</target>
        </trans-unit>
        <trans-unit id="cb030491157b26a570b6ee91e5b068d99c3b72f6" translate="yes" xml:space="preserve">
          <source>meta</source>
          <target state="translated">meta</target>
        </trans-unit>
        <trans-unit id="5e3acaf41317c77fb4c353a9cc4382d3b273477e" translate="yes" xml:space="preserve">
          <source>meta.beanGetter()</source>
          <target state="translated">meta.beanGetter()</target>
        </trans-unit>
        <trans-unit id="ce3721b4f2b6abd5cc8a08650ba734ac7eea4a4b" translate="yes" xml:space="preserve">
          <source>meta.beanSetter()</source>
          <target state="translated">meta.beanSetter()</target>
        </trans-unit>
        <trans-unit id="5fd891747e03d8d3a8e6977898a09497adec53c7" translate="yes" xml:space="preserve">
          <source>meta.companionClass()</source>
          <target state="translated">meta.companionClass()</target>
        </trans-unit>
        <trans-unit id="17601deb76312b29da1411b7d633c7fc80e3d168" translate="yes" xml:space="preserve">
          <source>meta.companionMethod()</source>
          <target state="translated">meta.companionMethod()</target>
        </trans-unit>
        <trans-unit id="09c916953af0ee3001dc75bc5cf7bbeeef4c25de" translate="yes" xml:space="preserve">
          <source>meta.companionObject()</source>
          <target state="translated">meta.companionObject()</target>
        </trans-unit>
        <trans-unit id="b69da0d22d1c4c8674a84434d30d5f08c86b3345" translate="yes" xml:space="preserve">
          <source>meta.field()</source>
          <target state="translated">meta.field()</target>
        </trans-unit>
        <trans-unit id="c2be3fc5a30bc9b218d5c84638bcf473009829d8" translate="yes" xml:space="preserve">
          <source>meta.getter()</source>
          <target state="translated">meta.getter()</target>
        </trans-unit>
        <trans-unit id="6395a5093342fa6b2aed919b391558e452ccc77d" translate="yes" xml:space="preserve">
          <source>meta.languageFeature()</source>
          <target state="translated">meta.languageFeature()</target>
        </trans-unit>
        <trans-unit id="f4b06ef8c95883094dd20bab125647499f1e2294" translate="yes" xml:space="preserve">
          <source>meta.param()</source>
          <target state="translated">meta.param()</target>
        </trans-unit>
        <trans-unit id="49aa3edd285a8a925eba13ecdf14bb0cf4c7fd1d" translate="yes" xml:space="preserve">
          <source>meta.setter()</source>
          <target state="translated">meta.setter()</target>
        </trans-unit>
        <trans-unit id="e69bcacd6d6cc0585423a2ed594d49e3ab7db4bc" translate="yes" xml:space="preserve">
          <source>method &lt;code&gt;apply&lt;/code&gt;, which provides a way to convert between the type we wish to add extension methods to, &lt;code&gt;Repr&lt;/code&gt;, and &lt;code&gt;IterableOps[A, Iterable, C]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b748492e745857b4700eea0ebf687f6991b5799e" translate="yes" xml:space="preserve">
          <source>modified input array buffer sorted according to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da113b11c62e587995ea7fb88339684e32de0edb" translate="yes" xml:space="preserve">
          <source>modified input mutable sequence sorted according to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875d9f0e4f6d03f70907e8edf10dee3dda46a04a" translate="yes" xml:space="preserve">
          <source>modified input wrapped array sorted according to the ordering &lt;code&gt;ord&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19f34ee1e406ea84ca83c835a3301b5d9014a788" translate="yes" xml:space="preserve">
          <source>msg</source>
          <target state="translated">msg</target>
        </trans-unit>
        <trans-unit id="5723d165ed59595207e8c0c85bb720c83f4ce809" translate="yes" xml:space="preserve">
          <source>must</source>
          <target state="translated">must</target>
        </trans-unit>
        <trans-unit id="28c55d9cf6ee85008cd6df3e517e23b8a971a06c" translate="yes" xml:space="preserve">
          <source>must have a single &lt;code&gt;val&lt;/code&gt; parameter that is the underlying runtime representation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583994ac758e982bbef18ffb5b267f37fe7cefb1" translate="yes" xml:space="preserve">
          <source>must have a single &lt;code&gt;val&lt;/code&gt; parameter that is the underlying runtime representation.can define &lt;code&gt;def&lt;/code&gt;s, but no &lt;code&gt;val&lt;/code&gt;s, &lt;code&gt;var&lt;/code&gt;s, or nested &lt;code&gt;traits&lt;/code&gt;s, &lt;code&gt;class&lt;/code&gt;es or &lt;code&gt;object&lt;/code&gt;s.typically extend no other trait apart from &lt;code&gt;AnyVal&lt;/code&gt;.cannot be used in type tests or pattern matching.may not override &lt;code&gt;equals&lt;/code&gt; or &lt;code&gt;hashCode&lt;/code&gt; methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29db5adb285b1cb70c28a32a8121c0afe82610c9" translate="yes" xml:space="preserve">
          <source>mutable</source>
          <target state="translated">mutable</target>
        </trans-unit>
        <trans-unit id="902525acc8bdf8d7d8c6abb68816bdd81b8693d6" translate="yes" xml:space="preserve">
          <source>mutable.AbstractBuffer()</source>
          <target state="translated">mutable.AbstractBuffer()</target>
        </trans-unit>
        <trans-unit id="584b01b3431b96f56a4949a8ec4654ba21a9478f" translate="yes" xml:space="preserve">
          <source>mutable.AbstractIterable()</source>
          <target state="translated">mutable.AbstractIterable()</target>
        </trans-unit>
        <trans-unit id="279986f01b741d50caec31516f2f142fb854f546" translate="yes" xml:space="preserve">
          <source>mutable.AbstractMap()</source>
          <target state="translated">mutable.AbstractMap()</target>
        </trans-unit>
        <trans-unit id="2b166e81580f0733d34e320d6f67c3554d26d0c6" translate="yes" xml:space="preserve">
          <source>mutable.AbstractSeq()</source>
          <target state="translated">mutable.AbstractSeq()</target>
        </trans-unit>
        <trans-unit id="2a5c7c445e8a13160b7ca41b2efe493244bdb791" translate="yes" xml:space="preserve">
          <source>mutable.AbstractSet()</source>
          <target state="translated">mutable.AbstractSet()</target>
        </trans-unit>
        <trans-unit id="3aabc16ada21c964c0fc2e27b580621d20be5c2b" translate="yes" xml:space="preserve">
          <source>mutable.AnyRefMap()</source>
          <target state="translated">mutable.AnyRefMap()</target>
        </trans-unit>
        <trans-unit id="3f775ac58916c3bbf49e3be6052561eaabb70831" translate="yes" xml:space="preserve">
          <source>mutable.ArrayBuffer()</source>
          <target state="translated">mutable.ArrayBuffer()</target>
        </trans-unit>
        <trans-unit id="4a7a72596462a85de78d5a40306f32b976f2fb55" translate="yes" xml:space="preserve">
          <source>mutable.ArrayBufferView()</source>
          <target state="translated">mutable.ArrayBufferView()</target>
        </trans-unit>
        <trans-unit id="320deaacf8d6fcb15fe605e4f8ecb71fb973096e" translate="yes" xml:space="preserve">
          <source>mutable.ArrayBuilder()</source>
          <target state="translated">mutable.ArrayBuilder()</target>
        </trans-unit>
        <trans-unit id="4b69ba035ba75058f36dc212db789b081090c7e3" translate="yes" xml:space="preserve">
          <source>mutable.ArrayDeque()</source>
          <target state="translated">mutable.ArrayDeque()</target>
        </trans-unit>
        <trans-unit id="d388190ec3e3089b01fc1d71bc10b7d54fd87f05" translate="yes" xml:space="preserve">
          <source>mutable.ArrayDequeOps()</source>
          <target state="translated">mutable.ArrayDequeOps()</target>
        </trans-unit>
        <trans-unit id="a695a65923c02981ff6cd516827c9c670788ddf3" translate="yes" xml:space="preserve">
          <source>mutable.ArraySeq()</source>
          <target state="translated">mutable.ArraySeq()</target>
        </trans-unit>
        <trans-unit id="04dcb87c34195e3c6f60c076f075c5a4ae26e0f8" translate="yes" xml:space="preserve">
          <source>mutable.BitSet()</source>
          <target state="translated">mutable.BitSet()</target>
        </trans-unit>
        <trans-unit id="6c62eb3f9c81f9c7da5ee2de2417718cf8e89218" translate="yes" xml:space="preserve">
          <source>mutable.Buffer()</source>
          <target state="translated">mutable.Buffer()</target>
        </trans-unit>
        <trans-unit id="d743bdd42d624bd6d1a58625bc5b27b3cea07f53" translate="yes" xml:space="preserve">
          <source>mutable.Builder()</source>
          <target state="translated">mutable.Builder()</target>
        </trans-unit>
        <trans-unit id="bf046e7e2e720d68271fd8d37a421a0a73d72f90" translate="yes" xml:space="preserve">
          <source>mutable.Clearable()</source>
          <target state="translated">mutable.Clearable()</target>
        </trans-unit>
        <trans-unit id="4f7decc79d2c97bbf0fc3073a5524d383d5ddd79" translate="yes" xml:space="preserve">
          <source>mutable.Cloneable()</source>
          <target state="translated">mutable.Cloneable()</target>
        </trans-unit>
        <trans-unit id="2e99c42ac0c68f455aa8c7e9b6fa767dbc026577" translate="yes" xml:space="preserve">
          <source>mutable.CollisionProofHashMap()</source>
          <target state="translated">mutable.CollisionProofHashMap()</target>
        </trans-unit>
        <trans-unit id="09e97a6d3768ddf5420b083a857db9b328bb706c" translate="yes" xml:space="preserve">
          <source>mutable.Growable()</source>
          <target state="translated">mutable.Growable()</target>
        </trans-unit>
        <trans-unit id="555be789da93dd28f128a0f180cae0722060b7b0" translate="yes" xml:space="preserve">
          <source>mutable.GrowableBuilder()</source>
          <target state="translated">mutable.GrowableBuilder()</target>
        </trans-unit>
        <trans-unit id="ff7c9656fb11f8e2ec790d0839e16ef9ac000866" translate="yes" xml:space="preserve">
          <source>mutable.HashMap()</source>
          <target state="translated">mutable.HashMap()</target>
        </trans-unit>
        <trans-unit id="bf7d2448c53eba52382b04e48d025e1c669e5592" translate="yes" xml:space="preserve">
          <source>mutable.HashSet()</source>
          <target state="translated">mutable.HashSet()</target>
        </trans-unit>
        <trans-unit id="02dedede8165001ebe008ef9334a6424a43995ad" translate="yes" xml:space="preserve">
          <source>mutable.ImmutableBuilder()</source>
          <target state="translated">mutable.ImmutableBuilder()</target>
        </trans-unit>
        <trans-unit id="324f0c587be2f0ff9ca72cde4a02adbd148c897e" translate="yes" xml:space="preserve">
          <source>mutable.IndexedBuffer()</source>
          <target state="translated">mutable.IndexedBuffer()</target>
        </trans-unit>
        <trans-unit id="2cc6268aa03ddb175752ec06adc53f78601f021d" translate="yes" xml:space="preserve">
          <source>mutable.IndexedSeq()</source>
          <target state="translated">mutable.IndexedSeq()</target>
        </trans-unit>
        <trans-unit id="a6074e221bb197e63e00c1dc51f4cad5bbeb81f5" translate="yes" xml:space="preserve">
          <source>mutable.IndexedSeqOps()</source>
          <target state="translated">mutable.IndexedSeqOps()</target>
        </trans-unit>
        <trans-unit id="dfec7bc9d029dc9450ae55350ea7caa2fa3b6949" translate="yes" xml:space="preserve">
          <source>mutable.Iterable()</source>
          <target state="translated">mutable.Iterable()</target>
        </trans-unit>
        <trans-unit id="29080980fb70e77a4abc7b4dae3d7c18c3a925bf" translate="yes" xml:space="preserve">
          <source>mutable.LinkedHashMap()</source>
          <target state="translated">mutable.LinkedHashMap()</target>
        </trans-unit>
        <trans-unit id="ba38993f94a59386093315e2ae540c1e95855734" translate="yes" xml:space="preserve">
          <source>mutable.LinkedHashSet()</source>
          <target state="translated">mutable.LinkedHashSet()</target>
        </trans-unit>
        <trans-unit id="656531276f362ef47ea6ad6e99622d2250f81af2" translate="yes" xml:space="preserve">
          <source>mutable.ListBuffer()</source>
          <target state="translated">mutable.ListBuffer()</target>
        </trans-unit>
        <trans-unit id="600be35e08c66acd6c74369370172ce33e8ac7a0" translate="yes" xml:space="preserve">
          <source>mutable.ListMap()</source>
          <target state="translated">mutable.ListMap()</target>
        </trans-unit>
        <trans-unit id="ba10ed42395682d879ad01f79307e8708ccd36bf" translate="yes" xml:space="preserve">
          <source>mutable.LongMap()</source>
          <target state="translated">mutable.LongMap()</target>
        </trans-unit>
        <trans-unit id="af70d27b9a1af83d33203455d3caf0f5981e5d18" translate="yes" xml:space="preserve">
          <source>mutable.Map()</source>
          <target state="translated">mutable.Map()</target>
        </trans-unit>
        <trans-unit id="d0b0cfe2f7a0d382b7fea825a53e19a1d1fe3225" translate="yes" xml:space="preserve">
          <source>mutable.MapOps()</source>
          <target state="translated">mutable.MapOps()</target>
        </trans-unit>
        <trans-unit id="f7f0d51926c150a9855c8104b29a3f20934f63f9" translate="yes" xml:space="preserve">
          <source>mutable.MultiMap()</source>
          <target state="translated">mutable.MultiMap()</target>
        </trans-unit>
        <trans-unit id="784fedf128173363f799cd1368d6766c7951f0f3" translate="yes" xml:space="preserve">
          <source>mutable.OpenHashMap()</source>
          <target state="translated">mutable.OpenHashMap()</target>
        </trans-unit>
        <trans-unit id="fb6e6d6f5dcbe65da44f70508300191484684266" translate="yes" xml:space="preserve">
          <source>mutable.PriorityQueue()</source>
          <target state="translated">mutable.PriorityQueue()</target>
        </trans-unit>
        <trans-unit id="37a39e01832d96f9462611bc613760f318b0e876" translate="yes" xml:space="preserve">
          <source>mutable.Queue()</source>
          <target state="translated">mutable.Queue()</target>
        </trans-unit>
        <trans-unit id="290bbc2fb65955a67ddc2034b07b2e1ee6be244f" translate="yes" xml:space="preserve">
          <source>mutable.ReusableBuilder()</source>
          <target state="translated">mutable.ReusableBuilder()</target>
        </trans-unit>
        <trans-unit id="b994c20fa92a5a72912111959fb02fbdea7aea7b" translate="yes" xml:space="preserve">
          <source>mutable.Seq()</source>
          <target state="translated">mutable.Seq()</target>
        </trans-unit>
        <trans-unit id="348a9846bec09ff9e88abcff683499bced28c3b2" translate="yes" xml:space="preserve">
          <source>mutable.SeqMap()</source>
          <target state="translated">mutable.SeqMap()</target>
        </trans-unit>
        <trans-unit id="1474edbda7912da39c83eb8bcfc548bd0b53c754" translate="yes" xml:space="preserve">
          <source>mutable.SeqOps()</source>
          <target state="translated">mutable.SeqOps()</target>
        </trans-unit>
        <trans-unit id="301d5f0eb18b544ad622e828f31d8246d0a0165d" translate="yes" xml:space="preserve">
          <source>mutable.Set()</source>
          <target state="translated">mutable.Set()</target>
        </trans-unit>
        <trans-unit id="483c29f8896ff3f9527be9fce6475b3206944604" translate="yes" xml:space="preserve">
          <source>mutable.SetOps()</source>
          <target state="translated">mutable.SetOps()</target>
        </trans-unit>
        <trans-unit id="409e863524a0bb5f5264c097becefbc477eeebc4" translate="yes" xml:space="preserve">
          <source>mutable.Shrinkable()</source>
          <target state="translated">mutable.Shrinkable()</target>
        </trans-unit>
        <trans-unit id="e0266aa215d2c21c3f2ac1a767080bef1a864d66" translate="yes" xml:space="preserve">
          <source>mutable.SortedMap()</source>
          <target state="translated">mutable.SortedMap()</target>
        </trans-unit>
        <trans-unit id="3f3b6f085a51fc15c1118577a7f42b97ff35edf3" translate="yes" xml:space="preserve">
          <source>mutable.SortedMapOps()</source>
          <target state="translated">mutable.SortedMapOps()</target>
        </trans-unit>
        <trans-unit id="f0e4e986671e5d9e073b3006aa8d09fd02d503ba" translate="yes" xml:space="preserve">
          <source>mutable.SortedSet()</source>
          <target state="translated">mutable.SortedSet()</target>
        </trans-unit>
        <trans-unit id="b3301e53c0ff1700dd70a1bc88654411f6711cec" translate="yes" xml:space="preserve">
          <source>mutable.SortedSetOps()</source>
          <target state="translated">mutable.SortedSetOps()</target>
        </trans-unit>
        <trans-unit id="0e4504f54bb2cdd1db4d3ef7a1e22e0d6eeb4f98" translate="yes" xml:space="preserve">
          <source>mutable.Stack()</source>
          <target state="translated">mutable.Stack()</target>
        </trans-unit>
        <trans-unit id="476bccfb2997d9fb3df4488c3c945b64cc1507f5" translate="yes" xml:space="preserve">
          <source>mutable.StringBuilder()</source>
          <target state="translated">mutable.StringBuilder()</target>
        </trans-unit>
        <trans-unit id="e5dea04d1be053ccdbaabbf7889f741c56cb5815" translate="yes" xml:space="preserve">
          <source>mutable.TreeMap()</source>
          <target state="translated">mutable.TreeMap()</target>
        </trans-unit>
        <trans-unit id="0a5aa80a255889e4b7902398ccc70a4b21fc4567" translate="yes" xml:space="preserve">
          <source>mutable.TreeSet()</source>
          <target state="translated">mutable.TreeSet()</target>
        </trans-unit>
        <trans-unit id="f16502f2f06890726b075eb682815f206bd892d7" translate="yes" xml:space="preserve">
          <source>mutable.UnrolledBuffer()</source>
          <target state="translated">mutable.UnrolledBuffer()</target>
        </trans-unit>
        <trans-unit id="19803f084b6af4086c038605bcd501a9dea8442f" translate="yes" xml:space="preserve">
          <source>mutable.WeakHashMap()</source>
          <target state="translated">mutable.WeakHashMap()</target>
        </trans-unit>
        <trans-unit id="aa463351651fbe3e5a65e45a7ae2079c3ad0ef95" translate="yes" xml:space="preserve">
          <source>mutableMapAsJavaMap</source>
          <target state="translated">mutableMapAsJavaMap</target>
        </trans-unit>
        <trans-unit id="7574dbff8ee56ff31ad66fe8271b944b97750597" translate="yes" xml:space="preserve">
          <source>mutableSeqAsJavaList</source>
          <target state="translated">mutableSeqAsJavaList</target>
        </trans-unit>
        <trans-unit id="b5ad2f57dcfcd89bde6d4083acf3d6a49176bbb4" translate="yes" xml:space="preserve">
          <source>mutableSetAsJavaSet</source>
          <target state="translated">mutableSetAsJavaSet</target>
        </trans-unit>
        <trans-unit id="d1854cae891ec7b29161ccaf79a24b00c274bdaa" translate="yes" xml:space="preserve">
          <source>n</source>
          <target state="translated">n</target>
        </trans-unit>
        <trans-unit id="40b3eab63f3f1d4fa48e09559401c5ed4efceaa6" translate="yes" xml:space="preserve">
          <source>n1</source>
          <target state="translated">n1</target>
        </trans-unit>
        <trans-unit id="40243476fcaaf8dca4d9eda7fde4232c5c18f75d" translate="yes" xml:space="preserve">
          <source>n2</source>
          <target state="translated">n2</target>
        </trans-unit>
        <trans-unit id="26c2ce28d0df94c010c5255203b885cba81b9018" translate="yes" xml:space="preserve">
          <source>n3</source>
          <target state="translated">n3</target>
        </trans-unit>
        <trans-unit id="f3342a76bd80e19429a753ba2df5c9377e8225a3" translate="yes" xml:space="preserve">
          <source>n4</source>
          <target state="translated">n4</target>
        </trans-unit>
        <trans-unit id="7c0575c87e8cae6ca0bb863db72413e54e32308c" translate="yes" xml:space="preserve">
          <source>n5</source>
          <target state="translated">n5</target>
        </trans-unit>
        <trans-unit id="6ae999552a0d2dca14d62e2bc8b764d377b1dd6c" translate="yes" xml:space="preserve">
          <source>name</source>
          <target state="translated">name</target>
        </trans-unit>
        <trans-unit id="4f58fdb8a357da489b4585361655c89ec5693522" translate="yes" xml:space="preserve">
          <source>name of the resource to load from the classpath</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d51b533ab0f86818c14e588e99ca371655cf1c" translate="yes" xml:space="preserve">
          <source>name0</source>
          <target state="translated">name0</target>
        </trans-unit>
        <trans-unit id="6f5b01580ce43822444ae4c79edcd0dc789028f1" translate="yes" xml:space="preserve">
          <source>native</source>
          <target state="translated">native</target>
        </trans-unit>
        <trans-unit id="35be0dbed9eb22c418d1d5e06a500d3297282c98" translate="yes" xml:space="preserve">
          <source>native.scala</source>
          <target state="translated">native.scala</target>
        </trans-unit>
        <trans-unit id="1a9e8e5ee15e97eafdf2352fd2ffc515ea62aeca" translate="yes" xml:space="preserve">
          <source>negative if x &amp;lt; ypositive if x &amp;gt; yzero otherwise (if x == y)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0251cd5a907233b519a1e4a1c64dbb6fcb64f824" translate="yes" xml:space="preserve">
          <source>neutral element for the operator &lt;code&gt;op&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85777c03b72554cd08e721b6148dc27d2a50a7a6" translate="yes" xml:space="preserve">
          <source>never</source>
          <target state="translated">never</target>
        </trans-unit>
        <trans-unit id="8b9a6be74d10b8cc30fa66aacc64c5c6ae518461" translate="yes" xml:space="preserve">
          <source>never elide this method</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9271afa32a356123e47bf26c8cf5cf87056d640b" translate="yes" xml:space="preserve">
          <source>new ::(&lt;span name=&quot;head&quot;&gt;head: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;next&quot;&gt;next: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d0637d0b0472cfae91a3f3570d9a13206203ee" translate="yes" xml:space="preserve">
          <source>new AbstractBuffer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd4d37a3c467191d1120ee4cd5b031645dd2f731" translate="yes" xml:space="preserve">
          <source>new AbstractIndexedSeqView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a9b5ff7b7dc5881c16ba16863a78493b9e32f7" translate="yes" xml:space="preserve">
          <source>new AbstractIterable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5c8aa9f24897360f6b55ec0cb125a4277b9ac4e" translate="yes" xml:space="preserve">
          <source>new AbstractIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49914a5161a88f6df756e23c459b2566d8e4c4b3" translate="yes" xml:space="preserve">
          <source>new AbstractMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0203c06c548017ad12257cf8fe87af51419a0122" translate="yes" xml:space="preserve">
          <source>new AbstractMapView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cd678e5302b6a2f53b61b070f4ccd8d1f0ba109" translate="yes" xml:space="preserve">
          <source>new AbstractSeq()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37dde7c749d8b5d529cb2057184ad779fe577f0b" translate="yes" xml:space="preserve">
          <source>new AbstractSeqView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1eba06a40852ab4f6dfdbee74afd4453f49c661b" translate="yes" xml:space="preserve">
          <source>new AbstractSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="420f6d408c749ed10c7893da569bfb8fefd12832" translate="yes" xml:space="preserve">
          <source>new AbstractView()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998631c43f2025e3a2c4db2ad8260f3ba700c3ab" translate="yes" xml:space="preserve">
          <source>new Accumulator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e6e376a31e420a10daf361ebeef62558644e05a" translate="yes" xml:space="preserve">
          <source>new AnyAccumulator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1191534a443568072b7e7e59c5e1ac8923eb52" translate="yes" xml:space="preserve">
          <source>new AnyArrayHasSeqParStream(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39159cbbe7ae942fa284c299018e00b5d36d359" translate="yes" xml:space="preserve">
          <source>new AnyIterableDelegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;classtagiterablefactory&quot; id=&quot;scala.collection.ClassTagIterableFactory&quot; name=&quot;scala.collection.ClassTagIterableFactory&quot;&gt;ClassTagIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7df1e06fd41b4b90ba1e3a5bc3035250788a5db8" translate="yes" xml:space="preserve">
          <source>new AnyRefMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1d5df97e395396e87b5f9ee4e5babb50666d82" translate="yes" xml:space="preserve">
          <source>new AnyRefMap(&lt;span name=&quot;defaultEntry&quot;&gt;defaultEntry: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b4d7910b0cff47d02a1608515bd797ec6a0bda0" translate="yes" xml:space="preserve">
          <source>new AnyRefMap(&lt;span name=&quot;defaultEntry&quot;&gt;defaultEntry: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;initialBufferSize&quot;&gt;initialBufferSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b936a6585f4da776f00817faf96900a214d863a" translate="yes" xml:space="preserve">
          <source>new AnyRefMap(&lt;span name=&quot;initialBufferSize&quot;&gt;initialBufferSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b7d78256442a94b970df5df4b544857d3215d2" translate="yes" xml:space="preserve">
          <source>new AnyRefMapBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c3c3ea009eb87821488e98ac36465c16e71826a" translate="yes" xml:space="preserve">
          <source>new AnySeqDelegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;classtagseqfactory&quot; id=&quot;scala.collection.ClassTagSeqFactory&quot; name=&quot;scala.collection.ClassTagSeqFactory&quot;&gt;ClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.AnySeqDelegate.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="437f82f100d38f52af5df79b93c7e269fd5432a3" translate="yes" xml:space="preserve">
          <source>new AnyStepperSpliterator(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84a8af66042ec0b10265bf907ea352a71c1ab54f" translate="yes" xml:space="preserve">
          <source>new AnyVal()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1570d88c7e81f59e9b7a4fde197f0028d621900a" translate="yes" xml:space="preserve">
          <source>new AnyValManifest(&lt;span name=&quot;toString&quot;&gt;toString: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b3e804188277ea108c73ae6cec229bba5496940" translate="yes" xml:space="preserve">
          <source>new Appended(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14548eb7c1b3e8537100ad991be13483e1343b2" translate="yes" xml:space="preserve">
          <source>new Appended(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="951725f72363f3c31641b92e146a97a102c51bab" translate="yes" xml:space="preserve">
          <source>new Appended(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5bd67a3e37bc8b759453b835bdc82655a3bfe679" translate="yes" xml:space="preserve">
          <source>new Array(&lt;span name=&quot;_length&quot;&gt;_length: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df1a4b15e28d3c7ba5fb472d642f585462b4c42e" translate="yes" xml:space="preserve">
          <source>new ArrayBuffer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e718f5d6f839863d7f81e06c24d4d9c7bd1bbc98" translate="yes" xml:space="preserve">
          <source>new ArrayBuffer(&lt;span name=&quot;initialSize&quot;&gt;initialSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="556d9c7f1456ed466024a042baa96cc43626bfeb" translate="yes" xml:space="preserve">
          <source>new ArrayBufferView(&lt;span name=&quot;array&quot;&gt;array: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45a3091b7a3cedd8faa69749a609520afd7e5e6" translate="yes" xml:space="preserve">
          <source>new ArrayCharSequence(&lt;span name=&quot;arrayOfChars&quot;&gt;arrayOfChars: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f053daa1b1d1deb4e17fba89ad3bb220e6810ae" translate="yes" xml:space="preserve">
          <source>new ArrayDeque(&lt;span name=&quot;array&quot;&gt;array: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cbcf4d84604c6ed4413dc6e0401cdd076972c00" translate="yes" xml:space="preserve">
          <source>new ArrayDeque(&lt;span name=&quot;initialSize&quot;&gt;initialSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;arraydeque%24&quot;&gt;ArrayDeque.DefaultInitialSize&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="422793fee0f3f1c910e2d11497a87b4293b60599" translate="yes" xml:space="preserve">
          <source>new ArrayHashing()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49434f9d62fd78396449fde8568fcfe1b151f0b2" translate="yes" xml:space="preserve">
          <source>new ArrayOps(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c609ea9f9ba675378de88e57775ef14e6ba54163" translate="yes" xml:space="preserve">
          <source>new ArrowAssoc(&lt;span name=&quot;self&quot;&gt;self: &lt;span name=&quot;scala.Predef.ArrowAssoc.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7da996b41c5017af28f4683a56b84d449b064f5c" translate="yes" xml:space="preserve">
          <source>new AsJava(&lt;span name=&quot;op&quot;&gt;op: =&amp;gt; &lt;span name=&quot;scala.collection.JavaConverters.AsJava.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10e36a793c57476d54ac586f304e050dee038a02" translate="yes" xml:space="preserve">
          <source>new AsJavaBiConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae8750fa3bfca070c5c779e5d37c29b9b8db8f5" translate="yes" xml:space="preserve">
          <source>new AsJavaBiFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d51d51e1b992110a71c1e7ff142591afb21c5c26" translate="yes" xml:space="preserve">
          <source>new AsJavaBiPredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4f1b3ee784ba030306697ed259be27d11d33ea" translate="yes" xml:space="preserve">
          <source>new AsJavaBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39fc70a1a1aa48d42b29ad2cbbfede927981eb45" translate="yes" xml:space="preserve">
          <source>new AsJavaBooleanSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f944cad7f0989f90a49922b55733b9918332861b" translate="yes" xml:space="preserve">
          <source>new AsJavaCollection(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaCollection.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="511b19d6d6072efd579eaef1a7054d548ee90bb3" translate="yes" xml:space="preserve">
          <source>new AsJavaConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42f9ca92e9cf0a5db6b55c1d4aa7a9fa0db78915" translate="yes" xml:space="preserve">
          <source>new AsJavaDictionary(&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.JavaConverters.AsJavaDictionary.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a6dc549112c6ef1c9632df9d9a14cf8ea3734b0" translate="yes" xml:space="preserve">
          <source>new AsJavaDoubleBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd9512f36ac7b7a0c5cb001505e814689818475d" translate="yes" xml:space="preserve">
          <source>new AsJavaDoubleConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd9695ce135edcc10854b9126f246d72fdb39522" translate="yes" xml:space="preserve">
          <source>new AsJavaDoubleFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745306e2a767a8607e5e0156c943f4ac1f467bfd" translate="yes" xml:space="preserve">
          <source>new AsJavaDoublePredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89883dcf7dd9dec5ac84539d8dcdccf6cd3bb0ff" translate="yes" xml:space="preserve">
          <source>new AsJavaDoubleSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e16c3c46d7e1611c520ec6193be2e7d6a930fad" translate="yes" xml:space="preserve">
          <source>new AsJavaDoubleToIntFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be2fec5bfe9324ff84d47fd9da9d598d64ce0e0e" translate="yes" xml:space="preserve">
          <source>new AsJavaDoubleToLongFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ccee293df3fbf83c88244f6b05130fe61f16ed8" translate="yes" xml:space="preserve">
          <source>new AsJavaDoubleUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb031fdd5b02c59087ddabcb77272bd1fbb30ada" translate="yes" xml:space="preserve">
          <source>new AsJavaEnumeration(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.JavaConverters.AsJavaEnumeration.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1875f2af8c4a3f5e2ca7232a243ae5ff31cb797" translate="yes" xml:space="preserve">
          <source>new AsJavaFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ee7ee390bd0dad05cc6a53ec4724fe67cccc6fa" translate="yes" xml:space="preserve">
          <source>new AsJavaIntBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b8768f7273668cfb626f16e86a3b99f6f59b5c" translate="yes" xml:space="preserve">
          <source>new AsJavaIntConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a182732b2e85da37151f04104ced4a589a26d2e5" translate="yes" xml:space="preserve">
          <source>new AsJavaIntFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaIntFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="763de691b96afad19d6abc8e85ad18038adb7575" translate="yes" xml:space="preserve">
          <source>new AsJavaIntPredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1584f38328052e49176579313f5071b6fb79f23d" translate="yes" xml:space="preserve">
          <source>new AsJavaIntSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76f6defe5836afc717a6fd1c22961267d6541122" translate="yes" xml:space="preserve">
          <source>new AsJavaIntToDoubleFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27e77d441dc4ec8f2615687b726c629b75a9d5ab" translate="yes" xml:space="preserve">
          <source>new AsJavaIntToLongFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976c09a5216b27b9f2c0e1612bb44c8c61e1190c" translate="yes" xml:space="preserve">
          <source>new AsJavaIntUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b446604614c6fb9b67896f80c8dfebd22e33e2b1" translate="yes" xml:space="preserve">
          <source>new AsJavaLongBinaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87bb06ad33aca196f61cfedd84ce5ce9fd11bb30" translate="yes" xml:space="preserve">
          <source>new AsJavaLongConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cbdf7e5980b74a3ee0073899af548c894c03f0c" translate="yes" xml:space="preserve">
          <source>new AsJavaLongFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaLongFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04252c7fc5561ce087f167a8249d24899415a2c8" translate="yes" xml:space="preserve">
          <source>new AsJavaLongPredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d2f83fa30630e057d3cea196c1d4713f04dbdfc" translate="yes" xml:space="preserve">
          <source>new AsJavaLongSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee790107e7100c87db7829ac066399c6f54c21e4" translate="yes" xml:space="preserve">
          <source>new AsJavaLongToDoubleFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b24aa7c5c2c10489b678ecc00e505d62e2949d" translate="yes" xml:space="preserve">
          <source>new AsJavaLongToIntFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f061c1e91f5f5a7a48d60a8786cf2313cc8e7d" translate="yes" xml:space="preserve">
          <source>new AsJavaLongUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4111b09582fe50e1db82f539ec1d1fa1bf81dfac" translate="yes" xml:space="preserve">
          <source>new AsJavaObjDoubleConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21318c05870e0aceafcf7dfb791c093cf93ec09" translate="yes" xml:space="preserve">
          <source>new AsJavaObjIntConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27f4ffcf1fb72cc5aeca8d0dc66b7cfa0468250" translate="yes" xml:space="preserve">
          <source>new AsJavaObjLongConsumer(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1538137877e82f13ab7ae159a39d5bc202118fd" translate="yes" xml:space="preserve">
          <source>new AsJavaPredicate(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8b931b0d085905c2bd0508367957bd2cdba268" translate="yes" xml:space="preserve">
          <source>new AsJavaSupplier(&lt;span name=&quot;sf&quot;&gt;sf: () =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaSupplier.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29cc09bb9f1cf9ba8b3487cfe7e40d41b91586be" translate="yes" xml:space="preserve">
          <source>new AsJavaToDoubleBiFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a92fc00210c81e8640a580f0f27f9750eaf7ebe4" translate="yes" xml:space="preserve">
          <source>new AsJavaToDoubleFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc6af05e4b42da69c3939da6ec4d9eb78f8e5408" translate="yes" xml:space="preserve">
          <source>new AsJavaToIntBiFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bb0306c92245674d70be188fadb20bdb9dce045" translate="yes" xml:space="preserve">
          <source>new AsJavaToIntFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a80fe9eb518af80c991c6988e240c46964fd033" translate="yes" xml:space="preserve">
          <source>new AsJavaToLongBiFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63fa33649cdd5786ea2824bc10b0c99b7e1bfe1" translate="yes" xml:space="preserve">
          <source>new AsJavaToLongFunction(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0faf07253b66f456f07290ac6251934a3c783b6f" translate="yes" xml:space="preserve">
          <source>new AsJavaUnaryOperator(&lt;span name=&quot;sf&quot;&gt;sf: (&lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.AsJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="410554b643efab5e43d40328e7aea2bbec8e3c8e" translate="yes" xml:space="preserve">
          <source>new AsScala(&lt;span name=&quot;op&quot;&gt;op: =&amp;gt; &lt;span name=&quot;scala.collection.JavaConverters.AsScala.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ba53f3b97eb2662479e2cd93d10d53b6a98bb1" translate="yes" xml:space="preserve">
          <source>new BigDecimal(&lt;span name=&quot;bigDecimal&quot;&gt;bigDecimal: &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071ba2c9c475809eeaa730d25f8dddb09326db3c" translate="yes" xml:space="preserve">
          <source>new BigDecimal(&lt;span name=&quot;bigDecimal&quot;&gt;bigDecimal: &lt;span name=&quot;java.math.BigDecimal&quot;&gt;java.math.BigDecimal&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee01eb020ed5d910038f6f6edfb8b110b10cd98c" translate="yes" xml:space="preserve">
          <source>new BigInt(&lt;span name=&quot;bigInteger&quot;&gt;bigInteger: &lt;span name=&quot;java.math.BigInteger&quot;&gt;BigInteger&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d42a06d2ee9781a0a8ee5c948ee96000ea5e7da" translate="yes" xml:space="preserve">
          <source>new BitSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfe0fc2d21ab710e78f41a1e7e64a65f03665265" translate="yes" xml:space="preserve">
          <source>new BitSet(&lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb23eae7cd2185431e7f6d88da20c6e1d95b73f6" translate="yes" xml:space="preserve">
          <source>new BitSet(&lt;span name=&quot;initSize&quot;&gt;initSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752567c7d4c882da95dca66a6fced9d9d99b216c" translate="yes" xml:space="preserve">
          <source>new BitSet1(&lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8179f0fbefcf8d0db5ac45043a299aa71d721876" translate="yes" xml:space="preserve">
          <source>new BitSet2(&lt;span name=&quot;elems0&quot;&gt;elems0: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elems1&quot;&gt;elems1: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70a3ca390710a4b3776da6b8d12632b032a8408" translate="yes" xml:space="preserve">
          <source>new BitSetN(&lt;span name=&quot;elems&quot;&gt;elems: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0129b1ec54fef4271b980e9a75e9d3cd35efb0c1" translate="yes" xml:space="preserve">
          <source>new Breaks()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93cbce018cc0e6da9a1f232cfba2a936f3e5c3a" translate="yes" xml:space="preserve">
          <source>new BufferHasAsJava(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../mutable/buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9626737be965bb7e866089ae8bf4e8b993fc4878" translate="yes" xml:space="preserve">
          <source>new BufferedLineIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e147a08a960b840da705c54417945e0e30ede9aa" translate="yes" xml:space="preserve">
          <source>new BufferedSource(&lt;span name=&quot;inputStream&quot;&gt;inputStream: &lt;span name=&quot;java.io.InputStream&quot;&gt;InputStream&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;codec&quot;&gt;codec: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90d8621a37a8732f05935f236f2e2392763b0b97" translate="yes" xml:space="preserve">
          <source>new BufferedSource(&lt;span name=&quot;inputStream&quot;&gt;inputStream: &lt;span name=&quot;java.io.InputStream&quot;&gt;InputStream&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;bufferSize&quot;&gt;bufferSize: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;codec&quot;&gt;codec: &lt;a href=&quot;codec&quot; id=&quot;scala.io.Codec&quot; name=&quot;scala.io.Codec&quot;&gt;Codec&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17f3070f6a4a34a661009cef315214a6a2e93770" translate="yes" xml:space="preserve">
          <source>new Builder(&lt;span name=&quot;orderedBy&quot;&gt;orderedBy: &lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c9064b513bb263f35812779b79a9d611beacf47" translate="yes" xml:space="preserve">
          <source>new By(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.Exception.By.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.control.Exception.By.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1312cf207b335fecf03e358abb358656db6e2858" translate="yes" xml:space="preserve">
          <source>new ByteArrayHasSeqParStream(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c923f26e7531562f0e85f7c7400b7fb8092a06d3" translate="yes" xml:space="preserve">
          <source>new ByteswapHashing()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dab95b52aefda0bdaaa92c7362452208f6d3d2f" translate="yes" xml:space="preserve">
          <source>new Call(&lt;span name=&quot;rest&quot;&gt;rest: () =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d17032fbb95dfb37c6f6de9bb4df22080ed4d14" translate="yes" xml:space="preserve">
          <source>new Catch(&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;exception%24#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;Catcher&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;fin&quot;&gt;fin: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finally&lt;/a&gt;] = &lt;a href=&quot;../../none%24&quot;&gt;None&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;rethrow&quot;&gt;rethrow: (&lt;a href=&quot;../../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; = &lt;a href=&quot;exception%24#shouldRethrow(x:Throwable):Boolean&quot;&gt;shouldRethrow&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49ef6de0d032f914b527a6d982e1a9400a66ef8e" translate="yes" xml:space="preserve">
          <source>new ChainingOps(&lt;span name=&quot;self&quot;&gt;self: &lt;span name=&quot;scala.util.ChainingOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dabc335a49cc11d2a22cad24ff132df082f6528" translate="yes" xml:space="preserve">
          <source>new Channel()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11b949a1204a1d9db37f66b85052bfb9dcc34f60" translate="yes" xml:space="preserve">
          <source>new CharArrayHasSeqParStream(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b63ef4f084c378290fdc7f298568013cb8d3e20" translate="yes" xml:space="preserve">
          <source>new Codec(&lt;span name=&quot;charSet&quot;&gt;charSet: &lt;span name=&quot;java.nio.charset.Charset&quot;&gt;Charset&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344391f5728d1e23f6c11fd8c230f9aa7e10c5ad" translate="yes" xml:space="preserve">
          <source>new Collect(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160f472c95ecdd6087c38596328103a5892ff64e" translate="yes" xml:space="preserve">
          <source>new CollectionHasAsScala(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;java.util.Collection&quot;&gt;Collection&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c48b29264ee51a4c1da274753fc406f8b042b70" translate="yes" xml:space="preserve">
          <source>new CollisionProofHashMap()(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b26bb1b92e45423ad2227183bcd564faf7e0c0f6" translate="yes" xml:space="preserve">
          <source>new CollisionProofHashMap(&lt;span name=&quot;initialCapacity&quot;&gt;initialCapacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;loadFactor&quot;&gt;loadFactor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ordering&quot;&gt;ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90fd55fa9debbed727aab60557655026bb5bc40" translate="yes" xml:space="preserve">
          <source>new CompletionStageOps(&lt;span name=&quot;cs&quot;&gt;cs: &lt;span name=&quot;java.util.concurrent.CompletionStage&quot;&gt;CompletionStage&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.CompletionStageOps.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b587f2ea8af3f6212c07dde2c0fc6594cb2839e" translate="yes" xml:space="preserve">
          <source>new Concat(&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc25d627059b0134aa733c599f8b1fd555e57b5f" translate="yes" xml:space="preserve">
          <source>new Concat(&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400d85f0d451344683ea4eda301a59494cd07072" translate="yes" xml:space="preserve">
          <source>new Concat(&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;suffix&quot;&gt;suffix: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b18fd6ff2ac570888be61ae1d4acdeab1ed5b8" translate="yes" xml:space="preserve">
          <source>new ConcurrentMapHasAsJava(&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../concurrent/map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;concurrent.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13e7a02a919ab3c420024f9e5cb219b8a7d6b698" translate="yes" xml:space="preserve">
          <source>new ConcurrentMapHasAsScala(&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.concurrent.ConcurrentMap&quot;&gt;ConcurrentMap&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ad29c975e09a1ee05f539c6ff465c9be9f8c5ee" translate="yes" xml:space="preserve">
          <source>new Cons(&lt;span name=&quot;head&quot;&gt;head: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;tl&quot;&gt;tl: =&amp;gt; &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6c66994d6131910e59086fabc629d55f4269ce0" translate="yes" xml:space="preserve">
          <source>new Cont(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37d9cc44e788e7b8de28f60375cc9b95fc9130fe" translate="yes" xml:space="preserve">
          <source>new ControlThrowable()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea79c12e95b253c5e4cd1635f6fc26a3c1e4add7" translate="yes" xml:space="preserve">
          <source>new ControlThrowable(&lt;span name=&quot;message&quot;&gt;message: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6383ba39628b76e89edeea15babed9c42f18c0af" translate="yes" xml:space="preserve">
          <source>new Default()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89aef9ad55a59804909124b99261f21b9246c771" translate="yes" xml:space="preserve">
          <source>new DefaultSerializationProxy(&lt;span name=&quot;factory&quot;&gt;factory: &lt;a href=&quot;../factory&quot; id=&quot;scala.collection.Factory&quot; name=&quot;scala.collection.Factory&quot;&gt;Factory&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.DefaultSerializationProxy.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;coll&quot;&gt;coll: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.DefaultSerializationProxy.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af57761d8b677b2a012dbce9220fd82c806dfa65" translate="yes" xml:space="preserve">
          <source>new DelayedLazyVal(&lt;span name=&quot;f&quot;&gt;f: () =&amp;gt; &lt;span name=&quot;scala.concurrent.DelayedLazyVal.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;exec&quot;&gt;exec: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d30fd7ba02a520c1069fbfa3a86e8abb6d6a6d" translate="yes" xml:space="preserve">
          <source>new Delegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;classtagseqfactory&quot; id=&quot;scala.collection.ClassTagSeqFactory&quot; name=&quot;scala.collection.ClassTagSeqFactory&quot;&gt;ClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagSeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f2bca1eb9316d1a3d5e52b308b512df5ef64261" translate="yes" xml:space="preserve">
          <source>new Delegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;, &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff6b56c4dcd4e04fd71a01faae710c71057dbe2e" translate="yes" xml:space="preserve">
          <source>new Delegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactory.Delegate.Ev&quot;&gt;Ev&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb2e19a4fa22a5c70ec8feef9f4beea67ef77bf0" translate="yes" xml:space="preserve">
          <source>new Delegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;evidenceiterablefactory&quot; id=&quot;scala.collection.EvidenceIterableFactory&quot; name=&quot;scala.collection.EvidenceIterableFactory&quot;&gt;EvidenceIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;, &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b166a4545a7fa37c902e40f696b214f6dd7a8fe2" translate="yes" xml:space="preserve">
          <source>new Delegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;iterablefactory&quot; id=&quot;scala.collection.IterableFactory&quot; name=&quot;scala.collection.IterableFactory&quot;&gt;IterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09b1ac8a0e900566062d0d8b6f38d1453b4dfe85" translate="yes" xml:space="preserve">
          <source>new Delegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;mapfactory&quot; id=&quot;scala.collection.MapFactory&quot; name=&quot;scala.collection.MapFactory&quot;&gt;MapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapFactory.Delegate.C&quot;&gt;C&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ae6db8cd0f4c33b38b62d0bd1c6c3c47a6ec370" translate="yes" xml:space="preserve">
          <source>new Delegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;seqfactory&quot; id=&quot;scala.collection.SeqFactory&quot; name=&quot;scala.collection.SeqFactory&quot;&gt;SeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="505be8cd17e3ed03a6b5da7b26c0337ae6911138" translate="yes" xml:space="preserve">
          <source>new Delegate(&lt;span name=&quot;delegate&quot;&gt;delegate: &lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7362c34c4dfbacbd691d31bc07ca76d8793836f" translate="yes" xml:space="preserve">
          <source>new DictionaryHasAsScala(&lt;span name=&quot;d&quot;&gt;d: &lt;span name=&quot;java.util.Dictionary&quot;&gt;Dictionary&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e812e7bb98ed8d286c96a0cb9adcc67dd5c5e204" translate="yes" xml:space="preserve">
          <source>new DistinctBy(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.View.DistinctBy.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0488484610f7c536d488e132ebab640650ae9b" translate="yes" xml:space="preserve">
          <source>new Done(&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef3bbe1addacb154bc048835a7c583ef9026ca0f" translate="yes" xml:space="preserve">
          <source>new DoubleAccumulator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7d6711cabdb728155eb7ce6b6998c7fd649a49" translate="yes" xml:space="preserve">
          <source>new DoubleArrayHasSeqParStream(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ba559e9c79ef90a64f3b753b1d046d76cb9f5db" translate="yes" xml:space="preserve">
          <source>new DoubleMult(&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33676e8465ed0c6540777f01b27d4fd7ee998fa1" translate="yes" xml:space="preserve">
          <source>new DoubleStepperSpliterator(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;doublestepper&quot; id=&quot;scala.collection.DoubleStepper&quot; name=&quot;scala.collection.DoubleStepper&quot;&gt;DoubleStepper&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a7d55367a491b2ad2186b273b708d11fe96fea" translate="yes" xml:space="preserve">
          <source>new DoubleStreamHasToScala(&lt;span name=&quot;stream&quot;&gt;stream: &lt;span name=&quot;java.util.stream.DoubleStream&quot;&gt;DoubleStream&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68e81a9fd2a7c2a59a7753ae64248aa42289b888" translate="yes" xml:space="preserve">
          <source>new Drop(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88283e7d2281f52a42a432edf7127501c8496bbe" translate="yes" xml:space="preserve">
          <source>new Drop(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1b268f6567565bdead357f2fe4059b5368206b" translate="yes" xml:space="preserve">
          <source>new Drop(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856d6bf8db673cd5ae8b155e76f3c872a0442e8e" translate="yes" xml:space="preserve">
          <source>new DropRight(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf9b10db5542e092069a4d960e5afd63c3516356" translate="yes" xml:space="preserve">
          <source>new DropRight(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ebae7c9f5f88444fc1f99b10b5863c1f744588f" translate="yes" xml:space="preserve">
          <source>new DropRight(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6510ed12cc2180a44ee1be4e1b8a1bc2481506b7" translate="yes" xml:space="preserve">
          <source>new DropWhile(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4acf29b3658b8bb46f294e8c966b0231e8e4f644" translate="yes" xml:space="preserve">
          <source>new DurationDouble(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cda4c2eb4bc38a7ff783920b9874adb941583446" translate="yes" xml:space="preserve">
          <source>new DurationInt(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c9f4cfde8897c8a614451cac71423cbcd3adc71" translate="yes" xml:space="preserve">
          <source>new DurationLong(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="132fce6fd36568ddf05673a120fb6cca6c2adae4" translate="yes" xml:space="preserve">
          <source>new DynamicVariable(&lt;span name=&quot;init&quot;&gt;init: &lt;span name=&quot;scala.util.DynamicVariable.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ff7a2c662c4f0ed214875b1796774546a0792c" translate="yes" xml:space="preserve">
          <source>new Elems(&lt;span name=&quot;xs&quot;&gt;xs: &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;*&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27162faa5d128016a8d47358fd3ba21dc706f465" translate="yes" xml:space="preserve">
          <source>new Ensuring(&lt;span name=&quot;self&quot;&gt;self: &lt;span name=&quot;scala.Predef.Ensuring.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f32aa8d61f17a0a8b68f0823638afa7fde5f638" translate="yes" xml:space="preserve">
          <source>new Enumeration()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="835de89e089cc68dfab40c5f857b74ce0835f594" translate="yes" xml:space="preserve">
          <source>new Enumeration(&lt;span name=&quot;initial&quot;&gt;initial: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c7c86d9cc03212367568b5429b6fd883aadb649" translate="yes" xml:space="preserve">
          <source>new EnumerationHasAsScala(&lt;span name=&quot;e&quot;&gt;e: &lt;span name=&quot;java.util.Enumeration&quot;&gt;java.util.Enumeration&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcf12c27f2d8b786026abb06d891e6671acdc83b" translate="yes" xml:space="preserve">
          <source>new Exclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300703052add98116b32d8a6d4bafe52e6654427" translate="yes" xml:space="preserve">
          <source>new Exclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;../../index#Integral%5BT%5D=scala.math.Integral%5BT%5D&quot; id=&quot;scala.Integral&quot; name=&quot;scala.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef695be89b90232a155349232c8fdc1b78e4f83d" translate="yes" xml:space="preserve">
          <source>new Failure(&lt;span name=&quot;exception&quot;&gt;exception: &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b042c69cd6cfefcdaef4552822097ee8e718f735" translate="yes" xml:space="preserve">
          <source>new FileProcessLogger(&lt;span name=&quot;file&quot;&gt;file: &lt;span name=&quot;java.io.File&quot;&gt;File&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e34ba1f3d6a099b2b8ff3cec35347a57dfc420a" translate="yes" xml:space="preserve">
          <source>new Fill(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;elem&quot;&gt;elem: =&amp;gt; &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f142556b23cfd88ee7a8586faba8edcd610b536a" translate="yes" xml:space="preserve">
          <source>new Filter(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;mapview%24#SomeMapOps%5BK,+V%5D=scala.collection.MapOps%5BK,V,scala.collection.MapView.SomeIterableConstr,_%5D&quot; id=&quot;scala.collection.MapView.SomeMapOps&quot; name=&quot;scala.collection.MapView.SomeMapOps&quot;&gt;SomeMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;isFlipped&quot;&gt;isFlipped: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;p&quot;&gt;p: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef6d07ab94de8f22596e986f1e57d6b37d3523f" translate="yes" xml:space="preserve">
          <source>new Filter(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;isFlipped&quot;&gt;isFlipped: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd88cf60d88ae87ae817c24826de875073e37976" translate="yes" xml:space="preserve">
          <source>new FilterKeys(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;mapview%24#SomeMapOps%5BK,+V%5D=scala.collection.MapOps%5BK,V,scala.collection.MapView.SomeIterableConstr,_%5D&quot; id=&quot;scala.collection.MapView.SomeMapOps&quot; name=&quot;scala.collection.MapView.SomeMapOps&quot;&gt;SomeMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77580a0c902c191715f5c9beecced752bc596ce" translate="yes" xml:space="preserve">
          <source>new FiniteDuration(&lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;unit&quot;&gt;unit: &lt;a href=&quot;index#TimeUnit=java.util.concurrent.TimeUnit&quot; id=&quot;scala.concurrent.duration.TimeUnit&quot; name=&quot;scala.concurrent.duration.TimeUnit&quot;&gt;TimeUnit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc34d2a92aadfa764ae676ad02b073b6dc55ee28" translate="yes" xml:space="preserve">
          <source>new FlatMap(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.FlatMap.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e17ca82fca46fac411595e26449589d3a757d5a" translate="yes" xml:space="preserve">
          <source>new FloatArrayHasSeqParStream(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bb4b1402aec4f275661629d556ed0d7c017223d" translate="yes" xml:space="preserve">
          <source>new Found(&lt;span name=&quot;foundIndex&quot;&gt;foundIndex: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3c80aa94c0b21306521a4d9497b154b87a60375" translate="yes" xml:space="preserve">
          <source>new FractionalOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae033d6a1885c41a773aaf30db7f1dc2c5ee7ca" translate="yes" xml:space="preserve">
          <source>new FromJavaBiConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiConsumer.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b77ad32cd6e753da53dd755cf26e0125f309dd35" translate="yes" xml:space="preserve">
          <source>new FromJavaBiFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc3eed6370e42ff644597232d1185c174c7280a" translate="yes" xml:space="preserve">
          <source>new FromJavaBiPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBiPredicate.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ed16a1df1fa9a275c5fc753a8cd4dd297b7cda3" translate="yes" xml:space="preserve">
          <source>new FromJavaBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaBinaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa6115b2b774a3bb08fe02801febd0582b2b4bb8" translate="yes" xml:space="preserve">
          <source>new FromJavaBooleanSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dc70f16bb912bf867739e9559077f000c2abf6" translate="yes" xml:space="preserve">
          <source>new FromJavaConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b01d80ddda1f0b364e4adfe7a2f98b8fa6cd592e" translate="yes" xml:space="preserve">
          <source>new FromJavaDoubleBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="906e72ad98fcc79c8c62dd41688d5bcd19c5525f" translate="yes" xml:space="preserve">
          <source>new FromJavaDoubleConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d27d43edb3408ef9e6bfe3317000822822d959bf" translate="yes" xml:space="preserve">
          <source>new FromJavaDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaDoubleFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3b6d02cc2d3d857e9dba1343dd937a82b7dd9f2" translate="yes" xml:space="preserve">
          <source>new FromJavaDoublePredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd3bd25811971523e94c493a284f1f90708e769" translate="yes" xml:space="preserve">
          <source>new FromJavaDoubleSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1214f418392c291f5735a2a1365255c6d219cca" translate="yes" xml:space="preserve">
          <source>new FromJavaDoubleToIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010fc624526f680373b006adaeeeab7110185274" translate="yes" xml:space="preserve">
          <source>new FromJavaDoubleToLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16d0d2e5f33072a6052793738a87c26835e8e57a" translate="yes" xml:space="preserve">
          <source>new FromJavaDoubleUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b800a0042c2b85e98243f6d3f6fa19f2e22e96e1" translate="yes" xml:space="preserve">
          <source>new FromJavaFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3b67059bdfbd3c700026787a2eb6288c1f33580" translate="yes" xml:space="preserve">
          <source>new FromJavaIntBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93c02a45a7e7bc44dfab78f480e8750cb190921a" translate="yes" xml:space="preserve">
          <source>new FromJavaIntConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28fc4b31135702fd9d5601341edaa217711e47b5" translate="yes" xml:space="preserve">
          <source>new FromJavaIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaIntFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fafba43a402dc1dbced7e7f972b452bbccb455e1" translate="yes" xml:space="preserve">
          <source>new FromJavaIntPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab37fb9209a4da95dd674ba8c0837cfe25486568" translate="yes" xml:space="preserve">
          <source>new FromJavaIntSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3be53b6db7ff8acec15981b91baf2081cb558c" translate="yes" xml:space="preserve">
          <source>new FromJavaIntToDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed39a2c56994d809a9efa9f717a0a6faf6fc85b4" translate="yes" xml:space="preserve">
          <source>new FromJavaIntToLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8851f11922c681bcda6b62403420f22df6fcd298" translate="yes" xml:space="preserve">
          <source>new FromJavaIntUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1507e9942a5c38f41313a9044d817c65cc913edb" translate="yes" xml:space="preserve">
          <source>new FromJavaLongBinaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca0cfa2857ee971283d2dc7ecc66f77ed7af087d" translate="yes" xml:space="preserve">
          <source>new FromJavaLongConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2e0d93166b250108417aa9764467386ab48f7e0" translate="yes" xml:space="preserve">
          <source>new FromJavaLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaLongFunction.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da7c1f792a93be2f078d65a0fb09f293a06f9b73" translate="yes" xml:space="preserve">
          <source>new FromJavaLongPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a93a4de919d2edb9f6782c956f736e287255df1f" translate="yes" xml:space="preserve">
          <source>new FromJavaLongSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2380dabcabb638f7313af16f36329207a5d60813" translate="yes" xml:space="preserve">
          <source>new FromJavaLongToDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95489853ae6c0f58c3b9daca432e0511cdafaf22" translate="yes" xml:space="preserve">
          <source>new FromJavaLongToIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80a0297bbb2051911b237d6212f38947963796ef" translate="yes" xml:space="preserve">
          <source>new FromJavaLongUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c655b38752934367c19acce52961360c97584eb" translate="yes" xml:space="preserve">
          <source>new FromJavaObjDoubleConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjDoubleConsumer&quot;&gt;ObjDoubleConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0083751609686f9c35e403aa1a16b5e11ec01b2e" translate="yes" xml:space="preserve">
          <source>new FromJavaObjIntConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjIntConsumer&quot;&gt;ObjIntConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjIntConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25eebb31a166b2299f40614566294aa52a737881" translate="yes" xml:space="preserve">
          <source>new FromJavaObjLongConsumer(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ObjLongConsumer&quot;&gt;ObjLongConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaObjLongConsumer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98e18290df64d6299ed822136d8cf2efc0ebf077" translate="yes" xml:space="preserve">
          <source>new FromJavaPredicate(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Predicate&quot;&gt;Predicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaPredicate.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eea65a10f0f2cd949cbe609e329805e2d1ab9708" translate="yes" xml:space="preserve">
          <source>new FromJavaSupplier(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.Supplier&quot;&gt;Supplier&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaSupplier.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47a18278abbca6d3a0b9c8eb176c9158e047274e" translate="yes" xml:space="preserve">
          <source>new FromJavaToDoubleBiFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleBiFunction&quot;&gt;ToDoubleBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bea37a270f767a953ee8aa4eae5a943de82e34b" translate="yes" xml:space="preserve">
          <source>new FromJavaToDoubleFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToDoubleFunction&quot;&gt;ToDoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToDoubleFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8b7f8c3c9ae121adeb81edc637cd86d5d108bd4" translate="yes" xml:space="preserve">
          <source>new FromJavaToIntBiFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntBiFunction&quot;&gt;ToIntBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46854c29601aa75236b52e4562044c5b9cefd9b6" translate="yes" xml:space="preserve">
          <source>new FromJavaToIntFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToIntFunction&quot;&gt;ToIntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToIntFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc096ae292c9d492cf883cf46b9e3307100f5f7" translate="yes" xml:space="preserve">
          <source>new FromJavaToLongBiFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongBiFunction&quot;&gt;ToLongBiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongBiFunction.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d2731885e5b5d42789fed24288feb813c59c9a6" translate="yes" xml:space="preserve">
          <source>new FromJavaToLongFunction(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.ToLongFunction&quot;&gt;ToLongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaToLongFunction.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b978e6d71333e5eac9904939cc3080e35c661a5a" translate="yes" xml:space="preserve">
          <source>new FromJavaUnaryOperator(&lt;span name=&quot;jf&quot;&gt;jf: &lt;span name=&quot;java.util.function.UnaryOperator&quot;&gt;UnaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.FromJavaUnaryOperator.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e627e478a8535b2d6b2e481dbdfc28ae0b0e114a" translate="yes" xml:space="preserve">
          <source>new FutureOps(&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../concurrent/future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.jdk.FutureConverters.FutureOps.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="607f9b064bb366739b8bbbbd49e13675d6385354" translate="yes" xml:space="preserve">
          <source>new Group(&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.Specializable.Group.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67cfc5bf294d740b049271aa1ca218d54b77a027" translate="yes" xml:space="preserve">
          <source>new GroupedIterator(&lt;span name=&quot;self&quot;&gt;self: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5087478834f7778f8eecd92c18eb4381b9ddde" translate="yes" xml:space="preserve">
          <source>new GrowableBuilder(&lt;span name=&quot;elems&quot;&gt;elems: &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.To&quot;&gt;To&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d1027ba44cb23baf148bba10cacbd0a801a2e9e" translate="yes" xml:space="preserve">
          <source>new HashMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0f33f332b4e7cbb32e07e3b7a05f34791745496" translate="yes" xml:space="preserve">
          <source>new HashMap(&lt;span name=&quot;initialCapacity&quot;&gt;initialCapacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;loadFactor&quot;&gt;loadFactor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979753db55e6cb9bc1c28c9aff269fdcdef0bdde" translate="yes" xml:space="preserve">
          <source>new HashSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ef3fa75183fdd54eef97e9bccf2fe266681a924" translate="yes" xml:space="preserve">
          <source>new HashSet(&lt;span name=&quot;initialCapacity&quot;&gt;initialCapacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;loadFactor&quot;&gt;loadFactor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bdf22740ac32c67222e834f8c552fbbc9076f0af" translate="yes" xml:space="preserve">
          <source>new Id(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428cc8b551ba25859c681a69c9cbf68b71243222" translate="yes" xml:space="preserve">
          <source>new Id(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;mapview%24#SomeMapOps%5BK,+V%5D=scala.collection.MapOps%5BK,V,scala.collection.MapView.SomeIterableConstr,_%5D&quot; id=&quot;scala.collection.MapView.SomeMapOps&quot; name=&quot;scala.collection.MapView.SomeMapOps&quot;&gt;SomeMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f76cf21f543faacf259cbfd321fdf04999614de7" translate="yes" xml:space="preserve">
          <source>new Id(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6746f763d21f53b8f5c9870cefb30952bbb3c28e" translate="yes" xml:space="preserve">
          <source>new ImmutableBuilder(&lt;span name=&quot;empty&quot;&gt;empty: &lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ccfaf593deea177a7a0e94616d8412f7c6807d1" translate="yes" xml:space="preserve">
          <source>new ImmutableKeySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b984d1bb11191f03332aa45de24cf6e1c683b6bb" translate="yes" xml:space="preserve">
          <source>new ImmutableKeySortedSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fd04964e143a46781fdda19ae269a67e8ffbddf" translate="yes" xml:space="preserve">
          <source>new Inclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a71387eea3ab9dfb8ea0392123552ec0a964fb66" translate="yes" xml:space="preserve">
          <source>new Inclusive(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;../../index#Integral%5BT%5D=scala.math.Integral%5BT%5D&quot; id=&quot;scala.Integral&quot; name=&quot;scala.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12b94b1abe78ec7ba66a3978f1d3bf6b47db367d" translate="yes" xml:space="preserve">
          <source>new InsertionPoint(&lt;span name=&quot;insertionPoint&quot;&gt;insertionPoint: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0ecdf8d59c64e5c12313c3577f21b943357a6d" translate="yes" xml:space="preserve">
          <source>new IntAccumulator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c6e766fecbb37c9b813643acf955d4ff94012fa" translate="yes" xml:space="preserve">
          <source>new IntArrayHasSeqParStream(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1052597ff5618d08ba3c430a8bdc33dc12d976f8" translate="yes" xml:space="preserve">
          <source>new IntMult(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddf79ce48d12847996a2f24ad4bcfee072d8664e" translate="yes" xml:space="preserve">
          <source>new IntStepperSpliterator(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22b478e464004eb097f8e4e21734c3b8062bef4" translate="yes" xml:space="preserve">
          <source>new IntStreamHasToScala(&lt;span name=&quot;stream&quot;&gt;stream: &lt;span name=&quot;java.util.stream.IntStream&quot;&gt;IntStream&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0f6d8ca8b401e32762aca3a79484cfdca001202" translate="yes" xml:space="preserve">
          <source>new IntegralOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="485cfc6d5c782a55c59ae99481af5e4550a5864a" translate="yes" xml:space="preserve">
          <source>new InvalidEscapeException(&lt;span name=&quot;str&quot;&gt;str: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;index&quot;&gt;index: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c829af81107956733efd17e097b43053b3701a90" translate="yes" xml:space="preserve">
          <source>new IterableHasAsJava(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3430ea7c6884154d9048d7bca8461510d2bbe330" translate="yes" xml:space="preserve">
          <source>new IterableHasAsScala(&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.lang.Iterable&quot;&gt;java.lang.Iterable&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11a119896d958b13160dc92b8a42813fdfd8fbbf" translate="yes" xml:space="preserve">
          <source>new IterableHasSeqStream(&lt;span name=&quot;cc&quot;&gt;cc: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813f808d4faec8e299e4ec4e0131ffeb7a0cc3da" translate="yes" xml:space="preserve">
          <source>new IterableNonGenericHasParStream(&lt;span name=&quot;c&quot;&gt;c: &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.C&quot;&gt;C&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.C&quot;&gt;C&lt;/span&gt;, &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.A&quot;&gt;A&lt;/span&gt;]]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67af4b6e4567aaad409a9d77b8011f2f7b65451d" translate="yes" xml:space="preserve">
          <source>new IterableOnceExtensionMethods(&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceExtensionMethods.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d19b5043b55c6f8ddc6a52420271675526d5f871" translate="yes" xml:space="preserve">
          <source>new Iterate(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5f36f0b939050b5bc1d9cda957b7194b8c76814" translate="yes" xml:space="preserve">
          <source>new IteratorHasAsJava(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6841f59ab39136bb583992af964fa43f8586652d" translate="yes" xml:space="preserve">
          <source>new IteratorHasAsScala(&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Iterator&quot;&gt;java.util.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c27a0e3a545c15b80790e9acc8c2354a3e4d6159" translate="yes" xml:space="preserve">
          <source>new JavaDurationOps(&lt;span name=&quot;duration&quot;&gt;duration: &lt;span name=&quot;java.time.Duration&quot;&gt;Duration&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcb4e83f3eb32c3cb3193b149e985c443871adec" translate="yes" xml:space="preserve">
          <source>new KeySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0dc026bb0f989e6b46a63d271aa412e25f7977f" translate="yes" xml:space="preserve">
          <source>new KeySortedSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8055d2ae7ea4cc7978bd6b9f5fecfc62aefed1e2" translate="yes" xml:space="preserve">
          <source>new Left(&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.util.Left.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5afdd7ee3bf83ac47332dd9134411185b220ad39" translate="yes" xml:space="preserve">
          <source>new LeftPartitionMapped(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2edd0548c01b96093b02b250d95b3f2fc1981809" translate="yes" xml:space="preserve">
          <source>new LeftProjection(&lt;span name=&quot;e&quot;&gt;e: &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.LeftProjection.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.LeftProjection.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="302474d0c5ea8ff7cdb421eb3118555e18e4bccf" translate="yes" xml:space="preserve">
          <source>new LineIterator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c53c9fc9dd883ae15c6aff9446e467429b9c687" translate="yes" xml:space="preserve">
          <source>new LinkedHashMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daf2582b9019f44a8fa06f5af1933e81604f9e40" translate="yes" xml:space="preserve">
          <source>new LinkedHashSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1b32ede0dd59fcc65609b81ba3803d28e84d0e" translate="yes" xml:space="preserve">
          <source>new LinkedKeySet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f64fbae55c23387e9187f8c10de34f16f7bdf9c" translate="yes" xml:space="preserve">
          <source>new ListBuffer()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="818b557e2acaad023c8b93c22f798852354f3720" translate="yes" xml:space="preserve">
          <source>new ListHasAsScala(&lt;span name=&quot;l&quot;&gt;l: &lt;span name=&quot;java.util.List&quot;&gt;java.util.List&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac7428309e56db30d8f6f90dc1a5a4c2805752cf" translate="yes" xml:space="preserve">
          <source>new ListMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0e94dccbc53d4721acdfc1047b4decfaa69695d" translate="yes" xml:space="preserve">
          <source>new ListSet()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c64b5aff5520815ffa7ef4021ccb70c08d9cbd1" translate="yes" xml:space="preserve">
          <source>new LongAccumulator()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39e56e516ab82756df1a92bb37a8a86575a96a28" translate="yes" xml:space="preserve">
          <source>new LongArrayHasSeqParStream(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68383b7e578180ecb1373282e81388b257eed5be" translate="yes" xml:space="preserve">
          <source>new LongMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8eb211449c1104bfa3c3a74a7b926d17e5dc59c5" translate="yes" xml:space="preserve">
          <source>new LongMap(&lt;span name=&quot;defaultEntry&quot;&gt;defaultEntry: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28d8ddc6cc0764e0516e72ffc87d0c525df7e1aa" translate="yes" xml:space="preserve">
          <source>new LongMap(&lt;span name=&quot;defaultEntry&quot;&gt;defaultEntry: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;initialBufferSize&quot;&gt;initialBufferSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="572d6230e4401653dd71922cdb3f6879ef6d3ee7" translate="yes" xml:space="preserve">
          <source>new LongMap(&lt;span name=&quot;initialBufferSize&quot;&gt;initialBufferSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc4b2ef8b240f9ec9afecb7dd064565046fc80d8" translate="yes" xml:space="preserve">
          <source>new LongMapBuilder()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6988dff736a9fab980f5cf0733b152dc6df385a" translate="yes" xml:space="preserve">
          <source>new LongMult(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="499487d82c77b0309884ee108b37c09acee218d3" translate="yes" xml:space="preserve">
          <source>new LongStepperSpliterator(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;longstepper&quot; id=&quot;scala.collection.LongStepper&quot; name=&quot;scala.collection.LongStepper&quot;&gt;LongStepper&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96ac7573b577585ba93598de3f81ddef15fb67cc" translate="yes" xml:space="preserve">
          <source>new LongStreamHasToScala(&lt;span name=&quot;stream&quot;&gt;stream: &lt;span name=&quot;java.util.stream.LongStream&quot;&gt;LongStream&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e43264433e22605929897dd5d01fcdb58e7c8ed" translate="yes" xml:space="preserve">
          <source>new MangledHashing()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01004bcbf16df64c86cf66eab341e067a5e6e4b4" translate="yes" xml:space="preserve">
          <source>new Map(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2b1a36094f4547b3c1e7252845f1ca0063b34cd" translate="yes" xml:space="preserve">
          <source>new Map(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.View.Map.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24756c13545969871adc749f4ddb6880fb35ebf3" translate="yes" xml:space="preserve">
          <source>new Map(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.SeqView.Map.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745dfd59c979657292c9e9e16bc0aa0f27f400d6" translate="yes" xml:space="preserve">
          <source>new Map1(&lt;span name=&quot;key1&quot;&gt;key1: &lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value1&quot;&gt;value1: &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71e3330e8217fb92d6e2ea36f3e6e3d1e00dc4b2" translate="yes" xml:space="preserve">
          <source>new Map2(&lt;span name=&quot;key1&quot;&gt;key1: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value1&quot;&gt;value1: &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;key2&quot;&gt;key2: &lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value2&quot;&gt;value2: &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71669ff4273a90dc91e45a699ac5bc85ce4f453e" translate="yes" xml:space="preserve">
          <source>new Map3(&lt;span name=&quot;key1&quot;&gt;key1: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value1&quot;&gt;value1: &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;key2&quot;&gt;key2: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value2&quot;&gt;value2: &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;key3&quot;&gt;key3: &lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value3&quot;&gt;value3: &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="773e07ffcebc0159f7c471f3f3d255506740f796" translate="yes" xml:space="preserve">
          <source>new Map4(&lt;span name=&quot;key1&quot;&gt;key1: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value1&quot;&gt;value1: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;key2&quot;&gt;key2: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value2&quot;&gt;value2: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;key3&quot;&gt;key3: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value3&quot;&gt;value3: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;key4&quot;&gt;key4: &lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value4&quot;&gt;value4: &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75e86004af9abe41479ba43ce1138375356d8634" translate="yes" xml:space="preserve">
          <source>new MapHasAsJava(&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ed4e6790ddb846c242ddbffb0449ff04a368833" translate="yes" xml:space="preserve">
          <source>new MapHasAsScala(&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.Map&quot;&gt;java.util.Map&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f36127bfc76931dd81490ccc62eefa4a89a11a" translate="yes" xml:space="preserve">
          <source>new MapHasParKeyValueStream(&lt;span name=&quot;cc&quot;&gt;cc: &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19d3c42ba708b8d439c83d375818b14320d8b1ce" translate="yes" xml:space="preserve">
          <source>new MapHasSeqKeyValueStream(&lt;span name=&quot;cc&quot;&gt;cc: &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376d226ee487beb54c2b13c0c806a879db3c4ae3" translate="yes" xml:space="preserve">
          <source>new MapValues(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;mapview%24#SomeMapOps%5BK,+V%5D=scala.collection.MapOps%5BK,V,scala.collection.MapView.SomeIterableConstr,_%5D&quot; id=&quot;scala.collection.MapView.SomeMapOps&quot; name=&quot;scala.collection.MapView.SomeMapOps&quot;&gt;SomeMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.MapView.MapValues.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edd4e238c5819441cbc679e5a28872ca4b3c4d45" translate="yes" xml:space="preserve">
          <source>new Match(&lt;span name=&quot;source&quot;&gt;source: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;matcher&quot;&gt;matcher: &lt;span name=&quot;java.util.regex.Matcher&quot;&gt;Matcher&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;groupNames&quot;&gt;groupNames: &lt;a href=&quot;../../index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0574de21d4446f4986bd0c980ff94002e848ec9" translate="yes" xml:space="preserve">
          <source>new MatchError(&lt;span name=&quot;obj&quot;&gt;obj: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e6ef75c13a23a658f974f233125735047a5f9c9" translate="yes" xml:space="preserve">
          <source>new MatchIterator(&lt;span name=&quot;source&quot;&gt;source: &lt;span name=&quot;java.lang.CharSequence&quot;&gt;CharSequence&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;regex&quot;&gt;regex: &lt;a href=&quot;regex&quot; id=&quot;scala.util.matching.Regex&quot; name=&quot;scala.util.matching.Regex&quot;&gt;Regex&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;groupNames&quot;&gt;groupNames: &lt;a href=&quot;../../index#Seq%5B+A%5D=Seq%5BA%5D&quot; id=&quot;scala.Seq&quot; name=&quot;scala.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5b3cf47a512183e347a3315364b036afa470a12" translate="yes" xml:space="preserve">
          <source>new MergeableEither(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;either&quot; id=&quot;scala.util.Either&quot; name=&quot;scala.util.Either&quot;&gt;Either&lt;/a&gt;[&lt;span name=&quot;scala.util.Either.MergeableEither.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.Either.MergeableEither.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="216375334dab09baa77d550c7b7e85e4e41c6cc3" translate="yes" xml:space="preserve">
          <source>new MutableMapHasAsJava(&lt;span name=&quot;m&quot;&gt;m: &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d442173825df94f062a748031e49e7f08a30c5ae" translate="yes" xml:space="preserve">
          <source>new MutableSeqHasAsJava(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f38202d1f4db6a3e12635d22c5b58a398df4a4c" translate="yes" xml:space="preserve">
          <source>new MutableSetHasAsJava(&lt;span name=&quot;s&quot;&gt;s: &lt;a href=&quot;../mutable/set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;mutable.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47169234edfe05a8091c8b5f6d022e81db0bda0" translate="yes" xml:space="preserve">
          <source>new Node(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d633c37f4cf7271ccb4a341dc5ab0217212ad55" translate="yes" xml:space="preserve">
          <source>new NotImplementedError()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39274541b56dbbdd1bc41d8e9c47e2f4cf3fb3ff" translate="yes" xml:space="preserve">
          <source>new NotImplementedError(&lt;span name=&quot;msg&quot;&gt;msg: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0277622b5173584a40fe3d339c62bed6be33a88d" translate="yes" xml:space="preserve">
          <source>new NumericOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9edcb78c43107176a2a58172aca5853166c4ec13" translate="yes" xml:space="preserve">
          <source>new NumericRange(&lt;span name=&quot;start&quot;&gt;start: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;isInclusive&quot;&gt;isInclusive: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;num&quot;&gt;num: &lt;a href=&quot;../../index#Integral%5BT%5D=scala.math.Integral%5BT%5D&quot; id=&quot;scala.Integral&quot; name=&quot;scala.Integral&quot;&gt;Integral&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac48bd16d942e78311b2c72d8be55d8efb656023" translate="yes" xml:space="preserve">
          <source>new OpenHashMap()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6984c816d4ec40d9a25f3a1e3e60026b698f13cd" translate="yes" xml:space="preserve">
          <source>new OpenHashMap(&lt;span name=&quot;initialSize&quot;&gt;initialSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f1da401c75f85be5554362e367f9ec2c6dceba8" translate="yes" xml:space="preserve">
          <source>new OrderingOps(&lt;span name=&quot;lhs&quot;&gt;lhs: &lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0633b3f552f204341ac0c19667633a1359eecfc7" translate="yes" xml:space="preserve">
          <source>new PadTo(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f1895ca3d44db36a515877d296e246a81888c8c" translate="yes" xml:space="preserve">
          <source>new Partial(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Range.Partial.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Range.Partial.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d4c6b4000550ac7c581617c579a3620ac36108" translate="yes" xml:space="preserve">
          <source>new PhantomReference(&lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;queue&quot;&gt;queue: &lt;a href=&quot;referencequeue&quot; id=&quot;scala.ref.ReferenceQueue&quot; name=&quot;scala.ref.ReferenceQueue&quot;&gt;ReferenceQueue&lt;/a&gt;[&lt;span name=&quot;scala.ref.PhantomReference.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f6a0e5a52ee80e03db8026dee4654b91407ca77" translate="yes" xml:space="preserve">
          <source>new Positioner()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79dfaf86c887491755ddb8f02cd32942edfd9ab5" translate="yes" xml:space="preserve">
          <source>new Positioner(&lt;span name=&quot;encoder&quot;&gt;encoder: &lt;span name=&quot;scala.io.Position&quot;&gt;Position&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c62eac290a1061c70f10517852cdc942c1ab648" translate="yes" xml:space="preserve">
          <source>new Prepended(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8032305db8cd1b5989e2fe58d64076ca292e68" translate="yes" xml:space="preserve">
          <source>new Prepended(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10f7da9ee0761d6595a5034d8265f8d7f90831d5" translate="yes" xml:space="preserve">
          <source>new Prepended(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;view%24#SomeIterableOps%5BA%5D=scala.collection.IterableOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.View.SomeIterableOps&quot; name=&quot;scala.collection.View.SomeIterableOps&quot;&gt;SomeIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c5a10985f9d00e147484244c480ffcfe662a75e" translate="yes" xml:space="preserve">
          <source>new PriorityQueue()(implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;math.Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18038a5291596bbc87740e023c6003aae9fcced5" translate="yes" xml:space="preserve">
          <source>new ProcessIO(&lt;span name=&quot;in&quot;&gt;in: (&lt;span name=&quot;scala.sys.process.processInternal.OutputStream&quot;&gt;OutputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;out&quot;&gt;out: (&lt;span name=&quot;scala.sys.process.processInternal.InputStream&quot;&gt;InputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;err&quot;&gt;err: (&lt;span name=&quot;scala.sys.process.processInternal.InputStream&quot;&gt;InputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2be87ee24271d7b3a4b6812dec1418b3658e4ae" translate="yes" xml:space="preserve">
          <source>new ProcessIO(&lt;span name=&quot;writeInput&quot;&gt;writeInput: (&lt;span name=&quot;scala.sys.process.processInternal.OutputStream&quot;&gt;OutputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;processOutput&quot;&gt;processOutput: (&lt;span name=&quot;scala.sys.process.processInternal.InputStream&quot;&gt;InputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;processError&quot;&gt;processError: (&lt;span name=&quot;scala.sys.process.processInternal.InputStream&quot;&gt;InputStream&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;daemonizeThreads&quot;&gt;daemonizeThreads: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45456900d0cdcbe4e7c3155d1d43041ff6f8bd43" translate="yes" xml:space="preserve">
          <source>new PropertiesHasAsScala(&lt;span name=&quot;i&quot;&gt;i: &lt;span name=&quot;java.util.Properties&quot;&gt;Properties&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ad08c69f127602005cbc7d484ff97c1c9af8bb" translate="yes" xml:space="preserve">
          <source>new Queue(&lt;span name=&quot;array&quot;&gt;array: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f426d0b16b0e9ffb50a355bfe3bb391d431d9952" translate="yes" xml:space="preserve">
          <source>new Queue(&lt;span name=&quot;in&quot;&gt;in: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;out&quot;&gt;out: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5644cb60dbbf106a28cbde15d1b8154ade272a86" translate="yes" xml:space="preserve">
          <source>new Queue(&lt;span name=&quot;initialSize&quot;&gt;initialSize: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;arraydeque%24&quot;&gt;ArrayDeque.DefaultInitialSize&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2d5830aaf3ea25455137871d18dd95eb1a84395" translate="yes" xml:space="preserve">
          <source>new RBNode(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;hash&quot;&gt;hash: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;red&quot;&gt;red: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;left&quot;&gt;left: &lt;a href=&quot;collisionproofhashmap%24%24rbnode&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot;&gt;RBNode&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;right&quot;&gt;right: &lt;a href=&quot;collisionproofhashmap%24%24rbnode&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot;&gt;RBNode&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;parent&quot;&gt;parent: &lt;a href=&quot;collisionproofhashmap%24%24rbnode&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot;&gt;RBNode&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9c50f75311cfc8b15388cd70d9e0994d11f94fc" translate="yes" xml:space="preserve">
          <source>new Random()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bec54179d04a78564cfb5c2eb3f14da3c84f56e" translate="yes" xml:space="preserve">
          <source>new Random(&lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ba5cc6f74e437b00954459c24b9e190475fba3" translate="yes" xml:space="preserve">
          <source>new Random(&lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68a3faaa7cf4997f0ddd03112da853086863ac4a" translate="yes" xml:space="preserve">
          <source>new Random(&lt;span name=&quot;self&quot;&gt;self: &lt;span name=&quot;java.util.Random&quot;&gt;java.util.Random&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3fcebe084e40ed8f0cc07417aef12534ce72669" translate="yes" xml:space="preserve">
          <source>new ReferenceQueue()</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3469247c373b3a2ef774a201fafdbb3e041ea8" translate="yes" xml:space="preserve">
          <source>new Regex(&lt;span name=&quot;regex&quot;&gt;regex: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;groupNames&quot;&gt;groupNames: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;*&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f81888ac6006c01c6d170d4dbedf07d40d2a66c6" translate="yes" xml:space="preserve">
          <source>new Reverse(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;a href=&quot;indexedseqview%24#SomeIndexedSeqOps%5BA%5D=scala.collection.IndexedSeqOps%5BA,scala.collection.AnyConstr,_%5D&quot; id=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot; name=&quot;scala.collection.IndexedSeqView.SomeIndexedSeqOps&quot;&gt;SomeIndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0017929ccd43ed3e2a9d38cef6403decef5b4045" translate="yes" xml:space="preserve">
          <source>new Reverse(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;scala.collection.SeqView.SomeSeqOps&quot;&gt;SomeSeqOps&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9d1d6233ac159ef4b768cebf7b621283fe7819c" translate="yes" xml:space="preserve">
          <source>new RichBiConsumerAsFunction2(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.BiConsumer&quot;&gt;BiConsumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiConsumerAsFunction2.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49134f04b736939e8f330bedff98b74d49e19f99" translate="yes" xml:space="preserve">
          <source>new RichBiFunctionAsFunction2(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.BiFunction&quot;&gt;BiFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.U&quot;&gt;U&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiFunctionAsFunction2.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3904ab287818ae764a9cd0dd11b75170c8d123e0" translate="yes" xml:space="preserve">
          <source>new RichBiPredicateAsFunction2(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.BiPredicate&quot;&gt;BiPredicate&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichBiPredicateAsFunction2.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc169eef3c436f5024cc6887268138f41365243e" translate="yes" xml:space="preserve">
          <source>new RichBinaryOperatorAsFunction2(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.BinaryOperator&quot;&gt;BinaryOperator&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichBinaryOperatorAsFunction2.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7c5cb635120964e2d59643078b3ee894e2039f" translate="yes" xml:space="preserve">
          <source>new RichBooleanSupplierAsFunction0(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.BooleanSupplier&quot;&gt;BooleanSupplier&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="270374d77230e4750d0bb29af4184eb139b6a321" translate="yes" xml:space="preserve">
          <source>new RichConsumerAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.Consumer&quot;&gt;Consumer&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichConsumerAsFunction1.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5721ecf7a4524caac66606357d3c6dcfa9b7e952" translate="yes" xml:space="preserve">
          <source>new RichDoubleBinaryOperatorAsFunction2(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.DoubleBinaryOperator&quot;&gt;DoubleBinaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c49e93789905c366e171441b2c4b123e435e3c06" translate="yes" xml:space="preserve">
          <source>new RichDoubleConsumerAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.DoubleConsumer&quot;&gt;DoubleConsumer&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad7923f673e9984a1255bc7e3a17622c51021557" translate="yes" xml:space="preserve">
          <source>new RichDoubleFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.DoubleFunction&quot;&gt;DoubleFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichDoubleFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14c8ed11a9a3719403ed408f4edca801442c6c3d" translate="yes" xml:space="preserve">
          <source>new RichDoublePredicateAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.DoublePredicate&quot;&gt;DoublePredicate&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f9abec106367aef9e36f36bdd2778fb55b6cf3b" translate="yes" xml:space="preserve">
          <source>new RichDoubleSupplierAsFunction0(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.DoubleSupplier&quot;&gt;DoubleSupplier&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e087b88234ab4cb4126b9026f9130acfe7b31487" translate="yes" xml:space="preserve">
          <source>new RichDoubleToIntFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.DoubleToIntFunction&quot;&gt;DoubleToIntFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79fc3be34adb57fcc2187090ac4fd0595cee5762" translate="yes" xml:space="preserve">
          <source>new RichDoubleToLongFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.DoubleToLongFunction&quot;&gt;DoubleToLongFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="036dffed30b5e7f487b86453452753c571ee6d34" translate="yes" xml:space="preserve">
          <source>new RichDoubleUnaryOperatorAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.DoubleUnaryOperator&quot;&gt;DoubleUnaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f37534c26318ba0214954b36a1691f03d96000a5" translate="yes" xml:space="preserve">
          <source>new RichFunction0AsBooleanSupplier(&lt;span name=&quot;underlying&quot;&gt;underlying: () =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219dd92cb650776cf1b8a41dc9ffcbdcb2af12ce" translate="yes" xml:space="preserve">
          <source>new RichFunction0AsDoubleSupplier(&lt;span name=&quot;underlying&quot;&gt;underlying: () =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed6d5e645bc51fb62bdafa1e1187ac9200fbf46" translate="yes" xml:space="preserve">
          <source>new RichFunction0AsIntSupplier(&lt;span name=&quot;underlying&quot;&gt;underlying: () =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49e1615331be84c0f25f74d24648bb4f728a7bf8" translate="yes" xml:space="preserve">
          <source>new RichFunction0AsLongSupplier(&lt;span name=&quot;underlying&quot;&gt;underlying: () =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4511452123c417c60348ec369a7b02da2bbb921f" translate="yes" xml:space="preserve">
          <source>new RichFunction0AsSupplier(&lt;span name=&quot;underlying&quot;&gt;underlying: () =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction0AsSupplier.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c08bd12dcd2fe29fbd434a3ff6b2de05c48f37f8" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsConsumer(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsConsumer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7cb26ec2c22fcac1f73f467eb6d5cd679332e0d" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsDoubleConsumer(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62fa82bda4834ac516971c536d980f6d2b095ea5" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsDoubleFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsDoubleFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0f6afd45cc02dceb43e3e46c6c4221c6d8d91a8" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsDoublePredicate(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1fc4016f2792c69ff53b45a99dddc0ef98229c4" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsDoubleToIntFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e43c0d46be2e937cb47c258ef63bd4cff9357b3" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsDoubleToLongFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a9d1557f6fa21e1c80ee0b2329c3dd11f685acc" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsDoubleUnaryOperator(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26398a2a3c8d984168e45742163fe97d5f46200" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d81881aa09abdf9a2fbfa7ca938de46564ee69f5" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsIntConsumer(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34cd1b1a17bf599b6cb32f02d827563c5ce860a0" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsIntFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsIntFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bb6471e84824714f308a5e19db74fa3cbe75a01" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsIntPredicate(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e698a299c1f9d4451af29c01db8096df7f32c0c" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsIntToDoubleFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ee10eaf053e39d9fbe3eba7155e36aab8d21e02" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsIntToLongFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51989788fa115177a5a862bef085d77f6e256861" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsIntUnaryOperator(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5b5482b46a7277339e2832bd601af0dcb543b45" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsLongConsumer(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fde0baffc6e4df4fc82b0f9b9b8acf463d0f8e7b" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsLongFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsLongFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cac30d94f6b274661ca9ef1a753b8b5b5ce2ec84" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsLongPredicate(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebabaa9597f08093e5f4c75e960b22403551e968" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsLongToDoubleFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dbdb5d10884c2db3886122062fce64a79797c6b" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsLongToIntFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d1d8d2f63e5c7e24544f6c26a954f36fe4568c" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsLongUnaryOperator(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b031484af027743d9e1637882c47360d102d3ec" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsPredicate(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsPredicate.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8d8a18416a7bd84fc49a24043229a1dc20e1f5" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsToDoubleFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToDoubleFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6b11628facaee68f92b03e3d898ed6d7f0cf0c" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsToIntFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToIntFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18a2a4e157ebbdcee3fb2ae58472dc5997bdc815" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsToLongFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsToLongFunction.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be3a7ffac22bb015f6aea10e5f554813595b50de" translate="yes" xml:space="preserve">
          <source>new RichFunction1AsUnaryOperator(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction1AsUnaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52ae01f16048617b057297f7cf21c94dc5e704ad" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsBiConsumer(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiConsumer.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc9d8a0f60202c62968444cff03b4f6c22b74b71" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsBiFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiFunction.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74b61f6c48b905f4fd91fdef119627c7eadd60ae" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsBiPredicate(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBiPredicate.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e808c3cdcc6c9939d06759afecf821414d4fc3c" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsBinaryOperator(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsBinaryOperator.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b6fc61e62a218573c0097f7b652ac6f45ab54ad" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsDoubleBinaryOperator(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b758f095606f6a6a26e81bd72c184c0b7af7872b" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsIntBinaryOperator(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2689160982010c30b303c692276ca368d949f664" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsLongBinaryOperator(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dba2cd9e25add1318ce904eadd284dd8f6d62cf" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsObjDoubleConsumer(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjDoubleConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30c29cc0dfafa456d490c05f96c3b52cc98b3bc2" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsObjIntConsumer(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjIntConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba57808b7486b1e4c356ead1d993439c9660d837" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsObjLongConsumer(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsObjLongConsumer.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c43c11b11114bf26073f662865b844f53ffda93" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsToDoubleBiFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToDoubleBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="428c2f40d036fcc31c4eb8160be1b070ed88c8be" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsToIntBiFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToIntBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="698eb403c705dab8bedd16dbcfd887348518f6e2" translate="yes" xml:space="preserve">
          <source>new RichFunction2AsToLongBiFunction(&lt;span name=&quot;underlying&quot;&gt;underlying: (&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunction2AsToLongBiFunction.U&quot;&gt;U&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ec691369996f2799443bda72fe2307ab1aef034" translate="yes" xml:space="preserve">
          <source>new RichFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.Function&quot;&gt;java.util.function.Function&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.jdk.FunctionWrappers.RichFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d8a7c957ec2b1cda0df04c469b2861a6df1c2e6" translate="yes" xml:space="preserve">
          <source>new RichIntBinaryOperatorAsFunction2(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.IntBinaryOperator&quot;&gt;IntBinaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a70a0cec5441bab5c3ce703446c547cc8df0334" translate="yes" xml:space="preserve">
          <source>new RichIntConsumerAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.IntConsumer&quot;&gt;IntConsumer&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c35e6a8de9ec2b12dbb9d65bbf17b118c03082ed" translate="yes" xml:space="preserve">
          <source>new RichIntFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.IntFunction&quot;&gt;IntFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichIntFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb82fccfa47adde4940de9b19608f12e03e6e6cc" translate="yes" xml:space="preserve">
          <source>new RichIntPredicateAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.IntPredicate&quot;&gt;IntPredicate&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69497ce9f2a20e81fde464cdd7577643301bbf8b" translate="yes" xml:space="preserve">
          <source>new RichIntSupplierAsFunction0(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.IntSupplier&quot;&gt;IntSupplier&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="102e9921be51d37735645c7edf3d2d1ff8d8af6d" translate="yes" xml:space="preserve">
          <source>new RichIntToDoubleFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.IntToDoubleFunction&quot;&gt;IntToDoubleFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b3ba46fa20688839504d082d386543148eb7d2" translate="yes" xml:space="preserve">
          <source>new RichIntToLongFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.IntToLongFunction&quot;&gt;IntToLongFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13024540c1311434b1a7d2252cae8f02be6ee1cb" translate="yes" xml:space="preserve">
          <source>new RichIntUnaryOperatorAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.IntUnaryOperator&quot;&gt;IntUnaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3251b66bea9ae6b7883685322b927aff9118f9cf" translate="yes" xml:space="preserve">
          <source>new RichLongBinaryOperatorAsFunction2(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.LongBinaryOperator&quot;&gt;LongBinaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0039a2a133ea5d549ad058912b5b1f7020f6acc9" translate="yes" xml:space="preserve">
          <source>new RichLongConsumerAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.LongConsumer&quot;&gt;LongConsumer&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844fab9765784e7cd9113a992653d04ce5cbbe5f" translate="yes" xml:space="preserve">
          <source>new RichLongFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.LongFunction&quot;&gt;LongFunction&lt;/span&gt;[&lt;span name=&quot;scala.jdk.FunctionWrappers.RichLongFunctionAsFunction1.R&quot;&gt;R&lt;/span&gt;]&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c20e6779dbea8c11de8818929eeaaa328f60b30" translate="yes" xml:space="preserve">
          <source>new RichLongPredicateAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.LongPredicate&quot;&gt;LongPredicate&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87e5377dba7c25ac1eea382d9b5694297292509d" translate="yes" xml:space="preserve">
          <source>new RichLongSupplierAsFunction0(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.LongSupplier&quot;&gt;LongSupplier&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d33de609745074acc599a5ee0c29ef937e2187d5" translate="yes" xml:space="preserve">
          <source>new RichLongToDoubleFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.LongToDoubleFunction&quot;&gt;LongToDoubleFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffb5b782dbb456bdcabd0feaf8e60f1f961be717" translate="yes" xml:space="preserve">
          <source>new RichLongToIntFunctionAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.LongToIntFunction&quot;&gt;LongToIntFunction&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cd50eb909c4601d3bd80f1b54eac93379fb1cc1" translate="yes" xml:space="preserve">
          <source>new RichLongUnaryOperatorAsFunction1(&lt;span name=&quot;underlying&quot;&gt;underlying: &lt;span name=&quot;java.util.function.LongUnaryOperator&quot;&gt;LongUnaryOperator&lt;/span&gt;&lt;/span&gt;)</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
