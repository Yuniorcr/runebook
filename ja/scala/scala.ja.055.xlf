<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="">
    <body>
      <group id="">
        <trans-unit id="c9e8784d2c659e064cf84ccd3198bee3587cdaf8" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efd8d063c5c4f390e7f89a23e87006dcda638548" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9101730b54f25bd510b284d7b5d25783b62fd2b" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fd9e35944a62bda3981273561096692920713b4" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2929b2f332574639d086714068f0efa862f14f8" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81ba148e3b74046cff80c1709f4bcac05e6fe208" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a31d673e358e254819899eac5208ec486dfbb4e" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="360dc8bf99733d6589bfdcbe2888298082c131de" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26ac0d8657fa73f378bc3a862deaaa575f97609a" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8650730f61ee5ea22177db000fc47c5389a1354" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7016aec4db0f81d69fd42dbdd52979f350379b97" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e3794d286dd4041d972bb239bf8c0a34ede41a3" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff2dbf1e2dfd61363ee82eaf7302b0b98382c7cf" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efffca624706a31409de67b88242fcf18e17d312" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ab8254a0bda45c610f8f7c310f58cb860c9e8d" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbcf4fae85830c79ad38c47ae7a4069c386e4390" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e774aee84a70f21106d85300928c2f2380233934" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8acfd2de59f8905895f1692cda41dccc667c5ec3" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baed27eddd108ada82088f4d30c3985ac468b44d" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78982f4d1685afa1700fd8ca8b12e6ac7696e0a2" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0b7cddd8b547d9866bc31bfa42fa292b3482d7f" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;partialordering&quot; id=&quot;scala.math.PartialOrdering&quot; name=&quot;scala.math.PartialOrdering&quot;&gt;PartialOrdering&lt;/a&gt;[&lt;span name=&quot;scala.math.PartialOrdering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd83f101d33d8e9628ccd36c1a5661177beea4c" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6864f0db39bdf8b3489361b3cd48d03aaef3ffa" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d60b37e3b666ad116a0ee87beea578133bb6a5a" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21deed0d3fce2ad2013776cc2475a9b9e8cfb76" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16c3dcf287ad5652060eb64af049885a1d1f4e51" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6866b385184e857af5e5e97e8ad35dd4f5d0ba7" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4225c9543603351af169ae372d91b910fdfe7597" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b48c3546e2278314bb0ade2bfcf7e213131575" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8425cc8a660e8bb5e767d66aba78db418758b03" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10adbd9057409398cb8309cb0c6c319eabb87c95" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a768bd3acd151e98f02eb8d36992146cd026659d" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58282ca08a4892f534fc4f1227b90173f419ea6c" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58ead389a8219ea3243f940d18b26a39b9a0b54c" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="026c416e07280851f903fca32b1d1ee7180dd996" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd30df1b8d1d5624ecb5bfde3e154de4236fa0b0" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9081e1bda5de805573b60039416b33e3723164b6" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a678198ab1955f6c1d3a373d1674666a3d4fc9a" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702d3943af2f191cf686e49bd7e932aafd8b1d90" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd64e7ff526d525c35c7ffe25e3f49a4b09924a" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ae46b21572ea4e277e48f1d4eb3f4c7689d07f" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31d1a3e2b92050088e6f09dec9e6397e7e5bd93" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03a2474dbe4f9f53d7a41d2e86dc293660c89c5" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1f1d728a0a6b483264093fd9236f85f7adef20c" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09f5ace644a7abe2a7ae7c332ca1d73f1fee678c" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1537e9dd7de5afdf58d3a20c5f26776a67bb01cf" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="889dd6d35ca10b890c429f1390fa129c5abadb41" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23c634606130ef925b02b5fb4f85091200edb965" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4898d9d6fb13964d890a10f4a0cabc62ec9cc472" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f11f2f464f7be006eeb73eccc8a355555097c31" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d348c7de020ffb4cfd0c42f46ce4deebdec767d4" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b352bcce8a2e8161e36cc55547117c49877ea121" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4914bf6735ccf7b38d4209b9b04e719bace8e9" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ee732d402ea156d78fcf2f46fec024c094ef47" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0feeea66f55e730d0562b79476982c2b6f6be84" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfecabafddb3dc1c583de298386de8ae1a46e091" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff85a384541c5bfa0bf8840b1c8194f413e0fbce" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df8dead2068416ee75429a5d2f3a6f532f61c30" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb63b4e461fb4e62ced205dbb994bba92df881a3" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6593570aafc7643fb761a441a44699c9e4cae570" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5464ea859baa979403de21e2bad4f4d2a18cd7a4" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22be6f75229a9860c1de317f37edc92459cc107b" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf36424b386fee2f4158d7c2d4aca44e9a22a9d9" translate="yes" xml:space="preserve">
          <source>def reverse: &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c5ccc1ab49cdd6da5277b24bdc6bc696e953166" translate="yes" xml:space="preserve">
          <source>def reverseBytes: &lt;a href=&quot;char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0298c2ff0c12595a741c331a2fc566711c0584b" translate="yes" xml:space="preserve">
          <source>def reverseInPlace(): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;.this.type</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38df8fa8417b2fad90af03ee8ce26e41db979336" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c7abe0dcea01fe91575106d2c452464f9cbfa20" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa817b8263330a463bad1830a88f58c3fecf7a48" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34ce2ebc15130d2c7105857aecb5b3c414acd653" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b165a7cb5d86fdd542d7fb79b9e2533ce898b61" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1bd16bad1f5e57820bac525009b801414ac8e375" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1abaf26ac232d9e061ceec406accc10b8840ef4" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f99e6de255fb01946fe79179796766ad5695cd" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67fdc65260ccb604db49caa947ec869b62ab69d0" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6b1e0b5806d348b0d3d1198438b4e1c13701c47" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a64a755f21d671ec2df48e4eecb627edbd34c17" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9bf8a5656de1b2325b6baeb83f4dc0ebc6d19e6" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b256c9f6f86ac5c0c3139881b3b2054d0574577d" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="553aadbee623150c31cb61f7a3af980c7469d05d" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4742d8cba52010c994fe370d0740137073a400ae" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2e33e7f66e91c4cdc70a8aa06329ba02eade3a8" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764b55330440fbb1d940176f26124d9602e76b7c" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a97533e25d16f32e5caab5434cb968ba7c1e54f" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2a35c081ef65411152c6fb3558b5da6c4d1840" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b222c66d3a238768aeb59d6ce7c14f7e7c86590a" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="778209d9b1fe9ef668248422068e67983135baa5" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14139800a8e9ca2f8f08217dff7a3e301cd505bf" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="262942e496c9a6e4d5b5dc0142d4e80c5ec066be" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0e8d75eb0dbe83741d13d3549139514b925c90" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a55644318585741d88d2afaef2ec389c2d5aded7" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67acdc1c61dad87cffcca0699c3e00394844200f" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2809287eaf64edbe296fe626afdb9b554cb8785d" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a9455e0e7bc0a93206cf41e809a8d0d0214564" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27424b090fbdb89ea1bb852950cb26d416ba66fa" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63cac620e0360e7cac53b4ffa05605668a35d83c" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8727d18b28b13887f75f52ea75fb15cdecf33d05" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1745e24ff910ccf16979e16c1fd14a4315158a3" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="080b5dd4ac1fd3d48dc4e4364ae82873e7628312" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e1a021753c6192916e1d630b7e6e9fa64e05ac" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de3e7de083b7c2bf273b422f96f69a6e555186e9" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c6b46f882b1d53848ec1fa471d0eb1b5b8eeab0" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e901cb5f631c45cea99028870fce7b1c8382a48b" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b42c9ec265c5bd80f3ac7f3465ee9cf0b0dbd9" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28233c8d3fa2646bde97c9201156b7b3139ec722" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec86a21ef46887ac3f02a03fe3bd47c72171e1ee" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="691c2f29e984c0d22f83703308429fcbbd6fbcc9" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3b5e96d837c263194fd13de71e88dfea1f634f1a" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d50bd88d224df1071cbc0c2e9974ee0b9e766764" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c7da926535add4512039971616cf06eef67f1ef" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27d016f593ff62c02f047cdec4d01e1b06e64161" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1149336847f8eed9e7615811c3559a8d4277473e" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984bbddf49d6e28d6d4874176dce6819c3d842da" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a53bb37f4a097cb8f5750ddca8479bea6692e4" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4a716759f233726d0ca99a0b7d1d6992914a8bb" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9afc931418c3ce9d616d478b152095708baf468a" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72e61d77c5e5f53dbc9a784dbb9a74fae9d918e2" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1aee47458ef71318c24c9c8400dc950d2e9adacc" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d64b5b2c0e8c6c405e21e30ef4255215d8d5aba7" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0f39998cd3af31009b7722fbdcd62fd11733d0" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83cac6d58449c728db56e227aca41b7c2b182938" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13b46ee2a4e05d22a395d6d67992af26398b9f0c" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97d28b295736aa63ed3129efcd4428ccc9b671df" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251e9454302b5a86f97177ed8cb358ee88f2aefb" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591adf832efbfe16ed881a4ef22d61d59d1dc7c4" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4edc56c69499fcc2015a6572f9fbfb8dab8de1dc" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b290dfc4fc27c69f1bae58751befa9f2485544" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13fb3fb791e2e44a70820898dad2be82f3b6dd5c" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160f487d58e3110523041c884eeda6d4bc12520b" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44d2c4b918e3de515a55878ab27cff14f2925d76" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a2f94de885f31f122d1a543bdd266749329b20" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a276dbb5569e02dfb3fd22498df346b8b50b0ec" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f907dc5eb8d066a00873f0b50cf2a32a17940cf5" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0401ddd806063e6d25c2325555fca4b671e5d28" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84f0fc7374afec18be84feab818582eb826e85f9" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb8dc20d048297c5ad1f2f3b945691853738d932" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b090c366ed91b835b1063263007b54f5f1cf423b" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060484d874a18ddad4184c8249e892592ae309b5" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f20a6884ba8c2954cc346f903c6a795daad4add" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b07853d027cbc69ca404b2776e082c3fdd1b8add" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64dc0e316049fb1012e3e15d63c05a85b665464" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e48d95642439cb1f0bfa25ee5b8d9ebc53ea71f9" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3505fea0b0f083de3b00c59d5c4397d9a00ef5a" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47d130931605e12f2215739ac7a4bd6fc1effea5" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c67d36bf9841a079dfc7442bb66f601f441167bf" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c71a7003abaded3b66748ce5c1ec214358068bc" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75335a9e19f03af6c67f03f4d590bf7b62213c14" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f6a516646979e62b169e265a51efaed7328fe09" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35bc41463054182ea1cb15a431c0e2f34ff91ffc" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9e944823a5c978c9ed8ec213ca8e33ea7e32842" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912aa4a556e644a0f443729e2b6dc2594bba75a0" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93b93a60c84783b26695913c500844b382fa7e21" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a13ae0bda2760082e206c2f55aeea52d34c3e90" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e135105e872cc4688568526d11535961bfaf573a" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d40070da4a7426e8ba494ccfee782aefe89af475" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c19d96cfb74908f5140c15f67479275e79be9707" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1ef50b5f909406e2a08853ce5cab6a8ba33fea4" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4dd414fd5d7af9174dca2d9f2193f1994f0aa29" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a03f52eb743c7588e1b2182525bd73b5ea190bc5" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4736608c854fc824d526dee575da45ad016a5194" translate="yes" xml:space="preserve">
          <source>def reverseIterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb869e9791fcd51e444780125d3aa1f4038852fc" translate="yes" xml:space="preserve">
          <source>def reverse_:::[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.reverse_:::.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.reverse_:::.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a72c1dd53b29d5e4ec209ad37b6721441300a78a" translate="yes" xml:space="preserve">
          <source>def reverse_:::[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.reverse_:::.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.reverse_:::.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c0b63a428fcaacb2c09ffa1d2dc8f763863be3" translate="yes" xml:space="preserve">
          <source>def reverse_:::[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;prefix&quot;&gt;prefix: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.reverse_:::.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.reverse_:::.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45c8da5e1c743c36157a66523383df9473e13a1" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a7b62f9369002922f25589d4c85f1c0d6d99afe" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dd609aedb39fac16f940d22058c0b8ec564e85" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7783ab6c1ab03a8bff27cc8561604aa9437d00de" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0474569298c39146af55e70bfc20af99bd417b16" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e568e6774d9796802a0b4ef3b27d4def5f92a1" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7259910f965220014e6ac63e0c04c352d61adaa6" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bf8b11cad6dfb767c73b32b27d531face3dcfa" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.OptionOrdering.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e5e07ddee0a3573bb9cb405b8c961cee2536f0" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe766d9e34b1d7340eff4c7587ba4408fd3119d" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45faf20da3025bd9ed1d92eb6d3a087436eba1ec" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f83b5c6852e34f3811182af44a159c8c23cfadf7" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dad814b77e486d504a14aa25be7e51469bf1453" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00690553232165445803b7c71740aa7595dc7d73" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e02e7d57e0dc7aa6f1f1fdcc4e811b109b34055" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1689a104c495eb0973eb9a9ad16191e1737007a" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41715732b6d847e6c39d7263bf858c5fa5993dc0" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="099337f35c15858d5d182408d5a477c2e51472fd" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c80c50a2ed821a90f9707cc2a2d27de040103062" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;span name=&quot;scala.math.Fractional.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f084e7fc4f4ed4ed00bc48bff66873e19fd0e069" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;span name=&quot;scala.math.Integral.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ceb19ec9b02fde4d9d49c836862c1861c817090" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;span name=&quot;scala.math.Numeric.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99a13cab8b965aa5805349c370d14948a4444b89" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="078a8c2ea7762cf4183a609ab2c354742aedae43" translate="yes" xml:space="preserve">
          <source>def reversed(): &lt;span name=&quot;java.util.Comparator&quot;&gt;Comparator&lt;/span&gt;[&lt;span name=&quot;scala.math.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7431b2d33380676db6a006abd939295480717f3e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7b3ec8454ae5d91603041ab5d07ef4524c54fe5" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="058a33b6ae266073f49df1f53d5a1b8d04c030aa" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ceeedff743c39331b6ee982001b021ebaedca6" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7a76d748f2e809fd0c995d5b7953fcf504a424" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a627be2c5a51046001a26cb2720a8a4e9c2566" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6635f7dbeb1243ca7fc69eba0ac21bb8e8c34e00" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c208c35a16c86373e7b34dc597e014b8af6cd56" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e63469bf145354869b8bbb67b40f47d7d5dc2b7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e64bcb8609dbedcb0aa0ceb6c502aa557512997a" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6085fffbaffc22343245c69678e289581556dc4c" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7893cc03eb568fba2cabb6cfb9112b3b76a31089" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e1f74113e91bad04fde1091002168089edebd32" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6c45f9f230545d5aa9e972f08f68873feee81ad" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e35da4fa74281e98f7aaaae8b5f94c0c3d45235f" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73beb1ebfe05ecfe41d86c7517885146998bfbb2" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4328147bb5c12c56517126a344c953121e919dc" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5c452cd57a92073dad089f99f21539e7de0bd7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28006cebb8e8902a940cae0d690c817b2abf4760" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ddbd927e8f80dcf0aa086adf73fc15037ac650d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7426a0aa41eef35eb7724462cdea77191f427ca7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8b8dbb771e380bfe9e932144300fd288ae1cbee" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37d49ef733f0e17c9e021f33e85990d4f2c47b6" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db24dbf553384b1f0bed1413a2ac39361b27c726" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905f1101a5ddc5a8dcfca53d61692eaf05bd9f56" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19890864afea7a5d71552a2a2ff6ed0a12380fae" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4263660cccccb689482dae2096a4e8bdbbf071d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e753721c89691821705d03f6ab1773e8bb0eca" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9470b120fa61ee24303f4fc85becd37b2a5bd9f2" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b72e3ee65a01c0a2678b0d8d623acdaafbc341" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5295d03e441f604a740f9044757066d28e7772dd" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26f493087c8562e157c58ce6657ea6eb8a7532a3" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac92e203b233a87bc77a73c322376f7f5b7c2c70" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bb47d6f96aa2e57e58c9c7058d259164626ed7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06a86ff663190bb2fe89af0bedb1009273784d44" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daa1d6bdfc20188a23d0208326e2d97d405e2197" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fe3c3cad311ae6fa5a708630e073209693281db" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0ed06c7fabca9d5a984aaddbfec9bbc531ee60" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e05a66418f96a30c028e19a8f426126fc23a14b" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b71ceb8bf7fcb349f04ca5ebc8358eb6c0f987e7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78147e490d9bb2285ed6bdb288cff34bab5e9c19" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace681f089d35a7368b628e49422cbc9964a97b6" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1005652dda9ffc366e31b5e9140d441b92b5135" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="251c8ef5f444fa3dd20a88796c9ba6e06ee05343" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea58b237e4c2cd181046cf839d081c1b87298323" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01e28a4cd89b6aa2f6feb655eb62d568644584c0" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f1831d14d9d4cb9a4ac3630aef0b8ff1441cbb3" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef73a403453347b78e5f5943d20a79bd0d8daa3" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="632833e2ae498bcaacab8d6e773da6be05351d81" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc6a1db0448326fdd05c63616017623869b6718d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc8bacc140ee7e5498ce68aa39455eb8e2f80e5" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d729f6635e54e22740e194600d99ce0d0cb7074c" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0c69ef3b5a7c6bafc08b98588ff6c45315fa46a" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a641b8752dd85bd349b77f99d39c120a2cb222e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67439e3e025caeaa3eff7d5028f4c71989137588" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60182956234c26c31dd8840893029ef4051dffec" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74d2457a5c1d73bd1cfacf9f7dd424eaee243006" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="606c240910fa8b9fcd53b29ae67aee5ee71f5620" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630cf68da35ef96350ccd907dbe27f30dc6af1dd" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a52495d175cffaf85a99aff9b161f7553be227bc" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="736fe1eb1914ab04cf9d2fd1a3b2f6fd59e4c261" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3d266d1482f9e38adb035555584fd032461e0d5" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="980536574f29d0c1f4f18ecb95c60deb50276d0a" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="087907450aaa85a67c42041611b6fb082ffec828" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56ce8c22156a0e9c913a6fa7159ce682e1402247" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0906eb238d96bf6053c61e5f072ff40169843e7d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac422fd8188a3c3cbb448f55ecbb754ec200bd57" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4debf641d9af97ae51f7d3419485e2f86df76e31" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83ed0585b39e3b00139a66eb2d4baaf9a3a334e3" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf23c9c21c1387637e11f49893c6d6637b66ace" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79e9b3a82bb78d631c2b687f9d4c5389dfbf1774" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b220497461a29064240ef05289facc2446153f6e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7fe0097f52520d2ad3db79080d94881fb98b87c" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="583d224342fcd2d61e2de32d7495638ab28d1148" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cdbc0247f58663171708c2233c5f710db7115c" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a40550a9298fa6e701a59d435ecaddf04cd6722c" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d129d2a3baaa7e9a5f52e4e487a7544595f66a7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9beaebc3c8d93114b16081668e1d2e3669a7f01e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70bdf5858d8f160c675581cb39c5cf2ed3af177e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df37bc522a573b076c92cac0f5396436a37f1a9e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a3e1450703d1d06d4b5bff8fe512bf7f63fff74" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef68fa2347a3d7f22919611e813ce22176b7946" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="412e7b7d5b20f9bb59d4b122b738c00809085abd" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89dedede371c0aeb2cbccaf5c021b67f57b3d271" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="813c7c0732543a8d09f153e4a3a4dab536948739" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e74c547ade95c72771bf3dceeed0aa7438aa6e5" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a4d1198e70aadf40ff9a9e1b4b9b4caeadb1fa3" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8da0de1d00bb8f4f61f3c604dd9001b6a9936638" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f08ad756f38662bb79627812e88db0b492ea4bc2" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1749f9356b9993e26046ab620f9a20e8744930f5" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b136f2e6af44a5ab14a0b01c80b2a5114e4f522a" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="600c94ef71aa115ecb29e2f34a3bb4e2a51ec124" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea8167d8f97fa0c965cff6a1dc36a90571423292" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32ceb42c058513a08f6890d8b318bd8cd96a0392" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715c15689d1475ab46965fbe1acdb3af76593511" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3136b5ca1fc8815c3718e23057d6bb62c164a3cc" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72bfb4792a0e7fdee327c782a50f4cb50510a38" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="325ce3444165fc8db34a1c131db452590ae705d0" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8308f736451391e26bc1f7495acc1b4a565d77da" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9692dd317535e513abf214ffa59f2a5401ee01b" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="713a77eef1c73fbe17a84de271a46d1090f0af54" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd2d2cbca9d1504218a788e3ce07521c083b18b" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4267e704077d5577cd8dd1caac197cb2fbcf0d81" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3143343b270312195ab25658bbf465f09ad17a" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca371a6f832b123549d94d8c1a8c2f04a52cf2b" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff97dc2c0fbff1b50996e7ad8a3af5be904a66e9" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="669ac7e7301c7628d3975eebb4ce216ca837a483" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f612e7e08e7596defa3ab837378584ab4f2e7f93" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46ac19ab2fbf00468be666e3f6d2031cd150e75e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946c22afb01a82ea976b678a39410b28fec22f8e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f539bde04d7ca26299249ace40e7931156ee9e6" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21d41968e9d96393429a6985d1af73f47d44e5d0" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e5e5bd401945aacc7045ecf48a654222f82cbec7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a560832c84c95aec60d241f91fd121c463d403a5" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85c969b7be83651699c88d6e39efa8f8c8c14e04" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1176a1a38fdc8ff1197b28373bd7d557516a4438" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70a11bbf1fb01c37fe80905948907f8dc4138301" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d9772ea924a856f984b23ea6074bf297164fa9f" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6a0e901efacaf842433abe29aaa5ae8be0bdb0d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfff96de35b445babe491c08ee7b223e0d48c270" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da86bedc14389992568dc15862195b595c5653c6" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e55eff7a888b14f5b29389f0be49a92cfb7679c1" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aeba867b65ecaac5125098a764abc14f232408bd" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8d51ddb0a64b5e087e95a74adc6b86b9e240189" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="193216840fa561e4ae3a6ef41b326921a1091811" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29d359dd7bcdc30e44b31f4c19775f6553a2120f" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0223e3e464a2a8348a9a2b1222dfd4d898c28062" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e7e65ca5401a64f952b463595ecb1a272bb6f9" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22f9b1f725e8b31edd7decb32e6b6ba126ff7731" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d26105d621618180a872cc49e2b2e5511e59e342" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5209f7266e78747b5672144f39215cca28956ae" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5bb66fa91d9a46e024df2280b7be65fbb1d6da7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="936fd3fbabc37bec6e7bd5514cd72b0dfb860dc4" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e23465a46ec3c788e4f7004827e11e37ec59163" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29917fc2e647add9a98c4b404d5c69360f8d6d72" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b90ddbdc9260749bdbdc4ea6651f4068d011e5da" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="670e2610ac2e64241dc2ce3078ab7718b8aedcaf" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46898a2a53607689e94ec3f141fcbab9bc3d84ca" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a7e53831382d427abe2a7e5d27565fdd93fb5ac" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d83db7850190affb0029797c0a0af5bbdeab26b4" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de85cfcdd6f9a861d3b56deab2f67e558f509e35" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5a99574247e2e6e1108a739ff756a0e57b5af16" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="402a5c43766755e771ed39aedf09475fede3f974" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13dfa5e922e5ac72cc35b2ae19da26c2291b8e64" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="230f011b4809240e7bb121250c5c6dd1e9c729dc" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58498e757f3ede6cfadcd5c92da2b66b33310752" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58e62b34c7bb205b7ec4705cbddfcecc4eef465e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2778188ee7d2a9901229b42af1a054806901f14" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f5a477bc2c493fb885e4f765d6a680d63a2b8e5" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d412b4d0f78f627f21ba4720e1a1e4a62b49c23b" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b717a6d1416464fe0266ea10d7c473bbac31b3ed" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3a64c2ecc50f2c1856f2cb6837c8da518ba3c9e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7139c263a10f12a639055bfa8720971c0e1a7a09" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="821af94729a6b46c08561fc0327332a243523743" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d26b540c67dafad6b6cbf7abc68c84f349e7cb6" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9437085cb9e2a28600d00289302876d2ae982751" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3cf4302a090b464a03a20efe7d351625f1b97ef" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9cdd177b2a38948c38704d6e22669e3f8574f342" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7a815b850a24ef5cab011a2bdb9130477c4ca35" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ece473606906bc353cbd548c32c8dc9b2501a31" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0ed36ae95c546c8c1f5cd6cff3054f534fccf1d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bda7b1d41efad2737176c51ae718b41199460f4" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1696e4390436434344838dea413a2d1a35cad231" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d4e9160dcd7d4f2e552ef6f4766665d91f6eb58" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5be3b95445342c1df32ae7b8cedf32f7e72735ef" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6932fc0b794ddbfd0ec1cf9f9bf0ed1c20a90f69" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6548dce921c5e3c9b205cc659312c32ff790e59e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c922ea5a373719751735688f0921a565250e8b" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7cbb04c9b3b1f921919edb3ee8b2cb2d32ffbb0" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21faacdbe6219c685c006b922c6062e21f69fc7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b214f1478d0c11733ea197fc240e409f7003979" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b75c7e9f9ee09cffc88d535767d486f526f7ad" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8efc810653460940b80b474c9fcb309d6e6d4404" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a586c5bec459738ff0778576e3cbd18f3904a30" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfdfb99fed4f7740623bdd0f19610008b8e77e51" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0490be399387ab7f84e4851971a975f93ff57600" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76a4689d49abfbb581a7412ee8d8e82bdf6396a8" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6356f71d45c0591c67e0a5069d3d51685ad3f80" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59207c81680d62b8cf4a840e6f8870d9f88e353" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15a216ee5581bb22735fb16c683eaae1719c58a8" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOnceOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db31363abf88a8a2b1c93bea76e41ad575b3ae0c" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d516b10f24fa56cba4764373e6bbb85b9f23f0c0" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e31d60d968cbfb6f0d4e6ee70d233db40c46c2ac" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="567ab52db42f3635474698c7fde120f43ad89428" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219ac3873bf7e9ada0eba61df7d920f702594203" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c6bebb25b224921dbff5cbae5016b21a4452c48" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="789a07d45fd72e80fb60c0dfea68272e7de6ec99" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03ac33de920bc7bd3b594ad6defb504dd9de3569" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24fa938710af86cff9b712781352ae01f60f2b82" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3bc69018d2a4c2c31b884a81f85f63f85ae8c77" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dc02edf4f385f142003fc24df50f33c7eab72ad" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49a017531b60273c6ff62ee77e316fcc559ac566" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd0b89d1e62e4f2b08624000c9bdb4479585413d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2f594f86df53c85ceb489eefa1df050b953905" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd9a024bc65e27692f56497b698a48955558a87" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12bcfb138f854a8989e7ae186b1dc5d063eb606d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02abac994520a7836fe3c654aaa2b509c435c66f" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="692df1ce977e4f6b96db029b389e8f34a4ff6184" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6f587e777ed8eaa7014459ef2a855878df6be86" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b3dc992ce75c8efc4942076f91746c0e69d019" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="819a02c64fa325e1253fcc7ac31102e5756c81bb" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49b5c4dd93bc752d2598e26c7ff7f1fb6865e754" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f2a61a66317e4404b32f1af443d876f08656a41" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77dc50815b3dde4b4e9e84fad919314c7f2134a2" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="723185e6454b56ddc58f9243f8f2d38732007244" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878376dd09d11b239913ffae6742da144b71e88e" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6913eb068e35b544c8c2d648c63a254fad8c310a" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f69c5f1fe59a749e613664afe600aee1dec7f835" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7d58e1193680d8b4e204c2251b7a4dc608e7d7f" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facd53b25e7e9177e52d4fe8fb7a3f6451d56966" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3dbb29eac2dfe4c95d39ba642c66e56f58dcaa7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f70f48069f7a53c391d722f473d0cdd4e1cc0a40" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8dcee7fd36926549dbf3d3a5794f1554116c66" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d09263fe1db8ba7120f3625b0f7a2e52b4f7f1" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aaecd6c7cb0658d113c846dd764460f488c0e7d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="461f989cf51a68662132697c2ecc305a3df79d44" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b96bf6e2eecfdf5d8c5686df7fe1e63e9b403ee7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c0924c3bacdf59e497d8588c2243abae8d22550" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a78b0c6f71a2b0f573e8db75225e250d220853f" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1fb2dfed690c0316cdd7c4a96a1de78e4776dbc" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9364c0755f5eb1b7f28f8fc1ee871a9a895ab168" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6e9a7f8c4cfd4cc0c1b6f14aa73eebc23eaed6" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3ec79ceb1ab7312689b90a8f822bd9e32454bae" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="332d461d5186ea5e0308567c51edcc5bd2623e25" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57dc9abb98f2560f35a6a414ce92e82930d937b0" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8ae15dbb9371eda0190a16591ed6f55ed5a5f5d" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="991894664e811645daf736c8118e097f78fee702" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27308b0ae199078a59e7324197aaf16846c999ac" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18ff6ed7d84f3d3bd51173ea3ba5cbb44ae02b92" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd504ab2699a503f0ed412829f0d15c4686401a" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34dce0b4511fc4b9d3ab771d432df2ff6a82c8b7" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075b72ba53905d75621ac6254f882a68b19a70de" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5f637c73154901e98e63d95d706eb36ee89bb5" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5d2d45fb4140da5d9954173dec5e426d6e40c62" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec9e0e3ed7b24b84f4091410b6d9d20f4a9eb79" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="369414e1ab23a79fa8e5fa8e2d0fac2091ea1e1f" translate="yes" xml:space="preserve">
          <source>def reversed: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a2697ae32e32e58acd61f18758823b9fb97960e" translate="yes" xml:space="preserve">
          <source>def rint(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="24ed28dbc0692e3ecaea9e6268959275ab9b7d89" translate="yes" xml:space="preserve">
          <source>def round(&lt;span name=&quot;mc&quot;&gt;mc: &lt;span name=&quot;java.math.MathContext&quot;&gt;MathContext&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e37fe59a4a95493b1506a3bf05820170ffccd6de" translate="yes" xml:space="preserve">
          <source>def round(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9794fdedb10f021533f26f3bab1846573919ab02" translate="yes" xml:space="preserve">
          <source>def round(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbc41477a26e519f84e677097bd7a8228063107f" translate="yes" xml:space="preserve">
          <source>def round: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e05ff8a18cee880bc89f494f854fd7dae478c849" translate="yes" xml:space="preserve">
          <source>def round: &lt;a href=&quot;long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acefade16c143dd20e0d27799dae80e5303f92f4" translate="yes" xml:space="preserve">
          <source>def rounded: &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7356507c63f48281150c8bbca4c9781873f76261" translate="yes" xml:space="preserve">
          <source>def run(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be9e3532e4c9f74b473d20990ebc2b65675b570c" translate="yes" xml:space="preserve">
          <source>def runMatcher(&lt;span name=&quot;m&quot;&gt;m: &lt;span name=&quot;java.util.regex.Matcher&quot;&gt;Matcher&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bc26ecfec957242ca39713133685128c6e53e0b" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="624e62195587609f029914cdb41659c8bdd1bc1a" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fff4f44af4f119f7319c14593b69ac5929087e09" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1e0456dfb81353845639cced5d39b70d58d1f80" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f54b21e2bdf19770d71df732f7aac88ea1592c22" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b55d881ebd9444f4dbe1575a04b6be53863a93c" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245a125516182b441a44a7506ef713943a0a6542" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f183bd36e6afa3afb66aec4e6611190e265a2f91" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d5d19b3e7044799b7074bcec11838b8b268ed34" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95cd8c30f68bc878c7887d10546198aec2202307" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e703f4e3a4fec76997d50af42c269a2f0155a5b" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="752dec915d698aac6ea1b429aaec16889f30341e" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f8d12b6b89401753125f836a93a66eb443779e4" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972e2e76f6c41a181b598e913839052b452f540d" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e3c4258fd950309114ffe0059d215836228ac22" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f279e4d7337acb3d7415057ca525c254808b488" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3c3d137089ebbc866075d3e2d134deb38973fd8" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.PartialFunction.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.PartialFunction.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9646d83ed7534a29f70c2a7c3358ee82453337a" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e288a080922f4364f4bdd5551c5acc771e008d" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f7648d080d27e58da36d6e2f025525043022072" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74c67f24993571745d69f85f9a8183af68e6b45c" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="960b68922fd890d50107c1b97857a034b19f1238" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69cae5c426142435d8e6512233e06e1a3d2704da" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac7e4692e8d540b3f86341a1133e5809f71c936" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ca60cfe637c7ef2af0a3f6cdfe3925859dea45" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12af93ea9334c0a23ffb32274cb324fd8e0a563a" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ba057c52dada0254d77b8da17b05c1757fd76aa" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf5c4489a715d98c041f769c6a8b5692d486dfd" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b256a267a2f1a377192de925b64a66e81af11e84" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83bdabdbd47bb2038622fedfb399bf8ef3d08d3a" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417acce0ffe8d4f31e8d6a5f52d11b6e01a873a0" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f156d0a8f6976cf4e18a7e1470b25a279d665ed3" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9b22aa9ff9eebb999eeae38e3379fc5a384a489" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30b7aa703bec7cf704b86cec8cb23b1b70f4ca12" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a23d936e7aa7e5d0691295645d48714250f5ea46" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba100657fe6c85c1474c2041187bb430bb971fa9" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616fd4cf234bf78e48b238c2c8f97bff743bb5ca" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc8529362b4bf44f9858e0b060c95ece0570e9a1" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc329c01920e3210037579005cfab817a415c20" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0266ba51c72fa7b6d554a303c8e211c2185310a6" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f895d3dcf8fa449c2a0d0bf85a37971bdf62e97" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="304c4c336d2101abe55836194c1b6d49706a30ec" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352d8407e189c0f53cdd052f07db8bc001c1b530" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5f7e5f91ce4c6141a04c299555316951ddaadc6" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17e0e8665c2970e0436083ac077fbf9658a91fe4" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee6ff48fa52a7a3dc8f4ba37fdef8f5ccee46f67" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0bd53e0cc6d61fb013fcdae622578be9559bc394" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56e08efb292bf7143f3a76a53691bc32ed214143" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c92cd34ca4e2a94905f3d25682ddb23c58458dba" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e93fab0ab7dd3de5a70c2154f7cde8166e07da" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab56ad8cd519af47bc3ec956511c992281267bb" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c2b3ff6c3c1bcbfdc857534fcdba0c4d81b7e67" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c77c2804ec17b7c5e38539ae8db1dc9cf33d8065" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f351e39c1e0d9bbd35ce874e20b8df99ac099220" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d683c25946ab104fbfbf4429e1abdc2506084018" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76907732e39f47e684f0930c88a33d20a739b555" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c7d8d3cf0d74dc9e5fb16508bd5d3294c53d5fa" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e3bf5990b26bf1b51b9b82ee0b3f7cb8b87c053" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cebbe460881d587d92c427a1bad377fde99338" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a06e247372a5b50fe68d6fa26fd676efd0b572" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3ae0c1a10905553d760975ec3bea9e53cd2a87b" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="841e98adad5f09496ad4c7cccc7c93f0364b33b1" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef62003c4fe3264d0130eae61289b6bf39acdfc9" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c0d3f3c477cdb83c4a0fd9aa458ddd0fff223c5" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3e7cf351eb6346d03dd923ec29708a4468027b6c" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae3070ed06c11d8cab431ae4f4d1fad5b8660599" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2cfee2cb77c22dc8c849b225fe89397910bb38e" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f3e8b0e3c060ba8d6beb674f90075d2a1de56fa" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6bc434bde2f03be77a9eae74e9ddb435e3d695e" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea2677d8219cfa4f82041d75e6d413dbf58a8b1b" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af6d85e4f8e2901ef164da080845fb89ec5d5f09" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fb4790133d87932f993a402abe976d049387616" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ae42fb128b229b23024b9b80177bbd3700d7a6b" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af67e3b47e31bffcc468207d61a3ef1bc58182c" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a273abec55af05823a0f47c9a5b5283597db264b" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd2d295524ed844bbbc51c76efa0d2408b64e6c" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21fa85415e8cae793c9f08d07efe3811da9117b8" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="562d398efd828cf844f5eae17e26f58432b7a12e" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4378728d673758a387159307d29a79950508cf7c" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="faf7dd552b0d32953d00fe572629d36f7909bc51" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1de7b0d80937a29c7d11b754859c300a62c082c" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="060105ccf57cb29825aaed72aec26f74abe8cf23" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="294c48a06e249da0877edd0991b8a4071cc1f771" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c0aff059cd719c9425af4689aa7a421f2d4aaf3" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="21a9f99a313bab0fe54c1103efb7733040f7fa22" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e012634c4c830cc6a059a9ac365061f54426800c" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96fd70e4f5ce16d36fcfc36fb5338a14b7f0ab81" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="651eefa461a00577eff5a0d25d096292ecf178ec" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="666b1dfeabaabf97d97e35bf8f44f96eb9550fc4" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="620c58508e7d34a87913ba3228d56caabf638209" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31b53b53a19b95b458c5bd53b43c244e4a3f25a8" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="174f2ffb34bf8f4eef5a49cd3f41ec1d252ea092" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6617fd4073c3c1bdc8c3d098159e20f629041c1f" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dfce9d1673b400483b958f5e2bbafa864fb0edb" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4c763b7944c01105d07487b91eb1efe4283402" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa87ffc364ed5f22fd60afe6fc12e39c1e388324" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd8945d219163bcf27fe0fa85509a1fe84ed52ec" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb566f380132096b1640f1f67063a9eab89cfacd" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68785d4ae457d627701539d2f3d17790f63a1a35" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0e1d1fb23927a542fbebc2a45abc389eeb5c9fa" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca67e6d38259222492e0cbacd16f496f4e19301b" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73208c3fcf9fd1357a5e70801e15dc6734a3f2cd" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5c4cba9cc342da14880b573cb5fbbaf82791ad7" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ca20ab3fd14c05d8eb156abac497984ed263096" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51711906a8d67d91cfe2ba70879d6a5b1225eb2f" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73de3aade7842ac219cbdb5a29e8f6137d69fe6a" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35a6bfe89a75c03438a21ec7b90e181c023afdf4" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8dafd58e8c5ddcfca47e47dff2ed6fee8e11fd0b" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc4e6328fcc8a5fe27d0f1aced0d9672e98ba3c4" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8cc02da2358721c0d0ce35c36d1844bb60bdd64" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f110a83b1045e0d44c2ae356ffbd05599f7455c" translate="yes" xml:space="preserve">
          <source>def runWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;action&quot;&gt;action: (&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.PartialFunction.runWith.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33eddca3789a854b52f8b8733c22714da7a90d15" translate="yes" xml:space="preserve">
          <source>def runtime: &lt;span name=&quot;java.lang.Runtime&quot;&gt;Runtime&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1c233903fff9fb9ae0affd5872a9be110b661e" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8d4f44a21618e5c403135f2f7c8636f7cd1b32a" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c59e42c0170369e9982d4d21fa57065143889510" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cfabb5ddb479b92c5afa7498b177d9215dd2f2c" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6439d26c683ad31e37f4f1549880e207a2be35e" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39a4f8117b3edcf30e04c2a018ca607e5b9a4c72" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.WrappedString.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401a6e491c427ca58d5fba756fb312331ba45ba4" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4a146e6ea45f251673578c9f6e8959bf7f89b15" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e180807699d5ca7f2859de023180b4331959d26c" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a67e74ac72c56797b788b79ef266a94e2b24f01c" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afd0bcc80b7560992c6fc9c7128a7f1a7c9a196" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5584115b11e4fbfc4b62007e0596109ec7ed80e9" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3949f5a649044fe2db567c5cc3f227831933f4e" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;scala.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a9613ac966596c7ca148c9c9ec6a54b3c63011e" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f53f0166b0715e95f257b92155c31dd381409e1" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1c458e1872803eeed0d3d4d40101d83d48cba3a" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bad1cb84a05f3fc9a5327faa84c70e3cb5a7e48f" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeb6762ae0700531c60ef70ce2e63f78fe6dab98" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d31f5de432040fb8d2178c46d0fdd4a705fcae52" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ef727365606a833ef2c3fe3efa88a8552701fc9" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1de2dc350f3cdb71731c0724ab42b6d827daa38" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51f19963f0844775de0bd32067814b32fe9b8322" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7501af057a38affe64021dd41f104622da5c9c4f" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2fcf9ed866a3680f28b15bfd9e2293e13aa79c5" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c56a0aa0b3db4607bce6aaf3e96b6af53109bdf" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d2a0087db2f630688eb253a955ef2cdd08bcee0" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bed0494aa1ad0c7aee819a0ceed605a3853389ad" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="557f699d691d210efe451d2a7c385f94d139e80d" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0fb9ed246214fb0f3fb059eccab647e6d706773" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58167e4f00462a749914dcc54731a44950042b57" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="536734e4002d2ae0d8884d0beea216782fc18f12" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="facf5b240cd57b21a32a292eed898337be130bc3" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def2a922450ab43285cb38f85e3d69687467ac9e" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dcee936d4c34ecb9cc74b156016a2b590f0a718" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de71ae80376ef737c953e8ebca970f3afd1f5af0" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="668efcc5df97a5385b2009ac22892e13d32eca86" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4312eb31a80983c97f4208c2aecd1f128c002a2c" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f150d81563d1f02f8b3c8d0345b23c5d75bd6e7e" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eda1640ad6c317afa13297d2e5547ca66573a76a" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d5a5ea52cb3dffd33699d982d0ae241e11e0e5e" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbd4a01111a857efa8700d230b9f53c88c0350b0" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d9aa4609316a4650af6ab8e085cd4653c631931" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b0026a036fa9351f6d5c0b33c8c556e2b444045" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4176a20d7d36ac757600639398301429d2bf06" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9afaf283b063975d7e964db4868bf0f028aabf0" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56abe8730986fd6abde72c20593c277bc55e0145" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38a1812c6148a35d6d6309fe6ca0ce2d133861ea" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f47c3bd1d36b8679274da8d6090abe85084deb4" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64b8f867e16d1b2e8b78f15510dad621623deb3a" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8f2f4cfd6f186243b9b33b2b86af0f00e7fcd84" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5688bcfadcd7ad691ffa4f18abdb308637dd95f9" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26e0b2369c6695f21b6abdedde5b5ec3773e36cd" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed5e425b4b0bd2f22c29aca46d1e950876cc24e6" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5874bb43a34802d50c713d15506ad248a6ec64b9" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7be794b4eb97d60c8701eeba3ed7b6eb6120bcf9" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7d3fae98ebe4f4b67d0c816ee1c166cb6a1324" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d2b4ce13fa970f8d5e8c361c12a2845265ac76" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c06964e4b135883a41b86600e2063c95aef6a5" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="497cf0e3ff95683c21516d05201bd1b2da8879b6" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="959fb1352ab4ef88926e148fabc3bd5f2388c105" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5cefaca1b1d621d40381a47dbd870cdd05885088" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a15772f646c2ff7e4093f4d31ad07f2b6bc9a787" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83d01843b1d137d1a8ec0c24e2a9eaf6506e84a4" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e12e82e881b8b73e5925f3693e0e02d7ffb8ed2" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4106c6676a9cb360862ae28a9367da2bd37eb405" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="595cdc9e9e4a3aacb9966bd8643cc6f63c025158" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a93db8a9c919e48a38f0692add2ac2c97ec2abf" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70c0cb36036946f3dd8c1da8b9672081a1edeb03" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18f4807058725452a0ad1b38a23cff9e5387bbb6" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc0fedd0e7fa9d8901e0c9ee055d4fd2ec66528" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0de074a222d9269e3d3bad7881c1f40d82ebd08" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9d2ca2ee4244002264ddd0988aa1e4b7e6663a6" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a182179fe59f8e127d9fc067c1252168d44828b" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3e31399dea6b88c8839d602384ead021b51ded1" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9adc3459431fb3595c0a7be7c6fdbecbc9f68bf7" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c18c202684cd55efd4f7e8c0e0bbc999e23fe8" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10019c2aa48774c510432a68a079e101c75baff4" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069d15570c1565105014f9c03627543f63fee401" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab602c9cb232e64a4ab8cb7595290b6c01db0889" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98ac66185116df8cea4f1866736b4ed8b7a70409" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a538d1330b4fbf6bcbe4e85aaed33f1ae41b0bda" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e67bd5e84cbfc70d1211a14543df38e950b85bf" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9916f9162e9426915b96db668688944dfb0ad06" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="222dc6d856a2e71d7e451d6aa3239f3a7cea617b" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c1df7193404851d44b0680d25b0e4f2438aee18" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78c3a11d0314cdf83f853b36f26cd4550fde4531" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.LinearSeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6847c4dc7f49f9555685b7117a3312ae4b317183" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9410cb847ff869dd8ec6bf8da235204e99db4f48" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;o&quot;&gt;o: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae9850b52f54cb16afb5e755838ca1513eac0ba1" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5be2657208ec48fbda485e8fbc0ae0fbd624e09" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="715c86b21838c6fff9e2341f3454bb7b834faf9c" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2290755a8e2059d4e35b5c82984ae87969396385" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9d2377dec45782e1d321a8167642ef7f3255ea7" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2ba692ba300e9c03246f2849ac3aca0d10d34d6" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58d2d0a80c62d5992838cda2e2ac5a1334cac3e8" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f45050c6c5c6216319af04fe4770785697d4a545" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="395146a479a66c88b085f8ad4f8756a038364659" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7815fadb7e929fd8c437ae41bb0548e1e25a942f" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71a9942d59ecc49f1ec9635d338a560a548104f2" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d71f2ce9ce10f1bc66741b4a709998a4d75cb1" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcf940b6d40528876209e56c845bb6851e64fecb" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3d73f0b1410e56510cf45b9c174861fb3b80d4b" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="009ddae0bd814b9efea7b8fbec167f2265f31de5" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ef69b0320c0d46dbb7564a593126cc8cf5900f1" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9cfc5cce186f5b3a455e182a7e3b00c16983102" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ee20b29e2f063240af98b957202eff1c321733" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eec0678109eca276687b605ba789fd9cd9068ee4" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="817b5c34ab65e0a516222a330c6b3738c8e1f510" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c01a907e80aa2899d1dd95bb0663a530a1a77eb1" translate="yes" xml:space="preserve">
          <source>def sameElements[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.sameElements.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc8053603356f3d6f20e988ae377f89e3f3dd66b" translate="yes" xml:space="preserve">
          <source>def scalaCmd: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7242386f6c5844fd7a33ad7ded96ff07aa43a75" translate="yes" xml:space="preserve">
          <source>def scalaHome: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1454f30168d2978960377e88d2d2523cb1757e81" translate="yes" xml:space="preserve">
          <source>def scalaPropOrElse(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;alt&quot;&gt;alt: =&amp;gt; &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8928b020fa993157339bf1ca0b4261fd8d49a841" translate="yes" xml:space="preserve">
          <source>def scalaPropOrEmpty(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a014d65c39ba960e8c49348bf69581dc098276ca" translate="yes" xml:space="preserve">
          <source>def scalaPropOrNone(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69e57d8ac7ad736c4a5e6013ec18b6c9a4b03612" translate="yes" xml:space="preserve">
          <source>def scalacCmd: &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b228c21300707946b235784c54e37d083e175df3" translate="yes" xml:space="preserve">
          <source>def scalb(&lt;span name=&quot;d&quot;&gt;d: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;scaleFactor&quot;&gt;scaleFactor: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ffd6e481d166fbd86da3078d4c688debdd044adf" translate="yes" xml:space="preserve">
          <source>def scalb(&lt;span name=&quot;f&quot;&gt;f: &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;scaleFactor&quot;&gt;scaleFactor: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9244de708665ef227c7625fcf9585f09dc4c7ec2" translate="yes" xml:space="preserve">
          <source>def scale: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad205f91abcbb92e41b1af464830cc76a798715a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a005477a951900cc9a8ea0e066814024f92a81dc" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb2b314bcbbd6aaf173513f232ed70985821146d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7effb953aad6e827c6d76356206bd7c1283edb93" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c43ee83a7690e09158cf42e46d0befc9cd2f0206" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3373f60a299b5bb9f9a2d6e88763679f441025a7" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51c9fccc40b5982f1e898f8ca6de87a812ce5441" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="122d0ed5903ada749d39033ee63131fea7c7fa45" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2d2710e2fcfe6b5544d264c8d119b625c1600f0" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d3b45facb658224f80878f57e068f78935c1dad" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="618922eeecdc85bde3356c3857973605c0d020c9" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5bee802853f810c966a419f121107386e32a5f" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aee0c8868ac7be9778a793209e1623a356b61c59" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fce0aa20007081cbf05206907d99f3ed512aeb" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad0f3b58fb9ddd21e92444a40dde2a8d97fa51e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32fba5c3aabfed3a39904a31f257ae0a674e45ba" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c11f2e2f5029c416ef61f507b531d182dac7082" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="830accaf8ece71a1019f224ed87b36c19fecbaa4" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba002aa6e9ede66b3deadf4bc55b045225bc2f92" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a81c16778f3e518b105e844a851cc410a123d22" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7648e852e56793520504c3bc7db579f7e8ef1cb" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca1e6be33d8e6cb3b864d5266a2e89f467e2588b" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e710afc8eb030449a02ea1ae66e8a38e76ce3943" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="853c620c49d1cbb66ecd992603cd8d66cda460b8" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="636a720328cc4943c8bbd7b163e807038c591f1a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb13b72c13721b3ea00273aba63856a4acd919d0" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34fbb721a93942a8ebc3f65fbacced7ce9c431d3" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="084d496c96f42215a705daf8ae872cb6beb40a2f" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f783854f39cde2230bc1c963f2019629c708681b" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fe7a8543ec6d69374a4a7342e006e695ca3ce28" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5963b77fa4e6be26a0535295b715644e1dd82360" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa58a679d6a9ba0e7a0de07b2e6ef8f736883734" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb21f0c9508ee2a90fb608176c6e069e97bfd9b5" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0fa6ddabb62f3557b04eb1d8612ea60f46d5f342" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e9f9095524c1a144217f102790e3785c09102d0" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea01ab1cc9bab46d91628221914f099425f7d6b2" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17370ca5cba656870bae77c0bf34f0e014bd0352" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1dfd1a1cbabb0477cca0db8916bbfcf8da3ecc6" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c16249c235565a736a608bc934afe76c84c1951" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1274ad7d1619c23029d90bd20d29d0b362ead031" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;])) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c46041177fbfcc737ed61174da0359e08929274" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1d8b81cfda91adfe66993a344bedc013a578530" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4cad6b06028838bdccb7d426830d4a5125709dd" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78dba59b12d060f6ea8fe68d35ef218005932df9" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="149fe0200bdae7236d5b33bff4f971565ca1feef" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7e819240d742fc5e8c7d7d9ae06490e00676c7a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc5bffdb206365103a9915af5fee891f0a99bc05" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef7b5807db734a9ce338a0a2cf737a8cebc80372" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd13593e77f051b7f23b07f5ac521ddb4b086f61" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83fa00b7b7bd066087a5bb6908c2773c5c79d03a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b426a5f34661ac53a2dbabb0ea83f52c3ddb3620" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1334f6a8c3762fe8329221e67594ea94722b8943" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66d11a7fd9863bba92e94c5fb6d90c2e04124485" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32a71a55d8f8afe765d05ac90d9f36a2d674994a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1281504d3e4055aeedcccdc2bfd02e4b11315c8" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2b4a7bb4941ec60863d56b7312752b3d2b48931" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b84fea9d575da48bacdf9002867067f8993ef2e9" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5778a0685cbd559385e52d5d8c88e4e5b31e8b84" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f4deb32fc6c741392d93ad39f586f59973c0c88" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec62e97af47d08e1742e6e2dc0237bbbf303173" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0630529d267688f39b69305a1960fd077bd2031b" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e58518ceba2d7faf2b21f18080c8cbd286e83f12" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="071677c83b1b055962a905af4f5eae30ccb5209e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.EvidenceIterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64d965b130ffda0c59f5836346e9be8682f49cda" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93ff28832b92928bd170f29cc6a68f111f08f3a0" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19781dc25e0f86268c94b5fd638a6711f9d96505" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a999086d261776da0fc389dcdadbe5f564803ffc" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7061d5cf0059cb52d1b5020284e620b88579979" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17edf437183c104495354e6516cb3403fbc7bb80" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67ea273c36515765bb1f40cf7511a5bf6bd554ef" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3dc8a2ab4a48c85d88a58ba5002e128c0e135eb8" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e7925dce8cc55b6e2605547d8299d0bd1de2407" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e858090a59cac909574c7663acca95584b3e38a7" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d0fc20848783a980e95c5d9c921b10e669222aa" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aae6060d17f80fec4701950e694a202a4e92b861" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d6fb1a91f9593b9d334ef814a8a7d14ea9ec14" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d661d6b5d3544bd75896c83cda0e2a9d3818c6f3" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b5ff6c2bf224481ee9ccab5ef78aed611840c10" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9df6cd83897dfade1189102e8db3fe050d02ef83" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d365d9d4c5eb125290382306eab792652a4bf03b" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.IterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="305c442fe5625ca8fb866d0a6229d9ae719badbb" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df643a203ddcd7e716d7da6ab30dd43d48b12fb" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f1d0287104e55a0ba82bf096ea1697c2d350fd1" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cc71e687f5bbb6eb8298688a47502e04cb7843b" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c5d7fb821e50cefbe5f1fc37dd4a7bf2372a76" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b52775ba25ba439928b3fc77593b540766cb907" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97692f5c50cd830a1fc853457d57645d117243bc" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af42e76ce0adf1f924c916f97b3291537d9a04aa" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e86d6ec648c644ec5a521d5d055c20e38623c77" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50dc7d72e3411089a86c87b4b0cb751aa1717169" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2a911ac647d81603b6b74a0b0212fe1d0eedfee" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5645ece1806cf84ca8352b3bf7925851518af989" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4d1b02df964f1daa7a460167c23f954ad6dd065" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28a5e45b322f32c33c071b1fc0a20a83220dc2cb" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f92d4a007469081ad72ad6d10ff87f33649552a6" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee7e00ddc9b3869ce6f7e8a3d2addf8b6c5e00cd" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b68e4943e0c0a2aad6740544bac5475e56275a65" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52d8421fb5add71ccf305b964801c9368a61af18" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df876b76f12e8f559f73e3efe7ed931327ae3add" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac86de38ae80ea7ad41415bf61770c6a3162b66a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25fa64f82b30828330f6d904a2d0fd75e2e29eba" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9becbf7198ddc50608735fc790c56c6a92425a09" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e51bcc01459a617432c8cfac9696f440e22d3f44" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="085e0622d02b62340ac8d7e222e1ab15632b467e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589df9cbc34784167b010bfe14671e760f060abb" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd28b3314bf2673d69f33d5ea91e8ac698176ded" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40df08283ec0b5a2e4e53d3f09013efd78956525" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921636b48e3e8a5c36406e1e14971b28d642a739" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8f95cdb2f8a02700283006745fb12da5300e0f" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60266c8b37ce03e7229dc8f2fac491720331bf1f" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dd7e8f0bb53be2a6d9ab4a817104a783b7efb45" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf54dc61d6d8e1ea78d4e5523056beaf2ca8d16" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c6abf186bd71d7a47aaa6f4015af212117bbb9e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="afd77126e43679e09e500e77485b4fb361123b46" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7e2734541f03e069f7400ce7cd817536ee445a3" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9794ad5d10862c4b85a5fbca39bea78ed42cbd7" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57ffeb5d3a26d7f34da4f8a78d582bc4fd2b77ba" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c74760de85435afb6ad21a1167d6ffb13f37052" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="998a8b8cd35ec04a86be948b71dd74da9d154eb9" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a799cae78059e8a905902ac88b21ab9dc38c90ba" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="376e8498f9de93f17d531f290100d235e8ca931f" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c4e37d710be703bec3c7ebf055e80258b405f5" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25c1b101daa1600609cd3500a776a7eba61ef43e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e530476e77629e5d8275b863aaef1885c1f8fb8" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ae45ff163d914af349d85b49c3c7e707162e239" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e482100ce9e7d8c0869403992b0f61c10c3ddf80" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4862994960a2d358a3e4c09dacb88198c10af726" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7afb945f5bbebd0fdb2da5ee5599b14b25137aa2" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="129859d24a84d724f4926a7a4937a98fad142e73" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5c006ee769c258b63f8e951b41515dd376d1d0" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6040f6eee40fd74cbe733ac27b08f95c031285cb" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66c90bcad6ff449f99324d18426c40d041ad33d9" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9155adeded6b973ea9c37bc30f150d1acc00c178" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5b645ccaadf7670288a6468458930c1423f0aba" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5af72424f189841773e079ad0ffeff90da13dc05" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b56f28905a47e6ecd8c56c960befccb621e66ea8" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f52c97bd7ecc49ec105ec3461f274e9f56b68af5" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb659e648a1b49817831a1563c69798aa75b91c6" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e179a21df64baa277590bcfe829989517314d4c5" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b0e056506b49072c6ad3cf40926588ab218217" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea217a04a666af39695005910742f20d66ede5c" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e53bae3fecaf1a448d3390046fd6b7c43e91c83" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19288026aaaac00613127aeeaa84dbdec3fec299" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d032840fc82c6ee5a2327552b471e78fc70e4335" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="125de5f255b8c8b307514fd009347d6b0dbf6303" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="843ff552761c2f5e1c510bc538c61233be38202d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01af759aab400b85528d44813531aaebbadcfcbf" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ffe641f96c2edde4e46d91b0a3251f304b30a3b" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91f4da618fbfb258eb81ce6f78dfb97e590cc03e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7dcea400981988c7bd1e708fceba915574f3154b" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8347023a485f10d3c9072a5752a045f64bb227be" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b948da55d699b5fabcb92d44b9323f8eb6dfa849" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cae517e238baa495b101771942d9ecbbd4ec3dfd" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a44fe24119cdb77527b7eaee3778ca8e4af65e2" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aebac841d77b7a0416b62355adb20f489a69da2" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;collection.Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d01ea96f4b00be3a7b79709382079da09d764c8" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5541e5caed19e4210c6e0c495d93efb2b5e67bd" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44e02a43a42dba2e8c6aaa9d270110b753e1061b" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6780a769e931c4db2c27c4e4cf857eee7e468eed" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="707a007140aea478ecafdc827d0d71c815ecac31" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e6e24ec0eafdef72deaf821e7fbbe99ea51a24d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ccdeb41088efa965ff064e89ca18842e8fb08258" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a10f89dba8a047df9d2ab698bc475d6b609a57" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd45dd35f0593ae5c2b70acc604448e72afe9fa8" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d54fdeacf014376b03c801a3d63d331833d579d9" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="040810405b37b470611026d5a7b6a3e68e3eda6a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b681050ba1862352faad09a7e276a0fab3f3e68" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96da55149a65ba70d13b62729be8bef51bb2cb82" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="169050705ffae8ec85b6517c18ed771499f6cd44" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ae2a840cb1374bcc7d0a86278a1941bfa2b3746c" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7062507c23dc138b5aea16be202cf2ab709c15c4" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63f969e2b067c9d8880276f9c40a50e0acf2c793" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="400c734d661c479b718af234f4e6d88de549c3cd" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b068821d3d27c928580ead8c94e2c98c2f49b20d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3343683da67e508d916fb0e621d38bb1fbbaa29c" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3d79998e9ad97f91e37b78b4b590319fd6d8d21" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df27c65531e4bbc17879869cc68b11f4928cc5ac" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8d08bbfb929eac8002b1262db265c31b75f1ab" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39b086b258893e965632f26f63db3a4f539cabbb" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="972d353721467ec8ad3830e756fbd4f5afb9e341" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="876ee172e1daa3dca97b80ce7a9c4713b78d217a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6772ca8a2ecbb0e78a6b5e311dfc16fbfaf7409" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295fd38ecbb8a6417f733514db1bca1925bc5312" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67603280695840d4a979a93d530955a611bdac0d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a3a5f0fb1dcdaaebcb6680ef8990cc89dda03b7" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3d3dbf8608061cfefbbb9189fc05953b28fc954" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c114ce43d57f8200c6ec71c4c1a3ed5a5937eb1a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79f8f57d39a246fabbaf70631b3c78e20fbc7bd6" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="780c86088ec122b1b7f553f1b165d807e41e115c" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41ae23f586490f669e02b550d6f41f037cf3791c" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76d812047a766b3d6e3d9a35184a66ffb675c7e9" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2968cfe6152242cc4175ad63a22b6eecf5272827" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2934733f75d2910476e3a925ff1cdcca7b51166" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1660975f20ef726c97832e86b11801766a585aa6" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, (&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a012306eeb9042971fb1e7d5e6a389187b2a66e9" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0670ccb614ae589fa38c33fcb43b189fb1538f3a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749bf87060f70bd972924402a59bc7e0b8293cf6" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="def12c932dfe1ccda5e2d5dd80a8ec86e13b83fe" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1db33538076b49bd80a80b340e15dac78a3fcfbe" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92d5c6d9597e75ac1ad2ebf93eaee0203159ee57" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d13a54ebc4b366dc98af4c713539e7a700aa19a" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="507e21b749a9aced52df20fbe4331207db2352dd" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00bcb850c0a673501c7e4f3b597bc682c467e8ec" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1897a42db5d5267c72e2820c854f7a3752b42902" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="156c32649d3af31ce901415b9a670340360d1ec2" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0091b41e9df25d396c59ef567ad6d7cec0821d2" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6194910d04a60fc1a0b410eaed722353942b97a1" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="518450c42db5047cdb894037385acd0f752829ee" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6193d316d25bea9c7262d163b2e65e3496b24ab8" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87159f6e9aa73e8be587f11a10036e2530582d6b" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1027fae35642497a4794293f57caa81f43ad1572" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1af0d711c1d050007d67856551cdea497909513" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4aedda76c19c158c2518b79c97c16a81e57a0369" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbf1cc0ca3c3373d895a2da8541bd25aa9e0517d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3292e0137ed21524a0f0cd2ae881c9dbcd03f5d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f8b90a1d2273299ce6fc3e5b88ebf962e56f450" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d01c158ce5c6bb238c24ce6295687dc3bc9b366" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e79874af6ccaa333f940d76f4353f9399361305" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a5a63bfa4779e7afd50ba1fc8a73f77bb283e24" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed967f2cd017171d992d396a4ef24a847acd5f01" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33fbbfcd90cc579f052ab36ebda8b2005500be2e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80b0cbd68b57fee6db58b0c8963fed7e82a1b17d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22cbd07d0e6e4dbf18d09b0e83aada4bf8f4ad1f" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d18713bce599c78bb0e0dd12374763c603d3c2c" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8379e941d838e3beff912e8aae6a8f7fa6d9bc78" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ecd8fcf5578c6ad971786399ca050be9469855" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c5159ef89139fa1ef3b024275370d4d72756b47" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d767aac5ea47252b5afaaf5634544d1cf91ce3f" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7244ad327608ca7d1aa9be6b926765a0ecdf3859" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b598036bb0db29f186d54a445c4c5917601e6b2" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0cd9678c8f7193e3f9ff36cd76cfabf7416b45d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd53e726d32f1211e8d70d1b3940f047730f4b00" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ac3edd59f25fde469cb648540b4d27c80feba97" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c95310bb92c9fb387bc78808cf60e8aa50fc20e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65d197ab532e2b167e01f50ce2a16fd568f4e0f0" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d3318d7ec11607f5d606c027961aab32887c2ca" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25f685380d7a3910a830fc4b57befc99186470f4" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1862b53d98e98fb64ce185888460f9a5564863e3" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d86d161bbe77c1415be46718018e70a7df5bd31" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05975ac461a54e27064c2d0cffe3074b8697754d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff43d3fb03f700d126da6b8b14db7087015e386d" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2cd7ad8fb9ef7167fb680464cee6dd5cb1752db4" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b8bb30fed400459e3fba0811e9bb6f5da8a0e8e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab824b038786559f46a394b52e955a1a056b4882" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290d636b3aa4121fec4cab72652c4e98aafa71aa" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd134f2ce2b34f301ab26ea5dff43751f61d4891" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cbaf10ac21bb11ec5b0ebbc754bf7c6cfd7f245" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9836a8a32b8984cdd60d41d7d05597a848fbff0" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dca381f520b2a7f0fb634e11093dc2cb280f328" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce68d2e5b91dee13e26bb821798335289d398ec" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9d9088e793fe4d5cb21cf74e6a063636aaf253c" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef4ddf2278b78bf669153aa79dc8e57e64e014b2" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3faa2fe607b0533e5df96948b8d955186b4f581e" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2aa80238117169aa50e575277f77c20ab782c677" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea598d038f890af0a565d3191dac99260a216707" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.LazyList.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.LazyList.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LazyList.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca3508032568fa44da59dcc1459890553916230" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f9d906b494c697a3075b99ff61d7e34ad89bec3" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="508145b195c15e2ca3b2b3591ec332f8986ec11c" translate="yes" xml:space="preserve">
          <source>def scanLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.scanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1f4f411d1c5a05365c46cca69d24cbc14799e052" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1da0c3bc088316e65836cd4e1d6ee529f7d39215" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="219a29c3c96cf9ba59c98f7f30febd9b3c412961" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfee4071ec4eca85b20f15b7a576027edaacf2a3" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;, &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;collection.mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="921d2e8bd287af92b6734fcfe0ac28be026bb248" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fc3d6a90ddb37359be6b7da8ccf65f851f6a5c2" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35b5275f68985c6cd8d43864c498092f17d9f00e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.DefaultMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.DefaultMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="591b7e03a936550ca3ba917d05168e0e4dfff8b7" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.LazyZip2.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip2.El2&quot;&gt;El2&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f4a6749a265bfd39c22edcedfc18b05a95c6822" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.LazyZip3.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip3.El3&quot;&gt;El3&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="438b38f4b076989c5c8af82b0fc5bc315fded04e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.LazyZip4.El1&quot;&gt;El1&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El2&quot;&gt;El2&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El3&quot;&gt;El3&lt;/span&gt;, &lt;span name=&quot;scala.collection.LazyZip4.El4&quot;&gt;El4&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf93dbc6c1324edb9018b88bee0c87f23025b742" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a76f359936263bd6606501ec73883fa726d059" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1abdd730ad3d7e011e4bf359d4b0603004d97f4e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6fdc9ff1287543467b1be54001109651bb783fb" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.Filter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Filter.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed9a380bef780baf0fe3ba8210c8083f32e3cdcb" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.FilterKeys.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.FilterKeys.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f504ccf334a4738547fab3a2281603ba6633bb0d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.Id.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.Id.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878f8f6fa2229c7519b8c949d63dd8a7d01d453a" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac5c791743b76d3c65321682b8286f859e500df0" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.MapValues.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.MapValues.W&quot;&gt;W&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e2ba8ed102a1ae109d797e1dbd1451d48affb45d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.MapView.TapEach.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapView.TapEach.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="403f7a1f4be26cc790ecc46e66903186db2abeb6" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d365604c1f7a79257ad7c8069f5d5005c0d95e5" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8908f9f86803b575a320acd1a71b77c6036ea89" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd66ae99ef588b641c1c2c1b5cf18c193df3e663" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b95ed7d12b24c3069a6e4d71a1b33504437dc18" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a32d4b4fb482152cebf1a7a6fdf919a218c541c" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f674eac06878fcbd9ba950288c9f25349df00932" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="984defaf36ca3079747befa56519419659a43ffd" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a48f86713b4bbdcaffb15a06b20c8db95161841d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;, &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3df65ac3f68203ab28920ffb8883ff5aed76de5b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e7ebc9750e8c937010e9b62f077b95c2ce325e7" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;mutable.Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d16e5883a1c7a2984f5400943c7eac3580556b8" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="417aa3d2517972fbb0b6c0dfce64f7dc0985514b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="549172e40417d7bebdbedc02ba4ec2a1b27b0647" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87299f40c1c097f99936ef1490e1d1253374ccae" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d998952d11df66417219d0a2384a692389b2cf3" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542cbab717ce77dc853f849c869beab21a4997c7" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5ad8e5983f81c0eafcd87cc9784d33b15869819" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9face709b227303859a2cf07ade3282e002857c" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e75380827e2356349ff3a85f5a3d1ef4363dc720" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8096eed911083ea7df6bb55066d9f910fff88011" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e9398ce42115ee63a277b00c5745c2e56a156df" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ea2c0cbd567e76f9199ed53b5479a905a551681" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c6e9fefa20d2cd0f7d5bf2b471ac8d7277c11eb" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d42a67e8af5f56285adf152c9988cba7aceebd1" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1756be3c595ca9b3a1ae092aca8079f6f22a3fbb" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5cdcac09802cb7632ac26189c1d4cd6d26f6b05" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0314f4abb78d4acd179e14d10705915155d0e310" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e796bd411e5df42264c3abc807da1be84c0fea63" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8a0940b188f6565f0d888e14e4b1678a53bafdb" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d57b874d81ac9237a2e552d6ac91200ce7ccad1" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea148acfb124d07b1e282e03f02914b34dd2b7b" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1a8236dfdccaba1a822e6edd1fbc5c96d574ceb" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="17045fb6a2f584f752b467ac9834369bfbe42ef4" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b1cd9440dfef6af9a579b5ce7a29ba9ce05019" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="667de08d83e3a541e2874b25c217083614da6f7e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b52e1c0a9a421f7753238d8e2d4ecf58bb82586" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="472e69df0783f6e67094a634b6336a7572975f19" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf08ef93102333c7b965c2afa70f48d826988ee" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3acf0049406418b0e9a2cc3c822be0bf228cd2c" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23619b4db0a875833c258021f92ab45c392a2244" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38692bccf0383ed94def9cf25bc57d8c92128448" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbd07cc94b3591447be48068643f9e1a91c91ce" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b8ec7624984a7c52944b9864b1ea10d9e6a2c2e" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7d0cf3b79e56f02cae347005dc17f302d879c0" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc54bff1a1da94a230439e757ec9151b76d73256" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323e01838494d1f203df3fe22ab0a198f43d5368" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9faed31ace9144c535047d1268cefde71cc89da1" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="938d245c7441ff02f6378a10c9f4afb40d75577d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: ((&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;), &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b5775c5b966b9211987c0c40e064e266b38628f0" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dff9cf37215fee12418c0be69574e9055844f29" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edf27c93d0c89e01fd4ee1c7b8e86722a20f9c51" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac222a828c60773afdd8acda2058e28fa58990d" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dcbc10c364d7ba3473fa00acf5fe3409dfdac18" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b597f2105f2dd0d28d0c146dfe0c84668fa7e6f" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3637ab4579dc25eb7c5763a1ba54292021706503" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f21a44ab23d70c1ad8b6dbcbbbbecb74bf372b09" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa9a0f9c6a4032cf7c1dfd1e6418a247d99c6739" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac4f718d63de62f5777ec9a3875cbfc997d359cb" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86e2c4ebd65dd9b0b037211eacd25ca72e0e1a31" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abdf90d28638c5f5767ae1f4fcded8d835ed01f4" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e0e6b39c168ee6870eb4e16a03ce276358fa81e7" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e15983fd4cdadeb5951b4c937b705d01d8fcdcf" translate="yes" xml:space="preserve">
          <source>def scanRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;, &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.IterableOps.scanRight.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
