<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="e399116c0a3f512954bff6989e79bbd21f4cf981" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="18f1f91466969382154198edccc6d6ae7fb5deaf" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af1670ab9b5ef7130e2ebe26884bfebc6f7834e9" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c995083ede737de2da3406550098549f9053f519" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f7cebd7558f89007fb2ddc4660b4daaef8511a48" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cac8aae7996b4220b87cd7f4f09818151f0f1324" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07a9dfd601513ab054d306817d08ff4811036fe4" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="207072248e36791dcab7f2549e5eabb62b149be5" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="db44522cebca3c43f8553b0eba57a5308ab5599a" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f52ed999e86f3143799372bb11ea8f6070a2df46" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="71bfeb40385dbf52cc7c705e7942834f4fb3fe5f" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9b5f6ebd21581f66446566af2fb67ac96e7e2786" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="116d4ddb5206d07acc7030a04d5c5d0decad4d33" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2cfbc05cd6c65cd7082e29fad37c909b5f720b98" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="caeaeb42651a23bfd194b640e5186f711668c1af" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f5f4fe8a541ba5ee9d4711957e6109703a392a6e" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="732eea68a84b29682b062a3841ec1996f9f1f144" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="895d754046ee44029b6494fcb5eab35002e1b50e" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c2f7032e81246a398f07c5c79424bcbee8e3378e" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d2093ab86bd7dfc56b0bf940de9b9a22c1666972" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="89756dc7589055b13bb24b7694b0d755a0184b48" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bef172fd1c00f72a65915aa30d90f456eaea0767" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f45eb42774217ccff3f84186922601fb6419da0b" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c5be40b436cb923e463d364903a3cf8aa6ae6c1d" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="60eca6004d212a7fdeb3e16be06e04bf3ae55b44" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3cf81cca753299204317477cbed28d2d13fb5688" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="affd0fe449a1a1577976100a6cb0c713f7ef8afd" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e50c2128f834a5fd3a3bd7a2b4cdf7d3b3660f2a" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4c95528b59a9ee79ae0f133756ba8359f23bcea0" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4bacec1fbba6f0c4ba2c426a287e72bbabc12f3c" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0910439a311b943d89967e111716bbddbdbd68a2" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9d1bdf07702fa6e87bd896cbf924a2c2e271542" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4600607957dbccc1fe99a4cbb7acbf56413ea87" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="33af5bc38f96230d2a67cfe02f7a2b2b5576807e" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d2e19b22e06d57d641129ca853602f0231b6f01" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="db20da600ab27bcde6fcaa7ccff95db4036b2216" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e903b24a4bdedac0e829bb3a8bb773c22a30e8b3" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="16ae4aa0ae7a8d18606af50848ebd570f3abe6f1" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d611f95f41cf23bb3ea6897a8fb45144995b9b0" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1808e59b6ab6dedb001177365a30b26be9d07d3b" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="031282b36847e7bdb17606f464c01ddd11c68a1f" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="68e7d18681f863fafff62f5cd0d7fb74edb30f1e" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6244daef9b5f5d96fa30db7872ed8ea05a6d2b2b" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fb472a1a31c255c082071c56334d85dd1b5c63f3" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d3225d9136d9ff28f9d0e765c321fe657ed38a1a" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e8e08e517c3b02080c1914541fa063ec8fc117a2" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="65944a028cde6461306afaf14e8c07d034a660de" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fbac12c2fbb34180a1891a9623dee21041f9e368" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fa8cdee915f884e45d341bccc60ae4c03f293209" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0951a72d775fa2cde7f8152f635859fb67341f77" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5745f277b80551c66c03debb875c5e437d49cc87" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8bf88f1848fa2f054de33f72c06a1fbc82d184fb" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e888c152d966a1b89930d941f3a5a1a7a5b85cb0" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="63bfff7efea5d20beab18cd305470e9c904f0cc0" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="76f82b43abd9341106403e4fefbcc622b1d9d257" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="249fcc2e69286ba21bdae53273e5f7d7fb44677a" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f62212c23555d1ccb109a0de80e612824e30558d" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="662e6de724eb866571ad1cf9583269973a238c85" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d1ee8520defd719fb600f2e4a31ec7ea361fb94" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="af4a16be0efe6b00bd909d436ef0a9117ae26db4" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eaf3d6e24c355ff1cbcf020c13d8a14ecb479509" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9f41fd5ab6b6dd61477618f347f1193ec259e641" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0550097f97a5be2ad0ef8859dcee6bc5d7eb201e" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="91eb20b311733a2b6ea1b76e81f4754d45e6a5d7" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b8c0adc522e759e07f1f09a2dc29cb4eeb1d29bd" translate="yes" xml:space="preserve">
          <source>final def :++[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：++ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:++.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="681f3521d23c9a1aeb7271433edb8ac59346c19e" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="01bb26029a079b63560f7f3e96fc6a03d3c3b2a2" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9ed6145aa293cefce193248cc02ec35d518e0c75" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9ce74ee511ad2b2fb9ca5566ad070c203059d931" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29389348026cea4a4867dc152754baec0c8e6694" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e9d3c0786826c8267bb003bfd79a4f056fa068d8" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7364803733ece6ca37950d60ebda3f0282eed20" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aec8df62424c2dca1bad486b1e5e445617dcd069" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2e298e8f1ceaeb41506517ce421ee4c08e49f4c6" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="51bebed76ce61fd9f4923d6afaec54043063b8ab" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3896516e839ebee46148319590f1caba57993602" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a70784bae7d8f64fd91f8e9627de6329154746e6" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="81a781f18a02bc6d1b6f06b5162aee6a060645af" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c22e52efd67d91b29c5f9be09de494906263ebcd" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="90359dcb7869a1f0edef624db1ef9585f60f6ff0" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4767887d67970c8d5ecd9bf98d63137226161edd" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7aa27ed473a2c723034fdae32127b6dd2d8f4bc8" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ab1b8ecb71f3d7fc9d53d1d69915435a0e067cbc" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="221fc84225bfb8fedeb70af4d5ef854262cbf1c1" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="42cddfc9caa39d39b825dc199eaefe6a62db79f0" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="323ce309341b64cf47ab4e8ab64a1fff559e85a4" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b22d620413524bc509a123385c1fd630201cddbe" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="798c46faea1ae76103779f549234110d7ea786ae" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="686abd481e317b174c5de65e1e640e6feb1cb5c9" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bfdfef3b62f86704b96f01d08632c4a9e89d2572" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8daaad556205fbca0803e81633ed3613705b00e3" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d6fcae7d7037a67bf5f06b53e7653894580398d9" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="60f94a21f4f61e6c228b7b02bc46ab4fd5f00b43" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="81750f6102cf71362286cce9292c928955a1a7a9" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0b0db5e9faa622cd7ad9da4af152b8f6afdb3ecb" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ac86f14d94a9d6fc3e8d0c9c53344a7b0a843a4" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;x&quot;&gt;x：&lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7dc7d71ca7d44f28ef129f4eac279438e2298f05" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;x&quot;&gt;x: &lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;x&quot;&gt;x：&lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7b335ae807e5c8ada411ef54742b980aebe8fcf" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7e48301a5427b44adfeaa0ae6b2d95234e6d7d78" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a526981afad5d01ddd84b6c9d12a166fdda929a" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2967143ac837885df1f5b751aeed46fc3776a7c5" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="73d4fdb42fd2a98e6652d6f852b58bb23a07e485" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fe944a4f5984fc6d51273e82983b53f239b0cb38" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a9f6ad091f9d34c94a70a7045a02b13cd2270dd2" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ff871ef4f90a3cc50341e565310c1525eab33d9" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e1d28f6b3a4f3f86beeb40104fc3ddeeb7b84139" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="813ce5300933062742421b9293dcdf94af556abe" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="226c8bd7121bb1fcef791334a01b0306c25a99b7" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7d297a3ac0498e1e7e95edd977ab6273cd03a10c" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="16c0d9e9cd8ed6067c5e643164729f167f7b624c" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="670c300964936395f579030f75d16c1d5f15afff" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7504b6531f3bf1e9bd39089d7021647195cb0834" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5b24e1238a2dc41c5617d17b050804b88b5a132" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2e0e6bbd175f8f1fb0f21f6d056a58e61188fa09" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="35109e95b632b505b7b060105ffecd56a05eaf3b" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e101f37bee8c66bd283715ff3fa92ae5be88cd02" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dc31f5c7055e56c7a82992bf9cc54556e2c134ca" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="041574e5c4b5a4f5b1b33e44baacaaa7f06b4028" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f94cbf87ca3ada55fc3abeea3fcaaf016535a75c" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c92c2b6f8d23816d6fd1f1954c25f9b665b182b7" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0b36a043fe507ba4ae898ab54348415ed1a43436" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0a515b2fee83fbaf1851f8cb8e5a54930714a634" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7579785bb60ab01611e90e742790698f058af408" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5eef8948d6e6eed9729f7dc574f7dcac8a89c132" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29b321a64dc22dd9ce223822537aac8a17160d5c" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d10bfb6e1a29c5dc1fa3c43df04293e257a18e8e" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a54adf26af75a34a5a2a4b3606ba3bafb57280c" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="56cc0b6177e3390d11cc9972509d9f01bcecf0a3" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="351a8c49570644b4bd105d8d8134baf707645d80" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ea8fae8896bd8a29819225dfe5226f2dfde78dab" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1ca1694cbf5ed8e725661b557695fa4d0cad7673" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f1c246d7a193e04676a1721c05daa4cb016d1cd2" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1202bff7050c4086af97df67d6596efcc3a1c899" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0ed43721270562a61107e2a7b8925a7f34058b9d" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="07b72723ecca83a24cd1d50be4f7cb65c562b5be" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="973d850dfdd770a1b02476fe1f0e803e474d9839" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f05e76347ee1ca442323642fad7efdf00919b6ed" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="815bc90aed8726d7a2a975b77ad4bc3e90a5fb4c" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d40861c84bf831dcfae379fcc00bd7696fcfe464" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bc90a9e1c8998d8fc59c91e5c257824ca1c6ebca" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="045c8ee29ebdaf1a455b185117db7def88f6d351" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5c255ab451f049e00b954d3fad82086a89d296ed" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="099bd283e73dbf8fd1553dee70e6b3a9ad8a716c" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="974567d70f4128a0d9b630b424d4f52440fb6172" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8078f3710eceb1b5e789a5ef5baf2e901c08fc23" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="faf09e6b1e7b0b72b9e4ac020ee125094d4d47cb" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dd99a7d5b0b2ce0b01a10c71c0cb8087d7bfc8e6" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1b6ef8f3678e601b41f5957d712eab8fec1d6d38" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="645358e3d776c9cffc7a725044c720c7e4a27604" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0de61c953686bf2e5b08721db70432694fd8a6f2" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c608c3047efced161a0863c39e433a70fdee5fe8" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="689421a06298770194dfe8026ea14b1f050f3f29" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ebaf2d37f7ac78f84782d3471673f6e247d28dd" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d8cd23af19794d40941ce97a781a87bddf48de32" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ff7714f2af550fcb30fa05e1cffa19fa094ad4b9" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e36754b22ee816e669de68614086572afaaf34bf" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="09cd5518940d5f006053aa4a66efaf1f45136ac0" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7cc068ec95a2e7c7f2671cbf8157be23d35cf4d" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0d48e14e9d1f38164c75bdaa2e997f4e75c4596e" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c1211784d2371640ac25b16f2984fa7b1f74b3b3" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="46b2a35656fbe1bc8df1b5c55aa75ce70e44d741" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dafbd3cc103e36f9f8eb117c9d66dcf965844e89" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5e95c7702be6d0fc5e9f2e840511d54c7ceb5a27" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aeee4b784ff967fbe00204d9152da00cc6a48bbd" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0ae1df66839b90810c6bb3d9059c06507864b14" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a3f6163b75d13d279eb77bb593f505b106a4a5a5" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="19577c0d874d464a5af4d87d7fdd5f25589a46d8" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="29365dd24fa906f56bc1fb493ec8bfd70dae41be" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0222d5783dcdbeb4808bee6cd52b3d9a00d4b5da" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="771c36778e93219b54f61409606274110c83a30a" translate="yes" xml:space="preserve">
          <source>final def :+[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def：+ [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.:+.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1185d08bad4c38ca93e96757cf963e38b4ed85a1" translate="yes" xml:space="preserve">
          <source>final def ==(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def ==（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4cf91ae8a524e913416fda7f25de0000440fd1e0" translate="yes" xml:space="preserve">
          <source>final def ==(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def ==（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c3d24f99febd183d99e0a189ea263ffff6536871" translate="yes" xml:space="preserve">
          <source>final def ==(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def ==（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9cb039579869f2294ae8808131fe750d809d29a" translate="yes" xml:space="preserve">
          <source>final def Value(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">final def Value（&lt;span name=&quot;i&quot;&gt;i：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="baba57b67c861c437f9f33a2d3d5210ca5f8e6a3" translate="yes" xml:space="preserve">
          <source>final def Value(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">final def Value（&lt;span name=&quot;i&quot;&gt;i：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;name&quot;&gt;name：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3bccf8d7fee644e212d1c2a40182f72e47f756d6" translate="yes" xml:space="preserve">
          <source>final def Value(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">final def Value（&lt;span name=&quot;i&quot;&gt;i：&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27bbb4c60ddae9a125ce32408f6294ebc6901423" translate="yes" xml:space="preserve">
          <source>final def Value(&lt;span name=&quot;i&quot;&gt;i: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">final def Value（&lt;span name=&quot;i&quot;&gt;i：&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;name&quot;&gt;name：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7a1b84a80d87a654341fd7c50653095e60d7123f" translate="yes" xml:space="preserve">
          <source>final def Value(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">final def Value（&lt;span name=&quot;name&quot;&gt;name：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a00cd3e37e54aed4ce40b51570534d497be984d" translate="yes" xml:space="preserve">
          <source>final def Value(&lt;span name=&quot;name&quot;&gt;name: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">final def Value（&lt;span name=&quot;name&quot;&gt;name：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3087496b4a50617ec2de39b91e01d368390f9973" translate="yes" xml:space="preserve">
          <source>final def Value: &lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">最終定義値：&lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="97966bb9a53577795730ab69cde057a80f7ade04" translate="yes" xml:space="preserve">
          <source>final def Value: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">最終定義値：&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54d3a536c156e7569fa407df7e248ba7b6b578bf" translate="yes" xml:space="preserve">
          <source>final def ^(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;collection.BitSet&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">最終的な定義^（&lt;span name=&quot;other&quot;&gt;other：&lt;a href=&quot;../bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;collection.BitSet&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ba515b00b7a6c7aa7ffc737788f3f07f7dbfae4" translate="yes" xml:space="preserve">
          <source>final def ^(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;collection.BitSet&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">最終的な定義^（&lt;span name=&quot;other&quot;&gt;other：&lt;a href=&quot;../bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;collection.BitSet&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9ea0fd3bbae4a4a1473f746925ef23725fb5dedb" translate="yes" xml:space="preserve">
          <source>final def ^(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="translated">最終的な定義^（&lt;span name=&quot;other&quot;&gt;other：&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2e55be946abf4063af4c946cd9ab81ad56cbb9ff" translate="yes" xml:space="preserve">
          <source>final def ^(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">最終的な定義^（&lt;span name=&quot;other&quot;&gt;other：&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="5e32321501a67f1d593e9664fde65505343b1f84" translate="yes" xml:space="preserve">
          <source>final def addAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def addAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="9c45d6499c504daa3f15d405b118384e9e161b73" translate="yes" xml:space="preserve">
          <source>final def addOne(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def addOne（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="1574af9ecaf0ee1228e00d00bbf4fcd908022c5d" translate="yes" xml:space="preserve">
          <source>final def addOne(&lt;span name=&quot;key&quot;&gt;key: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def addOne（&lt;span name=&quot;key&quot;&gt;key：&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;value&quot;&gt;value：&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="a6971267710df1ee3e16b6e548bb8b4df8378f30" translate="yes" xml:space="preserve">
          <source>final def addOne(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def addOne（&lt;span name=&quot;key&quot;&gt;key：&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;、&lt;span name=&quot;value&quot;&gt;value：&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="0dbef4704a1534662f189ae064de1aaec2cc791e" translate="yes" xml:space="preserve">
          <source>final def addOne(&lt;span name=&quot;kv&quot;&gt;kv: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;, &lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def addOne（&lt;span name=&quot;kv&quot;&gt;kv：（&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;、&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;）&lt;/span&gt;）：&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="7939979195ae133e49c8c70122b4fdaf9bf7a6b0" translate="yes" xml:space="preserve">
          <source>final def addOne(&lt;span name=&quot;kv&quot;&gt;kv: (&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def addOne（&lt;span name=&quot;kv&quot;&gt;kv：（&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;、&lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;）&lt;/span&gt;）：&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="6e3451ddf96fb6f5e8c2e76fbdd5ac66c3ef42e3" translate="yes" xml:space="preserve">
          <source>final def addOne(&lt;span name=&quot;kv&quot;&gt;kv: (&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;)&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;.this.type</source>
          <target state="translated">最終デフaddOne（&lt;span name=&quot;kv&quot;&gt;KV（&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;、&lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;）&lt;/span&gt;）：&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="66238e10638ec0aebb810550fc055b2d9f1cc8ef" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11aa46480e12503b2f64a3233b3b5c3fe4468c75" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="39ece6d94a7c75d4db2504791bb6a1ece718c58a" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d805823630c3eb19c5c5dda6e623c66626fc6c3" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="da1cb5e8b1ec8c4518e5d83a4a571aa3213fda4e" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">最終的なdef addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4ce5135056c1ff1fa2da0dd60e8bfa5b44b3641" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73dcd0564e4bebc4293ff8316ff684511fc1e206" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d8b60de7a870f789d5901059c57c83b809cdb50" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;collection/mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;collection.mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c4f93f45fe8927b5ed08dd52e13517dd55db3dd" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">最終的なdef addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c25267b17f273c65617078315178d203f4658ad7" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e47f69aabe66ed1eb8c072d5418e7eceab9a4368" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;start&quot;&gt;start：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;end&quot;&gt;end：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;mutable/stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;mutable.StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="974877092887b2df5337e3b0cc6ba62a0939b39b" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4d12920e0d93ef0ceeeee974d76c6e9b5b1f97df" translate="yes" xml:space="preserve">
          <source>final def addString(&lt;span name=&quot;b&quot;&gt;b: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="translated">final def addString（&lt;span name=&quot;b&quot;&gt;b：&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13e47d1cc45ced357249bbc76c82a630cc1e9673" translate="yes" xml:space="preserve">
          <source>final def addSuppressed(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def addSuppressed（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa5a8f502d91f2f1ac8943217762ff9beabb9533" translate="yes" xml:space="preserve">
          <source>final def addSuppressed(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def addSuppressed（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60a4a0add3307d6a5aab439c31cf5c512504b502" translate="yes" xml:space="preserve">
          <source>final def allCatch[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.allCatch.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def allCatch [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]：&lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;キャッチ&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.Exception.allCatch.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0c1163d5cea0039059d25c215f3a573cc5c65175" translate="yes" xml:space="preserve">
          <source>final def allCatcher[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;Catcher&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.allCatcher.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def allCatcher [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]：&lt;a href=&quot;#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;キャッチャー&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.Exception.allCatcher.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9725ca546514aba9012475a72a05181f33bab2e1" translate="yes" xml:space="preserve">
          <source>final def andThen[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;], &lt;span name=&quot;scala.concurrent.Future.never.andThen.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">final def andThen [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]、&lt;span name=&quot;scala.concurrent.Future.never.andThen.U&quot;&gt;U&lt;/span&gt; ]&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="52bd2956d913c4cca9b4257f793f330b98aa6b04" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="0f4849c695472c2a717f8cf1b80ab90a9b704b18" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="1d34ba16ce21bbc1556df64972668e973cbdf9a0" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;.this.type</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="a9f5cb28d8d8cb07daf1fe2a0a9a02789c76b420" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ec9019a8affcb9b50ecc5806b03dd7a74bb29d3a" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e86e6ac42e0e94ffe225307a81735ab2bb94af7b" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="0c48d106aa16a5f308f2b865965387258e350c3d" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ab8d996e7f60840443ab4998c9f738dbbb1153af" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;.this.type</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="8534c20ab790bf0bee4559890beb7de0c8c6b697" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b83dc3dbbd12b98e23514166adb1780aaf70b15b" translate="yes" xml:space="preserve">
          <source>final def append(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def append（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="632b958f0101109cf19d5c087fab623b5591056b" translate="yes" xml:space="preserve">
          <source>final def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def appendAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="895a346fb2c72f3dfd5d034d967488e3f30945e8" translate="yes" xml:space="preserve">
          <source>final def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def appendAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="81c79e5b4c46ffba34a6a9ebaee904f538579465" translate="yes" xml:space="preserve">
          <source>final def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;.this.type</source>
          <target state="translated">final def appendAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3bec59295bda0e3f35b2cd78e0605e1f4ed4b766" translate="yes" xml:space="preserve">
          <source>final def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def appendAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="80cadf2a79414aa6d0cbe78b103df67d4c8f499f" translate="yes" xml:space="preserve">
          <source>final def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def appendAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="71a0d9ecc85acb8b64c6f38f71470eb884ca7ba4" translate="yes" xml:space="preserve">
          <source>final def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def appendAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="5198f26989e8f0035590787de57cdfa420f634c3" translate="yes" xml:space="preserve">
          <source>final def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="translated">final def appendAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f47fceb0a1feef65d965ee8d60c38117a85cf033" translate="yes" xml:space="preserve">
          <source>final def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;.this.type</source>
          <target state="translated">final def appendAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="c4b3212843ebeabe70b2accd7be35c063a2aacb0" translate="yes" xml:space="preserve">
          <source>final def appendAll(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def appendAll（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="afc01ac3f1ce448f605e8b2e8219fdb839c6c49e" translate="yes" xml:space="preserve">
          <source>final def append[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;ordinal&quot;&gt;ordinal: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;generic.BitOperations.Int.Int&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.append.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.append.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">final def append [ &lt;span name=&quot;S&quot;&gt;S&amp;gt;：&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;ordinal&quot;&gt;ordinal：&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;generic.BitOperations.Int.Int&lt;/span&gt;&lt;/span&gt;、&lt;span name=&quot;value&quot;&gt;value：&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.append.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.append.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2474943c7c385208eb8c5f5cbdc7ef95ce63c2ef" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b7acead267b47cc03f3ee57d81f41f154b370940" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0947ab312c5cf6a293975fdc22c264eeea31116f" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19b2835bf1d83819df596d674deb9abb8827f2d6" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11c6e378ab427378c37686f04cbef657d0f83a17" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7e47c8b9997958aee0027236b89f9caa9ecb3461" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="710560d1e624843399d1da6ef9c853271e5738b2" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eaee9b28bc0e74e2786728ff60690b4e5b170883" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="845709ad8df3ff5ce1e98b1ae22aeb9233e87796" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="99e9a041090e7bc66073a8f8f7f370bd60d4e589" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="94523632dacfdace7bd179291a450196c5c3d52a" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c48ad7b4fa870862e8d511053177754138a7795d" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf3eb2e137e2777eaadd657b57b1cd893be73f6e" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc6b8159127ae311ea82e8765268d1ef30c4b3de" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e0480515f65a74cb4389a0c9abefd5ff9caf9536" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9ea0be04a8385f45c25ef6e3e5040de29755760" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a95c526c101e2e8274215e9c0a4eff90a19032fb" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28e23a93420f5b50bce10e8ee3239e1f72c80daa" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c774400eb8d6423500d6311bbf057ba36686bc38" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bf7a9f6a63c3cf2ad53c32f5365ee2b265c3f640" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0a3750ceec6d3603d76828d6673e53535520e09c" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62ee666a7cca4ecf0a62065e918e33754fb2c368" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="60a0ab648f0dd49f6c0f0e7edf843d3d47311f38" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0f9a0a833155ea35218881c3bcf19dfed9102b4" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="857f607147cf437913ecb47ee394e1365354d0f9" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f274edf90518f5d9cd1937ff3aaac325a2138f2" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7128e9d50aa7fd36a81bbe17c9911d083596689f" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2b686c0dd8a5335346db8feb8ef2c6b3b4bcbbb" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="240a9a5cdd79fd75d48771715bb9e4c1d5dcb955" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1c7a47a4d1328bb921555b32b3247067743dff4a" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4aae5118ab3380df611b4b934a6a6de44f1b3a0b" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e28a6c9631c49d91f91aac59b74e84bac15d1c6e" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a8d3f9b5fdd645ba855daa070d1e5f91563119b" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7372d3005c9ffe05d030e91d29ca3d573713d98" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="faf04914f05ce60846b9f5e7f5e1ad22c68073ff" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bc55715af3440fc10e383a2078e769e12d779af" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91c52e7294b9f25b3e45f19fdda9fd10e0c62786" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7c43e4b097027ec9f70fdb46a559834873b55778" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;elem&quot;&gt;elem: A @scala.annotation.unchecked.uncheckedVariance&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;elem&quot;&gt;elem：A @ scala.annotation.unchecked.uncheckedVariance&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f3fb3f4b57949ef9b05b7522c07c49efed0af3a9" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終的なdef apply（&lt;span name=&quot;idx&quot;&gt;idx：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b42165a612a7df7c6ee4b106cf24fbde6b66224" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">最終的なdef apply（&lt;span name=&quot;idx&quot;&gt;idx：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="abda1133b2073b45a189082152d21b054bb745cc" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">最終的なdef apply（&lt;span name=&quot;key&quot;&gt;key：&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="214409c2bddfcd98db66b269c24e56cfe22afbc5" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">最終的なdef apply（&lt;span name=&quot;key&quot;&gt;key：&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4dd0f569ac8999b735de1622e666998ab2f150cd" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;x&quot;&gt;x：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;#ValueextendsOrdered%5BEnumeration.this.Value%5DwithSerializable&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c979c448db746bdea6f4567ad63917a2595daa9" translate="yes" xml:space="preserve">
          <source>final def apply(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;Value&lt;/a&gt;</source>
          <target state="translated">final def apply（&lt;span name=&quot;x&quot;&gt;x：&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;enumeration%24value&quot; id=&quot;scala.Enumeration.Value&quot; name=&quot;scala.Enumeration.Value&quot;&gt;値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dd5da6a5c2ea12c57c982136802d0c8553e97ea8" translate="yes" xml:space="preserve">
          <source>final def applyPreferredMaxLength: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def applyPreferredMaxLength：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9efaa07102b9c2d2037d72d9644e698778325340" translate="yes" xml:space="preserve">
          <source>final def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](): &lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Promise.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def apply [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（）：&lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;約束&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Promise.apply.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a67ec8bf57698e18b26c56a053fc28ffc0aa9bd1" translate="yes" xml:space="preserve">
          <source>final def apply[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.apply.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.apply.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def apply [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;body&quot;&gt;body：=&amp;gt; &lt;span name=&quot;scala.concurrent.Future.apply.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.apply.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4c232d34017d0ff59a0a71676dc4a396a439c580" translate="yes" xml:space="preserve">
          <source>final def args: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">final def args：&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;文字列&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="f513286a33fc1a962ce4cc576b1e0673d2b0f9d2" translate="yes" xml:space="preserve">
          <source>final def arrayHash[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.arrayHash.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def arrayHash [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;a&quot;&gt;a：&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.util.hashing.MurmurHash3.arrayHash.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;、&lt;span name=&quot;seed&quot;&gt;seed：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0d9efa5afc139a8aec6fd0ccba3804650da7f378" translate="yes" xml:space="preserve">
          <source>final def asInstanceOf[&lt;span name=&quot;T0&quot;&gt;T0&lt;/span&gt;]: &lt;span name=&quot;scala.Any.asInstanceOf.T0&quot;&gt;T0&lt;/span&gt;</source>
          <target state="translated">最終定義asInstanceOf [ &lt;span name=&quot;T0&quot;&gt;T0&lt;/span&gt; ]：&lt;span name=&quot;scala.Any.asInstanceOf.T0&quot;&gt;T0&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b5339c5f4301f1d0ac0ac1886588050c1e9e2979" translate="yes" xml:space="preserve">
          <source>final def assert(&lt;span name=&quot;assertion&quot;&gt;assertion: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;message&quot;&gt;message: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def assert（&lt;span name=&quot;assertion&quot;&gt;assertion：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;message&quot;&gt;message：=&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c78bab4a4d00ec1b97a43b7c6f650571127421b7" translate="yes" xml:space="preserve">
          <source>final def assume(&lt;span name=&quot;assumption&quot;&gt;assumption: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;message&quot;&gt;message: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def assume（&lt;span name=&quot;assumption&quot;&gt;前提：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;message&quot;&gt;メッセージ：=&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;任意&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;単位&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="04f6e6dd3d2024d62941c2e5599995d41ac7bd2c" translate="yes" xml:space="preserve">
          <source>final def blocking[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;span name=&quot;scala.concurrent.blocking.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.concurrent.blocking.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">最終定義ブロッキング[ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;body&quot;&gt;body：=&amp;gt; &lt;span name=&quot;scala.concurrent.blocking.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.concurrent.blocking.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d64f11594cb540c7bd8556a7ace500cb285c93ad" translate="yes" xml:space="preserve">
          <source>final def by(&lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="translated">final def by（&lt;span name=&quot;step&quot;&gt;step：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5d3242585d564721ce250f7324c15ef4cf3e6d08" translate="yes" xml:space="preserve">
          <source>final def bytesHash(&lt;span name=&quot;data&quot;&gt;data: &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def bytesHash（&lt;span name=&quot;data&quot;&gt;data：&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt; ]&lt;/span&gt;、&lt;span name=&quot;seed&quot;&gt;seed：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d0965f671f0d1e1059a8d1c585959f468d2a7a2c" translate="yes" xml:space="preserve">
          <source>final def checkAccess(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">最終的なdef checkAccess（）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f9cb9a055d6b83f818e520fdd8d9e4100856469a" translate="yes" xml:space="preserve">
          <source>final def clear(): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def clear（）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d27378361754b2a18246cc936b7873dc404b5e09" translate="yes" xml:space="preserve">
          <source>final def clone(): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">最終的なdef clone（）：&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="576c75d00972cf5910e1aed3d6ee48508b99b33f" translate="yes" xml:space="preserve">
          <source>final def clone(): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">最終的なdef clone（）：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;キュー&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="492b9afc48dcf637505b64871138a8c5c12406a4" translate="yes" xml:space="preserve">
          <source>final def clone(): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">最終的なdef clone（）：&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;スタック&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c20a87d3d2e434f1776599b11f612cbfaaf23b48" translate="yes" xml:space="preserve">
          <source>final def clone(): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</source>
          <target state="translated">最終的なdef clone（）：&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="cbbb22ff53909c8189551478095c4bdfe68bd795" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;.this.type</source>
          <target state="translated">最終デフ高専：&lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="660ba838e4fb64ea26abef322a5e89585f62f7ee" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="cec43670ffe541305f4022f97de1204ef14688b2" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4c2b82c7065b54c6520ff03cfca21593ec3865e8" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="8dc3b806c426857db4a3543f1784ae67e78fdf9a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="8239a0b46b3e4147a2fdf95217e09db5d5eba3a9" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.AbstractMap&quot; name=&quot;scala.collection.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.AbstractMap&quot; name=&quot;scala.collection.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="bbed58b8a6c51e9c92ad78c8cc60f3bc850819fa" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.immutable.AbstractMap&quot; name=&quot;scala.collection.immutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.immutable.AbstractMap&quot; name=&quot;scala.collection.immutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="d34b6b317a8984acfb8776a8978808572741d4a9" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ccba564e8b5ca114ba15a89487cdd0e7c0397acc" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractmapview&quot; id=&quot;scala.collection.AbstractMapView&quot; name=&quot;scala.collection.AbstractMapView&quot;&gt;AbstractMapView&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractmapview&quot; id=&quot;scala.collection.AbstractMapView&quot; name=&quot;scala.collection.AbstractMapView&quot;&gt;AbstractMapView&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="fb8cc705b73dc15d11994108eadc79a312348730" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.AbstractSeq&quot; name=&quot;scala.collection.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.AbstractSeq&quot; name=&quot;scala.collection.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="84cca7d39d90ef11b7b22cb54885de9171a3e839" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.immutable.AbstractSeq&quot; name=&quot;scala.collection.immutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.immutable.AbstractSeq&quot; name=&quot;scala.collection.immutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="fc36f32aac49148a672e153ababb236ef33360d6" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.mutable.AbstractSeq&quot; name=&quot;scala.collection.mutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.mutable.AbstractSeq&quot; name=&quot;scala.collection.mutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="83340ff3aa2807ed139b159af217f3aeb42de420" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractseqview&quot; id=&quot;scala.collection.AbstractSeqView&quot; name=&quot;scala.collection.AbstractSeqView&quot;&gt;AbstractSeqView&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;abstractseqview&quot; id=&quot;scala.collection.AbstractSeqView&quot; name=&quot;scala.collection.AbstractSeqView&quot;&gt;AbstractSeqView&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f5ffa7f53930f1999a65090a8db149f1e9c80367" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="9a0a7f1a00251bea587c3fbf09c0eaf7c24fbc96" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="173da35bf2d690f8c8f06e7b8775b46ffa433082" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="79939cec1e03ba92e0f5b4d652a9304ef911581b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;abstractview&quot; id=&quot;scala.collection.AbstractView&quot; name=&quot;scala.collection.AbstractView&quot;&gt;AbstractView&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;abstractview&quot; id=&quot;scala.collection.AbstractView&quot; name=&quot;scala.collection.AbstractView&quot;&gt;AbstractView&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="7abc7d464cef7e6ad36ea27c7da2d2185883b202" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="d9729d4035c4221f39b75f967665a5c5526bf77f" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="55d023b2d4349cf92ed23fb40660b5587745bca8" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="7614ae597ae358e4df379a748503d6d0bfd0ab87" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="cb318e1d5ae202f865f03950b35324d89e2db284" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arraybufferview&quot; id=&quot;scala.collection.mutable.ArrayBufferView&quot; name=&quot;scala.collection.mutable.ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;arraybufferview&quot; id=&quot;scala.collection.mutable.ArrayBufferView&quot; name=&quot;scala.collection.mutable.ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="7e174867e82885ae0daa2643abc6719ccc62ca0b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3af5d4e8695c59014b767bbed860c2d13b178a5b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4eba4137b10113e8e543631a616e2ee4571869c4" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="61cc6cf3467f8cc69ad804ec773ee55c2d635339" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;.this.type</source>
          <target state="translated">最終的な&lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot;&gt;定義&lt;/a&gt; coll：ofBoolean .this.type</target>
        </trans-unit>
        <trans-unit id="92cd7eaef524f01be4f4e9b55ab422fb4928867f" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;.this.type</source>
          <target state="translated">最終的な&lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;定義&lt;/a&gt; coll：ofBoolean .this.type</target>
        </trans-unit>
        <trans-unit id="ac7d8edac6906e47f3700c6f026f0275bca81654" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.immutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.immutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.immutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.immutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="77b65b47b0ee74854b657018f43ffd10e092d82d" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="255da653c0b7f0a3000371f28c36dcf086f41a93" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.immutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.immutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.immutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.immutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="2c807de92340bb5050aa8a2ac85f27793a727470" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="be4062a56f2c350c770a3263a6893cb1339e311a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="7c174b2cd2446defd93d26e507e18f31feaae4d7" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ce4d539fdb2dc05d91b39a8559ee77ac1b644716" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="99eeb9ad173873aedd9591a13270cf9ec0f1976f" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3ddbca4cbf2f95669b0a49bb9882d297a14ee60a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.immutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.immutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.immutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.immutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="699e97ff32ae104a9f7244570398b299b8da4630" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="8b4154e077174605ed87be2e8ce87b0b37270be5" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.immutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.immutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.immutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.immutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="287b6aaec21a87c83910fd97bb925167e4534617" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="57741b30401a37985c5036de9da3940720bbe2ca" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="389084330acd02f879475dfdb4927b256a2cb796" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ca9300fcfdfa38eb01e807bcd67c44bc31d254da" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.immutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.immutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.immutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.immutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="9b5646f7acc68061cff89d4571a247623a0338bd" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="9f5be154a1c7ba298c5c2982b8d9d8c3c7298ffa" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="6bfbe6fb0614738629f6f4672a69fab73f9aefaf" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="0043cc3043a980c468a0121bf6e1c09ed0450577" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b9bc0e295f94b1b579be6d85c2add6bd7c3029e7" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="c9032b8f711fe791849cbc1ed661bed2ec16a258" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="db173f15320d0b88923da0b9c73539dc0b297b60" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;bitset%24%24bitset1&quot; id=&quot;scala.collection.immutable.BitSet.BitSet1&quot; name=&quot;scala.collection.immutable.BitSet.BitSet1&quot;&gt;BitSet1&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;bitset%24%24bitset1&quot; id=&quot;scala.collection.immutable.BitSet.BitSet1&quot; name=&quot;scala.collection.immutable.BitSet.BitSet1&quot;&gt;BitSet1&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="85d4482b5ac884c12eaac301ae2ae302fe92f238" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;bitset%24%24bitset2&quot; id=&quot;scala.collection.immutable.BitSet.BitSet2&quot; name=&quot;scala.collection.immutable.BitSet.BitSet2&quot;&gt;BitSet2&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;bitset%24%24bitset2&quot; id=&quot;scala.collection.immutable.BitSet.BitSet2&quot; name=&quot;scala.collection.immutable.BitSet.BitSet2&quot;&gt;BitSet2&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="18cf08968f922e8c9ba7056fe8a759b2ef25a460" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;bitset%24%24bitsetn&quot; id=&quot;scala.collection.immutable.BitSet.BitSetN&quot; name=&quot;scala.collection.immutable.BitSet.BitSetN&quot;&gt;BitSetN&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;bitset%24%24bitsetn&quot; id=&quot;scala.collection.immutable.BitSet.BitSetN&quot; name=&quot;scala.collection.immutable.BitSet.BitSetN&quot;&gt;BitSetN&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="9543c6be7ffc992d8ee371cd696054850f72135b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;バッファ&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="2fc245a4b9f20bfe2bd526cb0bd912cfaaac55fb" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3cdc6bc5afb2d73247f30250c2b33ed394eaf680" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;defaultmap&quot; id=&quot;scala.collection.DefaultMap&quot; name=&quot;scala.collection.DefaultMap&quot;&gt;DefaultMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;defaultmap&quot; id=&quot;scala.collection.DefaultMap&quot; name=&quot;scala.collection.DefaultMap&quot;&gt;DefaultMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="a445f34729b4a2aeb80e1dca52e55338826b7de6" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt;DoubleAccumulator&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll： &lt;a href=&quot;doubleaccumulator&quot; id=&quot;scala.jdk.DoubleAccumulator&quot; name=&quot;scala.jdk.DoubleAccumulator&quot;&gt; DoubleAccumulator&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3c61f95c4a30f9764d759fc0684b11b6f5e12edc" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;enumeration%24valueset&quot; id=&quot;scala.Enumeration.ValueSet&quot; name=&quot;scala.Enumeration.ValueSet&quot;&gt;ValueSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="804af2fa7d5a0f9183abf4646f4a9b51ff33d791" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="fc33356eef4086a6a1b51ca425bb515debb706f4" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="94fc05a74229b629e88c1628921e9afa37f56fc0" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="23405c08b9d20c204dcd72fd4fafbf3e76287fcf" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e3386838067b52d968ec2cca57d073b0ddfdd27c" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="c44075dc9eb5940457064449182b2b593313de76" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4ba911caeaf49428c418f5982e85071f1e8d80c7" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f010f3267c18ede9251722776e644131c2030648" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e395113cb0282f26790291a1879d849fad84f0d4" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;indexedseqview&quot; id=&quot;scala.collection.IndexedSeqView&quot; name=&quot;scala.collection.IndexedSeqView&quot;&gt;IndexedSeqView&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="da104029cba3f796fc5ecb1db492d568bd0457df" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24appended&quot; id=&quot;scala.collection.IndexedSeqView.Appended&quot; name=&quot;scala.collection.IndexedSeqView.Appended&quot;&gt;Appended&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseqview%24%24appended&quot; id=&quot;scala.collection.IndexedSeqView.Appended&quot; name=&quot;scala.collection.IndexedSeqView.Appended&quot;&gt;追加&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b3ab24dc14d9174c9cd529933c88c1086f45851b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24concat&quot; id=&quot;scala.collection.IndexedSeqView.Concat&quot; name=&quot;scala.collection.IndexedSeqView.Concat&quot;&gt;Concat&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseqview%24%24concat&quot; id=&quot;scala.collection.IndexedSeqView.Concat&quot; name=&quot;scala.collection.IndexedSeqView.Concat&quot;&gt;Concat&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="cf1253f8743195462c0594d0004ece464ad9e5b6" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24drop&quot; id=&quot;scala.collection.IndexedSeqView.Drop&quot; name=&quot;scala.collection.IndexedSeqView.Drop&quot;&gt;Drop&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseqview%24%24drop&quot; id=&quot;scala.collection.IndexedSeqView.Drop&quot; name=&quot;scala.collection.IndexedSeqView.Drop&quot;&gt;Drop&lt;/a&gt; .this.typeを</target>
        </trans-unit>
        <trans-unit id="637385d3bf31c03480ad93245e2f8517adf83adf" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24dropright&quot; id=&quot;scala.collection.IndexedSeqView.DropRight&quot; name=&quot;scala.collection.IndexedSeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;indexedseqview%24%24dropright&quot; id=&quot;scala.collection.IndexedSeqView.DropRight&quot; name=&quot;scala.collection.IndexedSeqView.DropRight&quot;&gt;DropRight&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="c6280be572c6f188362c9ed92a2019f764f104e1" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24id&quot; id=&quot;scala.collection.IndexedSeqView.Id&quot; name=&quot;scala.collection.IndexedSeqView.Id&quot;&gt;Id&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseqview%24%24id&quot; id=&quot;scala.collection.IndexedSeqView.Id&quot; name=&quot;scala.collection.IndexedSeqView.Id&quot;&gt;Id&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b84d1306d1d215bea210dc096d5e5c26c9f05496" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24map&quot; id=&quot;scala.collection.IndexedSeqView.Map&quot; name=&quot;scala.collection.IndexedSeqView.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseqview%24%24map&quot; id=&quot;scala.collection.IndexedSeqView.Map&quot; name=&quot;scala.collection.IndexedSeqView.Map&quot;&gt;Map&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ea36ab50dd200681573df7c8e8c239292278f232" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24prepended&quot; id=&quot;scala.collection.IndexedSeqView.Prepended&quot; name=&quot;scala.collection.IndexedSeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseqview%24%24prepended&quot; id=&quot;scala.collection.IndexedSeqView.Prepended&quot; name=&quot;scala.collection.IndexedSeqView.Prepended&quot;&gt;先頭に&lt;/a&gt; .this.typeを追加</target>
        </trans-unit>
        <trans-unit id="8c04991862d3bf65fb16885787e5fd56798aad17" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24reverse&quot; id=&quot;scala.collection.IndexedSeqView.Reverse&quot; name=&quot;scala.collection.IndexedSeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;indexedseqview%24%24reverse&quot; id=&quot;scala.collection.IndexedSeqView.Reverse&quot; name=&quot;scala.collection.IndexedSeqView.Reverse&quot;&gt;逆にし&lt;/a&gt;ます</target>
        </trans-unit>
        <trans-unit id="3626ae06548df4aab7e733f7e249b28842acf4cd" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24slice&quot; id=&quot;scala.collection.IndexedSeqView.Slice&quot; name=&quot;scala.collection.IndexedSeqView.Slice&quot;&gt;Slice&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseqview%24%24slice&quot; id=&quot;scala.collection.IndexedSeqView.Slice&quot; name=&quot;scala.collection.IndexedSeqView.Slice&quot;&gt;Slice&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ef77ef9a3f6a5b7aa3d7702f772c939ed4f26a29" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24take&quot; id=&quot;scala.collection.IndexedSeqView.Take&quot; name=&quot;scala.collection.IndexedSeqView.Take&quot;&gt;Take&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;indexedseqview%24%24take&quot; id=&quot;scala.collection.IndexedSeqView.Take&quot; name=&quot;scala.collection.IndexedSeqView.Take&quot;&gt;Take&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="33a1d71e5e4ce92753066cc6df97367dc664b3a2" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;indexedseqview%24%24takeright&quot; id=&quot;scala.collection.IndexedSeqView.TakeRight&quot; name=&quot;scala.collection.IndexedSeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;indexedseqview%24%24takeright&quot; id=&quot;scala.collection.IndexedSeqView.TakeRight&quot; name=&quot;scala.collection.IndexedSeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f62a1d1692c40ddca2c6791ff0e31b426630bf38" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;intaccumulator&quot; id=&quot;scala.jdk.IntAccumulator&quot; name=&quot;scala.jdk.IntAccumulator&quot;&gt;IntAccumulator&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b0f60fcb8fbcf310450e3b359240d762e8e655cc" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f734910e63f2b61cf437e2a59c00844b0fa5acdb" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3a2d9b2f74245ade990fe10ff69b840c7acb516e" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="1cf921886f973b200cfbe3ac634f2a5b37e0b85f" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="56dfbe2133d75e31363087ac1f578a1a42e283b1" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b651e7b3d703324887c9406aa54714ecfe16dd94" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="9880083d54b9cc9f2f34a7230ea70676e5c102d1" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="98616145c1b1342def140c3bf2b3a62f6dc2d6e5" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4340f15a1b67a2a56e7fdf0d35793649bf8b10d6" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;linkedhashmap%24linkedkeyset&quot; id=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot; name=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot;&gt;LinkedKeySet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;linkedhashmap%24linkedkeyset&quot; id=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot; name=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot;&gt;LinkedKeySet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="20683df3b9ed642f2de05d723feab8f4e4561b2b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e0fd5fcf973293e7cce1b22f3f0c88e498c741fc" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; .this.typeの</target>
        </trans-unit>
        <trans-unit id="e9b8cfc6477ea2b1b0485a26a1df10b1c90e716d" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="adef5ec463d738a09561c368def8324df8032864" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e5e89e472afe58f8cad74857e70d6eb12c69024a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;.this.type</source>
          <target state="translated">最終DEF蔵：&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="15422c3904372539cf739ce8d4f15ff372ff2f4d" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="c82901add6a12bc32c1a026196c40a21e1f5f373" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;listset%24node&quot; id=&quot;scala.collection.immutable.ListSet.Node&quot; name=&quot;scala.collection.immutable.ListSet.Node&quot;&gt;Node&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;listset%24node&quot; id=&quot;scala.collection.immutable.ListSet.Node&quot; name=&quot;scala.collection.immutable.ListSet.Node&quot;&gt;Node&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="0a2cd97391109909bf8a6e6db7009de5f3126437" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;longaccumulator&quot; id=&quot;scala.jdk.LongAccumulator&quot; name=&quot;scala.jdk.LongAccumulator&quot;&gt;LongAccumulator&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b967b5069b73a8c7bd798524f1554531de42f138" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="d0d68a75d6e5fa44e3dec26f7d12f4dcdadc1e42" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f842422458b3de861e586f3aee8d875bbce9e89c" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e01da487ea7294f56c2dd348da579a4b30b9320a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4d1430a8fe188aa8102a004600798f7c3771718b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="299652eb3cea634e6b9daeb2ae64ca5b66e5866f" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="598a12b9c3f0881ea78f07fd07e0604193e5ff70" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map%24%24map1&quot; id=&quot;scala.collection.immutable.Map.Map1&quot; name=&quot;scala.collection.immutable.Map.Map1&quot;&gt;Map1&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map%24%24map1&quot; id=&quot;scala.collection.immutable.Map.Map1&quot; name=&quot;scala.collection.immutable.Map.Map1&quot;&gt;Map1&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="374f7cde6c68f2215fb62f3340e5cca79455a7b4" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map%24%24map2&quot; id=&quot;scala.collection.immutable.Map.Map2&quot; name=&quot;scala.collection.immutable.Map.Map2&quot;&gt;Map2&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map%24%24map2&quot; id=&quot;scala.collection.immutable.Map.Map2&quot; name=&quot;scala.collection.immutable.Map.Map2&quot;&gt;Map2&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="a11d16a1bdb57dcb80a88ce31210159171ad534a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map%24%24map3&quot; id=&quot;scala.collection.immutable.Map.Map3&quot; name=&quot;scala.collection.immutable.Map.Map3&quot;&gt;Map3&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map%24%24map3&quot; id=&quot;scala.collection.immutable.Map.Map3&quot; name=&quot;scala.collection.immutable.Map.Map3&quot;&gt;Map3&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="70ca537e12bdbc976348d35c77dce2b3b060a70a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map%24%24map4&quot; id=&quot;scala.collection.immutable.Map.Map4&quot; name=&quot;scala.collection.immutable.Map.Map4&quot;&gt;Map4&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map%24%24map4&quot; id=&quot;scala.collection.immutable.Map.Map4&quot; name=&quot;scala.collection.immutable.Map.Map4&quot;&gt;Map4&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="9489d76a3b210d93bccf0d938f68c4817dc5001f" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="d8e37171f7931fbf5d7bb2e84bc1abb46c5d3f0a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="82ef786930a338c10aa30611f073f72d075a6f81" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;mapops%24immutablekeyset&quot; id=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot; name=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot;&gt;ImmutableKeySet&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;mapops%24immutablekeyset&quot; id=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot; name=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot;&gt;ImmutableKeySet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="422c49cdb9ac4cf0409126107fa7c6c48acdada3" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;mapops%24keyset&quot; id=&quot;scala.collection.MapOps.KeySet&quot; name=&quot;scala.collection.MapOps.KeySet&quot;&gt;KeySet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;mapops%24keyset&quot; id=&quot;scala.collection.MapOps.KeySet&quot; name=&quot;scala.collection.MapOps.KeySet&quot;&gt;KeySet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e19d591fab5a2d53a492bb68b9b14768da948f31" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;mapview&quot; id=&quot;scala.collection.MapView&quot; name=&quot;scala.collection.MapView&quot;&gt;MapView&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="a78cd0fde7fbd95383a4a3fbb8f96a4f5d386247" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;mapview%24%24filter&quot; id=&quot;scala.collection.MapView.Filter&quot; name=&quot;scala.collection.MapView.Filter&quot;&gt;Filter&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;mapview%24%24filter&quot; id=&quot;scala.collection.MapView.Filter&quot; name=&quot;scala.collection.MapView.Filter&quot;&gt;Filter&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="05316325e9328aa561d2ffef54f5d008fbd4b003" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;mapview%24%24filterkeys&quot; id=&quot;scala.collection.MapView.FilterKeys&quot; name=&quot;scala.collection.MapView.FilterKeys&quot;&gt;FilterKeys&lt;/a&gt;.this.type</source>
          <target state="translated">最終DEF蔵：&lt;a href=&quot;mapview%24%24filterkeys&quot; id=&quot;scala.collection.MapView.FilterKeys&quot; name=&quot;scala.collection.MapView.FilterKeys&quot;&gt;フィルタキー&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="d9eefc09517d377d0f48a28abdf6fbe05e72f00a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;mapview%24%24id&quot; id=&quot;scala.collection.MapView.Id&quot; name=&quot;scala.collection.MapView.Id&quot;&gt;Id&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;mapview%24%24id&quot; id=&quot;scala.collection.MapView.Id&quot; name=&quot;scala.collection.MapView.Id&quot;&gt;Id&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f19fbd4ffa11f08895f92d2bdab52f6a2517897c" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;mapview%24%24mapvalues&quot; id=&quot;scala.collection.MapView.MapValues&quot; name=&quot;scala.collection.MapView.MapValues&quot;&gt;MapValues&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;mapview%24%24mapvalues&quot; id=&quot;scala.collection.MapView.MapValues&quot; name=&quot;scala.collection.MapView.MapValues&quot;&gt;MapValues&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4d11444afb3f1cc1659f9a4c84eace65ed64e998" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;mapview%24%24tapeach&quot; id=&quot;scala.collection.MapView.TapEach&quot; name=&quot;scala.collection.MapView.TapEach&quot;&gt;TapEach&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;mapview%24%24tapeach&quot; id=&quot;scala.collection.MapView.TapEach&quot; name=&quot;scala.collection.MapView.TapEach&quot;&gt;TapEach&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="10e75b80cac12772c0eab4eeb753bd889dd0792b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="cbe3376813a8371b944177247d3ae1f902c75c7b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;nil%24&quot; id=&quot;scala.collection.immutable.Nil&quot; name=&quot;scala.collection.immutable.Nil&quot;&gt;Nil&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;nil%24&quot; id=&quot;scala.collection.immutable.Nil&quot; name=&quot;scala.collection.immutable.Nil&quot;&gt;Nil&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="992d5bc0b37f974b81e82bed5b9a40032e280468" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="0b5837a87815c8b09aa1708f25e3df3cc147d217" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="055bdfc8b6e8fb93d800ce69bc5abe66a2172997" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;包括的&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="6f0f0e5b07941a88301b8c3d3b7beb9aeb347bb1" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="755dd06fdc03bc1184e86280f9489f4e8d972639" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4ec02698a244c689c57e92b66c9ccfd17849a7cf" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b0fa4ded09ad8706088150fc9f4f3cba940f7f45" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="d0b53867383e7de67c7120ec08d7854991ea6b54" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="804493feafd58e434f51b2214c0167ec74639604" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4bff1772079f692ede1b25000098bd9a07fe7dc2" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;包括的&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="5836780fee7d6118be85b597570a143bfc48d13b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="315c7cb665042fa65c9ab7d963d316e094fd0b26" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="885d0c7650b89ddc82503ace83c3e85f595c38b8" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="a2f98683d2530abf2c207330a8df5e8d391e62b7" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="59a777978ed436fdc55bad8b4916cf803b6079ea" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="fdb5041265fdbc67e480f21f78f6a237a5cc1290" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3d44985c2a885e665603f21064c07f5bbab49b98" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;seqview&quot; id=&quot;scala.collection.SeqView&quot; name=&quot;scala.collection.SeqView&quot;&gt;SeqView&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="d7b22ee0d946f72e85531c3f154ac36ced657200" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24appended&quot; id=&quot;scala.collection.SeqView.Appended&quot; name=&quot;scala.collection.SeqView.Appended&quot;&gt;Appended&lt;/a&gt;.this.type</source>
          <target state="translated">最終デフ高専：&lt;a href=&quot;seqview%24%24appended&quot; id=&quot;scala.collection.SeqView.Appended&quot; name=&quot;scala.collection.SeqView.Appended&quot;&gt;アペンド&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3c839234d6e1bed5b403527a8298671042adf857" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24concat&quot; id=&quot;scala.collection.SeqView.Concat&quot; name=&quot;scala.collection.SeqView.Concat&quot;&gt;Concat&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seqview%24%24concat&quot; id=&quot;scala.collection.SeqView.Concat&quot; name=&quot;scala.collection.SeqView.Concat&quot;&gt;Concat&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="c86b6babaf28236606f6bb81dfde5ef7d59ea4dc" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24drop&quot; id=&quot;scala.collection.SeqView.Drop&quot; name=&quot;scala.collection.SeqView.Drop&quot;&gt;Drop&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;seqview%24%24drop&quot; id=&quot;scala.collection.SeqView.Drop&quot; name=&quot;scala.collection.SeqView.Drop&quot;&gt;ドロップ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="040e9bee014f17e3b052edee8f2a07b15236af81" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24dropright&quot; id=&quot;scala.collection.SeqView.DropRight&quot; name=&quot;scala.collection.SeqView.DropRight&quot;&gt;DropRight&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;seqview%24%24dropright&quot; id=&quot;scala.collection.SeqView.DropRight&quot; name=&quot;scala.collection.SeqView.DropRight&quot;&gt;DropRight&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="513bb925ffd866f2bd77a39b4724cc3dfae38c05" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24id&quot; id=&quot;scala.collection.SeqView.Id&quot; name=&quot;scala.collection.SeqView.Id&quot;&gt;Id&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seqview%24%24id&quot; id=&quot;scala.collection.SeqView.Id&quot; name=&quot;scala.collection.SeqView.Id&quot;&gt;Id&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="dbfe5f632e636a49f4d5ce4bef75e4159e27eabe" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24map&quot; id=&quot;scala.collection.SeqView.Map&quot; name=&quot;scala.collection.SeqView.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seqview%24%24map&quot; id=&quot;scala.collection.SeqView.Map&quot; name=&quot;scala.collection.SeqView.Map&quot;&gt;マップ&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="55a081cb5bcc04d7b3860311dbd57007b88c1fc0" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24prepended&quot; id=&quot;scala.collection.SeqView.Prepended&quot; name=&quot;scala.collection.SeqView.Prepended&quot;&gt;Prepended&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seqview%24%24prepended&quot; id=&quot;scala.collection.SeqView.Prepended&quot; name=&quot;scala.collection.SeqView.Prepended&quot;&gt;先頭に&lt;/a&gt; .this.typeを追加</target>
        </trans-unit>
        <trans-unit id="e35052451f3c02cf58b6240f4a0af565e9d46b77" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24reverse&quot; id=&quot;scala.collection.SeqView.Reverse&quot; name=&quot;scala.collection.SeqView.Reverse&quot;&gt;Reverse&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seqview%24%24reverse&quot; id=&quot;scala.collection.SeqView.Reverse&quot; name=&quot;scala.collection.SeqView.Reverse&quot;&gt;逆&lt;/a&gt; .this.typeをます</target>
        </trans-unit>
        <trans-unit id="ac4e318721202129a604cc851b3e54610cbf8d2a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24sorted&quot; id=&quot;scala.collection.SeqView.Sorted&quot; name=&quot;scala.collection.SeqView.Sorted&quot;&gt;Sorted&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;seqview%24%24sorted&quot; id=&quot;scala.collection.SeqView.Sorted&quot; name=&quot;scala.collection.SeqView.Sorted&quot;&gt;ソートされた&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="0dd6ff4b73999ed04911d3efb1cf58b95b5c3a66" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24take&quot; id=&quot;scala.collection.SeqView.Take&quot; name=&quot;scala.collection.SeqView.Take&quot;&gt;Take&lt;/a&gt;.this.type</source>
          <target state="translated">最終デフ高専：&lt;a href=&quot;seqview%24%24take&quot; id=&quot;scala.collection.SeqView.Take&quot; name=&quot;scala.collection.SeqView.Take&quot;&gt;テイク&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="9d1c840fc60f13a9ad80f3dea58130e7d46b02c2" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;seqview%24%24takeright&quot; id=&quot;scala.collection.SeqView.TakeRight&quot; name=&quot;scala.collection.SeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;seqview%24%24takeright&quot; id=&quot;scala.collection.SeqView.TakeRight&quot; name=&quot;scala.collection.SeqView.TakeRight&quot;&gt;TakeRight&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e6942a73d59913a4dd3eb6a69402202f5d670d1c" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;Set&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;set&quot; id=&quot;scala.collection.Set&quot; name=&quot;scala.collection.Set&quot;&gt;設定し&lt;/a&gt;ます</target>
        </trans-unit>
        <trans-unit id="0ffcf66e5bf73d3049161089775350d537e301e8" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;設定し&lt;/a&gt;ます</target>
        </trans-unit>
        <trans-unit id="19d64583ee7d216b645f8b2438352e0f41984eb4" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;設定し&lt;/a&gt;ます</target>
        </trans-unit>
        <trans-unit id="bbd3da8e9a0e38e2cd88cc4a9fccffb630ae3d26" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;set%24%24set1&quot; id=&quot;scala.collection.immutable.Set.Set1&quot; name=&quot;scala.collection.immutable.Set.Set1&quot;&gt;Set1&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;set%24%24set1&quot; id=&quot;scala.collection.immutable.Set.Set1&quot; name=&quot;scala.collection.immutable.Set.Set1&quot;&gt;Set1&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3b196e306b2dd8ddefdf920e31b943efbdeb84cd" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;set%24%24set2&quot; id=&quot;scala.collection.immutable.Set.Set2&quot; name=&quot;scala.collection.immutable.Set.Set2&quot;&gt;Set2&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;set%24%24set2&quot; id=&quot;scala.collection.immutable.Set.Set2&quot; name=&quot;scala.collection.immutable.Set.Set2&quot;&gt;Set2&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="93942dae2ee93dfe8f264c35e9d1fdd32a898327" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;set%24%24set3&quot; id=&quot;scala.collection.immutable.Set.Set3&quot; name=&quot;scala.collection.immutable.Set.Set3&quot;&gt;Set3&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;set%24%24set3&quot; id=&quot;scala.collection.immutable.Set.Set3&quot; name=&quot;scala.collection.immutable.Set.Set3&quot;&gt;Set3&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e136f1cb1efd1746e60b5657836d5595f6dffd6b" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;set%24%24set4&quot; id=&quot;scala.collection.immutable.Set.Set4&quot; name=&quot;scala.collection.immutable.Set.Set4&quot;&gt;Set4&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;set%24%24set4&quot; id=&quot;scala.collection.immutable.Set.Set4&quot; name=&quot;scala.collection.immutable.Set.Set4&quot;&gt;Set4&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="6aeb6b9c82be2a61e35e20878f0f1507894d0de2" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="7a2bdd6a8f04e8fc18e95845301fc58de3e13482" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="5c3e81b7455f72ee95644cf78a87fd2b5a8c9efc" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4b0878a2e1cfb0b20410e77f89fdb069bc9de6a3" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="0f1e3aada21579e28a620a7632007eeef635a5f1" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="8d296f70676408945126d705fbf2e6fab354da41" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedmapops%24immutablekeysortedset&quot; id=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot; name=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot;&gt;ImmutableKeySortedSet&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;sortedmapops%24immutablekeysortedset&quot; id=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot; name=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot;&gt;ImmutableKeySortedSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f0baf3d0ff174904f030090ac3da3564f702d030" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedmapops%24keysortedset&quot; id=&quot;scala.collection.SortedMapOps.KeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.KeySortedSet&quot;&gt;KeySortedSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;sortedmapops%24keysortedset&quot; id=&quot;scala.collection.SortedMapOps.KeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.KeySortedSet&quot;&gt;KeySortedSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="24eb05b28ea09231de944d7d19ac4ee0cd08ff44" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="6d3ce57d9b1c553fce0e87137c5023c3089f652a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="96c414099d117082756529c5470b6dedf2f46c67" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="33ed68448c79dd32fd83ba1b411a3853af4cc37e" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ea952cdf725809d86057476c2f942cc0917d0c85" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f37ace1b621a3097cb075db8766feee85f11c9e4" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;stream%24%24cons&quot; id=&quot;scala.collection.immutable.Stream.Cons&quot; name=&quot;scala.collection.immutable.Stream.Cons&quot;&gt;Cons&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;stream%24%24cons&quot; id=&quot;scala.collection.immutable.Stream.Cons&quot; name=&quot;scala.collection.immutable.Stream.Cons&quot;&gt;Cons&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b9f7d5bc9c66a30ea81283c0d4a8b14ea3197d33" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;stream%24%24empty%24&quot; id=&quot;scala.collection.immutable.Stream.Empty&quot; name=&quot;scala.collection.immutable.Stream.Empty&quot;&gt;Empty&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;stream%24%24empty%24&quot; id=&quot;scala.collection.immutable.Stream.Empty&quot; name=&quot;scala.collection.immutable.Stream.Empty&quot;&gt;空の&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="826f9707b4a343988a3040b80e228403ba932a03" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4e75d9a6b98484ca47d8273162c5e1ddfd9fa259" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="2e622c033355a10bcc6e0881d34cbf53db368d57" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="49dc6b2f35ad3c328daa5fe4a2c6bd2618ce187f" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="fcd549e37ba6d65c3f8395398a50f35da34612a6" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="632b115719b9ec7cfbf96e6ddc5aeb643c8ba373" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3301315605ea1c91c37666c5f5466961d7d352ae" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="cc5b99c052d731e19863dee5a53f27c30e2b0e8a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4626f4bc10e659dcf1c4dd11af1bdc8b8cdb1f59" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="850463376b9b3347a92f8d4f98d0896f10e48224" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="43f3a046afbe5aeae4375fc38eba333f8cb50802" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="3f7e5b1d053239227d221cf2689b6e9769603a80" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="a1ba8658e24752fe1e7da6016ecf67014ccaef6c" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03e42f0b68db12162dc0c5a879c98d2e5098098a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24appended&quot; id=&quot;scala.collection.View.Appended&quot; name=&quot;scala.collection.View.Appended&quot;&gt;Appended&lt;/a&gt;.this.type</source>
          <target state="translated">最終デフ高専：&lt;a href=&quot;view%24%24appended&quot; id=&quot;scala.collection.View.Appended&quot; name=&quot;scala.collection.View.Appended&quot;&gt;アペンド&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4d213f923694daf6f641f363ec1803eb1bb61ab9" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24collect&quot; id=&quot;scala.collection.View.Collect&quot; name=&quot;scala.collection.View.Collect&quot;&gt;Collect&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;view%24%24collect&quot; id=&quot;scala.collection.View.Collect&quot; name=&quot;scala.collection.View.Collect&quot;&gt;収集し&lt;/a&gt;ます</target>
        </trans-unit>
        <trans-unit id="c7b449ddf462436c5bc649f61526c36cd2645e99" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24concat&quot; id=&quot;scala.collection.View.Concat&quot; name=&quot;scala.collection.View.Concat&quot;&gt;Concat&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24concat&quot; id=&quot;scala.collection.View.Concat&quot; name=&quot;scala.collection.View.Concat&quot;&gt;Concat&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="b88c29e88a6959a63436e35eb79c91165557de26" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24distinctby&quot; id=&quot;scala.collection.View.DistinctBy&quot; name=&quot;scala.collection.View.DistinctBy&quot;&gt;DistinctBy&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;view%24%24distinctby&quot; id=&quot;scala.collection.View.DistinctBy&quot; name=&quot;scala.collection.View.DistinctBy&quot;&gt;DistinctBy&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="26762b14db910ddc523ead8a570e0848bc966ad6" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24drop&quot; id=&quot;scala.collection.View.Drop&quot; name=&quot;scala.collection.View.Drop&quot;&gt;Drop&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;view%24%24drop&quot; id=&quot;scala.collection.View.Drop&quot; name=&quot;scala.collection.View.Drop&quot;&gt;ドロップ&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="248ea1e07ef45aad0a91d614e046b18ab76a9770" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24dropright&quot; id=&quot;scala.collection.View.DropRight&quot; name=&quot;scala.collection.View.DropRight&quot;&gt;DropRight&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;view%24%24dropright&quot; id=&quot;scala.collection.View.DropRight&quot; name=&quot;scala.collection.View.DropRight&quot;&gt;DropRight&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="9dfec368db572455c765dfd17b187ded6952c2c1" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24dropwhile&quot; id=&quot;scala.collection.View.DropWhile&quot; name=&quot;scala.collection.View.DropWhile&quot;&gt;DropWhile&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24dropwhile&quot; id=&quot;scala.collection.View.DropWhile&quot; name=&quot;scala.collection.View.DropWhile&quot;&gt;DropWhile&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="18372bbed32e905cc1fcd97967aa23bbcd5eb6c0" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24elems&quot; id=&quot;scala.collection.View.Elems&quot; name=&quot;scala.collection.View.Elems&quot;&gt;Elems&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24elems&quot; id=&quot;scala.collection.View.Elems&quot; name=&quot;scala.collection.View.Elems&quot;&gt;Elems&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f06fd0618c38420a46d05e8bcdafc146d3f395f3" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24empty%24&quot; id=&quot;scala.collection.View.Empty&quot; name=&quot;scala.collection.View.Empty&quot;&gt;Empty&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24empty%24&quot; id=&quot;scala.collection.View.Empty&quot; name=&quot;scala.collection.View.Empty&quot;&gt;空の&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ceb17def4afd1c9b724bee69629ea9e1080a5643" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24fill&quot; id=&quot;scala.collection.View.Fill&quot; name=&quot;scala.collection.View.Fill&quot;&gt;Fill&lt;/a&gt;.this.type</source>
          <target state="translated">最終デフ高専：&lt;a href=&quot;view%24%24fill&quot; id=&quot;scala.collection.View.Fill&quot; name=&quot;scala.collection.View.Fill&quot;&gt;塗りつぶし&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e15d9c739e36f045cf3f3dbddfd8a6853720a5f6" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24filter&quot; id=&quot;scala.collection.View.Filter&quot; name=&quot;scala.collection.View.Filter&quot;&gt;Filter&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24filter&quot; id=&quot;scala.collection.View.Filter&quot; name=&quot;scala.collection.View.Filter&quot;&gt;Filter&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="f7d82f201831cdc50e5a4f0488de42b70130e2ae" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24flatmap&quot; id=&quot;scala.collection.View.FlatMap&quot; name=&quot;scala.collection.View.FlatMap&quot;&gt;FlatMap&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24flatmap&quot; id=&quot;scala.collection.View.FlatMap&quot; name=&quot;scala.collection.View.FlatMap&quot;&gt;FlatMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="54d7cb095ffc831a355ef95c4c10dee42c9f0672" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24iterate&quot; id=&quot;scala.collection.View.Iterate&quot; name=&quot;scala.collection.View.Iterate&quot;&gt;Iterate&lt;/a&gt;.this.type</source>
          <target state="translated">最終DEF蔵：&lt;a href=&quot;view%24%24iterate&quot; id=&quot;scala.collection.View.Iterate&quot; name=&quot;scala.collection.View.Iterate&quot;&gt;反復&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="73df184f31095219373732a1225b52ca12ac5213" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24leftpartitionmapped&quot; id=&quot;scala.collection.View.LeftPartitionMapped&quot; name=&quot;scala.collection.View.LeftPartitionMapped&quot;&gt;LeftPartitionMapped&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24leftpartitionmapped&quot; id=&quot;scala.collection.View.LeftPartitionMapped&quot; name=&quot;scala.collection.View.LeftPartitionMapped&quot;&gt;LeftPartitionMapped&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="618fe7c6ac418f7497e20bc235c86694569e0086" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24map&quot; id=&quot;scala.collection.View.Map&quot; name=&quot;scala.collection.View.Map&quot;&gt;Map&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24map&quot; id=&quot;scala.collection.View.Map&quot; name=&quot;scala.collection.View.Map&quot;&gt;マップ&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="a8c3d79a4d81661a19ef8cade04254fd1ac2cff7" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24padto&quot; id=&quot;scala.collection.View.PadTo&quot; name=&quot;scala.collection.View.PadTo&quot;&gt;PadTo&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24padto&quot; id=&quot;scala.collection.View.PadTo&quot; name=&quot;scala.collection.View.PadTo&quot;&gt;PadTo&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="dac7df173f344619f6989fcf6a87079f03ac73eb" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24prepended&quot; id=&quot;scala.collection.View.Prepended&quot; name=&quot;scala.collection.View.Prepended&quot;&gt;Prepended&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24prepended&quot; id=&quot;scala.collection.View.Prepended&quot; name=&quot;scala.collection.View.Prepended&quot;&gt;先頭に&lt;/a&gt; .this.typeを追加</target>
        </trans-unit>
        <trans-unit id="ad7fdc3742498a1ead0ac221b8678b6a14d0aabb" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24rightpartitionmapped&quot; id=&quot;scala.collection.View.RightPartitionMapped&quot; name=&quot;scala.collection.View.RightPartitionMapped&quot;&gt;RightPartitionMapped&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24rightpartitionmapped&quot; id=&quot;scala.collection.View.RightPartitionMapped&quot; name=&quot;scala.collection.View.RightPartitionMapped&quot;&gt;RightPartitionMapped&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ee11f4896717f226c7ea68d86280727211db2c1a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24scanleft&quot; id=&quot;scala.collection.View.ScanLeft&quot; name=&quot;scala.collection.View.ScanLeft&quot;&gt;ScanLeft&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24scanleft&quot; id=&quot;scala.collection.View.ScanLeft&quot; name=&quot;scala.collection.View.ScanLeft&quot;&gt;ScanLeft&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="1356b5633cf5d1f263447a519cd06a352b8164dd" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24single&quot; id=&quot;scala.collection.View.Single&quot; name=&quot;scala.collection.View.Single&quot;&gt;Single&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24single&quot; id=&quot;scala.collection.View.Single&quot; name=&quot;scala.collection.View.Single&quot;&gt;単一の&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="fbbb5d7a5565600cbd7e35e2beb66f9b5ce956ef" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24tabulate&quot; id=&quot;scala.collection.View.Tabulate&quot; name=&quot;scala.collection.View.Tabulate&quot;&gt;Tabulate&lt;/a&gt;.this.type</source>
          <target state="translated">最終デフ高専：&lt;a href=&quot;view%24%24tabulate&quot; id=&quot;scala.collection.View.Tabulate&quot; name=&quot;scala.collection.View.Tabulate&quot;&gt;集計&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="26aeed02048146731e4faa2c8c1a0ff56a45bc71" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24take&quot; id=&quot;scala.collection.View.Take&quot; name=&quot;scala.collection.View.Take&quot;&gt;Take&lt;/a&gt;.this.type</source>
          <target state="translated">最終デフ高専：&lt;a href=&quot;view%24%24take&quot; id=&quot;scala.collection.View.Take&quot; name=&quot;scala.collection.View.Take&quot;&gt;テイク&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="442cd9d58590ecd42f04d040a04c23b9b56401a4" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24takeright&quot; id=&quot;scala.collection.View.TakeRight&quot; name=&quot;scala.collection.View.TakeRight&quot;&gt;TakeRight&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;view%24%24takeright&quot; id=&quot;scala.collection.View.TakeRight&quot; name=&quot;scala.collection.View.TakeRight&quot;&gt;TakeRight&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="e5aad143c014aade863369a37f8740bd7b0ab6c8" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24takewhile&quot; id=&quot;scala.collection.View.TakeWhile&quot; name=&quot;scala.collection.View.TakeWhile&quot;&gt;TakeWhile&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24takewhile&quot; id=&quot;scala.collection.View.TakeWhile&quot; name=&quot;scala.collection.View.TakeWhile&quot;&gt;TakeWhile&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="503126ca06e976d4d5a478b7f57d973983a94596" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24unfold&quot; id=&quot;scala.collection.View.Unfold&quot; name=&quot;scala.collection.View.Unfold&quot;&gt;Unfold&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;view%24%24unfold&quot; id=&quot;scala.collection.View.Unfold&quot; name=&quot;scala.collection.View.Unfold&quot;&gt;展開し&lt;/a&gt;ます</target>
        </trans-unit>
        <trans-unit id="c68327f285959f00b8fbdcd301a5e86d609b712d" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24updated&quot; id=&quot;scala.collection.View.Updated&quot; name=&quot;scala.collection.View.Updated&quot;&gt;Updated&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：.this.typeを&lt;a href=&quot;view%24%24updated&quot; id=&quot;scala.collection.View.Updated&quot; name=&quot;scala.collection.View.Updated&quot;&gt;更新&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d742dd79b665208b0d57530c6189e218a6e987da" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24zip&quot; id=&quot;scala.collection.View.Zip&quot; name=&quot;scala.collection.View.Zip&quot;&gt;Zip&lt;/a&gt;.this.type</source>
          <target state="translated">final def coll：&lt;a href=&quot;view%24%24zip&quot; id=&quot;scala.collection.View.Zip&quot; name=&quot;scala.collection.View.Zip&quot;&gt;Zip&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="c169d8e77df7c00a9fe9c530dc6d592b95dea38f" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24zipall&quot; id=&quot;scala.collection.View.ZipAll&quot; name=&quot;scala.collection.View.ZipAll&quot;&gt;ZipAll&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;view%24%24zipall&quot; id=&quot;scala.collection.View.ZipAll&quot; name=&quot;scala.collection.View.ZipAll&quot;&gt;ZipAll&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4c41aaa2f96cf7698cef9f43ddee5b3ec6839d47" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;view%24%24zipwithindex&quot; id=&quot;scala.collection.View.ZipWithIndex&quot; name=&quot;scala.collection.View.ZipWithIndex&quot;&gt;ZipWithIndex&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;view%24%24zipwithindex&quot; id=&quot;scala.collection.View.ZipWithIndex&quot; name=&quot;scala.collection.View.ZipWithIndex&quot;&gt;ZipWithIndex&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="ba3bdfc63cd0da2ad5a11fa43d4c8bbf1def9a54" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="a3fe5367b7f721b865a3f6e9717cf0446084ef4a" translate="yes" xml:space="preserve">
          <source>final def coll: &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;.this.type</source>
          <target state="translated">最終的なdef coll：&lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="4fa9fd964a09bab071face0be29be928cbdbfd93" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;、&lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8ef44fdaa287304be24ed9da1adcf11274dd767a" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;、&lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4e0b454f77ebbabfc82e61ea5f7c67cd2b63134e" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="df8df7191ba273c561c9939b69466380c0f8ceab" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f16bbb8bc11de63447a58db0b0580925ce759ef8" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c4f4feb67b8243bad7208fd3beda712c8b2445ed" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="56dbf802a9db33d6864176f37e0695ff3538cea9" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;、&lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5253c4ed12c7996de5ef1f1041d5847b2c60e8d1" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;、&lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a55eb8db09e3d4bfdeffab3f32e618691a9565e9" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;、&lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.collect.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="36df6ab61c60c5826c600906a051b1995a5c3962" translate="yes" xml:space="preserve">
          <source>final def collect[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.concurrent.Future.never.collect.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.collect.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">final def collect [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;、&lt;span name=&quot;scala.concurrent.Future.never.collect.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.collect.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="80dacc13cca98554b1bb94d80998cfbbd1a5caa9" translate="yes" xml:space="preserve">
          <source>final def column(&lt;span name=&quot;pos&quot;&gt;pos: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def column（&lt;span name=&quot;pos&quot;&gt;pos：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6d4ddf81f88663ee06a7d11138d437022e08726a" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="35544b9635c410e90d45585a82ef6e3872ed1fcd" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="baf4c947b592c92b08245e08833a4fbb39708df8" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ba0f6d48b8ec4b20f2b700d69bee8a1b95ea1181" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf5640d493157ad60a13219e1285905e9b312be9" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="66914f20c2b8e62ef7e4eea2ee697322804654fb" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ec45a691a98d75128542d59934740f4aa4ca70d2" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dacdac8b5fa64a617dbb2cf6f6d5d43bb867f41b" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ba76067f1c8e2824c0d3f0f32eea96a2c3b1f2d9" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4a4b2e5aab9ac41ed06caa3581601a45d6062370" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ab8212b8e438a71471bb5ffe6206d377d56d6569" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="853ea9a029f0dbe000f7456f1e61b83e9740b8cc" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="81306df63d5178b12caf0280e5109cc1447e5444" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="95ff5b09c704d589570b3812cb3ca9e85085d97e" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b8d7986f74452a04286b315f71092f1f2135759e" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fceea4ee15e530f2a4ded878f575cb91d45b266e" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f0a278f678448a3bdb5c2ab17108114588713f20" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f93a4c9e06b8ca9d48a0983d0bdd9a1e64c78f15" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cac09df0ca04aa13c247dec9b0a80f984a7e8dd0" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="da88729fca5ca66529b761ed0606cc3adecff050" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b1f5e637743ed46bab76a8b91fd9b3674fe9341c" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eed4346efb1d0c3892898dc60bb584420f008424" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="24148cd495809c0802881d55f289a46372fbe132" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="815aa65defe758c4bada1c087f11371bb6b0cd75" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1f1604d6a90f5dd1d4f5bd7488208b2ed9008f1f" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf2c84f9adc211e1c3861047c02466f954b224cc" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a80e4d857864a214d887b3f57969754b4bda3d97" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8fb0d656f9b3dd09510c3c73cfbbb170dbbafff6" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf78c13a0b50f1d6efbad56efc9eddb8b3dff4d0" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ccd5394ff397cb97877d1f167ecb124e7768274" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="68ebb1050d68c727c36dd97a0f1680845e91d234" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[_ &amp;lt;: &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [_ &amp;lt;：&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）（implicit &lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dabc284fd9418d0404cb091951e89e3a33d7e5ae" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[_ &amp;lt;: &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [_ &amp;lt;：&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）（implicit &lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="def533f4d12ccdeffdea8c39275695a01a8593de" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）（implicit &lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="23a534513c124525833edc8e081f143d9ffbfd0d" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）（implicit &lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;scala.collection.ArrayOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2462eb5f608184f85eaf9c32f121dbe9e8457b3b" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5db13b0490acd9512da022499c4878097523e8df" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8a7d73429fe4af83fc78d9239b727f4dc9e868a9" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2194eb79a0b8b4db03f1d6f5822ebd5a6d39dbe4" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2ab5fb5da9d65e266c993b6e1826effcfae201f6" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="76755f03d52434d87dc812c5bb3270d0d579f7bc" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3e9e3a1dc03dc3477f8ba89a1561ebf974edc821" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="709c615814948db815a23736cd738d337dce621b" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="94ae35314dc7c4585515a5ac4da4abeeba5fc57d" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="979999292876abe241e4992640316aee37e4025a" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5df0c8af8c75f9305d4a72eb66391eb2fb48cb71" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bd193749062a2cfad903b776c696a827684b005c" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fb17f12257eeef5ff6c33e167b3f46ec232b4181" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4ecc61e33712bac4525df04310eb7e56ff905a7" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e8f87d92023b752dfc638680dba9e5d36faf8a5" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.LinearSeq&quot; name=&quot;scala.collection.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8340c0834317a2a900520618a2f98075334021dc" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b119b6fc8b222cdf8afe58ce46671a8ac65d0d0c" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.Seq&quot; name=&quot;scala.collection.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b9ab092d1e5ba245eba007cc049b8c79be0b7b54" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;collection/immutable/indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;collection.immutable.IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b2142f680794bed43f003a68026214695f82f45a" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6364019b4358133aab5253aac4978710b5bc941e" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="01081edb603e05e6a40081793f55469365d4f743" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8c3a04e9d323d41452d48db3f85867356ec1fe5a" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6d17d5686e518a28b9610429664cc0cf633dcb25" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4370d9aacf2f4cbf919ee70ab1f6cd90da2f7a77" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="60aac25bbadefeb86a88449bfd25ea2bcaff5f3a" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5b13fa68acdd8edbdf68f886fc2f28ea77dee994" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5c7427b9f103c51f35926142beb28d5b795f2ee4" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a715d0c529c6a86ca5435db2f9f9ed67968a7550" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="30df8742be5f7184b485b3fc5dcad853543ac326" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="494ff5c28483580193f815e761708951d3a5006d" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca435f20b56ee5432af06edb570834b6b0aa4dc7" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="62c0158bb0ca9ef247afa784936dae1d4c5a4df2" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a476bdd2b84e50bf9890aba1f79093478b1f07b" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="54d1bc1ae2652e40364c09b5e342d13f40090a54" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2e65c9ef5f92ab66a81d88abb64ad9a6ec99cc0" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e97099671e98b79244f2569fc81f9c983e56e0b" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f23a121d2fdf67eeca0195a5110d71d242bcb8e7" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1c02c47c5594f26b0108a12e8cda128220f2f402" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d117c5cd865b76edb34817bee26a1fb67b45683f" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3a9c35417f837112d779e70ce23635d1458fe642" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="edd3031479e71e9f22d414fcc419e8ae98b6b820" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c3f146fbe20eef97c7234e5a3cd584be546ac6e5" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6e9fb1b63e09260c0038706a4a1a0a66617de393" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4785aaa3be156735e0a589113ef6242e108c6b79" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt; IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt; IndexedSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2e9159b94e4c04387eb345b4b1b9736dfda867cf" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt; IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt; IndexedSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="729e313aa8cfd84a7e9ae0ac3d11427bce051261" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt; IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt; IndexedSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a77f04433e74d5570ecd30aba09d9830b2d15db8" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt; IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt; Queue&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1f4f5462df8162d0d82fb92b1110da46307eda3c" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="945764d07ec49339b5606069af3ee504d2808184" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2678c10a5a4d994ed4d4e96ad096c383b3b5076b" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt; IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt; Stream&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c7ec2dcb771e3fdc5f08934ccd40c49b143ae201" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt; Stream&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78610d513491e2589bbffa62539635054809ada6" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b920f57d91fcb1b27e86c39cf5d83c4f893e3325" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="509feff4c88acb5eb0d238e708c0e39305add05d" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="68155c1533d2bfb9246ad406914366da53948b91" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="298bab1b2e72271c3586c2c347949f7f8ee3cdc7" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;サフィックス：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="95596020587b5e13d8f925de23fbbce033f35cad" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;接尾辞：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="45f4cb8ddc4c7b3df68f0c2551308acfe5ac4bf8" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;接尾辞：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt; ArrayDeque&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="15bbadd8c36435376c4c0da7c13f1a3c91a7869e" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;接尾辞：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e95fd7bf688681ab046151bae6bf666e29a458ad" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;接尾辞：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="cf01ea003066b34e52020f8d26133a7b062d240c" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;接尾辞：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d51cd22b15d97d99842c4932bbdc5fce39f2269f" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;接尾辞：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a58b3192251cb140d3393871440f5f080608a8b9" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;接尾辞：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt; IndexedBuffer&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3429142932edb3a372372646dbbed1fb5c200ae8" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt; IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt; IndexedSeq&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="426c003d31e995f5e1843555336a5c4ccba74e75" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d642c583fc80101e52486f9aa0a9c99bf40197e3" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6286d694dd7a18b1a0d27ad5835e25f0e40b63cf" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt; IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt; Queue&lt;/a&gt; [&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a2d2e3f7c4e815c62a040a5b1766b28a85dfe35b" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f64e663a914d005f5f9b916c7225abc585845d15" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0c199fa3f0cccb3fc0f1f664983a5db7458241b" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b7c73ea6e906fd6a169819bf3d07f1ffb83e0c01" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c79c24e614a632025eb5d7cc6dcdf8fcc4555b4e" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../collection/mutable/seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;collection.mutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93a8a427623494d0daac0a1ea61ef1f891a94f72" translate="yes" xml:space="preserve">
          <source>final def concat[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;suffix&quot;&gt;suffix: &lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def concat [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;suffix&quot;&gt;suffix：&lt;a href=&quot;../collection/iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;collection.IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt; [ &lt;span name=&quot;scala.collection.SeqOps.concat.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b0e9d7beab301d39048e08123bc97137b7c8316f" translate="yes" xml:space="preserve">
          <source>final def contains(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef contains（&lt;span name=&quot;key&quot;&gt; key：&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="357102bf3bf00c4924d58b5c23185909dafba647" translate="yes" xml:space="preserve">
          <source>final def contains(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef contains（&lt;span name=&quot;x&quot;&gt; x：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cb826ab88fb712496ad5737f2a8289511fc1f62f" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.List.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def contains [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;なし&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.collection.immutable.List.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f19334535d6a384fbbde452bda7a2b70f6b87f34" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.Option.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def contains [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;なし&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.Option.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b17d39044d017ed90f9720af35383310a07d381" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.Option.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def contains [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.Option.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="682fda2f8a3d585d79a72d2b0c28e67555a282f3" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.Option.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def contains [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.Option.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5682ffa4ed856d27983cb888d07956ebccbf5ab6" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.List.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def contains [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.collection.immutable.List.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce25c9f6ebcd61190cbede27ca76e07cfdbc23cc" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.List.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def contains [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.collection.immutable.List.contains.A1&quot;&gt;A1&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f00e46bdf5dd93d342a62c103f3a910ec3ee8b9" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Range.contains.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef contains [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.collection.immutable.Range.contains.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="765c60e70b3da9dbcb88aaf41cb6290d6a9adaa1" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.util.Either.contains.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef contains [ &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;：&lt;span name=&quot;scala.util.Either.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.util.Either.contains.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="35910d7e3db37bdf1e14a4848aa69bf7954a61b8" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.util.Either.contains.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef contains [ &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;：&lt;span name=&quot;scala.util.Left.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.util.Either.contains.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e39f917b7ca3ebcd2ef1d7aaefbd79ffa2b85362" translate="yes" xml:space="preserve">
          <source>final def contains[&lt;span name=&quot;B1&quot;&gt;B1 &amp;gt;: &lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.util.Either.contains.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef contains [ &lt;span name=&quot;B1&quot;&gt;B1&amp;gt;：&lt;span name=&quot;scala.util.Right.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt; elem：&lt;span name=&quot;scala.util.Either.contains.B1&quot;&gt;B1&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d845ed5d4a2195ed0c1a12c7708ae63ab0e45c42" translate="yes" xml:space="preserve">
          <source>final def copy(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = start&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = end&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = step&lt;/span&gt;, &lt;span name=&quot;isInclusive&quot;&gt;isInclusive: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; = isInclusive&lt;/span&gt;): &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="translated">final def copy（&lt;span name=&quot;start&quot;&gt;start：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = start&lt;/span&gt;、&lt;span name=&quot;end&quot;&gt;end：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = end&lt;/span&gt;、&lt;span name=&quot;step&quot;&gt;step：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = step&lt;/span&gt;、&lt;span name=&quot;isInclusive&quot;&gt; isInclusive：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; = isInclusive&lt;/span&gt;）：&lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;範囲&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddf89e972c770629927935dc7b0701bec2c33803" translate="yes" xml:space="preserve">
          <source>final def current: &lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;</source>
          <target state="translated">最終的なdef current：&lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9e9151038af58a651b25b2e7a82140167b63b3ca" translate="yes" xml:space="preserve">
          <source>final def defaultBlockContext: &lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;</source>
          <target state="translated">final def defaultBlockContext：&lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b8bc31c2dd384378c342e9f13ac19ff1589b6cbb" translate="yes" xml:space="preserve">
          <source>final def defaultInitialCapacity: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def defaultInitialCapacity：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38da3b68b6a8ed5338333d5557f820c1d21d71ff" translate="yes" xml:space="preserve">
          <source>final def defaultLoadFactor: &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;</source>
          <target state="translated">最終的なdef defaultLoadFactor： &lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt; Double&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e54718bf23494bb4e087a5bef83a2475afed800f" translate="yes" xml:space="preserve">
          <source>final def delegate[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;body&quot;&gt;body: =&amp;gt; &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.delegate.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.delegate.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def delegate [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;body&quot;&gt;body：=&amp;gt; &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.delegate.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.delegate.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e87d3450d48dbaf561c9f2e7241a48237dfb9ebf" translate="yes" xml:space="preserve">
          <source>final def drop(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="translated">最終的なdef drop（&lt;span name=&quot;n&quot;&gt;n：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;範囲&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8635c19a2e5e822d248d42c0415abd25df0eb590" translate="yes" xml:space="preserve">
          <source>final def dropRight(&lt;span name=&quot;n&quot;&gt;n: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="translated">final def dropRight（&lt;span name=&quot;n&quot;&gt;n：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;範囲&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccefbf269e5e876241070e654e0d9ff702c37ed2" translate="yes" xml:space="preserve">
          <source>final def dropWhile(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="translated">final def dropWhile（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;範囲&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f36546b5c7a35f78238fa3740a09e4fce6d9318d" translate="yes" xml:space="preserve">
          <source>final def empty[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.empty.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def empty [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]：&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;イテレーター&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.empty.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aa78f5dfbcafe6d419c64b279e97e6e0e54e508e" translate="yes" xml:space="preserve">
          <source>final def encode(&lt;span name=&quot;line&quot;&gt;line: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;column&quot;&gt;column: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def encode（&lt;span name=&quot;line&quot;&gt;行：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;column&quot;&gt;列：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e00f41ecdd82c3f267228ef170f66ae1d2212964" translate="yes" xml:space="preserve">
          <source>final def ensureCapacity(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">最終的なdef EnsureCapacity（&lt;span name=&quot;idx&quot;&gt;idx：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5150e56d9d5f5207d1b3e1a6e8dac7818913f11b" translate="yes" xml:space="preserve">
          <source>final def ensureSize(&lt;span name=&quot;size&quot;&gt;size: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">最終的なdef EnsureSize（&lt;span name=&quot;size&quot;&gt;size：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f54b50f154540d7305beefaf7ac6b1ffe99f587" translate="yes" xml:space="preserve">
          <source>final def eq(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def eq（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96c4424efb88775bbbd4db42c305af171b49666b" translate="yes" xml:space="preserve">
          <source>final def eq(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def eq（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5d15564c0e9b1fd34cef2e119d15060302e06d2" translate="yes" xml:space="preserve">
          <source>final def eq(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def eq（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cae62274402e1a691caa3973e0b2b6d7ad160d61" translate="yes" xml:space="preserve">
          <source>final def equals(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def equals（&lt;span name=&quot;other&quot;&gt;other：&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="422ab344609b9fe596c7e6812486741f92591fc9" translate="yes" xml:space="preserve">
          <source>final def exclude(&lt;span name=&quot;ordinal&quot;&gt;ordinal: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;generic.BitOperations.Int.Int&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def exclude（&lt;span name=&quot;ordinal&quot;&gt;ordinal：&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;generic.BitOperations.Int.Int&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bfe6351455ae93a662440aedd92ec477ccfaa09e" translate="yes" xml:space="preserve">
          <source>final def execute(&lt;span name=&quot;runnable&quot;&gt;runnable: &lt;span name=&quot;java.lang.Runnable&quot;&gt;Runnable&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def execute（&lt;span name=&quot;runnable&quot;&gt;runnable：&lt;span name=&quot;java.lang.Runnable&quot;&gt;Runnable&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d995329316fa7bd6ea16a29e1025ee5f2f833508" translate="yes" xml:space="preserve">
          <source>final def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def exists（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c5fab68e9c8a9ae8ac1606296831dc2b320d4744" translate="yes" xml:space="preserve">
          <source>final def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def exists（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3ce6f3566c509d3b73e1eac84e95ceedf131f03b" translate="yes" xml:space="preserve">
          <source>final def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def exists（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="681cfd6f30a2f6a14cd6d7a0d22014e03e69deb4" translate="yes" xml:space="preserve">
          <source>final def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def exists（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7f48edd0ae8fdd774734253b2663b478609ad7ee" translate="yes" xml:space="preserve">
          <source>final def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def exists（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d84944f9df8b626b798ad26253d447d16f1f45b6" translate="yes" xml:space="preserve">
          <source>final def exists(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def exists（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b34c99984fe3b564466b9b829d91f9f173fa8c2" translate="yes" xml:space="preserve">
          <source>final def failed: &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;]</source>
          <target state="translated">最終的なdefが失敗しました：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ccc290fa5d2ce672b5e7995ec95cc4d22f0715ec" translate="yes" xml:space="preserve">
          <source>final def failed[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;exception&quot;&gt;exception: &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.failed.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def failed [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;exception&quot;&gt;exception：&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.failed.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6a041afaf8c9df2d05ea18259185e69be9d33f20" translate="yes" xml:space="preserve">
          <source>final def failed[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;exception&quot;&gt;exception: &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Promise.failed.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def failed [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;exception&quot;&gt;exception：&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Promise.failed.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="77089229772670c3e8d95dee35874ae16f3093ca" translate="yes" xml:space="preserve">
          <source>final def fallbackTo[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.fallbackTo.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.fallbackTo.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">final def fallbackTo [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;that&quot;&gt;that：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.fallbackTo.U&quot;&gt;U&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.fallbackTo.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="30ef376104b9ef2804a0a564a3812480b38ec665" translate="yes" xml:space="preserve">
          <source>final def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">final def filter（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="fb8bfceaa14534f6efde58f7d8a05e3d7986bd70" translate="yes" xml:space="preserve">
          <source>final def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">final def filter（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="db53fcff194143e2c8c48b400b92de2482f6a24b" translate="yes" xml:space="preserve">
          <source>final def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def filter（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8563c9d8d69ec8acaae96979a0fc541faec254fb" translate="yes" xml:space="preserve">
          <source>final def filter(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def filter（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c27458c78f7aa139315d66bba2d876128cafbfdb" translate="yes" xml:space="preserve">
          <source>final def filterNot(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">final def filterNot（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="c84e4d129fd4c7c71d7c8b5b70b40a23b567e047" translate="yes" xml:space="preserve">
          <source>final def filterNot(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def filterNot（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c25391636f0b324bb6eb9555947dc7ac4a98bd26" translate="yes" xml:space="preserve">
          <source>final def filterNot(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def filterNot（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f569f93984c74f34e6a095e390992d281977499a" translate="yes" xml:space="preserve">
          <source>final def finalizeHash(&lt;span name=&quot;hash&quot;&gt;hash: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;length&quot;&gt;length: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def finalizeHash（&lt;span name=&quot;hash&quot;&gt;hash：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;length&quot;&gt;length：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2813cc567745353c40f693f785960d46072bcb37" translate="yes" xml:space="preserve">
          <source>final def find(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">final def find（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="81966ae95342aa2aaf2b7894db280a25b9a63c24" translate="yes" xml:space="preserve">
          <source>final def find(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def find（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d0317b8f4cc7bd0aa387fda9dc54a21ac999ac13" translate="yes" xml:space="preserve">
          <source>final def find(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def find（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b6162b9bfbd024c95a26bf08d69cadca9a6767fd" translate="yes" xml:space="preserve">
          <source>final def find[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;futures&quot;&gt;futures: &lt;a href=&quot;../collection/immutable/iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;collection.immutable.Iterable&lt;/a&gt;[&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.find.T&quot;&gt;T&lt;/span&gt;]]&lt;/span&gt;)(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.concurrent.Future.find.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.find.T&quot;&gt;T&lt;/span&gt;]]</source>
          <target state="translated">final def find [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;futures&quot;&gt;futures：&lt;a href=&quot;../collection/immutable/iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;collection.immutable.Iterable&lt;/a&gt; [ &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.find.T&quot;&gt;T&lt;/span&gt; ]]&lt;/span&gt;）（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.concurrent.Future.find.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;a href=&quot;../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.find.T&quot;&gt;T&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="7341a226949b71efe3db1e1cd9f108447980e335" translate="yes" xml:space="preserve">
          <source>final def firstCompletedOf[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;futures&quot;&gt;futures: &lt;a href=&quot;../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.firstCompletedOf.T&quot;&gt;T&lt;/span&gt;]]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.firstCompletedOf.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def firstCompletedOf [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;futures&quot;&gt;futures：&lt;a href=&quot;../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.firstCompletedOf.T&quot;&gt;T&lt;/span&gt; ]]&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.firstCompletedOf.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="53e5b3a2e13db7938138f22987ea2877e1e04a1e" translate="yes" xml:space="preserve">
          <source>final def firstKey: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;</source>
          <target state="translated">最終的な定義firstKey：&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="237f05bab9a855f29ebdea418596c6a24a4dcea7" translate="yes" xml:space="preserve">
          <source>final def firstKey: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;</source>
          <target state="translated">最終的な定義firstKey： &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt; LongMapUtils.Long&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1654a8ff47071daa9f31606b096b71d21d9da4fb" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3117b8735a8ad630a754c60c880801c2a999206e" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [&lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="df7fadedf2777b233493f771932949d4e86f6949" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Option.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [&lt;span name=&quot;scala.Option.flatMap.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a6b6429765f851888578f4d0608a686507deff4b" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Option.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [&lt;span name=&quot;scala.Option.flatMap.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="21889eec1cb9e8f804f2ce7f2f5b049ad4c88c58" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Option.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [&lt;span name=&quot;scala.Option.flatMap.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a5a1b9d1176e07f32618e0c008ed017deb31c980" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3f4c12803e38b4e9f33aea42df1746f5911c75bb" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="47f8f258ff7e73907950145f5ca02a7551b0ec5a" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="10351106427193dc255b54126397de79bf693c81" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="93862db4774c9f20bae73e9335127e637170e27b" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8daafc8ce0928224139a1751183da8b6c036ddef" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3f6409a9c106cf1339804b461b61a85a68a5e78d" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="d97ad2f9813b59838b8a4f58a2dc2bdd829e1cc0" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [&lt;span name=&quot;scala.util.control.TailCalls.TailRec.flatMap.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2c7a9772c630cf85a4976a1dc883a5ae91675132" translate="yes" xml:space="preserve">
          <source>final def flatMap[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.flatMap.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.flatMap.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">final def flatMap [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.flatMap.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.flatMap.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b5170e8a6cf2c5e63d2a39be2031ad6d50e6b12c" translate="yes" xml:space="preserve">
          <source>final def flatten[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.flatten.S&quot;&gt;S&lt;/span&gt;]]&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.flatten.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">final def flatten [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ]（implicit &lt;span name=&quot;ev&quot;&gt;ev：&lt;a href=&quot;../%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;：&amp;lt;&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;、&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.flatten.S&quot;&gt;S&lt;/span&gt; ]]&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.flatten.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7602a212811f421d346de7649b2da3bbe1d5c7ff" translate="yes" xml:space="preserve">
          <source>final def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;z&quot;&gt;z：&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;op&quot;&gt;op：（&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;、&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="8c44238261abf7b455809ad962562c78a8bcc742" translate="yes" xml:space="preserve">
          <source>final def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;z&quot;&gt;z：&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;op&quot;&gt;op：（&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3b938648cad7c7faed2721b4dd960e2eed7be28c" translate="yes" xml:space="preserve">
          <source>final def foldLeft[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def foldLeft [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;z&quot;&gt;z：&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;op&quot;&gt;op：（&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.Stream.foldLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3ef36375595aa80579d59bbaba15ba620da6d07e" translate="yes" xml:space="preserve">
          <source>final def foldLeft[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R&lt;/span&gt;](&lt;span name=&quot;futures&quot;&gt;futures: &lt;a href=&quot;../collection/immutable/iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;collection.immutable.Iterable&lt;/a&gt;[&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.foldLeft.T&quot;&gt;T&lt;/span&gt;]]&lt;/span&gt;)(&lt;span name=&quot;zero&quot;&gt;zero: &lt;span name=&quot;scala.concurrent.Future.foldLeft.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.concurrent.Future.foldLeft.R&quot;&gt;R&lt;/span&gt;, &lt;span name=&quot;scala.concurrent.Future.foldLeft.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.foldLeft.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.foldLeft.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="translated">final def foldLeft [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;、&lt;span name=&quot;R&quot;&gt;R&lt;/span&gt; ]（&lt;span name=&quot;futures&quot;&gt;futures：&lt;a href=&quot;../collection/immutable/iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;collection.immutable.Iterable&lt;/a&gt; [ &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.foldLeft.T&quot;&gt;T&lt;/span&gt; ]]&lt;/span&gt;）（&lt;span name=&quot;zero&quot;&gt;zero：&lt;span name=&quot;scala.concurrent.Future.foldLeft.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;op&quot;&gt;op：（&lt;span name=&quot;scala.concurrent.Future.foldLeft.R&quot;&gt;R&lt;/span&gt;、&lt;span name=&quot;scala.concurrent.Future.foldLeft.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.concurrent.Future.foldLeft.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [&lt;span name=&quot;scala.concurrent.Future.foldLeft.R&quot;&gt; R&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d69966254ca64d576be623ded31646fbb856b46" translate="yes" xml:space="preserve">
          <source>final def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;, &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;z&quot;&gt;z：&lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;op&quot;&gt;op：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;、&lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e3760d96d678dedb597e283eb50c7f758911df73" translate="yes" xml:space="preserve">
          <source>final def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;z&quot;&gt;z：&lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;op&quot;&gt;op：（&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9793cb27ccee46a088625250457d701233a40b54" translate="yes" xml:space="preserve">
          <source>final def foldRight[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;z&quot;&gt;z: &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def foldRight [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;z&quot;&gt;z：&lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;op&quot;&gt;op：（&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.List.foldRight.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="255df1298ab7475800d958648a6b0a7dc179d19e" translate="yes" xml:space="preserve">
          <source>final def fold[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;ifEmpty&quot;&gt;ifEmpty: =&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def fold [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;ifEmpty&quot;&gt;ifEmpty：=&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="6f9f2cc5d2cd11d5b13cb66181cc3be95170cc0e" translate="yes" xml:space="preserve">
          <source>final def fold[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;ifEmpty&quot;&gt;ifEmpty: =&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def fold [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;ifEmpty&quot;&gt;ifEmpty：=&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="da9a5a0603c6d24b385df7548a7d8509b9feb690" translate="yes" xml:space="preserve">
          <source>final def fold[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;ifEmpty&quot;&gt;ifEmpty: =&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;)(&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def fold [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;ifEmpty&quot;&gt;ifEmpty：=&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.Option.fold.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4d6c52475eeef2087037305ab117a403114430d5" translate="yes" xml:space="preserve">
          <source>final def forall(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def forall（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7ab3887a9bd9a29e3754fb3cbe32f3e3755beb6" translate="yes" xml:space="preserve">
          <source>final def forall(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def forall（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9527a99c159ccc7413f26d89959f8d9642f5bfc9" translate="yes" xml:space="preserve">
          <source>final def forall(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def forall（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="176cc43b6201fa172eac2a5d8eff312d8033c3c1" translate="yes" xml:space="preserve">
          <source>final def forall(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def forall（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b2e84d8d9bdf4721216e3effdadcdf6dd54729c" translate="yes" xml:space="preserve">
          <source>final def forall(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def forall（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="06af300d195ed7ec1d77226ead283d68ac806f2b" translate="yes" xml:space="preserve">
          <source>final def forall(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def forall（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e454c8d202a46752bf2cd3ec84fe7fcfc0ebdc1c" translate="yes" xml:space="preserve">
          <source>final def foreachEntry[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.foreachEntry.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreachEntry [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.foreachEntry.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="775a9143b063c28bcea49bd6eafc70571440dda5" translate="yes" xml:space="preserve">
          <source>final def foreachKey[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.foreachKey.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreachKey [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.foreachKey.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2dfef7828137ac46b90eddab4ac4503420125b86" translate="yes" xml:space="preserve">
          <source>final def foreachKey[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.foreachKey.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreachKey [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.foreachKey.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eaef547c3fb9d94a4a080e451efac8137458d773" translate="yes" xml:space="preserve">
          <source>final def foreachValue[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.foreachValue.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreachValue [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.foreachValue.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48f67b3074b90ced407b464d9c15ee104adb1256" translate="yes" xml:space="preserve">
          <source>final def foreachValue[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.foreachValue.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreachValue [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.foreachValue.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b73ea09888f367ea4510151f7e0399a35a318079" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（（（&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;））=&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abbbabd40a27bad4d2d5fe6ec8ce363629429aa0" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: ((&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;)) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">最終的な&lt;span name=&quot;f&quot;&gt;&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;定義&lt;/span&gt;&lt;/span&gt; foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（（&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;））=&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a42c0df957e8f745f6a96cc0fcd28e7a068eec2" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Range.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Range.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6c6d76751ee68105662fd5a4a975a6ec632055b4" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e481c6a97a0f445f84380beb4f55d37492242b4" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9bb7c175e8bfec8410e60fb490ed7faafbc0fa5" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.never.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.concurrent.Future.never.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d2b6659b1f603a42b79a30b205e78d18ede700f4" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.Option.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ecc13c1386bd16e024ac0ea9b5f2a6a3cf049db2" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.Option.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="83d54bbca4c09fe843028c8e8fc4736ffc7b50d3" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.Option.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="600dbc6a04eeb6d57710ac64511f526a99d0c2eb" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89c788dbb12ab454e91016cd630f78ab6b8fddfa" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9b5ce4a74cfac9358e3aecd5034806000e296b41" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0999534fc88b6eadba3dadd2675d24595738407a" translate="yes" xml:space="preserve">
          <source>final def foreach[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def foreach [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.foreach.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1b650c58806475f1c098f74c97e53cdf6feb1487" translate="yes" xml:space="preserve">
          <source>final def format: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">最終的なdef形式： &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;文字列&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3ed7bdd3643e89cd92ecfe38c93153b0e7e6173" translate="yes" xml:space="preserve">
          <source>final def fromStepper(&lt;span name=&quot;st&quot;&gt;st: &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.St&quot;&gt;St&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;par&quot;&gt;par: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">final def fromStepper（&lt;span name=&quot;st&quot;&gt;st：&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.St&quot;&gt;St&lt;/span&gt;&lt;/span&gt;、&lt;span name=&quot;par&quot;&gt;par：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.S&quot;&gt; S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="043c2461dae80ce3a05175751918ae28d9bf037e" translate="yes" xml:space="preserve">
          <source>final def fromTry[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;result&quot;&gt;result: &lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.fromTry.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.fromTry.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def fromTry [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;result&quot;&gt;result：&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.fromTry.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.fromTry.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a824740b3f4607613f3d0ab2c5bc634bd7dc33b1" translate="yes" xml:space="preserve">
          <source>final def fromTry[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;result&quot;&gt;result: &lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Promise.fromTry.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Promise.fromTry.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def fromTry [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;result&quot;&gt;result：&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Promise.fromTry.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;Promise&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Promise.fromTry.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7936c9b6cf92e574525339dd8810a4bb9ff5f379" translate="yes" xml:space="preserve">
          <source>final def front: &lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">最終防御戦線：&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0fb6816c7477962437e3c2fad1f32b716fc5a14c" translate="yes" xml:space="preserve">
          <source>final def get(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def get（&lt;span name=&quot;key&quot;&gt;key：&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="03be619138aab754039af4c8ccc67efc264b6fd3" translate="yes" xml:space="preserve">
          <source>final def get(&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def get（&lt;span name=&quot;key&quot;&gt;key：&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt; T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7acf91f271b7e362d1921ab102e02111fc5f3cba" translate="yes" xml:space="preserve">
          <source>final def getClass(): &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[_ &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]</source>
          <target state="translated">final def getClass（）：&lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt; [_ &amp;lt;：&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="93e927920602c40016cf98ba98618ac1ae43edb6" translate="yes" xml:space="preserve">
          <source>final def getClass(): &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[_ &amp;lt;: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]</source>
          <target state="translated">final def getClass（）：&lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt; [_ &amp;lt;：&lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="09565e7f35452d16a8dbb7ae940605f80d29c1e6" translate="yes" xml:space="preserve">
          <source>final def getClass(): &lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt;[_ &amp;lt;: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]</source>
          <target state="translated">final def getClass（）：&lt;span name=&quot;java.lang.Class&quot;&gt;Class&lt;/span&gt; [_ &amp;lt;：&lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="4236d44bfd5fed2392f0e4969fc8584b9bd2a736" translate="yes" xml:space="preserve">
          <source>final def getClass(): &lt;span name=&quot;java.lang.Class&quot;&gt;java.lang.Class&lt;/span&gt;[_ &amp;lt;: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;]</source>
          <target state="translated">最終的なdef getClass（）：&lt;span name=&quot;java.lang.Class&quot;&gt;java.lang.Class&lt;/span&gt; [_ &amp;lt;：&lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="ca111edaa20eaaf1732fb2db5538a313613f9c54" translate="yes" xml:space="preserve">
          <source>final def getName(): &lt;span name=&quot;java.lang.String&quot;&gt;String&lt;/span&gt;</source>
          <target state="translated">最終的なdef getName（）： &lt;span name=&quot;java.lang.String&quot;&gt; String&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ff1ae6f83123bc4af6673191a8146115ecb6c66b" translate="yes" xml:space="preserve">
          <source>final def getOrElse[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;default&quot;&gt;default: =&amp;gt; &lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def getOrElse [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;default&quot;&gt;default：=&amp;gt; &lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d1ffd1ca61a10131c10b3cf8fe2efa98e1a3ac37" translate="yes" xml:space="preserve">
          <source>final def getOrElse[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;default&quot;&gt;default: =&amp;gt; &lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def getOrElse [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;default&quot;&gt;default：=&amp;gt; &lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="74e13efbcf5655373816c264f6ed66f014a30ca2" translate="yes" xml:space="preserve">
          <source>final def getOrElse[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;default&quot;&gt;default: =&amp;gt; &lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def getOrElse [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;default&quot;&gt;default：=&amp;gt; &lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.Option.getOrElse.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="4b5286e74d05db8a917d90b50d72cfd8a15d146a" translate="yes" xml:space="preserve">
          <source>final def getOrElse[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: =&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.getOrElse.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.IntMap.getOrElse.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">final def getOrElse [ &lt;span name=&quot;S&quot;&gt;S&amp;gt;：&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;key&quot;&gt;key：&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;&lt;/span&gt;、&lt;span name=&quot;default&quot;&gt;default：=&amp;gt; &lt;span name=&quot;scala.collection.immutable.IntMap.getOrElse.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.IntMap.getOrElse.S&quot;&gt;S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="950815546d939c74641a32a421f9f1be513909da" translate="yes" xml:space="preserve">
          <source>final def getOrElse[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;key&quot;&gt;key: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;default&quot;&gt;default: =&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.getOrElse.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.LongMap.getOrElse.S&quot;&gt;S&lt;/span&gt;</source>
          <target state="translated">final def getOrElse [ &lt;span name=&quot;S&quot;&gt;S&amp;gt;：&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;key&quot;&gt;key：&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;&lt;/span&gt;、&lt;span name=&quot;default&quot;&gt;default：=&amp;gt; &lt;span name=&quot;scala.collection.immutable.LongMap.getOrElse.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.LongMap.getOrElse.S&quot;&gt; S&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e6c5b41b27822b1436660fc5c51f9924c91b95ef" translate="yes" xml:space="preserve">
          <source>final def getPriority(): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終的なdef getPriority（）： &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="20937314037802d4bf00610aed3505959a78ec8a" translate="yes" xml:space="preserve">
          <source>final def getSuppressed(): &lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt;]</source>
          <target state="translated">final def getSuppressed（）：&lt;a href=&quot;../../array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a6ff281eef5d650d4567f14a75c854ef86ef9e9" translate="yes" xml:space="preserve">
          <source>final def getSuppressed(): &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt;]</source>
          <target state="translated">final def getSuppressed（）：&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;span name=&quot;java.lang.Throwable&quot;&gt;java.lang.Throwable&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="854ba8d1cbf1184db4021d66e209a87a198ef093" translate="yes" xml:space="preserve">
          <source>final def getThreadGroup(): &lt;span name=&quot;java.lang.ThreadGroup&quot;&gt;ThreadGroup&lt;/span&gt;</source>
          <target state="translated">最終的なdef getThreadGroup（）： &lt;span name=&quot;java.lang.ThreadGroup&quot;&gt; ThreadGroup&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="826eb75cadf2746ef6e589c70860cae49dd388ba" translate="yes" xml:space="preserve">
          <source>final def hashCode(): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終的なdef hashCode（）： &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b8ea087eb6adcfec551cbe64291c7b3979bb1bc" translate="yes" xml:space="preserve">
          <source>final def head: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終的なdefヘッド： &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1564d7d71185b730654aa377a2b22c387019effe" translate="yes" xml:space="preserve">
          <source>final def head: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">最終的なdefヘッド： &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt; T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="9db156e6c8973171cee73b013334661f51ee2b27" translate="yes" xml:space="preserve">
          <source>final def headOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def headOption：&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="36683023663b752c5edb8baea505d1c1ca206264" translate="yes" xml:space="preserve">
          <source>final def headTail: (&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;, &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;])</source>
          <target state="translated">final def headTail：（&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;、&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt; ]）</target>
        </trans-unit>
        <trans-unit id="4c46076f40c001351384390eebf08dd3126b18ce" translate="yes" xml:space="preserve">
          <source>final def include[&lt;span name=&quot;S&quot;&gt;S &amp;gt;: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;ordinal&quot;&gt;ordinal: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;generic.BitOperations.Int.Int&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;value&quot;&gt;value: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.include.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.include.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">final def include [ &lt;span name=&quot;S&quot;&gt;S&amp;gt;：&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;ordinal&quot;&gt;ordinal：&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;generic.BitOperations.Int.Int&lt;/span&gt;&lt;/span&gt;、&lt;span name=&quot;value&quot;&gt;value：&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.include.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.include.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8b9a721d358fc0b378da6bc7fa097e052aeda186" translate="yes" xml:space="preserve">
          <source>final def inclusive: &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="translated">最終的な包括的な定義： &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;範囲&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e36090aa86ced5debe68b91c3787f199ca6fe8f" translate="yes" xml:space="preserve">
          <source>final def indexOf[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Range.indexOf.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;from&quot;&gt;from: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def indexOf [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Range.indexOf.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;、&lt;span name=&quot;from&quot;&gt;from：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = 0&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="59d58599e80a940fd3a4d516e2a825970674caf3" translate="yes" xml:space="preserve">
          <source>final def indexedSeqHash(&lt;span name=&quot;a&quot;&gt;a: &lt;a href=&quot;../../collection/indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;collection.IndexedSeq&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def indexedSeqHash（&lt;span name=&quot;a&quot;&gt;a：&lt;a href=&quot;../../collection/indexedseq&quot; id=&quot;scala.collection.IndexedSeq&quot; name=&quot;scala.collection.IndexedSeq&quot;&gt;collection.IndexedSeq&lt;/a&gt; [ &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt; ]&lt;/span&gt;、&lt;span name=&quot;seed&quot;&gt;seed：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a0467ae74a750e974f3691c1d1da3abe51f2301" translate="yes" xml:space="preserve">
          <source>final def init: &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="translated">最終的なdef init： &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt; Range&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ba39b4a2aeab6c6de96705455caf3da8e529ddc" translate="yes" xml:space="preserve">
          <source>final def init: &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def init：&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ba63eebbeb22f1e5868548f4295928e2809ea81f" translate="yes" xml:space="preserve">
          <source>final def initLast: (&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;], &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;)</source>
          <target state="translated">final def initLast：（&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt; ]、&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;）</target>
        </trans-unit>
        <trans-unit id="e8616afc30ee2d263435609dd0ca43dc5944f934" translate="yes" xml:space="preserve">
          <source>final def insertAll(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;t&quot;&gt;t: &lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;buffer&quot;&gt;buffer: &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def insertAll（&lt;span name=&quot;idx&quot;&gt;idx：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;t&quot;&gt;t：&lt;a href=&quot;../iterableonce&quot; id=&quot;scala.collection.IterableOnce&quot; name=&quot;scala.collection.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;、&lt;span name=&quot;buffer&quot;&gt;buffer：&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8b1fb4472aa83564dafcb6626350427db1264996" translate="yes" xml:space="preserve">
          <source>final def isAlive(): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef isAlive（）： &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ba7694a04f174e908a8796083e6b79c7abb06a3" translate="yes" xml:space="preserve">
          <source>final def isCompleted: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef isCompleted： &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="52a0de816c0059477866dfe0056de540833cf9ce" translate="yes" xml:space="preserve">
          <source>final def isDaemon(): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef isDaemon（）： &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a6a890766da7b27c5640db7569744413d7f4cf03" translate="yes" xml:space="preserve">
          <source>final def isDefined: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef isDefined： &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="790f9b478a3b9cf83c101318cd3b5d94293bf092" translate="yes" xml:space="preserve">
          <source>final def isEmpty: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef isEmpty： &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92c4f3d6e1a8b3bf379fb39bf91aa998bc5e861b" translate="yes" xml:space="preserve">
          <source>final def isEmpty: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef isEmpty： &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af6b0260c19f409938a6cf5575043da82664fc04" translate="yes" xml:space="preserve">
          <source>final def isFinite: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">最終的なdef isFinite： &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75c2a09637538ab0cc3fe48a7e638c743375c6ce" translate="yes" xml:space="preserve">
          <source>final def isInstanceOf[&lt;span name=&quot;T0&quot;&gt;T0&lt;/span&gt;]: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def isInstanceOf [ &lt;span name=&quot;T0&quot;&gt;T0&lt;/span&gt; ]：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22e7a66e6aad919ff7c301a62e603edc977d22e3" translate="yes" xml:space="preserve">
          <source>final def isInstanceOf[&lt;span name=&quot;T0&quot;&gt;T0&lt;/span&gt;]: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def isInstanceOf [ &lt;span name=&quot;T0&quot;&gt;T0&lt;/span&gt; ]：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6a9de5d6736463ba9e26166513677f1ecd48961" translate="yes" xml:space="preserve">
          <source>final def isInstanceOf[&lt;span name=&quot;T0&quot;&gt;T0&lt;/span&gt;]: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def isInstanceOf [ &lt;span name=&quot;T0&quot;&gt;T0&lt;/span&gt; ]：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e33208975a2578bcca3fb9d369f910a104edff5" translate="yes" xml:space="preserve">
          <source>final def isReverseOf(&lt;span name=&quot;other&quot;&gt;other: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def isReverseOf（&lt;span name=&quot;other&quot;&gt;other：&lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt; [_]&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d28f7d887cb88379af47ef877f64b17824b8c119" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">final def iterator：&lt;a href=&quot;../../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="89152a23e0ecd22d20af52cad0083a00ec9b4485" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;]</source>
          <target state="translated">final def iterator：&lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="e5204e12339f40198b67eaaa3b66b2d967b4e9d7" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt;[&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]</source>
          <target state="translated">final def iterator：&lt;a href=&quot;../collection/iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;collection.Iterator&lt;/a&gt; [ &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="8e68a416ba10167d3d2c74703bb38912168adeb6" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">final def iterator：&lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="9fd2b1b84c59eb5d5422bafde55970629e7d571a" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def iterator：&lt;a href=&quot;../iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;イテレーター&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b1f3ce2e3c2198e65efc9d16f5bf265f0015fee1" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt;]]</source>
          <target state="translated">final def iterator：&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt; [ &lt;a href=&quot;immutable/seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;immutable.Seq&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.GroupedIterator.B&quot;&gt;B&lt;/span&gt; ]]</target>
        </trans-unit>
        <trans-unit id="2a66bdf8aa9472154e1df14093f988e4871c32dc" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def iterator：&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;イテレーター&lt;/a&gt; [ &lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bf5873f187786de8fee4adfc689e35a177194f86" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def iterator：&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;イテレーター&lt;/a&gt; [ &lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ae6be2931e129e86365666da5f3dba40640469a" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;Iterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def iterator：&lt;a href=&quot;iterator&quot; id=&quot;scala.collection.Iterator&quot; name=&quot;scala.collection.Iterator&quot;&gt;イテレーター&lt;/a&gt; [ &lt;span name=&quot;scala.collection.Iterator.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f94502260268021fef7415aec01b5a5b9c8c2841" translate="yes" xml:space="preserve">
          <source>final def iterator: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.Iterator&quot;&gt;Ordering.Iterator&lt;/span&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def iterator：&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.Iterator&quot;&gt;Ordering.Iterator&lt;/span&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="78c70ee547644be0d353e959671231eea879236c" translate="yes" xml:space="preserve">
          <source>final def join(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def join（）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="38a9cb19952869688871b3cc8fda466e93125592" translate="yes" xml:space="preserve">
          <source>final def join(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def join（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1ecf1f83048a346d4495bf17c7c134f424271ed6" translate="yes" xml:space="preserve">
          <source>final def join(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;arg1&quot;&gt;arg1: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def join（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;arg1&quot;&gt;arg1：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="888686b7381a527b54c680ee94f747b794c06885" translate="yes" xml:space="preserve">
          <source>final def knownSize: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final defknownSize：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7735a9905e15f19592b62bbfe8d9abec9d483bef" translate="yes" xml:space="preserve">
          <source>final def knownSize: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final defknownSize：&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b41099827149b27ed94e3c3ff2f090c5ae6f178" translate="yes" xml:space="preserve">
          <source>final def last: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終定義最後：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d09a2dcb6be2b9e21bb0ec50b19d8cc2b6196d9" translate="yes" xml:space="preserve">
          <source>final def last: &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">最後の最後の定義：&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="58f0d23a2dea0354272eea5da891aaf309f4853d" translate="yes" xml:space="preserve">
          <source>final def lastIndexOf[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Range.lastIndexOf.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;#length:Int&quot;&gt;length - 1&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def lastIndexOf [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Range.lastIndexOf.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;、&lt;span name=&quot;end&quot;&gt;end：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;#length:Int&quot;&gt;length-1&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5687f60354d31abe6915666d3bd33df1220bf00f" translate="yes" xml:space="preserve">
          <source>final def lastIndexOf[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Range.lastIndexOf.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;range#length:Int&quot;&gt;length - 1&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def lastIndexOf [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Range.lastIndexOf.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;、&lt;span name=&quot;end&quot;&gt;end：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;range#length:Int&quot;&gt;length-1&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6578b2720d51fab207c2e068d5e42eb69dc26e96" translate="yes" xml:space="preserve">
          <source>final def lastKey: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;</source>
          <target state="translated">最終的なdef lastKey：&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;IntMapUtils.Int&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="e5a706c38e115f9a3cfc637c8e745f03649b95a9" translate="yes" xml:space="preserve">
          <source>final def lastKey: &lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;</source>
          <target state="translated">最終定義lastKey：&lt;span name=&quot;scala.collection.generic.BitOperations.Long.Long&quot;&gt;LongMapUtils.Long&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f818e6307ae3e3b91867cddcfbb716a5fb37a75b" translate="yes" xml:space="preserve">
          <source>final def lastOption: &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def lastOption：&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3c62f9b9319ca5dc0ad81e0f61d63e05d365fd56" translate="yes" xml:space="preserve">
          <source>final def length: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終定義長：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a2baeb9f2585678601ab3d7f29375638e500b9d4" translate="yes" xml:space="preserve">
          <source>final def length: &lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;</source>
          <target state="translated">最終定義長：&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;長い&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8db6c7c8cf6c1b7cb2991565ad2c2bf68fedb262" translate="yes" xml:space="preserve">
          <source>final def length: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終定義長：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96d34f6072bdc75e2eadfb99ca7aacf8aec69c1b" translate="yes" xml:space="preserve">
          <source>final def lengthCompare(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def lengthCompare（&lt;span name=&quot;len&quot;&gt;len：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="88b6d1092d60314ba5bff8cdd7252989b490361f" translate="yes" xml:space="preserve">
          <source>final def lengthCompare(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def lengthCompare（&lt;span name=&quot;len&quot;&gt;len：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="835c412f8d580430a6cc4752c746dfad9a29baad" translate="yes" xml:space="preserve">
          <source>final def lengthCompare(&lt;span name=&quot;len&quot;&gt;len: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def lengthCompare（&lt;span name=&quot;len&quot;&gt;len：&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21c16c1ad01fe5e5115e1046856ab307db77536a" translate="yes" xml:space="preserve">
          <source>final def lengthCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def lengthCompare（&lt;span name=&quot;that&quot;&gt;that：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [_]&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="89eaec65741609da4f25a251d34d66b227a3d9d1" translate="yes" xml:space="preserve">
          <source>final def lengthCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def lengthCompare（&lt;span name=&quot;that&quot;&gt;that：&lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [_]&lt;/span&gt;）：&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ec3c4fee66aeb8f0b865caf8ec6924331126e69" translate="yes" xml:space="preserve">
          <source>final def lengthCompare(&lt;span name=&quot;that&quot;&gt;that: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[_]&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def lengthCompare（&lt;span name=&quot;that&quot;&gt;that：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [_]&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4f0e6b2d0d2c22748b4a5c07adcf1e110523d8bf" translate="yes" xml:space="preserve">
          <source>final def lengthIs: &lt;a href=&quot;../collection/iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</source>
          <target state="translated">最終的なdef lengthIs：&lt;a href=&quot;../collection/iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="550f1451afb8238832d92f31192fd859f8ebcf9b" translate="yes" xml:space="preserve">
          <source>final def lengthIs: &lt;a href=&quot;../iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</source>
          <target state="translated">最終的なdef lengthIs：&lt;a href=&quot;../iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f5bc678a98ab30b683434d1e250e84cb73701ffe" translate="yes" xml:space="preserve">
          <source>final def lengthIs: &lt;a href=&quot;collection/iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</source>
          <target state="translated">最終的なdef lengthIs：&lt;a href=&quot;collection/iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="620339a0ed954297069292454678cc3a95ff404c" translate="yes" xml:space="preserve">
          <source>final def lengthIs: &lt;a href=&quot;iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</source>
          <target state="translated">最終的なdef lengthIs：&lt;a href=&quot;iterableops%24%24sizecompareops&quot; id=&quot;scala.collection.IterableOps.SizeCompareOps&quot; name=&quot;scala.collection.IterableOps.SizeCompareOps&quot;&gt;SizeCompareOps&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f00f15a6cd32303f174a496f261bb609cff28cb7" translate="yes" xml:space="preserve">
          <source>final def line(&lt;span name=&quot;pos&quot;&gt;pos: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def line（&lt;span name=&quot;pos&quot;&gt;pos：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6ed96194ba7f6345edd384bc996716aec5052a2" translate="yes" xml:space="preserve">
          <source>final def listHash(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../collection/immutable/list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;collection.immutable.List&lt;/a&gt;[_]&lt;/span&gt;, &lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def listHash（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../../collection/immutable/list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;collection.immutable.List&lt;/a&gt; [_]&lt;/span&gt;、&lt;span name=&quot;seed&quot;&gt;seed：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41b94629d2e413a3a4f6367cdaa4dbd6eb254ef3" translate="yes" xml:space="preserve">
          <source>final def locate(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def Locate（&lt;span name=&quot;idx&quot;&gt;idx：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;アンロール&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4ff870f6cd079825318f654bceda94321bfa0b11" translate="yes" xml:space="preserve">
          <source>final def main(&lt;span name=&quot;args&quot;&gt;args: &lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt;[&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;]&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def main（&lt;span name=&quot;args&quot;&gt;args：&lt;a href=&quot;array&quot; id=&quot;scala.Array&quot; name=&quot;scala.Array&quot;&gt;Array&lt;/a&gt; [ &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt; ]&lt;/span&gt;）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa7f0e673f06032fd5014c5b15226fe39eb443e1" translate="yes" xml:space="preserve">
          <source>final def mapConserve[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def mapConserve [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; &amp;lt;：&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="dad5fa53e77b384b6d934697e0ad687b3dfe2362" translate="yes" xml:space="preserve">
          <source>final def mapConserve[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def mapConserve [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; &amp;lt;：&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e088675152f0d7a73a94ce917d8e18c418f2f815" translate="yes" xml:space="preserve">
          <source>final def mapConserve[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; &amp;lt;: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def mapConserve [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; &amp;lt;：&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.mapConserve.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f4dcf822218042274f095e5f3f4cce90183ffe8" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;../collection/mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e7e90bb585e7c216c2a8fe29761bf3c0672a8256" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;../mutable/map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;mutable.Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="de642dea3ff901a47177c3cf16ea100dd9446e22" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="2641eb9885531229f0ffe4e8d4bec974a1bc0c60" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4248e99798d6f04ec342afd7ba1655e9c4df2b1d" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9ff4a6e4e27bedffab6486aff91df189d3cc9c9b" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="aa604d0f83af37c381b395e523ef7c119c2f9964" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9ce63d2546a94370d53cad079bde8989cdc78e50" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eca35d4630a493d28afa4bb24a208d9e55eec601" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e30dbfc0545afd0d78c36d44def5bc5a7cd90173" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="30026f90e9c22549af61a8e75919b83dc36cac86" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6edd47f7284c07b9dadafb13a985de6cddb6c432" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="edf8f59900bcf1fb9c299847f92174820820d6ff" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ed1c26aefabb0b1eb11f6b4371af09b013b0ffdb" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="40894afff8fce29d32824535551ae43ef93ccd60" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f22d6c5db05d57dceba934a7abb23c013188ff2a" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="fcd220fadfdb7ae09ba5b3183abf6d6590df003e" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="f23c3c0838abdff72b0b1c3d528a1bc34622d569" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="90827c9d65b5bffc1bd2f2509858cddde8f85ebe" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;../iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;collection.Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="48fd39288fee18a52f9dbbdb878fd01da5bbf193" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;map&quot; id=&quot;scala.collection.Map&quot; name=&quot;scala.collection.Map&quot;&gt;Map&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5ad43b0479f3ff7370623a96bc13b54cf6f7ee4c" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4f4e3bad2a765922a95ae4ba8d491ba8f364f86b" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;表示&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]</target>
        </trans-unit>
        <trans-unit id="c1f803dded596cbc0f9bf0711e587f937b072a8e" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.MapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="8d4328c1b8c1148e5a98aab4aad09bdc5cf1401e" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.MapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="3334a1827b2dbdb2ed68e48ef7d61560f636e464" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49cce962e76c3d3d9244bd99daea699aa817729e" translate="yes" xml:space="preserve">
          <source>final def mapFromIterable[&lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt;](&lt;span name=&quot;it&quot;&gt;it: &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt;[(&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;)]&lt;/span&gt;): &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;[&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;, &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;]</source>
          <target state="translated">final def mapFromIterable [ &lt;span name=&quot;K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;V2&quot;&gt;V2&lt;/span&gt; ]（&lt;span name=&quot;it&quot;&gt;it：&lt;a href=&quot;iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;Iterable&lt;/a&gt; [（&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt;）]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt; [ &lt;span name=&quot;scala.collection.MapOps.mapFromIterable.K2&quot;&gt;K2&lt;/span&gt;、&lt;span name=&quot;scala.collection.MapOps.mapFromIterable.V2&quot;&gt;V2&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1e4a053ef0e92aee2e7119e6164c769223bb99f9" translate="yes" xml:space="preserve">
          <source>final def mapTo[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](implicit &lt;span name=&quot;tag&quot;&gt;tag: &lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.mapTo.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.mapTo.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">final def mapTo [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ]（暗黙の&lt;span name=&quot;tag&quot;&gt;タグ：&lt;a href=&quot;../reflect/classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.mapTo.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;未来&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.mapTo.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7778354cf53c69cf0b38154de81ee9ce5e8c09de" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="91717f8ef753460ac7ee84934ba39f21373758b3" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="50f542c6c8ffaa4a46962c3d7f75ab360dc314b9" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="9af577491267449e6d5cf81925c2d9bb9c2a1aae" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6f78073a7c5ea68427137e21f547bc8d3652a2cd" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b4e31ccf15700a7102e035c4c926ee0b704f971a" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a686e5bbb2c107207d46dea8ab3b065f43118208" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;リスト&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7419b531d38c2dbf98a906975c49780f6fc4f188" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="1a25b6a991a50aa1b6795e2eebcdeb5f06c34a29" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="094367243ef8207ddcdefb0e233889ac632b48a2" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="290146120c2909adb8830cb6ecf94f6ccad36587" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="6b2374b591e1bbc128ee2cdce8aa5b1e2e24ba00" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b482f6f8ad021131835272185a90c2d992cd3620" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;B&quot;&gt;B&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;B&quot;&gt;B&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.map.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e4e26db3026b39139c9760eddbf437f5aabde9c0" translate="yes" xml:space="preserve">
          <source>final def map[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.never.map.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.map.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">final def map [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.concurrent.Future.never.map.S&quot;&gt;S&lt;/span&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.map.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="885c6330d1297b98d777fbe7401a6444c895b7db" translate="yes" xml:space="preserve">
          <source>final def maxId: &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終定義maxId：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9cd65b8816c6571e4334fa8581e6ce9b87b96960" translate="yes" xml:space="preserve">
          <source>final def maxId: &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終定義maxId：&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ddd8449c5fb356bb0f9f61a17750a3c483b14a45" translate="yes" xml:space="preserve">
          <source>final def max[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.max.A1&quot;&gt;A1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def max [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（暗黙の&lt;span name=&quot;ord&quot;&gt;ord：&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;順序付け&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Range.max.A1&quot;&gt;A1&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0ddadb3039a7407cd1123a66073c93158707bff9" translate="yes" xml:space="preserve">
          <source>final def min[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ord&quot;&gt;ord: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.min.A1&quot;&gt;A1&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def min [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt; ]（暗黙の&lt;span name=&quot;ord&quot;&gt;ord：&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;順序付け&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Range.min.A1&quot;&gt;A1&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="395a92fe0aa87caedf694ace729023b35c1b79a1" translate="yes" xml:space="preserve">
          <source>final def mix(&lt;span name=&quot;hash&quot;&gt;hash: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;data&quot;&gt;data: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def mix（&lt;span name=&quot;hash&quot;&gt;ハッシュ：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;data&quot;&gt;データ：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="462c192be3db597c4a7554b0f91bb5be8b95b888" translate="yes" xml:space="preserve">
          <source>final def mixLast(&lt;span name=&quot;hash&quot;&gt;hash: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;data&quot;&gt;data: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def mixLast（&lt;span name=&quot;hash&quot;&gt;hash：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;data&quot;&gt;data：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e39377818195c50ff8290df0b903887d1038a0eb" translate="yes" xml:space="preserve">
          <source>final def mkString(&lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">final def mkString（&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="13aba0d645230914a4d291a443b2228ace3ce3dd" translate="yes" xml:space="preserve">
          <source>final def mkString(&lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">final def mkString（&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7afb3f3902ac0153d39113f15f8887a72afc1efb" translate="yes" xml:space="preserve">
          <source>final def mkString(&lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">final def mkString（&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a24bc16f7a8ca970c457df7a294221fd1dec2c95" translate="yes" xml:space="preserve">
          <source>final def mkString(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">final def mkString（&lt;span name=&quot;start&quot;&gt;start：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;end&quot;&gt;end：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd90871d9666684780802fb199ec4b4abf7b7f2e" translate="yes" xml:space="preserve">
          <source>final def mkString(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">final def mkString（&lt;span name=&quot;start&quot;&gt;start：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;end&quot;&gt;end：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="17042c98abed810c06fef55617e49f43062891c2" translate="yes" xml:space="preserve">
          <source>final def mkString(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;sep&quot;&gt;sep: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;end&quot;&gt;end: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">final def mkString（&lt;span name=&quot;start&quot;&gt;start：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;sep&quot;&gt;sep：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;end&quot;&gt;end：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9636bdf13531e6115a90a2c6665351c5e651505b" translate="yes" xml:space="preserve">
          <source>final def mkString: &lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">final def mkString：&lt;a href=&quot;../../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;文字列&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b3d2ed955590998374c6b4de1024418c2cacc71c" translate="yes" xml:space="preserve">
          <source>final def mkString: &lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">final def mkString：&lt;a href=&quot;../predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;文字列&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="299f853b8fab82fb692f3339c9dd58fee83eacc7" translate="yes" xml:space="preserve">
          <source>final def mkString: &lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;String&lt;/a&gt;</source>
          <target state="translated">final def mkString：&lt;a href=&quot;predef%24#String=String&quot; id=&quot;scala.Predef.String&quot; name=&quot;scala.Predef.String&quot;&gt;文字列&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccc23fe5f53413feb5c2ced8e6c71864bf67b79e" translate="yes" xml:space="preserve">
          <source>final def modifyOrRemove[&lt;span name=&quot;S&quot;&gt;S&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;generic.BitOperations.Int.Int&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.modifyOrRemove.S&quot;&gt;S&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.modifyOrRemove.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="translated">final def modifyOrRemove [ &lt;span name=&quot;S&quot;&gt;S&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;generic.BitOperations.Int.Int&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.modifyOrRemove.S&quot;&gt;S&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;順序付け&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.modifyOrRemove.S&quot;&gt;S&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="86f98b25cd4876668e8746fe7bc11958d8d98a1d" translate="yes" xml:space="preserve">
          <source>final def ne(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def ne（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="489be3f90e2526ad9508657419ffdc358827cffc" translate="yes" xml:space="preserve">
          <source>final def ne(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def ne（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;../anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4443a66244d383f908e76c7e3ca8b36674c7f7f8" translate="yes" xml:space="preserve">
          <source>final def ne(&lt;span name=&quot;arg0&quot;&gt;arg0: &lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def ne（&lt;span name=&quot;arg0&quot;&gt;arg0：&lt;a href=&quot;anyref&quot; id=&quot;scala.AnyRef&quot; name=&quot;scala.AnyRef&quot;&gt;AnyRef&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="75c61c8c28c4afa15eda978c472edb72a44fa4e8" translate="yes" xml:space="preserve">
          <source>final def noSuppression: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def noSuppression：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bf54db41a4a0f4ef55e12bdbd8c9f719aaa33f8" translate="yes" xml:space="preserve">
          <source>final def nonEmpty: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;</source>
          <target state="translated">final def nonEmpty：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール値&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5bbca23997da4d8792a1f8a4f9f566fb53e1ab4" translate="yes" xml:space="preserve">
          <source>final def nonFatalCatch[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.nonFatalCatch.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def nonFatalCatch [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]：&lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;キャッチ&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.Exception.nonFatalCatch.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="43a568f81c8b4fa38c6e65ec6ed093738d622c09" translate="yes" xml:space="preserve">
          <source>final def nonFatalCatcher[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;]: &lt;a href=&quot;#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;Catcher&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.nonFatalCatcher.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def nonFatalCatcher [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]：&lt;a href=&quot;#Catcher%5B+T%5D=PartialFunction%5BThrowable,T%5D&quot; id=&quot;scala.util.control.Exception.Catcher&quot; name=&quot;scala.util.control.Exception.Catcher&quot;&gt;キャッチャー&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.Exception.nonFatalCatcher.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="a7b51d569cc70852497d324aa0f2765740d517cd" translate="yes" xml:space="preserve">
          <source>final def notify(): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">最終的なdef notify（）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8fc3fe57b4782a789241aeda50cfef83b4d7ebf7" translate="yes" xml:space="preserve">
          <source>final def notify(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">最終的なdef notify（）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f51fe710179fbfdba4d4d7b24a14ab615d9bd8d9" translate="yes" xml:space="preserve">
          <source>final def notify(): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">最終的なdef notify（）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="22fca93afce24fe3a89708b1a9aae71c9683e068" translate="yes" xml:space="preserve">
          <source>final def notifyAll(): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def notifyAll（）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="66349b43f999f0ea1f747ab3e606634720a6e45a" translate="yes" xml:space="preserve">
          <source>final def notifyAll(): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def notifyAll（）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19f8320cbdb67d2934076cc07a79a87f15fa6420" translate="yes" xml:space="preserve">
          <source>final def notifyAll(): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def notifyAll（）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1068b724f57bea2f73d92f0952bc155a9b15302d" translate="yes" xml:space="preserve">
          <source>final def nwords: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終的なdef nwords： &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e4092dc8ba799b0efce18f0bc31e3a215bbbc448" translate="yes" xml:space="preserve">
          <source>final def onComplete[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.never.onComplete.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def onComplete [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;a href=&quot;../util/try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt; [ &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt; ]）=&amp;gt; &lt;span name=&quot;scala.concurrent.Future.never.onComplete.U&quot;&gt;U&lt;/span&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt; Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b714f2b9db0a0fb40669f1408e0509cfdc27fce" translate="yes" xml:space="preserve">
          <source>final def orElse[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;alternative&quot;&gt;alternative: =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def orElse [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;alternative&quot;&gt;Alternative：=&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="c733d8871fdaff8c8e447e795b7020538438f078" translate="yes" xml:space="preserve">
          <source>final def orElse[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;alternative&quot;&gt;alternative: =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def orElse [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;alternative&quot;&gt;代替：=&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;オプション&lt;/a&gt; [ &lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="16836526dcf8747199f39ec26e33ebdbf2b42d23" translate="yes" xml:space="preserve">
          <source>final def orElse[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;alternative&quot;&gt;alternative: =&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt;]&lt;/span&gt;): &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt;[&lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">final def orElse [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;alternative&quot;&gt;Alternative：=&amp;gt; &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [ &lt;span name=&quot;scala.Option.orElse.B&quot;&gt;B&lt;/span&gt; ]&lt;/span&gt;）：&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;Option&lt;/a&gt; [&lt;span name=&quot;scala.Option.orElse.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="7410ef751d1acf0bc677d785cdf069a84f0799ac" translate="yes" xml:space="preserve">
          <source>final def orNull[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;a href=&quot;null&quot; id=&quot;scala.Null&quot; name=&quot;scala.Null&quot;&gt;Null&lt;/a&gt;, &lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt;</source>
          <target state="translated">final def orNull [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;a href=&quot;nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ]（implicit &lt;span name=&quot;ev&quot;&gt;ev：&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;：&amp;lt;&lt;/a&gt; [ &lt;a href=&quot;null&quot; id=&quot;scala.Null&quot; name=&quot;scala.Null&quot;&gt;Null&lt;/a&gt;、&lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="50027b7af40bc255dc99aec1e315f63fe44f5068" translate="yes" xml:space="preserve">
          <source>final def orNull[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;a href=&quot;null&quot; id=&quot;scala.Null&quot; name=&quot;scala.Null&quot;&gt;Null&lt;/a&gt;, &lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt;</source>
          <target state="translated">final def orNull [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;span name=&quot;scala.Option.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（暗黙の&lt;span name=&quot;ev&quot;&gt;ev：&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;：&amp;lt;&lt;/a&gt; [ &lt;a href=&quot;null&quot; id=&quot;scala.Null&quot; name=&quot;scala.Null&quot;&gt;Null&lt;/a&gt;、&lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.Option.orNull.A1&quot;&gt; A1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="1645fba6084402002d404d299d486c04a8c647bc" translate="yes" xml:space="preserve">
          <source>final def orNull[&lt;span name=&quot;A1&quot;&gt;A1 &amp;gt;: &lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](implicit &lt;span name=&quot;ev&quot;&gt;ev: &lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;:&amp;lt;&lt;/a&gt;[&lt;a href=&quot;null&quot; id=&quot;scala.Null&quot; name=&quot;scala.Null&quot;&gt;Null&lt;/a&gt;, &lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt;</source>
          <target state="translated">final def orNull [ &lt;span name=&quot;A1&quot;&gt;A1&amp;gt;：&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（暗黙の&lt;span name=&quot;ev&quot;&gt;ev：&lt;a href=&quot;%24less%24colon%24less&quot; id=&quot;scala.&amp;lt;:&amp;lt;&quot; name=&quot;scala.&amp;lt;:&amp;lt;&quot;&gt;&amp;lt;：&amp;lt;&lt;/a&gt; [ &lt;a href=&quot;null&quot; id=&quot;scala.Null&quot; name=&quot;scala.Null&quot;&gt;Null&lt;/a&gt;、&lt;span name=&quot;scala.Option.orNull.A1&quot;&gt;A1&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.Option.orNull.A1&quot;&gt; A1&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="f65e3ff0b42ce0fd7c118287b6c82baeec66cf0e" translate="yes" xml:space="preserve">
          <source>final def orderedHash(&lt;span name=&quot;xs&quot;&gt;xs: &lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt;[&lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;]&lt;/span&gt;, &lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">最終的なdef orderedHash（&lt;span name=&quot;xs&quot;&gt;xs：&lt;a href=&quot;../../index#IterableOnce%5B+A%5D=scala.collection.IterableOnce%5BA%5D&quot; id=&quot;scala.IterableOnce&quot; name=&quot;scala.IterableOnce&quot;&gt;IterableOnce&lt;/a&gt; [ &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt; ]&lt;/span&gt;、&lt;span name=&quot;seed&quot;&gt;seed：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f610acdd031dc39271a175fe5cf1adc8e5b557f" translate="yes" xml:space="preserve">
          <source>final def ordering: &lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">最終的なdefの順序：&lt;a href=&quot;../../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;順序&lt;/a&gt; [&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="a4ad07761636b5afdcb469a1b4bd8f5b5ae4bffb" translate="yes" xml:space="preserve">
          <source>final def ordering: &lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">最終的なdefの順序：&lt;a href=&quot;../index#Ordering%5BT%5D=scala.math.Ordering%5BT%5D&quot; id=&quot;scala.Ordering&quot; name=&quot;scala.Ordering&quot;&gt;順序&lt;/a&gt; [&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="80b193db3502c0672c918b8a9bcbaab499988a29" translate="yes" xml:space="preserve">
          <source>final def ordinal: &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt;generic.BitOperations.Int.Int&lt;/span&gt;</source>
          <target state="translated">最終定義序数： &lt;span name=&quot;scala.collection.generic.BitOperations.Int.Int&quot;&gt; generic.BitOperations.Int.Int&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="b935ff1b35a167576494c1c8f4f3c4d1a1bd4180" translate="yes" xml:space="preserve">
          <source>final def prepended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">最終的な防御が追加された[ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt; [&lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt; B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="da8d233b3e4e0e878e9a7d0b2a2f65e83af1fad6" translate="yes" xml:space="preserve">
          <source>final def prepended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">最終的な防御が追加された[ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="5cea721f56c1c9b038c418eb1bca1d4f70cc4692" translate="yes" xml:space="preserve">
          <source>final def prepended[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;elem&quot;&gt;elem: &lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">最終的な防御が追加された[ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;elem&quot;&gt;elem：&lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;ストリーム&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.Stream.prepended.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="afe1657674ad582bb3a9c555a0cc480bdcd67c9a" translate="yes" xml:space="preserve">
          <source>final def productHash(&lt;span name=&quot;x&quot;&gt;x: &lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;ignorePrefix&quot;&gt;ignorePrefix: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; = false&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def productHash（&lt;span name=&quot;x&quot;&gt;x：&lt;a href=&quot;../../product&quot; id=&quot;scala.Product&quot; name=&quot;scala.Product&quot;&gt;Product&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;seed&quot;&gt;seed：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;ignorePrefix&quot;&gt;ignorePrefix：&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt; = false&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2fc5b59e8eefec2ac3c92eb62b49f018c18486e" translate="yes" xml:space="preserve">
          <source>final def rangeHash(&lt;span name=&quot;start&quot;&gt;start: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;step&quot;&gt;step: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;last&quot;&gt;last: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;seed&quot;&gt;seed: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def rangeHash（&lt;span name=&quot;start&quot;&gt;start：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;step&quot;&gt;step：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;last&quot;&gt;last：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;seed&quot;&gt;seed：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="62cda909d78c77863477cc6e4b5e2ca22447e62f" translate="yes" xml:space="preserve">
          <source>final def ready(&lt;span name=&quot;atMost&quot;&gt;atMost: &lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;permit&quot;&gt;permit: &lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future%24%24never%24&quot; id=&quot;scala.concurrent.Future.never&quot; name=&quot;scala.concurrent.Future.never&quot;&gt;never&lt;/a&gt;.this.type</source>
          <target state="translated">final def ready（&lt;span name=&quot;atMost&quot;&gt;atMost：&lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;）（暗黙の&lt;span name=&quot;permit&quot;&gt;許可：&lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future%24%24never%24&quot; id=&quot;scala.concurrent.Future.never&quot; name=&quot;scala.concurrent.Future.never&quot;&gt;決して&lt;/a&gt; .this.type</target>
        </trans-unit>
        <trans-unit id="fdf8bca737e1a7453d0243e99fd297e6f6247833" translate="yes" xml:space="preserve">
          <source>final def ready[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;awaitable&quot;&gt;awaitable: &lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Await.ready.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;atMost&quot;&gt;atMost: &lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.concurrent.Await.ready.awaitable&quot;&gt;awaitable&lt;/span&gt;.type</source>
          <target state="translated">final def ready [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;awaitable&quot;&gt;awaitable：&lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Await.ready.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;、&lt;span name=&quot;atMost&quot;&gt;atMost：&lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.concurrent.Await.ready.awaitable&quot;&gt;awaitable&lt;/span&gt; .type</target>
        </trans-unit>
        <trans-unit id="be03f95ad5abe37d907fb697e6b14088329d2d58" translate="yes" xml:space="preserve">
          <source>final def recoverWith[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;, &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.recoverWith.U&quot;&gt;U&lt;/span&gt;]]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.recoverWith.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">final def recoverWith [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;、&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.recoverWith.U&quot;&gt;U&lt;/span&gt; ]]&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.recoverWith.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b37f81d61f3b3c983aca70ae07d50924fe578aac" translate="yes" xml:space="preserve">
          <source>final def recover[&lt;span name=&quot;U&quot;&gt;U&lt;/span&gt;](&lt;span name=&quot;pf&quot;&gt;pf: &lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt;[&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;, &lt;span name=&quot;scala.concurrent.Future.never.recover.U&quot;&gt;U&lt;/span&gt;]&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.never.recover.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="translated">final def recover [ &lt;span name=&quot;U&quot;&gt;U&lt;/span&gt; ]（&lt;span name=&quot;pf&quot;&gt;pf：&lt;a href=&quot;../partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;PartialFunction&lt;/a&gt; [ &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;、&lt;span name=&quot;scala.concurrent.Future.never.recover.U&quot;&gt;U&lt;/span&gt; ]&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.never.recover.U&quot;&gt;U&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="eccfd1906a31440e9ec0de1e2f1c9fe54a7832a4" translate="yes" xml:space="preserve">
          <source>final def reduceLeft[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;, &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def reduceLeft [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;、&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="df19cf0852f2d5a86b02f6e8f91da381bcc864c3" translate="yes" xml:space="preserve">
          <source>final def reduceLeft[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def reduceLeft [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0f14c412bdbc9c82fadd8a4e3272ba9c96b3e0c3" translate="yes" xml:space="preserve">
          <source>final def reduceLeft[&lt;span name=&quot;B&quot;&gt;B &amp;gt;: &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;f&quot;&gt;f: (&lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;): &lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">final def reduceLeft [ &lt;span name=&quot;B&quot;&gt;B&amp;gt;：&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;f&quot;&gt;f：（&lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;、&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.collection.immutable.Stream.reduceLeft.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="d7776ed3c26339b90afa5f475cc56bef2c66ac14" translate="yes" xml:space="preserve">
          <source>final def reduceLeft[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;R&quot;&gt;R &amp;gt;: &lt;span name=&quot;scala.concurrent.Future.reduceLeft.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt;](&lt;span name=&quot;futures&quot;&gt;futures: &lt;a href=&quot;../collection/immutable/iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;collection.immutable.Iterable&lt;/a&gt;[&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.reduceLeft.T&quot;&gt;T&lt;/span&gt;]]&lt;/span&gt;)(&lt;span name=&quot;op&quot;&gt;op: (&lt;span name=&quot;scala.concurrent.Future.reduceLeft.R&quot;&gt;R&lt;/span&gt;, &lt;span name=&quot;scala.concurrent.Future.reduceLeft.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;span name=&quot;scala.concurrent.Future.reduceLeft.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;executor&quot;&gt;executor: &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Future.reduceLeft.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="translated">final def reduceLeft [ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;、&lt;span name=&quot;R&quot;&gt;R&amp;gt;：&lt;span name=&quot;scala.concurrent.Future.reduceLeft.T&quot;&gt;T&lt;/span&gt;&lt;/span&gt; ]（&lt;span name=&quot;futures&quot;&gt;futures：&lt;a href=&quot;../collection/immutable/iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;collection.immutable.Iterable&lt;/a&gt; [ &lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Future.reduceLeft.T&quot;&gt;T&lt;/span&gt; ]]&lt;/span&gt;）（&lt;span name=&quot;op&quot;&gt;op：（&lt;span name=&quot;scala.concurrent.Future.reduceLeft.R&quot;&gt;R&lt;/span&gt;、&lt;span name=&quot;scala.concurrent.Future.reduceLeft.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;span name=&quot;scala.concurrent.Future.reduceLeft.R&quot;&gt;R&lt;/span&gt;&lt;/span&gt;）（implicit &lt;span name=&quot;executor&quot;&gt;executor：&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;future&quot; id=&quot;scala.concurrent.Future&quot; name=&quot;scala.concurrent.Future&quot;&gt;Future&lt;/a&gt; [&lt;span name=&quot;scala.concurrent.Future.reduceLeft.R&quot;&gt; R&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="b5af9cf699d5c46eb10512b5b6cb004a8ce1c8b3" translate="yes" xml:space="preserve">
          <source>final def remove(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;buffer&quot;&gt;buffer: &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;): &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">final def remove（&lt;span name=&quot;idx&quot;&gt;idx：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;buffer&quot;&gt;buffer：&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt; [ &lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;）：&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="78230fafa034fd18a243e87aaab073e74fe0b714" translate="yes" xml:space="preserve">
          <source>final def remove(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;count&quot;&gt;count: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def remove（&lt;span name=&quot;idx&quot;&gt;idx：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;count&quot;&gt;count：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2b64f433f6539682ae17081e8d9e80cabf311575" translate="yes" xml:space="preserve">
          <source>final def reportFailure(&lt;span name=&quot;t&quot;&gt;t: &lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def reportFailure（&lt;span name=&quot;t&quot;&gt;t：&lt;a href=&quot;../index#Throwable=Throwable&quot; id=&quot;scala.Throwable&quot; name=&quot;scala.Throwable&quot;&gt;Throwable&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6bf06f59f02ddf5b8747fcf8ec5fa5f9fbcd49f8" translate="yes" xml:space="preserve">
          <source>final def require(&lt;span name=&quot;requirement&quot;&gt;requirement: &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;message&quot;&gt;message: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def require（&lt;span name=&quot;requirement&quot;&gt;要件：&lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;message&quot;&gt;メッセージ：=&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;任意&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;ユニット&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="53cbeefb6fad07aae856242627208d4fb5d89c0c" translate="yes" xml:space="preserve">
          <source>final def requireBounds(&lt;span name=&quot;idx&quot;&gt;idx: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;until&quot;&gt;until: &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;../seqops#length:Int&quot;&gt;length&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="translated">final def requireBounds（&lt;span name=&quot;idx&quot;&gt;idx：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;&lt;/span&gt;、&lt;span name=&quot;until&quot;&gt;until：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; = &lt;a href=&quot;../seqops#length:Int&quot;&gt;length&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2094b93a72290fc485f45f077b43ac49f971554b" translate="yes" xml:space="preserve">
          <source>final def result(&lt;span name=&quot;atMost&quot;&gt;atMost: &lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;)(implicit &lt;span name=&quot;permit&quot;&gt;permit: &lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;</source>
          <target state="translated">最終def結果（&lt;span name=&quot;atMost&quot;&gt;atMost：&lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;期間&lt;/a&gt;&lt;/span&gt;）（暗黙の&lt;span name=&quot;permit&quot;&gt;許可：&lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;なし&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2bc223eea9c0c79b77846b46c918e870d318f61a" translate="yes" xml:space="preserve">
          <source>final def result: &lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">最終的な定義結果：&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7a04ca541ec06af57162ecb19bba992ce08d719e" translate="yes" xml:space="preserve">
          <source>final def result: &lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;</source>
          <target state="translated">最終的な定義結果：&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="094d8a9de9e0c88f774e9cb12db0961eb3baf276" translate="yes" xml:space="preserve">
          <source>final def result: &lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">最終的な定義結果：&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="7381c491430607b7d9559232e9f6457d680fc9e2" translate="yes" xml:space="preserve">
          <source>final def result: &lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="translated">最終的な定義結果：&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="ad535e5267d75f3bc17ec45ea83f2ac96e053f23" translate="yes" xml:space="preserve">
          <source>final def result[&lt;span name=&quot;T&quot;&gt;T&lt;/span&gt;](&lt;span name=&quot;awaitable&quot;&gt;awaitable: &lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Await.result.T&quot;&gt;T&lt;/span&gt;]&lt;/span&gt;, &lt;span name=&quot;atMost&quot;&gt;atMost: &lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.concurrent.Await.result.T&quot;&gt;T&lt;/span&gt;</source>
          <target state="translated">最終的な&lt;span name=&quot;awaitable&quot;&gt;定義&lt;/span&gt;結果[ &lt;span name=&quot;T&quot;&gt;T&lt;/span&gt; ]（&lt;span name=&quot;awaitable&quot;&gt;awaitable：&lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt; [ &lt;span name=&quot;scala.concurrent.Await.result.T&quot;&gt;T&lt;/span&gt; ]&lt;/span&gt;、&lt;span name=&quot;atMost&quot;&gt;atMost：&lt;a href=&quot;duration/duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;&lt;/span&gt;）：&lt;span name=&quot;scala.concurrent.Await.result.T&quot;&gt; T&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="3855d6151a2d45ca44ee90428418d471ad4365c4" translate="yes" xml:space="preserve">
          <source>final def resume: &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;scala.Either&lt;/a&gt;[() =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;], &lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">最終的な&lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;定義の&lt;/a&gt;再開：scala.Either [（）=&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt; ]、&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="bcc780023bbd0937021a6aa40ffab5a9ee6fe2b9" translate="yes" xml:space="preserve">
          <source>final def resume: &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;scala.Either&lt;/a&gt;[() =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;], &lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="translated">最終的な&lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;定義の&lt;/a&gt;再開：scala.Either [（）=&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt; ]、&lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="ad83b04dd7e0b4dd104b8033a6d769010830fb64" translate="yes" xml:space="preserve">
          <source>final def resume: &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;scala.Either&lt;/a&gt;[() =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;], &lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">最終的な&lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;定義の&lt;/a&gt;再開：scala.Either [（）=&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt; ]、&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="e0489adbbaff5402c8cd498cea69684a0efce1f1" translate="yes" xml:space="preserve">
          <source>final def resume: &lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;scala.Either&lt;/a&gt;[() =&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;], &lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">最終的な&lt;a href=&quot;../../index#Either%5B+A,+B%5D=scala.util.Either%5BA,B%5D&quot; id=&quot;scala.Either&quot; name=&quot;scala.Either&quot;&gt;定義の&lt;/a&gt;再開：scala.Either [（）=&amp;gt; &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt; [ &lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt; ]、&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="19891b7761ea16ab580982989025e83afcdb9b99" translate="yes" xml:space="preserve">
          <source>final def reverse: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;]</source>
          <target state="translated">final def reverse：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;なし&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="780c01adca07947cc79401a5629f991c0573b577" translate="yes" xml:space="preserve">
          <source>final def reverse: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def reverse：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="0a8078a13628304487d0b17b4db683d6b360c1b0" translate="yes" xml:space="preserve">
          <source>final def reverse: &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="translated">final def reverse：&lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt; [ &lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="4302f73db6571ac256275a08b1cf7a13557f28e8" translate="yes" xml:space="preserve">
          <source>final def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;]</source>
          <target state="translated">final def reverse：&lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt; ]</target>
        </trans-unit>
        <trans-unit id="d422fbb949cc589b9d14792a934849f8cd4996e3" translate="yes" xml:space="preserve">
          <source>final def reverse: &lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="translated">final def reverse：&lt;a href=&quot;ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;Ordering&lt;/a&gt; [ &lt;span name=&quot;scala.math.Ordering.CachedReverse.T&quot;&gt;T&lt;/span&gt; ]</target>
        </trans-unit>
        <trans-unit id="49b17ea3fbca0aff0a3dc3b9af85861757a46dee" translate="yes" xml:space="preserve">
          <source>final def reverse: &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="translated">最終的なdef逆： &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;範囲&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="adf98b9e82c1a45c957f736fd92d95b80754c70b" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9768bbbf9552adc3741569f1fe0dbfdd68e0cc67" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../byte&quot; id=&quot;scala.Byte&quot; name=&quot;scala.Byte&quot;&gt;Byte&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="92340f2c883ca79c12c70f62948d7acbae6c0977" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e2937ea1cb65239a7cc9ee4d6125ff1ff0ed4f8e" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc29d25d6a3e6ad806af35b94ae7644d86ed4153" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../float&quot; id=&quot;scala.Float&quot; name=&quot;scala.Float&quot;&gt;Float&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="54fd72a04223c80ca9920659a64fb9a6e1c96018" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="82c0fb238463d6195512b8bd78db39cb0036caef" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e4ad24f504f3d7e357e8f52125cbf0d661991fd" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../nothing&quot; id=&quot;scala.Nothing&quot; name=&quot;scala.Nothing&quot;&gt;Nothing&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0114ba655a93f88b4e21ebdccbfac2e22e036ac3" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="96251cd19a3ec31b739e0f600020e58f4d4c4a37" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../../unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7277b95c8a84a51d5f747027633498af737ee610" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../char&quot; id=&quot;scala.Char&quot; name=&quot;scala.Char&quot;&gt;Char&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f2b416531a76f6a1fb8709695dc13927cda5045" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../double&quot; id=&quot;scala.Double&quot; name=&quot;scala.Double&quot;&gt;Double&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e3dce70522211a726528e675c5c9f15aba07e40c" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1a819abf27dbd83a632e2c92ce9b3bc78dbdcd14" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;a href=&quot;../long&quot; id=&quot;scala.Long&quot; name=&quot;scala.Long&quot;&gt;Long&lt;/a&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5a49be8d4ba4e1c66d8db49c5a8340ccf5e4004" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.Array.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5e7f608a7d652120022ce8367fa89c8740550a38" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="11eb40505cb10aaff2a2df11ea528218b1458ade" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a822a0c3494d27a2a905fd046a770fd0a5a1d1eb" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6813b1db962e9e92c196b31d74be4ad271bea06b" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="50b72d9e3b1dc8e8e9cd1663a7bed2982c1096aa" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="246fc773e5927177f1c269167aa78ef01f234c73" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="08a14d994ab8a9d2cf65f497d08c512692e6b235" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.Appended.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf630b565571476fbfb0297c32a76a2a77e5253a" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.Concat.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fc98b8c2495abfc8267168c352f6767903451200" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.Drop.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1daae12c711c763336064c17dc4842605802d419" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.DropRight.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c8b4264f3cbe27b5c33ebd8dd73af542859ba1f1" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.Id.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63cc769d360b77d49104e2b3a6c04e55a4e7a608" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.Map.B&quot;&gt;B&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt; Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="326539eb88c7a1b6acd03c3443f4b889f640595a" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.Prepended.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3784e3d796fa0a6e814e051492dc22e4168b8762" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.Reverse.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="de21ac349cd45dff4abb24bfd5fea13899ba1765" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.Slice.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c89ecc2353d6f807d0f321f5956487e61cc34f4b" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.Take.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a979d1641e4b137ce5072b26a2e772a5c8471e9d" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.IndexedSeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6f07b47e7928459f148e3616ca4d1aba5e22ed91" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.LinearSeq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e6fd2e80e312db4d2b7e6aaa574b873e876be403" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="589b5235fddf742aef4c349a82106bbc5807ac48" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.Seq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ee85527fed617109c99961822bad1c74ca9aff5" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqOps.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a7006d79e84c587ce5bb2416d0847ed3a2605bb" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8d4da09d59579c5963a9e16f71ff87dc6b5155d" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.Appended.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;ブール&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="df06e05c5564f0b009eebc62741f3f9a606b2068" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.Concat.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="02ede292458f4343cc5775fa5717c900d386527c" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.Drop.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c7e6482a09c486975f26abceea5dd2fcd340e8a1" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.DropRight.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="14f28ccf0022eb1a08fe8e88945f5e53f67440ed" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.Id.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8cad7645473f4c08cef61bbf30269b7e2071e8d8" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.Map.B&quot;&gt;B&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4053147db935463782fc74fb7931e255a5702998" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.Prepended.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9d4e1a57f1022346357050f772a4ee2c025c74b" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.Reverse.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bab212f809282ee3da4aed596b9d13e8077e3f87" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.Sorted.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="106dd34c7becd2855319efd4750b41c9e437174c" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.Take.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="73dd9f3f3500d93da5123a4ac5511700d81c1d56" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.SeqView.TakeRight.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7d39b83455a4b5d61c67aacb36e912586601ceb9" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7da9660ceda48076bfd6b6e082fad5c9b8c60964" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="988eb235ee3d0d99f93fbb6c258a92705e022b74" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6aea9eccd1e7a14312fbeeaa4a36a02a5ff7f08d" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8f34b77198476d3dcc469990fedf6a8a3f7717c8" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2197b08c06ddf4eba9bd6f4907cca86fd47a7a94" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c07b02be30e701750676ea52cf0b29f5923bce55" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6703c81ded41e656e5e90a48a9adeb88435c2837" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e5ef08ae929e07982434440bbb59d7737a7ef6f1" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b78155bccd43d2673d64ef8f483bab754b613a5f" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0996c7a93325b0eb06e6bd5a6b8970959f4dbcda" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b34af44ad71558e54d929954bd7c03eda07247a" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41fc9b3c2fbd480ceeae4abc0605d0d644d07fb8" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="87d8a2b6488b711a0705271fe934aad49a3ccf49" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a0da4d8b6318556d360e77fabecc21e568e161cf" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e8f55d4716c4bf07a803db60da41973e57a7ef0b" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6829591109ace85f831c9f572af3cd657320db4a" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc0a7b9d5c043ab31978c233f310a12b9919ee80" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="41d748ea0f3a637582b6a91c1df07510f685af58" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63619a3558623fdd1b51106baa67c1092ff1eaa0" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e45f65897c1317790666ac96be4c83b826401264" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3873771ed9cb79cccaeb990b88f2ddf9b0d2253d" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="48dcc3cee1a08451e2468227f0d6348866973a3a" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e46078e31c35b344eb323d18f0f5383bbdf5709" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ccfb3469848d812823a9b7d948575dd0effd052d" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abdf9216d42117bc293a3ee6b7431000c0232373" translate="yes" xml:space="preserve">
          <source>final def segmentLength(&lt;span name=&quot;p&quot;&gt;p: (&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</source>
          <target state="translated">final def segmentLength（&lt;span name=&quot;p&quot;&gt;p：（&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;）=&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;）：&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;Int&lt;/a&gt;</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
