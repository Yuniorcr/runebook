<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="c2b5211bdfaf28899e253e25dd3449aa20df7745" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set%24%24set4&quot; id=&quot;scala.collection.immutable.Set.Set4&quot; name=&quot;scala.collection.immutable.Set.Set4&quot;&gt;Set4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set4&quot; id=&quot;scala.collection.immutable.Set.Set4&quot; name=&quot;scala.collection.immutable.Set.Set4&quot;&gt;Set4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87372203acd69b88905751d3de575d3bce9eadec" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;set%24%24set4&quot; id=&quot;scala.collection.immutable.Set.Set4&quot; name=&quot;scala.collection.immutable.Set.Set4&quot;&gt;Set4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set4&quot; id=&quot;scala.collection.immutable.Set.Set4&quot; name=&quot;scala.collection.immutable.Set.Set4&quot;&gt;Set4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6096e9b5b50320bb70841156fe50ff95c27460a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;setops&quot; id=&quot;scala.collection.SetOps&quot; name=&quot;scala.collection.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.SetOps&quot; name=&quot;scala.collection.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050da848dbbae9034305210e518f6dd056a037dc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;setops&quot; id=&quot;scala.collection.SetOps&quot; name=&quot;scala.collection.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.SetOps&quot; name=&quot;scala.collection.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef37156859104fe3ff103b14b2d213047dc38e14" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;setops&quot; id=&quot;scala.collection.immutable.SetOps&quot; name=&quot;scala.collection.immutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.immutable.SetOps&quot; name=&quot;scala.collection.immutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd023dfda1f61edecab81cfc07284e9409d1abc3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;setops&quot; id=&quot;scala.collection.immutable.SetOps&quot; name=&quot;scala.collection.immutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.immutable.SetOps&quot; name=&quot;scala.collection.immutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4753b358ccab1763a4c083e42f888cb2d9ca67a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;setops&quot; id=&quot;scala.collection.mutable.SetOps&quot; name=&quot;scala.collection.mutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.mutable.SetOps&quot; name=&quot;scala.collection.mutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11c9cbff9f3422f4f7bbf844618825a0a1b894f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;setops&quot; id=&quot;scala.collection.mutable.SetOps&quot; name=&quot;scala.collection.mutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.mutable.SetOps&quot; name=&quot;scala.collection.mutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81cebe3bf1482818d5479fefebf074a2cb64cb9b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;setter&quot; id=&quot;scala.annotation.meta.setter&quot; name=&quot;scala.annotation.meta.setter&quot;&gt;setter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setter&quot; id=&quot;scala.annotation.meta.setter&quot; name=&quot;scala.annotation.meta.setter&quot;&gt;setter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb4864ec4fe3bb58870960b38afcf33ad99e9b0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;setter&quot; id=&quot;scala.annotation.meta.setter&quot; name=&quot;scala.annotation.meta.setter&quot;&gt;setter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setter&quot; id=&quot;scala.annotation.meta.setter&quot; name=&quot;scala.annotation.meta.setter&quot;&gt;setter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="728eb352b18830fbf15c686a118f597e72cd1a94" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5cba2d388a8ae9629f20bb8e609a3e89bb3dbf9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;short&quot; id=&quot;scala.Short&quot; name=&quot;scala.Short&quot;&gt;Short&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba157f74e389a3d272029df37d158e26e612b5bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;showasinfix&quot; id=&quot;scala.annotation.showAsInfix&quot; name=&quot;scala.annotation.showAsInfix&quot;&gt;showAsInfix&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;showasinfix&quot; id=&quot;scala.annotation.showAsInfix&quot; name=&quot;scala.annotation.showAsInfix&quot;&gt;showAsInfix&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbc31b5703f9e1bbfa8faf5b9ef18080a2ffd95" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;showasinfix&quot; id=&quot;scala.annotation.showAsInfix&quot; name=&quot;scala.annotation.showAsInfix&quot;&gt;showAsInfix&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;showasinfix&quot; id=&quot;scala.annotation.showAsInfix&quot; name=&quot;scala.annotation.showAsInfix&quot;&gt;showAsInfix&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="215ed2a75b0a197b4fc19d3deec3c4249cd48078" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;shrinkable&quot; id=&quot;scala.collection.mutable.Shrinkable&quot; name=&quot;scala.collection.mutable.Shrinkable&quot;&gt;Shrinkable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Shrinkable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;shrinkable&quot; id=&quot;scala.collection.mutable.Shrinkable&quot; name=&quot;scala.collection.mutable.Shrinkable&quot;&gt;Shrinkable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Shrinkable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d34fdf44c61970a99b5b90863208acd064beebf6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;shrinkable&quot; id=&quot;scala.collection.mutable.Shrinkable&quot; name=&quot;scala.collection.mutable.Shrinkable&quot;&gt;Shrinkable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Shrinkable.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;shrinkable&quot; id=&quot;scala.collection.mutable.Shrinkable&quot; name=&quot;scala.collection.mutable.Shrinkable&quot;&gt;Shrinkable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Shrinkable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56de1fb2f516dee6d1d8ce56d8393789268da85e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;shutdownhookthread&quot; id=&quot;scala.sys.ShutdownHookThread&quot; name=&quot;scala.sys.ShutdownHookThread&quot;&gt;ShutdownHookThread&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;shutdownhookthread&quot; id=&quot;scala.sys.ShutdownHookThread&quot; name=&quot;scala.sys.ShutdownHookThread&quot;&gt;ShutdownHookThread&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e6c9ff1a1483cb5ad8acde7134b896471c79ba3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;shutdownhookthread&quot; id=&quot;scala.sys.ShutdownHookThread&quot; name=&quot;scala.sys.ShutdownHookThread&quot;&gt;ShutdownHookThread&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;shutdownhookthread&quot; id=&quot;scala.sys.ShutdownHookThread&quot; name=&quot;scala.sys.ShutdownHookThread&quot;&gt;ShutdownHookThread&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8423d48f98ec8e7ed34f4418614d3ab18fbb83eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;singleton&quot; id=&quot;scala.Singleton&quot; name=&quot;scala.Singleton&quot;&gt;Singleton&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;singleton&quot; id=&quot;scala.Singleton&quot; name=&quot;scala.Singleton&quot;&gt;Singleton&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="884c27d54953983de1b4dfa5b7240f17ea91bc50" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;singleton&quot; id=&quot;scala.Singleton&quot; name=&quot;scala.Singleton&quot;&gt;Singleton&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;singleton&quot; id=&quot;scala.Singleton&quot; name=&quot;scala.Singleton&quot;&gt;Singleton&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ee25bde9b344efb6e65796d50bcabc7a56a12f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;softreference&quot; id=&quot;scala.ref.SoftReference&quot; name=&quot;scala.ref.SoftReference&quot;&gt;SoftReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.SoftReference.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;softreference&quot; id=&quot;scala.ref.SoftReference&quot; name=&quot;scala.ref.SoftReference&quot;&gt;SoftReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.SoftReference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c1f5439205c1722707d3eba34b88e3795d1986" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;softreference&quot; id=&quot;scala.ref.SoftReference&quot; name=&quot;scala.ref.SoftReference&quot;&gt;SoftReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.SoftReference.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;softreference&quot; id=&quot;scala.ref.SoftReference&quot; name=&quot;scala.ref.SoftReference&quot;&gt;SoftReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.SoftReference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7028edb2176e550ea222a2fe4adf6f7c171cf797" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39f64c14f16ece7df692bec16343baa1e060548a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;Some&lt;/a&gt;[&lt;span name=&quot;scala.Some.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66f346a955b69424a576917fc0dcb0500dc1f9cd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48bc3df6e424fe5f4d82799847f30e0b0860e336" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortediterablefactory&quot; id=&quot;scala.collection.SortedIterableFactory&quot; name=&quot;scala.collection.SortedIterableFactory&quot;&gt;SortedIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedIterableFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="805b6448b075ca4b2605044e4c8db51f08bc4ef8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortediterablefactory%24%24delegate&quot; id=&quot;scala.collection.SortedIterableFactory.Delegate&quot; name=&quot;scala.collection.SortedIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortediterablefactory%24%24delegate&quot; id=&quot;scala.collection.SortedIterableFactory.Delegate&quot; name=&quot;scala.collection.SortedIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a6ad36aa4b826904e79fca995af58c68813c379" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortediterablefactory%24%24delegate&quot; id=&quot;scala.collection.SortedIterableFactory.Delegate&quot; name=&quot;scala.collection.SortedIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortediterablefactory%24%24delegate&quot; id=&quot;scala.collection.SortedIterableFactory.Delegate&quot; name=&quot;scala.collection.SortedIterableFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedIterableFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e15f04a5f54a998be02a2cddce9c4437dc37d9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aead997cd845c3cafae0631a8108abde2ad42175" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.SortedMap&quot; name=&quot;scala.collection.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4f12e1e5c27cbf7e9d5d4311aaa8c4d5281112f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a080d359e03a019b350b62f05adedf8147b5e1e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5603fe5210399acdf2f1b766d99f69cbca9ededc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67707c477c444d66d1cacdc09afdc8876a8e913a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ec46486f01f8e523d4f998ea69f7e6b46bdbe82" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d1a35553a6bc08f327dadaecc317ab1b9641041" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4acf3c6a6d8b6dde67751c5b96ab538a2b1ae79" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3f8bb4552ab77e7bd5e0d9758669e1644e3990c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e7f30e46fb914c7e076eb6b895ecf01523126f0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d881129702b46a6d3a54b973c2308f09999054cb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapfactory&quot; id=&quot;scala.collection.SortedMapFactory&quot; name=&quot;scala.collection.SortedMapFactory&quot;&gt;SortedMapFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af3336d1552bf6a7b798df868846819293c92d46" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapfactory%24%24delegate&quot; id=&quot;scala.collection.SortedMapFactory.Delegate&quot; name=&quot;scala.collection.SortedMapFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapfactory%24%24delegate&quot; id=&quot;scala.collection.SortedMapFactory.Delegate&quot; name=&quot;scala.collection.SortedMapFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242fe12714f966eb86c2c4c4141a776c9985c5ed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapfactory%24%24delegate&quot; id=&quot;scala.collection.SortedMapFactory.Delegate&quot; name=&quot;scala.collection.SortedMapFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapfactory%24%24delegate&quot; id=&quot;scala.collection.SortedMapFactory.Delegate&quot; name=&quot;scala.collection.SortedMapFactory.Delegate&quot;&gt;Delegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactory.Delegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c85436e42eae9c38524c3cf8a2174f38d9819379" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapfactorydefaults&quot; id=&quot;scala.collection.SortedMapFactoryDefaults&quot; name=&quot;scala.collection.SortedMapFactoryDefaults&quot;&gt;SortedMapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapfactorydefaults&quot; id=&quot;scala.collection.SortedMapFactoryDefaults&quot; name=&quot;scala.collection.SortedMapFactoryDefaults&quot;&gt;SortedMapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec4d032913c52a816b7b94a040167113fc2e7ea8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapfactorydefaults&quot; id=&quot;scala.collection.SortedMapFactoryDefaults&quot; name=&quot;scala.collection.SortedMapFactoryDefaults&quot;&gt;SortedMapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapfactorydefaults&quot; id=&quot;scala.collection.SortedMapFactoryDefaults&quot; name=&quot;scala.collection.SortedMapFactoryDefaults&quot;&gt;SortedMapFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapFactoryDefaults.UnsortedCC&quot;&gt;UnsortedCC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53810447954ce3b499e72c2572e464b42b7282f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.SortedMapOps&quot; name=&quot;scala.collection.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.SortedMapOps&quot; name=&quot;scala.collection.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8095467eed21702583abd7c2b02fc0ad38705f20" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.SortedMapOps&quot; name=&quot;scala.collection.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.SortedMapOps&quot; name=&quot;scala.collection.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b878bc28b5722936945f25c60cf1ccd281e96a5e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.immutable.SortedMapOps&quot; name=&quot;scala.collection.immutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.immutable.SortedMapOps&quot; name=&quot;scala.collection.immutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e8e15b3eaa5a856be675f0853dd46faf6ad865a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.immutable.SortedMapOps&quot; name=&quot;scala.collection.immutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.immutable.SortedMapOps&quot; name=&quot;scala.collection.immutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca4a2dbccc84db0179c0e6c375b738f789609e5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.mutable.SortedMapOps&quot; name=&quot;scala.collection.mutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.mutable.SortedMapOps&quot; name=&quot;scala.collection.mutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79d04ec05ffd86f36c1795fecf58c8ba56cc7841" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.mutable.SortedMapOps&quot; name=&quot;scala.collection.mutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.mutable.SortedMapOps&quot; name=&quot;scala.collection.mutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48798a1268751f3e80ae0fc51c187372041eb630" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.MapCC&quot;&gt;MapCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.MapCC&quot;&gt;MapCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77dc17734f7f9f4b3b4316ee9a9ef25d647f5b17" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.MapCC&quot;&gt;MapCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24%24withfilter&quot; id=&quot;scala.collection.SortedMapOps.WithFilter&quot; name=&quot;scala.collection.SortedMapOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.MapCC&quot;&gt;MapCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedMapOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="845ad98187eb46be5dfb7171c771e0d6f5838c4f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops%24genkeysortedset&quot; id=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot;&gt;GenKeySortedSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24genkeysortedset&quot; id=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot;&gt;GenKeySortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fad7711ac56f5b3dfdde32ab4ddd42dfa7220a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops%24genkeysortedset&quot; id=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot;&gt;GenKeySortedSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24genkeysortedset&quot; id=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.GenKeySortedSet&quot;&gt;GenKeySortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0d4a88c9af13c51fd118d309ab2c74f1d20d5d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops%24immutablekeysortedset&quot; id=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot; name=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot;&gt;ImmutableKeySortedSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24immutablekeysortedset&quot; id=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot; name=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot;&gt;ImmutableKeySortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920688ea387546a338cb05595b0741e6f700f709" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops%24immutablekeysortedset&quot; id=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot; name=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot;&gt;ImmutableKeySortedSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24immutablekeysortedset&quot; id=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot; name=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot;&gt;ImmutableKeySortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2277733d84bc41785c937fe8cd205afa6f1b09bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops%24keysortedset&quot; id=&quot;scala.collection.SortedMapOps.KeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.KeySortedSet&quot;&gt;KeySortedSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24keysortedset&quot; id=&quot;scala.collection.SortedMapOps.KeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.KeySortedSet&quot;&gt;KeySortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c266cdc6c842d3c07dd12314e4c698495df52bbe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedmapops%24keysortedset&quot; id=&quot;scala.collection.SortedMapOps.KeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.KeySortedSet&quot;&gt;KeySortedSet&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24keysortedset&quot; id=&quot;scala.collection.SortedMapOps.KeySortedSet&quot; name=&quot;scala.collection.SortedMapOps.KeySortedSet&quot;&gt;KeySortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ebb992d18904728f53b5547456d3f5f15b2f33e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedops&quot; id=&quot;scala.collection.SortedOps&quot; name=&quot;scala.collection.SortedOps&quot;&gt;SortedOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedops&quot; id=&quot;scala.collection.SortedOps&quot; name=&quot;scala.collection.SortedOps&quot;&gt;SortedOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3c3da37448d518afc2480da2ac9d0d3ade023b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedops&quot; id=&quot;scala.collection.SortedOps&quot; name=&quot;scala.collection.SortedOps&quot;&gt;SortedOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedops&quot; id=&quot;scala.collection.SortedOps&quot; name=&quot;scala.collection.SortedOps&quot;&gt;SortedOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f44ab3745e933bbaf557cd040f83a9fee5b9aa0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b930ec08c7cad37f1d576d6e6998625772b574d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.SortedSet&quot; name=&quot;scala.collection.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="529f75a35d1d7e85a23e2d62dac42f21e92ed35f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39c9b8f57b9f1be69b295f228fc73fdb4cb05745" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc6019ba50941be5ac4a7415d448e716f91287b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f962013eb2ca367ee79df2dbf3823c3bedc779e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26d2c9f9aaa9e7768ad84c7a1ab3b15ef19ea757" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetfactorydefaults&quot; id=&quot;scala.collection.SortedSetFactoryDefaults&quot; name=&quot;scala.collection.SortedSetFactoryDefaults&quot;&gt;SortedSetFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetfactorydefaults&quot; id=&quot;scala.collection.SortedSetFactoryDefaults&quot; name=&quot;scala.collection.SortedSetFactoryDefaults&quot;&gt;SortedSetFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57e1e40c8436604e7b95900525de9851224b7a79" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetfactorydefaults&quot; id=&quot;scala.collection.SortedSetFactoryDefaults&quot; name=&quot;scala.collection.SortedSetFactoryDefaults&quot;&gt;SortedSetFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetfactorydefaults&quot; id=&quot;scala.collection.SortedSetFactoryDefaults&quot; name=&quot;scala.collection.SortedSetFactoryDefaults&quot;&gt;SortedSetFactoryDefaults&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetFactoryDefaults.WithFilterCC&quot;&gt;WithFilterCC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b377adcb36f5386fbd1455b14d51382180db5ad0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.SortedSetOps&quot; name=&quot;scala.collection.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.SortedSetOps&quot; name=&quot;scala.collection.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="905e76180c1fb505b258a3dfa6febf5bcb2d5c8f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.SortedSetOps&quot; name=&quot;scala.collection.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.SortedSetOps&quot; name=&quot;scala.collection.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c14da8079860906bc8e3104d82321f00d8ff110" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.immutable.SortedSetOps&quot; name=&quot;scala.collection.immutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.immutable.SortedSetOps&quot; name=&quot;scala.collection.immutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dec2dc43754b7feafe9496fa5a718351e86d8bac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.immutable.SortedSetOps&quot; name=&quot;scala.collection.immutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.immutable.SortedSetOps&quot; name=&quot;scala.collection.immutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdbbaa5ff047aeb77b60800caadc5e29b73ff12e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.mutable.SortedSetOps&quot; name=&quot;scala.collection.mutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.mutable.SortedSetOps&quot; name=&quot;scala.collection.mutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="352a9a9ccbc27c3a0db1650585f2391e5261deb4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.mutable.SortedSetOps&quot; name=&quot;scala.collection.mutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.mutable.SortedSetOps&quot; name=&quot;scala.collection.mutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9c204581c46ec709f23a8f696e9cd28e9d059d0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8164023a3be4929f7287a6892024cd6c5db31dd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops%24%24withfilter&quot; id=&quot;scala.collection.SortedSetOps.WithFilter&quot; name=&quot;scala.collection.SortedSetOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.IterableCC&quot;&gt;IterableCC&lt;/span&gt;, &lt;span name=&quot;scala.collection.SortedSetOps.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b81c82fe7c9abc7a44e9868c73fba4cc62ab279e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27adf4cf058fbc5b96e9444db273ce61efda0add" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source&quot; id=&quot;scala.io.Source&quot; name=&quot;scala.io.Source&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc77532eb8dbe218f18d862bf45ff8c7883734aa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;source%24lineiterator&quot; id=&quot;scala.io.Source.LineIterator&quot; name=&quot;scala.io.Source.LineIterator&quot;&gt;LineIterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source%24lineiterator&quot; id=&quot;scala.io.Source.LineIterator&quot; name=&quot;scala.io.Source.LineIterator&quot;&gt;LineIterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ab4e3fd577a8d3f9a09317bbffbc2c264cd9ef2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;source%24lineiterator&quot; id=&quot;scala.io.Source.LineIterator&quot; name=&quot;scala.io.Source.LineIterator&quot;&gt;LineIterator&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source%24lineiterator&quot; id=&quot;scala.io.Source.LineIterator&quot; name=&quot;scala.io.Source.LineIterator&quot;&gt;LineIterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ad713e17b6b23223f89a851b4beda4ccbad059a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;source%24positioner&quot; id=&quot;scala.io.Source.Positioner&quot; name=&quot;scala.io.Source.Positioner&quot;&gt;Positioner&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source%24positioner&quot; id=&quot;scala.io.Source.Positioner&quot; name=&quot;scala.io.Source.Positioner&quot;&gt;Positioner&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5753b8544c272a366075dd1134b99c13d7db1f9d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;source%24positioner&quot; id=&quot;scala.io.Source.Positioner&quot; name=&quot;scala.io.Source.Positioner&quot;&gt;Positioner&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;source%24positioner&quot; id=&quot;scala.io.Source.Positioner&quot; name=&quot;scala.io.Source.Positioner&quot;&gt;Positioner&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dccd8678a400a0d39e90a05c23bb818b8a7fbfbf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specializable&quot; id=&quot;scala.Specializable&quot; name=&quot;scala.Specializable&quot;&gt;Specializable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable&quot; id=&quot;scala.Specializable&quot; name=&quot;scala.Specializable&quot;&gt;Specializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35ccf545b281a1dadd1abe516bc32e47c8960a7a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specializable&quot; id=&quot;scala.Specializable&quot; name=&quot;scala.Specializable&quot;&gt;Specializable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable&quot; id=&quot;scala.Specializable&quot; name=&quot;scala.Specializable&quot;&gt;Specializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa937141a6cc96ac3b1dff659e0b10e2c760a949" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[&lt;span name=&quot;scala.Specializable.Group.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[&lt;span name=&quot;scala.Specializable.Group.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0db1b214c1edc6e813da0ebd0742bb471051a913" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[&lt;span name=&quot;scala.Specializable.Group.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable%24%24group&quot; id=&quot;scala.Specializable.Group&quot; name=&quot;scala.Specializable.Group&quot;&gt;Group&lt;/a&gt;[&lt;span name=&quot;scala.Specializable.Group.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ebf6155a95d294f3ce83be9d414242b62140222b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specializable%24%24specializedgroup&quot; id=&quot;scala.Specializable.SpecializedGroup&quot; name=&quot;scala.Specializable.SpecializedGroup&quot;&gt;SpecializedGroup&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable%24%24specializedgroup&quot; id=&quot;scala.Specializable.SpecializedGroup&quot; name=&quot;scala.Specializable.SpecializedGroup&quot;&gt;SpecializedGroup&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b54ba354198912ef992b9373a3cfceeeb9f713b0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specializable%24%24specializedgroup&quot; id=&quot;scala.Specializable.SpecializedGroup&quot; name=&quot;scala.Specializable.SpecializedGroup&quot;&gt;SpecializedGroup&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specializable%24%24specializedgroup&quot; id=&quot;scala.Specializable.SpecializedGroup&quot; name=&quot;scala.Specializable.SpecializedGroup&quot;&gt;SpecializedGroup&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39730dbac3b9b63a6f4c09f536f98fbc249ea9aa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specialized&quot; id=&quot;scala.specialized&quot; name=&quot;scala.specialized&quot;&gt;specialized&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specialized&quot; id=&quot;scala.specialized&quot; name=&quot;scala.specialized&quot;&gt;specialized&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="760858b855efa3509166099cf99076fd7321272e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specialized&quot; id=&quot;scala.specialized&quot; name=&quot;scala.specialized&quot;&gt;specialized&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specialized&quot; id=&quot;scala.specialized&quot; name=&quot;scala.specialized&quot;&gt;specialized&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5583d28f90c586d9d8433ab1362a6a388c2f0f33" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specificiterablefactory&quot; id=&quot;scala.collection.SpecificIterableFactory&quot; name=&quot;scala.collection.SpecificIterableFactory&quot;&gt;SpecificIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specificiterablefactory&quot; id=&quot;scala.collection.SpecificIterableFactory&quot; name=&quot;scala.collection.SpecificIterableFactory&quot;&gt;SpecificIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5aa3e518d7482116ec28d2a831e680a6b981f2b1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;specificiterablefactory&quot; id=&quot;scala.collection.SpecificIterableFactory&quot; name=&quot;scala.collection.SpecificIterableFactory&quot;&gt;SpecificIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;specificiterablefactory&quot; id=&quot;scala.collection.SpecificIterableFactory&quot; name=&quot;scala.collection.SpecificIterableFactory&quot;&gt;SpecificIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.SpecificIterableFactory.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.SpecificIterableFactory.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85aca2dd4f81076b43529db087681b802d7001d5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9de491d6f72a5c97654b9cd493d3e58fdcdbca82" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d10033f17a974bff7147ddeb155f49b5113af1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b148f20546b4c5e204bba3775fe2bc2b6e27299c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d0882dfbbb69f687f0e86fa97a1c1b1641242c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee29e0d2402f4f16ed6157a1dddf2d40ccbcb2c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stepper&quot; id=&quot;scala.collection.Stepper&quot; name=&quot;scala.collection.Stepper&quot;&gt;Stepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.Stepper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e13af5a0b8fa514a69089a4d32ec1d98920d3864" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="123ddbb3ea8fb57e28b158ffc955214d2aa7fde5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;EfficientSplit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7980f09cca8411573040e40ca028ea26c05c6b8d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.StepperShape.S&quot;&gt;S&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.StepperShape.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b50d942b7a732553c791ac0119036bb2c6e775a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.StepperShape.S&quot;&gt;S&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;steppershape&quot; id=&quot;scala.collection.StepperShape&quot; name=&quot;scala.collection.StepperShape&quot;&gt;StepperShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.StepperShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.StepperShape.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c95e7da6c2741afc21979a6c6915bd28e05c61e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;steppershape%24%24shape&quot; id=&quot;scala.collection.StepperShape.Shape&quot; name=&quot;scala.collection.StepperShape.Shape&quot;&gt;Shape&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;steppershape%24%24shape&quot; id=&quot;scala.collection.StepperShape.Shape&quot; name=&quot;scala.collection.StepperShape.Shape&quot;&gt;Shape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb51e897cd59ee4dfb333b822b995e6f7321d50c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;steppershape%24%24shape&quot; id=&quot;scala.collection.StepperShape.Shape&quot; name=&quot;scala.collection.StepperShape.Shape&quot;&gt;Shape&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;steppershape%24%24shape&quot; id=&quot;scala.collection.StepperShape.Shape&quot; name=&quot;scala.collection.StepperShape.Shape&quot;&gt;Shape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6ae579ba6c5abdb0bb21a184e29b80d174243a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;steppershapelowpriority1&quot; id=&quot;scala.collection.StepperShapeLowPriority1&quot; name=&quot;scala.collection.StepperShapeLowPriority1&quot;&gt;StepperShapeLowPriority1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;steppershapelowpriority1&quot; id=&quot;scala.collection.StepperShapeLowPriority1&quot; name=&quot;scala.collection.StepperShapeLowPriority1&quot;&gt;StepperShapeLowPriority1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f7d32e54dbf6c282ab03b87ceb93bad726b35ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;steppershapelowpriority1&quot; id=&quot;scala.collection.StepperShapeLowPriority1&quot; name=&quot;scala.collection.StepperShapeLowPriority1&quot;&gt;StepperShapeLowPriority1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;steppershapelowpriority1&quot; id=&quot;scala.collection.StepperShapeLowPriority1&quot; name=&quot;scala.collection.StepperShapeLowPriority1&quot;&gt;StepperShapeLowPriority1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf2c260f1904bcfae020391de044e1abed2affa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;steppershapelowpriority2&quot; id=&quot;scala.collection.StepperShapeLowPriority2&quot; name=&quot;scala.collection.StepperShapeLowPriority2&quot;&gt;StepperShapeLowPriority2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;steppershapelowpriority2&quot; id=&quot;scala.collection.StepperShapeLowPriority2&quot; name=&quot;scala.collection.StepperShapeLowPriority2&quot;&gt;StepperShapeLowPriority2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f3a48722855ae7c8e5e3bc63e164781b3bacb01" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;steppershapelowpriority2&quot; id=&quot;scala.collection.StepperShapeLowPriority2&quot; name=&quot;scala.collection.StepperShapeLowPriority2&quot;&gt;StepperShapeLowPriority2&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;steppershapelowpriority2&quot; id=&quot;scala.collection.StepperShapeLowPriority2&quot; name=&quot;scala.collection.StepperShapeLowPriority2&quot;&gt;StepperShapeLowPriority2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e444da49a71d6c89a9f55de868caffbcb21fa720" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9806ddd6f91d1cf4eaa066f8dd1954b5e853a7f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4a87d4cbc762e9addbfbc650f25402e459373ca" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stream%24%24cons&quot; id=&quot;scala.collection.immutable.Stream.Cons&quot; name=&quot;scala.collection.immutable.Stream.Cons&quot;&gt;Cons&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24cons&quot; id=&quot;scala.collection.immutable.Stream.Cons&quot; name=&quot;scala.collection.immutable.Stream.Cons&quot;&gt;Cons&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b24d8d9218a188fb5bfc3af8feca8bed92fadbf5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stream%24%24cons&quot; id=&quot;scala.collection.immutable.Stream.Cons&quot; name=&quot;scala.collection.immutable.Stream.Cons&quot;&gt;Cons&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24cons&quot; id=&quot;scala.collection.immutable.Stream.Cons&quot; name=&quot;scala.collection.immutable.Stream.Cons&quot;&gt;Cons&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06edbfd069606212e4d373177bdda041b8f7ff65" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stream%24%24deferrer&quot; id=&quot;scala.collection.immutable.Stream.Deferrer&quot; name=&quot;scala.collection.immutable.Stream.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Deferrer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24deferrer&quot; id=&quot;scala.collection.immutable.Stream.Deferrer&quot; name=&quot;scala.collection.immutable.Stream.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Deferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b18e897bcb683a9837bf9b6b4f3fad9a44af5c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stream%24%24deferrer&quot; id=&quot;scala.collection.immutable.Stream.Deferrer&quot; name=&quot;scala.collection.immutable.Stream.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Deferrer.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24deferrer&quot; id=&quot;scala.collection.immutable.Stream.Deferrer&quot; name=&quot;scala.collection.immutable.Stream.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Deferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76c33d5fa4dce5927468b4fa03d19609806eddf3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stream%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.Stream.SerializationProxy&quot; name=&quot;scala.collection.immutable.Stream.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.Stream.SerializationProxy&quot; name=&quot;scala.collection.immutable.Stream.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d43e64af1832197111f50e39cb0b1ebcf98dd82f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stream%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.Stream.SerializationProxy&quot; name=&quot;scala.collection.immutable.Stream.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.Stream.SerializationProxy&quot; name=&quot;scala.collection.immutable.Stream.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7195f890168770b513accefb7ed0e8bd05e6a33c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions&quot; id=&quot;scala.collection.convert.StreamExtensions&quot; name=&quot;scala.collection.convert.StreamExtensions&quot;&gt;StreamExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions&quot; id=&quot;scala.collection.convert.StreamExtensions&quot; name=&quot;scala.collection.convert.StreamExtensions&quot;&gt;StreamExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc49bb1e495b00f8594e9f52076987e8cb2011a2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions&quot; id=&quot;scala.collection.convert.StreamExtensions&quot; name=&quot;scala.collection.convert.StreamExtensions&quot;&gt;StreamExtensions&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions&quot; id=&quot;scala.collection.convert.StreamExtensions&quot; name=&quot;scala.collection.convert.StreamExtensions&quot;&gt;StreamExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8b16aec0d9e90e7c293691596f5c9c8e245c65" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8c4bdc5e0df79f6264c06824e427cdf514809c1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d24048a1c398812f7bb8d906040e44abf0b8dbc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24lowpriorityaccumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot;&gt;LowPriorityAccumulatorFactoryInfo&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24lowpriorityaccumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot;&gt;LowPriorityAccumulatorFactoryInfo&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f2ce0e45409910441e49de7f5134be8047c7796" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24lowpriorityaccumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot;&gt;LowPriorityAccumulatorFactoryInfo&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24lowpriorityaccumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot;&gt;LowPriorityAccumulatorFactoryInfo&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73509caf5193bf42f712a62114c48d4415284fef" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.St&quot;&gt;St&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.St&quot;&gt;St&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47f747e3b7a6ae70d33ec3f1135b68cb956c894" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.St&quot;&gt;St&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.St&quot;&gt;St&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb15742689833b4a1b1a1aef7edbe7692e56dc91" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24streamshapelowpriority1&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot;&gt;StreamShapeLowPriority1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamshapelowpriority1&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot;&gt;StreamShapeLowPriority1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2856d2b5d0bd0a0653202ad72f9acce074a1f6eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24streamshapelowpriority1&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot;&gt;StreamShapeLowPriority1&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamshapelowpriority1&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot;&gt;StreamShapeLowPriority1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28088405b1f4a97ed6dc27a0f1e16b89521c3c39" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.S&quot;&gt;S&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fc66a784a40285d51b8082719202953fd93bfe4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.S&quot;&gt;S&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62e5235295c480e883831612e836ad68b2d1dd21" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24anyarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot;&gt;AnyArrayHasSeqParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24anyarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot;&gt;AnyArrayHasSeqParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e91951bac8d20502ab98a0ad029c6229d369e794" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24anyarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot;&gt;AnyArrayHasSeqParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24anyarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot;&gt;AnyArrayHasSeqParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4724b7c099f1e50ebaef1e2320a054af426a268f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24bytearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot;&gt;ByteArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24bytearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot;&gt;ByteArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ee64e44f131b8c9ab2d640fed7cd634f5415cbc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24bytearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot;&gt;ByteArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24bytearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot;&gt;ByteArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef95fb1c0369c403762841f4b08a9656920805fc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24chararrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot;&gt;CharArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24chararrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot;&gt;CharArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78b1214d6497e28d46afbf195f03daec9bd01178" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24chararrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot;&gt;CharArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24chararrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot;&gt;CharArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfb9cd8305f50fd9989d26961a1fa3c37859b897" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24doublearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot;&gt;DoubleArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24doublearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot;&gt;DoubleArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8314ac60c503695519e27596686367e9ede4c270" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24doublearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot;&gt;DoubleArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24doublearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot;&gt;DoubleArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2958cf9a99539687c7907c8501704ca640d629d5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24doublestreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot;&gt;DoubleStreamHasToScala&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24doublestreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot;&gt;DoubleStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea9c782f4b4069affb3f191afff94b6b42312b24" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24doublestreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot;&gt;DoubleStreamHasToScala&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24doublestreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot;&gt;DoubleStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3aedf11b49dd1482cf9fcc10ebe2e51a307318b8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24floatarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot;&gt;FloatArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24floatarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot;&gt;FloatArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7ba9a98fb60a352378cb9d3999571fd1cb67cdd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24floatarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot;&gt;FloatArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24floatarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot;&gt;FloatArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4598f43d7f83d0ae89e9dd196bbb62acdd4d0d5b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24intarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot;&gt;IntArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24intarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot;&gt;IntArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43cc1f2884dc907922cda5629bfb1b61ef107fb8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24intarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot;&gt;IntArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24intarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot;&gt;IntArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9817b8e3813aca23c0e0397aa9e1d2cfd8ddcd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24intstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot;&gt;IntStreamHasToScala&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24intstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot;&gt;IntStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d71729a998c1014e54dc7abbb17dd0100d49b58" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24intstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot;&gt;IntStreamHasToScala&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24intstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot;&gt;IntStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fac90cf6c6fa90dcfdd99a9dcf195a11d71b1450" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24iterablehasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot;&gt;IterableHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24iterablehasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot;&gt;IterableHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="407adb4da76307f477275e74d91e43b6003f2188" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24iterablehasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot;&gt;IterableHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24iterablehasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot;&gt;IterableHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b8a8706c20528e804c582b69297a846952d93a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24iterablenongenerichasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot;&gt;IterableNonGenericHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24iterablenongenerichasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot;&gt;IterableNonGenericHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e003b22dac38b3b4598e2ce6973fa16b2ad43675" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24iterablenongenerichasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot;&gt;IterableNonGenericHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24iterablenongenerichasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot;&gt;IterableNonGenericHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c880342444ef402714db7f889cd46f083a1da7a2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24longarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot;&gt;LongArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24longarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot;&gt;LongArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e77399e1a3c4bedeb5e086892dd0c56bc3ee195c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24longarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot;&gt;LongArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24longarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot;&gt;LongArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06c81077e01ce5a2dadb3f1f1db564ee9f786af6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24longstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot;&gt;LongStreamHasToScala&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24longstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot;&gt;LongStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef9a849d5f073324fc01a8263597a8e4bddc7d41" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24longstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot;&gt;LongStreamHasToScala&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24longstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot;&gt;LongStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02a22e8ac33f4dd583b111006232708c7de613db" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24maphasparkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot;&gt;MapHasParKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24maphasparkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot;&gt;MapHasParKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f872e1f38886fbe3dd2d5bf7a52d2dc66aae6b03" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24maphasparkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot;&gt;MapHasParKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24maphasparkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot;&gt;MapHasParKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0278e380fd55cf2e61b353dcff7cf829afbcf1d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24maphasseqkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot;&gt;MapHasSeqKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24maphasseqkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot;&gt;MapHasSeqKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6626b44e65fb1b9e051622f821ff73e9f6e121" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24maphasseqkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot;&gt;MapHasSeqKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24maphasseqkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot;&gt;MapHasSeqKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5180c56a70548c553084580f865903211bd0348b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24shortarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot;&gt;ShortArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24shortarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot;&gt;ShortArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83e6e7fbdecaf50ee1d4551094128c7639a38a42" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24shortarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot;&gt;ShortArrayHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24shortarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot;&gt;ShortArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5271522e5f2675769340e4bcd16f241cf70b6267" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24stepperhasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot;&gt;StepperHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stepperhasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot;&gt;StepperHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea81e567d201b734e05ccc3c2aa150cce9ab72de" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24stepperhasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot;&gt;StepperHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stepperhasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot;&gt;StepperHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d424da9762aea1bc84f466729842274ab802e6a2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24stepperhasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot;&gt;StepperHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stepperhasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot;&gt;StepperHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7863206e2f9d09b1019fb4c184b68ce71f8d44f7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24stepperhasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot;&gt;StepperHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stepperhasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot;&gt;StepperHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85207edaf4f0b89f5859a7933ba493c7d584a100" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24streamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot;&gt;StreamHasToScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24streamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot;&gt;StreamHasToScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="18b996001ca6c8f776e76bae8264ab1350a4e3a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24streamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot;&gt;StreamHasToScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24streamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot;&gt;StreamHasToScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03d2b9645265662b019612464819677be3ca9e6d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24stringhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot;&gt;StringHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stringhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot;&gt;StringHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c2bf945e41c599e217325b25988dfa030f901bd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;streamextensions%24stringhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot;&gt;StringHasSeqParStream&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stringhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot;&gt;StringHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabcacf894dd0db09475053150e290e290ed89a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictfp&quot; id=&quot;scala.annotation.strictfp&quot; name=&quot;scala.annotation.strictfp&quot;&gt;strictfp&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictfp&quot; id=&quot;scala.annotation.strictfp&quot; name=&quot;scala.annotation.strictfp&quot;&gt;strictfp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="809714b35f03222d2409a6c0b2c42d125b032efc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictfp&quot; id=&quot;scala.annotation.strictfp&quot; name=&quot;scala.annotation.strictfp&quot;&gt;strictfp&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictfp&quot; id=&quot;scala.annotation.strictfp&quot; name=&quot;scala.annotation.strictfp&quot;&gt;strictfp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="854008c29e6f7817aa7ec75a4096eba917f15cd8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedclasstagseqfactory&quot; id=&quot;scala.collection.StrictOptimizedClassTagSeqFactory&quot; name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory&quot;&gt;StrictOptimizedClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedclasstagseqfactory&quot; id=&quot;scala.collection.StrictOptimizedClassTagSeqFactory&quot; name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory&quot;&gt;StrictOptimizedClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87d70f9ae6cbe155ec0652008fba73cbbe09b363" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedclasstagseqfactory&quot; id=&quot;scala.collection.StrictOptimizedClassTagSeqFactory&quot; name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory&quot;&gt;StrictOptimizedClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedclasstagseqfactory&quot; id=&quot;scala.collection.StrictOptimizedClassTagSeqFactory&quot; name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory&quot;&gt;StrictOptimizedClassTagSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedClassTagSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f55fe9b24e2bcff55f717dd419f7990624c14188" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b3f5039b1fac797054d33333b06cc4da961d266" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizediterableops&quot; id=&quot;scala.collection.StrictOptimizedIterableOps&quot; name=&quot;scala.collection.StrictOptimizedIterableOps&quot;&gt;StrictOptimizedIterableOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedIterableOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cfbc06b339eca2a554ceed10d5f69eadf925553" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedlinearseqops&quot; id=&quot;scala.collection.StrictOptimizedLinearSeqOps&quot; name=&quot;scala.collection.StrictOptimizedLinearSeqOps&quot;&gt;StrictOptimizedLinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedlinearseqops&quot; id=&quot;scala.collection.StrictOptimizedLinearSeqOps&quot; name=&quot;scala.collection.StrictOptimizedLinearSeqOps&quot;&gt;StrictOptimizedLinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ba70a4936d48b398b36a9225e7ffce8f71d8f1b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedlinearseqops&quot; id=&quot;scala.collection.StrictOptimizedLinearSeqOps&quot; name=&quot;scala.collection.StrictOptimizedLinearSeqOps&quot;&gt;StrictOptimizedLinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedlinearseqops&quot; id=&quot;scala.collection.StrictOptimizedLinearSeqOps&quot; name=&quot;scala.collection.StrictOptimizedLinearSeqOps&quot;&gt;StrictOptimizedLinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedLinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="482cf49827576b2d7e80d637783c0e60c5a75d26" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.StrictOptimizedMapOps&quot; name=&quot;scala.collection.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.StrictOptimizedMapOps&quot; name=&quot;scala.collection.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd050d8ada80a6b1d81e26c4bdf9953d836b65f0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.StrictOptimizedMapOps&quot; name=&quot;scala.collection.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.StrictOptimizedMapOps&quot; name=&quot;scala.collection.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5e97f8f02f630253287e9fb620b2d6a12466a06" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b889c06c5135369ec917ec853d9b600babe62884" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a04bb00d8cadd3b29816b4da6ac7a0ab3ffd61a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedseqfactory&quot; id=&quot;scala.collection.StrictOptimizedSeqFactory&quot; name=&quot;scala.collection.StrictOptimizedSeqFactory&quot;&gt;StrictOptimizedSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedseqfactory&quot; id=&quot;scala.collection.StrictOptimizedSeqFactory&quot; name=&quot;scala.collection.StrictOptimizedSeqFactory&quot;&gt;StrictOptimizedSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b63bd59436a8f6410cfbadc75afebbf1ce009c3a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedseqfactory&quot; id=&quot;scala.collection.StrictOptimizedSeqFactory&quot; name=&quot;scala.collection.StrictOptimizedSeqFactory&quot;&gt;StrictOptimizedSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedseqfactory&quot; id=&quot;scala.collection.StrictOptimizedSeqFactory&quot; name=&quot;scala.collection.StrictOptimizedSeqFactory&quot;&gt;StrictOptimizedSeqFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3d7c923160c05da5baf2d7848d6902d155344fb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60c3cfb1e656cd3592cc3d418a57e88f41d5ddf8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef430c2d2c9b58dd46f2a2a5736dc6c481e0bc5f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b0fd040a927d1961f0f1f0bda81d6dc9982b8ee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a02e3a2555ededd31a2d449f4de42af83f28df7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.StrictOptimizedSetOps&quot; name=&quot;scala.collection.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.StrictOptimizedSetOps&quot; name=&quot;scala.collection.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="130a6c7dc5228cfbc5601376d114598c354b5cf1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.StrictOptimizedSetOps&quot; name=&quot;scala.collection.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.StrictOptimizedSetOps&quot; name=&quot;scala.collection.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b50b89cbac43320bab5727c4b5d7648e474bf8a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0dca176d71f35a52da57f6bb7da9c57750dc0d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad3c6e03efadd8ec02c991997ebd0404c441dbb5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eddb96466b1a7a709e9739abc004562bf41e4bd8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52a1fd8e01c0ff23d0360c511441c66f07c4861f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ead6fa377c5318c1e3afe2d06d2390eda4197e5a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35edfda407b57955a67d7a1bc438cc60ba950527" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e8332a5a76817f8d78645b378db23f844000b29" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc74b02994115b0fd9dea94d78d2cefd6816145d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b55d5bc0f9bf1dc94257b6b46cce12dc75020369" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00cd838417d532c5b30a8c20be00e9614e6c420b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13951119f03016616cc9428307d4b9d5fb27bf66" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad812c627a9b23ac7fccf7046078cc0c85c5199a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringcontext&quot; id=&quot;scala.StringContext&quot; name=&quot;scala.StringContext&quot;&gt;StringContext&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringcontext&quot; id=&quot;scala.StringContext&quot; name=&quot;scala.StringContext&quot;&gt;StringContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeafff04c578a898058cca90fb53e49679526d47" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringcontext&quot; id=&quot;scala.StringContext&quot; name=&quot;scala.StringContext&quot;&gt;StringContext&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringcontext&quot; id=&quot;scala.StringContext&quot; name=&quot;scala.StringContext&quot;&gt;StringContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34214991e010235ac24fe2c49224bfcbfc876e03" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringcontext%24%24invalidescapeexception&quot; id=&quot;scala.StringContext.InvalidEscapeException&quot; name=&quot;scala.StringContext.InvalidEscapeException&quot;&gt;InvalidEscapeException&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringcontext%24%24invalidescapeexception&quot; id=&quot;scala.StringContext.InvalidEscapeException&quot; name=&quot;scala.StringContext.InvalidEscapeException&quot;&gt;InvalidEscapeException&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40eb18dd2753304afc5d347e0de23738e2555565" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringcontext%24%24invalidescapeexception&quot; id=&quot;scala.StringContext.InvalidEscapeException&quot; name=&quot;scala.StringContext.InvalidEscapeException&quot;&gt;InvalidEscapeException&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringcontext%24%24invalidescapeexception&quot; id=&quot;scala.StringContext.InvalidEscapeException&quot; name=&quot;scala.StringContext.InvalidEscapeException&quot;&gt;InvalidEscapeException&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827023ed224d190539268132af0b54354046559f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringops&quot; id=&quot;scala.collection.StringOps&quot; name=&quot;scala.collection.StringOps&quot;&gt;StringOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringops&quot; id=&quot;scala.collection.StringOps&quot; name=&quot;scala.collection.StringOps&quot;&gt;StringOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45cad27ca6d4c961634d57f28de749e436530428" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringops&quot; id=&quot;scala.collection.StringOps&quot; name=&quot;scala.collection.StringOps&quot;&gt;StringOps&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringops&quot; id=&quot;scala.collection.StringOps&quot; name=&quot;scala.collection.StringOps&quot;&gt;StringOps&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f536e76abb406223633453171ff7a9baef96ac90" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringops%24%24withfilter&quot; id=&quot;scala.collection.StringOps.WithFilter&quot; name=&quot;scala.collection.StringOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringops%24%24withfilter&quot; id=&quot;scala.collection.StringOps.WithFilter&quot; name=&quot;scala.collection.StringOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d102c24ec7a92e1b6586fd88176ad66dd12c469" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringops%24%24withfilter&quot; id=&quot;scala.collection.StringOps.WithFilter&quot; name=&quot;scala.collection.StringOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringops%24%24withfilter&quot; id=&quot;scala.collection.StringOps.WithFilter&quot; name=&quot;scala.collection.StringOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="391b190f91eaf618c86ff20026ca0e7f744fc71f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="280f58c84762ce0cf3d8b9ffc259191db9f16008" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringview&quot; id=&quot;scala.collection.StringView&quot; name=&quot;scala.collection.StringView&quot;&gt;StringView&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="46b0c196ef7e8193e9e404dcfd7a8cae08f3d349" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;subtractable&quot; id=&quot;scala.collection.generic.Subtractable&quot; name=&quot;scala.collection.generic.Subtractable&quot;&gt;Subtractable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.Subtractable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.Subtractable.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;subtractable&quot; id=&quot;scala.collection.generic.Subtractable&quot; name=&quot;scala.collection.generic.Subtractable&quot;&gt;Subtractable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.Subtractable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.Subtractable.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b4d5cbaaa7f87657c4439121c01531d4bad9f4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;subtractable&quot; id=&quot;scala.collection.generic.Subtractable&quot; name=&quot;scala.collection.generic.Subtractable&quot;&gt;Subtractable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.Subtractable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.Subtractable.Repr&quot;&gt;Repr&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;subtractable&quot; id=&quot;scala.collection.generic.Subtractable&quot; name=&quot;scala.collection.generic.Subtractable&quot;&gt;Subtractable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.Subtractable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.Subtractable.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="414d6bec556559f16c7f69a31c1e454ccdbcd362" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;success&quot; id=&quot;scala.util.Success&quot; name=&quot;scala.util.Success&quot;&gt;Success&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;success&quot; id=&quot;scala.util.Success&quot; name=&quot;scala.util.Success&quot;&gt;Success&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73dc43acb6ca158195cc523ce472448ad9d155f7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;success&quot; id=&quot;scala.util.Success&quot; name=&quot;scala.util.Success&quot;&gt;Success&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;success&quot; id=&quot;scala.util.Success&quot; name=&quot;scala.util.Success&quot;&gt;Success&lt;/a&gt;[&lt;span name=&quot;scala.util.Success.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="961b8c41ea4e87582e5eb8e79acaf5a7ae02f36b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;switch&quot; id=&quot;scala.annotation.switch&quot; name=&quot;scala.annotation.switch&quot;&gt;switch&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;switch&quot; id=&quot;scala.annotation.switch&quot; name=&quot;scala.annotation.switch&quot;&gt;switch&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4bb7b5211caf20def09e74a0453b1e96140067b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;switch&quot; id=&quot;scala.annotation.switch&quot; name=&quot;scala.annotation.switch&quot;&gt;switch&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;switch&quot; id=&quot;scala.annotation.switch&quot; name=&quot;scala.annotation.switch&quot;&gt;switch&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a4e00bd097ed0a44a74986a9c1a553f404b17e2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c58a3e4539334c21d847abfb7644332133b2690e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;symbol&quot; id=&quot;scala.Symbol&quot; name=&quot;scala.Symbol&quot;&gt;Symbol&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27cf17cfb4225d1b278c730ff857f76e80b587f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;syncchannel&quot; id=&quot;scala.concurrent.SyncChannel&quot; name=&quot;scala.concurrent.SyncChannel&quot;&gt;SyncChannel&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.SyncChannel.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;syncchannel&quot; id=&quot;scala.concurrent.SyncChannel&quot; name=&quot;scala.concurrent.SyncChannel&quot;&gt;SyncChannel&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.SyncChannel.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ebd8b9f0715c901023d8c6e5ca10dabf059feb7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;syncchannel&quot; id=&quot;scala.concurrent.SyncChannel&quot; name=&quot;scala.concurrent.SyncChannel&quot;&gt;SyncChannel&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.SyncChannel.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;syncchannel&quot; id=&quot;scala.concurrent.SyncChannel&quot; name=&quot;scala.concurrent.SyncChannel&quot;&gt;SyncChannel&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.SyncChannel.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="976c2bd8844f6666392475e8ece267e9468832ef" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;syncvar&quot; id=&quot;scala.concurrent.SyncVar&quot; name=&quot;scala.concurrent.SyncVar&quot;&gt;SyncVar&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.SyncVar.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;syncvar&quot; id=&quot;scala.concurrent.SyncVar&quot; name=&quot;scala.concurrent.SyncVar&quot;&gt;SyncVar&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.SyncVar.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9a50ecdd7a383c4d383ff6f6f42f2026fb04caf3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;syncvar&quot; id=&quot;scala.concurrent.SyncVar&quot; name=&quot;scala.concurrent.SyncVar&quot;&gt;SyncVar&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.SyncVar.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;syncvar&quot; id=&quot;scala.concurrent.SyncVar&quot; name=&quot;scala.concurrent.SyncVar&quot;&gt;SyncVar&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.SyncVar.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="285412ff29b5fa18b64caa8ce24b35aeb939b1c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="77e044deee0f4f2fc8826bc08bfc8cc3c560df38" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;systemproperties&quot; id=&quot;scala.sys.SystemProperties&quot; name=&quot;scala.sys.SystemProperties&quot;&gt;SystemProperties&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23f27e66201f82663e455de466b7aa61f32e53e8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailcalls%24%24call&quot; id=&quot;scala.util.control.TailCalls.Call&quot; name=&quot;scala.util.control.TailCalls.Call&quot;&gt;Call&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24call&quot; id=&quot;scala.util.control.TailCalls.Call&quot; name=&quot;scala.util.control.TailCalls.Call&quot;&gt;Call&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0c0f4376f5b14d9004b71757e6b4b942f6796ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailcalls%24%24call&quot; id=&quot;scala.util.control.TailCalls.Call&quot; name=&quot;scala.util.control.TailCalls.Call&quot;&gt;Call&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24call&quot; id=&quot;scala.util.control.TailCalls.Call&quot; name=&quot;scala.util.control.TailCalls.Call&quot;&gt;Call&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca74fe27666a0f395d62332c7649db87c3f5170" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailcalls%24%24cont&quot; id=&quot;scala.util.control.TailCalls.Cont&quot; name=&quot;scala.util.control.TailCalls.Cont&quot;&gt;Cont&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24cont&quot; id=&quot;scala.util.control.TailCalls.Cont&quot; name=&quot;scala.util.control.TailCalls.Cont&quot;&gt;Cont&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3f9ae3fc5a18fc34bd99f52b6bfd134ed1f56471" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailcalls%24%24cont&quot; id=&quot;scala.util.control.TailCalls.Cont&quot; name=&quot;scala.util.control.TailCalls.Cont&quot;&gt;Cont&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24cont&quot; id=&quot;scala.util.control.TailCalls.Cont&quot; name=&quot;scala.util.control.TailCalls.Cont&quot;&gt;Cont&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="157e32dae6f0b7ca851134473866765806e6d226" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailcalls%24%24done&quot; id=&quot;scala.util.control.TailCalls.Done&quot; name=&quot;scala.util.control.TailCalls.Done&quot;&gt;Done&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24done&quot; id=&quot;scala.util.control.TailCalls.Done&quot; name=&quot;scala.util.control.TailCalls.Done&quot;&gt;Done&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c585992de0859926b79ea3438f501cd328da9e5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailcalls%24%24done&quot; id=&quot;scala.util.control.TailCalls.Done&quot; name=&quot;scala.util.control.TailCalls.Done&quot;&gt;Done&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24done&quot; id=&quot;scala.util.control.TailCalls.Done&quot; name=&quot;scala.util.control.TailCalls.Done&quot;&gt;Done&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f728276a4690e5a914181993001506e89c3d6cc9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73ba1aa354d99527aa0af4069a32625f1fe446b5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="703e8aa0d8d91c49e6babf412ec266afe99d4aff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailrec&quot; id=&quot;scala.annotation.tailrec&quot; name=&quot;scala.annotation.tailrec&quot;&gt;tailrec&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailrec&quot; id=&quot;scala.annotation.tailrec&quot; name=&quot;scala.annotation.tailrec&quot;&gt;tailrec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d61563e952854f1d8c7b59b9b8e6068abb08e4bd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tailrec&quot; id=&quot;scala.annotation.tailrec&quot; name=&quot;scala.annotation.tailrec&quot;&gt;tailrec&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailrec&quot; id=&quot;scala.annotation.tailrec&quot; name=&quot;scala.annotation.tailrec&quot;&gt;tailrec&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2935b968124fb72edc47ff107b16826baac54bb9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;throws&quot; id=&quot;scala.throws&quot; name=&quot;scala.throws&quot;&gt;throws&lt;/a&gt;[&lt;span name=&quot;scala.throws.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;throws&quot; id=&quot;scala.throws&quot; name=&quot;scala.throws&quot;&gt;throws&lt;/a&gt;[&lt;span name=&quot;scala.throws.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db1999f08db11264eaee66e31f10acb7a6c802b6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;throws&quot; id=&quot;scala.throws&quot; name=&quot;scala.throws&quot;&gt;throws&lt;/a&gt;[&lt;span name=&quot;scala.throws.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;throws&quot; id=&quot;scala.throws&quot; name=&quot;scala.throws&quot;&gt;throws&lt;/a&gt;[&lt;span name=&quot;scala.throws.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f7621d4bf9a724a9d01999bba1c6e2008ffd6e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tojavaimplicits&quot; id=&quot;scala.collection.convert.ToJavaImplicits&quot; name=&quot;scala.collection.convert.ToJavaImplicits&quot;&gt;ToJavaImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tojavaimplicits&quot; id=&quot;scala.collection.convert.ToJavaImplicits&quot; name=&quot;scala.collection.convert.ToJavaImplicits&quot;&gt;ToJavaImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a1b4b2d4032d77b058667af181bd12010df4776b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;tojavaimplicits&quot; id=&quot;scala.collection.convert.ToJavaImplicits&quot; name=&quot;scala.collection.convert.ToJavaImplicits&quot;&gt;ToJavaImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tojavaimplicits&quot; id=&quot;scala.collection.convert.ToJavaImplicits&quot; name=&quot;scala.collection.convert.ToJavaImplicits&quot;&gt;ToJavaImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d2051796e248ef37520290e7fecc9ebd97da4d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;toscalaimplicits&quot; id=&quot;scala.collection.convert.ToScalaImplicits&quot; name=&quot;scala.collection.convert.ToScalaImplicits&quot;&gt;ToScalaImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;toscalaimplicits&quot; id=&quot;scala.collection.convert.ToScalaImplicits&quot; name=&quot;scala.collection.convert.ToScalaImplicits&quot;&gt;ToScalaImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c918816ab2d87760efa662f633eaa1823371e81e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;toscalaimplicits&quot; id=&quot;scala.collection.convert.ToScalaImplicits&quot; name=&quot;scala.collection.convert.ToScalaImplicits&quot;&gt;ToScalaImplicits&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;toscalaimplicits&quot; id=&quot;scala.collection.convert.ToScalaImplicits&quot; name=&quot;scala.collection.convert.ToScalaImplicits&quot;&gt;ToScalaImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="40805d1d98bf63251c261224e9450930b8188bfc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;transient&quot; id=&quot;scala.transient&quot; name=&quot;scala.transient&quot;&gt;transient&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;transient&quot; id=&quot;scala.transient&quot; name=&quot;scala.transient&quot;&gt;transient&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263a73df3f0e115e734187bac176c20e907881f0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;transient&quot; id=&quot;scala.transient&quot; name=&quot;scala.transient&quot;&gt;transient&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;transient&quot; id=&quot;scala.transient&quot; name=&quot;scala.transient&quot;&gt;transient&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9af39fbee2010792a3435c549cd556303d2405b7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="008bac45efc66c46610d60db3f71d57fdb663487" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e43b82297a128e23c24a10fa2f768a28fd1164c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a30450fbd4ac223944107e2d4bf1c47824f110" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="92960f92d20ff534e130c78125ab93fb4926e4c2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a24aeaff9ffab7d632a490f949e32f4e146711" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f149cb7da6bc3dd36cd3bccae7a16fa5214bc63b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeseqmap%24%24builder&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24builder&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d021bd5daceb2903639cb8add0b89a5247e453a1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeseqmap%24%24builder&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24builder&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58d557b464e9e1cd3f65338d2f65c9b1702c47c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45269d8a558bb995aedffc595a9b0093ec658d3e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df5d8c5fd7783c9026527ed3bb0be2e71be20653" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc1b68610f5ec578776c77bae5678462bbe41eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2f71ac19f48ea16d17b6f94e43acb414690d884" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5912f8fc4a03a7148bfbdda61c73c05a9242972c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7b1bf17cedf175c280a686c823be8bcf61c8418" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf670cfa63690d9274e26b53e779e612b1549828" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce724ada6dd7ea09b4e48f7ba47dfd3a47437a31" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3293a57db6361950e89d4180d62b4a9336bea351" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73d13402d618dff1afcd1060e6ce7d5648307dec" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;triemap%24%24mangledhashing&quot; id=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot; name=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot;&gt;MangledHashing&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.MangledHashing.K&quot;&gt;K&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap%24%24mangledhashing&quot; id=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot; name=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot;&gt;MangledHashing&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.MangledHashing.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="702880826d6f628d8c6ee24d95f8e8161e0782a9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;triemap%24%24mangledhashing&quot; id=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot; name=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot;&gt;MangledHashing&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.MangledHashing.K&quot;&gt;K&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap%24%24mangledhashing&quot; id=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot; name=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot;&gt;MangledHashing&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.MangledHashing.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50e973294cf0d9c426f1483a75f8ad5c75a36cf1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="adbd7bc7bfd4f3dfa4d7cc5349c8d20dbfcc2e6f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;try&quot; id=&quot;scala.util.Try&quot; name=&quot;scala.util.Try&quot;&gt;Try&lt;/a&gt;[&lt;span name=&quot;scala.util.Try.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b13ba8a01e82d8463ab698312f167cadaca4bce5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;try%24withfilter&quot; id=&quot;scala.util.Try.WithFilter&quot; name=&quot;scala.util.Try.WithFilter&quot;&gt;WithFilter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;try%24withfilter&quot; id=&quot;scala.util.Try.WithFilter&quot; name=&quot;scala.util.Try.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a73bc38846468c57dd564034fcd54177c7ec98c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;try%24withfilter&quot; id=&quot;scala.util.Try.WithFilter&quot; name=&quot;scala.util.Try.WithFilter&quot;&gt;WithFilter&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;try%24withfilter&quot; id=&quot;scala.util.Try.WithFilter&quot; name=&quot;scala.util.Try.WithFilter&quot;&gt;WithFilter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05e000593c3caf88c6d1f59c3d14f39bcc0e8646" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;typeconstraint&quot; id=&quot;scala.annotation.TypeConstraint&quot; name=&quot;scala.annotation.TypeConstraint&quot;&gt;TypeConstraint&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;typeconstraint&quot; id=&quot;scala.annotation.TypeConstraint&quot; name=&quot;scala.annotation.TypeConstraint&quot;&gt;TypeConstraint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef8b10de0df4f548f17c1a17a1807d7b996886d7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;typeconstraint&quot; id=&quot;scala.annotation.TypeConstraint&quot; name=&quot;scala.annotation.TypeConstraint&quot;&gt;TypeConstraint&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;typeconstraint&quot; id=&quot;scala.annotation.TypeConstraint&quot; name=&quot;scala.annotation.TypeConstraint&quot;&gt;TypeConstraint&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="866128ab726debedfd739e4f822e720f0c6c6e3b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unanchoredregex&quot; id=&quot;scala.util.matching.UnanchoredRegex&quot; name=&quot;scala.util.matching.UnanchoredRegex&quot;&gt;UnanchoredRegex&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unanchoredregex&quot; id=&quot;scala.util.matching.UnanchoredRegex&quot; name=&quot;scala.util.matching.UnanchoredRegex&quot;&gt;UnanchoredRegex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd209d6e72256885d0efedf162e13e34c304134" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unanchoredregex&quot; id=&quot;scala.util.matching.UnanchoredRegex&quot; name=&quot;scala.util.matching.UnanchoredRegex&quot;&gt;UnanchoredRegex&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unanchoredregex&quot; id=&quot;scala.util.matching.UnanchoredRegex&quot; name=&quot;scala.util.matching.UnanchoredRegex&quot;&gt;UnanchoredRegex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72554fbab404ba32d3d07a9101848ebeec3161b1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unchecked&quot; id=&quot;scala.unchecked&quot; name=&quot;scala.unchecked&quot;&gt;unchecked&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unchecked&quot; id=&quot;scala.unchecked&quot; name=&quot;scala.unchecked&quot;&gt;unchecked&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01c9b6d87df9a705994e863c1e2f475736170fde" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unchecked&quot; id=&quot;scala.unchecked&quot; name=&quot;scala.unchecked&quot;&gt;unchecked&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unchecked&quot; id=&quot;scala.unchecked&quot; name=&quot;scala.unchecked&quot;&gt;unchecked&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c4329367296a601999469ccdf2706036979617" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;uncheckedstable&quot; id=&quot;scala.annotation.unchecked.uncheckedStable&quot; name=&quot;scala.annotation.unchecked.uncheckedStable&quot;&gt;uncheckedStable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uncheckedstable&quot; id=&quot;scala.annotation.unchecked.uncheckedStable&quot; name=&quot;scala.annotation.unchecked.uncheckedStable&quot;&gt;uncheckedStable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d4e401d0dc31f29b1696cb8b4ce3b39ab662572" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;uncheckedstable&quot; id=&quot;scala.annotation.unchecked.uncheckedStable&quot; name=&quot;scala.annotation.unchecked.uncheckedStable&quot;&gt;uncheckedStable&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uncheckedstable&quot; id=&quot;scala.annotation.unchecked.uncheckedStable&quot; name=&quot;scala.annotation.unchecked.uncheckedStable&quot;&gt;uncheckedStable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f1c83184096b7ea889e1d30201132271614aa54" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;uncheckedvariance&quot; id=&quot;scala.annotation.unchecked.uncheckedVariance&quot; name=&quot;scala.annotation.unchecked.uncheckedVariance&quot;&gt;uncheckedVariance&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uncheckedvariance&quot; id=&quot;scala.annotation.unchecked.uncheckedVariance&quot; name=&quot;scala.annotation.unchecked.uncheckedVariance&quot;&gt;uncheckedVariance&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="290e6545bd402b1e7b695864999f7111451f7ea3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;uncheckedvariance&quot; id=&quot;scala.annotation.unchecked.uncheckedVariance&quot; name=&quot;scala.annotation.unchecked.uncheckedVariance&quot;&gt;uncheckedVariance&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uncheckedvariance&quot; id=&quot;scala.annotation.unchecked.uncheckedVariance&quot; name=&quot;scala.annotation.unchecked.uncheckedVariance&quot;&gt;uncheckedVariance&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="88dcdb41baa3024bf0b114534d04312cf4b170af" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;uninitializederror&quot; id=&quot;scala.UninitializedError&quot; name=&quot;scala.UninitializedError&quot;&gt;UninitializedError&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uninitializederror&quot; id=&quot;scala.UninitializedError&quot; name=&quot;scala.UninitializedError&quot;&gt;UninitializedError&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2806f5d1a205d088fd5847364b9f558f82cf26a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;uninitializederror&quot; id=&quot;scala.UninitializedError&quot; name=&quot;scala.UninitializedError&quot;&gt;UninitializedError&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uninitializederror&quot; id=&quot;scala.UninitializedError&quot; name=&quot;scala.UninitializedError&quot;&gt;UninitializedError&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc1b4862c994d7134ea8dbea2a4f2ec325ddb0b4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;uninitializedfielderror&quot; id=&quot;scala.UninitializedFieldError&quot; name=&quot;scala.UninitializedFieldError&quot;&gt;UninitializedFieldError&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uninitializedfielderror&quot; id=&quot;scala.UninitializedFieldError&quot; name=&quot;scala.UninitializedFieldError&quot;&gt;UninitializedFieldError&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a6e8342369c512a1a0bcb3b704f53d5500b2268" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;uninitializedfielderror&quot; id=&quot;scala.UninitializedFieldError&quot; name=&quot;scala.UninitializedFieldError&quot;&gt;UninitializedFieldError&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uninitializedfielderror&quot; id=&quot;scala.UninitializedFieldError&quot; name=&quot;scala.UninitializedFieldError&quot;&gt;UninitializedFieldError&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b16cbc59e2b04462ad95077e49998e33c3e0105" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="096a6449bc9974ebcdcf6638cfeb137eb2dd06fa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unit&quot; id=&quot;scala.Unit&quot; name=&quot;scala.Unit&quot;&gt;Unit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="767356d688f83cca63d3ab3d64db912ac026d3da" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eeae71da3b4168343195204fb5df9463c73b13f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23fe515a93ef685da43f9e451345c44993a34b89" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="449a391020538a1c53283d63e4543cc2144844ee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3447c78ae418f21efc995f162836b0c16063abb6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unspecialized&quot; id=&quot;scala.annotation.unspecialized&quot; name=&quot;scala.annotation.unspecialized&quot;&gt;unspecialized&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unspecialized&quot; id=&quot;scala.annotation.unspecialized&quot; name=&quot;scala.annotation.unspecialized&quot;&gt;unspecialized&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0197b7bcbfa0c4f1a790870f5772a8bc0998d1ed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unspecialized&quot; id=&quot;scala.annotation.unspecialized&quot; name=&quot;scala.annotation.unspecialized&quot;&gt;unspecialized&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unspecialized&quot; id=&quot;scala.annotation.unspecialized&quot; name=&quot;scala.annotation.unspecialized&quot;&gt;unspecialized&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b62164bee0927495f3684ef7ab52ba1448f1b5f9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unused&quot; id=&quot;scala.annotation.unused&quot; name=&quot;scala.annotation.unused&quot;&gt;unused&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unused&quot; id=&quot;scala.annotation.unused&quot; name=&quot;scala.annotation.unused&quot;&gt;unused&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c02e89776c814b707fd1b48ff03bb372c3f563d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;unused&quot; id=&quot;scala.annotation.unused&quot; name=&quot;scala.annotation.unused&quot;&gt;unused&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unused&quot; id=&quot;scala.annotation.unused&quot; name=&quot;scala.annotation.unused&quot;&gt;unused&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="569080e642376780f1c0a6858d17f4765bcb2c48" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;using%24%24manager&quot; id=&quot;scala.util.Using.Manager&quot; name=&quot;scala.util.Using.Manager&quot;&gt;Manager&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;using%24%24manager&quot; id=&quot;scala.util.Using.Manager&quot; name=&quot;scala.util.Using.Manager&quot;&gt;Manager&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00ab0bd4b2fbffefd79f493854dfe5853b90addd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;using%24%24manager&quot; id=&quot;scala.util.Using.Manager&quot; name=&quot;scala.util.Using.Manager&quot;&gt;Manager&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;using%24%24manager&quot; id=&quot;scala.util.Using.Manager&quot; name=&quot;scala.util.Using.Manager&quot;&gt;Manager&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef606bbde3038c32ef96a0b5a559940a3ac47a0d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;using%24%24releasable&quot; id=&quot;scala.util.Using.Releasable&quot; name=&quot;scala.util.Using.Releasable&quot;&gt;Releasable&lt;/a&gt;[&lt;span name=&quot;scala.util.Using.Releasable.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;using%24%24releasable&quot; id=&quot;scala.util.Using.Releasable&quot; name=&quot;scala.util.Using.Releasable&quot;&gt;Releasable&lt;/a&gt;[&lt;span name=&quot;scala.util.Using.Releasable.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36553f8116f991d9914c525573fdeb33e1badc9c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;using%24%24releasable&quot; id=&quot;scala.util.Using.Releasable&quot; name=&quot;scala.util.Using.Releasable&quot;&gt;Releasable&lt;/a&gt;[&lt;span name=&quot;scala.util.Using.Releasable.R&quot;&gt;R&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;using%24%24releasable&quot; id=&quot;scala.util.Using.Releasable&quot; name=&quot;scala.util.Using.Releasable&quot;&gt;Releasable&lt;/a&gt;[&lt;span name=&quot;scala.util.Using.Releasable.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="471b26be25a45a389335be4b0612b3fa0cc47f07" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;valueof&quot; id=&quot;scala.ValueOf&quot; name=&quot;scala.ValueOf&quot;&gt;ValueOf&lt;/a&gt;[&lt;span name=&quot;scala.ValueOf.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;valueof&quot; id=&quot;scala.ValueOf&quot; name=&quot;scala.ValueOf&quot;&gt;ValueOf&lt;/a&gt;[&lt;span name=&quot;scala.ValueOf.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c8c34e8800e6d3437835c14b9161894540a4696" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;valueof&quot; id=&quot;scala.ValueOf&quot; name=&quot;scala.ValueOf&quot;&gt;ValueOf&lt;/a&gt;[&lt;span name=&quot;scala.ValueOf.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;valueof&quot; id=&quot;scala.ValueOf&quot; name=&quot;scala.ValueOf&quot;&gt;ValueOf&lt;/a&gt;[&lt;span name=&quot;scala.ValueOf.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb3deb907b98dc1f28f318ca4f7f04df0948dbcb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;varargs&quot; id=&quot;scala.annotation.varargs&quot; name=&quot;scala.annotation.varargs&quot;&gt;varargs&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;varargs&quot; id=&quot;scala.annotation.varargs&quot; name=&quot;scala.annotation.varargs&quot;&gt;varargs&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f40eb1a51c5e8189434e5fdeae3efcf9fdae32b0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;varargs&quot; id=&quot;scala.annotation.varargs&quot; name=&quot;scala.annotation.varargs&quot;&gt;varargs&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;varargs&quot; id=&quot;scala.annotation.varargs&quot; name=&quot;scala.annotation.varargs&quot;&gt;varargs&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93e76b4bf05da0d65bd054e6af3cdeb3de6b942d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c5bcb1edd5bdf4b4d05c446526cc7b4b43f2cc9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f89ba8432bdfe144df18567b509b8d21ebaed9e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;vectorbuilder&quot; id=&quot;scala.collection.immutable.VectorBuilder&quot; name=&quot;scala.collection.immutable.VectorBuilder&quot;&gt;VectorBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectorbuilder&quot; id=&quot;scala.collection.immutable.VectorBuilder&quot; name=&quot;scala.collection.immutable.VectorBuilder&quot;&gt;VectorBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="530c9bc6fe732cf0a33f2bd47df4844990313cf6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;vectorbuilder&quot; id=&quot;scala.collection.immutable.VectorBuilder&quot; name=&quot;scala.collection.immutable.VectorBuilder&quot;&gt;VectorBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectorbuilder&quot; id=&quot;scala.collection.immutable.VectorBuilder&quot; name=&quot;scala.collection.immutable.VectorBuilder&quot;&gt;VectorBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce9353954571321b3fd5b697bbeb5c1bc5ccfcd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;vectoriterator&quot; id=&quot;scala.collection.immutable.VectorIterator&quot; name=&quot;scala.collection.immutable.VectorIterator&quot;&gt;VectorIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectoriterator&quot; id=&quot;scala.collection.immutable.VectorIterator&quot; name=&quot;scala.collection.immutable.VectorIterator&quot;&gt;VectorIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7722a004d8c7e8cfc01c06c2698f944c88c2b2f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;vectoriterator&quot; id=&quot;scala.collection.immutable.VectorIterator&quot; name=&quot;scala.collection.immutable.VectorIterator&quot;&gt;VectorIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectoriterator&quot; id=&quot;scala.collection.immutable.VectorIterator&quot; name=&quot;scala.collection.immutable.VectorIterator&quot;&gt;VectorIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4625429d9d6bba76d2cb5d16921f13bd73b4cef" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="99259033d6eb569b529cf092f31edcc1998b3ced" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c667a50f5741e4dddcf31f0367238c20cc04ab7d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a991aabb0b3c204b24631ea0f906547b1f7984" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view&quot; id=&quot;scala.collection.View&quot; name=&quot;scala.collection.View&quot;&gt;View&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aabca2fa7f6a33f584e2bff45bf9c7fe84bdaece" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24appended&quot; id=&quot;scala.collection.View.Appended&quot; name=&quot;scala.collection.View.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24appended&quot; id=&quot;scala.collection.View.Appended&quot; name=&quot;scala.collection.View.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e73c5b82baddedb7a69cd78966e000286d51693" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24appended&quot; id=&quot;scala.collection.View.Appended&quot; name=&quot;scala.collection.View.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24appended&quot; id=&quot;scala.collection.View.Appended&quot; name=&quot;scala.collection.View.Appended&quot;&gt;Appended&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Appended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbd27d8a2278a83d50e25848f4451cce8590ba6d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24collect&quot; id=&quot;scala.collection.View.Collect&quot; name=&quot;scala.collection.View.Collect&quot;&gt;Collect&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24collect&quot; id=&quot;scala.collection.View.Collect&quot; name=&quot;scala.collection.View.Collect&quot;&gt;Collect&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2102698bbe47e60a57dce9bdad90d89dedf68ac7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24collect&quot; id=&quot;scala.collection.View.Collect&quot; name=&quot;scala.collection.View.Collect&quot;&gt;Collect&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24collect&quot; id=&quot;scala.collection.View.Collect&quot; name=&quot;scala.collection.View.Collect&quot;&gt;Collect&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Collect.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Collect.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="223e4d26deb4a18f95bf046fff856f0e7de4037e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24concat&quot; id=&quot;scala.collection.View.Concat&quot; name=&quot;scala.collection.View.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24concat&quot; id=&quot;scala.collection.View.Concat&quot; name=&quot;scala.collection.View.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f989abde85acb1005a77dd2dd287241a2d4e6f32" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24concat&quot; id=&quot;scala.collection.View.Concat&quot; name=&quot;scala.collection.View.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24concat&quot; id=&quot;scala.collection.View.Concat&quot; name=&quot;scala.collection.View.Concat&quot;&gt;Concat&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Concat.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="764687eb9fe5ca556e59ccb1a101428b64b1e3a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24distinctby&quot; id=&quot;scala.collection.View.DistinctBy&quot; name=&quot;scala.collection.View.DistinctBy&quot;&gt;DistinctBy&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DistinctBy.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24distinctby&quot; id=&quot;scala.collection.View.DistinctBy&quot; name=&quot;scala.collection.View.DistinctBy&quot;&gt;DistinctBy&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DistinctBy.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da8e9d388c4c7861365af6d752dbfd8819f688f5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24distinctby&quot; id=&quot;scala.collection.View.DistinctBy&quot; name=&quot;scala.collection.View.DistinctBy&quot;&gt;DistinctBy&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DistinctBy.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24distinctby&quot; id=&quot;scala.collection.View.DistinctBy&quot; name=&quot;scala.collection.View.DistinctBy&quot;&gt;DistinctBy&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DistinctBy.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.DistinctBy.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e3d3644cac973fb9c40f0de994d2fe4e132ca73" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24drop&quot; id=&quot;scala.collection.View.Drop&quot; name=&quot;scala.collection.View.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24drop&quot; id=&quot;scala.collection.View.Drop&quot; name=&quot;scala.collection.View.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f492cdc17e07caff5d3deb301109f4fa09b793c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24drop&quot; id=&quot;scala.collection.View.Drop&quot; name=&quot;scala.collection.View.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24drop&quot; id=&quot;scala.collection.View.Drop&quot; name=&quot;scala.collection.View.Drop&quot;&gt;Drop&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Drop.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3840bcfe424d872150eadc1ec695aca47832a8e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24dropright&quot; id=&quot;scala.collection.View.DropRight&quot; name=&quot;scala.collection.View.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24dropright&quot; id=&quot;scala.collection.View.DropRight&quot; name=&quot;scala.collection.View.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec0565c137ec65d849fddc85a58499634620a641" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24dropright&quot; id=&quot;scala.collection.View.DropRight&quot; name=&quot;scala.collection.View.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24dropright&quot; id=&quot;scala.collection.View.DropRight&quot; name=&quot;scala.collection.View.DropRight&quot;&gt;DropRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f4f0360bd54271c7879740d09d765afc4f7e9c4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24dropwhile&quot; id=&quot;scala.collection.View.DropWhile&quot; name=&quot;scala.collection.View.DropWhile&quot;&gt;DropWhile&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24dropwhile&quot; id=&quot;scala.collection.View.DropWhile&quot; name=&quot;scala.collection.View.DropWhile&quot;&gt;DropWhile&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="baaf518d23f3ca8d83a0080a7d1cf6efa6c3e4e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24dropwhile&quot; id=&quot;scala.collection.View.DropWhile&quot; name=&quot;scala.collection.View.DropWhile&quot;&gt;DropWhile&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24dropwhile&quot; id=&quot;scala.collection.View.DropWhile&quot; name=&quot;scala.collection.View.DropWhile&quot;&gt;DropWhile&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.DropWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd37510abce4336f475b27e7ef1d5a3c128a215e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24elems&quot; id=&quot;scala.collection.View.Elems&quot; name=&quot;scala.collection.View.Elems&quot;&gt;Elems&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24elems&quot; id=&quot;scala.collection.View.Elems&quot; name=&quot;scala.collection.View.Elems&quot;&gt;Elems&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2911e7f5cb7ca7d13b8f0bd88913afe069fb44f6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24elems&quot; id=&quot;scala.collection.View.Elems&quot; name=&quot;scala.collection.View.Elems&quot;&gt;Elems&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24elems&quot; id=&quot;scala.collection.View.Elems&quot; name=&quot;scala.collection.View.Elems&quot;&gt;Elems&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Elems.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12d8cc6464a07404f82ea054be71c4aeb0d7a4bd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24fill&quot; id=&quot;scala.collection.View.Fill&quot; name=&quot;scala.collection.View.Fill&quot;&gt;Fill&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24fill&quot; id=&quot;scala.collection.View.Fill&quot; name=&quot;scala.collection.View.Fill&quot;&gt;Fill&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1521413b592139e4abdc59dddbf4e1aeec7c2231" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24fill&quot; id=&quot;scala.collection.View.Fill&quot; name=&quot;scala.collection.View.Fill&quot;&gt;Fill&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24fill&quot; id=&quot;scala.collection.View.Fill&quot; name=&quot;scala.collection.View.Fill&quot;&gt;Fill&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Fill.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9c44e1a3b8426db7238aa07deb63fe7d634dd587" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24filter&quot; id=&quot;scala.collection.View.Filter&quot; name=&quot;scala.collection.View.Filter&quot;&gt;Filter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24filter&quot; id=&quot;scala.collection.View.Filter&quot; name=&quot;scala.collection.View.Filter&quot;&gt;Filter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3e89c6fb824d774ba7ec972ca98354df9b49a2a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24filter&quot; id=&quot;scala.collection.View.Filter&quot; name=&quot;scala.collection.View.Filter&quot;&gt;Filter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24filter&quot; id=&quot;scala.collection.View.Filter&quot; name=&quot;scala.collection.View.Filter&quot;&gt;Filter&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Filter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab614c4315a3ad17adcce6e2b71600cda3492e3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24flatmap&quot; id=&quot;scala.collection.View.FlatMap&quot; name=&quot;scala.collection.View.FlatMap&quot;&gt;FlatMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24flatmap&quot; id=&quot;scala.collection.View.FlatMap&quot; name=&quot;scala.collection.View.FlatMap&quot;&gt;FlatMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="719bf8a648b917cb636e64dc5825fd59d889d430" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24flatmap&quot; id=&quot;scala.collection.View.FlatMap&quot; name=&quot;scala.collection.View.FlatMap&quot;&gt;FlatMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24flatmap&quot; id=&quot;scala.collection.View.FlatMap&quot; name=&quot;scala.collection.View.FlatMap&quot;&gt;FlatMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.FlatMap.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.FlatMap.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="58101da1dcbea0b41957469973f6a8d9254654bb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24iterate&quot; id=&quot;scala.collection.View.Iterate&quot; name=&quot;scala.collection.View.Iterate&quot;&gt;Iterate&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24iterate&quot; id=&quot;scala.collection.View.Iterate&quot; name=&quot;scala.collection.View.Iterate&quot;&gt;Iterate&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0ab26a8bbcedb05f86350a7b6b7989f5d073fda" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24iterate&quot; id=&quot;scala.collection.View.Iterate&quot; name=&quot;scala.collection.View.Iterate&quot;&gt;Iterate&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24iterate&quot; id=&quot;scala.collection.View.Iterate&quot; name=&quot;scala.collection.View.Iterate&quot;&gt;Iterate&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Iterate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="680b9fc45dbfc77b93e179a0cc6902755be96689" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24leftpartitionmapped&quot; id=&quot;scala.collection.View.LeftPartitionMapped&quot; name=&quot;scala.collection.View.LeftPartitionMapped&quot;&gt;LeftPartitionMapped&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24leftpartitionmapped&quot; id=&quot;scala.collection.View.LeftPartitionMapped&quot; name=&quot;scala.collection.View.LeftPartitionMapped&quot;&gt;LeftPartitionMapped&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a948f17a37d2af405842952d4758557ec7d818c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24leftpartitionmapped&quot; id=&quot;scala.collection.View.LeftPartitionMapped&quot; name=&quot;scala.collection.View.LeftPartitionMapped&quot;&gt;LeftPartitionMapped&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24leftpartitionmapped&quot; id=&quot;scala.collection.View.LeftPartitionMapped&quot; name=&quot;scala.collection.View.LeftPartitionMapped&quot;&gt;LeftPartitionMapped&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.LeftPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3853296917d09fc0a90cd84e5a2b9cdeab0805e4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24map&quot; id=&quot;scala.collection.View.Map&quot; name=&quot;scala.collection.View.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24map&quot; id=&quot;scala.collection.View.Map&quot; name=&quot;scala.collection.View.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2160c533830a92db70e94786aa722a51dc21f94" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24map&quot; id=&quot;scala.collection.View.Map&quot; name=&quot;scala.collection.View.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24map&quot; id=&quot;scala.collection.View.Map&quot; name=&quot;scala.collection.View.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Map.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Map.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5764a8afbd9856eb848475c78464ee9b4b47f19f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24padto&quot; id=&quot;scala.collection.View.PadTo&quot; name=&quot;scala.collection.View.PadTo&quot;&gt;PadTo&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24padto&quot; id=&quot;scala.collection.View.PadTo&quot; name=&quot;scala.collection.View.PadTo&quot;&gt;PadTo&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07918d534603eefdccdbb095fc8a734eb8b77c16" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24padto&quot; id=&quot;scala.collection.View.PadTo&quot; name=&quot;scala.collection.View.PadTo&quot;&gt;PadTo&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24padto&quot; id=&quot;scala.collection.View.PadTo&quot; name=&quot;scala.collection.View.PadTo&quot;&gt;PadTo&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.PadTo.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36118a4f08b616705cc31bbe52addca8057a163" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24prepended&quot; id=&quot;scala.collection.View.Prepended&quot; name=&quot;scala.collection.View.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24prepended&quot; id=&quot;scala.collection.View.Prepended&quot; name=&quot;scala.collection.View.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8f2e407dffe6812dcb1299b12ac7c898fdf9c1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24prepended&quot; id=&quot;scala.collection.View.Prepended&quot; name=&quot;scala.collection.View.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24prepended&quot; id=&quot;scala.collection.View.Prepended&quot; name=&quot;scala.collection.View.Prepended&quot;&gt;Prepended&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Prepended.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f53a55a761642b36fd9d644c1d8213d8072985" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24rightpartitionmapped&quot; id=&quot;scala.collection.View.RightPartitionMapped&quot; name=&quot;scala.collection.View.RightPartitionMapped&quot;&gt;RightPartitionMapped&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24rightpartitionmapped&quot; id=&quot;scala.collection.View.RightPartitionMapped&quot; name=&quot;scala.collection.View.RightPartitionMapped&quot;&gt;RightPartitionMapped&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2c8ab0f4a22b095198df4293129ba34fc72509a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24rightpartitionmapped&quot; id=&quot;scala.collection.View.RightPartitionMapped&quot; name=&quot;scala.collection.View.RightPartitionMapped&quot;&gt;RightPartitionMapped&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24rightpartitionmapped&quot; id=&quot;scala.collection.View.RightPartitionMapped&quot; name=&quot;scala.collection.View.RightPartitionMapped&quot;&gt;RightPartitionMapped&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.RightPartitionMapped.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A1&quot;&gt;A1&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.RightPartitionMapped.A2&quot;&gt;A2&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cad94f21b76ee25d09f764885a4c7ab48aed3165" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24scanleft&quot; id=&quot;scala.collection.View.ScanLeft&quot; name=&quot;scala.collection.View.ScanLeft&quot;&gt;ScanLeft&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24scanleft&quot; id=&quot;scala.collection.View.ScanLeft&quot; name=&quot;scala.collection.View.ScanLeft&quot;&gt;ScanLeft&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="525975945127345e336c0a585f610d8a7f658b99" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24scanleft&quot; id=&quot;scala.collection.View.ScanLeft&quot; name=&quot;scala.collection.View.ScanLeft&quot;&gt;ScanLeft&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24scanleft&quot; id=&quot;scala.collection.View.ScanLeft&quot; name=&quot;scala.collection.View.ScanLeft&quot;&gt;ScanLeft&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ScanLeft.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ScanLeft.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8df75f3d415bd7ef8a2b53f5aafd18bf44ef261" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24single&quot; id=&quot;scala.collection.View.Single&quot; name=&quot;scala.collection.View.Single&quot;&gt;Single&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24single&quot; id=&quot;scala.collection.View.Single&quot; name=&quot;scala.collection.View.Single&quot;&gt;Single&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60e9168b681d4ebf197e08467deceec3bd86d618" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24single&quot; id=&quot;scala.collection.View.Single&quot; name=&quot;scala.collection.View.Single&quot;&gt;Single&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24single&quot; id=&quot;scala.collection.View.Single&quot; name=&quot;scala.collection.View.Single&quot;&gt;Single&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Single.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26cbed90c23e8cff4614490ecd737242fc911da9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24tabulate&quot; id=&quot;scala.collection.View.Tabulate&quot; name=&quot;scala.collection.View.Tabulate&quot;&gt;Tabulate&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24tabulate&quot; id=&quot;scala.collection.View.Tabulate&quot; name=&quot;scala.collection.View.Tabulate&quot;&gt;Tabulate&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f95f69d55194f6ceb9264e7fda16fb66e9624566" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24tabulate&quot; id=&quot;scala.collection.View.Tabulate&quot; name=&quot;scala.collection.View.Tabulate&quot;&gt;Tabulate&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24tabulate&quot; id=&quot;scala.collection.View.Tabulate&quot; name=&quot;scala.collection.View.Tabulate&quot;&gt;Tabulate&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Tabulate.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b8e8391fd2b3d371499ae6af42db0da7007c39b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24take&quot; id=&quot;scala.collection.View.Take&quot; name=&quot;scala.collection.View.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24take&quot; id=&quot;scala.collection.View.Take&quot; name=&quot;scala.collection.View.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe9ff8d6c3fd0384266c277865217cdc8861567a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24take&quot; id=&quot;scala.collection.View.Take&quot; name=&quot;scala.collection.View.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24take&quot; id=&quot;scala.collection.View.Take&quot; name=&quot;scala.collection.View.Take&quot;&gt;Take&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Take.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d233033c98dc05a59b010c5b008b2d7cfa13cc54" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24takeright&quot; id=&quot;scala.collection.View.TakeRight&quot; name=&quot;scala.collection.View.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24takeright&quot; id=&quot;scala.collection.View.TakeRight&quot; name=&quot;scala.collection.View.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="856521484da196b13028b6744fbd2957f2c83bcf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24takeright&quot; id=&quot;scala.collection.View.TakeRight&quot; name=&quot;scala.collection.View.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24takeright&quot; id=&quot;scala.collection.View.TakeRight&quot; name=&quot;scala.collection.View.TakeRight&quot;&gt;TakeRight&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeRight.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28ec7178a9e780e4c609c9fedcc39744293cd06d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24takewhile&quot; id=&quot;scala.collection.View.TakeWhile&quot; name=&quot;scala.collection.View.TakeWhile&quot;&gt;TakeWhile&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24takewhile&quot; id=&quot;scala.collection.View.TakeWhile&quot; name=&quot;scala.collection.View.TakeWhile&quot;&gt;TakeWhile&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd0d133b397a2ef58532dd34c6157c29560e83d7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24takewhile&quot; id=&quot;scala.collection.View.TakeWhile&quot; name=&quot;scala.collection.View.TakeWhile&quot;&gt;TakeWhile&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24takewhile&quot; id=&quot;scala.collection.View.TakeWhile&quot; name=&quot;scala.collection.View.TakeWhile&quot;&gt;TakeWhile&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.TakeWhile.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1c249a9765b5508b7972fc3730177c23a1a1cd3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24unfold&quot; id=&quot;scala.collection.View.Unfold&quot; name=&quot;scala.collection.View.Unfold&quot;&gt;Unfold&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Unfold.S&quot;&gt;S&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24unfold&quot; id=&quot;scala.collection.View.Unfold&quot; name=&quot;scala.collection.View.Unfold&quot;&gt;Unfold&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Unfold.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b57a05f5a4012a21eb6387b0d7a359f18a81e4b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24unfold&quot; id=&quot;scala.collection.View.Unfold&quot; name=&quot;scala.collection.View.Unfold&quot;&gt;Unfold&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Unfold.S&quot;&gt;S&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24unfold&quot; id=&quot;scala.collection.View.Unfold&quot; name=&quot;scala.collection.View.Unfold&quot;&gt;Unfold&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Unfold.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Unfold.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94c877654f8d1f89aba62dab8d4bc0790c8fef30" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24updated&quot; id=&quot;scala.collection.View.Updated&quot; name=&quot;scala.collection.View.Updated&quot;&gt;Updated&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24updated&quot; id=&quot;scala.collection.View.Updated&quot; name=&quot;scala.collection.View.Updated&quot;&gt;Updated&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d93182e4e327f44a7311035d1b65c5644923c66c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24updated&quot; id=&quot;scala.collection.View.Updated&quot; name=&quot;scala.collection.View.Updated&quot;&gt;Updated&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24updated&quot; id=&quot;scala.collection.View.Updated&quot; name=&quot;scala.collection.View.Updated&quot;&gt;Updated&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Updated.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54b1f17db0ae02c837864705b2fb32e103d38f6b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24zip&quot; id=&quot;scala.collection.View.Zip&quot; name=&quot;scala.collection.View.Zip&quot;&gt;Zip&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24zip&quot; id=&quot;scala.collection.View.Zip&quot; name=&quot;scala.collection.View.Zip&quot;&gt;Zip&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6403fdd668c27b35e52dc4d93e068dcf5dac2c3c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24zip&quot; id=&quot;scala.collection.View.Zip&quot; name=&quot;scala.collection.View.Zip&quot;&gt;Zip&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24zip&quot; id=&quot;scala.collection.View.Zip&quot; name=&quot;scala.collection.View.Zip&quot;&gt;Zip&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.Zip.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.Zip.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e4295ccdfcfec8c6e516e372c246d18dc1726a8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24zipall&quot; id=&quot;scala.collection.View.ZipAll&quot; name=&quot;scala.collection.View.ZipAll&quot;&gt;ZipAll&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24zipall&quot; id=&quot;scala.collection.View.ZipAll&quot; name=&quot;scala.collection.View.ZipAll&quot;&gt;ZipAll&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b47f6707c31aa3cecdf0a5ab8fb61bd3b8300bc3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24zipall&quot; id=&quot;scala.collection.View.ZipAll&quot; name=&quot;scala.collection.View.ZipAll&quot;&gt;ZipAll&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24zipall&quot; id=&quot;scala.collection.View.ZipAll&quot; name=&quot;scala.collection.View.ZipAll&quot;&gt;ZipAll&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ZipAll.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.View.ZipAll.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c0219e05b6a72546a211fba231620f202835c06" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24zipwithindex&quot; id=&quot;scala.collection.View.ZipWithIndex&quot; name=&quot;scala.collection.View.ZipWithIndex&quot;&gt;ZipWithIndex&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24zipwithindex&quot; id=&quot;scala.collection.View.ZipWithIndex&quot; name=&quot;scala.collection.View.ZipWithIndex&quot;&gt;ZipWithIndex&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2086975694f229a8e48026231b382f221997fc70" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;view%24%24zipwithindex&quot; id=&quot;scala.collection.View.ZipWithIndex&quot; name=&quot;scala.collection.View.ZipWithIndex&quot;&gt;ZipWithIndex&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;view%24%24zipwithindex&quot; id=&quot;scala.collection.View.ZipWithIndex&quot; name=&quot;scala.collection.View.ZipWithIndex&quot;&gt;ZipWithIndex&lt;/a&gt;[&lt;span name=&quot;scala.collection.View.ZipWithIndex.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="844e002c0de72a75d8332951871b0a315eea6731" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;volatile&quot; id=&quot;scala.volatile&quot; name=&quot;scala.volatile&quot;&gt;volatile&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;volatile&quot; id=&quot;scala.volatile&quot; name=&quot;scala.volatile&quot;&gt;volatile&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5a0b3666f41652f506a8bad219321cc07b63b8b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;volatile&quot; id=&quot;scala.volatile&quot; name=&quot;scala.volatile&quot;&gt;volatile&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;volatile&quot; id=&quot;scala.volatile&quot; name=&quot;scala.volatile&quot;&gt;volatile&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4f9acdaf2e7710fd05d370b5034f651b48ef52" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96a0c93402f43b16b5cd41de4e009632bd5f96ac" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a57c01c0e1286b2c103f598f6039423cbeaad11" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;weakreference&quot; id=&quot;scala.ref.WeakReference&quot; name=&quot;scala.ref.WeakReference&quot;&gt;WeakReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.WeakReference.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;weakreference&quot; id=&quot;scala.ref.WeakReference&quot; name=&quot;scala.ref.WeakReference&quot;&gt;WeakReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.WeakReference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881f40f45c37e890983f06b3f4d5b8cbfaa2c544" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;weakreference&quot; id=&quot;scala.ref.WeakReference&quot; name=&quot;scala.ref.WeakReference&quot;&gt;WeakReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.WeakReference.T&quot;&gt;T&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;weakreference&quot; id=&quot;scala.ref.WeakReference&quot; name=&quot;scala.ref.WeakReference&quot;&gt;WeakReference&lt;/a&gt;[&lt;span name=&quot;scala.ref.WeakReference.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ae79a4669ce1f40c4b879851bfc84567920fc51" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25ddf8159754e8479bc46879fb349250b8b3a377" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]) =&amp;gt; &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;withfilter&quot; id=&quot;scala.collection.WithFilter&quot; name=&quot;scala.collection.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.WithFilter.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.WithFilter.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbb6fe41ce71793d83b93bc5e5bf2bfd48520fbd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d321864c33c3ac7bd42ee9a8005a3871024d7916" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bacb72bba23e3731bc3ad695d150b5bc7482738" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;wrappedstring%24%24unwrapop&quot; id=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot; name=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot;&gt;UnwrapOp&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring%24%24unwrapop&quot; id=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot; name=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot;&gt;UnwrapOp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="317479fb22bad9c6c2dd155934c260e16810651a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;a href=&quot;wrappedstring%24%24unwrapop&quot; id=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot; name=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot;&gt;UnwrapOp&lt;/a&gt;) =&amp;gt; &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring%24%24unwrapop&quot; id=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot; name=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot;&gt;UnwrapOp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eeac37b4cda42a26c6e9ae94b8545c0a0b2f35c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;span name=&quot;scala.Predef.Ensuring.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Predef.Ensuring.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acb6d4bc7770e505e73e02e6f4deb4aedb0efaf2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: (&lt;span name=&quot;scala.Predef.Ensuring.A&quot;&gt;A&lt;/span&gt;) =&amp;gt; &lt;a href=&quot;boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;span name=&quot;scala.Predef.Ensuring.A&quot;&gt;A&lt;/span&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0281f9e984d235a47d2da3e9c676090a94dc110" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff5aec998026cbfee2b67d7e32a6e3f23545804" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="73e7154c9da1c976aa24e4477d6fb3ebf428c2a1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61d12a051a080fed6308520c20b8902056ca1245" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.immutable.AbstractMap&quot; name=&quot;scala.collection.immutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="946460801bacbc225b623ba4c16ec045c1407721" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a9831706c691e1e3ff1ae4a6ab3307e6b60f6f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.immutable.AbstractSeq&quot; name=&quot;scala.collection.immutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04f82b3d86ce4b848a76892eb1dcf0ea4fea040b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.mutable.AbstractSeq&quot; name=&quot;scala.collection.mutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b58669dcd5bce4c9634c79dfec3d5c6009162ae1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac9774c1711e33dc7a7233a753f62543a59c42eb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87708d4e8a3d76334c57c084d83f8bab3e233b35" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac3853b9f61ff0b40f6aef69e322261c8e81f82d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap%24%24anyrefmapbuilder&quot; id=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot; name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot;&gt;AnyRefMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23863d1e476619cb44b50fda38dbe522875fc64a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d3259d6ff8623ed9d28328a8e1a9267311292f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybufferview&quot; id=&quot;scala.collection.mutable.ArrayBufferView&quot; name=&quot;scala.collection.mutable.ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3d7f70f95a68d6d0cdc9133703698e0ba3722460" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder&quot; id=&quot;scala.collection.mutable.ArrayBuilder&quot; name=&quot;scala.collection.mutable.ArrayBuilder&quot;&gt;ArrayBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d72a0bb1823e27d3d745e2f764bb249791559875" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4a0e94c199db1a81c4788cb6dde3fdae5a6131d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33ba7ad3d8dd756f2a7dba68e05dea8ecbf3743b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4316135e879abf7afdde41ae8a6c52aace24d9a0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8bb68e3cb3a47f5c86778bb04a5511d769b3d404" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24offloat&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e08a0c9a8584b7e8484d4fb0dc774a57a7d7299c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofint&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824a262b0c4fcd9eb9fdfe964b8e42430b8f24c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24oflong&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc16924d2b313cd4161ce93f32bde797da66d57" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofref&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d74ea4f1a388d2340a4a19231eb7458750153b1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6303b1a5bdd12f13a9feb23da0e71b66898250d4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ace0ac4b6196951021ca3a02a5c98ff1e5982863" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b302b7e590f1ba4f30f20fa4046d3167405d35e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydequeops&quot; id=&quot;scala.collection.mutable.ArrayDequeOps&quot; name=&quot;scala.collection.mutable.ArrayDequeOps&quot;&gt;ArrayDequeOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f58e6c86fa7b06d0166e599463b01b2cd80d5b7a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad0d8027f5706954999454c004b244f88c5e174" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d7504a8c15d53555cf96180996a35506473f342" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f9792789c0433df6bea4e8ecff9bfff903e6c3f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00fd4df273d1072fc1dd548f79bdf12dc1967340" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.immutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.immutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc5fccfa321ef24fe58bd56d27ee7080d28172af" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d53a91a24891570912de9d28ccb3ccd8d5d52aa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.immutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.immutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3e4f22bdb8637db2892b628be0a087b9dd36e42" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bec890843f90186a7cde1fbecd03f6f64e66323" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82a3f7c9e72ffdd756f3ab912d279e142d042b0f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e01b64e943ccb59a30deb4ecafb4931fba130d0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="160e941750040ea0ee5ab563b16ced3b4f4de5c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="96d7ad6d39c7fb7eeceb2be9372bf3fb9cd1a484" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.immutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.immutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b20786e56f7d866ef227134af6e0b311e68b57be" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84c07963ed8888db3d55305af2f5eb424b350c85" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.immutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.immutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94fc8b0cb9268214fd572a179a3df5ab20c22d5e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4963179b020cd1e044ef9fbbe11c046f6959d0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="173a3f3fbcb42ac144e7a16837d7ebabc78a5417" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd4d3443a8bf9eec72f2eee5ee6cef22c79bd97d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.immutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.immutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0a6fa1e30e59a209476b7d01a450e371305d877" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13580934e6baa57c5d9b3554702bff0fcd037dd7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c391c65a8c81006d42bdf8ef910d0ec9a98478c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99dbd691aef632f8b731369387c4fb020044b21" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaconverters&quot; id=&quot;scala.collection.convert.AsJavaConverters&quot; name=&quot;scala.collection.convert.AsJavaConverters&quot;&gt;AsJavaConverters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d23d22fe2f6132d3de22ae39866ca6597dd871d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions&quot; id=&quot;scala.collection.convert.AsJavaExtensions&quot; name=&quot;scala.collection.convert.AsJavaExtensions&quot;&gt;AsJavaExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a72bf4a72263bfe5514c252af8444ace67557bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24bufferhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot;&gt;BufferHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ab0e430e733ac9af09be1d9f7a01724f4bb95a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24concurrentmaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot;&gt;ConcurrentMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f08957be3358cc5abb58a176bfcb3937d597e7e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24iterablehasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot;&gt;IterableHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="872c8c9412c9539da72111a4c7a93fd496463f6f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24iteratorhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot;&gt;IteratorHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ca84ace063e57898ec33f191943514f71cc4d08" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24maphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot;&gt;MapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49304269990a8c9de98c9842c660b106def717f7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutablemaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot;&gt;MutableMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34e3012917d88068ebd786e66d1445d2b7443819" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutableseqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot;&gt;MutableSeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3b09fcb0d1d51f56f83a4e00e45d01b6e4e8074" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutablesethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot;&gt;MutableSetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="704c41b07f09778441ac235db5fe4297da9589f6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24seqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot;&gt;SeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b1b58c61a504688f3dfac14d0ff47f2e96f7937" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24sethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot;&gt;SetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb27765918111bb24f27b983c58eac6d673febe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaconverters&quot; id=&quot;scala.collection.convert.AsScalaConverters&quot; name=&quot;scala.collection.convert.AsScalaConverters&quot;&gt;AsScalaConverters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec69190b1d75bde9698c4f986eccc794f3a3ab7e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions&quot; id=&quot;scala.collection.convert.AsScalaExtensions&quot; name=&quot;scala.collection.convert.AsScalaExtensions&quot;&gt;AsScalaExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d53c907022e99367d6540ee18e50c85842bde5a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24collectionhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot;&gt;CollectionHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d8c40fc994238b37ffda6d768db673d97e35a40" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24concurrentmaphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot;&gt;ConcurrentMapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e79def4f697ead04d03decbe2ac2c3f8e9080d6c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24dictionaryhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot;&gt;DictionaryHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62358d09f5ae034afe8766476d2caaaaac625cf2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24enumerationhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot;&gt;EnumerationHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b481d2b14406063af3dd8f71a24cef725449bdb8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24iterablehasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot;&gt;IterableHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23e4a9f4cb0c399e7d56ac0f74c678c7a9edba6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24iteratorhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot;&gt;IteratorHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3308b1d2168cbe05eb6eee3e529bc7340c78f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24listhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot;&gt;ListHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4df02c42ef212906df3a7a4054c7e19c66e76298" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24maphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot;&gt;MapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8f88a944c893c35e6a3e1ee2606d9a587467be" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24propertieshasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot;&gt;PropertiesHasAsScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f74e7de66ecf0451292f30e8cda79e6535c6c81" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24sethasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot;&gt;SetHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f3627f309e8db026626857db308d055175d193f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beangetter&quot; id=&quot;scala.annotation.meta.beanGetter&quot; name=&quot;scala.annotation.meta.beanGetter&quot;&gt;beanGetter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc8747e827c40ca31fda0a399f61fd01374dc1dd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beansetter&quot; id=&quot;scala.annotation.meta.beanSetter&quot; name=&quot;scala.annotation.meta.beanSetter&quot;&gt;beanSetter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e1bff4e70624f3ab36c3eaa4ca591d61be870f0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4034ca7c3dab57b53f44215c0947aa29ba38b657" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f575207b3edd0d01f27ddd9ec50142017505af67" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitset1&quot; id=&quot;scala.collection.immutable.BitSet.BitSet1&quot; name=&quot;scala.collection.immutable.BitSet.BitSet1&quot;&gt;BitSet1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a64904479434c2433888edc0abbe26cd2f91b6b7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitset2&quot; id=&quot;scala.collection.immutable.BitSet.BitSet2&quot; name=&quot;scala.collection.immutable.BitSet.BitSet2&quot;&gt;BitSet2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee3ec8812d60b2b4813eb3667cf3d12497e6d0b3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitsetn&quot; id=&quot;scala.collection.immutable.BitSet.BitSetN&quot; name=&quot;scala.collection.immutable.BitSet.BitSetN&quot;&gt;BitSetN&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a1e2484e7c304f77bf632e70e3c1b9f33777658" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;breaks&quot; id=&quot;scala.util.control.Breaks&quot; name=&quot;scala.util.control.Breaks&quot;&gt;Breaks&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd3968ac4ac58b4d9d28cf3825120e85ec7d0d83" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;breaks%24tryblock&quot; id=&quot;scala.util.control.Breaks.TryBlock&quot; name=&quot;scala.util.control.Breaks.TryBlock&quot;&gt;TryBlock&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Breaks.TryBlock.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b43e743b14f6ae179e558e29aad05a1e1fa464f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2829c320cda7074588cb615af49678ca08390357" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Builder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e4c1740d0d32e139e25d08d50d6373e611bf6ed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byteswaphashing&quot; id=&quot;scala.util.hashing.ByteswapHashing&quot; name=&quot;scala.util.hashing.ByteswapHashing&quot;&gt;ByteswapHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.ByteswapHashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b2d68b600f00be5d56ece97e006fb49136f11e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;clearable&quot; id=&quot;scala.collection.mutable.Clearable&quot; name=&quot;scala.collection.mutable.Clearable&quot;&gt;Clearable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d207ba72e637d53b14cf02cf2c8cdbabee237ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;cloneable&quot; id=&quot;scala.collection.mutable.Cloneable&quot; name=&quot;scala.collection.mutable.Cloneable&quot;&gt;Cloneable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Cloneable.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7254a90033a4703542843a974f2fe2623cf3601" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2461b251ac3a57ab45882aba4c5e964bca6d4a94" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap%24%24node&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot;&gt;Node&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b3ade938258d8e268059f28abda7411cfe01e2c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap%24%24rbnode&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot;&gt;RBNode&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aca8cf4712bffce070ac64abdb7c6f10a7fe6df9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionclass&quot; id=&quot;scala.annotation.meta.companionClass&quot; name=&quot;scala.annotation.meta.companionClass&quot;&gt;companionClass&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d5f55f97aaffab9828b1a3ceb34856af8c9782" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionmethod&quot; id=&quot;scala.annotation.meta.companionMethod&quot; name=&quot;scala.annotation.meta.companionMethod&quot;&gt;companionMethod&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a24497af10cacf467a39d9c105ed4051c536f783" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionobject&quot; id=&quot;scala.annotation.meta.companionObject&quot; name=&quot;scala.annotation.meta.companionObject&quot;&gt;companionObject&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cce94671b514349b8889aef211f66232da55f6be" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;controlthrowable&quot; id=&quot;scala.util.control.ControlThrowable&quot; name=&quot;scala.util.control.ControlThrowable&quot;&gt;ControlThrowable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b3068494878b0d72a92cd64db4ba0f3dc6278b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="348eaa818f94af86afd1bfa230a0732a07c729b1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0232ea8f7fdaa00935210d36487f8c6d6296afc3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultserializationproxy&quot; id=&quot;scala.collection.generic.DefaultSerializationProxy&quot; name=&quot;scala.collection.generic.DefaultSerializationProxy&quot;&gt;DefaultSerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.DefaultSerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5daa7c4dc3740dfc4950275d42a356b994bb9d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aba06e894b759e2f11c118e10e5afa9358ef7a41" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration%24%24infinite&quot; id=&quot;scala.concurrent.duration.Duration.Infinite&quot; name=&quot;scala.concurrent.duration.Duration.Infinite&quot;&gt;Infinite&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8de2b2291dd27678863bd5fb03c6032676336fb2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c22a5dadd8691fab98022752309793d9f9d89a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.Classifier.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aeb3fef19600ec9f072e61e3a37ef931f1d32fc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24by&quot; id=&quot;scala.util.control.Exception.By&quot; name=&quot;scala.util.control.Exception.By&quot;&gt;By&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.By.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.util.control.Exception.By.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6d9d2e87d7215ffb68dc56bb57f9066b47e2e9b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f81a591e045087ae0fb1001f178c990dc71a3df" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24described&quot; id=&quot;scala.util.control.Exception.Described&quot; name=&quot;scala.util.control.Exception.Described&quot;&gt;Described&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b04aa8ae2d5a11fe8646eaafbf358e2ee610581" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finally&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="433274d04a591075c0e4f69a453c1c201bd5b85c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;field&quot; id=&quot;scala.annotation.meta.field&quot; name=&quot;scala.annotation.meta.field&quot;&gt;field&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86a91f546658336e7e67f7915608b78bc4ab1c49" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fileprocesslogger&quot; id=&quot;scala.sys.process.FileProcessLogger&quot; name=&quot;scala.sys.process.FileProcessLogger&quot;&gt;FileProcessLogger&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="263a22cdd7ab4bae61b461c565ea9547d4ea57d9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="241f9c0eba7a8cf61ad64a3eec605dec50b3c3db" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;getter&quot; id=&quot;scala.annotation.meta.getter&quot; name=&quot;scala.annotation.meta.getter&quot;&gt;getter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d46dd6787c4a516da4f88a1815c04a92ba9aa875" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;growable&quot; id=&quot;scala.collection.mutable.Growable&quot; name=&quot;scala.collection.mutable.Growable&quot;&gt;Growable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Growable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4f59c8602cbfee4f69808dd4afdcf443b628512b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987fc12af3511f5eb35b4ad9955a7b6ebcfae325" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14858eecd9ed53a665459097fabd337e694e47fc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashing%24%24default&quot; id=&quot;scala.util.hashing.Hashing.Default&quot; name=&quot;scala.util.hashing.Hashing.Default&quot;&gt;Default&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.Default.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb93d3f2bf811285c41efe9a452c07bc5d2ec5d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f782de020ea28181a281d24d1073e368a1d3c97a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b588cd0ec367428a6dd32eca7a6b2469d81f7ef4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f293585870de998f4c73a730b0388ad5a2c65b92" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4a72df3be05b79833fcb04ac764919302346185" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;immutablebuilder&quot; id=&quot;scala.collection.mutable.ImmutableBuilder&quot; name=&quot;scala.collection.mutable.ImmutableBuilder&quot;&gt;ImmutableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926bd9581c725b9ba4df938a846876714c3ebabc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b576b81fc67543fd6696d47c091e851b4479ef80" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c774d9fbd373ecc4bd85418abcae10368a46606d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e83316830a1b08bf4992c87acda4f8f32af560e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.immutable.IndexedSeqOps&quot; name=&quot;scala.collection.immutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4118837b6f70378a28eca8253a9c961df71838ad" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.mutable.IndexedSeqOps&quot; name=&quot;scala.collection.mutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="355284467919c28963662bced5c17b174e0e2903" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="614a138c2fc7a85bf59fc7391721ad54ded30c45" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a24bae0830b9dc5d1d9efb924e97ca9b142b862" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterablelowpriority&quot; id=&quot;scala.collection.generic.IsIterableLowPriority&quot; name=&quot;scala.collection.generic.IsIterableLowPriority&quot;&gt;IsIterableLowPriority&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="65e0cc2726fd115a438d0913972f01cd599364cf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterableonce&quot; id=&quot;scala.collection.generic.IsIterableOnce&quot; name=&quot;scala.collection.generic.IsIterableOnce&quot;&gt;IsIterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnce.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d88fbf51fcb778507198ba289ab353643aa606f6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterableoncelowpriority&quot; id=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot; name=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot;&gt;IsIterableOnceLowPriority&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8b84332a667bcee21e977ae80de7876f72d639c3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57126aae2c0c139287f24a5c118372cbdba33699" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98462183b724dd372f449f29569f061b93e41ef6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f62d1ffe117ed6f705b0498909408137c78beacf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="788136de06593d9ac960ec4119f462ffd754d679" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature&quot; id=&quot;scala.annotation.meta.languageFeature&quot; name=&quot;scala.annotation.meta.languageFeature&quot;&gt;languageFeature&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4b442eec043eb8092a8018a34196325ee1aa08e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1f93f3a7a53b351813326bcf8bf5dbdd524a2f7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist%24%24deferrer&quot; id=&quot;scala.collection.immutable.LazyList.Deferrer&quot; name=&quot;scala.collection.immutable.LazyList.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.Deferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c339a15a33e83e3aa4676b999cf7b8a49a1414ee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot; name=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8536391539b67229696d41887e8bd8b988bd87df" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbada0e7cd6dbd10ceaf14f154f08ad48b55dd6b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.immutable.LinearSeqOps&quot; name=&quot;scala.collection.immutable.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f5a359b09019890b1f236e1aa1c078174f234ad" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8368a9ffe76fe470eaa9ffda94fbc73b7ff47738" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap%24linkedkeyset&quot; id=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot; name=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot;&gt;LinkedKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe9ef2fc74430cda5c0e59a7ee1d8a5060252d9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe178eb7ebc491bb25743858f292d6f08606d00c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3503239184c13f8665b161387fab203e1a2ff0b5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1811f7378f0688585c2bc9bbaa1b70075f4f4fcd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="094d2979672338ec16890da63a03344db6ba6288" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42e179bcd11c293f291461b0e98e1b746fea17c1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e63c8806b51931a4f8f3dc9e765a4cef823c8973" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listset%24node&quot; id=&quot;scala.collection.immutable.ListSet.Node&quot; name=&quot;scala.collection.immutable.ListSet.Node&quot;&gt;Node&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb29df65942e7d8605b22041c568f8ed11cb1ab6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db5fd0e6b45416618402939c86d2c2a174853758" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f6e87da0617687fb85ad580712663538d9b6e36a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap%24%24longmapbuilder&quot; id=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot; name=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot;&gt;LongMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9ecfcb42489c25a91ac4cab4993470add7018e10" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab5796ae3458d984e2e53f71bb0268c84e6b406" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b236b3212293ff33df6f48b7ed8293a23367133b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="660c69977beedf6523b115e1fa789770851e0b99" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map1&quot; id=&quot;scala.collection.immutable.Map.Map1&quot; name=&quot;scala.collection.immutable.Map.Map1&quot;&gt;Map1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="878980f854699d3b435ab8e0df2ffa97742ed9e3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map2&quot; id=&quot;scala.collection.immutable.Map.Map2&quot; name=&quot;scala.collection.immutable.Map.Map2&quot;&gt;Map2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="57625dd976364a94c93de4fecca9bd714c7074f9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map3&quot; id=&quot;scala.collection.immutable.Map.Map3&quot; name=&quot;scala.collection.immutable.Map.Map3&quot;&gt;Map3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9081c59686dbab0146e4be8ceb44bc61ad5ea059" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map4&quot; id=&quot;scala.collection.immutable.Map.Map4&quot; name=&quot;scala.collection.immutable.Map.Map4&quot;&gt;Map4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="526452348e97a573d938c573a76de57daa3f0277" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbf6881e37aaf2641e9b09dd9241bb42ecd1510d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03c47507ecd923874633d64ceda713d7ee306ea" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.immutable.MapOps&quot; name=&quot;scala.collection.immutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dbeb770a1572a8ee93bd839da5cedf56ac0be7b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ed5def7a5d54d00b4908b5e20ba87e47d300ceb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24immutablekeyset&quot; id=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot; name=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot;&gt;ImmutableKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51060ceef0742f8802843a11f3095d1530f889a0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="142601a3efdbc50146639a9deebd0bcb3ea51d0d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;murmurhash3%24%24arrayhashing&quot; id=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot; name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot;&gt;ArrayHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fdb0cec12a431705bf285458f9cce241579036c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;nostacktrace&quot; id=&quot;scala.util.control.NoStackTrace&quot; name=&quot;scala.util.control.NoStackTrace&quot;&gt;NoStackTrace&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e4755e3753cfb83b018f02de95c2a3dd226685" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3543e4b82e59155981dd7437b57d519b5ca4a554" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1cc47d0792f2fc788a337818b6372c885b75d7b2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f2018ca81cd162d82462d05d0ac233007890d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8efba7866cb10ce4b2c6ba6e16da16966cc914a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24doublemult&quot; id=&quot;scala.concurrent.duration.DoubleMult&quot; name=&quot;scala.concurrent.duration.DoubleMult&quot;&gt;DoubleMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06df61fbcc0bfa0284ad7fcbb538943fe3447198" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationdouble&quot; id=&quot;scala.concurrent.duration.DurationDouble&quot; name=&quot;scala.concurrent.duration.DurationDouble&quot;&gt;DurationDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0536e96cf96e51f87b97e5c5fc06d979e040bbc2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationint&quot; id=&quot;scala.concurrent.duration.DurationInt&quot; name=&quot;scala.concurrent.duration.DurationInt&quot;&gt;DurationInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d913ef727df9a20af2f77515e4ba634ba277ad" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationlong&quot; id=&quot;scala.concurrent.duration.DurationLong&quot; name=&quot;scala.concurrent.duration.DurationLong&quot;&gt;DurationLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8aa8942db2c661a0bcfe429363ab6b0fb08a4943" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24intmult&quot; id=&quot;scala.concurrent.duration.IntMult&quot; name=&quot;scala.concurrent.duration.IntMult&quot;&gt;IntMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ee788f6309fbd72657d98f5637ebe64f30788d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24longmult&quot; id=&quot;scala.concurrent.duration.LongMult&quot; name=&quot;scala.concurrent.duration.LongMult&quot;&gt;LongMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25df3253c4a44aa092598bf48419a558e81e0ae3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;param&quot; id=&quot;scala.annotation.meta.param&quot; name=&quot;scala.annotation.meta.param&quot;&gt;param&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a5531c26872286094c9eb6e72c9ce5f51d80dc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b8ab57a1e8d80eb316ad272772ee95c223a6935" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8bf4bf527fdff610826ebb9dc332af4a47f684c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75f5e86b56ffa0c45a985c529b4fb7b9855ad16" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;FileBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="87aea7100f333c1bbb52f528d701e3da2497a9cb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24sink&quot; id=&quot;scala.sys.process.ProcessBuilder.Sink&quot; name=&quot;scala.sys.process.ProcessBuilder.Sink&quot;&gt;Sink&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b177b3bfede8d647c195e6cacdf08304f117260c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ec181feccee95d05b8a8a4497fefdf6c5fe26fb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;URLBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81bafd48030bf068ae93c1a9869c829266c8f7fd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processcreation&quot; id=&quot;scala.sys.process.ProcessCreation&quot; name=&quot;scala.sys.process.ProcessCreation&quot;&gt;ProcessCreation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="25132063bd563706b2d55f5cf51d5d352767061e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processimplicits&quot; id=&quot;scala.sys.process.ProcessImplicits&quot; name=&quot;scala.sys.process.ProcessImplicits&quot;&gt;ProcessImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df00027620e08c303a443c59a0f9a772a86c065c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b69093891f0dbdce721542dbb651df3b11447c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e70e389e37667e946b45e5560b0d41948017553a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2280338220daf1cc8d2eef97f0a0fc950fb4f8ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ff9acc22333267d6f1ab5695c1feefc564eb8be" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e18d5190ed9de8f71fef2d94deecfc700b9a706" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7526cc1c57b80647e81486af2133eb9b98d902b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="002a7171255c22a8b889c07f7f1fca50e488a246" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24partial&quot; id=&quot;scala.collection.immutable.Range.Partial&quot; name=&quot;scala.collection.immutable.Range.Partial&quot;&gt;Partial&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.Partial.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Range.Partial.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b847dd82eed0e0953782e1387bc4eb0506e2d1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex&quot; id=&quot;scala.util.matching.Regex&quot; name=&quot;scala.util.matching.Regex&quot;&gt;Regex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43066199f73a024b614c7344751f7cc620dd838b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab81463989432a26e4302ef52c34376a96ce84fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24matchdata&quot; id=&quot;scala.util.matching.Regex.MatchData&quot; name=&quot;scala.util.matching.Regex.MatchData&quot;&gt;MatchData&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60501150af45df35f3edcae89a851329758b221a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24matchiterator&quot; id=&quot;scala.util.matching.Regex.MatchIterator&quot; name=&quot;scala.util.matching.Regex.MatchIterator&quot;&gt;MatchIterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b2b3d508c9bb229ef4a362d563ad4ac86c2b2d5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ReusableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ReusableBuilder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bd8d43f717a7e8acdefde16581ad96ff3d52c03" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cea2ddb2c5228240c27b41fbe323e122f608f784" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d473535f58b3e1cd1a458d3b493edf6ef0adb1e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bda86a1ba7e9f8592b4dabbf60880d92a297ad3e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76e0ce2aa5192ef0e111591e59f31b973faa2cdc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.immutable.SeqOps&quot; name=&quot;scala.collection.immutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eaaa3314433761e6ee01b5015c30919d8fb80d4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.mutable.SeqOps&quot; name=&quot;scala.collection.mutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2661c3303a7c6ff904ed2236d3b25ab976d9752" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827b4501cb52e34d33f419646c019dc0e61500f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="709976d3aa86f6f939e4da3efcfc78f05f1195c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set1&quot; id=&quot;scala.collection.immutable.Set.Set1&quot; name=&quot;scala.collection.immutable.Set.Set1&quot;&gt;Set1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b10bd801b3ee6282f3ef1e4d6d74bfb36e6e916e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set2&quot; id=&quot;scala.collection.immutable.Set.Set2&quot; name=&quot;scala.collection.immutable.Set.Set2&quot;&gt;Set2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4796307f4256b49c9d0c410779c7191b8bb21e64" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set3&quot; id=&quot;scala.collection.immutable.Set.Set3&quot; name=&quot;scala.collection.immutable.Set.Set3&quot;&gt;Set3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8007542498032239bee9ae5cc8d39cb94940136e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set4&quot; id=&quot;scala.collection.immutable.Set.Set4&quot; name=&quot;scala.collection.immutable.Set.Set4&quot;&gt;Set4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="925535df29c54ee9aab87382fb0ccb1ab2dda307" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.immutable.SetOps&quot; name=&quot;scala.collection.immutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10a9ddd566ee9aece8df62a50d2408888c3ca4ee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.mutable.SetOps&quot; name=&quot;scala.collection.mutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="199836b6ed6e3847e1aaf5aa5d176375be022420" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setter&quot; id=&quot;scala.annotation.meta.setter&quot; name=&quot;scala.annotation.meta.setter&quot;&gt;setter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34db0c1f97dbd0b769af81759302bca1fd5b2fdf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;shrinkable&quot; id=&quot;scala.collection.mutable.Shrinkable&quot; name=&quot;scala.collection.mutable.Shrinkable&quot;&gt;Shrinkable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Shrinkable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a3947fae93dc48582b286460b76b2e7065abe6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8fd678e1906ab7bb4f4a7f6523f9b24a6ee4d261" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="19e8759dd509484460778f5829a7afff8524e5c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b247189882b1e50cf8b14d7f260dfb32838bea4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="84adfe5522de50fdd0d5c219ded22d0f8533f804" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.immutable.SortedMapOps&quot; name=&quot;scala.collection.immutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8c61a34a8e6d167532e89d6afc9e495f9682bc4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.mutable.SortedMapOps&quot; name=&quot;scala.collection.mutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02f64182d2da07c1d6a5402918145af8fa5347d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24immutablekeysortedset&quot; id=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot; name=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot;&gt;ImmutableKeySortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a6c4410827d9252a77cf6aea442f064e152a907" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f72ee913bc8020bef7d432a3806ebf2ab4b258" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="920b5452925ad97720643755a2f3659712cbfbec" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.immutable.SortedSetOps&quot; name=&quot;scala.collection.immutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2bc31e11748aee6b5ecd68c69ae067d9dd2546ed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.mutable.SortedSetOps&quot; name=&quot;scala.collection.mutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c44a6aaed0a84ad4b6482f47d6f6863b5fb841a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68506d5b8ddbf8de5a49bea68eebe5643f669417" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22de9ccd37b3d95cbcce3549563dc276c4e75dbb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24cons&quot; id=&quot;scala.collection.immutable.Stream.Cons&quot; name=&quot;scala.collection.immutable.Stream.Cons&quot;&gt;Cons&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b745be7ee0aa5c4d8e4d3a1f177ec93e09b4969" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24deferrer&quot; id=&quot;scala.collection.immutable.Stream.Deferrer&quot; name=&quot;scala.collection.immutable.Stream.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Deferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83076a10f5d66d7fdd73c76d39986bc8dfcb30d0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.Stream.SerializationProxy&quot; name=&quot;scala.collection.immutable.Stream.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc5f017b58d232add8c9831c02f1f979bc755549" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions&quot; id=&quot;scala.collection.convert.StreamExtensions&quot; name=&quot;scala.collection.convert.StreamExtensions&quot;&gt;StreamExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5dc01762ea901d0404c13ec766de8bf69ebb14b6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630c78dec5f1e42544a39432d31c1ba8e2ad83ca" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24lowpriorityaccumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot;&gt;LowPriorityAccumulatorFactoryInfo&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd8d0443a787c2ef112cb19767ec45afb28a227" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.St&quot;&gt;St&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6a0fc455566649562478e1b5b4a626243dc0dd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamshapelowpriority1&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot;&gt;StreamShapeLowPriority1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="558300c589f7a8d17416e5d92266f32c7fd0f6e5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85ba2c22424490dbe6d576e65f096db458df7de7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24anyarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot;&gt;AnyArrayHasSeqParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36bb977a31a8aa4599847df9f1001e5db3e07045" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24bytearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot;&gt;ByteArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="260dd56aa5cf6d9bc3d72bc1f1db1ba984b68720" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24chararrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot;&gt;CharArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b75f5b8d9036815d294971c94d4a8ade7d0f339d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24doublearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot;&gt;DoubleArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20845dd54ee52f770989c5625876071863296b61" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24doublestreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot;&gt;DoubleStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bbef6511dc810246b7412b67c4f62653a0178670" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24floatarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot;&gt;FloatArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ccaa5747ddbfeae1e2410f26ed79cb65d5eb83b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24intarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot;&gt;IntArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcc5dc42e34b425f83325211567f0528dc136fef" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24intstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot;&gt;IntStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45219050b0f7bd826e7caddb0bd84565ff5ae1d2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24iterablehasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot;&gt;IterableHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b17dbc1ee8430d3b87fb795f7078fda886e7b41d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24iterablenongenerichasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot;&gt;IterableNonGenericHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29830b4a2fdb53e5d03e77a447fb31ef5a20fdb7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24longarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot;&gt;LongArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1f97ebc5df708c97969428322a983588a2e0bf3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24longstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot;&gt;LongStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db8f594f534fd19a74bde307a76e0d31315891f1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24maphasparkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot;&gt;MapHasParKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="283a8be38c360f0821537ddea533b2bc17b16bf6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24maphasseqkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot;&gt;MapHasSeqKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc33db155406f9f494bd060c035f96fcaaed4c18" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24shortarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot;&gt;ShortArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e8f69d2730ca80b9df27902b8439210d47ebd0b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stepperhasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot;&gt;StepperHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64811a144484f5cff917fb9554af8850a5380f0d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stepperhasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot;&gt;StepperHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c305982e6212828022f59d2accd0c84fceb6cc7d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24streamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot;&gt;StreamHasToScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665fa009d429c7dc5c1965c488cdca5105fb48a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stringhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot;&gt;StringHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2df0ee0cb2fa9b3a7afc7101df81592f3c732e50" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27db43e235679a6c69f53c6c516ae071135f0be2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a0cb6ee98a5e0b7cfacc60aed23c58ce8fb4125" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a8f5510e1e4fbc456a34aab646c9e92f8e50122" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="729d46af82e18382d940a6520bb6d5940f287fe8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8c332091b40695f3fdade14e4ed39492bd6d427" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3da7cda09aacac037ddf8febd2fcc830d5affdc5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;subtractable&quot; id=&quot;scala.collection.generic.Subtractable&quot; name=&quot;scala.collection.generic.Subtractable&quot;&gt;Subtractable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.Subtractable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.Subtractable.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="490642055790916aa996410bb77ce46a450a37f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24call&quot; id=&quot;scala.util.control.TailCalls.Call&quot; name=&quot;scala.util.control.TailCalls.Call&quot;&gt;Call&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13166b4ef832762e3e36c7deba6d2c2831038048" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24cont&quot; id=&quot;scala.util.control.TailCalls.Cont&quot; name=&quot;scala.util.control.TailCalls.Cont&quot;&gt;Cont&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a39c2f884f160b18dc49844af6b097dfe50c65b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24done&quot; id=&quot;scala.util.control.TailCalls.Done&quot; name=&quot;scala.util.control.TailCalls.Done&quot;&gt;Done&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd2679ff25d29cbefdf430e27aa63950ae63ec90" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="deff7a287cfdf5a3aed1f765bf9f870f4313185c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tojavaimplicits&quot; id=&quot;scala.collection.convert.ToJavaImplicits&quot; name=&quot;scala.collection.convert.ToJavaImplicits&quot;&gt;ToJavaImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf2dec5f10f5b93c4cba2da15b704f890e4e0d25" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;toscalaimplicits&quot; id=&quot;scala.collection.convert.ToScalaImplicits&quot; name=&quot;scala.collection.convert.ToScalaImplicits&quot;&gt;ToScalaImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7283aecc1336120ed5b2e8ea2a33752dd663949e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47816bd66cca715100675cbb852e405a3f97b5e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20653bc998b5c7f76941bc7a0d752614173e980a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb5127db9545a7d84f39c1b463bdd97ae3cb356b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24builder&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bc40a643fb067e1af9f8a11534699e6335b3b68b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a049dc2cdbcac2c59b8ce4804da0de6c2c8d9f57" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="175786df5ca959ed7ec3d9aa929cb5a4b3c76fde" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f956ddc4d3609413ac6c97fe5bd169f58ca3f730" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3be091563c813104ddeb7ac18c7c79e19354851c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff2a52071be50a7f70b5c5da0f2dec7f6fa7860" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap%24%24mangledhashing&quot; id=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot; name=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot;&gt;MangledHashing&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.MangledHashing.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f24c2125f63ab0c41914592a5bd8588dcbd222c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unanchoredregex&quot; id=&quot;scala.util.matching.UnanchoredRegex&quot; name=&quot;scala.util.matching.UnanchoredRegex&quot;&gt;UnanchoredRegex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8c4a93d18086d176eaa4c4225239e243bd997f5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uncheckedstable&quot; id=&quot;scala.annotation.unchecked.uncheckedStable&quot; name=&quot;scala.annotation.unchecked.uncheckedStable&quot;&gt;uncheckedStable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e65c1d4f6f6823db0c042a2ad520959c014eccfa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uncheckedvariance&quot; id=&quot;scala.annotation.unchecked.uncheckedVariance&quot; name=&quot;scala.annotation.unchecked.uncheckedVariance&quot;&gt;uncheckedVariance&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048229ee4ab6c8648752907ca66cd31c2400956a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e78124b01308123ce2a7c7b6cf725db8cf13f2bd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="daba35a3d8f0cf6cc3e85d3983e7acd34de63bc5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1a531fe5244f7b87f33582c05275b68ecd56a9bf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectorbuilder&quot; id=&quot;scala.collection.immutable.VectorBuilder&quot; name=&quot;scala.collection.immutable.VectorBuilder&quot;&gt;VectorBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b2aab68b48aff16f5a012cb3f1103009c8b2a0d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectoriterator&quot; id=&quot;scala.collection.immutable.VectorIterator&quot; name=&quot;scala.collection.immutable.VectorIterator&quot;&gt;VectorIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ac896677cd7719ba8116e550a7a3860f4a086ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="542c10a72f700a4914d2e77cf4adde5b25fa290a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b54cbb95327435b18c730af7c4ccad530be06c3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0c6e7c9b25114925f1ac1b402239876b831e643" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring%24%24unwrapop&quot; id=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot; name=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot;&gt;UnwrapOp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02d9c69238e9fa5f5db5e6282cda4a91bd96b83a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;%24colon%24colon&quot; id=&quot;scala.collection.immutable.::&quot; name=&quot;scala.collection.immutable.::&quot;&gt;::&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.::.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="44462b3fa2d9c3b4e898035eeff4892fe7e2a176" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractbuffer&quot; id=&quot;scala.collection.mutable.AbstractBuffer&quot; name=&quot;scala.collection.mutable.AbstractBuffer&quot;&gt;AbstractBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0129935a8f824f1e723f4186ca7d2ee3af62138e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.mutable.AbstractIterable&quot; name=&quot;scala.collection.mutable.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea18c0a301eccfd09058fffdb928293a3d519ab5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.immutable.AbstractMap&quot; name=&quot;scala.collection.immutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf8e8bde5546612b8e7ef7acb27b087023308f25" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.mutable.AbstractMap&quot; name=&quot;scala.collection.mutable.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dab151c5b649f69732706bfa1d0e4aa92859c8a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.immutable.AbstractSeq&quot; name=&quot;scala.collection.immutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc86b36e71a8cec8583b69a5df95989b5417191a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.mutable.AbstractSeq&quot; name=&quot;scala.collection.mutable.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f80b4d4d1784788cb70913901c14af7b6f14e9ff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.immutable.AbstractSet&quot; name=&quot;scala.collection.immutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d21c7c8cea449bc35c6c1c5ab4e4cd5e5bddcc60" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.mutable.AbstractSet&quot; name=&quot;scala.collection.mutable.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="76b1d19087789d73c34b29f99e277d6172c860da" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap&quot; id=&quot;scala.collection.mutable.AnyRefMap&quot; name=&quot;scala.collection.mutable.AnyRefMap&quot;&gt;AnyRefMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ddc48117289b3c334ee23e889db5e142c5cc244" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyrefmap%24%24anyrefmapbuilder&quot; id=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot; name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder&quot;&gt;AnyRefMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.AnyRefMap.AnyRefMapBuilder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83b39fa6fe2a79959515c22eca7bf1b40765591f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuffer&quot; id=&quot;scala.collection.mutable.ArrayBuffer&quot; name=&quot;scala.collection.mutable.ArrayBuffer&quot;&gt;ArrayBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12145ef3be5d00a8c4ea7ba71d5fa90466fc2eaf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybufferview&quot; id=&quot;scala.collection.mutable.ArrayBufferView&quot; name=&quot;scala.collection.mutable.ArrayBufferView&quot;&gt;ArrayBufferView&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBufferView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20622a938c6462dda45855cde717a84f461f792d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder&quot; id=&quot;scala.collection.mutable.ArrayBuilder&quot; name=&quot;scala.collection.mutable.ArrayBuilder&quot;&gt;ArrayBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c64c6d7018e253ec5e0f8055b70d77bc4f8d04f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0a32b9a4dd11c145e156aead63794f60a644cfed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca6bf0e49f68333c303b06d0bfbc47f069c90881" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b4e61860b65c7deef0b9f09009f073469ebc94d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c5161e3fbb26878aeda54703c65954f1318c7812" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24offloat&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a5745b1daa7a1b770d18f15929487c9756aea1d0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofint&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ba1cbdf90c4c4d6dcde555bbc3e6912f35212d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24oflong&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54e3fbd94147ef98c6d4986cc7984585992bd0d9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofref&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayBuilder.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d1d7ec68e0779f8e668025186a660c6d1a793556" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abd539742bc7b58f2e3747e31a018558d6e20186" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraybuilder%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot; name=&quot;scala.collection.mutable.ArrayBuilder.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66fa8246b89eebfef3e95c48767dd67e831ccc94" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydeque&quot; id=&quot;scala.collection.mutable.ArrayDeque&quot; name=&quot;scala.collection.mutable.ArrayDeque&quot;&gt;ArrayDeque&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDeque.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d64e5085d20961478c2248ba4e097379161c471" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arraydequeops&quot; id=&quot;scala.collection.mutable.ArrayDequeOps&quot; name=&quot;scala.collection.mutable.ArrayDequeOps&quot;&gt;ArrayDequeOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ArrayDequeOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fef35432fea4fae10c78aac3ca1d1838f310c079" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.immutable.ArraySeq&quot; name=&quot;scala.collection.immutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5826806b6fe638e45b423a95578639a117bec988" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq&quot; id=&quot;scala.collection.mutable.ArraySeq&quot; name=&quot;scala.collection.mutable.ArraySeq&quot;&gt;ArraySeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43737b145197b0bf424f47888431cea47b5875cb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.immutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2f5a4ead9d5e93cb9fc9aec39442f7a3d4816529" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofboolean&quot; id=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot; name=&quot;scala.collection.mutable.ArraySeq.ofBoolean&quot;&gt;ofBoolean&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0562b80647a9a92c23ef585deceeeb400224a29e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.immutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.immutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="555ebeb36d5b4d5aa3b9805edd7bb2273245ac7a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofbyte&quot; id=&quot;scala.collection.mutable.ArraySeq.ofByte&quot; name=&quot;scala.collection.mutable.ArraySeq.ofByte&quot;&gt;ofByte&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c79a73b6cea66a77dc2848f3847df996be7f7b4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.immutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.immutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="528061630d0b5c2ff210098f1a3027258aaeff1f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofchar&quot; id=&quot;scala.collection.mutable.ArraySeq.ofChar&quot; name=&quot;scala.collection.mutable.ArraySeq.ofChar&quot;&gt;ofChar&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cf05a32ba08e995ffd399112dab0df791c71912a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.immutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d5bd3cc827dda06413a3d25020fd0dcdfcaf79c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofdouble&quot; id=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot; name=&quot;scala.collection.mutable.ArraySeq.ofDouble&quot;&gt;ofDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91187c28559ddad2ba96cb5877e6db04007f3e6a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.immutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2fed9d49571ac397d0899fc3727e6cab9d5f31dd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24offloat&quot; id=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot; name=&quot;scala.collection.mutable.ArraySeq.ofFloat&quot;&gt;ofFloat&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0f530a2537927430d9b2801f48d3223f323d41" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.immutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.immutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab308ec69f05d7b8f501b5748848c9ac18c87727" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofint&quot; id=&quot;scala.collection.mutable.ArraySeq.ofInt&quot; name=&quot;scala.collection.mutable.ArraySeq.ofInt&quot;&gt;ofInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e46089ced5efffccac289cbb547b3190d7233a56" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.immutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.immutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e64b61485d0190e3615024c946942f5c6405506" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24oflong&quot; id=&quot;scala.collection.mutable.ArraySeq.ofLong&quot; name=&quot;scala.collection.mutable.ArraySeq.ofLong&quot;&gt;ofLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c6b5b7e225d049ba8683f22be7e1250d187edcad" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a27988743aa3518e4618d793bb0876874297eb8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ofRef&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ArraySeq.ofRef.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c9b217714d3f70c3c1dd761909de27bd449d3910" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.immutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.immutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b68b247461f6114d527a8e9bb13b5ba9e3699c7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofshort&quot; id=&quot;scala.collection.mutable.ArraySeq.ofShort&quot; name=&quot;scala.collection.mutable.ArraySeq.ofShort&quot;&gt;ofShort&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ddca7e0b4a065d0b425b24d3d51b62d6458a5a2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.immutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9909ae5332251017a3cf5ab326e9bdfd237dbee" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayseq%24%24ofunit&quot; id=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot; name=&quot;scala.collection.mutable.ArraySeq.ofUnit&quot;&gt;ofUnit&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5920cc946673741e5ddea9147abfacba105d4154" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaconverters&quot; id=&quot;scala.collection.convert.AsJavaConverters&quot; name=&quot;scala.collection.convert.AsJavaConverters&quot;&gt;AsJavaConverters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c402a3ba444ea0c586e6885393e1338731ca6c9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions&quot; id=&quot;scala.collection.convert.AsJavaExtensions&quot; name=&quot;scala.collection.convert.AsJavaExtensions&quot;&gt;AsJavaExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="39430bc95d4646d14a1477a94f28dee9d1fb5095" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24bufferhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava&quot;&gt;BufferHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.BufferHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8683dd509cd9f84aafde9ba009e0f61662614a14" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24concurrentmaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava&quot;&gt;ConcurrentMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.ConcurrentMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="827ff95ef9e8f126525319fa3d29706cf2ac00d5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24iterablehasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava&quot;&gt;IterableHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IterableHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="491476dce98964516150b8bb193fc062963d9e23" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24iteratorhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava&quot;&gt;IteratorHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.IteratorHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3a5b7b8f0784f13973410bd0765b34d6c31cbe12" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24maphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava&quot;&gt;MapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9b9df4f4d86eabb58b83a6ef01f9a96179aaaf8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutablemaphasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava&quot;&gt;MutableMapHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableMapHasAsJava.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f166897f8aadad989b7e5f84082a5842fa92a043" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutableseqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava&quot;&gt;MutableSeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc3d6a3081cdff69ae95383fc84fc9fb7d35e510" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24mutablesethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava&quot;&gt;MutableSetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.MutableSetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09a835f1ea5baf81995ece93ae685153a120dac4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24seqhasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava&quot;&gt;SeqHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SeqHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71111f9cb22d0acb5391e4446fa9e8dfcd20866e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asjavaextensions%24sethasasjava&quot; id=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot; name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava&quot;&gt;SetHasAsJava&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsJavaExtensions.SetHasAsJava.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fb92751d41a4896638493a2751336bf9576ab1b1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaconverters&quot; id=&quot;scala.collection.convert.AsScalaConverters&quot; name=&quot;scala.collection.convert.AsScalaConverters&quot;&gt;AsScalaConverters&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="987f3911f50651ad0f664bb1aae737718eb3743c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions&quot; id=&quot;scala.collection.convert.AsScalaExtensions&quot; name=&quot;scala.collection.convert.AsScalaExtensions&quot;&gt;AsScalaExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="745de5fc7f587d9825bf41da73998e5e2c33d7c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24collectionhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala&quot;&gt;CollectionHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.CollectionHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edfd3d0ee04647815a267fe9aa6ea23f5649ed40" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24concurrentmaphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala&quot;&gt;ConcurrentMapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ConcurrentMapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4cde00610be3db0578f28ab327b0f6bd2baed50" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24dictionaryhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala&quot;&gt;DictionaryHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.DictionaryHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abfd0c690442297417e14451c384f218ed0c5bcb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24enumerationhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala&quot;&gt;EnumerationHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.EnumerationHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06c580e3286a567e4e645de529b6357b12ea4bd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24iterablehasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala&quot;&gt;IterableHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IterableHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="abc998346dd9e373239dea47ba34cd6710606546" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24iteratorhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala&quot;&gt;IteratorHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.IteratorHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ddf5e4b208351526725319bc991d0c12b1f9345" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24listhasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala&quot;&gt;ListHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.ListHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed73f2112826a0097ef23dabfdd2bbd25de7b320" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24maphasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala&quot;&gt;MapHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.AsScalaExtensions.MapHasAsScala.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86ee85a2a939a3f1d115320e0f88239d865e813b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24propertieshasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.PropertiesHasAsScala&quot;&gt;PropertiesHasAsScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c00bb0c306a3a4d6df95bc8e784ca1b7f06f2178" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;asscalaextensions%24sethasasscala&quot; id=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot; name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala&quot;&gt;SetHasAsScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.AsScalaExtensions.SetHasAsScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a987bc6dab010d4c75dd9cd276cc4606d92b2f46" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beangetter&quot; id=&quot;scala.annotation.meta.beanGetter&quot; name=&quot;scala.annotation.meta.beanGetter&quot;&gt;beanGetter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="80f859599264411ac1d290f6b416dfef3770fa21" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beansetter&quot; id=&quot;scala.annotation.meta.beanSetter&quot; name=&quot;scala.annotation.meta.beanSetter&quot;&gt;beanSetter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1b7979ae7f01322d228dd4c4f01dd8bd137c0cdc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.immutable.BitSet&quot; name=&quot;scala.collection.immutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b5e115760f021723b65781b40da3454115f762b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.mutable.BitSet&quot; name=&quot;scala.collection.mutable.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d99b59a03dcd7b409beeeeb237c463d8c0e04d1f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitset1&quot; id=&quot;scala.collection.immutable.BitSet.BitSet1&quot; name=&quot;scala.collection.immutable.BitSet.BitSet1&quot;&gt;BitSet1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd1f7290fe58691920db6ecdec8bbdaa6bd2a14d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitset2&quot; id=&quot;scala.collection.immutable.BitSet.BitSet2&quot; name=&quot;scala.collection.immutable.BitSet.BitSet2&quot;&gt;BitSet2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7eb984c3397fe5a01fa46015760b7f11f8ab17d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset%24%24bitsetn&quot; id=&quot;scala.collection.immutable.BitSet.BitSetN&quot; name=&quot;scala.collection.immutable.BitSet.BitSetN&quot;&gt;BitSetN&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="522519309bda680c81dea94f04962371284b6343" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;breaks&quot; id=&quot;scala.util.control.Breaks&quot; name=&quot;scala.util.control.Breaks&quot;&gt;Breaks&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7e4aa77f34097872667de1f68b94fc06da0f3c3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;breaks%24tryblock&quot; id=&quot;scala.util.control.Breaks.TryBlock&quot; name=&quot;scala.util.control.Breaks.TryBlock&quot;&gt;TryBlock&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Breaks.TryBlock.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f77c90e30cc6bbdac45148d7f9296f5a10e9ed49" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buffer&quot; id=&quot;scala.collection.mutable.Buffer&quot; name=&quot;scala.collection.mutable.Buffer&quot;&gt;Buffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Buffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7a9e968e9e8a9b59618abed63b88307aa78af0f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;builder&quot; id=&quot;scala.collection.mutable.Builder&quot; name=&quot;scala.collection.mutable.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Builder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Builder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8497304ac5ef60942b033b3965ff4cf60b58d11" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;byteswaphashing&quot; id=&quot;scala.util.hashing.ByteswapHashing&quot; name=&quot;scala.util.hashing.ByteswapHashing&quot;&gt;ByteswapHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.ByteswapHashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b78d1d393baf7636bb22b52ccb06fe21927b41a3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;clearable&quot; id=&quot;scala.collection.mutable.Clearable&quot; name=&quot;scala.collection.mutable.Clearable&quot;&gt;Clearable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309932cb8bfbf01cefe2d3fc670b980ad888b4ab" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;cloneable&quot; id=&quot;scala.collection.mutable.Cloneable&quot; name=&quot;scala.collection.mutable.Cloneable&quot;&gt;Cloneable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Cloneable.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="517b6cd8fe16f2ebe5b9d9ca332a6ee8d304d32a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap&quot;&gt;CollisionProofHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd6df74c07999e8e513d89144360f687ffc3fd7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap%24%24node&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.Node&quot;&gt;Node&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b501d494792c8928aee09fda7c45912d28430507" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;collisionproofhashmap%24%24rbnode&quot; id=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot; name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode&quot;&gt;RBNode&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.CollisionProofHashMap.RBNode.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31e5ef77796025a7baabf7ee5f3b4e6d42d46d3a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionclass&quot; id=&quot;scala.annotation.meta.companionClass&quot; name=&quot;scala.annotation.meta.companionClass&quot;&gt;companionClass&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cefffb9ca34cd5317029ef992bf7456ff0dd75ba" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionmethod&quot; id=&quot;scala.annotation.meta.companionMethod&quot; name=&quot;scala.annotation.meta.companionMethod&quot;&gt;companionMethod&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62dbc954db045af9a7f15e77e97e21ab5ab2a33c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;companionobject&quot; id=&quot;scala.annotation.meta.companionObject&quot; name=&quot;scala.annotation.meta.companionObject&quot;&gt;companionObject&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8a68efdf5dc08d9a1bae86a3fc4b288723d85b40" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;controlthrowable&quot; id=&quot;scala.util.control.ControlThrowable&quot; name=&quot;scala.util.control.ControlThrowable&quot;&gt;ControlThrowable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d4cb896fe0909c3740cd67920d3ef7ade76f175" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;deadline&quot; id=&quot;scala.concurrent.duration.Deadline&quot; name=&quot;scala.concurrent.duration.Deadline&quot;&gt;Deadline&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fb02d5348cbdca771b53884c4e49a76dd7a636d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultserializable&quot; id=&quot;scala.collection.generic.DefaultSerializable&quot; name=&quot;scala.collection.generic.DefaultSerializable&quot;&gt;DefaultSerializable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05bc856f10db487af376627995a3783a6a1773b0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;defaultserializationproxy&quot; id=&quot;scala.collection.generic.DefaultSerializationProxy&quot; name=&quot;scala.collection.generic.DefaultSerializationProxy&quot;&gt;DefaultSerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.DefaultSerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a696750e2b5c98c13f761f6ebd22da34a7a63f4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration&quot; id=&quot;scala.concurrent.duration.Duration&quot; name=&quot;scala.concurrent.duration.Duration&quot;&gt;Duration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81229e5efb6102f6d3b45f22cb77be3ce6b6c7bb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;duration%24%24infinite&quot; id=&quot;scala.concurrent.duration.Duration.Infinite&quot; name=&quot;scala.concurrent.duration.Duration.Infinite&quot;&gt;Infinite&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94471ecbbf71a7c39d623ec1b3d3068db8d1e1c8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconversions&quot; id=&quot;scala.concurrent.duration.DurationConversions&quot; name=&quot;scala.concurrent.duration.DurationConversions&quot;&gt;DurationConversions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="069cac253869e2ced32d7b8be1dcf0ed335e1b52" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;durationconversions%24%24classifier&quot; id=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot; name=&quot;scala.concurrent.duration.DurationConversions.Classifier&quot;&gt;Classifier&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.duration.DurationConversions.Classifier.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6fd9a25ba7f7169d8fe65723a53ef7ff0d94096d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24by&quot; id=&quot;scala.util.control.Exception.By&quot; name=&quot;scala.util.control.Exception.By&quot;&gt;By&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.By.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.util.control.Exception.By.R&quot;&gt;R&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef5ed0f42b1d8a34c7aaf0f5199289e291ba3b17" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24catch&quot; id=&quot;scala.util.control.Exception.Catch&quot; name=&quot;scala.util.control.Exception.Catch&quot;&gt;Catch&lt;/a&gt;[&lt;span name=&quot;scala.util.control.Exception.Catch.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a98edad81e50397325c42c4a57d0053640f37929" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24described&quot; id=&quot;scala.util.control.Exception.Described&quot; name=&quot;scala.util.control.Exception.Described&quot;&gt;Described&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3303384e6929254362c0d746aae6d63aa6d7cfe9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;exception%24%24finally&quot; id=&quot;scala.util.control.Exception.Finally&quot; name=&quot;scala.util.control.Exception.Finally&quot;&gt;Finally&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ca17386dfe570a526a52577717580596f734bf3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;field&quot; id=&quot;scala.annotation.meta.field&quot; name=&quot;scala.annotation.meta.field&quot;&gt;field&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4911188df624a9479c4d6912ada8dec96ce509f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;fileprocesslogger&quot; id=&quot;scala.sys.process.FileProcessLogger&quot; name=&quot;scala.sys.process.FileProcessLogger&quot;&gt;FileProcessLogger&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bdb7f2e2a0088252c4ce5164c0b22bd19c9341a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;finiteduration&quot; id=&quot;scala.concurrent.duration.FiniteDuration&quot; name=&quot;scala.concurrent.duration.FiniteDuration&quot;&gt;FiniteDuration&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6aa48e6515e0d744db19a708b659f3684c0e2e0f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;getter&quot; id=&quot;scala.annotation.meta.getter&quot; name=&quot;scala.annotation.meta.getter&quot;&gt;getter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01f8808ca95a97351165bd0c03e9e41e4795cf29" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;growable&quot; id=&quot;scala.collection.mutable.Growable&quot; name=&quot;scala.collection.mutable.Growable&quot;&gt;Growable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Growable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf76a9c0a7f93a800cf33bedbddd29202c1e4024" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;growablebuilder&quot; id=&quot;scala.collection.mutable.GrowableBuilder&quot; name=&quot;scala.collection.mutable.GrowableBuilder&quot;&gt;GrowableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.GrowableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.GrowableBuilder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0911b424a2e524665f1358af73255fb48a580779" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashing&quot; id=&quot;scala.util.hashing.Hashing&quot; name=&quot;scala.util.hashing.Hashing&quot;&gt;Hashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b97e31129ec2ec2aa7ecb87040385e476c20b43" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashing%24%24default&quot; id=&quot;scala.util.hashing.Hashing.Default&quot; name=&quot;scala.util.hashing.Hashing.Default&quot;&gt;Default&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.Hashing.Default.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a348ccd8b37a94efe19c04436132ac9361dcad22" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.immutable.HashMap&quot; name=&quot;scala.collection.immutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70eff5a4c1b2cf91b00dde16383be6fbe063880d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashmap&quot; id=&quot;scala.collection.mutable.HashMap&quot; name=&quot;scala.collection.mutable.HashMap&quot;&gt;HashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.HashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e5709b1d593f73e7b5e329a72050083ad3ff747" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.immutable.HashSet&quot; name=&quot;scala.collection.immutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d6e06c55bfddf3974867f4fc2bd4763cea8c30c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;hashset&quot; id=&quot;scala.collection.mutable.HashSet&quot; name=&quot;scala.collection.mutable.HashSet&quot;&gt;HashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.HashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d9507eee45f9c6969b23d7be8c0d621266e899c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;immutablebuilder&quot; id=&quot;scala.collection.mutable.ImmutableBuilder&quot; name=&quot;scala.collection.mutable.ImmutableBuilder&quot;&gt;ImmutableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ImmutableBuilder.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c6e14770a8b62d62b34c57c9be647c483a274b9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedbuffer&quot; id=&quot;scala.collection.mutable.IndexedBuffer&quot; name=&quot;scala.collection.mutable.IndexedBuffer&quot;&gt;IndexedBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="914656f023c68b0ad02cb8b8e986257a3ce7d01a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.immutable.IndexedSeq&quot; name=&quot;scala.collection.immutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70995115756796364c231292de567181871a9473" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseq&quot; id=&quot;scala.collection.mutable.IndexedSeq&quot; name=&quot;scala.collection.mutable.IndexedSeq&quot;&gt;IndexedSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeq.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dbed1f4bf466f712b1368027753b2269368d8c5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.immutable.IndexedSeqOps&quot; name=&quot;scala.collection.immutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aa3b665c046cc72c96d461ac459a3c53c158e3c0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;indexedseqops&quot; id=&quot;scala.collection.mutable.IndexedSeqOps&quot; name=&quot;scala.collection.mutable.IndexedSeqOps&quot;&gt;IndexedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.IndexedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7f2c74da33ab79c4bec3b5ac095078564924f5a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;intmap&quot; id=&quot;scala.collection.immutable.IntMap&quot; name=&quot;scala.collection.immutable.IntMap&quot;&gt;IntMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.IntMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d6298c1f689697533d67f8b4de75434d0dbf7660" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterable&quot; id=&quot;scala.collection.generic.IsIterable&quot; name=&quot;scala.collection.generic.IsIterable&quot;&gt;IsIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterable.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="af5f8021baf9ad927640e4aea33a6acb348b27a7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterablelowpriority&quot; id=&quot;scala.collection.generic.IsIterableLowPriority&quot; name=&quot;scala.collection.generic.IsIterableLowPriority&quot;&gt;IsIterableLowPriority&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4d2f69f5d208d13a09d0614193619519ffbeb79" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterableonce&quot; id=&quot;scala.collection.generic.IsIterableOnce&quot; name=&quot;scala.collection.generic.IsIterableOnce&quot;&gt;IsIterableOnce&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsIterableOnce.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cfa1d610ee777b10f148bc602ae2126d3bc1166" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isiterableoncelowpriority&quot; id=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot; name=&quot;scala.collection.generic.IsIterableOnceLowPriority&quot;&gt;IsIterableOnceLowPriority&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a488dc725746fede7d824f61e8f8150b498d6154" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ismap&quot; id=&quot;scala.collection.generic.IsMap&quot; name=&quot;scala.collection.generic.IsMap&quot;&gt;IsMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsMap.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bafeb4d51ab223e6c2084b3ac44731c5a8e0450a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;isseq&quot; id=&quot;scala.collection.generic.IsSeq&quot; name=&quot;scala.collection.generic.IsSeq&quot;&gt;IsSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.IsSeq.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0926309a1a6874c84923eee2a9f79b2790c2eff4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.immutable.Iterable&quot; name=&quot;scala.collection.immutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43fe863662cc038223de842ea72962067299afbf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;iterable&quot; id=&quot;scala.collection.mutable.Iterable&quot; name=&quot;scala.collection.mutable.Iterable&quot;&gt;Iterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Iterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b0535ba32242317e02cd69c7aa5e53b521f81362" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;languagefeature&quot; id=&quot;scala.annotation.meta.languageFeature&quot; name=&quot;scala.annotation.meta.languageFeature&quot;&gt;languageFeature&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2341a8a1cc220ff8597590af445b18b7db4d895a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist&quot; id=&quot;scala.collection.immutable.LazyList&quot; name=&quot;scala.collection.immutable.LazyList&quot;&gt;LazyList&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="10acc4cdb8bfe687ec7e766654a2e46f9b6f2c06" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist%24%24deferrer&quot; id=&quot;scala.collection.immutable.LazyList.Deferrer&quot; name=&quot;scala.collection.immutable.LazyList.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.Deferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b92d4a32abff5f1f5441528c78e6fce1410f052b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;lazylist%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot; name=&quot;scala.collection.immutable.LazyList.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LazyList.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="14ba65735e00ce9f74688b6a8d353868735ffa71" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseq&quot; id=&quot;scala.collection.immutable.LinearSeq&quot; name=&quot;scala.collection.immutable.LinearSeq&quot;&gt;LinearSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="010245756750e246bf354dbc8da4471964099c18" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linearseqops&quot; id=&quot;scala.collection.immutable.LinearSeqOps&quot; name=&quot;scala.collection.immutable.LinearSeqOps&quot;&gt;LinearSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LinearSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.LinearSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a834978621425f143b440de153afe1130bb9988e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap&quot; id=&quot;scala.collection.mutable.LinkedHashMap&quot; name=&quot;scala.collection.mutable.LinkedHashMap&quot;&gt;LinkedHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.LinkedHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="896a299a4b9eebcd6d3f0d0c507adda0b4165a48" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashmap%24linkedkeyset&quot; id=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot; name=&quot;scala.collection.mutable.LinkedHashMap.LinkedKeySet&quot;&gt;LinkedKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="20f3e34da040726451d00d5b32cc33d6d3316019" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;linkedhashset&quot; id=&quot;scala.collection.mutable.LinkedHashSet&quot; name=&quot;scala.collection.mutable.LinkedHashSet&quot;&gt;LinkedHashSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LinkedHashSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9e09f1a596c80537a33b377d21c2a2d456271f0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;list&quot; id=&quot;scala.collection.immutable.List&quot; name=&quot;scala.collection.immutable.List&quot;&gt;List&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.List.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f31ccb5de1b4e6c827c3ddd7772930a197a4f039" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listbuffer&quot; id=&quot;scala.collection.mutable.ListBuffer&quot; name=&quot;scala.collection.mutable.ListBuffer&quot;&gt;ListBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListBuffer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="754a4e42be41389aef3d12b82bbef421b051db8c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.immutable.ListMap&quot; name=&quot;scala.collection.immutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff840e659324901c2821d7d9b3aa6bdff914df6e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listmap&quot; id=&quot;scala.collection.mutable.ListMap&quot; name=&quot;scala.collection.mutable.ListMap&quot;&gt;ListMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ListMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ListMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9ad155235d989c2dd9d9d73204bec4cdca01386" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listset&quot; id=&quot;scala.collection.immutable.ListSet&quot; name=&quot;scala.collection.immutable.ListSet&quot;&gt;ListSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.ListSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a488e46f905631c2ac2853be06dcaa7270ec0a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;listset%24node&quot; id=&quot;scala.collection.immutable.ListSet.Node&quot; name=&quot;scala.collection.immutable.ListSet.Node&quot;&gt;Node&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="94bf27cf698589ac9c41eaf058cdf8c8f1c2ebc6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.immutable.LongMap&quot; name=&quot;scala.collection.immutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.LongMap.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab3328e1f652783b4097623d607a7c4bf20b15e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap&quot; id=&quot;scala.collection.mutable.LongMap&quot; name=&quot;scala.collection.mutable.LongMap&quot;&gt;LongMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7a54f0625cd6d910cfab52a09c37814786701ea" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;longmap%24%24longmapbuilder&quot; id=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot; name=&quot;scala.collection.mutable.LongMap.LongMapBuilder&quot;&gt;LongMapBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.LongMap.LongMapBuilder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b80c9e70b3e615a8fbe689ddddb07a5eb2b23d75" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.concurrent.Map&quot; name=&quot;scala.collection.concurrent.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aab6aa27659050660d2cc16f6ae401f88224fc31" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.immutable.Map&quot; name=&quot;scala.collection.immutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b034dabab1e4b6aa5e33fc3c9e3e08f90f0f4c2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map&quot; id=&quot;scala.collection.mutable.Map&quot; name=&quot;scala.collection.mutable.Map&quot;&gt;Map&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4d06f10de9c26215c9917de94c514cfdff464341" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map1&quot; id=&quot;scala.collection.immutable.Map.Map1&quot; name=&quot;scala.collection.immutable.Map.Map1&quot;&gt;Map1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map1.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map1.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d85a15ce25d20f7ca3cfdcdd7d77ea123f80f769" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map2&quot; id=&quot;scala.collection.immutable.Map.Map2&quot; name=&quot;scala.collection.immutable.Map.Map2&quot;&gt;Map2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map2.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map2.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="701bf8b5ecf354d44471dc24bcd323325cc2efaf" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map3&quot; id=&quot;scala.collection.immutable.Map.Map3&quot; name=&quot;scala.collection.immutable.Map.Map3&quot;&gt;Map3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map3.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map3.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a0106c4bad81317a3fc69c82ec3b5865dcfafd5d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24map4&quot; id=&quot;scala.collection.immutable.Map.Map4&quot; name=&quot;scala.collection.immutable.Map.Map4&quot;&gt;Map4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.Map4.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.Map4.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7aba4b25360bf77d75e5efaaa9c0b513f495430" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.immutable.Map.WithDefault&quot; name=&quot;scala.collection.immutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fed355006b4ca9e424ecccf95335e436929c9e7b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;map%24%24withdefault&quot; id=&quot;scala.collection.mutable.Map.WithDefault&quot; name=&quot;scala.collection.mutable.Map.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Map.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.Map.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="347d88716c4b642f345472e24d29afcf39b71a01" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.immutable.MapOps&quot; name=&quot;scala.collection.immutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b9fb421eabfe14b67f992f42e2b8390d0f2e6fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.mutable.MapOps&quot; name=&quot;scala.collection.mutable.MapOps&quot;&gt;MapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f52afe13a44a0f36af480894fd25ef87abf3754" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;mapops%24immutablekeyset&quot; id=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot; name=&quot;scala.collection.immutable.MapOps.ImmutableKeySet&quot;&gt;ImmutableKeySet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8621adb2a5ceb5cb46e026ea3f0d79f55af06fe5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;multimap&quot; id=&quot;scala.collection.mutable.MultiMap&quot; name=&quot;scala.collection.mutable.MultiMap&quot;&gt;MultiMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.MultiMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.MultiMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cdd41c6909e3446199de00084bf8d518743cf203" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;murmurhash3%24%24arrayhashing&quot; id=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot; name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing&quot;&gt;ArrayHashing&lt;/a&gt;[&lt;span name=&quot;scala.util.hashing.MurmurHash3.ArrayHashing.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38ba6f9cf6b83fd0822547b4325f47da3f1ecdf4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;nostacktrace&quot; id=&quot;scala.util.control.NoStackTrace&quot; name=&quot;scala.util.control.NoStackTrace&quot;&gt;NoStackTrace&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1eb3096ad5515dd09f823f82c577dbdb995ae3b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange&quot; id=&quot;scala.collection.immutable.NumericRange&quot; name=&quot;scala.collection.immutable.NumericRange&quot;&gt;NumericRange&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bcade772ee5f516f020688719836b7026a4c09d9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24exclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Exclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Exclusive&quot;&gt;Exclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Exclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05d448de11227a23021b46c22a63b055c77d3c10" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;numericrange%24%24inclusive&quot; id=&quot;scala.collection.immutable.NumericRange.Inclusive&quot; name=&quot;scala.collection.immutable.NumericRange.Inclusive&quot;&gt;Inclusive&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.NumericRange.Inclusive.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7181be02db4d9bcc078e7fd41c49071a1589755c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;openhashmap&quot; id=&quot;scala.collection.mutable.OpenHashMap&quot; name=&quot;scala.collection.mutable.OpenHashMap&quot;&gt;OpenHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.OpenHashMap.Key&quot;&gt;Key&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.OpenHashMap.Value&quot;&gt;Value&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe3e037b9ea5123346848d299ad0dc3d23aa6cb9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24doublemult&quot; id=&quot;scala.concurrent.duration.DoubleMult&quot; name=&quot;scala.concurrent.duration.DoubleMult&quot;&gt;DoubleMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e709317e2ecd17091651f3978d57eaa74e14bc49" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationdouble&quot; id=&quot;scala.concurrent.duration.DurationDouble&quot; name=&quot;scala.concurrent.duration.DurationDouble&quot;&gt;DurationDouble&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="feef0c4617e1c1775159b91fa0a11e3bb7b53cd9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationint&quot; id=&quot;scala.concurrent.duration.DurationInt&quot; name=&quot;scala.concurrent.duration.DurationInt&quot;&gt;DurationInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4efadea2adb8b1bbfb49f2ff6f0b5f0432108c43" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24durationlong&quot; id=&quot;scala.concurrent.duration.DurationLong&quot; name=&quot;scala.concurrent.duration.DurationLong&quot;&gt;DurationLong&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="367b687b43fcce83d8c566c94bf3339dae5bfed2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24intmult&quot; id=&quot;scala.concurrent.duration.IntMult&quot; name=&quot;scala.concurrent.duration.IntMult&quot;&gt;IntMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a241edd5b7278014b7b119c03be69456926d4e6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;package%24%24longmult&quot; id=&quot;scala.concurrent.duration.LongMult&quot; name=&quot;scala.concurrent.duration.LongMult&quot;&gt;LongMult&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3313b41c050c173cb27b473372df99ebfb1b58a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;param&quot; id=&quot;scala.annotation.meta.param&quot; name=&quot;scala.annotation.meta.param&quot;&gt;param&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e3859060c5b76e675236a5b2b43c01c271e9265" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;priorityqueue&quot; id=&quot;scala.collection.mutable.PriorityQueue&quot; name=&quot;scala.collection.mutable.PriorityQueue&quot;&gt;PriorityQueue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.PriorityQueue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d471b1a53a3221e35d6ec327ea4cefd61d93cd46" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;process&quot; id=&quot;scala.sys.process.Process&quot; name=&quot;scala.sys.process.Process&quot;&gt;Process&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09471efa3f0b39f497bc9b44fc8073094c4c52ed" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;ProcessBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7afe1dadce684c84b15e39e201afdd70034df40" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;FileBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="288f442a9ad19d6c81101c298d581506b25c8e28" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24sink&quot; id=&quot;scala.sys.process.ProcessBuilder.Sink&quot; name=&quot;scala.sys.process.ProcessBuilder.Sink&quot;&gt;Sink&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc343239253cac7dd027c37bf34580af47bda501" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24source&quot; id=&quot;scala.sys.process.ProcessBuilder.Source&quot; name=&quot;scala.sys.process.ProcessBuilder.Source&quot;&gt;Source&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3029f482cc2c5ca20b500200d095af26bc016b7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;URLBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da9432b268a89f4eb006cf2f3bebc5dec4937721" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processcreation&quot; id=&quot;scala.sys.process.ProcessCreation&quot; name=&quot;scala.sys.process.ProcessCreation&quot;&gt;ProcessCreation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ced70678b4481347b041e86fcf126fd271dd0c1a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processimplicits&quot; id=&quot;scala.sys.process.ProcessImplicits&quot; name=&quot;scala.sys.process.ProcessImplicits&quot;&gt;ProcessImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01479794250fe0b80119139db59b5bd4aa4f2169" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processio&quot; id=&quot;scala.sys.process.ProcessIO&quot; name=&quot;scala.sys.process.ProcessIO&quot;&gt;ProcessIO&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c263dbe9f8848bbbcdc5acd91c606fe68732024d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;processlogger&quot; id=&quot;scala.sys.process.ProcessLogger&quot; name=&quot;scala.sys.process.ProcessLogger&quot;&gt;ProcessLogger&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c91fb6c0113eeea9a45fff5f861f36689d267298" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.immutable.Queue&quot; name=&quot;scala.collection.immutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="300ad2d82ad6ebebc5372162b0d5c8b751892358" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;queue&quot; id=&quot;scala.collection.mutable.Queue&quot; name=&quot;scala.collection.mutable.Queue&quot;&gt;Queue&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Queue.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3100bdd1400a549238a2a694aef76de1be5046c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range&quot; id=&quot;scala.collection.immutable.Range&quot; name=&quot;scala.collection.immutable.Range&quot;&gt;Range&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce5813c69efecda19017d2d5530d6461b76f2566" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24exclusive&quot; id=&quot;scala.collection.immutable.Range.Exclusive&quot; name=&quot;scala.collection.immutable.Range.Exclusive&quot;&gt;Exclusive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c6fafcf72e68085086161562d4b1ed7d87b377" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24inclusive&quot; id=&quot;scala.collection.immutable.Range.Inclusive&quot; name=&quot;scala.collection.immutable.Range.Inclusive&quot;&gt;Inclusive&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f25a2e607b099cd82ede1c5bf983c4ae393547e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;range%24%24partial&quot; id=&quot;scala.collection.immutable.Range.Partial&quot; name=&quot;scala.collection.immutable.Range.Partial&quot;&gt;Partial&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Range.Partial.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.Range.Partial.U&quot;&gt;U&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9118ce674cb2da1a1367acc781fc0ed84a79c13e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex&quot; id=&quot;scala.util.matching.Regex&quot; name=&quot;scala.util.matching.Regex&quot;&gt;Regex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3568cbbd43aeeeadd5a206f86c4666c8dd0b84e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;Match&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1645dd32b54bd4d793a61f82e1c2aa6abcb102b6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24matchdata&quot; id=&quot;scala.util.matching.Regex.MatchData&quot; name=&quot;scala.util.matching.Regex.MatchData&quot;&gt;MatchData&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="28b03754e805c42b1428e8b7811559d762c6a32a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;regex%24%24matchiterator&quot; id=&quot;scala.util.matching.Regex.MatchIterator&quot; name=&quot;scala.util.matching.Regex.MatchIterator&quot;&gt;MatchIterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cba9d2bdded5c8751d1ac3faa548d8f36f55ca2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;ReusableBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.ReusableBuilder.Elem&quot;&gt;Elem&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.ReusableBuilder.To&quot;&gt;To&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d9044e226610a3a76f16c560c062fcea0d55c8f5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.immutable.Seq&quot; name=&quot;scala.collection.immutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="71faa03aeecb8848a04af81f8e5564683150f6cc" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seq&quot; id=&quot;scala.collection.mutable.Seq&quot; name=&quot;scala.collection.mutable.Seq&quot;&gt;Seq&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Seq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cd372013024ffcbee982ed4a9be4c6661374ac8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2dba84ddde6d701c9ba63fff706915d841843ad2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a83ac5e4d8ed436ba2ca172ef9cae751ffd07d7b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.immutable.SeqOps&quot; name=&quot;scala.collection.immutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc47ca9121083712c30a1bc4fb4e0fda9cfa902e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;seqops&quot; id=&quot;scala.collection.mutable.SeqOps&quot; name=&quot;scala.collection.mutable.SeqOps&quot;&gt;SeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cee9a13732d28caff38aa71d37e5c2a350d09fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.immutable.Set&quot; name=&quot;scala.collection.immutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e27b5b13719644f1f9057d732b00a01e4b1fdba3" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set&quot; id=&quot;scala.collection.mutable.Set&quot; name=&quot;scala.collection.mutable.Set&quot;&gt;Set&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Set.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="323b303c6f73113baace2ff2e6502a6da629bcb6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set1&quot; id=&quot;scala.collection.immutable.Set.Set1&quot; name=&quot;scala.collection.immutable.Set.Set1&quot;&gt;Set1&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set1.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="628b7323df7979bcb6896e5b995a95fe34da7488" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set2&quot; id=&quot;scala.collection.immutable.Set.Set2&quot; name=&quot;scala.collection.immutable.Set.Set2&quot;&gt;Set2&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set2.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac10282e1f2f3efede4b069edc9240f3618bf596" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set3&quot; id=&quot;scala.collection.immutable.Set.Set3&quot; name=&quot;scala.collection.immutable.Set.Set3&quot;&gt;Set3&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set3.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f23cde13c1d2c24368dc11ea7cfa425e8156da1f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;set%24%24set4&quot; id=&quot;scala.collection.immutable.Set.Set4&quot; name=&quot;scala.collection.immutable.Set.Set4&quot;&gt;Set4&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Set.Set4.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d96cfe0f4b5d0ddf58d651e6a46828a1239854f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.immutable.SetOps&quot; name=&quot;scala.collection.immutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="31ce54bcd41ce5ab493bd9c142e27d5dbd9f456e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setops&quot; id=&quot;scala.collection.mutable.SetOps&quot; name=&quot;scala.collection.mutable.SetOps&quot;&gt;SetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3819b4bf291729741645ff87728e49f1240aaa5d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;setter&quot; id=&quot;scala.annotation.meta.setter&quot; name=&quot;scala.annotation.meta.setter&quot;&gt;setter&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcd0420d992a3bba162c6a44f93ffa4b875dc8ad" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;shrinkable&quot; id=&quot;scala.collection.mutable.Shrinkable&quot; name=&quot;scala.collection.mutable.Shrinkable&quot;&gt;Shrinkable&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Shrinkable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67c99c9ab39296c01599a833d42b2d26bc9f21a4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.immutable.SortedMap&quot; name=&quot;scala.collection.immutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ad90596d60852eb1952d81106bcb4a86d182761" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap&quot; id=&quot;scala.collection.mutable.SortedMap&quot; name=&quot;scala.collection.mutable.SortedMap&quot;&gt;SortedMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9438cb9fc1f040c0da971b6123f599a9c215eb98" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.immutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.immutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33278a7d7b221cd981f35fd6589f836744ef9e94" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmap%24%24withdefault&quot; id=&quot;scala.collection.mutable.SortedMap.WithDefault&quot; name=&quot;scala.collection.mutable.SortedMap.WithDefault&quot;&gt;WithDefault&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMap.WithDefault.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="85601c488687d1d55b27da89ee82d281b79cd1d1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.immutable.SortedMapOps&quot; name=&quot;scala.collection.immutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="030159c40b6f9229b8f036c81a711796a92bdb26" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.mutable.SortedMapOps&quot; name=&quot;scala.collection.mutable.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa74bcb10146700012b3c0c5b8f7296872e8740" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedmapops%24immutablekeysortedset&quot; id=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot; name=&quot;scala.collection.immutable.SortedMapOps.ImmutableKeySortedSet&quot;&gt;ImmutableKeySortedSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9101ea1760a61bef835c6019013b4554bbbfadef" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.immutable.SortedSet&quot; name=&quot;scala.collection.immutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8ab8b506e0e660c6ca373ee5206300dbbaabf37" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedset&quot; id=&quot;scala.collection.mutable.SortedSet&quot; name=&quot;scala.collection.mutable.SortedSet&quot;&gt;SortedSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="633567d2605b2401492b4989e4604270d93d36ce" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.immutable.SortedSetOps&quot; name=&quot;scala.collection.immutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0899337951fde4ea680e2f62ac56f9748feb24f0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.mutable.SortedSetOps&quot; name=&quot;scala.collection.mutable.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.SortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.SortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b0e48e74033c54434699d9b8b2bed33a0316836" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stack&quot; id=&quot;scala.collection.mutable.Stack&quot; name=&quot;scala.collection.mutable.Stack&quot;&gt;Stack&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.Stack.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6838dfb3ca80c01736033e6dcb260e4d81f10fc4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream&quot; id=&quot;scala.collection.immutable.Stream&quot; name=&quot;scala.collection.immutable.Stream&quot;&gt;Stream&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e6bd20b859c2111078e8073a54fcae3a076f167" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24cons&quot; id=&quot;scala.collection.immutable.Stream.Cons&quot; name=&quot;scala.collection.immutable.Stream.Cons&quot;&gt;Cons&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Cons.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="02ba097d796900129df35bc710f87cfb42ec61dd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24deferrer&quot; id=&quot;scala.collection.immutable.Stream.Deferrer&quot; name=&quot;scala.collection.immutable.Stream.Deferrer&quot;&gt;Deferrer&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.Deferrer.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6db8df7227f2a9123bf34427ec391e032625460f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stream%24%24serializationproxy&quot; id=&quot;scala.collection.immutable.Stream.SerializationProxy&quot; name=&quot;scala.collection.immutable.Stream.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Stream.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881c53c25c2675e4a4550ab7bbe17a4443611888" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions&quot; id=&quot;scala.collection.convert.StreamExtensions&quot; name=&quot;scala.collection.convert.StreamExtensions&quot;&gt;StreamExtensions&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ae992c4c08a5b8ade1a8b54300c6da47732f8b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24accumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo&quot;&gt;AccumulatorFactoryInfo&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e0501e8ea080676916ebe070632c59a8d5a118e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24lowpriorityaccumulatorfactoryinfo&quot; id=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot; name=&quot;scala.collection.convert.StreamExtensions.LowPriorityAccumulatorFactoryInfo&quot;&gt;LowPriorityAccumulatorFactoryInfo&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a1e57909b128c1977d81e2000175700aa40b1e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamshape&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShape&quot;&gt;StreamShape&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.T&quot;&gt;T&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.S&quot;&gt;S&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamShape.St&quot;&gt;St&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3066adabb38989645c26611d7263d6ed52f676c6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamshapelowpriority1&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamShapeLowPriority1&quot;&gt;StreamShapeLowPriority1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="95ee10d638861c56cd715f1ee248c0e8b5dbac2e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24%24streamunboxer&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer&quot;&gt;StreamUnboxer&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamUnboxer.S&quot;&gt;S&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="075d35131a8ef1532e04a00ebd7daa3a2cd9a9e1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24anyarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream&quot;&gt;AnyArrayHasSeqParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.AnyArrayHasSeqParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c058733b1a164c8125de5ab1067e715dc2152ccd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24bytearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ByteArrayHasSeqParStream&quot;&gt;ByteArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3d4c2d4f2b6e1c5fd9636287be04555e043e7c8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24chararrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.CharArrayHasSeqParStream&quot;&gt;CharArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7493951194fda4edaccafd9a4f8944c1b8128c49" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24doublearrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleArrayHasSeqParStream&quot;&gt;DoubleArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="992bce4d392e025f23dbbc1315383e91eb0c5c2e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24doublestreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.DoubleStreamHasToScala&quot;&gt;DoubleStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="054564b6f8deed1a2d103faf54776709e8f6d934" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24floatarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.FloatArrayHasSeqParStream&quot;&gt;FloatArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67576246c8010fdb1d50faeb4e30038099de95c4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24intarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IntArrayHasSeqParStream&quot;&gt;IntArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="488a8ac18ed27cb4668817cf33515d46c31d5c68" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24intstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.IntStreamHasToScala&quot;&gt;IntStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="521ce161d16b908726686d1df8d2d00411090378" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24iterablehasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream&quot;&gt;IterableHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableHasSeqStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75fd5ac6f99129a956687d198185880b0bf0bf9a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24iterablenongenerichasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream&quot;&gt;IterableNonGenericHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.IterableNonGenericHasParStream.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="61b8eccf856e5aefb886da6a277157ab2be743c2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24longarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.LongArrayHasSeqParStream&quot;&gt;LongArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2762dd4ad208925ba3af1dc1b8160c5b6ddf2867" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24longstreamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.LongStreamHasToScala&quot;&gt;LongStreamHasToScala&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89767372fb19715dfce42e7691e17ecc7191c464" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24maphasparkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream&quot;&gt;MapHasParKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasParKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f64e25a69a15e780c59b303fe9ae6a4ba6ecfac7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24maphasseqkeyvaluestream&quot; id=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot; name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream&quot;&gt;MapHasSeqKeyValueStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.convert.StreamExtensions.MapHasSeqKeyValueStream.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="665edf03012b6ff9ef9145b214d1504b1f8e2e57" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24shortarrayhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.ShortArrayHasSeqParStream&quot;&gt;ShortArrayHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4b1256ae5c04d7743d0ed730d5bdad97655bf63" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stepperhasparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream&quot;&gt;StepperHasParStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasParStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9fd3f87d4e269194d579b6ca63eaafd15d44d00d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stepperhasseqstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream&quot;&gt;StepperHasSeqStream&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StepperHasSeqStream.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e405396ed7bd3a1695ac82363d8083060306236b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24streamhastoscala&quot; id=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot; name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala&quot;&gt;StreamHasToScala&lt;/a&gt;[&lt;span name=&quot;scala.collection.convert.StreamExtensions.StreamHasToScala.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f1c76ca6af386cdb298849159a8fa14c2af86c34" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;streamextensions%24stringhasseqparstream&quot; id=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot; name=&quot;scala.collection.convert.StreamExtensions.StringHasSeqParStream&quot;&gt;StringHasSeqParStream&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7cd57803aa8cd24712a74469a73584041de891a0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedMapOps&quot;&gt;StrictOptimizedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c8441314d505e4f4f8c5153f341ed7d4acc7bae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedseqops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSeqOps&quot;&gt;StrictOptimizedSeqOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSeqOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="912ec59eed0c42d03fdc188bb1c4e8f62876e6d4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSetOps&quot;&gt;StrictOptimizedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8e5c8d1dbd1d2d03a4ef1b6ec576cb7dfc94edfd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedmapops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps&quot;&gt;StrictOptimizedSortedMapOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.V&quot;&gt;V&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedMapOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ea4488c6d9dac9697fab8e90adbe69a70267e3b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;strictoptimizedsortedsetops&quot; id=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot; name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps&quot;&gt;StrictOptimizedSortedSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.StrictOptimizedSortedSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023bf439dc7702bf910793c0763e77ab9678c4d6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;stringbuilder&quot; id=&quot;scala.collection.mutable.StringBuilder&quot; name=&quot;scala.collection.mutable.StringBuilder&quot;&gt;StringBuilder&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b7b42a3aab6672725124f8433e41f23a88d51e39" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;subtractable&quot; id=&quot;scala.collection.generic.Subtractable&quot; name=&quot;scala.collection.generic.Subtractable&quot;&gt;Subtractable&lt;/a&gt;[&lt;span name=&quot;scala.collection.generic.Subtractable.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.generic.Subtractable.Repr&quot;&gt;Repr&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ef44e89a567fe3b1f14e30f5264fc1df0edf6770" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24call&quot; id=&quot;scala.util.control.TailCalls.Call&quot; name=&quot;scala.util.control.TailCalls.Call&quot;&gt;Call&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Call.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f626777564a4891dd8df0ee46dec233c77e30d9" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24cont&quot; id=&quot;scala.util.control.TailCalls.Cont&quot; name=&quot;scala.util.control.TailCalls.Cont&quot;&gt;Cont&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Cont.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.util.control.TailCalls.Cont.B&quot;&gt;B&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b49f75e513d0707f8c67a01dcb61bd75034fb93c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24done&quot; id=&quot;scala.util.control.TailCalls.Done&quot; name=&quot;scala.util.control.TailCalls.Done&quot;&gt;Done&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.Done.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0c9d91b50f04d082ab4b9b60c3a8afaa571e5e42" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tailcalls%24%24tailrec&quot; id=&quot;scala.util.control.TailCalls.TailRec&quot; name=&quot;scala.util.control.TailCalls.TailRec&quot;&gt;TailRec&lt;/a&gt;[&lt;span name=&quot;scala.util.control.TailCalls.TailRec.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb933252383f4fccf123bf8aba2a6f1bc971e4e0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;tojavaimplicits&quot; id=&quot;scala.collection.convert.ToJavaImplicits&quot; name=&quot;scala.collection.convert.ToJavaImplicits&quot;&gt;ToJavaImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ad685c4f5ebbb8dbe4e7ea662ebb745ba4614271" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;toscalaimplicits&quot; id=&quot;scala.collection.convert.ToScalaImplicits&quot; name=&quot;scala.collection.convert.ToScalaImplicits&quot;&gt;ToScalaImplicits&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="08ddee13d1b2f8608321b23169fa4a97077f2a91" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.immutable.TreeMap&quot; name=&quot;scala.collection.immutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="89e80c929f37b3ff0f1f1c2db983cdbf5f36dc61" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treemap&quot; id=&quot;scala.collection.mutable.TreeMap&quot; name=&quot;scala.collection.mutable.TreeMap&quot;&gt;TreeMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.TreeMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4c6e0ac0dfac4a4d29d4bece54c741e5793ff050" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap&quot; id=&quot;scala.collection.immutable.TreeSeqMap&quot; name=&quot;scala.collection.immutable.TreeSeqMap&quot;&gt;TreeSeqMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0b5890638e3c3bf6b5e088b1b6e1eb0f4f45b85" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24builder&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Builder&quot;&gt;Builder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Builder.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7c94f9a2cfa2e7ff2cdef59c22a8d363be2f3a39" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24orderby&quot; id=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot; name=&quot;scala.collection.immutable.TreeSeqMap.OrderBy&quot;&gt;OrderBy&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f9eadec29acb29eeb87fe3a5c25c7820561d6b6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeseqmap%24%24ordering&quot; id=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot; name=&quot;scala.collection.immutable.TreeSeqMap.Ordering&quot;&gt;Ordering&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSeqMap.Ordering.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36d442cae2f41d7d0c4e4b41aef80fd55cc5e5fa" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.immutable.TreeSet&quot; name=&quot;scala.collection.immutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6da6523ed8e7d95d5bff905599a042052c8daafb" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;treeset&quot; id=&quot;scala.collection.mutable.TreeSet&quot; name=&quot;scala.collection.mutable.TreeSet&quot;&gt;TreeSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.TreeSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf5893dbf07ff237ddef576be0b4778665ae7989" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap&quot; id=&quot;scala.collection.concurrent.TrieMap&quot; name=&quot;scala.collection.concurrent.TrieMap&quot;&gt;TrieMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.concurrent.TrieMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7305689f8c70e5b5bb1ca80a7cb3dc199992d7a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;triemap%24%24mangledhashing&quot; id=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot; name=&quot;scala.collection.concurrent.TrieMap.MangledHashing&quot;&gt;MangledHashing&lt;/a&gt;[&lt;span name=&quot;scala.collection.concurrent.TrieMap.MangledHashing.K&quot;&gt;K&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba3a0b5f5f81b160bdb70739116943b93e0f047c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unanchoredregex&quot; id=&quot;scala.util.matching.UnanchoredRegex&quot; name=&quot;scala.util.matching.UnanchoredRegex&quot;&gt;UnanchoredRegex&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4793b64913b351b1648f84c7be10887dd53de01d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uncheckedstable&quot; id=&quot;scala.annotation.unchecked.uncheckedStable&quot; name=&quot;scala.annotation.unchecked.uncheckedStable&quot;&gt;uncheckedStable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="54f996dac0acb0fb93eeaea20143866c4d3f6c69" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;uncheckedvariance&quot; id=&quot;scala.annotation.unchecked.uncheckedVariance&quot; name=&quot;scala.annotation.unchecked.uncheckedVariance&quot;&gt;uncheckedVariance&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="926ce5fc8b78bc2ea620b4555a3cb07bd0b35b1b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer&quot; id=&quot;scala.collection.mutable.UnrolledBuffer&quot; name=&quot;scala.collection.mutable.UnrolledBuffer&quot;&gt;UnrolledBuffer&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f5005bc9b758e1400cfba746f416d1ebfc8e3f5" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;unrolledbuffer%24%24unrolled&quot; id=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot; name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled&quot;&gt;Unrolled&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.UnrolledBuffer.Unrolled.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af13c47e74a0c24448794e7093ebeadce8e4aa8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vector&quot; id=&quot;scala.collection.immutable.Vector&quot; name=&quot;scala.collection.immutable.Vector&quot;&gt;Vector&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.Vector.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c83e44f7dfac69d55d94012c3860df744649ba4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectorbuilder&quot; id=&quot;scala.collection.immutable.VectorBuilder&quot; name=&quot;scala.collection.immutable.VectorBuilder&quot;&gt;VectorBuilder&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorBuilder.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cb6e07e1849a2f3d98da60a3d4469a28c0ce4636" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectoriterator&quot; id=&quot;scala.collection.immutable.VectorIterator&quot; name=&quot;scala.collection.immutable.VectorIterator&quot;&gt;VectorIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="db9fb0624e1937069f8eba30de9c77780dbc6460" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;vectormap&quot; id=&quot;scala.collection.immutable.VectorMap&quot; name=&quot;scala.collection.immutable.VectorMap&quot;&gt;VectorMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.immutable.VectorMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.immutable.VectorMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="12dffe79f5a1248b9cffbc015a91b02112169b60" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;weakhashmap&quot; id=&quot;scala.collection.mutable.WeakHashMap&quot; name=&quot;scala.collection.mutable.WeakHashMap&quot;&gt;WeakHashMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.mutable.WeakHashMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.mutable.WeakHashMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec71aa4255c7a97b20f9a096cd66a4680a842900" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring&quot; id=&quot;scala.collection.immutable.WrappedString&quot; name=&quot;scala.collection.immutable.WrappedString&quot;&gt;WrappedString&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e055368648afd73b763ec6c3a9a78069af48c7b" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;, &lt;span name=&quot;msg&quot;&gt;msg: =&amp;gt; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;wrappedstring%24%24unwrapop&quot; id=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot; name=&quot;scala.collection.immutable.WrappedString.UnwrapOp&quot;&gt;UnwrapOp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbb71f58fe5aa9a15835c0be492270b1bb546f67" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractindexedseqview&quot; id=&quot;scala.collection.AbstractIndexedSeqView&quot; name=&quot;scala.collection.AbstractIndexedSeqView&quot;&gt;AbstractIndexedSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIndexedSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="550d1e0f17615d6a4898e6e910de5350ab7e4558" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterable&quot; id=&quot;scala.collection.AbstractIterable&quot; name=&quot;scala.collection.AbstractIterable&quot;&gt;AbstractIterable&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterable.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1548cd910034b3396cefe28bf011849423e9fb14" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractiterator&quot; id=&quot;scala.collection.AbstractIterator&quot; name=&quot;scala.collection.AbstractIterator&quot;&gt;AbstractIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4df0d34651f7b4b9316525cd558cfd4a129e395" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmap&quot; id=&quot;scala.collection.AbstractMap&quot; name=&quot;scala.collection.AbstractMap&quot;&gt;AbstractMap&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMap.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMap.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4c39bbdde14e4c74dec4623740e0e9d0492065a" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractmapview&quot; id=&quot;scala.collection.AbstractMapView&quot; name=&quot;scala.collection.AbstractMapView&quot;&gt;AbstractMapView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractMapView.K&quot;&gt;K&lt;/span&gt;, &lt;span name=&quot;scala.collection.AbstractMapView.V&quot;&gt;V&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e5cdbdf26f035af28401cd515587fec33c32b9e" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseq&quot; id=&quot;scala.collection.AbstractSeq&quot; name=&quot;scala.collection.AbstractSeq&quot;&gt;AbstractSeq&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeq.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e636661550faff53adf7901cf7c25af5209eaf6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractseqview&quot; id=&quot;scala.collection.AbstractSeqView&quot; name=&quot;scala.collection.AbstractSeqView&quot;&gt;AbstractSeqView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSeqView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8001ac9fc5958e0422561c2d11f9f8d6d1712420" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractset&quot; id=&quot;scala.collection.AbstractSet&quot; name=&quot;scala.collection.AbstractSet&quot;&gt;AbstractSet&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractSet.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eed1750e89cd2d1f503d03bb249a2f2c550facde" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;abstractview&quot; id=&quot;scala.collection.AbstractView&quot; name=&quot;scala.collection.AbstractView&quot;&gt;AbstractView&lt;/a&gt;[&lt;span name=&quot;scala.collection.AbstractView.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4b77a974a5a1394c1bd8af9466552c213a6e9e4d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.CC&quot;&gt;CC&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ddd69b5ad6c4dcf441766a396cdad71b892e24de" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;accumulator%24%24accumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape&quot;&gt;AccumulatorFactoryShape&lt;/a&gt;[&lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.jdk.Accumulator.AccumulatorFactoryShape.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="311e72074fae13265514fd76ce23c77b7965c64d" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;accumulator%24%24lowpriorityaccumulatorfactoryshape&quot; id=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot; name=&quot;scala.jdk.Accumulator.LowPriorityAccumulatorFactoryShape&quot;&gt;LowPriorityAccumulatorFactoryShape&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="881fd6b2733cfeab185c43699e6fdd875f8e1db8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;annotation&quot; id=&quot;scala.annotation.Annotation&quot; name=&quot;scala.annotation.Annotation&quot;&gt;Annotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4785def9535d9504ab5ef4e19144b3c4bc0217c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;ansicolor&quot; id=&quot;scala.io.AnsiColor&quot; name=&quot;scala.io.AnsiColor&quot;&gt;AnsiColor&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbba138a1b369346a98fb40f1d6f77d69ed71ef2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator&quot; id=&quot;scala.jdk.AnyAccumulator&quot; name=&quot;scala.jdk.AnyAccumulator&quot;&gt;AnyAccumulator&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2af203bc739e223d46a662b7af98c5b41a3d9425" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyaccumulator%24%24serializationproxy&quot; id=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot; name=&quot;scala.jdk.AnyAccumulator.SerializationProxy&quot;&gt;SerializationProxy&lt;/a&gt;[&lt;span name=&quot;scala.jdk.AnyAccumulator.SerializationProxy.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38c992385e2b0f22315a9e381b6484a92c4ee645" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper&quot; id=&quot;scala.collection.AnyStepper&quot; name=&quot;scala.collection.AnyStepper&quot;&gt;AnyStepper&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b2188da85fc470fbfa887fa3ef638fa1f5a8c161" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anystepper%24%24anystepperspliterator&quot; id=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot; name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator&quot;&gt;AnyStepperSpliterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.AnyStepper.AnyStepperSpliterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="545b28f8db18b08e94923f84bce57287bbca9201" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;anyvalmanifest&quot; id=&quot;scala.reflect.AnyValManifest&quot; name=&quot;scala.reflect.AnyValManifest&quot;&gt;AnyValManifest&lt;/a&gt;[&lt;span name=&quot;scala.reflect.AnyValManifest.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b51c3fd0d1d347d3d255eecc5bb4c5033013517" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayops&quot; id=&quot;scala.collection.ArrayOps&quot; name=&quot;scala.collection.ArrayOps&quot;&gt;ArrayOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="78f751a05d5d595c94b3aa267affe7292b9677fe" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;arrayops%24%24withfilter&quot; id=&quot;scala.collection.ArrayOps.WithFilter&quot; name=&quot;scala.collection.ArrayOps.WithFilter&quot;&gt;WithFilter&lt;/a&gt;[&lt;span name=&quot;scala.collection.ArrayOps.WithFilter.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b36da5de655560e0daa5435d9712c364d4391ef4" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;awaitable&quot; id=&quot;scala.concurrent.Awaitable&quot; name=&quot;scala.concurrent.Awaitable&quot;&gt;Awaitable&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Awaitable.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e1cb1640c84520b889396b4416fd9901c767b5f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;batchable&quot; id=&quot;scala.concurrent.Batchable&quot; name=&quot;scala.concurrent.Batchable&quot;&gt;Batchable&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0783451526674caeacff16584d60bd84906cac23" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;beanproperty&quot; id=&quot;scala.beans.BeanProperty&quot; name=&quot;scala.beans.BeanProperty&quot;&gt;BeanProperty&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d253c65e05e5b145d26ab9c611c749dd826b3dff" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigdecimal&quot; id=&quot;scala.math.BigDecimal&quot; name=&quot;scala.math.BigDecimal&quot;&gt;BigDecimal&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c363a0665e9c45ee7101d40aad56ef7041cffc1" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bigint&quot; id=&quot;scala.math.BigInt&quot; name=&quot;scala.math.BigInt&quot;&gt;BigInt&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f375c7fdce8b2a648d99330ba293f0556a0b0157" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitset&quot; id=&quot;scala.collection.BitSet&quot; name=&quot;scala.collection.BitSet&quot;&gt;BitSet&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3efbe5d3fcc8a5b63550763a25f20882df2e7315" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bitsetops&quot; id=&quot;scala.collection.BitSetOps&quot; name=&quot;scala.collection.BitSetOps&quot;&gt;BitSetOps&lt;/a&gt;[&lt;span name=&quot;scala.collection.BitSetOps.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32f1e32913e7f7ca957814d2066d9b3eb93693f2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;blockcontext&quot; id=&quot;scala.concurrent.BlockContext&quot; name=&quot;scala.concurrent.BlockContext&quot;&gt;BlockContext&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b482ecef862f3114810dccaae518c7ae4f25f527" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;booleanbeanproperty&quot; id=&quot;scala.beans.BooleanBeanProperty&quot; name=&quot;scala.beans.BooleanBeanProperty&quot;&gt;BooleanBeanProperty&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="958697f37d2e0c8c78b07ff4c6d8e35d84d36a70" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;booleanprop&quot; id=&quot;scala.sys.BooleanProp&quot; name=&quot;scala.sys.BooleanProp&quot;&gt;BooleanProp&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32dd5720b84de850b068db0b4db5094a74b1a178" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferediterator&quot; id=&quot;scala.collection.BufferedIterator&quot; name=&quot;scala.collection.BufferedIterator&quot;&gt;BufferedIterator&lt;/a&gt;[&lt;span name=&quot;scala.collection.BufferedIterator.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4fb852e26deacdd2f446ed174705af9fc94c63e7" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource&quot; id=&quot;scala.io.BufferedSource&quot; name=&quot;scala.io.BufferedSource&quot;&gt;BufferedSource&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a01b76147913217d31b4195416e3e85701c92098" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;bufferedsource%24bufferedlineiterator&quot; id=&quot;scala.io.BufferedSource.BufferedLineIterator&quot; name=&quot;scala.io.BufferedSource.BufferedLineIterator&quot;&gt;BufferedLineIterator&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33aced3368c564489e353447cc0c9fca7b59157c" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buildfrom&quot; id=&quot;scala.collection.BuildFrom&quot; name=&quot;scala.collection.BuildFrom&quot;&gt;BuildFrom&lt;/a&gt;[&lt;span name=&quot;scala.collection.BuildFrom.From&quot;&gt;From&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.A&quot;&gt;A&lt;/span&gt;, &lt;span name=&quot;scala.collection.BuildFrom.C&quot;&gt;C&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2422fb18efc611c5663ba57f1bf4cb1e9c5ebbd" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buildfromlowpriority1&quot; id=&quot;scala.collection.BuildFromLowPriority1&quot; name=&quot;scala.collection.BuildFromLowPriority1&quot;&gt;BuildFromLowPriority1&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="052bc9039d0c75abab780f1018e3a69ea21b8f79" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;buildfromlowpriority2&quot; id=&quot;scala.collection.BuildFromLowPriority2&quot; name=&quot;scala.collection.BuildFromLowPriority2&quot;&gt;BuildFromLowPriority2&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15159176082a6360d2ba6916f54715939d7c894f" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;canawait&quot; id=&quot;scala.concurrent.CanAwait&quot; name=&quot;scala.concurrent.CanAwait&quot;&gt;CanAwait&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11ebd346f3c95c4d43896d1a2df7251f8ceca986" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;chainingops&quot; id=&quot;scala.util.ChainingOps&quot; name=&quot;scala.util.ChainingOps&quot;&gt;ChainingOps&lt;/a&gt;[&lt;span name=&quot;scala.util.ChainingOps.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6947c46d0f5b6af2c5b2a33889042498f327bdc2" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;chainingsyntax&quot; id=&quot;scala.util.ChainingSyntax&quot; name=&quot;scala.util.ChainingSyntax&quot;&gt;ChainingSyntax&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd38495dd40710aa44e9a51af16b4802de5d77f8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;channel&quot; id=&quot;scala.concurrent.Channel&quot; name=&quot;scala.concurrent.Channel&quot;&gt;Channel&lt;/a&gt;[&lt;span name=&quot;scala.concurrent.Channel.A&quot;&gt;A&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da6bf26b9e26fdb3f4443471309f8728614055b6" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classfileannotation&quot; id=&quot;scala.annotation.ClassfileAnnotation&quot; name=&quot;scala.annotation.ClassfileAnnotation&quot;&gt;ClassfileAnnotation&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="45d1b5467450ffbb7122d9631505f93777185582" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classmanifestdeprecatedapis&quot; id=&quot;scala.reflect.ClassManifestDeprecatedApis&quot; name=&quot;scala.reflect.ClassManifestDeprecatedApis&quot;&gt;ClassManifestDeprecatedApis&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassManifestDeprecatedApis.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eace5aea605f858c75c452b046ecf6e7c13ab6b0" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtag&quot; id=&quot;scala.reflect.ClassTag&quot; name=&quot;scala.reflect.ClassTag&quot;&gt;ClassTag&lt;/a&gt;[&lt;span name=&quot;scala.reflect.ClassTag.T&quot;&gt;T&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eeafe74df3a68bd01610f6449f5ce19694723d8" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagiterablefactory&quot; id=&quot;scala.collection.ClassTagIterableFactory&quot; name=&quot;scala.collection.ClassTagIterableFactory&quot;&gt;ClassTagIterableFactory&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c878ecbc08ed58666d17e9a928aa10e1598c43ae" translate="yes" xml:space="preserve">
          <source>def ensuring(&lt;span name=&quot;cond&quot;&gt;cond: &lt;a href=&quot;../boolean&quot; id=&quot;scala.Boolean&quot; name=&quot;scala.Boolean&quot;&gt;Boolean&lt;/a&gt;&lt;/span&gt;): &lt;a href=&quot;classtagiterablefactory%24%24anyiterabledelegate&quot; id=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot; name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate&quot;&gt;AnyIterableDelegate&lt;/a&gt;[&lt;span name=&quot;scala.collection.ClassTagIterableFactory.AnyIterableDelegate.CC&quot;&gt;CC&lt;/span&gt;]</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
