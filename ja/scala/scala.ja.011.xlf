<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="5becf070a51b514072cd4c270ed3e295210d6ccc" translate="yes" xml:space="preserve">
          <source>GREEN</source>
          <target state="translated">GREEN</target>
        </trans-unit>
        <trans-unit id="c0112941dc7b7486bb94db9178b41a1222ef3818" translate="yes" xml:space="preserve">
          <source>GREEN_B</source>
          <target state="translated">GREEN_B</target>
        </trans-unit>
        <trans-unit id="bba06aba1b9d60ee491e15b5a6ad1ade85d93221" translate="yes" xml:space="preserve">
          <source>GenKeySet</source>
          <target state="translated">GenKeySet</target>
        </trans-unit>
        <trans-unit id="55d97d55d145b9965743b26df1ad0ee37cc7db32" translate="yes" xml:space="preserve">
          <source>GenKeySortedSet</source>
          <target state="translated">GenKeySortedSet</target>
        </trans-unit>
        <trans-unit id="9129afd022121a56230a513deaa470c0ca122fb3" translate="yes" xml:space="preserve">
          <source>Generates &lt;code&gt;n&lt;/code&gt; random bytes and returns them in a new array.</source>
          <target state="translated">&lt;code&gt;n&lt;/code&gt; 個のランダムバイトを生成し、それらを新しい配列で返します。</target>
        </trans-unit>
        <trans-unit id="1422fe7cd90489c1695f13ca7680f8a691e479db" translate="yes" xml:space="preserve">
          <source>Generates random bytes and places them into a user-supplied byte array.</source>
          <target state="translated">ランダムなバイトを生成し、ユーザーが指定したバイト配列に配置します。</target>
        </trans-unit>
        <trans-unit id="6299208bcdfabde4c3406c0a8fe628807c5195be" translate="yes" xml:space="preserve">
          <source>Generic class containing the &lt;code&gt;asJava&lt;/code&gt; converter method</source>
          <target state="translated">&lt;code&gt;asJava&lt;/code&gt; コンバーターメソッドを含むジェネリッククラス</target>
        </trans-unit>
        <trans-unit id="565237d978cef1c311c501d91b028370dbfe6f59" translate="yes" xml:space="preserve">
          <source>Generic class containing the &lt;code&gt;asJavaCollection&lt;/code&gt; converter method</source>
          <target state="translated">&lt;code&gt;asJavaCollection&lt;/code&gt; コンバーターメソッドを含むジェネリッククラス</target>
        </trans-unit>
        <trans-unit id="484105ad11424eb7b4379921fc19eddba561163f" translate="yes" xml:space="preserve">
          <source>Generic class containing the &lt;code&gt;asJavaDictionary&lt;/code&gt; converter method</source>
          <target state="translated">&lt;code&gt;asJavaDictionary&lt;/code&gt; コンバーターメソッドを含むジェネリッククラス</target>
        </trans-unit>
        <trans-unit id="4a206aed716f0f5f84c5a065da8a01298f2c6016" translate="yes" xml:space="preserve">
          <source>Generic class containing the &lt;code&gt;asJavaEnumeration&lt;/code&gt; converter method</source>
          <target state="translated">&lt;code&gt;asJavaEnumeration&lt;/code&gt; コンバーターメソッドを含むジェネリッククラス</target>
        </trans-unit>
        <trans-unit id="d4a075925eecc4838674fbeaf669ecc7ea4fde1b" translate="yes" xml:space="preserve">
          <source>Generic class containing the &lt;code&gt;asScala&lt;/code&gt; converter method</source>
          <target state="translated">&lt;code&gt;asScala&lt;/code&gt; コンバーターメソッドを含むジェネリッククラス</target>
        </trans-unit>
        <trans-unit id="e1b6b7d52d836849b413363cf264c066e5261e35" translate="yes" xml:space="preserve">
          <source>Get a Builder for the collection. For non-strict collection types this will use an intermediate buffer. Building collections with &lt;code&gt;fromSpecific&lt;/code&gt; is preferred because it can be lazy for lazy collections.</source>
          <target state="translated">コレクションのビルダーを取得します。厳密でないコレクション型の場合、これは中間バッファーを使用します。 &lt;code&gt;fromSpecific&lt;/code&gt; を使用してコレクションを構築することをお勧めします。これは、レイジーコレクションの場合はレイジーになる可能性があるためです。</target>
        </trans-unit>
        <trans-unit id="69b9052b932c6f8d9ec24f331dd79c2442156af2" translate="yes" xml:space="preserve">
          <source>Get the char at the specified index.</source>
          <target state="translated">指定したインデックスのcharを取得します。</target>
        </trans-unit>
        <trans-unit id="bf21f28adad40b1fb5c941bb05234e460bbbe7ba" translate="yes" xml:space="preserve">
          <source>Get the element at the specified index. This operation is provided for convenience in &lt;code&gt;Seq&lt;/code&gt;. It should not be assumed to be efficient unless you have an &lt;code&gt;IndexedSeq&lt;/code&gt;.</source>
          <target state="translated">指定されたインデックスにある要素を取得します。この操作は &lt;code&gt;Seq&lt;/code&gt; の便宜のために提供されています。 &lt;code&gt;IndexedSeq&lt;/code&gt; がない限り、効率的であるとは考えないでください。</target>
        </trans-unit>
        <trans-unit id="c8e771a36ffc77af28e1a8a84d76220521a879e9" translate="yes" xml:space="preserve">
          <source>Gets the current string value if any. Will not return null: use &lt;code&gt;isSet&lt;/code&gt; to test for existence.</source>
          <target state="translated">存在する場合、現在の文字列値を取得します。nullを返しません &lt;code&gt;isSet&lt;/code&gt; を使用して存在をテストします。</target>
        </trans-unit>
        <trans-unit id="7e25d8ccfe6cd33bbf19312cc1b8d5aecaa5dcbd" translate="yes" xml:space="preserve">
          <source>Given a collection factory &lt;code&gt;factory&lt;/code&gt;, convert this collection to the appropriate representation for the current element type &lt;code&gt;A&lt;/code&gt;. Example uses:</source>
          <target state="translated">コレクションファクトリ &lt;code&gt;factory&lt;/code&gt; 、このコレクションを現在の要素タイプ &lt;code&gt;A&lt;/code&gt; の適切な表現に変換します。使用例：</target>
        </trans-unit>
        <trans-unit id="ecf13598ab9a8c3bb7065b474c4d9681666124f3" translate="yes" xml:space="preserve">
          <source>Given a sequence of functions &lt;code&gt;f&lt;sub&gt;1&lt;/sub&gt;&lt;/code&gt;, ..., &lt;code&gt;f&lt;sub&gt;n&lt;/sub&gt;&lt;/code&gt;, return the function &lt;code&gt;f&lt;sub&gt;1&lt;/sub&gt; andThen ... andThen f&lt;sub&gt;n&lt;/sub&gt;&lt;/code&gt;.</source>
          <target state="translated">関数のシーケンス &lt;code&gt;f&lt;sub&gt;1&lt;/sub&gt;&lt;/code&gt; 、...、 &lt;code&gt;f&lt;sub&gt;n&lt;/sub&gt;&lt;/code&gt; を指定すると、関数 &lt;code&gt;f&lt;sub&gt;1&lt;/sub&gt; andThen ... andThen f&lt;sub&gt;n&lt;/sub&gt;&lt;/code&gt; 返します。</target>
        </trans-unit>
        <trans-unit id="144d00441e516ec65532bf401bd72ca81b6f43ae" translate="yes" xml:space="preserve">
          <source>Given f, a function from T into S, creates an Ordering[T] whose compare function is equivalent to:</source>
          <target state="translated">fが与えられると、TからSへの関数は、比較関数が等価なOrder[T]を生成します。</target>
        </trans-unit>
        <trans-unit id="e4b11f9aa2d445eb9440d636943730b27fc06063" translate="yes" xml:space="preserve">
          <source>Given f, a function from T into S, creates an Ordering[T] whose compare function returns the result of this Ordering's compare function, if it is non-zero, or else a result equivalent to:</source>
          <target state="translated">fが与えられると、TからSへの関数は、比較関数がこの順序の比較関数の結果を返す順序[T]を作成し、その比較関数が0でない場合は、この順序の比較関数の結果を返すか、または同等の結果を返します。</target>
        </trans-unit>
        <trans-unit id="31a94b2c988391b94dbc6f9f2922474511d35ba7" translate="yes" xml:space="preserve">
          <source>Given f, a function from U into T, creates an Ordering[U] whose compare function is equivalent to:</source>
          <target state="translated">fが与えられると、UからTへの関数は、比較関数が等価なOrder[U]を生成します。</target>
        </trans-unit>
        <trans-unit id="ddb1a8f60b29b0c33df0128e643f659fda9a5876" translate="yes" xml:space="preserve">
          <source>Given that most methods on iterators will make the original iterator unfit for further use, this methods provides a reliable way of calling multiple such methods on an iterator.</source>
          <target state="translated">イテレータ上のほとんどのメソッドは、元のイテレータをそれ以上使用することができなくなることを考えると、このメソッドは、イテレータ上の複数のそのようなメソッドを呼び出す信頼性の高い方法を提供します。</target>
        </trans-unit>
        <trans-unit id="c47d157229fc7f2f49b41bb93fbf5c435302ec4e" translate="yes" xml:space="preserve">
          <source>Gives a hint how many elements are expected to be added when the next &lt;code&gt;result&lt;/code&gt; is called, together with an upper bound given by the size of some other collection. Some builder classes will optimize their representation based on the hint. However, builder implementations are still required to work correctly even if the hint is wrong, i.e. a different number of elements is added.</source>
          <target state="translated">次の &lt;code&gt;result&lt;/code&gt; が呼び出されたときに追加されると予想される要素の数と、他のコレクションのサイズによって指定された上限を示すヒントを提供します。一部のビルダークラスは、ヒントに基づいて表現を最適化します。ただし、ヒントが間違っていても、つまり異なる数の要素が追加されていても、ビルダーの実装は正しく機能する必要があります。</target>
        </trans-unit>
        <trans-unit id="418e63de54a35302594873993b9eb76b36659405" translate="yes" xml:space="preserve">
          <source>Gives a hint how many elements are expected to be added when the next &lt;code&gt;result&lt;/code&gt; is called. Some builder classes will optimize their representation based on the hint. However, builder implementations are still required to work correctly even if the hint is wrong, i.e. a different number of elements is added.</source>
          <target state="translated">次の &lt;code&gt;result&lt;/code&gt; が呼び出されたときに追加されると予想される要素の数についてのヒントを提供します。一部のビルダークラスは、ヒントに基づいて表現を最適化します。ただし、ヒントが間違っていても、つまり異なる数の要素が追加されていても、ビルダーの実装は正しく機能する必要があります。</target>
        </trans-unit>
        <trans-unit id="8bd4f4f547dc81e194e6a365e90b4e36e3cc3384" translate="yes" xml:space="preserve">
          <source>Gives a hint that one expects the &lt;code&gt;result&lt;/code&gt; of this builder to have the same size as the given collection, plus some delta. This will provide a hint only if the collection has a known size Some builder classes will optimize their representation based on the hint. However, builder implementations are still required to work correctly even if the hint is wrong, i.e. a different number of elements is added.</source>
          <target state="translated">このビルダーの &lt;code&gt;result&lt;/code&gt; が、指定されたコレクションと同じサイズにデルタを加えたものであると予想されることを示唆します。これは、コレクションのサイズが既知の場合にのみヒントを提供します。一部のビルダークラスは、ヒントに基づいて表現を最適化します。ただし、ヒントが間違っていても、つまり異なる数の要素が追加されていても、ビルダーの実装は正しく機能する必要があります。</target>
        </trans-unit>
        <trans-unit id="171a0606f7c74580fd3982cf57c49d604104120a" translate="yes" xml:space="preserve">
          <source>Group</source>
          <target state="translated">Group</target>
        </trans-unit>
        <trans-unit id="ffb482ce6ab25973b5192a237105df035a87541e" translate="yes" xml:space="preserve">
          <source>Group names supplied to the constructor are preferred to inline group names when retrieving matched groups by name. Not all platforms support inline names.</source>
          <target state="translated">名前でマッチしたグループを検索する場合は、 インラインのグループ名よりもコンストラクタで指定したグループ名の方が優先されます。すべてのプラットフォームがインライン名をサポートしているわけではありません。</target>
        </trans-unit>
        <trans-unit id="f04accc555d3dec8903aeb461f6bf0d4f0179ba3" translate="yes" xml:space="preserve">
          <source>Groups elements in fixed size blocks by passing a &quot;sliding window&quot; over them (as opposed to partitioning them, as is done in &lt;code&gt;grouped&lt;/code&gt;.) The &quot;sliding window&quot; step is set to one.</source>
          <target state="translated">「 &lt;code&gt;grouped&lt;/code&gt; れたで行われるようにそれらを分割するのではなく）それらの上に「スライディングウィンドウ」を渡すことにより、固定サイズのブロックの要素をグループ化します。「スライディングウィンドウ」ステップは1に設定されます。</target>
        </trans-unit>
        <trans-unit id="b9267fdeb3789afda580391b341c0ae87ac4a142" translate="yes" xml:space="preserve">
          <source>Groups elements in fixed size blocks by passing a &quot;sliding window&quot; over them (as opposed to partitioning them, as is done in grouped.)</source>
          <target state="translated">固定サイズのブロックの上に &quot;スライドウィンドウ&quot; を渡して要素をグループ化します (grouped のように分割するのではなく)。</target>
        </trans-unit>
        <trans-unit id="27d1ac4bf215ac8decdf87cfe4f3bec0d35cb12a" translate="yes" xml:space="preserve">
          <source>Growable</source>
          <target state="translated">Growable</target>
        </trans-unit>
        <trans-unit id="b0ab59b46260aeff3699885d878b73ffac6199f3" translate="yes" xml:space="preserve">
          <source>Growable$</source>
          <target state="translated">Growable$</target>
        </trans-unit>
        <trans-unit id="f45afa5b3dbab09748a402452d0cc0aba38a20e6" translate="yes" xml:space="preserve">
          <source>Growable$.from()</source>
          <target state="translated">Growable$.from()</target>
        </trans-unit>
        <trans-unit id="18bd2e105b9b92d20c4a0bbdac1a2cc075e4ad85" translate="yes" xml:space="preserve">
          <source>Growable.++=()</source>
          <target state="translated">Growable.++=()</target>
        </trans-unit>
        <trans-unit id="384fbd549d1c759c400b331f460e921e4439d7dd" translate="yes" xml:space="preserve">
          <source>Growable.+=()</source>
          <target state="translated">Growable.+=()</target>
        </trans-unit>
        <trans-unit id="4d0590ebe0c61a3006469dc290472442b9af8d31" translate="yes" xml:space="preserve">
          <source>Growable.addAll()</source>
          <target state="translated">Growable.addAll()</target>
        </trans-unit>
        <trans-unit id="2751041a453ecc15df3cd1b5f2c62ea9f33a8a27" translate="yes" xml:space="preserve">
          <source>Growable.addOne()</source>
          <target state="translated">Growable.addOne()</target>
        </trans-unit>
        <trans-unit id="bce01c25d469faed8f65fdd69833258c6365c4ad" translate="yes" xml:space="preserve">
          <source>Growable.knownSize()</source>
          <target state="translated">Growable.knownSize()</target>
        </trans-unit>
        <trans-unit id="0451dae5f6f9508bf9721c7374033312f888058c" translate="yes" xml:space="preserve">
          <source>Growable.scala</source>
          <target state="translated">Growable.scala</target>
        </trans-unit>
        <trans-unit id="3a922862da0dd7b24170447129d70fa64da810e7" translate="yes" xml:space="preserve">
          <source>GrowableBuilder</source>
          <target state="translated">GrowableBuilder</target>
        </trans-unit>
        <trans-unit id="7000b2423018cdd823b57a962a828f985438e148" translate="yes" xml:space="preserve">
          <source>GrowableBuilder.GrowableBuilder()</source>
          <target state="translated">GrowableBuilder.GrowableBuilder()</target>
        </trans-unit>
        <trans-unit id="48b8f7a3f399eecf68d655fed5b60643ac0412ba" translate="yes" xml:space="preserve">
          <source>GrowableBuilder.addAll()</source>
          <target state="translated">GrowableBuilder.addAll()</target>
        </trans-unit>
        <trans-unit id="24cd575a45552bf2daba1642ce2922378ca56183" translate="yes" xml:space="preserve">
          <source>GrowableBuilder.addOne()</source>
          <target state="translated">GrowableBuilder.addOne()</target>
        </trans-unit>
        <trans-unit id="18c3691c3064dbd257f7a2f10b7385165b06ec88" translate="yes" xml:space="preserve">
          <source>GrowableBuilder.clear()</source>
          <target state="translated">GrowableBuilder.clear()</target>
        </trans-unit>
        <trans-unit id="5060278d9ee1dc23bd42c2800389d02a96907005" translate="yes" xml:space="preserve">
          <source>GrowableBuilder.elems()</source>
          <target state="translated">GrowableBuilder.elems()</target>
        </trans-unit>
        <trans-unit id="4a8c510233ff2efbddea1de55799e64460342140" translate="yes" xml:space="preserve">
          <source>GrowableBuilder.knownSize()</source>
          <target state="translated">GrowableBuilder.knownSize()</target>
        </trans-unit>
        <trans-unit id="577f1791d4571cc7bfc320063e776a640d452fae" translate="yes" xml:space="preserve">
          <source>GrowableBuilder.result()</source>
          <target state="translated">GrowableBuilder.result()</target>
        </trans-unit>
        <trans-unit id="a5da29c6a36146e2a0dbf02145785d4df1a3a98d" translate="yes" xml:space="preserve">
          <source>GrowableBuilder.scala</source>
          <target state="translated">GrowableBuilder.scala</target>
        </trans-unit>
        <trans-unit id="7b04e1ab702be75826b0ce73300c819bfb1436b5" translate="yes" xml:space="preserve">
          <source>GrowableBuilders can produce only a single instance of the collection they are growing.</source>
          <target state="translated">GrowableBuildersは、自分が育てているコレクションのインスタンスを1つだけ生成することができます。</target>
        </trans-unit>
        <trans-unit id="bf073fae640ded81eeb7a4cee70faff4a623c16c" translate="yes" xml:space="preserve">
          <source>Guide</source>
          <target state="translated">ガイド</target>
        </trans-unit>
        <trans-unit id="f578dc64747f10832a70602f604b7ceb2bca1687" translate="yes" xml:space="preserve">
          <source>Handling Input and Output</source>
          <target state="translated">入出力の取り扱い</target>
        </trans-unit>
        <trans-unit id="bdc45b4c0b2c636357f04bce4f313c863ccbd8c7" translate="yes" xml:space="preserve">
          <source>Handling a process input and output.</source>
          <target state="translated">プロセスの入出力を処理します。</target>
        </trans-unit>
        <trans-unit id="9446ece0a348115a06b1d4b4fd7b87949b62c18e" translate="yes" xml:space="preserve">
          <source>Handling of Time Units</source>
          <target state="translated">時間単位の取り扱い</target>
        </trans-unit>
        <trans-unit id="ba62d7b8d0b157f714c6a6132554b38789c6ada5" translate="yes" xml:space="preserve">
          <source>HashMap</source>
          <target state="translated">HashMap</target>
        </trans-unit>
        <trans-unit id="03546d005ccea20cd0f7fec168aafef3d9121979" translate="yes" xml:space="preserve">
          <source>HashMap$</source>
          <target state="translated">HashMap$</target>
        </trans-unit>
        <trans-unit id="4de66ccac24c9da3eabb108218b7ce58fc3f75d7" translate="yes" xml:space="preserve">
          <source>HashMap$.defaultInitialCapacity()</source>
          <target state="translated">HashMap$.defaultInitialCapacity()</target>
        </trans-unit>
        <trans-unit id="cc1f8e083b3bf52dafe970ee1ebd1bb14d37ddc7" translate="yes" xml:space="preserve">
          <source>HashMap$.defaultLoadFactor()</source>
          <target state="translated">HashMap$.defaultLoadFactor()</target>
        </trans-unit>
        <trans-unit id="94a6d7706bd198a23573a0bf044237174f0553ae" translate="yes" xml:space="preserve">
          <source>HashMap$.empty()</source>
          <target state="translated">HashMap$.empty()</target>
        </trans-unit>
        <trans-unit id="7605cd0af02a5433be6fa48439a329dc7cefd98e" translate="yes" xml:space="preserve">
          <source>HashMap$.from()</source>
          <target state="translated">HashMap$.from()</target>
        </trans-unit>
        <trans-unit id="94e61a6d23eb51b63f766474448f0bad55fe2a9f" translate="yes" xml:space="preserve">
          <source>HashMap$.newBuilder()</source>
          <target state="translated">HashMap$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="2b1e32127d702cd591e4d981b90d77726c5cde46" translate="yes" xml:space="preserve">
          <source>HashMap.HashMap()</source>
          <target state="translated">HashMap.HashMap()</target>
        </trans-unit>
        <trans-unit id="c148d65ccf9d6d68b4de7d9232e033b7117af4e3" translate="yes" xml:space="preserve">
          <source>HashMap.addAll()</source>
          <target state="translated">HashMap.addAll()</target>
        </trans-unit>
        <trans-unit id="a3799f181bb47907298a94e6b4744573b9310e0d" translate="yes" xml:space="preserve">
          <source>HashMap.addOne()</source>
          <target state="translated">HashMap.addOne()</target>
        </trans-unit>
        <trans-unit id="9b5861797dfc189fd373da8ae29221668abb413a" translate="yes" xml:space="preserve">
          <source>HashMap.apply()</source>
          <target state="translated">HashMap.apply()</target>
        </trans-unit>
        <trans-unit id="2e319571512c5949c903012588f6607bd3b2271f" translate="yes" xml:space="preserve">
          <source>HashMap.className()</source>
          <target state="translated">HashMap.className()</target>
        </trans-unit>
        <trans-unit id="8f85be58afef5201fb438bf1e12985579f8a51c1" translate="yes" xml:space="preserve">
          <source>HashMap.clear()</source>
          <target state="translated">HashMap.clear()</target>
        </trans-unit>
        <trans-unit id="0ea27c196e1f444fdb465eabf3db4a6014ec9c7d" translate="yes" xml:space="preserve">
          <source>HashMap.concat()</source>
          <target state="translated">HashMap.concat()</target>
        </trans-unit>
        <trans-unit id="3ef4ec6af543b9536a4339ebe4253bced6ed33e9" translate="yes" xml:space="preserve">
          <source>HashMap.contains()</source>
          <target state="translated">HashMap.contains()</target>
        </trans-unit>
        <trans-unit id="98ae68839a5aafdf8c379fd846d4c8293a32e1cf" translate="yes" xml:space="preserve">
          <source>HashMap.drop()</source>
          <target state="translated">HashMap.drop()</target>
        </trans-unit>
        <trans-unit id="6c86b07756d65fbb71213aafee0daa73bf4dd014" translate="yes" xml:space="preserve">
          <source>HashMap.dropRight()</source>
          <target state="translated">HashMap.dropRight()</target>
        </trans-unit>
        <trans-unit id="693f267d79224b8f132e5421e6b5bf0ffc5f8527" translate="yes" xml:space="preserve">
          <source>HashMap.dropWhile()</source>
          <target state="translated">HashMap.dropWhile()</target>
        </trans-unit>
        <trans-unit id="7f4e277c2211ebb80ec7eaf0ecc4799a2c3ab74b" translate="yes" xml:space="preserve">
          <source>HashMap.equals()</source>
          <target state="translated">HashMap.equals()</target>
        </trans-unit>
        <trans-unit id="a8a44c2d74d7e2ef253641c089321308a1fd4c20" translate="yes" xml:space="preserve">
          <source>HashMap.filterImpl()</source>
          <target state="translated">HashMap.filterImpl()</target>
        </trans-unit>
        <trans-unit id="0ef7bd26fcd63a5bb1de795181c60902df924998" translate="yes" xml:space="preserve">
          <source>HashMap.filterInPlace()</source>
          <target state="translated">HashMap.filterInPlace()</target>
        </trans-unit>
        <trans-unit id="527152142404979b52b61d72342241d370d09929" translate="yes" xml:space="preserve">
          <source>HashMap.foreach()</source>
          <target state="translated">HashMap.foreach()</target>
        </trans-unit>
        <trans-unit id="5a40006579cece6ad7f65d062ec2b0256dc627bf" translate="yes" xml:space="preserve">
          <source>HashMap.foreachEntry()</source>
          <target state="translated">HashMap.foreachEntry()</target>
        </trans-unit>
        <trans-unit id="cc96eb1e1b58a17fd1b9e9a6fe9694036461f114" translate="yes" xml:space="preserve">
          <source>HashMap.get()</source>
          <target state="translated">HashMap.get()</target>
        </trans-unit>
        <trans-unit id="6e037561a945221204ddc4b9e38442c107e494a7" translate="yes" xml:space="preserve">
          <source>HashMap.getOrElse()</source>
          <target state="translated">HashMap.getOrElse()</target>
        </trans-unit>
        <trans-unit id="299f7597d7627a3d07cf7c4d87e736cc463582a6" translate="yes" xml:space="preserve">
          <source>HashMap.getOrElseUpdate()</source>
          <target state="translated">HashMap.getOrElseUpdate()</target>
        </trans-unit>
        <trans-unit id="7ee6a99a740f59e2355ccfe7def7e61a8b05b455" translate="yes" xml:space="preserve">
          <source>HashMap.hashCode()</source>
          <target state="translated">HashMap.hashCode()</target>
        </trans-unit>
        <trans-unit id="4f2a5a4eedf53dafdd294f1126a0f8cc830eede2" translate="yes" xml:space="preserve">
          <source>HashMap.head()</source>
          <target state="translated">HashMap.head()</target>
        </trans-unit>
        <trans-unit id="c481882f934ea1ebc1bed851ba4940e16b0b3947" translate="yes" xml:space="preserve">
          <source>HashMap.init()</source>
          <target state="translated">HashMap.init()</target>
        </trans-unit>
        <trans-unit id="88d799d87b18ec53cf207dae75b0ebaa18d8b4f7" translate="yes" xml:space="preserve">
          <source>HashMap.isEmpty()</source>
          <target state="translated">HashMap.isEmpty()</target>
        </trans-unit>
        <trans-unit id="16c82b4c933289d5cb534d41eeb11e679658b68c" translate="yes" xml:space="preserve">
          <source>HashMap.iterator()</source>
          <target state="translated">HashMap.iterator()</target>
        </trans-unit>
        <trans-unit id="1f15f93188b2fbbe88fa51338a9b4208c46ee662" translate="yes" xml:space="preserve">
          <source>HashMap.keySet()</source>
          <target state="translated">HashMap.keySet()</target>
        </trans-unit>
        <trans-unit id="5f012e5cd720f11972bea4f447cb1e4503fc6f7e" translate="yes" xml:space="preserve">
          <source>HashMap.keyStepper()</source>
          <target state="translated">HashMap.keyStepper()</target>
        </trans-unit>
        <trans-unit id="e5bcf1e206a514f63b12f4d9b4ed927da61df144" translate="yes" xml:space="preserve">
          <source>HashMap.keysIterator()</source>
          <target state="translated">HashMap.keysIterator()</target>
        </trans-unit>
        <trans-unit id="a92dd5b1b79dd73f21a6bea32b5dbad92d3f2682" translate="yes" xml:space="preserve">
          <source>HashMap.knownSize()</source>
          <target state="translated">HashMap.knownSize()</target>
        </trans-unit>
        <trans-unit id="64118adc8df41e9c9573a1d191a99bfb10d59c24" translate="yes" xml:space="preserve">
          <source>HashMap.last()</source>
          <target state="translated">HashMap.last()</target>
        </trans-unit>
        <trans-unit id="0401a8d12cd1d96999a87b500935e08a36f5c9db" translate="yes" xml:space="preserve">
          <source>HashMap.mapFactory()</source>
          <target state="translated">HashMap.mapFactory()</target>
        </trans-unit>
        <trans-unit id="5c67f839b76ba5e8e3f03f4fce9364e2bb462f89" translate="yes" xml:space="preserve">
          <source>HashMap.merged()</source>
          <target state="translated">HashMap.merged()</target>
        </trans-unit>
        <trans-unit id="8f63dda5a13beb8ea939433a712fe6273aa3c908" translate="yes" xml:space="preserve">
          <source>HashMap.partition()</source>
          <target state="translated">HashMap.partition()</target>
        </trans-unit>
        <trans-unit id="adb61de086aebbfe7d5075b8941ec4c0200f44d3" translate="yes" xml:space="preserve">
          <source>HashMap.put()</source>
          <target state="translated">HashMap.put()</target>
        </trans-unit>
        <trans-unit id="c0cca71a5a539328fba86d3c1f5abcdd6c1c91c4" translate="yes" xml:space="preserve">
          <source>HashMap.remove()</source>
          <target state="translated">HashMap.remove()</target>
        </trans-unit>
        <trans-unit id="95b8998492102ad27218beea9cac61579c7d0d65" translate="yes" xml:space="preserve">
          <source>HashMap.removed()</source>
          <target state="translated">HashMap.removed()</target>
        </trans-unit>
        <trans-unit id="94aa31c3e5584da85664407e34ae2962e9780b68" translate="yes" xml:space="preserve">
          <source>HashMap.removedAll()</source>
          <target state="translated">HashMap.removedAll()</target>
        </trans-unit>
        <trans-unit id="68fa1daa9c371e5b56439d85275f2c812e9a2422" translate="yes" xml:space="preserve">
          <source>HashMap.reverseIterator()</source>
          <target state="translated">HashMap.reverseIterator()</target>
        </trans-unit>
        <trans-unit id="a6148d98f980eea3077761cde6138bc29a46a080" translate="yes" xml:space="preserve">
          <source>HashMap.scala</source>
          <target state="translated">HashMap.scala</target>
        </trans-unit>
        <trans-unit id="adaa202953a27d55f5a8e3480a997a8c42aed905" translate="yes" xml:space="preserve">
          <source>HashMap.size()</source>
          <target state="translated">HashMap.size()</target>
        </trans-unit>
        <trans-unit id="d20d3d2fa91f4b91a8c67b544eb1fd5f1e9dcfcc" translate="yes" xml:space="preserve">
          <source>HashMap.sizeHint()</source>
          <target state="translated">HashMap.sizeHint()</target>
        </trans-unit>
        <trans-unit id="a079f83e5eafb320beefe64779e977c2aa63ef8d" translate="yes" xml:space="preserve">
          <source>HashMap.span()</source>
          <target state="translated">HashMap.span()</target>
        </trans-unit>
        <trans-unit id="e41afb9d45e0b9644d51d851f25b6571d3d8808d" translate="yes" xml:space="preserve">
          <source>HashMap.stepper()</source>
          <target state="translated">HashMap.stepper()</target>
        </trans-unit>
        <trans-unit id="fe405438889dac54940b03a9e9a4aab4ce161407" translate="yes" xml:space="preserve">
          <source>HashMap.stringPrefix()</source>
          <target state="translated">HashMap.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="0fbc431eb4737b51bde542bcf63850031f0c6cd7" translate="yes" xml:space="preserve">
          <source>HashMap.subtractAll()</source>
          <target state="translated">HashMap.subtractAll()</target>
        </trans-unit>
        <trans-unit id="1a53f4ad3e85bd2cc827ef7e8815915790c95a58" translate="yes" xml:space="preserve">
          <source>HashMap.subtractOne()</source>
          <target state="translated">HashMap.subtractOne()</target>
        </trans-unit>
        <trans-unit id="c159fb9cd2c604923c9cd85dcab8d3e2ffb41dec" translate="yes" xml:space="preserve">
          <source>HashMap.tail()</source>
          <target state="translated">HashMap.tail()</target>
        </trans-unit>
        <trans-unit id="6b31431b170420804ae1f9c10c54f29229e1ee1a" translate="yes" xml:space="preserve">
          <source>HashMap.take()</source>
          <target state="translated">HashMap.take()</target>
        </trans-unit>
        <trans-unit id="ddf07d1f5b23ef4c158d8c027cde2bc342ccc1be" translate="yes" xml:space="preserve">
          <source>HashMap.takeRight()</source>
          <target state="translated">HashMap.takeRight()</target>
        </trans-unit>
        <trans-unit id="69d98116a41e303016b6c3fa073fd4829eacf9b3" translate="yes" xml:space="preserve">
          <source>HashMap.takeWhile()</source>
          <target state="translated">HashMap.takeWhile()</target>
        </trans-unit>
        <trans-unit id="0f7d0cc4b200d1ce00ec7649e7b312910cc1f486" translate="yes" xml:space="preserve">
          <source>HashMap.transform()</source>
          <target state="translated">HashMap.transform()</target>
        </trans-unit>
        <trans-unit id="b13ec23884f75a4168777a179e8344fa1a474043" translate="yes" xml:space="preserve">
          <source>HashMap.update()</source>
          <target state="translated">HashMap.update()</target>
        </trans-unit>
        <trans-unit id="1996f942547940037a16d07b28fb0ec33200d6da" translate="yes" xml:space="preserve">
          <source>HashMap.updated()</source>
          <target state="translated">HashMap.updated()</target>
        </trans-unit>
        <trans-unit id="0f45f45166ded1fb132ea433757b16051936ebb3" translate="yes" xml:space="preserve">
          <source>HashMap.updatedWith()</source>
          <target state="translated">HashMap.updatedWith()</target>
        </trans-unit>
        <trans-unit id="8745875b6ea4f1488325cfd19bc6c97956fcb064" translate="yes" xml:space="preserve">
          <source>HashMap.valueStepper()</source>
          <target state="translated">HashMap.valueStepper()</target>
        </trans-unit>
        <trans-unit id="81b6cf766882b5b0c0bc4fe46aa475594873c65c" translate="yes" xml:space="preserve">
          <source>HashMap.valuesIterator()</source>
          <target state="translated">HashMap.valuesIterator()</target>
        </trans-unit>
        <trans-unit id="65ed7413bd9eb5196913e8b79da6d64b578a0c49" translate="yes" xml:space="preserve">
          <source>HashMap.writeReplace()</source>
          <target state="translated">HashMap.writeReplace()</target>
        </trans-unit>
        <trans-unit id="cac17f9bdb6febebe0052a72f2ab8a6828d20944" translate="yes" xml:space="preserve">
          <source>HashSet</source>
          <target state="translated">HashSet</target>
        </trans-unit>
        <trans-unit id="7f27e776dc814d5d04d6b1b229a465f8dd9b2da4" translate="yes" xml:space="preserve">
          <source>HashSet$</source>
          <target state="translated">HashSet$</target>
        </trans-unit>
        <trans-unit id="9d1339e6682b0ce3a70145f9f7d797077c85a6c0" translate="yes" xml:space="preserve">
          <source>HashSet$.defaultInitialCapacity()</source>
          <target state="translated">HashSet$.defaultInitialCapacity()</target>
        </trans-unit>
        <trans-unit id="1f92e2cb150189b6626da714a80539e5cbce1ccc" translate="yes" xml:space="preserve">
          <source>HashSet$.defaultLoadFactor()</source>
          <target state="translated">HashSet$.defaultLoadFactor()</target>
        </trans-unit>
        <trans-unit id="d79962335a681c64a2ac594c47632bc91df6b101" translate="yes" xml:space="preserve">
          <source>HashSet$.empty()</source>
          <target state="translated">HashSet$.empty()</target>
        </trans-unit>
        <trans-unit id="0d3374fb7febb7c116d457af5d7478f5e7d1433b" translate="yes" xml:space="preserve">
          <source>HashSet$.from()</source>
          <target state="translated">HashSet$.from()</target>
        </trans-unit>
        <trans-unit id="ea8e797abd555da5cafdf4999121d21f338c68a6" translate="yes" xml:space="preserve">
          <source>HashSet$.newBuilder()</source>
          <target state="translated">HashSet$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="ade42f31d333f7b9c88c6e69d9a7c51d9d9db6b7" translate="yes" xml:space="preserve">
          <source>HashSet.HashSet()</source>
          <target state="translated">HashSet.HashSet()</target>
        </trans-unit>
        <trans-unit id="5e54353af37e22a74ea5f026290ccdc5557a0397" translate="yes" xml:space="preserve">
          <source>HashSet.add()</source>
          <target state="translated">HashSet.add()</target>
        </trans-unit>
        <trans-unit id="d21edd673598c50d2136bedc0e1957d5723d765a" translate="yes" xml:space="preserve">
          <source>HashSet.addAll()</source>
          <target state="translated">HashSet.addAll()</target>
        </trans-unit>
        <trans-unit id="36bfd65c638bc63c68385ce677450f7794af3b34" translate="yes" xml:space="preserve">
          <source>HashSet.addOne()</source>
          <target state="translated">HashSet.addOne()</target>
        </trans-unit>
        <trans-unit id="3cb6210d2e04c55b1c5906a551d3b78ff2e7ac62" translate="yes" xml:space="preserve">
          <source>HashSet.className()</source>
          <target state="translated">HashSet.className()</target>
        </trans-unit>
        <trans-unit id="84a482543c12c96247087e0f25be645e7c127764" translate="yes" xml:space="preserve">
          <source>HashSet.clear()</source>
          <target state="translated">HashSet.clear()</target>
        </trans-unit>
        <trans-unit id="72d6409926063b61f8ee85669b39550681141cb3" translate="yes" xml:space="preserve">
          <source>HashSet.concat()</source>
          <target state="translated">HashSet.concat()</target>
        </trans-unit>
        <trans-unit id="b81140c91068a96d0c8588fe48b10dffd730c5f0" translate="yes" xml:space="preserve">
          <source>HashSet.contains()</source>
          <target state="translated">HashSet.contains()</target>
        </trans-unit>
        <trans-unit id="40f24c09e8959ffcb4c45bd6cf674cb73d9e2133" translate="yes" xml:space="preserve">
          <source>HashSet.diff()</source>
          <target state="translated">HashSet.diff()</target>
        </trans-unit>
        <trans-unit id="08ec4d8b1351f4c03cf0c4517a44d1f1b043f8a5" translate="yes" xml:space="preserve">
          <source>HashSet.drop()</source>
          <target state="translated">HashSet.drop()</target>
        </trans-unit>
        <trans-unit id="1b3d9c99883bda94d6f5841e5ef26a36899fe35d" translate="yes" xml:space="preserve">
          <source>HashSet.dropRight()</source>
          <target state="translated">HashSet.dropRight()</target>
        </trans-unit>
        <trans-unit id="2d54a0c71b3e065857b7feb86b9a6a701156d2d9" translate="yes" xml:space="preserve">
          <source>HashSet.dropWhile()</source>
          <target state="translated">HashSet.dropWhile()</target>
        </trans-unit>
        <trans-unit id="5865fd09c1ea38674659fb6deedccd187de6c2d5" translate="yes" xml:space="preserve">
          <source>HashSet.equals()</source>
          <target state="translated">HashSet.equals()</target>
        </trans-unit>
        <trans-unit id="b6a1cdfa618e63ffb1d8871637000c9f391b50a2" translate="yes" xml:space="preserve">
          <source>HashSet.excl()</source>
          <target state="translated">HashSet.excl()</target>
        </trans-unit>
        <trans-unit id="1f542918857e1aca5fe4dca4d7b0a74acd626b93" translate="yes" xml:space="preserve">
          <source>HashSet.filterImpl()</source>
          <target state="translated">HashSet.filterImpl()</target>
        </trans-unit>
        <trans-unit id="804d46997f72b5bc00872474cd2dfb15acbef687" translate="yes" xml:space="preserve">
          <source>HashSet.filterInPlace()</source>
          <target state="translated">HashSet.filterInPlace()</target>
        </trans-unit>
        <trans-unit id="cb2a874ad928c68575d591636c116c9f90ee95c1" translate="yes" xml:space="preserve">
          <source>HashSet.foreach()</source>
          <target state="translated">HashSet.foreach()</target>
        </trans-unit>
        <trans-unit id="ebc3cf58a701f31c91132bec5eca55d57fb4ff59" translate="yes" xml:space="preserve">
          <source>HashSet.hashCode()</source>
          <target state="translated">HashSet.hashCode()</target>
        </trans-unit>
        <trans-unit id="e31a29b83d007a8320314a231852f211f2ab54d3" translate="yes" xml:space="preserve">
          <source>HashSet.head()</source>
          <target state="translated">HashSet.head()</target>
        </trans-unit>
        <trans-unit id="5ea0a8fd6f18c996c6985a45cbcf584c922252c0" translate="yes" xml:space="preserve">
          <source>HashSet.incl()</source>
          <target state="translated">HashSet.incl()</target>
        </trans-unit>
        <trans-unit id="8382311ac754ad792104dfcc9bf4de592dd324ff" translate="yes" xml:space="preserve">
          <source>HashSet.init()</source>
          <target state="translated">HashSet.init()</target>
        </trans-unit>
        <trans-unit id="2e21eb77be431e9b050738a0af6e52c52e8d881c" translate="yes" xml:space="preserve">
          <source>HashSet.intersect()</source>
          <target state="translated">HashSet.intersect()</target>
        </trans-unit>
        <trans-unit id="73fbdf29d2a1d36ebca5787f94122e0507f4453a" translate="yes" xml:space="preserve">
          <source>HashSet.isEmpty()</source>
          <target state="translated">HashSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="33869258b7e79a2531dc7c81588067907b512592" translate="yes" xml:space="preserve">
          <source>HashSet.iterableFactory()</source>
          <target state="translated">HashSet.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="766985700775d3021a2c5b08f870112ac4f16e01" translate="yes" xml:space="preserve">
          <source>HashSet.iterator()</source>
          <target state="translated">HashSet.iterator()</target>
        </trans-unit>
        <trans-unit id="c6fb51c6468bc817b0854c2b25a4b3a7b53f8c6a" translate="yes" xml:space="preserve">
          <source>HashSet.knownSize()</source>
          <target state="translated">HashSet.knownSize()</target>
        </trans-unit>
        <trans-unit id="37d68659c80b81fd15cdb36101daa9bfc2a768e0" translate="yes" xml:space="preserve">
          <source>HashSet.last()</source>
          <target state="translated">HashSet.last()</target>
        </trans-unit>
        <trans-unit id="fae43b6149e1b3cce0662a573703b087e2ffa345" translate="yes" xml:space="preserve">
          <source>HashSet.partition()</source>
          <target state="translated">HashSet.partition()</target>
        </trans-unit>
        <trans-unit id="8b5416ef2d2e986de2a3ea451473079c7c2c3493" translate="yes" xml:space="preserve">
          <source>HashSet.remove()</source>
          <target state="translated">HashSet.remove()</target>
        </trans-unit>
        <trans-unit id="74f65807f10a05a347fc76ec071343e394b75b1b" translate="yes" xml:space="preserve">
          <source>HashSet.removedAll()</source>
          <target state="translated">HashSet.removedAll()</target>
        </trans-unit>
        <trans-unit id="5cb095e2ebaa3b9b0aadcc9aa524e306acb5ed65" translate="yes" xml:space="preserve">
          <source>HashSet.reverseIterator()</source>
          <target state="translated">HashSet.reverseIterator()</target>
        </trans-unit>
        <trans-unit id="b61d14de6b95ddba489a1e37c3720bd5dc6515f9" translate="yes" xml:space="preserve">
          <source>HashSet.scala</source>
          <target state="translated">HashSet.scala</target>
        </trans-unit>
        <trans-unit id="c00350bf9dfd58e64458b84961b4e8f9298b0529" translate="yes" xml:space="preserve">
          <source>HashSet.size()</source>
          <target state="translated">HashSet.size()</target>
        </trans-unit>
        <trans-unit id="e47b29cbd3b68087be18e0db7d223a9db08d8a64" translate="yes" xml:space="preserve">
          <source>HashSet.sizeHint()</source>
          <target state="translated">HashSet.sizeHint()</target>
        </trans-unit>
        <trans-unit id="8fe664f9be98ebd03c71df3f67c2143c52b7866f" translate="yes" xml:space="preserve">
          <source>HashSet.span()</source>
          <target state="translated">HashSet.span()</target>
        </trans-unit>
        <trans-unit id="7f503561101caafdd4c9b837dcb9a514b30534c2" translate="yes" xml:space="preserve">
          <source>HashSet.stepper()</source>
          <target state="translated">HashSet.stepper()</target>
        </trans-unit>
        <trans-unit id="18a2ea857b49fa3fe4ecfc05d1167fe276b0f951" translate="yes" xml:space="preserve">
          <source>HashSet.stringPrefix()</source>
          <target state="translated">HashSet.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="a27da7269aac1d17a872056647085a662db1773a" translate="yes" xml:space="preserve">
          <source>HashSet.subsetOf()</source>
          <target state="translated">HashSet.subsetOf()</target>
        </trans-unit>
        <trans-unit id="7fa5f06cef0ce4e8cc587e06639fce2876b154af" translate="yes" xml:space="preserve">
          <source>HashSet.subtractAll()</source>
          <target state="translated">HashSet.subtractAll()</target>
        </trans-unit>
        <trans-unit id="9fb49e707870701611889c7dc5e65d9d1ec124d4" translate="yes" xml:space="preserve">
          <source>HashSet.subtractOne()</source>
          <target state="translated">HashSet.subtractOne()</target>
        </trans-unit>
        <trans-unit id="22e62f9cfdefa549a70d6d808909f4f61e90fc47" translate="yes" xml:space="preserve">
          <source>HashSet.tail()</source>
          <target state="translated">HashSet.tail()</target>
        </trans-unit>
        <trans-unit id="9a86223203f61e73063608021aa12feafaf90468" translate="yes" xml:space="preserve">
          <source>HashSet.take()</source>
          <target state="translated">HashSet.take()</target>
        </trans-unit>
        <trans-unit id="6b8ebfe5d2bd594544fd857f154d68025ebab153" translate="yes" xml:space="preserve">
          <source>HashSet.takeRight()</source>
          <target state="translated">HashSet.takeRight()</target>
        </trans-unit>
        <trans-unit id="bc4c08f9b7b1c8c99563b4108ed6ce6786370708" translate="yes" xml:space="preserve">
          <source>HashSet.takeWhile()</source>
          <target state="translated">HashSet.takeWhile()</target>
        </trans-unit>
        <trans-unit id="86c9ff8564bfc2e0bacd2e5d589eb755fcca77c8" translate="yes" xml:space="preserve">
          <source>HashSet.writeReplace()</source>
          <target state="translated">HashSet.writeReplace()</target>
        </trans-unit>
        <trans-unit id="53e49a69fb315c4f51afc9825055d4858a064cdc" translate="yes" xml:space="preserve">
          <source>Hashing</source>
          <target state="translated">Hashing</target>
        </trans-unit>
        <trans-unit id="2a3693b11dc424dbddaabe545d98bb061dc8f82a" translate="yes" xml:space="preserve">
          <source>Hashing$</source>
          <target state="translated">Hashing$</target>
        </trans-unit>
        <trans-unit id="07b085c0ca775a17daf29449fd63888858c37715" translate="yes" xml:space="preserve">
          <source>Hashing$.Default</source>
          <target state="translated">Hashing$.Default</target>
        </trans-unit>
        <trans-unit id="fffbcb7ae673e66532e2a0145aa4a7491cb5aeac" translate="yes" xml:space="preserve">
          <source>Hashing$.Default()</source>
          <target state="translated">Hashing$.Default()</target>
        </trans-unit>
        <trans-unit id="0299f4358678f55f5d7804684c0ed90046587fa4" translate="yes" xml:space="preserve">
          <source>Hashing$.Default.Default()</source>
          <target state="translated">Hashing$.Default.Default()</target>
        </trans-unit>
        <trans-unit id="64d6ca74f3ceca1ef2abaa1e88c041cecb0763e3" translate="yes" xml:space="preserve">
          <source>Hashing$.Default.hash()</source>
          <target state="translated">Hashing$.Default.hash()</target>
        </trans-unit>
        <trans-unit id="db56a51427f54a525e8d303bc66884265a1bd405" translate="yes" xml:space="preserve">
          <source>Hashing$.computeHash()</source>
          <target state="translated">Hashing$.computeHash()</target>
        </trans-unit>
        <trans-unit id="1b8e96c76b11946af65a35dffd6559518e4fc553" translate="yes" xml:space="preserve">
          <source>Hashing$.default()</source>
          <target state="translated">Hashing$.default()</target>
        </trans-unit>
        <trans-unit id="f5226063672eb108b5a242230fc64031448df107" translate="yes" xml:space="preserve">
          <source>Hashing$.elemHashCode()</source>
          <target state="translated">Hashing$.elemHashCode()</target>
        </trans-unit>
        <trans-unit id="2a6000584b483ae439ca282ab9c8c2cb16d4fa2a" translate="yes" xml:space="preserve">
          <source>Hashing$.fromFunction()</source>
          <target state="translated">Hashing$.fromFunction()</target>
        </trans-unit>
        <trans-unit id="e36aeabc6ff31f198df6ce525d98a24dd567b500" translate="yes" xml:space="preserve">
          <source>Hashing$.improve()</source>
          <target state="translated">Hashing$.improve()</target>
        </trans-unit>
        <trans-unit id="a91cbae1e8fcfbda67bfa681dc4eceb889a70b09" translate="yes" xml:space="preserve">
          <source>Hashing$.keepBits()</source>
          <target state="translated">Hashing$.keepBits()</target>
        </trans-unit>
        <trans-unit id="5fdaeb4a81e6b965f4b74b2e28085cc8b1694554" translate="yes" xml:space="preserve">
          <source>Hashing.hash()</source>
          <target state="translated">Hashing.hash()</target>
        </trans-unit>
        <trans-unit id="4389a8ef965fc8b3deef1ae9883368b816ca00e4" translate="yes" xml:space="preserve">
          <source>Hashing.scala</source>
          <target state="translated">Hashing.scala</target>
        </trans-unit>
        <trans-unit id="3b7270f296f0ef0c9f0f94ebdc4d79445ace628d" translate="yes" xml:space="preserve">
          <source>Here is an example that counts the number of lines in the normal and error output of a process:</source>
          <target state="translated">プロセスの正常出力とエラー出力の行数をカウントする例を示します。</target>
        </trans-unit>
        <trans-unit id="fd0cb5d34278e0ac1d3d46ce8c36d6c8b7c8189b" translate="yes" xml:space="preserve">
          <source>Here is an example usage:</source>
          <target state="translated">使用例をご紹介します。</target>
        </trans-unit>
        <trans-unit id="ecf830c17fbc4a627943058aaf842b4916814688" translate="yes" xml:space="preserve">
          <source>Here the &lt;code&gt;JsonHelper&lt;/code&gt; extension class implicitly adds the &lt;code&gt;json&lt;/code&gt; method to &lt;code&gt;StringContext&lt;/code&gt; which can be used for &lt;code&gt;json&lt;/code&gt; string literals.</source>
          <target state="translated">ここで、 &lt;code&gt;JsonHelper&lt;/code&gt; 拡張クラスは、 &lt;code&gt;json&lt;/code&gt; メソッドを暗黙的に &lt;code&gt;StringContext&lt;/code&gt; に追加します。これは、 &lt;code&gt;json&lt;/code&gt; 文字列リテラルに使用できます。</target>
        </trans-unit>
        <trans-unit id="23cc11fa172915dff4df3cb2de4c0ed910e029e9" translate="yes" xml:space="preserve">
          <source>Here's a usage example:</source>
          <target state="translated">使用例を紹介します。</target>
        </trans-unit>
        <trans-unit id="31e4a69bd26f15df2f54afb3e39b9b892a80db5c" translate="yes" xml:space="preserve">
          <source>Here, we begin by creating a class &lt;code&gt;ExtensionMethods&lt;/code&gt; which contains our &lt;code&gt;mapReduce&lt;/code&gt; extension method.</source>
          <target state="translated">ここでは、 &lt;code&gt;mapReduce&lt;/code&gt; 拡張メソッドを含む &lt;code&gt;ExtensionMethods&lt;/code&gt; クラスを作成することから始めます。</target>
        </trans-unit>
        <trans-unit id="e62e57114c62181427292b122f96732e2394b26e" translate="yes" xml:space="preserve">
          <source>Here, we use the &lt;code&gt;TimeSplitter&lt;/code&gt; regex within the &lt;code&gt;s&lt;/code&gt; matcher, further splitting the matched string &quot;10.50&quot; into its constituent parts</source>
          <target state="translated">ここでは、 &lt;code&gt;s&lt;/code&gt; マッチャー内で &lt;code&gt;TimeSplitter&lt;/code&gt; 正規表現を使用し、一致した文字列「10.50」を構成要素にさらに分割します。</target>
        </trans-unit>
        <trans-unit id="e918d4c3788f379f1685fc5a8d5c42d15a314cca" translate="yes" xml:space="preserve">
          <source>However, they provide &lt;code&gt;O(n/m)&lt;/code&gt; complexity random access, where &lt;code&gt;n&lt;/code&gt; is the number of elements, and &lt;code&gt;m&lt;/code&gt; the size of internal array chunks.</source>
          <target state="translated">ただし、それらは &lt;code&gt;O(n/m)&lt;/code&gt; の複雑なランダムアクセスを提供します。ここで、 &lt;code&gt;n&lt;/code&gt; は要素の数、 &lt;code&gt;m&lt;/code&gt; は内部配列チャンクのサイズです。</target>
        </trans-unit>
        <trans-unit id="1eba302938747ae1fdc6d19930231ab813588f77" translate="yes" xml:space="preserve">
          <source>IO redefinition</source>
          <target state="translated">入出力再定義</target>
        </trans-unit>
        <trans-unit id="474ae52625b87d7628ae7b20a499329a99e07119" translate="yes" xml:space="preserve">
          <source>Id</source>
          <target state="translated">Id</target>
        </trans-unit>
        <trans-unit id="38cb7642371552349192a24886f72ec853976754" translate="yes" xml:space="preserve">
          <source>Ideal to use when:</source>
          <target state="translated">時の使用に最適です。</target>
        </trans-unit>
        <trans-unit id="b2ec24c580b8b76112a347f8dd586440a788fee2" translate="yes" xml:space="preserve">
          <source>Identifiers in the scala package and the &lt;a href=&quot;scala/predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt;&lt;code&gt;scala.Predef&lt;/code&gt;&lt;/a&gt; object are always in scope by default.</source>
          <target state="translated">scalaパッケージおよび&lt;a href=&quot;scala/predef%24&quot; id=&quot;scala.Predef&quot; name=&quot;scala.Predef&quot;&gt; &lt;code&gt;scala.Predef&lt;/code&gt; &lt;/a&gt;オブジェクトの識別子は、デフォルトで常にスコープ内にあります。</target>
        </trans-unit>
        <trans-unit id="f181bd39572f5f86b5ad2bcb9af9b12b25c5ccab" translate="yes" xml:space="preserve">
          <source>IeeeEquiv</source>
          <target state="translated">IeeeEquiv</target>
        </trans-unit>
        <trans-unit id="3e4e1e0d5595e2558e95adfb5d6679d0edd554a1" translate="yes" xml:space="preserve">
          <source>IeeeOrdering</source>
          <target state="translated">IeeeOrdering</target>
        </trans-unit>
        <trans-unit id="0b90c80f1aa570bc14fa1841c9ecf649362ffe08" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;From &amp;lt;: To&lt;/code&gt; and &lt;code&gt;C &amp;lt;: From&lt;/code&gt;, then &lt;code&gt;C &amp;lt;: To&lt;/code&gt; (subtyping is transitive)</source>
          <target state="translated">もし &lt;code&gt;From &amp;lt;: To&lt;/code&gt; と &lt;code&gt;C &amp;lt;: From&lt;/code&gt; 、次いで &lt;code&gt;C &amp;lt;: To&lt;/code&gt; （サブタイプが推移的です）</target>
        </trans-unit>
        <trans-unit id="7b7bcda8d0a3cb78f0e96db68dacd9253b04bd41" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;From &amp;lt;: To&lt;/code&gt; and &lt;code&gt;To &amp;lt;: C&lt;/code&gt;, then &lt;code&gt;From &amp;lt;: C&lt;/code&gt; (subtyping is transitive)</source>
          <target state="translated">場合 &lt;code&gt;From &amp;lt;: To&lt;/code&gt; と &lt;code&gt;To &amp;lt;: C&lt;/code&gt; 、その後、 &lt;code&gt;From &amp;lt;: C&lt;/code&gt; （サブタイプが推移的です）</target>
        </trans-unit>
        <trans-unit id="3300fbf8304c560a3b4394c728f3854676992b26" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;f&lt;/code&gt; throws, then this method may throw an exception.</source>
          <target state="translated">場合 &lt;code&gt;f&lt;/code&gt; がスロー、このメソッドは例外をスローすることがあります。</target>
        </trans-unit>
        <trans-unit id="9c63f7a8b8b0bc6c212262aaf34605cf5c053183" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; future fails, the resulting future is failed with the throwable stored in &lt;code&gt;this&lt;/code&gt;. Otherwise, if &lt;code&gt;that&lt;/code&gt; future fails, the resulting future is failed with the throwable stored in &lt;code&gt;that&lt;/code&gt;.</source>
          <target state="translated">場合は &lt;code&gt;this&lt;/code&gt; 未来が失敗し、結果として将来はに保存されているスロー可能に失敗しました &lt;code&gt;this&lt;/code&gt; 。それ以外の場合、 &lt;code&gt;that&lt;/code&gt; 将来に障害が発生し、結果として将来はに保存されているスロー可能で失敗している &lt;code&gt;that&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="283ebc2058da940475dedda35ac0d349ca561e55" translate="yes" xml:space="preserve">
          <source>If &lt;code&gt;this&lt;/code&gt; future fails, the resulting future is failed with the throwable stored in &lt;code&gt;this&lt;/code&gt;. Otherwise, if &lt;code&gt;that&lt;/code&gt; future fails, the resulting future is failed with the throwable stored in &lt;code&gt;that&lt;/code&gt;. If the application of &lt;code&gt;f&lt;/code&gt; throws a throwable, the resulting future is failed with that throwable if it is non-fatal.</source>
          <target state="translated">場合は &lt;code&gt;this&lt;/code&gt; 未来が失敗し、結果として将来はに保存されているスロー可能に失敗しました &lt;code&gt;this&lt;/code&gt; 。それ以外の場合、 &lt;code&gt;that&lt;/code&gt; 将来に障害が発生し、結果として将来はに保存されているスロー可能で失敗している &lt;code&gt;that&lt;/code&gt; 。 &lt;code&gt;f&lt;/code&gt; のアプリケーションがスロー可能オブジェクトをスローした場合、致命的でない場合、結果のフューチャーはそのスロー可能オブジェクトで失敗します。</target>
        </trans-unit>
        <trans-unit id="b53dbef0a95c0eb523d84362e93bb41c07621cc1" translate="yes" xml:space="preserve">
          <source>If a call is not natively supported by &lt;code&gt;x&lt;/code&gt; (i.e. if type checking fails), it is rewritten according to the following rules:</source>
          <target state="translated">呼び出しが &lt;code&gt;x&lt;/code&gt; によってネイティブにサポートされていない場合（つまり、型チェックが失敗した場合）は、次の規則に従って書き直されます。</target>
        </trans-unit>
        <trans-unit id="b858c1024f51a50526c7a173edb6e541c1dffcc7" translate="yes" xml:space="preserve">
          <source>If a process is begun with one of these &lt;code&gt;ProcessBuilder&lt;/code&gt; methods:</source>
          <target state="translated">プロセスがこれらの &lt;code&gt;ProcessBuilder&lt;/code&gt; メソッドのいずれかで開始された場合：</target>
        </trans-unit>
        <trans-unit id="7deda8aacb61aa24389ca766515167ecd7f379a5" translate="yes" xml:space="preserve">
          <source>If a successful match was made against the current pattern, then that result is used.</source>
          <target state="translated">現在のパターンに対してマッチが成功した場合は、その結果が使用されます。</target>
        </trans-unit>
        <trans-unit id="0a9c3c8a093089f7fa418846fdd144ef99bdd32a" translate="yes" xml:space="preserve">
          <source>If executed immediately after a call to &lt;code&gt;result()&lt;/code&gt;, this allows a new instance of the same type of collection to be built.</source>
          <target state="translated">&lt;code&gt;result()&lt;/code&gt; の呼び出しの直後に実行すると、同じタイプのコレクションの新しいインスタンスを構築できます。</target>
        </trans-unit>
        <trans-unit id="193bc8ec8680872bdcf95810930670f360f1de92" translate="yes" xml:space="preserve">
          <source>If given key is already in this map, returns associated value.</source>
          <target state="translated">指定されたキーが既にこのマップ内にある場合、関連付けられた値を返します。</target>
        </trans-unit>
        <trans-unit id="abe7f3e48c8c989aa613c2f620c99aaf1b224e6f" translate="yes" xml:space="preserve">
          <source>If group names are supplied, they can be used this way:</source>
          <target state="translated">グループ名が与えられている場合は、このように使用することができます。</target>
        </trans-unit>
        <trans-unit id="05afdc61083e04dc7a5932f34c5992a401160d6a" translate="yes" xml:space="preserve">
          <source>If it is guaranteed that none of the executed tasks are blocking, a single-threaded &lt;code&gt;ExecutorService&lt;/code&gt; can be used to create an &lt;code&gt;ExecutionContext&lt;/code&gt; as follows:</source>
          <target state="translated">実行中のタスクのいずれもブロックしていないことが保証されている場合は、シングルスレッドの &lt;code&gt;ExecutorService&lt;/code&gt; を使用して、次のように &lt;code&gt;ExecutionContext&lt;/code&gt; を作成できます。</target>
        </trans-unit>
        <trans-unit id="3a18016e5ff37dedcf5de935482a4680c914a837" translate="yes" xml:space="preserve">
          <source>If it is present, the compiler will issue an error if the method cannot be optimized into a loop.</source>
          <target state="translated">これが存在する場合、メソッドをループに最適化できない場合、コンパイラはエラーを発行します。</target>
        </trans-unit>
        <trans-unit id="a8fdcce3e2b4ec78431a9ecf3159b8c0a6034c74" translate="yes" xml:space="preserve">
          <source>If more than one &lt;code&gt;@implicitAmbiguous&lt;/code&gt; annotation is collected, the compiler is free to pick any of them to display.</source>
          <target state="translated">複数の &lt;code&gt;@implicitAmbiguous&lt;/code&gt; アノテーションが収集された場合、コンパイラはそれらのいずれかを自由に選択して表示できます。</target>
        </trans-unit>
        <trans-unit id="8c13b876cc7c03529e27d9100484763188ef3a5a" translate="yes" xml:space="preserve">
          <source>If multiple elements have the same priority in the ordering of this PriorityQueue, no guarantees are made regarding the order in which elements are returned by &lt;code&gt;dequeue&lt;/code&gt; or &lt;code&gt;dequeueAll&lt;/code&gt;. In particular, that means this class does not guarantee first in first out behaviour that may be incorrectly inferred from the Queue part of the name of this class.</source>
          <target state="translated">このPriorityQueueの順序付けで複数の要素が同じ優先順位を持っている場合、 &lt;code&gt;dequeue&lt;/code&gt; または &lt;code&gt;dequeueAll&lt;/code&gt; によって要素が返される順序は保証されません。特に、このクラスは、このクラスの名前のキュー部分から誤って推測される可能性がある先入れ先出し動作を保証しないことを意味します。</target>
        </trans-unit>
        <trans-unit id="0f7090cacf1b466a43fb29ad7495b59baa488cf0" translate="yes" xml:space="preserve">
          <source>If not specified, the input of the external commands executed with &lt;code&gt;run&lt;/code&gt; or &lt;code&gt;!&lt;/code&gt; will not be tied to anything, and the output will be redirected to the stdout and stderr of the Scala process. For the methods &lt;code&gt;!!&lt;/code&gt; and &lt;code&gt;lazyLines&lt;/code&gt;, no input will be provided, and the output will be directed according to the semantics of these methods.</source>
          <target state="translated">指定しない場合、 &lt;code&gt;run&lt;/code&gt; または &lt;code&gt;!&lt;/code&gt; で実行される外部コマンドの入力 何にも関連付けられず、出力はScalaプロセスのstdoutおよびstderrにリダイレクトされます。メソッドについて &lt;code&gt;!!&lt;/code&gt; および &lt;code&gt;lazyLines&lt;/code&gt; の場合、入力は提供されず、出力はこれらのメソッドのセマンティクスに従って送信されます。</target>
        </trans-unit>
        <trans-unit id="485f3713fb38f75a40d1f9052ab44e160f52d3d9" translate="yes" xml:space="preserve">
          <source>If the Java &lt;code&gt;Collection&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asJavaCollection&lt;/code&gt; then the original Scala &lt;code&gt;Iterable&lt;/code&gt; will be returned.</source>
          <target state="translated">Java &lt;code&gt;Collection&lt;/code&gt; が &lt;code&gt;asJavaCollection&lt;/code&gt; の暗黙的または明示的な呼び出しから以前に取得された場合、元のScala &lt;code&gt;Iterable&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="81900a5633f5c54697acf864c86a841f4dfadb55" translate="yes" xml:space="preserve">
          <source>If the Java &lt;code&gt;ConcurrentMap&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asJava&lt;/code&gt; then the original Scala &lt;code&gt;ConcurrentMap&lt;/code&gt; will be returned.</source>
          <target state="translated">Java &lt;code&gt;ConcurrentMap&lt;/code&gt; が &lt;code&gt;asJava&lt;/code&gt; の暗黙的または明示的な呼び出しから以前に取得された場合、元のScala &lt;code&gt;ConcurrentMap&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="52e26e6b1e55f2b0927a99632a633e332eb42f82" translate="yes" xml:space="preserve">
          <source>If the Java &lt;code&gt;Dictionary&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asJavaDictionary&lt;/code&gt; then the original Scala &lt;code&gt;Map&lt;/code&gt; will be returned.</source>
          <target state="translated">Java &lt;code&gt;Dictionary&lt;/code&gt; が &lt;code&gt;asJavaDictionary&lt;/code&gt; の暗黙的または明示的な呼び出しから以前に取得された場合、元のScala &lt;code&gt;Map&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="a21c36f085396afec488a66aaa8e4a99f9ab593d" translate="yes" xml:space="preserve">
          <source>If the Java &lt;code&gt;Enumeration&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asJavaEnumeration&lt;/code&gt; then the original Scala &lt;code&gt;Iterator&lt;/code&gt; will be returned.</source>
          <target state="translated">Java &lt;code&gt;Enumeration&lt;/code&gt; が以前に暗黙的または明示的な &lt;code&gt;asJavaEnumeration&lt;/code&gt; の呼び出しから取得された場合、元のScala &lt;code&gt;Iterator&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="967a4dfcc41b9cce47d25971984fd92616c5278a" translate="yes" xml:space="preserve">
          <source>If the Java &lt;code&gt;Iterable&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asJava&lt;/code&gt; then the original Scala &lt;code&gt;Iterable&lt;/code&gt; will be returned.</source>
          <target state="translated">Javaの場合 &lt;code&gt;Iterable&lt;/code&gt; 以前の暗黙的または明示的な呼び出しから入手した &lt;code&gt;asJava&lt;/code&gt; 元Scalaの &lt;code&gt;Iterable&lt;/code&gt; 返されます。</target>
        </trans-unit>
        <trans-unit id="a218a2d44843609f4706f4e232435079505aa925" translate="yes" xml:space="preserve">
          <source>If the Java &lt;code&gt;Iterator&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asJava&lt;/code&gt; then the original Scala &lt;code&gt;Iterator&lt;/code&gt; will be returned.</source>
          <target state="translated">Java &lt;code&gt;Iterator&lt;/code&gt; が以前に &lt;code&gt;asJava&lt;/code&gt; の暗黙的または明示的な呼び出しから取得された場合、元のScala &lt;code&gt;Iterator&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="2b4ed7861c3f540541a11d31921f624ffbf75ba4" translate="yes" xml:space="preserve">
          <source>If the Java &lt;code&gt;List&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asJava&lt;/code&gt; then the original Scala &lt;code&gt;Buffer&lt;/code&gt; will be returned.</source>
          <target state="translated">Java &lt;code&gt;List&lt;/code&gt; が &lt;code&gt;asJava&lt;/code&gt; の暗黙的または明示的な呼び出しから以前に取得された場合、元のScala &lt;code&gt;Buffer&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="8c61b51bf7a2eda54d3dc7ec1f055f22d8571475" translate="yes" xml:space="preserve">
          <source>If the Java &lt;code&gt;Map&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asJava&lt;/code&gt; then the original Scala &lt;code&gt;Map&lt;/code&gt; will be returned.</source>
          <target state="translated">Java &lt;code&gt;Map&lt;/code&gt; が &lt;code&gt;asJava&lt;/code&gt; の暗黙的または明示的な呼び出しから以前に取得された場合、元のScala &lt;code&gt;Map&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="4796d1a00313d9c94e4520d31ff0e23297bcfa31" translate="yes" xml:space="preserve">
          <source>If the Java &lt;code&gt;Set&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asJava&lt;/code&gt; then the original Scala &lt;code&gt;Set&lt;/code&gt; will be returned.</source>
          <target state="translated">Java &lt;code&gt;Set&lt;/code&gt; が &lt;code&gt;asJava&lt;/code&gt; の暗黙的または明示的な呼び出しから以前に取得された場合、元のScala &lt;code&gt;Set&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c8c41c8f9771866879d2e496a3d1fdc246ecd48f" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;Buffer&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;List&lt;/code&gt; will be returned.</source>
          <target state="translated">Scala &lt;code&gt;Buffer&lt;/code&gt; が暗黙的または明示的な &lt;code&gt;asScala&lt;/code&gt; の呼び出しから以前に取得された場合、元のJava &lt;code&gt;List&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="b2d6006188dedbbba73682f13e10570904a2c5da" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;Iterable&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;Collection&lt;/code&gt; will be returned.</source>
          <target state="translated">Scalaの場合 &lt;code&gt;Iterable&lt;/code&gt; 以前の暗黙的または明示的な呼び出しから入手した &lt;code&gt;asScala&lt;/code&gt; その後、元のJava &lt;code&gt;Collection&lt;/code&gt; 返されます。</target>
        </trans-unit>
        <trans-unit id="838804c71f1dc20934e5410a603aeed3fb5d4a96" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;Iterable&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;Iterable&lt;/code&gt; will be returned.</source>
          <target state="translated">Scalaの場合 &lt;code&gt;Iterable&lt;/code&gt; 以前の暗黙的または明示的な呼び出しから入手した &lt;code&gt;asScala&lt;/code&gt; その後、元のJava &lt;code&gt;Iterable&lt;/code&gt; 返されます。</target>
        </trans-unit>
        <trans-unit id="40f06e73f269f2967e938cf9c79cf0278049a6dd" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;Iterator&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;Enumeration&lt;/code&gt; will be returned.</source>
          <target state="translated">Scala &lt;code&gt;Iterator&lt;/code&gt; が以前に暗黙的または明示的な &lt;code&gt;asScala&lt;/code&gt; の呼び出しから取得された場合、元のJava &lt;code&gt;Enumeration&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="5182f494f88ca9c0b58c04ed3d553a43c555bb47" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;Iterator&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;Iterator&lt;/code&gt; will be returned.</source>
          <target state="translated">Scala &lt;code&gt;Iterator&lt;/code&gt; が &lt;code&gt;asScala&lt;/code&gt; の暗黙的または明示的な呼び出しから以前に取得された場合、元のJava &lt;code&gt;Iterator&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="eb1e25cb1ba509c683ff39bcacc5049eeec7bad6" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;Map&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;Dictionary&lt;/code&gt; will be returned.</source>
          <target state="translated">Scala &lt;code&gt;Map&lt;/code&gt; が以前に暗黙的または明示的な &lt;code&gt;asScala&lt;/code&gt; の呼び出しから取得された場合、元のJava &lt;code&gt;Dictionary&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="091b069d676f26a4a765e09391561755ccefcc5b" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;Map&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;Map&lt;/code&gt; will be returned.</source>
          <target state="translated">Scala &lt;code&gt;Map&lt;/code&gt; が以前に暗黙的または明示的な &lt;code&gt;asScala&lt;/code&gt; の呼び出しから取得された場合、元のJava &lt;code&gt;Map&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="429abcac9eba01432c589ccdd9e5f9a838336a61" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;Seq&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;List&lt;/code&gt; will be returned.</source>
          <target state="translated">Scala &lt;code&gt;Seq&lt;/code&gt; が以前に暗黙的または明示的な &lt;code&gt;asScala&lt;/code&gt; の呼び出しから取得された場合、元のJava &lt;code&gt;List&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c98d3365c873eba3e981628e54725749f9bce74d" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;Set&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;Set&lt;/code&gt; will be returned.</source>
          <target state="translated">Scala &lt;code&gt;Set&lt;/code&gt; が以前に暗黙的または明示的な &lt;code&gt;asScala&lt;/code&gt; の呼び出しから取得された場合、元のJava &lt;code&gt;Set&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="c06eb336dd91232ee66413b018eb643a9b5d30f0" translate="yes" xml:space="preserve">
          <source>If the Scala &lt;code&gt;concurrent.Map&lt;/code&gt; was previously obtained from an implicit or explicit call of &lt;code&gt;asScala&lt;/code&gt; then the original Java &lt;code&gt;ConcurrentMap&lt;/code&gt; will be returned.</source>
          <target state="translated">Scala &lt;code&gt;concurrent.Map&lt;/code&gt; が以前に &lt;code&gt;asScala&lt;/code&gt; の暗黙的または明示的な呼び出しから取得された場合、元のJava &lt;code&gt;ConcurrentMap&lt;/code&gt; が返されます。</target>
        </trans-unit>
        <trans-unit id="a0b8d95473c5d31d639f4834d6ff88a7a5f6cdb1" translate="yes" xml:space="preserve">
          <source>If the code in question is a class or method definition, and no &lt;code&gt;ExecutionContext&lt;/code&gt; is available, request one from the caller by adding an implicit parameter list:</source>
          <target state="translated">問題のコードがクラスまたはメソッドの定義であり、 &lt;code&gt;ExecutionContext&lt;/code&gt; を使用できない場合は、暗黙的なパラメーターリストを追加して、呼び出し元に要求を要求します。</target>
        </trans-unit>
        <trans-unit id="744c1f994e8ce1125a85f82b147183dfa914b5b3" translate="yes" xml:space="preserve">
          <source>If the condition is satisfied, return the given &lt;code&gt;B&lt;/code&gt; in &lt;code&gt;Right&lt;/code&gt;, otherwise, return the given &lt;code&gt;A&lt;/code&gt; in &lt;code&gt;Left&lt;/code&gt;.</source>
          <target state="translated">条件が満たされている場合は、指定された &lt;code&gt;B&lt;/code&gt; を &lt;code&gt;Right&lt;/code&gt; に返し、そうでない場合は、指定された &lt;code&gt;A&lt;/code&gt; を &lt;code&gt;Left&lt;/code&gt; に返します。</target>
        </trans-unit>
        <trans-unit id="d6aeec1cbc8d5fce39ce3a313de2c9b2e5f50b77" translate="yes" xml:space="preserve">
          <source>If the current future contains a value for which the partial function is defined, the new future will also hold that value. Otherwise, the resulting future will fail with a &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">現在のフューチャーに部分関数が定義されている値が含まれている場合、新しいフューチャーもその値を保持します。それ以外の場合、結果のフューチャーは &lt;code&gt;NoSuchElementException&lt;/code&gt; で失敗します。</target>
        </trans-unit>
        <trans-unit id="f6dcb15eb5adeb245aa10416e22fb6aecb582769" translate="yes" xml:space="preserve">
          <source>If the current future contains a value which satisfies the predicate, the new future will also hold that value. Otherwise, the resulting future will fail with a &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">現在のフューチャーに述語を満たす値が含まれている場合、新しいフューチャーもその値を保持します。それ以外の場合、結果のフューチャーは &lt;code&gt;NoSuchElementException&lt;/code&gt; で失敗します。</target>
        </trans-unit>
        <trans-unit id="e39f8b84445c0c6a74d5aa43a0b57123d098584c" translate="yes" xml:space="preserve">
          <source>If the current future fails, then the resulting future also fails.</source>
          <target state="translated">現在の未来が失敗した場合、結果として生じる未来も失敗します。</target>
        </trans-unit>
        <trans-unit id="684f31914070b55d47e693b670ee051f29aa1ab6" translate="yes" xml:space="preserve">
          <source>If the future has already been completed, this will either be applied immediately or be scheduled asynchronously.</source>
          <target state="translated">すでに未来が完成している場合は、すぐに適用されるか、非同期にスケジュールされます。</target>
        </trans-unit>
        <trans-unit id="7e2806bb54216f612f582fa1ea5e573fdaa5046d" translate="yes" xml:space="preserve">
          <source>If the future was not completed the returned value will be &lt;code&gt;None&lt;/code&gt;. If the future was completed the value will be &lt;code&gt;Some(Success(t))&lt;/code&gt; if it contained a valid result, or &lt;code&gt;Some(Failure(error))&lt;/code&gt; if it contained an exception.</source>
          <target state="translated">未来が完了していない場合、戻り値は &lt;code&gt;None&lt;/code&gt; になります。futureが完了した場合、有効な結果が含まれている場合、値は &lt;code&gt;Some(Success(t))&lt;/code&gt; 、例外が含まれている場合、 &lt;code&gt;Some(Failure(error))&lt;/code&gt; になります。</target>
        </trans-unit>
        <trans-unit id="c827486c56029927e03b272cb625332cb0c7787f" translate="yes" xml:space="preserve">
          <source>If the key exists in the properties map, converts the value to type &lt;code&gt;T&lt;/code&gt; using valueFn. As yet no validation is performed: it will throw an exception on a failed conversion.</source>
          <target state="translated">キーがプロパティマップに存在する場合、valueFnを使用して値を &lt;code&gt;T&lt;/code&gt; 型に変換します。まだ検証は実行されていません。変換が失敗すると例外がスローされます。</target>
        </trans-unit>
        <trans-unit id="ed53292847c7a457f14d1fad9544b9ed3063ad89" translate="yes" xml:space="preserve">
          <source>If the map is updated by another concurrent access, the remapping function will be retried until successfully updated.</source>
          <target state="translated">別の同時アクセスによってマップが更新された場合、更新が成功するまで再マッピング機能が再試行されます。</target>
        </trans-unit>
        <trans-unit id="aea26956783357199ff4ff23455d8a63569e385b" translate="yes" xml:space="preserve">
          <source>If the match is successful, the &lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;scala.util.matching.Regex.Match&lt;/a&gt; can be queried for more data.</source>
          <target state="translated">一致が成功した場合、&lt;a href=&quot;regex%24%24match&quot; id=&quot;scala.util.matching.Regex.Match&quot; name=&quot;scala.util.matching.Regex.Match&quot;&gt;scala.util.matching.Regex.Match&lt;/a&gt;にクエリを実行して、より多くのデータを取得できます。</target>
        </trans-unit>
        <trans-unit id="506335ff1627c92286b9458d5c384822b471eae5" translate="yes" xml:space="preserve">
          <source>If the match succeeds, the result is a list of the matching groups (or a &lt;code&gt;null&lt;/code&gt; element if a group did not match any input). If the pattern specifies no groups, then the result will be an empty list on a successful match.</source>
          <target state="translated">一致が成功した場合、結果は一致するグループのリストになります（グループがどの入力とも一致しなかった場合は &lt;code&gt;null&lt;/code&gt; 要素）。パターンでグループが指定されていない場合、一致が成功すると、結果は空のリストになります。</target>
        </trans-unit>
        <trans-unit id="a58fd334d2466257b5d83e8cb03187d5084aed89" translate="yes" xml:space="preserve">
          <source>If the match succeeds, the result is the first matching group if any groups are defined, or an empty Sequence otherwise.</source>
          <target state="translated">マッチに成功した場合、グループが定義されている場合は最初にマッチしたグループ、そうでない場合は空のシーケンスが結果となります。</target>
        </trans-unit>
        <trans-unit id="3b980c34502cd5a984bca4626505576308992efc" translate="yes" xml:space="preserve">
          <source>If the original &lt;code&gt;Future&lt;/code&gt; is successful, the returned &lt;code&gt;Future&lt;/code&gt; is failed with a &lt;code&gt;NoSuchElementException&lt;/code&gt;.</source>
          <target state="translated">元の &lt;code&gt;Future&lt;/code&gt; が成功した場合、返された &lt;code&gt;Future&lt;/code&gt; は &lt;code&gt;NoSuchElementException&lt;/code&gt; で失敗します。</target>
        </trans-unit>
        <trans-unit id="716440b8d9fe0aa756c4e2972ed7b2de7237f850" translate="yes" xml:space="preserve">
          <source>If the promise has already been completed returns &lt;code&gt;false&lt;/code&gt;, or &lt;code&gt;true&lt;/code&gt; otherwise.</source>
          <target state="translated">promiseがすでに完了している場合は &lt;code&gt;false&lt;/code&gt; を返し、それ以外の場合は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="99ced6d1428236101c6add46e6d35bd1a68cb1df" translate="yes" xml:space="preserve">
          <source>If the remapping function returns &lt;code&gt;Some(v)&lt;/code&gt;, the mapping is updated with the new value &lt;code&gt;v&lt;/code&gt;. If the remapping function returns &lt;code&gt;None&lt;/code&gt;, the mapping is removed (or remains absent if initially absent). If the function itself throws an exception, the exception is rethrown, and the current mapping is left unchanged.</source>
          <target state="translated">再マッピング関数が &lt;code&gt;Some(v)&lt;/code&gt; を返す場合、マッピングは新しい値 &lt;code&gt;v&lt;/code&gt; で更新されます。再マッピング関数が &lt;code&gt;None&lt;/code&gt; を返す場合、マッピングは削除されます（または最初に存在しない場合は存在しません）。関数自体が例外をスローすると、例外が再スローされ、現在のマッピングは変更されません。</target>
        </trans-unit>
        <trans-unit id="f9103af0d05238dc3a5d6e60ef438e14cee83ff1" translate="yes" xml:space="preserve">
          <source>If the runtime type of the function is a &lt;code&gt;PartialFunction&lt;/code&gt; then the other &lt;code&gt;andThen&lt;/code&gt; method is used (note its cautions).</source>
          <target state="translated">関数の実行時の型が &lt;code&gt;PartialFunction&lt;/code&gt; の場合、他の &lt;code&gt;andThen&lt;/code&gt; メソッドが使用されます（その注意に注意してください）。</target>
        </trans-unit>
        <trans-unit id="5ca16f6611b76d3f22919da2651356fe2484d439" translate="yes" xml:space="preserve">
          <source>If the separator character is a surrogate character, only split on matching surrogate characters if they are not part of a surrogate pair</source>
          <target state="translated">分離文字がサロゲート文字の場合、サロゲート文字がサロゲートペアに含まれていない場合は、一致するサロゲート文字でのみ分割します。</target>
        </trans-unit>
        <trans-unit id="f71f3cd127e492fed46d4408e8ff91e1d5db07a4" translate="yes" xml:space="preserve">
          <source>If the specified key is not already in the map, computes its value using the given thunk &lt;code&gt;op&lt;/code&gt; and enters it into the map.</source>
          <target state="translated">指定されたキーがマップに存在しない場合には、与えられたサンク使用してその値を計算 &lt;code&gt;op&lt;/code&gt; 、マップに入力します。</target>
        </trans-unit>
        <trans-unit id="88bea0a4c4222335dd9affcd492284db09320d25" translate="yes" xml:space="preserve">
          <source>If the specified mapping function throws an exception, that exception is rethrown.</source>
          <target state="translated">指定されたマッピング関数が例外をスローした場合は、その例外が再スローされます。</target>
        </trans-unit>
        <trans-unit id="b15a21ebf904fa1380fb9f658962f762f208df64" translate="yes" xml:space="preserve">
          <source>If the wrapped map is synchronized (e.g. from &lt;code&gt;java.util.Collections.synchronizedMap&lt;/code&gt;), it is your responsibility to wrap all non-atomic operations with &lt;code&gt;underlying.synchronized&lt;/code&gt;. This includes &lt;code&gt;get&lt;/code&gt;, as &lt;code&gt;java.util.Map&lt;/code&gt;'s API does not allow for an atomic &lt;code&gt;get&lt;/code&gt; when &lt;code&gt;null&lt;/code&gt; values may be present.</source>
          <target state="translated">ラップされたマップが同期されている場合（たとえば、 &lt;code&gt;java.util.Collections.synchronizedMap&lt;/code&gt; から）、非アトミックな操作をすべて、 &lt;code&gt;underlying.synchronized&lt;/code&gt; .synchronizedでラップするのはユーザーの責任です。 &lt;code&gt;null&lt;/code&gt; 値が存在する可能性がある場合、 &lt;code&gt;java.util.Map&lt;/code&gt; のAPIはアトミックな &lt;code&gt;get&lt;/code&gt; を許可しない &lt;code&gt;get&lt;/code&gt; 、これにはgetが含まれます。</target>
        </trans-unit>
        <trans-unit id="2cc6716f7f5cf20aaad5a795544741a29697690f" translate="yes" xml:space="preserve">
          <source>If there is no match, or if this future contains a valid result then the new future will contain the same result.</source>
          <target state="translated">一致するものがない場合、またはこの未来に有効な結果が含まれている場合は、新しい未来にも同じ結果が含まれます。</target>
        </trans-unit>
        <trans-unit id="c5ee27a5a1382a0a578ebc3ffe21cb980f20f7ef" translate="yes" xml:space="preserve">
          <source>If this annotation is present on a method or its enclosing class, the strictfp flag will be emitted.</source>
          <target state="translated">このアノテーションがメソッドやそれを囲むクラスに存在する場合は、 strictfp フラグが発行されます。</target>
        </trans-unit>
        <trans-unit id="30e8e3e9df0d45139f3a89a0c125629a7ac9d62d" translate="yes" xml:space="preserve">
          <source>If this instance is a &lt;code&gt;Left[Either[C, B]]&lt;/code&gt; then the contained &lt;code&gt;Either[C, B]&lt;/code&gt; will be returned, otherwise this value will be returned unmodified.</source>
          <target state="translated">このインスタンスが &lt;code&gt;Left[Either[C, B]]&lt;/code&gt; 場合、含まれている &lt;code&gt;Either[C, B]&lt;/code&gt; が返されます。それ以外の場合、この値は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="ab7d13d37f716ae0fad949dc57381d888bd6749a" translate="yes" xml:space="preserve">
          <source>If this instance is a &lt;code&gt;Right[Either[A, C]]&lt;/code&gt; then the contained &lt;code&gt;Either[A, C]&lt;/code&gt; will be returned, otherwise this value will be returned unmodified.</source>
          <target state="translated">このインスタンスが &lt;code&gt;Right[Either[A, C]]&lt;/code&gt; 場合、含まれている &lt;code&gt;Either[A, C]&lt;/code&gt; が返されます。それ以外の場合、この値は変更されずに返されます。</target>
        </trans-unit>
        <trans-unit id="a933cfa38d0216e5e2aec0ee044dda9e5f236d72" translate="yes" xml:space="preserve">
          <source>If this is a &lt;code&gt;Left&lt;/code&gt;, then return the left value in &lt;code&gt;Right&lt;/code&gt; or vice versa.</source>
          <target state="translated">これが &lt;code&gt;Left&lt;/code&gt; の場合、Leftの値を &lt;code&gt;Right&lt;/code&gt; またはその逆で返します。</target>
        </trans-unit>
        <trans-unit id="ed7d1149d93ff5852ff3089f71ea59f01851a8de" translate="yes" xml:space="preserve">
          <source>If this is set, resize the internal representation to reclaim space once in a while</source>
          <target state="translated">これが設定されている場合は、内部表現のサイズを変更して、たまにスペースを確保します。</target>
        </trans-unit>
        <trans-unit id="6a1c4f4a99f443e19f342b3e884785ec0d478660" translate="yes" xml:space="preserve">
          <source>If this string is not the empty string, returns an array containing the substrings terminated by the start of the string, the end of the string or the separator character, excluding empty trailing substrings</source>
          <target state="translated">この文字列が空の文字列でない場合、文字列の先頭、文字列の末尾、あるいは区切り文字で終わる部分文字列を含む配列を返します。</target>
        </trans-unit>
        <trans-unit id="eec6aee0504a67e2895c02ad7596fe8c116e61d4" translate="yes" xml:space="preserve">
          <source>If this string is the empty string, returns an array of strings that contains a single empty string.</source>
          <target state="translated">この文字列が空文字列の場合、1つの空文字列を含む文字列の配列を返します。</target>
        </trans-unit>
        <trans-unit id="8ff265e3ec8d97214bee668d30418583002fe0d3" translate="yes" xml:space="preserve">
          <source>If this was the last value assigned to the specified key, the set assigned to that key will be removed as well.</source>
          <target state="translated">これが指定されたキーに割り当てられた最後の値であった場合、そのキーに割り当てられたセットも削除されます。</target>
        </trans-unit>
        <trans-unit id="9bcd8de05f095975a247481b588a0022eae18442" translate="yes" xml:space="preserve">
          <source>If two exceptions are thrown (e.g., by an operation and closing a resource), one of them is re-thrown, and the other is &lt;span name=&quot;java.lang.Throwable.addSuppressed(Throwable)&quot;&gt;added to it as a suppressed exception&lt;/span&gt;. If the two exceptions are of different 'severities' (see below), the one of a higher severity is re-thrown, and the one of a lower severity is added to it as a suppressed exception. If the two exceptions are of the same severity, the one thrown first is re-thrown, and the one thrown second is added to it as a suppressed exception. If an exception is a &lt;a href=&quot;control/controlthrowable&quot; id=&quot;scala.util.control.ControlThrowable&quot; name=&quot;scala.util.control.ControlThrowable&quot;&gt;&lt;code&gt;ControlThrowable&lt;/code&gt;&lt;/a&gt;, or if it does not support suppression (see &lt;span name=&quot;java.lang.Throwable&quot;&gt;&lt;code&gt;Throwable&lt;/code&gt;'s constructor with an &lt;code&gt;enableSuppression&lt;/code&gt; parameter&lt;/span&gt;), an exception that would have been suppressed is instead discarded.</source>
          <target state="translated">2つの例外がスローされた場合（たとえば、操作とリソースを閉じることにより）、それらの1つが再スローされ、もう1つは&lt;span name=&quot;java.lang.Throwable.addSuppressed(Throwable)&quot;&gt;抑制された例外として追加されます&lt;/span&gt;。 2つの例外の「重大度」が異なる場合（下記を参照）、重大度の高い方が再スローされ、重大度の低い方が抑制された例外として追加されます。 2つの例外の重大度が同じである場合、最初にスローされた例外が再スローされ、2番目にスローされた例外が抑制例外として追加されます。例外が&lt;a href=&quot;control/controlthrowable&quot; id=&quot;scala.util.control.ControlThrowable&quot; name=&quot;scala.util.control.ControlThrowable&quot;&gt; &lt;code&gt;ControlThrowable&lt;/code&gt; &lt;/a&gt;である場合、または抑制がサポートされていない場合（&lt;span name=&quot;java.lang.Throwable&quot;&gt; &lt;code&gt;enableSuppression&lt;/code&gt; &lt;/span&gt;&lt;span name=&quot;java.lang.Throwable&quot;&gt;パラメーターを指定&lt;/span&gt;&lt;span name=&quot;java.lang.Throwable&quot;&gt;した&lt;/span&gt;&lt;span name=&quot;java.lang.Throwable&quot;&gt; &lt;code&gt;Throwable&lt;/code&gt; のコンストラクターを&lt;/span&gt;参照）、抑制されたはずの例外は代わりに破棄されます。</target>
        </trans-unit>
        <trans-unit id="7bd80b2758d5a5a690bea7a57701e95ce0416218" translate="yes" xml:space="preserve">
          <source>If using resources which require an implicit &lt;code&gt;Manager&lt;/code&gt; as a parameter, this method should be invoked with an &lt;code&gt;implicit&lt;/code&gt; modifier before the function parameter:</source>
          <target state="translated">暗黙的な &lt;code&gt;Manager&lt;/code&gt; をパラメーターとして必要とするリソースを使用する場合、このメソッドは関数パラメーターの前に &lt;code&gt;implicit&lt;/code&gt; 修飾子を付けて呼び出す必要があります。</target>
        </trans-unit>
        <trans-unit id="dc73781d07cfa030642805d1d4c92552e311aa30" translate="yes" xml:space="preserve">
          <source>If you need to manage multiple resources, &lt;code&gt;Using.Manager&lt;/code&gt; should be used. It allows the managing of arbitrarily many resources, whose creation, use, and release are all wrapped in a &lt;code&gt;Try&lt;/code&gt;.</source>
          <target state="translated">複数のリソースを管理する必要がある場合は、 &lt;code&gt;Using.Manager&lt;/code&gt; を使用する必要があります。これにより、作成、使用、リリースがすべて &lt;code&gt;Try&lt;/code&gt; にラップされた、多数のリソースを任意に管理できます。</target>
        </trans-unit>
        <trans-unit id="a94dfa3c8f72587e2be839ed9097b0475766773b" translate="yes" xml:space="preserve">
          <source>If you override this method, you should verify that your implementation remains an equivalence relation. Additionally, when overriding this method it is usually necessary to override &lt;code&gt;hashCode&lt;/code&gt; to ensure that objects which are &quot;equal&quot; (&lt;code&gt;o1.equals(o2)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;) hash to the same &lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt;. (&lt;code&gt;o1.hashCode.equals(o2.hashCode)&lt;/code&gt;).</source>
          <target state="translated">このメソッドをオーバーライドする場合は、実装が等価関係のままであることを確認する必要があります。このメソッドをオーバーライドする場合に加えて、オーバーライドすることが通常必要である &lt;code&gt;hashCode&lt;/code&gt; 「等しい」であるオブジェクト（ことを保証するために &lt;code&gt;o1.equals(o2)&lt;/code&gt; 返し &lt;code&gt;true&lt;/code&gt; 同じにハッシュ）&lt;a href=&quot;../../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt;。（ &lt;code&gt;o1.hashCode.equals(o2.hashCode)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="3d439447f71fe000d523151cda8e7e7be522c312" translate="yes" xml:space="preserve">
          <source>If you override this method, you should verify that your implementation remains an equivalence relation. Additionally, when overriding this method it is usually necessary to override &lt;code&gt;hashCode&lt;/code&gt; to ensure that objects which are &quot;equal&quot; (&lt;code&gt;o1.equals(o2)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;) hash to the same &lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt;. (&lt;code&gt;o1.hashCode.equals(o2.hashCode)&lt;/code&gt;).</source>
          <target state="translated">このメソッドをオーバーライドする場合は、実装が等価関係のままであることを確認する必要があります。このメソッドをオーバーライドする場合に加えて、オーバーライドすることが通常必要である &lt;code&gt;hashCode&lt;/code&gt; 「等しい」であるオブジェクト（ことを保証するために &lt;code&gt;o1.equals(o2)&lt;/code&gt; 返し &lt;code&gt;true&lt;/code&gt; 同じにハッシュ）&lt;a href=&quot;../int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt;。（ &lt;code&gt;o1.hashCode.equals(o2.hashCode)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="0cc525554fa5d9e674b382c28ea29fc10b69d840" translate="yes" xml:space="preserve">
          <source>If you override this method, you should verify that your implementation remains an equivalence relation. Additionally, when overriding this method it is usually necessary to override &lt;code&gt;hashCode&lt;/code&gt; to ensure that objects which are &quot;equal&quot; (&lt;code&gt;o1.equals(o2)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;) hash to the same &lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt;. (&lt;code&gt;o1.hashCode.equals(o2.hashCode)&lt;/code&gt;).</source>
          <target state="translated">このメソッドをオーバーライドする場合は、実装が等価関係のままであることを確認する必要があります。このメソッドをオーバーライドする場合に加えて、オーバーライドすることが通常必要である &lt;code&gt;hashCode&lt;/code&gt; 「等しい」であるオブジェクト（ことを保証するために &lt;code&gt;o1.equals(o2)&lt;/code&gt; 返し &lt;code&gt;true&lt;/code&gt; 同じにハッシュ）&lt;a href=&quot;int&quot; id=&quot;scala.Int&quot; name=&quot;scala.Int&quot;&gt;scala.Int&lt;/a&gt;。（ &lt;code&gt;o1.hashCode.equals(o2.hashCode)&lt;/code&gt; ）。</target>
        </trans-unit>
        <trans-unit id="53b4cf6723a117c145beab682140c88031d87129" translate="yes" xml:space="preserve">
          <source>If you wish to avoid wrapping management and operations in a &lt;code&gt;Try&lt;/code&gt;, you can use &lt;a href=&quot;#resource%5BR,A%5D(resource:R)(body:R=&amp;gt;A)(implicitreleasable:scala.util.Using.Releasable%5BR%5D):A&quot; id=&quot;scala.util.Using#resource&quot; name=&quot;scala.util.Using#resource&quot;&gt;&lt;code&gt;Using.resource&lt;/code&gt;&lt;/a&gt;, which throws any exceptions that occur.</source>
          <target state="translated">&lt;code&gt;Try&lt;/code&gt; での管理と操作のラップを避けたい場合は、発生する例外をスローする&lt;a href=&quot;#resource%5BR,A%5D(resource:R)(body:R=&amp;gt;A)(implicitreleasable:scala.util.Using.Releasable%5BR%5D):A&quot; id=&quot;scala.util.Using#resource&quot; name=&quot;scala.util.Using#resource&quot;&gt; &lt;code&gt;Using.resource&lt;/code&gt; &lt;/a&gt;を使用できます。</target>
        </trans-unit>
        <trans-unit id="33458befdd0c399d8384c0bbad09d998f2183006" translate="yes" xml:space="preserve">
          <source>If you wish to avoid wrapping management and operations in a &lt;code&gt;Try&lt;/code&gt;, you can use &lt;code&gt;Using.resource&lt;/code&gt;, which throws any exceptions that occur.</source>
          <target state="translated">&lt;code&gt;Try&lt;/code&gt; での管理と操作のラップを避けたい場合は、発生する例外をスローする &lt;code&gt;Using.resource&lt;/code&gt; を使用できます。</target>
        </trans-unit>
        <trans-unit id="c496cf10da1039df904c73a78c7ae94052410340" translate="yes" xml:space="preserve">
          <source>If your application does not define an ExecutionContext elsewhere,</source>
          <target state="translated">アプリケーションが他の場所で ExecutionContext を定義していない場合。</target>
        </trans-unit>
        <trans-unit id="432f1fb7a5fc4881e42bd92086bd03895a27dbb0" translate="yes" xml:space="preserve">
          <source>ImmutableBuilder</source>
          <target state="translated">ImmutableBuilder</target>
        </trans-unit>
        <trans-unit id="eb4933016a9d39767f9038ec70d91580931e1e15" translate="yes" xml:space="preserve">
          <source>ImmutableBuilder.ImmutableBuilder()</source>
          <target state="translated">ImmutableBuilder.ImmutableBuilder()</target>
        </trans-unit>
        <trans-unit id="4a261bc251a4158d8810745b0dcfea7ea7427d59" translate="yes" xml:space="preserve">
          <source>ImmutableBuilder.clear()</source>
          <target state="translated">ImmutableBuilder.clear()</target>
        </trans-unit>
        <trans-unit id="10399dd85e0fa025055dc853de6eee89453e19f7" translate="yes" xml:space="preserve">
          <source>ImmutableBuilder.elems()</source>
          <target state="translated">ImmutableBuilder.elems()</target>
        </trans-unit>
        <trans-unit id="dc3ff87d1e3e0db8a5c0842493b8e9593b3e8b6b" translate="yes" xml:space="preserve">
          <source>ImmutableBuilder.knownSize()</source>
          <target state="translated">ImmutableBuilder.knownSize()</target>
        </trans-unit>
        <trans-unit id="aa6b73d09aaecff033578be631fa0cf110946f14" translate="yes" xml:space="preserve">
          <source>ImmutableBuilder.result()</source>
          <target state="translated">ImmutableBuilder.result()</target>
        </trans-unit>
        <trans-unit id="17cde21598f8cab463f0432515dd6db3f8bc28bb" translate="yes" xml:space="preserve">
          <source>ImmutableBuilder.scala</source>
          <target state="translated">ImmutableBuilder.scala</target>
        </trans-unit>
        <trans-unit id="5aa5e7797d43e6df4551074c546601b400af2544" translate="yes" xml:space="preserve">
          <source>Implement this method to determine how instances of A will be sorted.</source>
          <target state="translated">A のインスタンスがどのようにソートされるかを決定するために、このメソッドを実装します。</target>
        </trans-unit>
        <trans-unit id="e8968ede2b3f7cf587e5744c5eb7c27730379940" translate="yes" xml:space="preserve">
          <source>Implementation classes of BitSet should not be accessed directly</source>
          <target state="translated">BitSetの実装クラスに直接アクセスしてはいけない</target>
        </trans-unit>
        <trans-unit id="c4d216d3bd2ae0f933c52181b02fddd36fbf42d9" translate="yes" xml:space="preserve">
          <source>Implementations overriding this method MUST override &lt;a href=&quot;#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering#isReverseOf&quot; name=&quot;scala.math.Ordering#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt; as well if they change the behavior at all (for example, caching does not require overriding it).</source>
          <target state="translated">このメソッドをオーバーライドする実装は、動作をまったく変更する場合（たとえば、キャッシングでオーバーライドする必要がない場合）、&lt;a href=&quot;#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering#isReverseOf&quot; name=&quot;scala.math.Ordering#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt;もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="fe56f3f8b40120b72d8751686abded297e2027cd" translate="yes" xml:space="preserve">
          <source>Implementations overriding this method MUST override &lt;a href=&quot;#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering.CachedReverse#isReverseOf&quot; name=&quot;scala.math.Ordering.CachedReverse#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt; as well if they change the behavior at all (for example, caching does not require overriding it).</source>
          <target state="translated">このメソッドをオーバーライドする実装は、動作をまったく変更する場合（たとえば、キャッシングでオーバーライドする必要がない場合）、&lt;a href=&quot;#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering.CachedReverse#isReverseOf&quot; name=&quot;scala.math.Ordering.CachedReverse#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt;もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="77a24ae2d3e104454d3b48b247f073a3568d0d5f" translate="yes" xml:space="preserve">
          <source>Implementations overriding this method MUST override &lt;a href=&quot;../../math/ordering#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering#isReverseOf&quot; name=&quot;scala.math.Ordering#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt; as well if they change the behavior at all (for example, caching does not require overriding it).</source>
          <target state="translated">このメソッドをオーバーライドする実装は、動作をまったく変更する場合（たとえば、キャッシングでオーバーライドする必要がない場合）、&lt;a href=&quot;../../math/ordering#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering#isReverseOf&quot; name=&quot;scala.math.Ordering#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt;もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="5687b9ce7d6f6a8a402a8c25e40d33191937fb78" translate="yes" xml:space="preserve">
          <source>Implementations overriding this method MUST override &lt;a href=&quot;math/ordering#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering#isReverseOf&quot; name=&quot;scala.math.Ordering#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt; as well if they change the behavior at all (for example, caching does not require overriding it).</source>
          <target state="translated">このメソッドをオーバーライドする実装は、動作をまったく変更する場合（たとえば、キャッシングでオーバーライドする必要がない場合）、&lt;a href=&quot;math/ordering#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering#isReverseOf&quot; name=&quot;scala.math.Ordering#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt;もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="4f6ac2bce703249be2eff226dd579b21198448e4" translate="yes" xml:space="preserve">
          <source>Implementations overriding this method MUST override &lt;a href=&quot;ordering#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering#isReverseOf&quot; name=&quot;scala.math.Ordering#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt; as well if they change the behavior at all (for example, caching does not require overriding it).</source>
          <target state="translated">このメソッドをオーバーライドする実装は、動作をまったく変更する場合（たとえば、キャッシングでオーバーライドする必要がない場合）、&lt;a href=&quot;ordering#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering#isReverseOf&quot; name=&quot;scala.math.Ordering#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt;もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="20cb31cc61428a44efbe5fbef78ed5fc8f9ea375" translate="yes" xml:space="preserve">
          <source>Implementations overriding this method MUST override &lt;a href=&quot;ordering%24%24cachedreverse#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering.CachedReverse#isReverseOf&quot; name=&quot;scala.math.Ordering.CachedReverse#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt; as well if they change the behavior at all (for example, caching does not require overriding it).</source>
          <target state="translated">このメソッドをオーバーライドする実装は、動作をまったく変更する場合（たとえば、キャッシングでオーバーライドする必要がない場合）、&lt;a href=&quot;ordering%24%24cachedreverse#isReverseOf(other:scala.math.Ordering%5B_%5D):Boolean&quot; id=&quot;scala.math.Ordering.CachedReverse#isReverseOf&quot; name=&quot;scala.math.Ordering.CachedReverse#isReverseOf&quot;&gt;isReverseOf&lt;/a&gt;もオーバーライドする必要があります。</target>
        </trans-unit>
        <trans-unit id="f394f4b2649b82f4f21c4c7434e05bb907eacb56" translate="yes" xml:space="preserve">
          <source>Implementations should only override this method if they are overriding &lt;a href=&quot;#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering#reverse&quot; name=&quot;scala.math.Ordering#reverse&quot;&gt;reverse&lt;/a&gt; as well.</source>
          <target state="translated">実装がこのメソッドをオーバーライドするのは、&lt;a href=&quot;#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering#reverse&quot; name=&quot;scala.math.Ordering#reverse&quot;&gt;リバース&lt;/a&gt;もオーバーライドしている場合のみです。</target>
        </trans-unit>
        <trans-unit id="86c732cc79794b0b15caa94758c92299820ede3c" translate="yes" xml:space="preserve">
          <source>Implementations should only override this method if they are overriding &lt;a href=&quot;#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering.CachedReverse#reverse&quot; name=&quot;scala.math.Ordering.CachedReverse#reverse&quot;&gt;reverse&lt;/a&gt; as well.</source>
          <target state="translated">実装がこのメソッドをオーバーライドするのは、&lt;a href=&quot;#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering.CachedReverse#reverse&quot; name=&quot;scala.math.Ordering.CachedReverse#reverse&quot;&gt;リバース&lt;/a&gt;もオーバーライドしている場合のみです。</target>
        </trans-unit>
        <trans-unit id="fdfa9b7ab5af5c874b1b5ccf315e296d1a43f27c" translate="yes" xml:space="preserve">
          <source>Implementations should only override this method if they are overriding &lt;a href=&quot;../../math/ordering#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering#reverse&quot; name=&quot;scala.math.Ordering#reverse&quot;&gt;reverse&lt;/a&gt; as well.</source>
          <target state="translated">実装がこのメソッドをオーバーライドするのは、&lt;a href=&quot;../../math/ordering#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering#reverse&quot; name=&quot;scala.math.Ordering#reverse&quot;&gt;リバース&lt;/a&gt;もオーバーライドしている場合のみです。</target>
        </trans-unit>
        <trans-unit id="4120faa5ae34fcc4fa9c96435049c7cd623e36a8" translate="yes" xml:space="preserve">
          <source>Implementations should only override this method if they are overriding &lt;a href=&quot;math/ordering#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering#reverse&quot; name=&quot;scala.math.Ordering#reverse&quot;&gt;reverse&lt;/a&gt; as well.</source>
          <target state="translated">実装がこのメソッドをオーバーライドするのは、&lt;a href=&quot;math/ordering#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering#reverse&quot; name=&quot;scala.math.Ordering#reverse&quot;&gt;リバース&lt;/a&gt;もオーバーライドしている場合のみです。</target>
        </trans-unit>
        <trans-unit id="782b533ab0f2845cd11d1ecaec7ac03024ab2bb8" translate="yes" xml:space="preserve">
          <source>Implementations should only override this method if they are overriding &lt;a href=&quot;ordering#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering#reverse&quot; name=&quot;scala.math.Ordering#reverse&quot;&gt;reverse&lt;/a&gt; as well.</source>
          <target state="translated">実装がこのメソッドをオーバーライドするのは、&lt;a href=&quot;ordering#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering#reverse&quot; name=&quot;scala.math.Ordering#reverse&quot;&gt;リバース&lt;/a&gt;もオーバーライドしている場合のみです。</target>
        </trans-unit>
        <trans-unit id="b82614c679ef89dc7acb7aa9b8af61d053c22ee2" translate="yes" xml:space="preserve">
          <source>Implementations should only override this method if they are overriding &lt;a href=&quot;ordering%24%24cachedreverse#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering.CachedReverse#reverse&quot; name=&quot;scala.math.Ordering.CachedReverse#reverse&quot;&gt;reverse&lt;/a&gt; as well.</source>
          <target state="translated">実装がこのメソッドをオーバーライドするのは、&lt;a href=&quot;ordering%24%24cachedreverse#reverse:scala.math.Ordering%5BT%5D&quot; id=&quot;scala.math.Ordering.CachedReverse#reverse&quot; name=&quot;scala.math.Ordering.CachedReverse#reverse&quot;&gt;リバース&lt;/a&gt;もオーバーライドしている場合のみです。</target>
        </trans-unit>
        <trans-unit id="76316d010cde2bf13fbb688c9cc43af9e7bd4c35" translate="yes" xml:space="preserve">
          <source>Implemented here to avoid the implicit conversion to Iterable.</source>
          <target state="translated">ここでは、Iterableへの暗黙の変換を避けるために実装されています。</target>
        </trans-unit>
        <trans-unit id="03d4fa75790973911179998095256322d3b3d24c" translate="yes" xml:space="preserve">
          <source>Implementing &lt;code&gt;IsIterable&lt;/code&gt; for New Types</source>
          <target state="translated">新しい型の &lt;code&gt;IsIterable&lt;/code&gt; の実装</target>
        </trans-unit>
        <trans-unit id="924c61c28cc5ecc8bf92f302424aa388207fda55" translate="yes" xml:space="preserve">
          <source>Implements functionality for printing Scala values on the terminal. For reading values use &lt;a href=&quot;io/stdin%24&quot; id=&quot;scala.io.StdIn&quot; name=&quot;scala.io.StdIn&quot;&gt;StdIn&lt;/a&gt;. Also defines constants for marking up text on ANSI terminals.</source>
          <target state="translated">端末にScala値を出力する機能を実装します。値を読み取るには&lt;a href=&quot;io/stdin%24&quot; id=&quot;scala.io.StdIn&quot; name=&quot;scala.io.StdIn&quot;&gt;StdInを&lt;/a&gt;使用します。ANSI端末でテキストをマークアップするための定数も定義します。</target>
        </trans-unit>
        <trans-unit id="de1466e8b620eab074ba418526ca829845be2a73" translate="yes" xml:space="preserve">
          <source>Implicit</source>
          <target state="translated">Implicit</target>
        </trans-unit>
        <trans-unit id="65a63aa075b83c2fd9eb74a28a95e05ff02e65a6" translate="yes" xml:space="preserve">
          <source>Implicit Conversions</source>
          <target state="translated">暗黙の変換</target>
        </trans-unit>
        <trans-unit id="412d71e0abc0442acc1b39f345388a3d2e6f3c95" translate="yes" xml:space="preserve">
          <source>Implicit classes and implicit values of other types are not governed by this language feature.</source>
          <target state="translated">他の型の暗黙のクラスや暗黙の値は、この言語機能には支配されません。</target>
        </trans-unit>
        <trans-unit id="c4dd279d5f57bef6c6d0b6c0493af86bca5d9d4b" translate="yes" xml:space="preserve">
          <source>Implicit conversion that fixes the key and value types of &lt;code&gt;factory&lt;/code&gt; to &lt;code&gt;K&lt;/code&gt; and &lt;code&gt;V&lt;/code&gt;, respectively.</source>
          <target state="translated">暗黙的な変換の修正キーと値の種類その &lt;code&gt;factory&lt;/code&gt; に &lt;code&gt;K&lt;/code&gt; 及び &lt;code&gt;V&lt;/code&gt; はそれぞれ、。</target>
        </trans-unit>
        <trans-unit id="95472608f6f94e57812f08c396584e3d87bc6703" translate="yes" xml:space="preserve">
          <source>Implicit injection of + is deprecated. Convert to String to call +</source>
          <target state="translated">の暗黙の注入は非推奨です。を呼び出すためにStringに変換します。</target>
        </trans-unit>
        <trans-unit id="a41c8e54bc6b90e373dd4c0c0cd79ccc77589a1a" translate="yes" xml:space="preserve">
          <source>ImplicitConversions$</source>
          <target state="translated">ImplicitConversions$</target>
        </trans-unit>
        <trans-unit id="6d72f4da10e8df82c969bd0fdffa5da65d5a8ec8" translate="yes" xml:space="preserve">
          <source>ImplicitConversions.scala</source>
          <target state="translated">ImplicitConversions.scala</target>
        </trans-unit>
        <trans-unit id="255f5865331efe1ee01f8c8c3351c4ecceb6140c" translate="yes" xml:space="preserve">
          <source>ImplicitConversionsToJava$</source>
          <target state="translated">ImplicitConversionsToJava$</target>
        </trans-unit>
        <trans-unit id="2fed63a1f4f33fe4fb96e2e5d3dc0425e450b715" translate="yes" xml:space="preserve">
          <source>ImplicitConversionsToScala$</source>
          <target state="translated">ImplicitConversionsToScala$</target>
        </trans-unit>
        <trans-unit id="1d9e861864ec970dbf09bd739ea2dff579f3293c" translate="yes" xml:space="preserve">
          <source>Implicitly convert a &lt;code&gt;String&lt;/code&gt; into a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; を暗黙的に&lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilderに&lt;/a&gt;変換します。</target>
        </trans-unit>
        <trans-unit id="0d2c02c56657dc2dd5cd7164618a28c968826cf5" translate="yes" xml:space="preserve">
          <source>Implicitly convert a &lt;code&gt;java.io.File&lt;/code&gt; into a &lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;scala.sys.process.ProcessBuilder.FileBuilder&lt;/a&gt;, which can be used as either input or output of a process. For example:</source>
          <target state="translated">&lt;code&gt;java.io.File&lt;/code&gt; を暗黙的に&lt;a href=&quot;processbuilder%24%24filebuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.FileBuilder&quot;&gt;scala.sys.process.ProcessBuilder.FileBuilderに&lt;/a&gt;変換します。これは、プロセスの入力または出力として使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="08f6cad1c08f1016f72b84eeae30142192b02e4c" translate="yes" xml:space="preserve">
          <source>Implicitly convert a &lt;code&gt;java.lang.ProcessBuilder&lt;/code&gt; into a Scala one.</source>
          <target state="translated">&lt;code&gt;java.lang.ProcessBuilder&lt;/code&gt; を暗黙的にScalaに変換します。</target>
        </trans-unit>
        <trans-unit id="b6934d6d01ef4a812d10ccc69f8ada71c8759868" translate="yes" xml:space="preserve">
          <source>Implicitly convert a &lt;code&gt;java.net.URL&lt;/code&gt; into a &lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;scala.sys.process.ProcessBuilder.URLBuilder&lt;/a&gt; , which can be used as input to a process. For example:</source>
          <target state="translated">&lt;code&gt;java.net.URL&lt;/code&gt; を暗黙的に&lt;a href=&quot;processbuilder%24%24urlbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder.URLBuilder&quot;&gt;scala.sys.process.ProcessBuilder.URLBuilderに&lt;/a&gt;変換します。これは、プロセスへの入力として使用できます。例えば：</target>
        </trans-unit>
        <trans-unit id="747ddc5745f8e1927ef4b0178d8f32ba571192fc" translate="yes" xml:space="preserve">
          <source>Implicitly convert a sequence of &lt;code&gt;String&lt;/code&gt; into a &lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt;. The first argument will be taken to be the command to be executed, and the remaining will be its arguments. When using this, arguments may contain spaces.</source>
          <target state="translated">暗黙的に、一連の変換 &lt;code&gt;String&lt;/code&gt; に&lt;a href=&quot;processbuilder&quot; id=&quot;scala.sys.process.ProcessBuilder&quot; name=&quot;scala.sys.process.ProcessBuilder&quot;&gt;scala.sys.process.ProcessBuilder&lt;/a&gt;。最初の引数は実行されるコマンドと見なされ、残りはその引数になります。これを使用する場合、引数にスペースを含めることができます。</target>
        </trans-unit>
        <trans-unit id="7cb65cbd36574bd7bbe3ac72a2ee4eb2547f70cf" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;Collection&lt;/code&gt; to an Scala &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Collection&lt;/code&gt; を暗黙的にScala &lt;code&gt;Iterable&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="e6733d4fa2dc5260242abbe0aecf1c3adb0b3291" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;ConcurrentMap&lt;/code&gt; to a Scala mutable &lt;code&gt;ConcurrentMap&lt;/code&gt;.</source>
          <target state="translated">Javaの &lt;code&gt;ConcurrentMap&lt;/code&gt; を暗黙的にScalaの可変の &lt;code&gt;ConcurrentMap&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="c35211cd3f14eff23172752bc0924980f1a1e903" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;Dictionary&lt;/code&gt; to a Scala mutable &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Dictionary&lt;/code&gt; を暗黙的にScala可変 &lt;code&gt;Map&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="44cffaad5e48d5cb3bcb3621e31ef6325902c5b7" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;Enumeration&lt;/code&gt; to a Scala &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Enumeration&lt;/code&gt; を暗黙的にScala &lt;code&gt;Iterator&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="92714fd3b0e61c8d2e2a093b3bed84eee44d4033" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;Iterable&lt;/code&gt; to a Scala &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Iterable&lt;/code&gt; をScala &lt;code&gt;Iterable&lt;/code&gt; に暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="7fc2219753b5073db457bf28764c67f5f572c786" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;Iterator&lt;/code&gt; to a Scala &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Iterator&lt;/code&gt; を暗黙的にScala &lt;code&gt;Iterator&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="f5c43f6484c8ca84fd49fc0f130536f7af3948f0" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;List&lt;/code&gt; to a Scala mutable &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;List&lt;/code&gt; を暗黙的にScala可変 &lt;code&gt;Buffer&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="9d6bf7877da4f2a569c1d68bfb37f4b0bdb6971c" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;Map&lt;/code&gt; to a Scala mutable &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Map&lt;/code&gt; を暗黙的にScala可変 &lt;code&gt;Map&lt;/code&gt; に変換します。</target>
        </trans-unit>
        <trans-unit id="9e1ac2c0565efb1918e8bc100a154b8c7a5b9658" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;Properties&lt;/code&gt; to a Scala &lt;code&gt;mutable Map[String, String]&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Properties&lt;/code&gt; を暗黙的にScala &lt;code&gt;mutable Map[String, String]&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="70a046fd405630abee662754ddf9f9b5782df048" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Java &lt;code&gt;Set&lt;/code&gt; to a Scala mutable &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Set&lt;/code&gt; を暗黙的にScala可変 &lt;code&gt;Set&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="6d9f2804d72aa9b68f39b019e3f654651086a400" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala &lt;code&gt;Iterable&lt;/code&gt; to a Java &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Iterable&lt;/code&gt; をJava &lt;code&gt;Iterable&lt;/code&gt; に暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="f26b3301895d020f1b11cdef621491e2e53b3e65" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala &lt;code&gt;Iterable&lt;/code&gt; to an immutable Java &lt;code&gt;Collection&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Iterable&lt;/code&gt; を暗黙的に不変のJava &lt;code&gt;Collection&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="2e766b170e637f9b206d37db996d99e690a41764" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala &lt;code&gt;Iterator&lt;/code&gt; to a Java &lt;code&gt;Enumeration&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Iterator&lt;/code&gt; をJava &lt;code&gt;Enumeration&lt;/code&gt; 暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="2e2a61d931bcd20c691330a01ceffb0e30499483" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala &lt;code&gt;Iterator&lt;/code&gt; to a Java &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Iterator&lt;/code&gt; をJava &lt;code&gt;Iterator&lt;/code&gt; 暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="046fe988faa2154541a3b3b97f95447b08e9071d" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala &lt;code&gt;Map&lt;/code&gt; to a Java &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Map&lt;/code&gt; をJava &lt;code&gt;Map&lt;/code&gt; 暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="78612294e3c1568997a4a2853a70cfebb2afb103" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala &lt;code&gt;Seq&lt;/code&gt; to a Java &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Seq&lt;/code&gt; を暗黙的にJava &lt;code&gt;List&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="c20bba9d118de299835cc643d8bcb8e379ce8881" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala &lt;code&gt;Set&lt;/code&gt; to a Java &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Set&lt;/code&gt; をJava &lt;code&gt;Set&lt;/code&gt; 暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="e04c5a243a04c5e91244666dbc72610d4f83b31b" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala mutable &lt;code&gt;Buffer&lt;/code&gt; to a Java &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">Scalaの可変 &lt;code&gt;Buffer&lt;/code&gt; をJava &lt;code&gt;List&lt;/code&gt; 暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="fa8fb496bdc08a00b540d82328dcf92bd3d31bf2" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala mutable &lt;code&gt;Map&lt;/code&gt; to a Java &lt;code&gt;Dictionary&lt;/code&gt;.</source>
          <target state="translated">Scala可変 &lt;code&gt;Map&lt;/code&gt; をJava &lt;code&gt;Dictionary&lt;/code&gt; 暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="9d93a3fd4ead52fd88756f03310253354aff7749" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala mutable &lt;code&gt;Map&lt;/code&gt; to a Java &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">Scala可変 &lt;code&gt;Map&lt;/code&gt; をJava &lt;code&gt;Map&lt;/code&gt; 暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="139a91b9967e5643e542ae7fd0492f16553bb7b0" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala mutable &lt;code&gt;Seq&lt;/code&gt; to a Java &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">Scalaの可変 &lt;code&gt;Seq&lt;/code&gt; を暗黙的にJava &lt;code&gt;List&lt;/code&gt; 変換します。</target>
        </trans-unit>
        <trans-unit id="4dc00a465e50dd221357e232a156102e3c856d8c" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala mutable &lt;code&gt;Set&lt;/code&gt; to a Java &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">Scalaの可変 &lt;code&gt;Set&lt;/code&gt; をJava &lt;code&gt;Set&lt;/code&gt; 暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="699e6fbccf27aa4d1c6b595cbccc76c61ef91f42" translate="yes" xml:space="preserve">
          <source>Implicitly converts a Scala mutable &lt;code&gt;concurrent.Map&lt;/code&gt; to a Java &lt;code&gt;ConcurrentMap&lt;/code&gt;.</source>
          <target state="translated">Scalaの可変な &lt;code&gt;concurrent.Map&lt;/code&gt; をJavaの &lt;code&gt;ConcurrentMap&lt;/code&gt; に暗黙的に変換します。</target>
        </trans-unit>
        <trans-unit id="30a822a27ba203194ac3f244552eda650bf6b059" translate="yes" xml:space="preserve">
          <source>Implicits</source>
          <target state="translated">Implicits</target>
        </trans-unit>
        <trans-unit id="6886c2ee1bd3bace7580c72a0ac225220c8a0c22" translate="yes" xml:space="preserve">
          <source>Implicits are also provided for Int, Long and Double. Example usage:</source>
          <target state="translated">Int、Long、Doubleにもインプリシットが用意されています。使用例。</target>
        </trans-unit>
        <trans-unit id="b04923ab697a8f76dccd59e958769108f7427874" translate="yes" xml:space="preserve">
          <source>In a pattern match, &lt;code&gt;Regex&lt;/code&gt; normally matches the entire input. However, an unanchored &lt;code&gt;Regex&lt;/code&gt; finds the pattern anywhere in the input.</source>
          <target state="translated">パターン一致では、 &lt;code&gt;Regex&lt;/code&gt; は通常、入力全体と一致します。ただし、アンカーされていない正規 &lt;code&gt;Regex&lt;/code&gt; は、入力内の任意の場所でパターンを見つけます。</target>
        </trans-unit>
        <trans-unit id="5a5c50140e93e38ba35b52b0ca9a351af15ab941" translate="yes" xml:space="preserve">
          <source>In a perfect world, we would just remove the @deprecated annotation from &lt;code&gt;ClassManifest&lt;/code&gt; the object and then delete it in 2.11. After all, that object is explicitly marked as internal, so no one should use it. However a lot of existing libraries disregarded the Scaladoc that comes with &lt;code&gt;ClassManifest&lt;/code&gt;, so we need to somehow nudge them into migrating prior to removing stuff out of the blue. Hence we've introduced this design decision as the lesser of two evils.</source>
          <target state="translated">完全な世界では、@ Deprecatedアノテーションを &lt;code&gt;ClassManifest&lt;/code&gt; オブジェクトから削除し、2.11で削除します。結局、そのオブジェクトは明示的に内部としてマークされているため、誰もそれを使用するべきではありません。しかし、既存のライブラリの多くが付属していますScaladoc無視 &lt;code&gt;ClassManifest&lt;/code&gt; を我々は何とか前に青の外にものを取り除くへの移行にそれらを微調整する必要があるので、。したがって、この設計上の決定は2つの悪の小さい方として導入しました。</target>
        </trans-unit>
        <trans-unit id="833607e03db1f4d22b7b19626830f0c6d9068f18" translate="yes" xml:space="preserve">
          <source>In addition to this DSL, this package also provides a few ways of controlling input and output of these processes, going from simple and easy to use to complex and flexible.</source>
          <target state="translated">このDSLに加えて、このパッケージでは、これらのプロセスの入出力を制御するためのいくつかの方法を提供しています。</target>
        </trans-unit>
        <trans-unit id="1af29abe82ce27460b3210553668e96df780785a" translate="yes" xml:space="preserve">
          <source>In addition, the following one-way conversions are provided via &lt;code&gt;asJava&lt;/code&gt;:</source>
          <target state="translated">さらに、次のような一方向の変換が &lt;code&gt;asJava&lt;/code&gt; を介して提供されます。</target>
        </trans-unit>
        <trans-unit id="ac00f07ed9992cba775cd89833ed35d46831f315" translate="yes" xml:space="preserve">
          <source>In all cases, converting from a source type to a target type and back again will return the original source object.</source>
          <target state="translated">すべての場合において、ソース型からターゲット型に変換して再度変換すると、元のソースオブジェクトが返されます。</target>
        </trans-unit>
        <trans-unit id="e19bed2a7bc8ae2bb40893b7bf33d421b593fb43" translate="yes" xml:space="preserve">
          <source>In all cases, converting from a source type to a target type and back again will return the original source object. For example:</source>
          <target state="translated">すべての場合において、ソース型からターゲット型に変換し、再び元のソースオブジェクトを返します。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="d868ec892ed01010e548ef9fa4866735368243a7" translate="yes" xml:space="preserve">
          <source>In case of any confusion over which method goes in what direction, all the &quot;Co&quot; methods (including &lt;a href=&quot;#apply(f:From):To&quot; id=&quot;scala.&amp;lt;:&amp;lt;#apply&quot; name=&quot;scala.&amp;lt;:&amp;lt;#apply&quot;&gt;apply&lt;/a&gt;) go from left to right in the type (&quot;with&quot; the type), and all the &quot;Contra&quot; methods go from right to left (&quot;against&quot; the type). E.g., &lt;a href=&quot;#apply(f:From):To&quot; id=&quot;scala.&amp;lt;:&amp;lt;#apply&quot; name=&quot;scala.&amp;lt;:&amp;lt;#apply&quot;&gt;apply&lt;/a&gt; turns a &lt;code&gt;From&lt;/code&gt; into a &lt;code&gt;To&lt;/code&gt;, and &lt;a href=&quot;#substituteContra%5BF%5B-_%5D%5D(ft:F%5BTo%5D):F%5BFrom%5D&quot; id=&quot;scala.&amp;lt;:&amp;lt;#substituteContra&quot; name=&quot;scala.&amp;lt;:&amp;lt;#substituteContra&quot;&gt;substituteContra&lt;/a&gt; replaces the &lt;code&gt;To&lt;/code&gt;s in a type with &lt;code&gt;From&lt;/code&gt;s.</source>
          <target state="translated">どのメソッドがどの方向に行くのかについて混乱がある場合、すべての &quot;Co&quot;メソッド（&lt;a href=&quot;#apply(f:From):To&quot; id=&quot;scala.&amp;lt;:&amp;lt;#apply&quot; name=&quot;scala.&amp;lt;:&amp;lt;#apply&quot;&gt;apply&lt;/a&gt;を含む）は、型（ &quot;with&quot;型）で左から右に進み、すべての &quot;Contra&quot;メソッドは右から左（タイプに対して「反対」）。例えば、&lt;a href=&quot;#apply(f:From):To&quot; id=&quot;scala.&amp;lt;:&amp;lt;#apply&quot; name=&quot;scala.&amp;lt;:&amp;lt;#apply&quot;&gt;適用&lt;/a&gt;ターン &lt;code&gt;From&lt;/code&gt; に &lt;code&gt;To&lt;/code&gt; 、と&lt;a href=&quot;#substituteContra%5BF%5B-_%5D%5D(ft:F%5BTo%5D):F%5BFrom%5D&quot; id=&quot;scala.&amp;lt;:&amp;lt;#substituteContra&quot; name=&quot;scala.&amp;lt;:&amp;lt;#substituteContra&quot;&gt;substituteContraは&lt;/a&gt;代わる &lt;code&gt;To&lt;/code&gt; とタイプで秒 &lt;code&gt;From&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="6b1c9b6253d67c3e9f43f7e52b6b9ca2fcb31481" translate="yes" xml:space="preserve">
          <source>In case of any confusion over which method goes in what direction, all the &quot;Co&quot; methods (including &lt;a href=&quot;#apply(f:From):To&quot; id=&quot;scala.=:=#apply&quot; name=&quot;scala.=:=#apply&quot;&gt;apply&lt;/a&gt;) go from left to right in the type (&quot;with&quot; the type), and all the &quot;Contra&quot; methods go from right to left (&quot;against&quot; the type). E.g., &lt;a href=&quot;#apply(f:From):To&quot; id=&quot;scala.=:=#apply&quot; name=&quot;scala.=:=#apply&quot;&gt;apply&lt;/a&gt; turns a &lt;code&gt;From&lt;/code&gt; into a &lt;code&gt;To&lt;/code&gt;, and &lt;a href=&quot;#substituteContra%5BF%5B_%5D%5D(ft:F%5BTo%5D):F%5BFrom%5D&quot; id=&quot;scala.=:=#substituteContra&quot; name=&quot;scala.=:=#substituteContra&quot;&gt;substituteContra&lt;/a&gt; replaces the &lt;code&gt;To&lt;/code&gt;s in a type with &lt;code&gt;From&lt;/code&gt;s.</source>
          <target state="translated">どのメソッドがどの方向に行くのかについて混乱がある場合、すべての &quot;Co&quot;メソッド（&lt;a href=&quot;#apply(f:From):To&quot; id=&quot;scala.=:=#apply&quot; name=&quot;scala.=:=#apply&quot;&gt;apply&lt;/a&gt;を含む）は、型（ &quot;with&quot;型）で左から右に進み、すべての &quot;Contra&quot;メソッドは右から左（タイプに対して「反対」）。例えば、&lt;a href=&quot;#apply(f:From):To&quot; id=&quot;scala.=:=#apply&quot; name=&quot;scala.=:=#apply&quot;&gt;適用&lt;/a&gt;ターン &lt;code&gt;From&lt;/code&gt; に &lt;code&gt;To&lt;/code&gt; 、と&lt;a href=&quot;#substituteContra%5BF%5B_%5D%5D(ft:F%5BTo%5D):F%5BFrom%5D&quot; id=&quot;scala.=:=#substituteContra&quot; name=&quot;scala.=:=#substituteContra&quot;&gt;substituteContraは&lt;/a&gt;代わる &lt;code&gt;To&lt;/code&gt; とタイプで秒 &lt;code&gt;From&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="d4812b3dba24541d24b4695dcc24998e6e1e2ad1" translate="yes" xml:space="preserve">
          <source>In case of any confusion over which method goes in what direction, all the &quot;Co&quot; methods (including &lt;a href=&quot;%24eq%24colon%24eq#apply(f:From):To&quot; id=&quot;scala.=:=#apply&quot; name=&quot;scala.=:=#apply&quot;&gt;apply&lt;/a&gt;) go from left to right in the type (&quot;with&quot; the type), and all the &quot;Contra&quot; methods go from right to left (&quot;against&quot; the type). E.g., &lt;a href=&quot;%24eq%24colon%24eq#apply(f:From):To&quot; id=&quot;scala.=:=#apply&quot; name=&quot;scala.=:=#apply&quot;&gt;apply&lt;/a&gt; turns a &lt;code&gt;From&lt;/code&gt; into a &lt;code&gt;To&lt;/code&gt;, and &lt;a href=&quot;%24eq%24colon%24eq#substituteContra%5BF%5B_%5D%5D(ft:F%5BTo%5D):F%5BFrom%5D&quot; id=&quot;scala.=:=#substituteContra&quot; name=&quot;scala.=:=#substituteContra&quot;&gt;substituteContra&lt;/a&gt; replaces the &lt;code&gt;To&lt;/code&gt;s in a type with &lt;code&gt;From&lt;/code&gt;s.</source>
          <target state="translated">どのメソッドがどの方向に行くのかについて混乱がある場合、すべての &quot;Co&quot;メソッド（&lt;a href=&quot;%24eq%24colon%24eq#apply(f:From):To&quot; id=&quot;scala.=:=#apply&quot; name=&quot;scala.=:=#apply&quot;&gt;apply&lt;/a&gt;を含む）は、型（ &quot;with&quot;型）で左から右に進み、すべての &quot;Contra&quot;メソッドは右から左（タイプに対して「反対」）。例えば、&lt;a href=&quot;%24eq%24colon%24eq#apply(f:From):To&quot; id=&quot;scala.=:=#apply&quot; name=&quot;scala.=:=#apply&quot;&gt;適用&lt;/a&gt;ターン &lt;code&gt;From&lt;/code&gt; に &lt;code&gt;To&lt;/code&gt; 、と&lt;a href=&quot;%24eq%24colon%24eq#substituteContra%5BF%5B_%5D%5D(ft:F%5BTo%5D):F%5BFrom%5D&quot; id=&quot;scala.=:=#substituteContra&quot; name=&quot;scala.=:=#substituteContra&quot;&gt;substituteContraは&lt;/a&gt;代わる &lt;code&gt;To&lt;/code&gt; とタイプで秒 &lt;code&gt;From&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="2551d1ad10e40629a9140345a0383a54846c6f12" translate="yes" xml:space="preserve">
          <source>In case of any confusion over which method goes in what direction, all the &quot;Co&quot; methods (including &lt;a href=&quot;%24less%24colon%24less#apply(f:From):To&quot; id=&quot;scala.&amp;lt;:&amp;lt;#apply&quot; name=&quot;scala.&amp;lt;:&amp;lt;#apply&quot;&gt;apply&lt;/a&gt;) go from left to right in the type (&quot;with&quot; the type), and all the &quot;Contra&quot; methods go from right to left (&quot;against&quot; the type). E.g., &lt;a href=&quot;%24less%24colon%24less#apply(f:From):To&quot; id=&quot;scala.&amp;lt;:&amp;lt;#apply&quot; name=&quot;scala.&amp;lt;:&amp;lt;#apply&quot;&gt;apply&lt;/a&gt; turns a &lt;code&gt;From&lt;/code&gt; into a &lt;code&gt;To&lt;/code&gt;, and &lt;a href=&quot;%24less%24colon%24less#substituteContra%5BF%5B-_%5D%5D(ft:F%5BTo%5D):F%5BFrom%5D&quot; id=&quot;scala.&amp;lt;:&amp;lt;#substituteContra&quot; name=&quot;scala.&amp;lt;:&amp;lt;#substituteContra&quot;&gt;substituteContra&lt;/a&gt; replaces the &lt;code&gt;To&lt;/code&gt;s in a type with &lt;code&gt;From&lt;/code&gt;s.</source>
          <target state="translated">どのメソッドがどの方向に行くのかについて混乱がある場合、すべての &quot;Co&quot;メソッド（&lt;a href=&quot;%24less%24colon%24less#apply(f:From):To&quot; id=&quot;scala.&amp;lt;:&amp;lt;#apply&quot; name=&quot;scala.&amp;lt;:&amp;lt;#apply&quot;&gt;apply&lt;/a&gt;を含む）は、型（ &quot;with&quot;型）で左から右に進み、すべての &quot;Contra&quot;メソッドは右から左（タイプに対して「反対」）。例えば、&lt;a href=&quot;%24less%24colon%24less#apply(f:From):To&quot; id=&quot;scala.&amp;lt;:&amp;lt;#apply&quot; name=&quot;scala.&amp;lt;:&amp;lt;#apply&quot;&gt;適用&lt;/a&gt;ターン &lt;code&gt;From&lt;/code&gt; に &lt;code&gt;To&lt;/code&gt; 、と&lt;a href=&quot;%24less%24colon%24less#substituteContra%5BF%5B-_%5D%5D(ft:F%5BTo%5D):F%5BFrom%5D&quot; id=&quot;scala.&amp;lt;:&amp;lt;#substituteContra&quot; name=&quot;scala.&amp;lt;:&amp;lt;#substituteContra&quot;&gt;substituteContraは&lt;/a&gt;代わる &lt;code&gt;To&lt;/code&gt; とタイプで秒 &lt;code&gt;From&lt;/code&gt; 秒。</target>
        </trans-unit>
        <trans-unit id="0900e14fd5311d2aa38ec74de37c390eff49556f" translate="yes" xml:space="preserve">
          <source>In general no method other than &lt;code&gt;clear()&lt;/code&gt; may be called after &lt;code&gt;result()&lt;/code&gt;. It is up to subclasses to implement and to document other allowed sequences of operations (e.g. calling other methods after &lt;code&gt;result()&lt;/code&gt; in order to obtain different snapshots of a collection under construction).</source>
          <target state="translated">通常、 &lt;code&gt;clear()&lt;/code&gt; 以外のメソッドは、 &lt;code&gt;result()&lt;/code&gt; の後に呼び出すことはできません。他の許可された操作シーケンスを実装および文書化するのはサブクラス次第です（たとえば、構築中のコレクションの異なるスナップショットを取得するために、 &lt;code&gt;result()&lt;/code&gt; の後に他のメソッドを呼び出す）。</target>
        </trans-unit>
        <trans-unit id="4173460319431605249414f3867173eec17a5bb5" translate="yes" xml:space="preserve">
          <source>In implementations of this method it is RECOMMENDED to first check if &lt;code&gt;permission&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and if it is, throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">このメソッドの実装では、最初に &lt;code&gt;permission&lt;/code&gt; が &lt;code&gt;null&lt;/code&gt; かどうかを確認し、nullの場合は &lt;code&gt;IllegalArgumentException&lt;/code&gt; をスローすることをお勧めします。</target>
        </trans-unit>
        <trans-unit id="214217caabaa7043d194583d31f281d6c4f25f25" translate="yes" xml:space="preserve">
          <source>In order to annotate the field as well, the meta-annotation &lt;code&gt;@field&lt;/code&gt; would need to be added.</source>
          <target state="translated">フィールドにも注釈を付けるには、メタ注釈 &lt;code&gt;@field&lt;/code&gt; を追加する必要があります。</target>
        </trans-unit>
        <trans-unit id="0eb4dd942fbebde340b222f9206dad0eb3f4f0a8" translate="yes" xml:space="preserve">
          <source>In part contributed by Jason Zaugg.</source>
          <target state="translated">一部はジェイソン・ザウグが寄稿しています。</target>
        </trans-unit>
        <trans-unit id="ae7695b65cd1a729eef5e333b6f2ac9c9989f090" translate="yes" xml:space="preserve">
          <source>In practice, this type is often &lt;code&gt;Repr&lt;/code&gt; itself, excepted in the case of &lt;code&gt;SeqView[A]&lt;/code&gt; (and other &lt;code&gt;View[A]&lt;/code&gt; subclasses), where it is &amp;ldquo;only&amp;rdquo; &lt;code&gt;View[A]&lt;/code&gt;.</source>
          <target state="translated">実際には、 &lt;code&gt;SeqView[A]&lt;/code&gt; （および他の &lt;code&gt;View[A]&lt;/code&gt; サブクラス）の場合を除いて、このタイプは多くの場合 &lt;code&gt;Repr&lt;/code&gt; 自体であり、「唯一の」 &lt;code&gt;View[A]&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="96a363b55a7486c253ff18dfe16ad84e0fb61ba4" translate="yes" xml:space="preserve">
          <source>In the following example, the definition of javaVersion is a shorthand for the anonymous class definition anonfun0:</source>
          <target state="translated">次の例では、javaVersion の定義は、匿名クラス定義 anonfun0 の短縮形です。</target>
        </trans-unit>
        <trans-unit id="24d6c499bf3c7436f3339963d91e9c24e7c042b0" translate="yes" xml:space="preserve">
          <source>In the following example, the definition of max is a shorthand for the anonymous class definition anonfun2:</source>
          <target state="translated">以下の例では、maxの定義は匿名クラス定義anonfun2の短縮形となっています。</target>
        </trans-unit>
        <trans-unit id="c31dc2ca9b1bb2a5df8a328c79da958f3941ce56" translate="yes" xml:space="preserve">
          <source>In the following example, the definition of succ is a shorthand for the anonymous class definition anonfun1:</source>
          <target state="translated">以下の例では、succeedの定義は、匿名クラス定義anonfun1の短縮形です。</target>
        </trans-unit>
        <trans-unit id="2b4f3187748c2a03caeeda33b1126094524cfc36" translate="yes" xml:space="preserve">
          <source>In the replacement String, a dollar sign (&lt;code&gt;$&lt;/code&gt;) followed by a number will be interpreted as a reference to a group in the matched pattern, with numbers 1 through 9 corresponding to the first nine groups, and 0 standing for the whole match. Any other character is an error. The backslash (&lt;code&gt;\&lt;/code&gt;) character will be interpreted as an escape character and can be used to escape the dollar sign. Use &lt;code&gt;Regex.quoteReplacement&lt;/code&gt; to escape these characters.</source>
          <target state="translated">置換文字列では、ドル記号（ &lt;code&gt;$&lt;/code&gt; ）の後に数字が続くものは、一致したパターンのグループへの参照として解釈されます。1〜9は最初の9つのグループに対応し、0は一致全体を表します。その他の文字はエラーです。バックスラッシュ（ &lt;code&gt;\&lt;/code&gt; ）文字はエスケープ文字として解釈され、ドル記号をエスケープするために使用できます。これらの文字をエスケープするには、 &lt;code&gt;Regex.quoteReplacement&lt;/code&gt; を使用します。</target>
        </trans-unit>
        <trans-unit id="e8e2ddd99bc7ff7c6b62c1626dce34ff949697b7" translate="yes" xml:space="preserve">
          <source>In the resulting string the chars of this string are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">結果の文字列では、この文字列の文字は文字列 &lt;code&gt;sep&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="c01b202af8aa43f875f874c5400f5a0b8d724400" translate="yes" xml:space="preserve">
          <source>In the underlying Java model, once a &lt;code&gt;Process&lt;/code&gt; has been started, one can get &lt;code&gt;java.io.InputStream&lt;/code&gt; and &lt;code&gt;java.io.OutputStream&lt;/code&gt; representing its output and input respectively. That is, what one writes to an &lt;code&gt;OutputStream&lt;/code&gt; is turned into input to the process, and the output of a process can be read from an &lt;code&gt;InputStream&lt;/code&gt; -- of which there are two, one representing normal output, and the other representing error output.</source>
          <target state="translated">基盤となるJavaモデルでは、 &lt;code&gt;Process&lt;/code&gt; が開始されると、それぞれ出力と入力を表す &lt;code&gt;java.io.InputStream&lt;/code&gt; と &lt;code&gt;java.io.OutputStream&lt;/code&gt; を取得できます。つまり、 &lt;code&gt;OutputStream&lt;/code&gt; への書き込みはプロセスへの入力に変換され、プロセスの出力は &lt;code&gt;InputStream&lt;/code&gt; から読み取ることができます。そのうちの1つは通常の出力を表し、もう1つはエラー出力を表します。</target>
        </trans-unit>
        <trans-unit id="691632053249eae5c4009b358ba837b26c4c1cbe" translate="yes" xml:space="preserve">
          <source>In this example, the expression $name is replaced with the &lt;code&gt;toString&lt;/code&gt; of the variable &lt;code&gt;name&lt;/code&gt;. The &lt;code&gt;s&lt;/code&gt; interpolator can take the &lt;code&gt;toString&lt;/code&gt; of any arbitrary expression within a &lt;code&gt;${}&lt;/code&gt; block, for example:</source>
          <target state="translated">この例では、式$ nameが変数 &lt;code&gt;name&lt;/code&gt; の &lt;code&gt;toString&lt;/code&gt; に置き換えられています。 &lt;code&gt;s&lt;/code&gt; 補間を取ることができる &lt;code&gt;toString&lt;/code&gt; 内の任意の発現を &lt;code&gt;${}&lt;/code&gt; 、例えば、ブロック：</target>
        </trans-unit>
        <trans-unit id="16a4b4f6f9b0574642bbce3a3d7f230dd3e67f0f" translate="yes" xml:space="preserve">
          <source>In this example, the string &quot;James&quot; ends up matching the location where the pattern &lt;code&gt;$name&lt;/code&gt; is positioned, and thus ends up bound to that variable.</source>
          <target state="translated">この例では、文字列「James」は、パターン &lt;code&gt;$name&lt;/code&gt; が配置されている場所と一致するため、その変数にバインドされます。</target>
        </trans-unit>
        <trans-unit id="3b2821e3b7163d114b97b2a59be62eb8b7019898" translate="yes" xml:space="preserve">
          <source>IndexedBuffer</source>
          <target state="translated">IndexedBuffer</target>
        </trans-unit>
        <trans-unit id="0fe1fe1ab3c6c4129e36d6a491ad0f67880f325d" translate="yes" xml:space="preserve">
          <source>IndexedBuffer$</source>
          <target state="translated">IndexedBuffer$</target>
        </trans-unit>
        <trans-unit id="0c4f6f48cdfc577ee9a0a15009637d25c5bc754a" translate="yes" xml:space="preserve">
          <source>IndexedBuffer.filterInPlace()</source>
          <target state="translated">IndexedBuffer.filterInPlace()</target>
        </trans-unit>
        <trans-unit id="d0b95cf9004918652f2e06ca332ed08d011e2e9e" translate="yes" xml:space="preserve">
          <source>IndexedBuffer.flatMapInPlace()</source>
          <target state="translated">IndexedBuffer.flatMapInPlace()</target>
        </trans-unit>
        <trans-unit id="9161dfead6ff70ebeaae1db47aada0a16d11ceb5" translate="yes" xml:space="preserve">
          <source>IndexedBuffer.iterableFactory()</source>
          <target state="translated">IndexedBuffer.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="d881d079b7a96f90cca5f8cc5178487bc8f2a317" translate="yes" xml:space="preserve">
          <source>IndexedBuffer.patchInPlace()</source>
          <target state="translated">IndexedBuffer.patchInPlace()</target>
        </trans-unit>
        <trans-unit id="bfc7f32ea5de5bcf9e08ec0267497f856c417bca" translate="yes" xml:space="preserve">
          <source>IndexedSeq</source>
          <target state="translated">IndexedSeq</target>
        </trans-unit>
        <trans-unit id="e9d72c06e22f765047172a05dcf7e1d3ddf71d56" translate="yes" xml:space="preserve">
          <source>IndexedSeq$</source>
          <target state="translated">IndexedSeq$</target>
        </trans-unit>
        <trans-unit id="e90af03a76a8a2bce568356ce79d7f5afff24765" translate="yes" xml:space="preserve">
          <source>IndexedSeq$.from()</source>
          <target state="translated">IndexedSeq$.from()</target>
        </trans-unit>
        <trans-unit id="ade32ac0b2d718f11bfefd79b47a68ac17c7d29d" translate="yes" xml:space="preserve">
          <source>IndexedSeq.applyPreferredMaxLength()</source>
          <target state="translated">IndexedSeq.applyPreferredMaxLength()</target>
        </trans-unit>
        <trans-unit id="9b5bd45e72157b397115c7071ca5c7e076988a65" translate="yes" xml:space="preserve">
          <source>IndexedSeq.canEqual()</source>
          <target state="translated">IndexedSeq.canEqual()</target>
        </trans-unit>
        <trans-unit id="738bfd73f3f3894de5a03e54dfe4f46fc72f4290" translate="yes" xml:space="preserve">
          <source>IndexedSeq.drop()</source>
          <target state="translated">IndexedSeq.drop()</target>
        </trans-unit>
        <trans-unit id="96118078e6afb876d64fd1dbc3b6b5a5ac0a75e3" translate="yes" xml:space="preserve">
          <source>IndexedSeq.dropRight()</source>
          <target state="translated">IndexedSeq.dropRight()</target>
        </trans-unit>
        <trans-unit id="69e9f90e2f9090370c01fa54623ce83534230c9e" translate="yes" xml:space="preserve">
          <source>IndexedSeq.iterableFactory()</source>
          <target state="translated">IndexedSeq.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="3a329b1b816d0fc9619fd1f87554687a52a2c18f" translate="yes" xml:space="preserve">
          <source>IndexedSeq.iterator()</source>
          <target state="translated">IndexedSeq.iterator()</target>
        </trans-unit>
        <trans-unit id="538bd28cd0c72a13ffa4f38d65515116c92e6bbe" translate="yes" xml:space="preserve">
          <source>IndexedSeq.knownSize()</source>
          <target state="translated">IndexedSeq.knownSize()</target>
        </trans-unit>
        <trans-unit id="3ba3548b049443e2598389a5a303c169977d0009" translate="yes" xml:space="preserve">
          <source>IndexedSeq.last()</source>
          <target state="translated">IndexedSeq.last()</target>
        </trans-unit>
        <trans-unit id="5c2416083be090ca6744d097bf109440760b5448" translate="yes" xml:space="preserve">
          <source>IndexedSeq.lengthCompare()</source>
          <target state="translated">IndexedSeq.lengthCompare()</target>
        </trans-unit>
        <trans-unit id="c901ea1680f4196c6ed037afe4914b8f0171f707" translate="yes" xml:space="preserve">
          <source>IndexedSeq.map()</source>
          <target state="translated">IndexedSeq.map()</target>
        </trans-unit>
        <trans-unit id="f79f14499993498c7347fabd523f65482cc2733b" translate="yes" xml:space="preserve">
          <source>IndexedSeq.mapInPlace()</source>
          <target state="translated">IndexedSeq.mapInPlace()</target>
        </trans-unit>
        <trans-unit id="a12a2c02f72b8a7e3caec1f1f00cc6e2b9df2a79" translate="yes" xml:space="preserve">
          <source>IndexedSeq.prepended()</source>
          <target state="translated">IndexedSeq.prepended()</target>
        </trans-unit>
        <trans-unit id="71c9859a54c2e58701ef112f7293136835cdd52d" translate="yes" xml:space="preserve">
          <source>IndexedSeq.reverse()</source>
          <target state="translated">IndexedSeq.reverse()</target>
        </trans-unit>
        <trans-unit id="ebc503f14e50dcf6a39f253cb084b31575fecbfb" translate="yes" xml:space="preserve">
          <source>IndexedSeq.reverseIterator()</source>
          <target state="translated">IndexedSeq.reverseIterator()</target>
        </trans-unit>
        <trans-unit id="ed7d8350ed904274492ca8680a0a3afeeab7dfdf" translate="yes" xml:space="preserve">
          <source>IndexedSeq.reversed()</source>
          <target state="translated">IndexedSeq.reversed()</target>
        </trans-unit>
        <trans-unit id="07e19b0f40f6fd542636cf3479a3a598f27abc2f" translate="yes" xml:space="preserve">
          <source>IndexedSeq.sameElements()</source>
          <target state="translated">IndexedSeq.sameElements()</target>
        </trans-unit>
        <trans-unit id="b650bb4fb2c70d2f67bd14826ad6803b209b995b" translate="yes" xml:space="preserve">
          <source>IndexedSeq.scala</source>
          <target state="translated">IndexedSeq.scala</target>
        </trans-unit>
        <trans-unit id="dd2cb5321b1f6451fd6de88a73d812026768494f" translate="yes" xml:space="preserve">
          <source>IndexedSeq.search()</source>
          <target state="translated">IndexedSeq.search()</target>
        </trans-unit>
        <trans-unit id="fbe796293d4952f98a29516fd3d47014dde8491c" translate="yes" xml:space="preserve">
          <source>IndexedSeq.slice()</source>
          <target state="translated">IndexedSeq.slice()</target>
        </trans-unit>
        <trans-unit id="5485253858c4776a8bef8e1e9782ce4beffc3c31" translate="yes" xml:space="preserve">
          <source>IndexedSeq.sortInPlace()</source>
          <target state="translated">IndexedSeq.sortInPlace()</target>
        </trans-unit>
        <trans-unit id="ac7d07ca23d80a944c9af93fd141526506109d7b" translate="yes" xml:space="preserve">
          <source>IndexedSeq.sortInPlaceBy()</source>
          <target state="translated">IndexedSeq.sortInPlaceBy()</target>
        </trans-unit>
        <trans-unit id="78f8b97af02a4d909fb22bc93cb3212622f39d6b" translate="yes" xml:space="preserve">
          <source>IndexedSeq.sortInPlaceWith()</source>
          <target state="translated">IndexedSeq.sortInPlaceWith()</target>
        </trans-unit>
        <trans-unit id="d3fb38fe1b2a9291c107da0503826f5fe4c036d9" translate="yes" xml:space="preserve">
          <source>IndexedSeq.stepper()</source>
          <target state="translated">IndexedSeq.stepper()</target>
        </trans-unit>
        <trans-unit id="fed0f56a864d62774a7d48b6910d06d4249a0329" translate="yes" xml:space="preserve">
          <source>IndexedSeq.stringPrefix()</source>
          <target state="translated">IndexedSeq.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="3ee72d9cca87ebfbd9de73c0848dbccaa0492d91" translate="yes" xml:space="preserve">
          <source>IndexedSeq.take()</source>
          <target state="translated">IndexedSeq.take()</target>
        </trans-unit>
        <trans-unit id="fcaa71cdaaeda85aeda76c57a38b61a2d5d1de03" translate="yes" xml:space="preserve">
          <source>IndexedSeq.takeRight()</source>
          <target state="translated">IndexedSeq.takeRight()</target>
        </trans-unit>
        <trans-unit id="9dcc817ea444aac8923bac77588307fd12128ec9" translate="yes" xml:space="preserve">
          <source>IndexedSeq.toIndexedSeq()</source>
          <target state="translated">IndexedSeq.toIndexedSeq()</target>
        </trans-unit>
        <trans-unit id="556fb0cf6aae4c87ffa504b917eedd953a66d4a7" translate="yes" xml:space="preserve">
          <source>IndexedSeq.view()</source>
          <target state="translated">IndexedSeq.view()</target>
        </trans-unit>
        <trans-unit id="98dd4b99d5fd4f4fcff5e99a3007b2656ce94c5e" translate="yes" xml:space="preserve">
          <source>IndexedSeqDefaults$</source>
          <target state="translated">IndexedSeqDefaults$</target>
        </trans-unit>
        <trans-unit id="1352504ddaeb1c8c83d0840c29c4ff6948a61fae" translate="yes" xml:space="preserve">
          <source>IndexedSeqDefaults$.defaultApplyPreferredMaxLength()</source>
          <target state="translated">IndexedSeqDefaults$.defaultApplyPreferredMaxLength()</target>
        </trans-unit>
        <trans-unit id="86a16daae6c424febf37c5281caddda768a228c3" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps</source>
          <target state="translated">IndexedSeqOps</target>
        </trans-unit>
        <trans-unit id="af391561107c97a908bbbdb2b3352835ed9222fc" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.drop()</source>
          <target state="translated">IndexedSeqOps.drop()</target>
        </trans-unit>
        <trans-unit id="44234b53b7a7b74abcc240afe2ad34374ee6dc77" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.dropRight()</source>
          <target state="translated">IndexedSeqOps.dropRight()</target>
        </trans-unit>
        <trans-unit id="92fd45b901e6553c6a0140db196e5f2718b25bf3" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.iterator()</source>
          <target state="translated">IndexedSeqOps.iterator()</target>
        </trans-unit>
        <trans-unit id="a9169b3ff2149622580f1d9bd5c60e5287e35fa6" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.knownSize()</source>
          <target state="translated">IndexedSeqOps.knownSize()</target>
        </trans-unit>
        <trans-unit id="49593e258c54ca3bc8ee9537bf11470304e28a42" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.last()</source>
          <target state="translated">IndexedSeqOps.last()</target>
        </trans-unit>
        <trans-unit id="df7ad5ec1b3a53f0a37f0a7157c73345bea55f93" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.lengthCompare()</source>
          <target state="translated">IndexedSeqOps.lengthCompare()</target>
        </trans-unit>
        <trans-unit id="7f62a80e2d34b8fc2813c75fba5d1a368e31fe60" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.map()</source>
          <target state="translated">IndexedSeqOps.map()</target>
        </trans-unit>
        <trans-unit id="a9d79c707275dd2c216b5142061732b0cc112d7d" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.mapInPlace()</source>
          <target state="translated">IndexedSeqOps.mapInPlace()</target>
        </trans-unit>
        <trans-unit id="eb2f365f06f2170af2be055815dc60ed1e797cfa" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.prepended()</source>
          <target state="translated">IndexedSeqOps.prepended()</target>
        </trans-unit>
        <trans-unit id="3ea7fb2f5cc7fd25180664addb1bb12524602e60" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.reverse()</source>
          <target state="translated">IndexedSeqOps.reverse()</target>
        </trans-unit>
        <trans-unit id="cda1fbac21db1517ac6faf853a7b22e4bcdaab86" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.reverseIterator()</source>
          <target state="translated">IndexedSeqOps.reverseIterator()</target>
        </trans-unit>
        <trans-unit id="3da5349e234ef4491f695df39434a63f6574c10e" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.reversed()</source>
          <target state="translated">IndexedSeqOps.reversed()</target>
        </trans-unit>
        <trans-unit id="d828ef68f6ab118de7c4c94a7e2c8c2b25ca58eb" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.search()</source>
          <target state="translated">IndexedSeqOps.search()</target>
        </trans-unit>
        <trans-unit id="544070354d94b57f9c7c1c3a0e44dbcc63963077" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.slice()</source>
          <target state="translated">IndexedSeqOps.slice()</target>
        </trans-unit>
        <trans-unit id="e7dcc7c49ea3f298b9799e7ad5232a56b9315755" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.sortInPlace()</source>
          <target state="translated">IndexedSeqOps.sortInPlace()</target>
        </trans-unit>
        <trans-unit id="64f77135df88795eed065c87f03cdc608b8170cd" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.sortInPlaceBy()</source>
          <target state="translated">IndexedSeqOps.sortInPlaceBy()</target>
        </trans-unit>
        <trans-unit id="4c1a4071c84dade2de6c864c4f6106fba7abf907" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.sortInPlaceWith()</source>
          <target state="translated">IndexedSeqOps.sortInPlaceWith()</target>
        </trans-unit>
        <trans-unit id="6bea8505584ab8ee7c2e6e4e910b548918eca197" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.stepper()</source>
          <target state="translated">IndexedSeqOps.stepper()</target>
        </trans-unit>
        <trans-unit id="6bd70a37beac26308a4347e421e5d3af19a314e4" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.take()</source>
          <target state="translated">IndexedSeqOps.take()</target>
        </trans-unit>
        <trans-unit id="0651c68a08ef4474f6a3a45080d6e3cb16a42af8" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.takeRight()</source>
          <target state="translated">IndexedSeqOps.takeRight()</target>
        </trans-unit>
        <trans-unit id="64bdf2612094aadd8435473b8ed0c66108d9c157" translate="yes" xml:space="preserve">
          <source>IndexedSeqOps.view()</source>
          <target state="translated">IndexedSeqOps.view()</target>
        </trans-unit>
        <trans-unit id="c90394806bdef938c8685dc0b381fda252affa42" translate="yes" xml:space="preserve">
          <source>IndexedSeqView</source>
          <target state="translated">IndexedSeqView</target>
        </trans-unit>
        <trans-unit id="53303c17c7922392de28f160a02915aadf017adf" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$</source>
          <target state="translated">IndexedSeqView$</target>
        </trans-unit>
        <trans-unit id="627febd59c8b24a7c1f7a7b6d3917143ad447fa5" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Appended</source>
          <target state="translated">IndexedSeqView$.Appended</target>
        </trans-unit>
        <trans-unit id="29997415b23bf11d90e00fe7706dc4aafd896a3d" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Appended()</source>
          <target state="translated">IndexedSeqView$.Appended()</target>
        </trans-unit>
        <trans-unit id="57e72fa461c0fd6ef12d656d5f02610853c4ecbb" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Appended.Appended()</source>
          <target state="translated">IndexedSeqView$.Appended.Appended()</target>
        </trans-unit>
        <trans-unit id="c2c12e6bc8a52673b54a4adcf590b5916a2c45c3" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Concat</source>
          <target state="translated">IndexedSeqView$.Concat</target>
        </trans-unit>
        <trans-unit id="2af5d49b5f89baed9e536bc4f7a2078b3a7f45a0" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Concat()</source>
          <target state="translated">IndexedSeqView$.Concat()</target>
        </trans-unit>
        <trans-unit id="e7d686652bb68f3a2a4bf3ae4ee0cce111882eac" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Concat.Concat()</source>
          <target state="translated">IndexedSeqView$.Concat.Concat()</target>
        </trans-unit>
        <trans-unit id="fbd017107bf2a23de2f3ce26dc2a955dd6bd1f05" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Drop</source>
          <target state="translated">IndexedSeqView$.Drop</target>
        </trans-unit>
        <trans-unit id="29328e5e2d8f0bce28ee05469a4b2a5d17528673" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Drop()</source>
          <target state="translated">IndexedSeqView$.Drop()</target>
        </trans-unit>
        <trans-unit id="6d2cd6586c37bed8e24c70dfacb33379c2fee62e" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Drop.Drop()</source>
          <target state="translated">IndexedSeqView$.Drop.Drop()</target>
        </trans-unit>
        <trans-unit id="080195517476d572c6de40fecf9a435a2b255bc6" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.DropRight</source>
          <target state="translated">IndexedSeqView$.DropRight</target>
        </trans-unit>
        <trans-unit id="b71f7e8baf5ed92d70bdaeeb388e7a8c78a24bb5" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.DropRight()</source>
          <target state="translated">IndexedSeqView$.DropRight()</target>
        </trans-unit>
        <trans-unit id="299fb84dcc35b35ce8901e77072863cc3bb55fdf" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.DropRight.DropRight()</source>
          <target state="translated">IndexedSeqView$.DropRight.DropRight()</target>
        </trans-unit>
        <trans-unit id="e9e7f2078cc0ee5fb40beecbf7bd347a677d4b06" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Id</source>
          <target state="translated">IndexedSeqView$.Id</target>
        </trans-unit>
        <trans-unit id="d0b6c273ff1bc42a66935abd6b780d1d8e840698" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Id()</source>
          <target state="translated">IndexedSeqView$.Id()</target>
        </trans-unit>
        <trans-unit id="d7a4430c232d1dfea13b6391105ecabc07ff4401" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Id.Id()</source>
          <target state="translated">IndexedSeqView$.Id.Id()</target>
        </trans-unit>
        <trans-unit id="fe8695564484ed319df6730406adb373915c1be1" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Map</source>
          <target state="translated">IndexedSeqView$.Map</target>
        </trans-unit>
        <trans-unit id="7826f6ae56278d764fd044269cc89eafde76ab23" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Map()</source>
          <target state="translated">IndexedSeqView$.Map()</target>
        </trans-unit>
        <trans-unit id="ae55e88cf452e3a6055fb9d830782b9138768619" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Map.Map()</source>
          <target state="translated">IndexedSeqView$.Map.Map()</target>
        </trans-unit>
        <trans-unit id="6293f1337e86e02fab444720e0bcf6703eb12cfd" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Prepended</source>
          <target state="translated">IndexedSeqView$.Prepended</target>
        </trans-unit>
        <trans-unit id="b9a3adf4c00cb3cd54fc0dd91f07127569002958" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Prepended()</source>
          <target state="translated">IndexedSeqView$.Prepended()</target>
        </trans-unit>
        <trans-unit id="175149b5b5f5fd03b5cb2518e879199ac24452ce" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Prepended.Prepended()</source>
          <target state="translated">IndexedSeqView$.Prepended.Prepended()</target>
        </trans-unit>
        <trans-unit id="c64d0e441fc7534328c5dd93e3f4913a18f6563f" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Reverse</source>
          <target state="translated">IndexedSeqView$.Reverse</target>
        </trans-unit>
        <trans-unit id="68fab541750705a12f7f8b219cf227afee2a2f85" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Reverse()</source>
          <target state="translated">IndexedSeqView$.Reverse()</target>
        </trans-unit>
        <trans-unit id="c38d9c1eca853cff56464d1f8d44fe2530c8ee87" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Reverse.Reverse()</source>
          <target state="translated">IndexedSeqView$.Reverse.Reverse()</target>
        </trans-unit>
        <trans-unit id="27f66cd7c6052cc9692be2a8ae6a0f67cc80e325" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Reverse.reverse()</source>
          <target state="translated">IndexedSeqView$.Reverse.reverse()</target>
        </trans-unit>
        <trans-unit id="4b993e90a20c3cc057bfda19344f8563dbd1ba0e" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Slice</source>
          <target state="translated">IndexedSeqView$.Slice</target>
        </trans-unit>
        <trans-unit id="3ec8fea45235396203f9aadb417f66884052ab54" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Slice()</source>
          <target state="translated">IndexedSeqView$.Slice()</target>
        </trans-unit>
        <trans-unit id="1cfecfabb7875338ac935dc99bf90d490179d1db" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Slice.Slice()</source>
          <target state="translated">IndexedSeqView$.Slice.Slice()</target>
        </trans-unit>
        <trans-unit id="9031d235552ead5ff6fffbbec3133d301c8170cf" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Slice.apply()</source>
          <target state="translated">IndexedSeqView$.Slice.apply()</target>
        </trans-unit>
        <trans-unit id="86637e8a54a5ae25c525271e495fdd864737ac07" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Slice.hi()</source>
          <target state="translated">IndexedSeqView$.Slice.hi()</target>
        </trans-unit>
        <trans-unit id="ea52dc3962e4c7583cf7948934e8acc69e809860" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Slice.len()</source>
          <target state="translated">IndexedSeqView$.Slice.len()</target>
        </trans-unit>
        <trans-unit id="917cbcca1eea30c5a985d58607ee523e9b4e4f3a" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Slice.length()</source>
          <target state="translated">IndexedSeqView$.Slice.length()</target>
        </trans-unit>
        <trans-unit id="31dcdfee3b7f10d9e268003a7554799fb5cddc14" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Slice.lo()</source>
          <target state="translated">IndexedSeqView$.Slice.lo()</target>
        </trans-unit>
        <trans-unit id="526b1e1be2fb6378676431bbdd1aea065e80893e" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.SomeIndexedSeqOps()</source>
          <target state="translated">IndexedSeqView$.SomeIndexedSeqOps()</target>
        </trans-unit>
        <trans-unit id="5a1b5f641cadfb9759a717e6874d746335cbc6ae" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Take</source>
          <target state="translated">IndexedSeqView$.Take</target>
        </trans-unit>
        <trans-unit id="4ab3eebbbcdcc47bec885a969ea2cf5ad5dc1b69" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Take()</source>
          <target state="translated">IndexedSeqView$.Take()</target>
        </trans-unit>
        <trans-unit id="8135d9359fc12b48e997858c5f9ee00811c4f06f" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.Take.Take()</source>
          <target state="translated">IndexedSeqView$.Take.Take()</target>
        </trans-unit>
        <trans-unit id="cf5702acfe246343e56de3e4036982f8f8ab131a" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.TakeRight</source>
          <target state="translated">IndexedSeqView$.TakeRight</target>
        </trans-unit>
        <trans-unit id="8516b472d1d513c37edcce1948ff4ac57d445967" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.TakeRight()</source>
          <target state="translated">IndexedSeqView$.TakeRight()</target>
        </trans-unit>
        <trans-unit id="22f2aab91869231e2a3d3b392699c043e2a2101f" translate="yes" xml:space="preserve">
          <source>IndexedSeqView$.TakeRight.TakeRight()</source>
          <target state="translated">IndexedSeqView$.TakeRight.TakeRight()</target>
        </trans-unit>
        <trans-unit id="a2adfde5d7370b8b0a2b70919afb88e0353840b1" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.appended()</source>
          <target state="translated">IndexedSeqView.appended()</target>
        </trans-unit>
        <trans-unit id="c0a2503eb79a130992e2cbc9403ef157abc215c9" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.appendedAll()</source>
          <target state="translated">IndexedSeqView.appendedAll()</target>
        </trans-unit>
        <trans-unit id="a19cc18eb343da8ed162eae8d41e1e95d4fa48c3" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.concat()</source>
          <target state="translated">IndexedSeqView.concat()</target>
        </trans-unit>
        <trans-unit id="00523b7aa1221c09e7cb9d0474bbe0c580d19a1b" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.drop()</source>
          <target state="translated">IndexedSeqView.drop()</target>
        </trans-unit>
        <trans-unit id="dfb3fde255b355edf70c5b02eb9d06175b9f8b1e" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.dropRight()</source>
          <target state="translated">IndexedSeqView.dropRight()</target>
        </trans-unit>
        <trans-unit id="9284c703d8490c1cead06a6d3c05521d9379652f" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.iterator()</source>
          <target state="translated">IndexedSeqView.iterator()</target>
        </trans-unit>
        <trans-unit id="f7fc4b8bd252f74c74fcd0d1ee9ed9164d30b0c5" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.map()</source>
          <target state="translated">IndexedSeqView.map()</target>
        </trans-unit>
        <trans-unit id="8f5d7cdd97fb05f14f21824f83bbc445316fad89" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.prepended()</source>
          <target state="translated">IndexedSeqView.prepended()</target>
        </trans-unit>
        <trans-unit id="696e60c83e4e197a367bd503ea2aafb316cf985a" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.prependedAll()</source>
          <target state="translated">IndexedSeqView.prependedAll()</target>
        </trans-unit>
        <trans-unit id="158c0865a8f8b66676dba6bfbeb3e3d2abdb081f" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.reverse()</source>
          <target state="translated">IndexedSeqView.reverse()</target>
        </trans-unit>
        <trans-unit id="f376d92b86b9c91c7e56f12019ed79ee0ee852a9" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.reverseIterator()</source>
          <target state="translated">IndexedSeqView.reverseIterator()</target>
        </trans-unit>
        <trans-unit id="d7c7224e1a0bdeb7733b87855df9c7efbd13d9d6" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.scala</source>
          <target state="translated">IndexedSeqView.scala</target>
        </trans-unit>
        <trans-unit id="582964bb63522dff982a36a55dbb38bfa785851e" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.slice()</source>
          <target state="translated">IndexedSeqView.slice()</target>
        </trans-unit>
        <trans-unit id="4db41be37f35eb64a4d8a653dd6e11940e08d751" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.stringPrefix()</source>
          <target state="translated">IndexedSeqView.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="fc5b08565310078ab4115e88f382fc075f7e30a7" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.take()</source>
          <target state="translated">IndexedSeqView.take()</target>
        </trans-unit>
        <trans-unit id="80d7ae0c16e50ef304ea4ce8ecddeb5f2ab2a7b9" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.takeRight()</source>
          <target state="translated">IndexedSeqView.takeRight()</target>
        </trans-unit>
        <trans-unit id="5fdc61f2a859279ebf5744cbb8e32a980065b649" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.tapEach()</source>
          <target state="translated">IndexedSeqView.tapEach()</target>
        </trans-unit>
        <trans-unit id="3caae4fe6e2ef072fb5294010be2fc644580543f" translate="yes" xml:space="preserve">
          <source>IndexedSeqView.view()</source>
          <target state="translated">IndexedSeqView.view()</target>
        </trans-unit>
        <trans-unit id="b2f5cca364f32ab708f4e51318f90e3e0f996c3a" translate="yes" xml:space="preserve">
          <source>Indicates whether the newly spawned threads that will run &lt;code&gt;processOutput&lt;/code&gt;, &lt;code&gt;processError&lt;/code&gt; and &lt;code&gt;writeInput&lt;/code&gt; should be marked as daemon threads.</source>
          <target state="translated">&lt;code&gt;processOutput&lt;/code&gt; 、 &lt;code&gt;processError&lt;/code&gt; 、および &lt;code&gt;writeInput&lt;/code&gt; を実行する新しく生成されたスレッドをデーモンスレッドとしてマークする必要があるかどうかを示します。</target>
        </trans-unit>
        <trans-unit id="85fa079da8b843d590e44b06307e6ae6ae0c5ccf" translate="yes" xml:space="preserve">
          <source>Indicating what to run and how to run it.</source>
          <target state="translated">何を実行するか、どのように実行するかを示す。</target>
        </trans-unit>
        <trans-unit id="98c28638b66fd81d8c06361f48df68e47542718c" translate="yes" xml:space="preserve">
          <source>Indicating what to run and how to run it.Handling a process input and output.Running the process.</source>
          <target state="translated">何をどのように実行するかを示す。プロセスの入出力を扱う。</target>
        </trans-unit>
        <trans-unit id="a379bc70312432d75a345f3f1600b05a805e24eb" translate="yes" xml:space="preserve">
          <source>Indices start at &lt;code&gt;0&lt;/code&gt;; &lt;code&gt;xs.apply(0)&lt;/code&gt; is the first element of array &lt;code&gt;xs&lt;/code&gt;. Note the indexing syntax &lt;code&gt;xs(i)&lt;/code&gt; is a shorthand for &lt;code&gt;xs.apply(i)&lt;/code&gt;.</source>
          <target state="translated">インデックスは &lt;code&gt;0&lt;/code&gt; から始まります。 &lt;code&gt;xs.apply(0)&lt;/code&gt; は、配列 &lt;code&gt;xs&lt;/code&gt; の最初の要素です。索引付け構文 &lt;code&gt;xs(i)&lt;/code&gt; は &lt;code&gt;xs.apply(i)&lt;/code&gt; の省略形であることに注意してください。</target>
        </trans-unit>
        <trans-unit id="3aa7e6ad4a1d2418ab622670dcaac7424e0308ad" translate="yes" xml:space="preserve">
          <source>Indices start at &lt;code&gt;0&lt;/code&gt;; &lt;code&gt;xs.update(i, x)&lt;/code&gt; replaces the i&lt;sup&gt;th&lt;/sup&gt; element in the array. Note the syntax &lt;code&gt;xs(i) = x&lt;/code&gt; is a shorthand for &lt;code&gt;xs.update(i, x)&lt;/code&gt;.</source>
          <target state="translated">インデックスは &lt;code&gt;0&lt;/code&gt; から始まります。 &lt;code&gt;xs.update(i, x)&lt;/code&gt; は、配列のi &lt;sup&gt;番目の&lt;/sup&gt;要素を置き換えます。構文 &lt;code&gt;xs(i) = x&lt;/code&gt; は &lt;code&gt;xs.update(i, x)&lt;/code&gt; 省略形です。</target>
        </trans-unit>
        <trans-unit id="343e22eecbe4f78a53a71ca572de068fecb2e37a" translate="yes" xml:space="preserve">
          <source>Infinite duration: greater than any other (apart from Undefined) and not equal to any other but itself. This value closely corresponds to Double.PositiveInfinity, matching its semantics in arithmetic operations.</source>
          <target state="translated">無限持続時間:他のものよりも大きく (Undefined を除く)、 それ自身以外のものとは等しくありません。この値は Double.PositiveInfinity と密接に対応しており、算術演算におけるそのセマンティクスと一致しています。</target>
        </trans-unit>
        <trans-unit id="5222081bc345ecabc669ad8520de115cf01c5c06" translate="yes" xml:space="preserve">
          <source>Infinite duration: less than any other and not equal to any other but itself. This value closely corresponds to Double.NegativeInfinity, matching its semantics in arithmetic operations.</source>
          <target state="translated">無限の持続時間:他のものよりも小さく、それ自身以外のものとは等しくありません。この値は Double.NegativeInfinity と密接に対応しており、算術演算におけるそのセマンティクスと一致しています。</target>
        </trans-unit>
        <trans-unit id="b95d9b4aeaf2e908b81213256099b1d3dfb8ea22" translate="yes" xml:space="preserve">
          <source>Infinite inputs (and NaN) are converted into &lt;a href=&quot;#Inf:scala.concurrent.duration.Duration.Infinite&quot; id=&quot;scala.concurrent.duration.Duration#Inf&quot; name=&quot;scala.concurrent.duration.Duration#Inf&quot;&gt;Duration.Inf&lt;/a&gt;, &lt;a href=&quot;#MinusInf:scala.concurrent.duration.Duration.Infinite&quot; id=&quot;scala.concurrent.duration.Duration#MinusInf&quot; name=&quot;scala.concurrent.duration.Duration#MinusInf&quot;&gt;Duration.MinusInf&lt;/a&gt; and &lt;a href=&quot;#Undefined:scala.concurrent.duration.Duration.Infinite&quot; id=&quot;scala.concurrent.duration.Duration#Undefined&quot; name=&quot;scala.concurrent.duration.Duration#Undefined&quot;&gt;Duration.Undefined&lt;/a&gt;, respectively.</source>
          <target state="translated">無限の入力（及びNaNは）に変換され&lt;a href=&quot;#Inf:scala.concurrent.duration.Duration.Infinite&quot; id=&quot;scala.concurrent.duration.Duration#Inf&quot; name=&quot;scala.concurrent.duration.Duration#Inf&quot;&gt;Duration.Inf&lt;/a&gt;、&lt;a href=&quot;#MinusInf:scala.concurrent.duration.Duration.Infinite&quot; id=&quot;scala.concurrent.duration.Duration#MinusInf&quot; name=&quot;scala.concurrent.duration.Duration#MinusInf&quot;&gt;Duration.MinusInf&lt;/a&gt;と&lt;a href=&quot;#Undefined:scala.concurrent.duration.Duration.Infinite&quot; id=&quot;scala.concurrent.duration.Duration#Undefined&quot; name=&quot;scala.concurrent.duration.Duration#Undefined&quot;&gt;Duration.Undefined&lt;/a&gt;それぞれ。</target>
        </trans-unit>
        <trans-unit id="dd7b55d08c95c5cda326088109b0a7ec4cd66e69" translate="yes" xml:space="preserve">
          <source>Initialization code comprises all statements and all value definitions that are executed during initialization.</source>
          <target state="translated">初期化コードは、初期化中に実行されるすべてのステートメントとすべての値定義から構成されます。</target>
        </trans-unit>
        <trans-unit id="fd33243760b6f588a6bd74a12a43e663cc6f3703" translate="yes" xml:space="preserve">
          <source>Initiates a non-blocking, asynchronous, left reduction over the supplied futures where the zero is the result value of the first &lt;code&gt;Future&lt;/code&gt;.</source>
          <target state="translated">ゼロが最初の &lt;code&gt;Future&lt;/code&gt; の結果値である場合、指定されたフューチャーに対して非ブロッキングの非同期の左削減を開始します。</target>
        </trans-unit>
        <trans-unit id="f40f7609a39b6da01cbb7dd6af4e1f08748c1cb3" translate="yes" xml:space="preserve">
          <source>Injects String concatenation operator &lt;code&gt;+&lt;/code&gt; to any classes.</source>
          <target state="translated">文字列連結演算子 &lt;code&gt;+&lt;/code&gt; を任意のクラスに注入します。</target>
        </trans-unit>
        <trans-unit id="acea231e8d52c9a5f6a94d1b18d2a43479cacc11" translate="yes" xml:space="preserve">
          <source>Inserts a new element at a given index into this buffer.</source>
          <target state="translated">指定されたインデックスの新しい要素をこのバッファに挿入します。</target>
        </trans-unit>
        <trans-unit id="8e6fa659d0dff7cbbcde0b82635324e609e3d42d" translate="yes" xml:space="preserve">
          <source>Inserts a single element into the priority queue.</source>
          <target state="translated">優先度キューに1つの要素を挿入します。</target>
        </trans-unit>
        <trans-unit id="d385847ea9d497ed4e380e58a01ced2a67db4e1c" translate="yes" xml:space="preserve">
          <source>Inserts a subarray of the given Array[Char] at the given index of this sequence.</source>
          <target state="translated">Array[Char]のサブ配列を挿入します。</target>
        </trans-unit>
        <trans-unit id="a4311c4a38b89d2c7d0814aec00d597cadc22853" translate="yes" xml:space="preserve">
          <source>Inserts new elements at the index &lt;code&gt;idx&lt;/code&gt;. Opposed to method &lt;code&gt;update&lt;/code&gt;, this method will not replace an element with a new one. Instead, it will insert a new element at index &lt;code&gt;idx&lt;/code&gt;.</source>
          <target state="translated">インデックス &lt;code&gt;idx&lt;/code&gt; に新しい要素を挿入します。メソッド &lt;code&gt;update&lt;/code&gt; とは異なり、このメソッドは要素を新しい要素に置き換えません。代わりに、インデックス &lt;code&gt;idx&lt;/code&gt; に新しい要素を挿入します。</target>
        </trans-unit>
        <trans-unit id="0fc9ea62d0393bd9099528f081cc2a34195b978a" translate="yes" xml:space="preserve">
          <source>Inserts the String into this character sequence.</source>
          <target state="translated">この文字列に文字列を挿入します。</target>
        </trans-unit>
        <trans-unit id="1df4ddbaebb7cdfd20f6aa45436b2cb35205aa20" translate="yes" xml:space="preserve">
          <source>Inserts the String representation (via String.valueOf) of the given argument into this sequence at the given index.</source>
          <target state="translated">与えられた引数の文字列表現を(String.valueOfを介して)、与えられたインデックスでこのシーケンスに挿入します。</target>
        </trans-unit>
        <trans-unit id="0a647c011c3741241529703082962801233bc42e" translate="yes" xml:space="preserve">
          <source>Inserts the given Array[Char] into this sequence at the given index.</source>
          <target state="translated">Array[Char]を指定されたインデックスで挿入します。</target>
        </trans-unit>
        <trans-unit id="abc5d206031e7c221c57f62d1eee85444cb4a184" translate="yes" xml:space="preserve">
          <source>Inserts the given Seq[Char] into this sequence at the given index.</source>
          <target state="translated">指定されたインデックスに Seq[Char]を挿入します。</target>
        </trans-unit>
        <trans-unit id="c3b5a90c3cc66f4ba77086d985a0badff6ea4630" translate="yes" xml:space="preserve">
          <source>Installs the BlockContext &lt;code&gt;blockContext&lt;/code&gt; around the invocation to &lt;code&gt;f&lt;/code&gt; and passes in the previously installed BlockContext to &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;f&lt;/code&gt; への呼び出しの周りにBlockContext &lt;code&gt;blockContext&lt;/code&gt; をインストールし、以前にインストールされたBlockContextを &lt;code&gt;f&lt;/code&gt; に渡します。</target>
        </trans-unit>
        <trans-unit id="4010be694a47d03fce7ae6d812ac4ec2ea288221" translate="yes" xml:space="preserve">
          <source>Instance Constructors</source>
          <target state="translated">インスタンス コンストラクタ</target>
        </trans-unit>
        <trans-unit id="a8c3c7c3a4a7550f21320c79642ab3c60c37a834" translate="yes" xml:space="preserve">
          <source>Instance to fill</source>
          <target state="translated">記入するインスタンス</target>
        </trans-unit>
        <trans-unit id="d29996d9de173c7e02ade429790e0d5f93db0708" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ControlThrowable&lt;/code&gt; should not normally be caught.</source>
          <target state="translated">&lt;code&gt;ControlThrowable&lt;/code&gt; のインスタンスは通常はキャッチされません。</target>
        </trans-unit>
        <trans-unit id="ef89905ed7aa6b2092a910fc73bf49f920b9badf" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ControlThrowable&lt;/code&gt; should not normally have a cause. Legacy subclasses may set a cause using &lt;code&gt;initCause&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ControlThrowable&lt;/code&gt; のインスタンスには通常、原因はありません。レガシーサブクラスは、 &lt;code&gt;initCause&lt;/code&gt; を使用して原因を設定する場合があります。</target>
        </trans-unit>
        <trans-unit id="0de0b09ca4ce38ff7e5927acf44ef46f9569f71c" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ListMap&lt;/code&gt; represent empty maps; they can be either created by calling the constructor directly, or by applying the function &lt;code&gt;ListMap.empty&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListMap&lt;/code&gt; のインスタンスは空のマップを表します。これらは、コンストラクターを直接呼び出すか、関数 &lt;code&gt;ListMap.empty&lt;/code&gt; を適用して作成できます。</target>
        </trans-unit>
        <trans-unit id="3fbb0aed299a1e93a7127f9f0b7f3baa03a7ab38" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ListSet&lt;/code&gt; represent empty sets; they can be either created by calling the constructor directly, or by applying the function &lt;code&gt;ListSet.empty&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ListSet&lt;/code&gt; のインスタンスは空のセットを表します。これらは、コンストラクタを直接呼び出すか、関数 &lt;code&gt;ListSet.empty&lt;/code&gt; を適用して作成できます。</target>
        </trans-unit>
        <trans-unit id="5783e22327974e3cf37893b8eaf0c11068a2a56f" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;Try[T]&lt;/code&gt;, are either an instance of &lt;a href=&quot;success&quot; id=&quot;scala.util.Success&quot; name=&quot;scala.util.Success&quot;&gt;scala.util.Success&lt;/a&gt;[T] or &lt;a href=&quot;failure&quot; id=&quot;scala.util.Failure&quot; name=&quot;scala.util.Failure&quot;&gt;scala.util.Failure&lt;/a&gt;[T].</source>
          <target state="translated">インスタンス &lt;code&gt;Try[T]&lt;/code&gt; 、いずれかのインスタンスである&lt;a href=&quot;success&quot; id=&quot;scala.util.Success&quot; name=&quot;scala.util.Success&quot;&gt;scala.util.Success&lt;/a&gt; [T]又は&lt;a href=&quot;failure&quot; id=&quot;scala.util.Failure&quot; name=&quot;scala.util.Failure&quot;&gt;scala.util.Failure&lt;/a&gt; [T]。</target>
        </trans-unit>
        <trans-unit id="b81a1b436ccdc9ef8faab6211c86f453a23c2409" translate="yes" xml:space="preserve">
          <source>Instances of &lt;code&gt;ValueOf[T]&lt;/code&gt; are provided implicitly for all eligible types. Typically an instance would be required where a runtime value corresponding to a type level computation is needed.</source>
          <target state="translated">&lt;code&gt;ValueOf[T]&lt;/code&gt; インスタンスは、すべての適格なタイプに対して暗黙的に提供されます。通常、タイプレベルの計算に対応するランタイム値が必要なインスタンスが必要になります。</target>
        </trans-unit>
        <trans-unit id="31e234e355dd36f38c49c1126c8654bbc7116b81" translate="yes" xml:space="preserve">
          <source>Instances of the java classes &lt;code&gt;java.io.File&lt;/code&gt; and &lt;code&gt;java.net.URL&lt;/code&gt; can both be used directly as input to other processes, and &lt;code&gt;java.io.File&lt;/code&gt; can be used as output as well. One can even pipe one to the other directly without any intervening process, though that's not a design goal or recommended usage. For example, the following code will copy a web page to a file:</source>
          <target state="translated">Javaクラス &lt;code&gt;java.io.File&lt;/code&gt; および &lt;code&gt;java.net.URL&lt;/code&gt; のインスタンスは、両方とも他のプロセスへの入力として直接使用でき、 &lt;code&gt;java.io.File&lt;/code&gt; も出力として使用できます。設計上の目標や推奨される使用法ではありませんが、プロセスを介さずに直接パイプでパイプすることもできます。たとえば、次のコードはWebページをファイルにコピーします。</target>
        </trans-unit>
        <trans-unit id="c8f25eba619e1001e2e8ce71ab7aa30aa8defadb" translate="yes" xml:space="preserve">
          <source>Instead, the future is completed with a ExecutionException with one of the exceptions above as the cause. If a future is failed with a &lt;code&gt;scala.runtime.NonLocalReturnControl&lt;/code&gt;, it is completed with a value from that throwable instead.</source>
          <target state="translated">代わりに、上記の例外の1つを原因とするExecutionExceptionでフューチャーが完了します。futureが &lt;code&gt;scala.runtime.NonLocalReturnControl&lt;/code&gt; で失敗した場合、代わりにそのスロー可能オブジェクトの値で完了します。</target>
        </trans-unit>
        <trans-unit id="5c89edcac2811a6a9e8072517cae7f3cbfd5049d" translate="yes" xml:space="preserve">
          <source>Int</source>
          <target state="translated">Int</target>
        </trans-unit>
        <trans-unit id="42b8b7126ef56dbc26bf100638b322e50dec044d" translate="yes" xml:space="preserve">
          <source>Int$</source>
          <target state="translated">Int$</target>
        </trans-unit>
        <trans-unit id="be94aaa43d61091ca8c70708f9d5ff8f7c9f37cd" translate="yes" xml:space="preserve">
          <source>Int$.MaxValue()</source>
          <target state="translated">Int$.MaxValue()</target>
        </trans-unit>
        <trans-unit id="bcb66f08f647b4e232ce848ab01e4102c7230dd0" translate="yes" xml:space="preserve">
          <source>Int$.MinValue()</source>
          <target state="translated">Int$.MinValue()</target>
        </trans-unit>
        <trans-unit id="766809e7820655130607f27d2b0bd61502ea594d" translate="yes" xml:space="preserve">
          <source>Int$.box()</source>
          <target state="translated">Int$.box()</target>
        </trans-unit>
        <trans-unit id="79ca02f000116e8c7d671f1213ca52a97c7a706a" translate="yes" xml:space="preserve">
          <source>Int$.int2double()</source>
          <target state="translated">Int$.int2double()</target>
        </trans-unit>
        <trans-unit id="80e09776557a585ef1b1e9dba2eb26d69d03e12a" translate="yes" xml:space="preserve">
          <source>Int$.int2float()</source>
          <target state="translated">Int$.int2float()</target>
        </trans-unit>
        <trans-unit id="93a60e50924f6fe2ba9f38a8447fc93c68fdb3b7" translate="yes" xml:space="preserve">
          <source>Int$.int2long()</source>
          <target state="translated">Int$.int2long()</target>
        </trans-unit>
        <trans-unit id="a8625a01f937de0081d61c9c143c3b49b0d21a6f" translate="yes" xml:space="preserve">
          <source>Int$.toString()</source>
          <target state="translated">Int$.toString()</target>
        </trans-unit>
        <trans-unit id="c597bda435c5b5a1b1b172fbcea942ab0ad1ed77" translate="yes" xml:space="preserve">
          <source>Int$.unbox()</source>
          <target state="translated">Int$.unbox()</target>
        </trans-unit>
        <trans-unit id="fd9413b68325a5c001aa640aeca7f869b7a75a8e" translate="yes" xml:space="preserve">
          <source>Int.!=()</source>
          <target state="translated">Int.!=()</target>
        </trans-unit>
        <trans-unit id="60fc70182be112e3a15a81047feb35f1d3698586" translate="yes" xml:space="preserve">
          <source>Int.%()</source>
          <target state="translated">Int.%()</target>
        </trans-unit>
        <trans-unit id="72438dc41cc428bd82d776ec0fc6fcd394f8134b" translate="yes" xml:space="preserve">
          <source>Int.&amp;amp;()</source>
          <target state="translated">Int.&amp;amp;()</target>
        </trans-unit>
        <trans-unit id="db272aa691146b5d36ae6287ccdba67fd11b4dce" translate="yes" xml:space="preserve">
          <source>Int.&amp;gt;&amp;gt;&amp;gt;()</source>
          <target state="translated">Int.&amp;gt;&amp;gt;&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="17bdf7bccbdc5e32df0b0c8833090553c0e12d16" translate="yes" xml:space="preserve">
          <source>Int.&amp;gt;&amp;gt;()</source>
          <target state="translated">Int.&amp;gt;&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="189f92ea0b24f0baf3425bb1e25fcec8cabfe943" translate="yes" xml:space="preserve">
          <source>Int.&amp;gt;()</source>
          <target state="translated">Int.&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="aa12923d15b07ff42b3aa7c9b380f046c1532872" translate="yes" xml:space="preserve">
          <source>Int.&amp;gt;=()</source>
          <target state="translated">Int.&amp;gt;=()</target>
        </trans-unit>
        <trans-unit id="96922802cf1ccdee1bc2a3dd66db9126c9a3e52a" translate="yes" xml:space="preserve">
          <source>Int.&amp;lt;&amp;lt;()</source>
          <target state="translated">Int.&amp;lt;&amp;lt;()</target>
        </trans-unit>
        <trans-unit id="2b5b7fb12514de6f6d3064f854ccc0821a6c1ea9" translate="yes" xml:space="preserve">
          <source>Int.&amp;lt;()</source>
          <target state="translated">Int.&amp;lt;()</target>
        </trans-unit>
        <trans-unit id="d275b4e80ea20f1c49fe69322e86a0f54fb38d63" translate="yes" xml:space="preserve">
          <source>Int.&amp;lt;=()</source>
          <target state="translated">Int.&amp;lt;=()</target>
        </trans-unit>
        <trans-unit id="8f6b8494f1c69a7b21baa3358d7f6ffcc7062416" translate="yes" xml:space="preserve">
          <source>Int.*()</source>
          <target state="translated">Int.*()</target>
        </trans-unit>
        <trans-unit id="5db5ef6a60556c2a462e3b00578a8c953dbe60df" translate="yes" xml:space="preserve">
          <source>Int.-()</source>
          <target state="translated">Int.-()</target>
        </trans-unit>
        <trans-unit id="24a0bbe0e9967b4eedd02f75c283cacd7b787548" translate="yes" xml:space="preserve">
          <source>Int./()</source>
          <target state="translated">Int./()</target>
        </trans-unit>
        <trans-unit id="6382283d05c93565e6989f70759e2d4c3b0c9f11" translate="yes" xml:space="preserve">
          <source>Int.==()</source>
          <target state="translated">Int.==()</target>
        </trans-unit>
        <trans-unit id="d31170c25579550fa0a7512ed063258ffd8c62f8" translate="yes" xml:space="preserve">
          <source>Int.@deprecated()</source>
          <target state="translated">Int.@deprecated()</target>
        </trans-unit>
        <trans-unit id="4ec898dab415bb30354c39ba5566411ab50a69bd" translate="yes" xml:space="preserve">
          <source>Int.^()</source>
          <target state="translated">Int.^()</target>
        </trans-unit>
        <trans-unit id="5a9c4e1cf496a65de0518744d78b82d9c638a0a5" translate="yes" xml:space="preserve">
          <source>Int.getClass()</source>
          <target state="translated">Int.getClass()</target>
        </trans-unit>
        <trans-unit id="5a396e238918524a679a16f74e82ded41dab1cd8" translate="yes" xml:space="preserve">
          <source>Int.scala</source>
          <target state="translated">Int.scala</target>
        </trans-unit>
        <trans-unit id="de4d750e282ca9b85602aca27e77f75d8dd59bd9" translate="yes" xml:space="preserve">
          <source>Int.toByte()</source>
          <target state="translated">Int.toByte()</target>
        </trans-unit>
        <trans-unit id="57bb0ef92b83618362cc87e1822a25fee0a07c34" translate="yes" xml:space="preserve">
          <source>Int.toChar()</source>
          <target state="translated">Int.toChar()</target>
        </trans-unit>
        <trans-unit id="e64e383a9a6a12ee32c4a29a9caa9d7cb63f9952" translate="yes" xml:space="preserve">
          <source>Int.toDouble()</source>
          <target state="translated">Int.toDouble()</target>
        </trans-unit>
        <trans-unit id="1c0d24e22bea35e31880ba16d32cefacf224242f" translate="yes" xml:space="preserve">
          <source>Int.toFloat()</source>
          <target state="translated">Int.toFloat()</target>
        </trans-unit>
        <trans-unit id="a97326de756b752d5f904df8f8b0086d9d1b3fef" translate="yes" xml:space="preserve">
          <source>Int.toInt()</source>
          <target state="translated">Int.toInt()</target>
        </trans-unit>
        <trans-unit id="8e5dee6888b11d297351849818f0dffa1a76d088" translate="yes" xml:space="preserve">
          <source>Int.toLong()</source>
          <target state="translated">Int.toLong()</target>
        </trans-unit>
        <trans-unit id="d2ac262011b9bf317147294730bb6b0354fb6a7b" translate="yes" xml:space="preserve">
          <source>Int.toShort()</source>
          <target state="translated">Int.toShort()</target>
        </trans-unit>
        <trans-unit id="e338c17bbc43b5bb82e5b3e01ee16bc2db25b17e" translate="yes" xml:space="preserve">
          <source>Int.unary_+()</source>
          <target state="translated">Int.unary_+()</target>
        </trans-unit>
        <trans-unit id="8eae4318313f3b0443ce763f8778a0216070bfa7" translate="yes" xml:space="preserve">
          <source>Int.unary_-()</source>
          <target state="translated">Int.unary_-()</target>
        </trans-unit>
        <trans-unit id="f350e6c01a021da9f1f4512222c9e3536a51da44" translate="yes" xml:space="preserve">
          <source>Int.unary_~()</source>
          <target state="translated">Int.unary_~()</target>
        </trans-unit>
        <trans-unit id="e40b895ccfded9b694aca54324ea3c0760c4c7cd" translate="yes" xml:space="preserve">
          <source>Int.|()</source>
          <target state="translated">Int.|()</target>
        </trans-unit>
        <trans-unit id="6d2ec32b56da42445c4f1ea8752bafed29798f34" translate="yes" xml:space="preserve">
          <source>IntAccumulator</source>
          <target state="translated">IntAccumulator</target>
        </trans-unit>
        <trans-unit id="404aa7a4d6ec428a7c5d614e8d123dcf3c783471" translate="yes" xml:space="preserve">
          <source>IntAccumulator$</source>
          <target state="translated">IntAccumulator$</target>
        </trans-unit>
        <trans-unit id="e6916cbe32906b9b1175dda401c66d0bd2e45539" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.SerializationProxy</source>
          <target state="translated">IntAccumulator$.SerializationProxy</target>
        </trans-unit>
        <trans-unit id="620e67ba868a77ff95f9f124910b461a1365de69" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.SerializationProxy()</source>
          <target state="translated">IntAccumulator$.SerializationProxy()</target>
        </trans-unit>
        <trans-unit id="e5ae9a075d14dc685bb3d5b6abccac9d4ae2d00d" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.SerializationProxy.SerializationProxy()</source>
          <target state="translated">IntAccumulator$.SerializationProxy.SerializationProxy()</target>
        </trans-unit>
        <trans-unit id="00d7e31cff21b5177c46f6312dd17644ba661030" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.adder()</source>
          <target state="translated">IntAccumulator$.adder()</target>
        </trans-unit>
        <trans-unit id="8171bca9eb0bc9690cd29b8f32b6b809b9aedb17" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.boxedAdder()</source>
          <target state="translated">IntAccumulator$.boxedAdder()</target>
        </trans-unit>
        <trans-unit id="0a068e7080a11c96791ad9ec7f43d6377f19ce60" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.empty()</source>
          <target state="translated">IntAccumulator$.empty()</target>
        </trans-unit>
        <trans-unit id="8d9ac6e432383044c2ab0156e39554b23f66bdee" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.fromSpecific()</source>
          <target state="translated">IntAccumulator$.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="846d70679614df435349263b3e5dd292d68edd38" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.merger()</source>
          <target state="translated">IntAccumulator$.merger()</target>
        </trans-unit>
        <trans-unit id="852a641f517dcadf9edaf435882517412b6b31f8" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.newBuilder()</source>
          <target state="translated">IntAccumulator$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="831e60aff108c5f830076c865f8cab545d26587c" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.supplier()</source>
          <target state="translated">IntAccumulator$.supplier()</target>
        </trans-unit>
        <trans-unit id="fffc608f3b04e8c5f17f8bc869c32981e6a67a02" translate="yes" xml:space="preserve">
          <source>IntAccumulator$.toJavaIntegerAccumulator()</source>
          <target state="translated">IntAccumulator$.toJavaIntegerAccumulator()</target>
        </trans-unit>
        <trans-unit id="b5cdff488846d5150609294656b5dac34f88daaf" translate="yes" xml:space="preserve">
          <source>IntAccumulator.IntAccumulator()</source>
          <target state="translated">IntAccumulator.IntAccumulator()</target>
        </trans-unit>
        <trans-unit id="0438511bb9f249994e1ad7e9b6393364af7b58ad" translate="yes" xml:space="preserve">
          <source>IntAccumulator.addOne()</source>
          <target state="translated">IntAccumulator.addOne()</target>
        </trans-unit>
        <trans-unit id="269580718f6ceb91ac53d8bd287e081d8a28611f" translate="yes" xml:space="preserve">
          <source>IntAccumulator.apply()</source>
          <target state="translated">IntAccumulator.apply()</target>
        </trans-unit>
        <trans-unit id="504f6a8c76671c994c80d7ded3fc46d626d19fd5" translate="yes" xml:space="preserve">
          <source>IntAccumulator.className()</source>
          <target state="translated">IntAccumulator.className()</target>
        </trans-unit>
        <trans-unit id="9a61ad67571c5b66719b90080f9492f9c3a41764" translate="yes" xml:space="preserve">
          <source>IntAccumulator.clear()</source>
          <target state="translated">IntAccumulator.clear()</target>
        </trans-unit>
        <trans-unit id="a63f6fb5b2b4b05d72ec7248bca8d59c4a7d2877" translate="yes" xml:space="preserve">
          <source>IntAccumulator.collect()</source>
          <target state="translated">IntAccumulator.collect()</target>
        </trans-unit>
        <trans-unit id="1bb88e8144c5eb8ad2ce523c756c4004c24b5cba" translate="yes" xml:space="preserve">
          <source>IntAccumulator.count()</source>
          <target state="translated">IntAccumulator.count()</target>
        </trans-unit>
        <trans-unit id="f933fbfe496590fec5eeac0fcada1392a0bbcdbd" translate="yes" xml:space="preserve">
          <source>IntAccumulator.countLong()</source>
          <target state="translated">IntAccumulator.countLong()</target>
        </trans-unit>
        <trans-unit id="061ed8c592ed730958864c0f20d5b093042260e3" translate="yes" xml:space="preserve">
          <source>IntAccumulator.drain()</source>
          <target state="translated">IntAccumulator.drain()</target>
        </trans-unit>
        <trans-unit id="cb0e5eb2fe41f79af64484c23eed17e995f9f16d" translate="yes" xml:space="preserve">
          <source>IntAccumulator.efficientStepper()</source>
          <target state="translated">IntAccumulator.efficientStepper()</target>
        </trans-unit>
        <trans-unit id="5344f5485f1141d66edea2e97c279b516e1fd20a" translate="yes" xml:space="preserve">
          <source>IntAccumulator.empty()</source>
          <target state="translated">IntAccumulator.empty()</target>
        </trans-unit>
        <trans-unit id="90703f5874408c98eee23db0552c36a0c3eb2a56" translate="yes" xml:space="preserve">
          <source>IntAccumulator.exists()</source>
          <target state="translated">IntAccumulator.exists()</target>
        </trans-unit>
        <trans-unit id="7587979f993d9eac9ef5722e422a835af02ec0cd" translate="yes" xml:space="preserve">
          <source>IntAccumulator.filter()</source>
          <target state="translated">IntAccumulator.filter()</target>
        </trans-unit>
        <trans-unit id="d687f95b814bd4edbe19d38810228c0c94b1c602" translate="yes" xml:space="preserve">
          <source>IntAccumulator.filterNot()</source>
          <target state="translated">IntAccumulator.filterNot()</target>
        </trans-unit>
        <trans-unit id="e625b991e496b96c5618f421ea4ce0428add2923" translate="yes" xml:space="preserve">
          <source>IntAccumulator.flatMap()</source>
          <target state="translated">IntAccumulator.flatMap()</target>
        </trans-unit>
        <trans-unit id="310a6db31ec285a9ebca1e51f73793a2fd7a0807" translate="yes" xml:space="preserve">
          <source>IntAccumulator.forall()</source>
          <target state="translated">IntAccumulator.forall()</target>
        </trans-unit>
        <trans-unit id="1af9e30d6fb2bed43d7172c1f399f4ff720d9cc0" translate="yes" xml:space="preserve">
          <source>IntAccumulator.foreach()</source>
          <target state="translated">IntAccumulator.foreach()</target>
        </trans-unit>
        <trans-unit id="93929ed9645a419da627b4ba316720a3ad137697" translate="yes" xml:space="preserve">
          <source>IntAccumulator.fromSpecific()</source>
          <target state="translated">IntAccumulator.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="37928a002193d4dacdf68c353cde5d1d992317e7" translate="yes" xml:space="preserve">
          <source>IntAccumulator.iterableFactory()</source>
          <target state="translated">IntAccumulator.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="126b99467e77919a59be2555c1b0b710fe9a6121" translate="yes" xml:space="preserve">
          <source>IntAccumulator.iterator()</source>
          <target state="translated">IntAccumulator.iterator()</target>
        </trans-unit>
        <trans-unit id="784dd2bf3144c53b59814bbe861c663cee6d4b0f" translate="yes" xml:space="preserve">
          <source>IntAccumulator.map()</source>
          <target state="translated">IntAccumulator.map()</target>
        </trans-unit>
        <trans-unit id="a3e7aab6bd8e0e8556d83081b98eda727d1e2cdb" translate="yes" xml:space="preserve">
          <source>IntAccumulator.newSpecificBuilder()</source>
          <target state="translated">IntAccumulator.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="7b4c2a8bc7c8d7bd141b0c26c04874dae65deb66" translate="yes" xml:space="preserve">
          <source>IntAccumulator.result()</source>
          <target state="translated">IntAccumulator.result()</target>
        </trans-unit>
        <trans-unit id="169291693f2df53752be8ffbe33a1b47fa98e136" translate="yes" xml:space="preserve">
          <source>IntAccumulator.scala</source>
          <target state="translated">IntAccumulator.scala</target>
        </trans-unit>
        <trans-unit id="b2ea687b95275d1d7609e70137ef22dd337e13a6" translate="yes" xml:space="preserve">
          <source>IntAccumulator.to()</source>
          <target state="translated">IntAccumulator.to()</target>
        </trans-unit>
        <trans-unit id="047f197538f841a143e9b9466c17273012828b58" translate="yes" xml:space="preserve">
          <source>IntAccumulator.toArray()</source>
          <target state="translated">IntAccumulator.toArray()</target>
        </trans-unit>
        <trans-unit id="d2cfc3f52350e4749fa8aa1666a2958bca9f79be" translate="yes" xml:space="preserve">
          <source>IntAccumulator.toList()</source>
          <target state="translated">IntAccumulator.toList()</target>
        </trans-unit>
        <trans-unit id="cc6d3c387439fd078b008fe529e8de19f9d63836" translate="yes" xml:space="preserve">
          <source>IntAccumulator.update()</source>
          <target state="translated">IntAccumulator.update()</target>
        </trans-unit>
        <trans-unit id="410594d98e56cff900cdf88d54dcc20a6430975e" translate="yes" xml:space="preserve">
          <source>IntConsumer</source>
          <target state="translated">IntConsumer</target>
        </trans-unit>
        <trans-unit id="8a5aa896ff34cca6465614cce07103cd0685a953" translate="yes" xml:space="preserve">
          <source>IntIsIntegral</source>
          <target state="translated">IntIsIntegral</target>
        </trans-unit>
        <trans-unit id="e09cb14a20b097264eac071df65d1afd98163fbc" translate="yes" xml:space="preserve">
          <source>IntMap</source>
          <target state="translated">IntMap</target>
        </trans-unit>
        <trans-unit id="18ae0e16e35828708fc44a33f0c8ae7b14f1c3c2" translate="yes" xml:space="preserve">
          <source>IntMap$</source>
          <target state="translated">IntMap$</target>
        </trans-unit>
        <trans-unit id="55218045e2bba7fd799f248a0d45ddc11a140484" translate="yes" xml:space="preserve">
          <source>IntMap$.apply()</source>
          <target state="translated">IntMap$.apply()</target>
        </trans-unit>
        <trans-unit id="d6ae5e1f6ff2d24892728ae63d58a18444d6c347" translate="yes" xml:space="preserve">
          <source>IntMap$.buildFromIntMap()</source>
          <target state="translated">IntMap$.buildFromIntMap()</target>
        </trans-unit>
        <trans-unit id="e01c6ac71544e7f4085406e89946e247e20c6cff" translate="yes" xml:space="preserve">
          <source>IntMap$.empty()</source>
          <target state="translated">IntMap$.empty()</target>
        </trans-unit>
        <trans-unit id="d884cd02070b7d4891991518b899c482cd920b95" translate="yes" xml:space="preserve">
          <source>IntMap$.from()</source>
          <target state="translated">IntMap$.from()</target>
        </trans-unit>
        <trans-unit id="7adcb23951513b6f39df528c540d0b305ae2d0e2" translate="yes" xml:space="preserve">
          <source>IntMap$.iterableFactory()</source>
          <target state="translated">IntMap$.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="14927a58c109ce09c4488f7534ad7c6cb7c88c05" translate="yes" xml:space="preserve">
          <source>IntMap$.newBuilder()</source>
          <target state="translated">IntMap$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="73559cc9aa3674c92447a7c0f1d9a9926afe38bd" translate="yes" xml:space="preserve">
          <source>IntMap$.singleton()</source>
          <target state="translated">IntMap$.singleton()</target>
        </trans-unit>
        <trans-unit id="116feec6366c097c6ad776e1e1bdc053dd057464" translate="yes" xml:space="preserve">
          <source>IntMap$.toBuildFrom()</source>
          <target state="translated">IntMap$.toBuildFrom()</target>
        </trans-unit>
        <trans-unit id="56c0a09a5c01ba26f23ce021c7abe199e37c2ab0" translate="yes" xml:space="preserve">
          <source>IntMap$.toFactory()</source>
          <target state="translated">IntMap$.toFactory()</target>
        </trans-unit>
        <trans-unit id="f55988b91b7eec2940227d387c8c2efb1861e160" translate="yes" xml:space="preserve">
          <source>IntMap.+()</source>
          <target state="translated">IntMap.+()</target>
        </trans-unit>
        <trans-unit id="c440fa375d977ef2a633458749dc5595ff71fd04" translate="yes" xml:space="preserve">
          <source>IntMap.++()</source>
          <target state="translated">IntMap.++()</target>
        </trans-unit>
        <trans-unit id="28ef5fe79405b6e2bf7e4d0a73fdc3928704261a" translate="yes" xml:space="preserve">
          <source>IntMap.apply()</source>
          <target state="translated">IntMap.apply()</target>
        </trans-unit>
        <trans-unit id="49626a7f50f804c7d141d9ca85ffddc21c77fe52" translate="yes" xml:space="preserve">
          <source>IntMap.className()</source>
          <target state="translated">IntMap.className()</target>
        </trans-unit>
        <trans-unit id="7a4e13cf38bfd94d33e575338845b2a294c37e65" translate="yes" xml:space="preserve">
          <source>IntMap.collect()</source>
          <target state="translated">IntMap.collect()</target>
        </trans-unit>
        <trans-unit id="9feb40a39472ea392b918f04a72cec0ee786db06" translate="yes" xml:space="preserve">
          <source>IntMap.concat()</source>
          <target state="translated">IntMap.concat()</target>
        </trans-unit>
        <trans-unit id="11f0e3c9c48d2c7aadb93db24899a1010d065f02" translate="yes" xml:space="preserve">
          <source>IntMap.empty()</source>
          <target state="translated">IntMap.empty()</target>
        </trans-unit>
        <trans-unit id="5c591d839b3a72d5d6d65a43ed0c4f12f9c3abab" translate="yes" xml:space="preserve">
          <source>IntMap.filter()</source>
          <target state="translated">IntMap.filter()</target>
        </trans-unit>
        <trans-unit id="d57984961950f4a463602e6a55b302ef1c7ee7b7" translate="yes" xml:space="preserve">
          <source>IntMap.firstKey()</source>
          <target state="translated">IntMap.firstKey()</target>
        </trans-unit>
        <trans-unit id="c6c723de55b98d8081057f93fa348ffd4da58591" translate="yes" xml:space="preserve">
          <source>IntMap.flatMap()</source>
          <target state="translated">IntMap.flatMap()</target>
        </trans-unit>
        <trans-unit id="b665fa303d2ab3d19189e4655deeb985642f4de9" translate="yes" xml:space="preserve">
          <source>IntMap.foreach()</source>
          <target state="translated">IntMap.foreach()</target>
        </trans-unit>
        <trans-unit id="b75b3c2f3e23bc78346e73600cc81b8deb1c7eff" translate="yes" xml:space="preserve">
          <source>IntMap.foreachEntry()</source>
          <target state="translated">IntMap.foreachEntry()</target>
        </trans-unit>
        <trans-unit id="44ce9fac75bf7a01065243a1c43425d413d55c47" translate="yes" xml:space="preserve">
          <source>IntMap.foreachKey()</source>
          <target state="translated">IntMap.foreachKey()</target>
        </trans-unit>
        <trans-unit id="4102292c2d31b27c812fab3e5c8fd10ec419b64e" translate="yes" xml:space="preserve">
          <source>IntMap.foreachValue()</source>
          <target state="translated">IntMap.foreachValue()</target>
        </trans-unit>
        <trans-unit id="4066e52c07a20c6755a8946974be4492651dcef3" translate="yes" xml:space="preserve">
          <source>IntMap.fromSpecific()</source>
          <target state="translated">IntMap.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="8d3cd82942e6fe784693f20d16a5cead98f1da74" translate="yes" xml:space="preserve">
          <source>IntMap.get()</source>
          <target state="translated">IntMap.get()</target>
        </trans-unit>
        <trans-unit id="2f1036465adfc4e2c74e46288b643dba2c4e3546" translate="yes" xml:space="preserve">
          <source>IntMap.getOrElse()</source>
          <target state="translated">IntMap.getOrElse()</target>
        </trans-unit>
        <trans-unit id="6694e8e615900040d444568733e34b6e612fed9a" translate="yes" xml:space="preserve">
          <source>IntMap.intMapFrom()</source>
          <target state="translated">IntMap.intMapFrom()</target>
        </trans-unit>
        <trans-unit id="5f6a0f55be843a4fc84337e5cfdddcce6ba60d5f" translate="yes" xml:space="preserve">
          <source>IntMap.intersection()</source>
          <target state="translated">IntMap.intersection()</target>
        </trans-unit>
        <trans-unit id="909c64ecb37eca01a1956e64d5cf48b9895cde30" translate="yes" xml:space="preserve">
          <source>IntMap.intersectionWith()</source>
          <target state="translated">IntMap.intersectionWith()</target>
        </trans-unit>
        <trans-unit id="a9a95f71442f9a98a33e345d516d6f59fad94a81" translate="yes" xml:space="preserve">
          <source>IntMap.isEmpty()</source>
          <target state="translated">IntMap.isEmpty()</target>
        </trans-unit>
        <trans-unit id="b86dd96dc49633abdc97b2bc7e86829877828a90" translate="yes" xml:space="preserve">
          <source>IntMap.iterator()</source>
          <target state="translated">IntMap.iterator()</target>
        </trans-unit>
        <trans-unit id="85dc9bee4be4d12b78a3d96db6cd140f14bb10c5" translate="yes" xml:space="preserve">
          <source>IntMap.keysIterator()</source>
          <target state="translated">IntMap.keysIterator()</target>
        </trans-unit>
        <trans-unit id="d169adc705d5f902c9fe9b75513ca5a1bf08ab9c" translate="yes" xml:space="preserve">
          <source>IntMap.knownSize()</source>
          <target state="translated">IntMap.knownSize()</target>
        </trans-unit>
        <trans-unit id="4fa567aaed669c0e7fd5b4f98fe7d01021145d80" translate="yes" xml:space="preserve">
          <source>IntMap.lastKey()</source>
          <target state="translated">IntMap.lastKey()</target>
        </trans-unit>
        <trans-unit id="e683c06d502e6b71ec74b16699ccce0beb194be9" translate="yes" xml:space="preserve">
          <source>IntMap.map()</source>
          <target state="translated">IntMap.map()</target>
        </trans-unit>
        <trans-unit id="5a79dd9f2d68adb738a6f9ed947fd7a7254a87ab" translate="yes" xml:space="preserve">
          <source>IntMap.modifyOrRemove()</source>
          <target state="translated">IntMap.modifyOrRemove()</target>
        </trans-unit>
        <trans-unit id="1b7cbf30efcc92209b3d294201587fe10b1db9b7" translate="yes" xml:space="preserve">
          <source>IntMap.newSpecificBuilder()</source>
          <target state="translated">IntMap.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="a9f02a240baa808387a063f188beaa8d3062e5d1" translate="yes" xml:space="preserve">
          <source>IntMap.removed()</source>
          <target state="translated">IntMap.removed()</target>
        </trans-unit>
        <trans-unit id="189afd3b6385f5583910dd893b8115c5a9114c32" translate="yes" xml:space="preserve">
          <source>IntMap.scala</source>
          <target state="translated">IntMap.scala</target>
        </trans-unit>
        <trans-unit id="906999b1756685c38b4e1802c6c76c8a5b224849" translate="yes" xml:space="preserve">
          <source>IntMap.size()</source>
          <target state="translated">IntMap.size()</target>
        </trans-unit>
        <trans-unit id="9448b90fa26e96c5def11b22911d8c1c129a8194" translate="yes" xml:space="preserve">
          <source>IntMap.toList()</source>
          <target state="translated">IntMap.toList()</target>
        </trans-unit>
        <trans-unit id="3e014c3f248985d097536b797499789e9ece4d11" translate="yes" xml:space="preserve">
          <source>IntMap.transform()</source>
          <target state="translated">IntMap.transform()</target>
        </trans-unit>
        <trans-unit id="66d9b18c89d2b7a3f7024f02e453261fc0a42697" translate="yes" xml:space="preserve">
          <source>IntMap.unionWith()</source>
          <target state="translated">IntMap.unionWith()</target>
        </trans-unit>
        <trans-unit id="007365f1514b51510af727f2edb058c6fd6fcc10" translate="yes" xml:space="preserve">
          <source>IntMap.updateWith()</source>
          <target state="translated">IntMap.updateWith()</target>
        </trans-unit>
        <trans-unit id="4927cba8f5040bc7b0e8ae98efd567e786fdd4c1" translate="yes" xml:space="preserve">
          <source>IntMap.updated()</source>
          <target state="translated">IntMap.updated()</target>
        </trans-unit>
        <trans-unit id="1da1bcf0ec6cc6a75b4c170c40e32ba6ebb0eda9" translate="yes" xml:space="preserve">
          <source>IntMap.valuesIterator()</source>
          <target state="translated">IntMap.valuesIterator()</target>
        </trans-unit>
        <trans-unit id="82dad76e5ac0330c1cb6a968106c411f96d9a5a2" translate="yes" xml:space="preserve">
          <source>IntMap.writeReplace()</source>
          <target state="translated">IntMap.writeReplace()</target>
        </trans-unit>
        <trans-unit id="309fee8187082f78425e5e7c6a0b5c8fec85b726" translate="yes" xml:space="preserve">
          <source>IntPredicate</source>
          <target state="translated">IntPredicate</target>
        </trans-unit>
        <trans-unit id="dfa7ec5a1237e218dadd9b7e9e10adb84b97dffe" translate="yes" xml:space="preserve">
          <source>IntStepper</source>
          <target state="translated">IntStepper</target>
        </trans-unit>
        <trans-unit id="7f794f7830df9b57b0450a6397b40d2440c954c7" translate="yes" xml:space="preserve">
          <source>IntStepper$</source>
          <target state="translated">IntStepper$</target>
        </trans-unit>
        <trans-unit id="619a27afb232d3109b9bd390e91d54f86e84bd37" translate="yes" xml:space="preserve">
          <source>IntStepper$.IntStepperSpliterator</source>
          <target state="translated">IntStepper$.IntStepperSpliterator</target>
        </trans-unit>
        <trans-unit id="065f0494248d1c59ab86220f4e8a978e4044091d" translate="yes" xml:space="preserve">
          <source>IntStepper$.IntStepperSpliterator()</source>
          <target state="translated">IntStepper$.IntStepperSpliterator()</target>
        </trans-unit>
        <trans-unit id="31d21463a578833370a77ff0aab2eccbd6a471ad" translate="yes" xml:space="preserve">
          <source>IntStepper$.IntStepperSpliterator.IntStepperSpliterator()</source>
          <target state="translated">IntStepper$.IntStepperSpliterator.IntStepperSpliterator()</target>
        </trans-unit>
        <trans-unit id="68c7f2b8078fd0c21ba952a059a99f4721cd0a09" translate="yes" xml:space="preserve">
          <source>IntStepper$.IntStepperSpliterator.characteristics()</source>
          <target state="translated">IntStepper$.IntStepperSpliterator.characteristics()</target>
        </trans-unit>
        <trans-unit id="8f77b642a72d90d83d49513978acb14a97631039" translate="yes" xml:space="preserve">
          <source>IntStepper$.IntStepperSpliterator.estimateSize()</source>
          <target state="translated">IntStepper$.IntStepperSpliterator.estimateSize()</target>
        </trans-unit>
        <trans-unit id="80bd71f844850ec88d5d2e6e1c77d4dbb15d38bf" translate="yes" xml:space="preserve">
          <source>IntStepper$.IntStepperSpliterator.forEachRemaining()</source>
          <target state="translated">IntStepper$.IntStepperSpliterator.forEachRemaining()</target>
        </trans-unit>
        <trans-unit id="4c9f80343b4d8d64d4c5363a39aae0934d1a4408" translate="yes" xml:space="preserve">
          <source>IntStepper$.IntStepperSpliterator.tryAdvance()</source>
          <target state="translated">IntStepper$.IntStepperSpliterator.tryAdvance()</target>
        </trans-unit>
        <trans-unit id="1caef328403605f9d57f7bd8dc10528885e4fcbb" translate="yes" xml:space="preserve">
          <source>IntStepper$.IntStepperSpliterator.trySplit()</source>
          <target state="translated">IntStepper$.IntStepperSpliterator.trySplit()</target>
        </trans-unit>
        <trans-unit id="335a7a3d159e6c05c3cae342726502316f5a74ed" translate="yes" xml:space="preserve">
          <source>IntStepper.javaIterator()</source>
          <target state="translated">IntStepper.javaIterator()</target>
        </trans-unit>
        <trans-unit id="7404f6875a52cc0169451e54838e9e470c7794e8" translate="yes" xml:space="preserve">
          <source>IntStepper.spliterator()</source>
          <target state="translated">IntStepper.spliterator()</target>
        </trans-unit>
        <trans-unit id="1cfcc0cdbf5b4a21330b5f4232d2ccabc83460e8" translate="yes" xml:space="preserve">
          <source>IntStepper.trySplit()</source>
          <target state="translated">IntStepper.trySplit()</target>
        </trans-unit>
        <trans-unit id="990d3e33b1ecfefb7b2e3ff3581805bbe80cce25" translate="yes" xml:space="preserve">
          <source>IntUnaryOperator</source>
          <target state="translated">IntUnaryOperator</target>
        </trans-unit>
        <trans-unit id="88f093d2ec4795daa0985c94afa80466ee67f2fb" translate="yes" xml:space="preserve">
          <source>Integer &amp;rarr; AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="translated">整数&amp;rarr;AnyRef&amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;任意&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d72c96dfdf3693cb252770e9849326c383dc9212" translate="yes" xml:space="preserve">
          <source>Integer &amp;rarr; Comparable</source>
          <target state="translated">整数&amp;rarr;同等</target>
        </trans-unit>
        <trans-unit id="2efc8f0e071c7807771341383370886327cdc6a5" translate="yes" xml:space="preserve">
          <source>Integer &amp;rarr; Number</source>
          <target state="translated">整数&amp;rarr;数</target>
        </trans-unit>
        <trans-unit id="e3b59c9f1c26e320e172cac39695e68589e740a0" translate="yes" xml:space="preserve">
          <source>Integral</source>
          <target state="translated">Integral</target>
        </trans-unit>
        <trans-unit id="5f32d1069933685092167728b621d423a3c82e5f" translate="yes" xml:space="preserve">
          <source>Integral$</source>
          <target state="translated">Integral$</target>
        </trans-unit>
        <trans-unit id="d5eae9505e3a81648289942ac5d426b3e85b0663" translate="yes" xml:space="preserve">
          <source>Integral$.ExtraImplicits</source>
          <target state="translated">Integral$.ExtraImplicits</target>
        </trans-unit>
        <trans-unit id="467209ad785eeb48c1d22d500fc4cf75b2f9e609" translate="yes" xml:space="preserve">
          <source>Integral$.ExtraImplicits()</source>
          <target state="translated">Integral$.ExtraImplicits()</target>
        </trans-unit>
        <trans-unit id="7861ad44016571388f3d04735112a4721eee7674" translate="yes" xml:space="preserve">
          <source>Integral$.ExtraImplicits.infixIntegralOps()</source>
          <target state="translated">Integral$.ExtraImplicits.infixIntegralOps()</target>
        </trans-unit>
        <trans-unit id="9773a8f7fea8a4a7ce7e96b9e75a3790fab4f030" translate="yes" xml:space="preserve">
          <source>Integral$.Implicits$</source>
          <target state="translated">Integral$.Implicits$</target>
        </trans-unit>
        <trans-unit id="cedb4d4b8bf04de5dd34c0d5906d692ccf148a5a" translate="yes" xml:space="preserve">
          <source>Integral$.Implicits()</source>
          <target state="translated">Integral$.Implicits()</target>
        </trans-unit>
        <trans-unit id="b4f13ea86bf6d5a96dc8b557969903fa4a0b87d4" translate="yes" xml:space="preserve">
          <source>Integral$.apply()</source>
          <target state="translated">Integral$.apply()</target>
        </trans-unit>
        <trans-unit id="f78d93c1c8943c43398d4dcc2465c7f8fc12769f" translate="yes" xml:space="preserve">
          <source>Integral.IntegralOps</source>
          <target state="translated">Integral.IntegralOps</target>
        </trans-unit>
        <trans-unit id="4d4d9a92c3e4ea064bbc99cd8d26d1d8994d3a49" translate="yes" xml:space="preserve">
          <source>Integral.IntegralOps()</source>
          <target state="translated">Integral.IntegralOps()</target>
        </trans-unit>
        <trans-unit id="169c88b2537ffdd169bc5f06b493646c6f9ee091" translate="yes" xml:space="preserve">
          <source>Integral.IntegralOps.%()</source>
          <target state="translated">Integral.IntegralOps.%()</target>
        </trans-unit>
        <trans-unit id="bff7752d573e8993d01d82778162b19cead81205" translate="yes" xml:space="preserve">
          <source>Integral.IntegralOps./%()</source>
          <target state="translated">Integral.IntegralOps./%()</target>
        </trans-unit>
        <trans-unit id="ad6dc160eec195e720615b462a9a2850c5b49dc4" translate="yes" xml:space="preserve">
          <source>Integral.IntegralOps./()</source>
          <target state="translated">Integral.IntegralOps./()</target>
        </trans-unit>
        <trans-unit id="69470a3659486d3ba9fda27ebb86b7ed9f2d4f12" translate="yes" xml:space="preserve">
          <source>Integral.IntegralOps.IntegralOps()</source>
          <target state="translated">Integral.IntegralOps.IntegralOps()</target>
        </trans-unit>
        <trans-unit id="ffd037d7d91a33855bdcda8bf38f93377dbfb2bf" translate="yes" xml:space="preserve">
          <source>Integral.mkNumericOps()</source>
          <target state="translated">Integral.mkNumericOps()</target>
        </trans-unit>
        <trans-unit id="0079e1040cdbb2b063680b1e78f052fd06196adb" translate="yes" xml:space="preserve">
          <source>Integral.quot()</source>
          <target state="translated">Integral.quot()</target>
        </trans-unit>
        <trans-unit id="1db889b36c756117665c47af100a31534d3b4b35" translate="yes" xml:space="preserve">
          <source>Integral.rem()</source>
          <target state="translated">Integral.rem()</target>
        </trans-unit>
        <trans-unit id="c8a16b94a825dc175186bd21841d97f1975b2175" translate="yes" xml:space="preserve">
          <source>Integral.scala</source>
          <target state="translated">Integral.scala</target>
        </trans-unit>
        <trans-unit id="dcb7b5080147b4e108221c0470e4715a0ecab632" translate="yes" xml:space="preserve">
          <source>IntegralProxy &amp;rarr; RangedProxy</source>
          <target state="translated">IntegralProxy&amp;rarr;RangedProxy</target>
        </trans-unit>
        <trans-unit id="ad2235930b92368b514d33ef2805359ae0402c26" translate="yes" xml:space="preserve">
          <source>Interacting with code that can occasionally return null can be safely wrapped in &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; to become &lt;code&gt;None&lt;/code&gt; and &lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;scala.Some&lt;/a&gt; otherwise.</source>
          <target state="translated">時々nullを返す可能性があるコードとの相互作用は、 &lt;code&gt;None&lt;/code&gt; と&lt;a href=&quot;some&quot; id=&quot;scala.Some&quot; name=&quot;scala.Some&quot;&gt;scala.Some&lt;/a&gt;になるように&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;で安全にラップできます。</target>
        </trans-unit>
        <trans-unit id="26d4bffbe0b07b366de1acf6e21b0edc55fd3c42" translate="yes" xml:space="preserve">
          <source>Internal class representing a continuation with function A =&amp;gt; TailRec[B]. It is needed for the flatMap to be implemented.</source>
          <target state="translated">関数A =&amp;gt; TailRec [B]で継続を表す内部クラス。flatMapを実装するために必要です。</target>
        </trans-unit>
        <trans-unit id="9df8cf50b830fe58ba689f7dd89b994e718e7c99" translate="yes" xml:space="preserve">
          <source>Internal class representing a tailcall</source>
          <target state="translated">テールコールを表す内部クラス</target>
        </trans-unit>
        <trans-unit id="eadf599bc232f8d49f74b0700f248c9016e5dd4d" translate="yes" xml:space="preserve">
          <source>Internal class representing the final result returned from a tailcalling computation</source>
          <target state="translated">テールコール計算から返される最終結果を表す内部クラス.</target>
        </trans-unit>
        <trans-unit id="0f25974ad7f7202873b6f1ad3e05908aca8be05e" translate="yes" xml:space="preserve">
          <source>Internally, an ordinal counter is increased for each insertion/modification and then the current ordinal is used as key in the tree map. After 2&lt;sup&gt;32&lt;/sup&gt; insertions/modifications the entire map is copied (thus resetting the ordinal counter).</source>
          <target state="translated">内部的には、挿入/変更ごとに序数カウンターが増加し、現在の序数がツリーマップのキーとして使用されます。2 &lt;sup&gt;32の&lt;/sup&gt;挿入/変更の後、マップ全体がコピーされます（したがって、序数カウンターがリセットされます）。</target>
        </trans-unit>
        <trans-unit id="3dd87317bad20d3f145d7c0d4d47c08f099fa1b2" translate="yes" xml:space="preserve">
          <source>Intersection of &lt;code&gt;this&lt;/code&gt; and &lt;code&gt;that&lt;/code&gt;, with values for identical keys produced by function &lt;code&gt;f&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this&lt;/code&gt; と &lt;code&gt;that&lt;/code&gt; 交差、関数 &lt;code&gt;f&lt;/code&gt; によって生成された同一のキーの値。</target>
        </trans-unit>
        <trans-unit id="f14327fcf3c3ef830e1151da09ae42aa0d8c4e40" translate="yes" xml:space="preserve">
          <source>Inverts this &lt;code&gt;Try&lt;/code&gt;. If this is a &lt;code&gt;Failure&lt;/code&gt;, returns its exception wrapped in a &lt;code&gt;Success&lt;/code&gt;. If this is a &lt;code&gt;Success&lt;/code&gt;, returns a &lt;code&gt;Failure&lt;/code&gt; containing an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;Try&lt;/code&gt; を逆にします。これが &lt;code&gt;Failure&lt;/code&gt; 場合、 &lt;code&gt;Success&lt;/code&gt; ラップされた例外を返します。これが &lt;code&gt;Success&lt;/code&gt; 場合、 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; を含む &lt;code&gt;Failure&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="67a52a57f279cbbbdda9b2c68606c60f2fabd020" translate="yes" xml:space="preserve">
          <source>Invoking transformer methods (e.g. &lt;code&gt;map&lt;/code&gt;) will not preserve the default value.</source>
          <target state="translated">変換メソッド（ &lt;code&gt;map&lt;/code&gt; など）を呼び出すと、デフォルト値が保持されません。</target>
        </trans-unit>
        <trans-unit id="ae9973705cda5bec8d1890ec07f8d09cfae11625" translate="yes" xml:space="preserve">
          <source>IsIterable</source>
          <target state="translated">IsIterable</target>
        </trans-unit>
        <trans-unit id="ad1fb7931ab4a1c3e7d011c2b2324908617ae4e2" translate="yes" xml:space="preserve">
          <source>IsIterable$</source>
          <target state="translated">IsIterable$</target>
        </trans-unit>
        <trans-unit id="1122a2fe576606f6bc6fa7c212fa45cb3b4e0896" translate="yes" xml:space="preserve">
          <source>IsIterable$.bitSetOpsIsIterable()</source>
          <target state="translated">IsIterable$.bitSetOpsIsIterable()</target>
        </trans-unit>
        <trans-unit id="7b24590892e1fb16025cc11d191d88c264b30c99" translate="yes" xml:space="preserve">
          <source>IsIterable$.isMapLikeIsIterable()</source>
          <target state="translated">IsIterable$.isMapLikeIsIterable()</target>
        </trans-unit>
        <trans-unit id="a6d57c222b2671eaddf933008a576c06260083dc" translate="yes" xml:space="preserve">
          <source>IsIterable$.isSeqLikeIsIterable()</source>
          <target state="translated">IsIterable$.isSeqLikeIsIterable()</target>
        </trans-unit>
        <trans-unit id="fb1e612bbeb04b947c328d1400cac4e25ba8888f" translate="yes" xml:space="preserve">
          <source>IsIterable$.iterableOpsIsIterable()</source>
          <target state="translated">IsIterable$.iterableOpsIsIterable()</target>
        </trans-unit>
        <trans-unit id="a823c8d4cc096534f15f67a7a320339307288b5c" translate="yes" xml:space="preserve">
          <source>IsIterable.A()</source>
          <target state="translated">IsIterable.A()</target>
        </trans-unit>
        <trans-unit id="3aa94a5c4721fab84bc383a27b3096b641fa153a" translate="yes" xml:space="preserve">
          <source>IsIterable.C()</source>
          <target state="translated">IsIterable.C()</target>
        </trans-unit>
        <trans-unit id="125ea36eebc9be08b48abc81e4a39cd163ff295e" translate="yes" xml:space="preserve">
          <source>IsIterable.apply()</source>
          <target state="translated">IsIterable.apply()</target>
        </trans-unit>
        <trans-unit id="8b93b81828adcad132d278fbf586b39f8abeb33e" translate="yes" xml:space="preserve">
          <source>IsIterable.scala</source>
          <target state="translated">IsIterable.scala</target>
        </trans-unit>
        <trans-unit id="314bb99150f90c69bca9d494d653c0bc0200cda8" translate="yes" xml:space="preserve">
          <source>IsIterableLowPriority</source>
          <target state="translated">IsIterableLowPriority</target>
        </trans-unit>
        <trans-unit id="3d2881537bca8e37c709d54503b0300735f5164e" translate="yes" xml:space="preserve">
          <source>IsIterableLowPriority.isMapLikeIsIterable()</source>
          <target state="translated">IsIterableLowPriority.isMapLikeIsIterable()</target>
        </trans-unit>
        <trans-unit id="f2be15b487b5ab05e7ea9e5e228c0cafeb8018fc" translate="yes" xml:space="preserve">
          <source>IsIterableLowPriority.isSeqLikeIsIterable()</source>
          <target state="translated">IsIterableLowPriority.isSeqLikeIsIterable()</target>
        </trans-unit>
        <trans-unit id="fa1dd10098bfc91281ebc23db733907e2cbc5006" translate="yes" xml:space="preserve">
          <source>IsIterableOnce</source>
          <target state="translated">IsIterableOnce</target>
        </trans-unit>
        <trans-unit id="b5fa5f907258210b41fb03ad748fe1fa21aa2e6b" translate="yes" xml:space="preserve">
          <source>IsIterableOnce$</source>
          <target state="translated">IsIterableOnce$</target>
        </trans-unit>
        <trans-unit id="7b50fa527e318ca1a3ebd9672c4af4f8a1fffb9c" translate="yes" xml:space="preserve">
          <source>IsIterableOnce$.isIterableLikeIsIterableOnce()</source>
          <target state="translated">IsIterableOnce$.isIterableLikeIsIterableOnce()</target>
        </trans-unit>
        <trans-unit id="090e8a3734b80c5183f7a63cf43158cf610d84f1" translate="yes" xml:space="preserve">
          <source>IsIterableOnce$.iterableOnceIsIterableOnce()</source>
          <target state="translated">IsIterableOnce$.iterableOnceIsIterableOnce()</target>
        </trans-unit>
        <trans-unit id="32f2f0f2e933c2a073d8ac96a124944f02203ec3" translate="yes" xml:space="preserve">
          <source>IsIterableOnce.A()</source>
          <target state="translated">IsIterableOnce.A()</target>
        </trans-unit>
        <trans-unit id="cf72fbf56efe5a72d2ee254e2a39a2c33464b5ff" translate="yes" xml:space="preserve">
          <source>IsIterableOnce.apply()</source>
          <target state="translated">IsIterableOnce.apply()</target>
        </trans-unit>
        <trans-unit id="bfe493d5009083e7aa0b849694ea3e339582ced8" translate="yes" xml:space="preserve">
          <source>IsIterableOnce.scala</source>
          <target state="translated">IsIterableOnce.scala</target>
        </trans-unit>
        <trans-unit id="46ffaffb83a7223bf2fbbc6f3e42996f5079adc3" translate="yes" xml:space="preserve">
          <source>IsIterableOnceLowPriority</source>
          <target state="translated">IsIterableOnceLowPriority</target>
        </trans-unit>
        <trans-unit id="86eeb6a4f5b06a4fd32d56eec0a5e77c4f5fe868" translate="yes" xml:space="preserve">
          <source>IsIterableOnceLowPriority.isIterableLikeIsIterableOnce()</source>
          <target state="translated">IsIterableOnceLowPriority.isIterableLikeIsIterableOnce()</target>
        </trans-unit>
        <trans-unit id="4465458a8cea539acc50ac656cf199a74f44d9d9" translate="yes" xml:space="preserve">
          <source>IsMap</source>
          <target state="translated">IsMap</target>
        </trans-unit>
        <trans-unit id="925322f359e2e613cf7fb67918dff978cf2b761f" translate="yes" xml:space="preserve">
          <source>IsMap$</source>
          <target state="translated">IsMap$</target>
        </trans-unit>
        <trans-unit id="c08bef06ed1c38d2940cc349b69f92f717c49b22" translate="yes" xml:space="preserve">
          <source>IsMap$.Tupled()</source>
          <target state="translated">IsMap$.Tupled()</target>
        </trans-unit>
        <trans-unit id="fa6e262522d95f38bd4d0b86a1d2659053d16bff" translate="yes" xml:space="preserve">
          <source>IsMap$.anyRefMapIsMap()</source>
          <target state="translated">IsMap$.anyRefMapIsMap()</target>
        </trans-unit>
        <trans-unit id="df3f06f3804e372a17112b3aa849a5db2818b2bc" translate="yes" xml:space="preserve">
          <source>IsMap$.intMapIsMap()</source>
          <target state="translated">IsMap$.intMapIsMap()</target>
        </trans-unit>
        <trans-unit id="13516ad55d3af1af2c8ba24184c307cf15746e61" translate="yes" xml:space="preserve">
          <source>IsMap$.longMapIsMap()</source>
          <target state="translated">IsMap$.longMapIsMap()</target>
        </trans-unit>
        <trans-unit id="f8dc30c0bb1e28a249a4a12d57d972023f746ea0" translate="yes" xml:space="preserve">
          <source>IsMap$.mapOpsIsMap()</source>
          <target state="translated">IsMap$.mapOpsIsMap()</target>
        </trans-unit>
        <trans-unit id="e3525ca93913278e97c914380ffe483f92a57aa6" translate="yes" xml:space="preserve">
          <source>IsMap$.mapViewIsMap()</source>
          <target state="translated">IsMap$.mapViewIsMap()</target>
        </trans-unit>
        <trans-unit id="672e073437a4834ec8ee7c8976367f70bc7f8dcb" translate="yes" xml:space="preserve">
          <source>IsMap$.mutableLongMapIsMap()</source>
          <target state="translated">IsMap$.mutableLongMapIsMap()</target>
        </trans-unit>
        <trans-unit id="6e5b8250a254254398a2b7c47c3471ccf3d6b768" translate="yes" xml:space="preserve">
          <source>IsMap.A()</source>
          <target state="translated">IsMap.A()</target>
        </trans-unit>
        <trans-unit id="4f7d3872b02ccb91ca8fd6d693e65b0fde8becbb" translate="yes" xml:space="preserve">
          <source>IsMap.K()</source>
          <target state="translated">IsMap.K()</target>
        </trans-unit>
        <trans-unit id="562c18b98ea0d35b3eb6300c7975db300595f5c9" translate="yes" xml:space="preserve">
          <source>IsMap.V()</source>
          <target state="translated">IsMap.V()</target>
        </trans-unit>
        <trans-unit id="b8c4a421f6b090ae465fa14de1df127baa3b61a5" translate="yes" xml:space="preserve">
          <source>IsMap.apply()</source>
          <target state="translated">IsMap.apply()</target>
        </trans-unit>
        <trans-unit id="703899285f1294bb5e87889c1fb33082c67ec610" translate="yes" xml:space="preserve">
          <source>IsMap.scala</source>
          <target state="translated">IsMap.scala</target>
        </trans-unit>
        <trans-unit id="b4bc866d2ef3bd026cc98c635cbf2e45baba4f0d" translate="yes" xml:space="preserve">
          <source>IsSeq</source>
          <target state="translated">IsSeq</target>
        </trans-unit>
        <trans-unit id="b8333bcaf22a93e540deb23350233e0e3af70201" translate="yes" xml:space="preserve">
          <source>IsSeq$</source>
          <target state="translated">IsSeq$</target>
        </trans-unit>
        <trans-unit id="56cb82e58feafde33e03ce5e7aa770bd86cdae2c" translate="yes" xml:space="preserve">
          <source>IsSeq$.arrayIsSeq()</source>
          <target state="translated">IsSeq$.arrayIsSeq()</target>
        </trans-unit>
        <trans-unit id="eb3eb40e5585f9b16afbed5099935b07f6cf909c" translate="yes" xml:space="preserve">
          <source>IsSeq$.rangeIsSeq()</source>
          <target state="translated">IsSeq$.rangeIsSeq()</target>
        </trans-unit>
        <trans-unit id="31ea9d7f669fd2e3973df56c066952fb96148d00" translate="yes" xml:space="preserve">
          <source>IsSeq$.seqOpsIsSeq()</source>
          <target state="translated">IsSeq$.seqOpsIsSeq()</target>
        </trans-unit>
        <trans-unit id="51d57758848ebb6679884e68858b52b7593af8ed" translate="yes" xml:space="preserve">
          <source>IsSeq$.seqViewIsSeq()</source>
          <target state="translated">IsSeq$.seqViewIsSeq()</target>
        </trans-unit>
        <trans-unit id="bd99dcdcb43cccb2a1027d051e47a8ce71d8be3b" translate="yes" xml:space="preserve">
          <source>IsSeq$.stringIsSeq()</source>
          <target state="translated">IsSeq$.stringIsSeq()</target>
        </trans-unit>
        <trans-unit id="2afc86fbd22a2907d34b078a48c593c42c001b19" translate="yes" xml:space="preserve">
          <source>IsSeq$.stringViewIsSeq()</source>
          <target state="translated">IsSeq$.stringViewIsSeq()</target>
        </trans-unit>
        <trans-unit id="ca3f0a85a0c5df10fb77e3831d89de3fda1d5dd2" translate="yes" xml:space="preserve">
          <source>IsSeq.apply()</source>
          <target state="translated">IsSeq.apply()</target>
        </trans-unit>
        <trans-unit id="0cd7a2ecc8d1ba9b6c3de8bc4dbaca906ce04cc0" translate="yes" xml:space="preserve">
          <source>IsSeq.scala</source>
          <target state="translated">IsSeq.scala</target>
        </trans-unit>
        <trans-unit id="d3af48956a5b33ef3b3f3074581ed70ec7ae6908" translate="yes" xml:space="preserve">
          <source>It also contains some helper methods that can be used to in the creation of &lt;code&gt;ProcessIO&lt;/code&gt;.</source>
          <target state="translated">また、 &lt;code&gt;ProcessIO&lt;/code&gt; の作成に使用できるいくつかのヘルパーメソッドも含まれています。</target>
        </trans-unit>
        <trans-unit id="fa29590145c90c5cb9ac80a26444e074846916a0" translate="yes" xml:space="preserve">
          <source>It contains many implicit orderings as well as well as methods to construct new orderings.</source>
          <target state="translated">多くの暗黙の順序付けと、新しい順序付けを構築するためのメソッドが含まれています。</target>
        </trans-unit>
        <trans-unit id="9f3f56588cc143354d651678493d9be8be8896a7" translate="yes" xml:space="preserve">
          <source>It differs from &lt;code&gt;:++&lt;/code&gt; in that the right operand determines the type of the resulting collection rather than the left one. Mnemonic: the COLon is on the side of the new COLlection type.</source>
          <target state="translated">&lt;code&gt;:++&lt;/code&gt; とは異なり、右のオペランドは、左のコレクションではなく、結果のコレクションのタイプを決定します。記憶法：COLonは新しいCOLlectionタイプの横にあります。</target>
        </trans-unit>
        <trans-unit id="41d21064e695f0199c193f7e808ad8bb4fe2760c" translate="yes" xml:space="preserve">
          <source>It inserts its arguments between corresponding parts of the string context. As opposed to the simple string interpolator &lt;code&gt;s&lt;/code&gt;, this one does not treat standard escape sequences as defined in the Scala specification.</source>
          <target state="translated">文字列コンテキストの対応する部分の間に引数を挿入します。単純な文字列補間器 &lt;code&gt;s&lt;/code&gt; とは対照的に、これは、Scala仕様で定義されている標準のエスケープシーケンスを扱いません。</target>
        </trans-unit>
        <trans-unit id="3a2f341881f0cc727babd517c441a3170e5946a6" translate="yes" xml:space="preserve">
          <source>It inserts its arguments between corresponding parts of the string context. It also treats standard escape sequences as defined in the Scala specification. Finally, if an interpolated expression is followed by a &lt;code&gt;parts&lt;/code&gt; string that starts with a formatting specifier, the expression is formatted according to that specifier. All specifiers allowed in Java format strings are handled, and in the same way they are treated in Java.</source>
          <target state="translated">文字列コンテキストの対応する部分の間に引数を挿入します。また、Scala仕様で定義されている標準のエスケープシーケンスも扱います。最後に、補間された式の後にフォーマット指定子で始まる &lt;code&gt;parts&lt;/code&gt; 文字列が続く場合、式はその指定子に従ってフォーマットされます。Java形式の文字列で許可されているすべての指定子は、Javaで扱われるのと同じ方法で処理されます。</target>
        </trans-unit>
        <trans-unit id="bdd67f471f7ea3cd1f8c9471b06dd3bc101dee03" translate="yes" xml:space="preserve">
          <source>It inserts its arguments between corresponding parts of the string context. It also treats standard escape sequences as defined in the Scala specification. Here's an example of usage:</source>
          <target state="translated">文字列コンテキストの対応する部分の間に引数を挿入します。また、Scala仕様で定義されている標準的なエスケープシーケンスも扱います。以下に使用例を示します。</target>
        </trans-unit>
        <trans-unit id="33e395539baaba0ac24bf3a1ea19d59314fd4bd8" translate="yes" xml:space="preserve">
          <source>It is consistent: for any non-null instances &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; of type &lt;code&gt;AnyRef&lt;/code&gt;, multiple invocations of &lt;code&gt;x.eq(y)&lt;/code&gt; consistently returns &lt;code&gt;true&lt;/code&gt; or consistently returns &lt;code&gt;false&lt;/code&gt;.For any non-null instance &lt;code&gt;x&lt;/code&gt; of type &lt;code&gt;AnyRef&lt;/code&gt;, &lt;code&gt;x.eq(null)&lt;/code&gt; and &lt;code&gt;null.eq(x)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.
&lt;code&gt;null.eq(null)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">これは一貫しています： &lt;code&gt;AnyRef&lt;/code&gt; タイプのnull以外のインスタンス &lt;code&gt;x&lt;/code&gt; および &lt;code&gt;y&lt;/code&gt; の場合、 &lt;code&gt;x.eq(y)&lt;/code&gt; の複数の呼び出しは常に &lt;code&gt;true&lt;/code&gt; を返すか、一貫して &lt;code&gt;false&lt;/code&gt; を返します &lt;code&gt;AnyRef&lt;/code&gt; タイプの非nullインスタンス &lt;code&gt;x&lt;/code&gt; の場合、 &lt;code&gt;x.eq(null)&lt;/code&gt; および &lt;code&gt;null.eq(x)&lt;/code&gt; は &lt;code&gt;false&lt;/code&gt; を返します。 &lt;code&gt;null.eq(null)&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="76aca8fdd1ec9cd97378ddf8a3fde91cdd819bdb" translate="yes" xml:space="preserve">
          <source>It is either a &lt;code&gt;Manifest&lt;/code&gt; or the value &lt;code&gt;NoManifest&lt;/code&gt;.</source>
          <target state="translated">これは、 &lt;code&gt;Manifest&lt;/code&gt; または値 &lt;code&gt;NoManifest&lt;/code&gt; のいずれかです。</target>
        </trans-unit>
        <trans-unit id="2ca2cbc3462188ebca8651d3edad6a93813bd4e0" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;groupBy(key).mapValues(_.map(f))&lt;/code&gt;, but more efficient.</source>
          <target state="translated">これは &lt;code&gt;groupBy(key).mapValues(_.map(f))&lt;/code&gt; と同等ですが、より効率的です。</target>
        </trans-unit>
        <trans-unit id="410d348c2ebfee1ddff7f7032bc85b9a36cc8555" translate="yes" xml:space="preserve">
          <source>It is equivalent to &lt;code&gt;groupBy(key).mapValues(_.map(f).reduce(reduce))&lt;/code&gt;, but more efficient.</source>
          <target state="translated">これは &lt;code&gt;groupBy(key).mapValues(_.map(f).reduce(reduce))&lt;/code&gt; と同等ですが、より効率的です。</target>
        </trans-unit>
        <trans-unit id="cc45c02b59dbb113bf08e94ee173161cde012fa5" translate="yes" xml:space="preserve">
          <source>It is important that the &lt;code&gt;equals&lt;/code&gt; method for an instance of &lt;code&gt;Ordered[A]&lt;/code&gt; be consistent with the compare method. However, due to limitations inherent in the type erasure semantics, there is no reasonable way to provide a default implementation of equality for instances of &lt;code&gt;Ordered[A]&lt;/code&gt;. Therefore, if you need to be able to use equality on an instance of &lt;code&gt;Ordered[A]&lt;/code&gt; you must provide it yourself either when inheriting or instantiating.</source>
          <target state="translated">&lt;code&gt;Ordered[A]&lt;/code&gt; インスタンスの &lt;code&gt;equals&lt;/code&gt; メソッドが、compareメソッドと一貫していることが重要です。ただし、型消去のセマンティクスに固有の制限により、 &lt;code&gt;Ordered[A]&lt;/code&gt; インスタンスに同等のデフォルト実装を提供する合理的な方法はありません。したがって、 &lt;code&gt;Ordered[A]&lt;/code&gt; インスタンスで同等性を使用できるようにする必要がある場合は、継承時またはインスタンス化時に自分で提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="030f8bb7a512b4b5a77b72e90b4a6e8df56eee0d" translate="yes" xml:space="preserve">
          <source>It is important that the &lt;code&gt;hashCode&lt;/code&gt; method for an instance of &lt;code&gt;Ordered[A]&lt;/code&gt; be consistent with the &lt;code&gt;compare&lt;/code&gt; method. However, it is not possible to provide a sensible default implementation. Therefore, if you need to be able compute the hash of an instance of &lt;code&gt;Ordered[A]&lt;/code&gt; you must provide it yourself either when inheriting or instantiating.</source>
          <target state="translated">&lt;code&gt;Ordered[A]&lt;/code&gt; インスタンスの &lt;code&gt;hashCode&lt;/code&gt; メソッドが、 &lt;code&gt;compare&lt;/code&gt; メソッドと一貫していることが重要です。ただし、適切なデフォルト実装を提供することはできません。したがって、 &lt;code&gt;Ordered[A]&lt;/code&gt; インスタンスのハッシュを計算できるようにする必要がある場合は、継承またはインスタンス化するときに自分でハッシュを提供する必要があります。</target>
        </trans-unit>
        <trans-unit id="63ee1dd7704c54af885af86006326e4bc86c7c00" translate="yes" xml:space="preserve">
          <source>It is of particular importance to note that, unless stated otherwise,</source>
          <target state="translated">特に重要なのは、特に明記されていない限り、この点です。</target>
        </trans-unit>
        <trans-unit id="da08cab77ca5268bc5c5b8a4bd84adab587db177" translate="yes" xml:space="preserve">
          <source>It is recommended for API designers to require an implicit &lt;code&gt;Manager&lt;/code&gt; for the creation of custom resources, and to call &lt;code&gt;acquire&lt;/code&gt; during those resources' construction. Doing so guarantees that the resource</source>
          <target state="translated">API設計者は、カスタムリソースを作成するために暗黙の &lt;code&gt;Manager&lt;/code&gt; を必要とし、それらのリソースの構築中に、 &lt;code&gt;acquire&lt;/code&gt; を呼び出すことをお勧めします。そうすることで、リソースが</target>
        </trans-unit>
        <trans-unit id="7afb6a6a3d57cb5b911239f773132bc22a8a7b39" translate="yes" xml:space="preserve">
          <source>It is recommended to return the name of the concrete collection type, but not implementation subclasses. For example, for &lt;code&gt;ListMap&lt;/code&gt; this method should return &lt;code&gt;&quot;ListMap&quot;&lt;/code&gt;, not &lt;code&gt;&quot;Map&quot;&lt;/code&gt; (the supertype) or &lt;code&gt;&quot;Node&quot;&lt;/code&gt; (an implementation subclass).</source>
          <target state="translated">具象コレクション型の名前を返すことをお勧めしますが、実装サブクラスは返しません。たとえば、 &lt;code&gt;ListMap&lt;/code&gt; の場合、このメソッドは &lt;code&gt;&quot;Map&quot;&lt;/code&gt; （スーパータイプ）または &lt;code&gt;&quot;Node&quot;&lt;/code&gt; （実装サブクラス）ではなく、 &lt;code&gt;&quot;ListMap&quot;&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="ff30d050072d5230bc3432ba4ef5360ef9e32d5a" translate="yes" xml:space="preserve">
          <source>It is recommended to use explicit conversions provided by &lt;a href=&quot;../javaconverters%24&quot; id=&quot;scala.collection.JavaConverters&quot; name=&quot;scala.collection.JavaConverters&quot;&gt;collection.JavaConverters&lt;/a&gt; instead. Implicit conversions may cause unexpected issues, see &lt;a href=&quot;implicitconversions%24&quot; id=&quot;scala.collection.convert.ImplicitConversions&quot; name=&quot;scala.collection.convert.ImplicitConversions&quot;&gt;ImplicitConversions&lt;/a&gt;.</source>
          <target state="translated">代わりに、&lt;a href=&quot;../javaconverters%24&quot; id=&quot;scala.collection.JavaConverters&quot; name=&quot;scala.collection.JavaConverters&quot;&gt;collection.JavaConverters&lt;/a&gt;によって提供される明示的な変換を使用することをお勧めします。暗黙的な変換は予期しない問題を引き起こす可能性があります&lt;a href=&quot;implicitconversions%24&quot; id=&quot;scala.collection.convert.ImplicitConversions&quot; name=&quot;scala.collection.convert.ImplicitConversions&quot;&gt;。ImplicitConversionsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="ec9f72b18e59aeab5dca0534c9750539145f15cf" translate="yes" xml:space="preserve">
          <source>It is recommended to use explicit conversions provided by &lt;a href=&quot;../javaconverters%24&quot; id=&quot;scala.collection.JavaConverters&quot; name=&quot;scala.collection.JavaConverters&quot;&gt;collection.JavaConverters&lt;/a&gt; instead. Implicit conversions may cause unexpected issues. Example:</source>
          <target state="translated">代わりに、&lt;a href=&quot;../javaconverters%24&quot; id=&quot;scala.collection.JavaConverters&quot; name=&quot;scala.collection.JavaConverters&quot;&gt;collection.JavaConverters&lt;/a&gt;によって提供される明示的な変換を使用することをお勧めします。暗黙的な変換は予期しない問題を引き起こす可能性があります。例：</target>
        </trans-unit>
        <trans-unit id="fa80c0c59c7f9fd0ce47e2346649563ebc7eb42e" translate="yes" xml:space="preserve">
          <source>It is reflexive: for any instance &lt;code&gt;x&lt;/code&gt; of type &lt;code&gt;Any&lt;/code&gt;, &lt;code&gt;x.equals(x)&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt;.It is symmetric: for any instances &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; of type &lt;code&gt;Any&lt;/code&gt;, &lt;code&gt;x.equals(y)&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt; if and only if &lt;code&gt;y.equals(x)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;.It is transitive: for any instances &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, and &lt;code&gt;z&lt;/code&gt; of type &lt;code&gt;Any&lt;/code&gt; if &lt;code&gt;x.equals(y)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; and &lt;code&gt;y.equals(z)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;, then &lt;code&gt;x.equals(z)&lt;/code&gt; should return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">これは再帰的である：任意のインスタンスのための &lt;code&gt;x&lt;/code&gt; 型の &lt;code&gt;Any&lt;/code&gt; 、 &lt;code&gt;x.equals(x)&lt;/code&gt; が返すべき &lt;code&gt;true&lt;/code&gt; 任意のインスタンスに対して：.ITが対称である &lt;code&gt;x&lt;/code&gt; 及び &lt;code&gt;y&lt;/code&gt; タイプの &lt;code&gt;Any&lt;/code&gt; 、 &lt;code&gt;x.equals(y)&lt;/code&gt; を返す必要があり &lt;code&gt;true&lt;/code&gt; 場合にのみ &lt;code&gt;y.equals(x)&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返します。推移的です &lt;code&gt;x.equals(y)&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返し、 &lt;code&gt;y.equals(z)&lt;/code&gt; が &lt;code&gt;true&lt;/code&gt; を返す場合、タイプ &lt;code&gt;Any&lt;/code&gt; のインスタンス &lt;code&gt;x&lt;/code&gt; 、 &lt;code&gt;y&lt;/code&gt; 、 &lt;code&gt;z&lt;/code&gt; の場合、 &lt;code&gt;x.equals(z)&lt;/code&gt; は &lt;code&gt;true&lt;/code&gt; を返す必要があります。</target>
        </trans-unit>
        <trans-unit id="5be6cae308cb2623d347be7cbec47e8d1705e91f" translate="yes" xml:space="preserve">
          <source>It is the responsibility of the caller to call &lt;code&gt;isDefinedAt&lt;/code&gt; before calling &lt;code&gt;apply&lt;/code&gt;, because if &lt;code&gt;isDefinedAt&lt;/code&gt; is false, it is not guaranteed &lt;code&gt;apply&lt;/code&gt; will throw an exception to indicate an error condition. If an exception is not thrown, evaluation may result in an arbitrary value.</source>
          <target state="translated">呼び出すために、呼び出し側の責任です &lt;code&gt;isDefinedAt&lt;/code&gt; を呼び出す前に &lt;code&gt;apply&lt;/code&gt; た場合ので、 &lt;code&gt;isDefinedAt&lt;/code&gt; は falseで、保証されません &lt;code&gt;apply&lt;/code&gt; 、エラー状態を示すために、例外がスローされます。例外がスローされない場合、評価の結果が任意の値になる可能性があります。</target>
        </trans-unit>
        <trans-unit id="3fd1850b4d504a597f65a13da2e7cc87743785c3" translate="yes" xml:space="preserve">
          <source>It is used by other classes in the package in the implementation of various features, but can also be used by client code.</source>
          <target state="translated">様々な機能の実装でパッケージ内の他のクラスで使用されていますが、クライアントコードでも使用することができます。</target>
        </trans-unit>
        <trans-unit id="539c5ea475d86cd53f80ad265bedd77c85d40233" translate="yes" xml:space="preserve">
          <source>It is used directly when calling the method &lt;code&gt;run&lt;/code&gt; on a &lt;code&gt;ProcessBuilder&lt;/code&gt;, which makes the process run in the background. The methods provided on &lt;code&gt;Process&lt;/code&gt; make it possible for one to block until the process exits and get the exit value, or destroy the process altogether.</source>
          <target state="translated">これは、 &lt;code&gt;ProcessBuilder&lt;/code&gt; で &lt;code&gt;run&lt;/code&gt; されるメソッドを呼び出すときに直接使用されます。これにより、プロセスがバックグラウンドで実行されます。 &lt;code&gt;Process&lt;/code&gt; で提供されるメソッドを使用すると、プロセスが終了して終了値を取得するまでブロックしたり、プロセスを完全に破棄したりできます。</target>
        </trans-unit>
        <trans-unit id="e24f7bb46fdfc460111ea0f3f183b6dca308b884" translate="yes" xml:space="preserve">
          <source>It's important to note that user-defined value classes are limited, and in some circumstances, still must allocate a value class instance at runtime. These limitations and circumstances are explained in greater detail in the &lt;a href=&quot;http://docs.scala-lang.org/overviews/core/value-classes.html&quot;&gt;Value Classes and Universal Traits&lt;/a&gt;.</source>
          <target state="translated">ユーザー定義の値クラスは制限されており、状況によっては実行時に値クラスインスタンスを割り当てる必要があることに注意することが重要です。これらの制限と状況については、&lt;a href=&quot;http://docs.scala-lang.org/overviews/core/value-classes.html&quot;&gt;値クラスとユニバーサルトレイトで&lt;/a&gt;詳しく説明しています。</target>
        </trans-unit>
        <trans-unit id="08ca6a3da933ca6826a2f4d3fcc919af71d7e380" translate="yes" xml:space="preserve">
          <source>Iterable</source>
          <target state="translated">Iterable</target>
        </trans-unit>
        <trans-unit id="39e48ef826cb15d99dc7fb6df11bf35e4600ee62" translate="yes" xml:space="preserve">
          <source>Iterable$</source>
          <target state="translated">Iterable$</target>
        </trans-unit>
        <trans-unit id="27ec5a29932c8b3e529fcc2668ca60e08f2855d0" translate="yes" xml:space="preserve">
          <source>Iterable$.apply()</source>
          <target state="translated">Iterable$.apply()</target>
        </trans-unit>
        <trans-unit id="1876b5c4038dec70a0fdf9d5bbe27a80a1e314f3" translate="yes" xml:space="preserve">
          <source>Iterable$.concat()</source>
          <target state="translated">Iterable$.concat()</target>
        </trans-unit>
        <trans-unit id="7b870bf5a51db57662c97f57a598852c32dd5e51" translate="yes" xml:space="preserve">
          <source>Iterable$.empty()</source>
          <target state="translated">Iterable$.empty()</target>
        </trans-unit>
        <trans-unit id="c7de1eb74f86fd2bb24ef0abbe47fd20a7bdaee1" translate="yes" xml:space="preserve">
          <source>Iterable$.fill()</source>
          <target state="translated">Iterable$.fill()</target>
        </trans-unit>
        <trans-unit id="721b680041aeb13ab179953131d5ca373f091ef7" translate="yes" xml:space="preserve">
          <source>Iterable$.from()</source>
          <target state="translated">Iterable$.from()</target>
        </trans-unit>
        <trans-unit id="20fd866c2f98776dc8df1cbf796d21dfeca6fcf2" translate="yes" xml:space="preserve">
          <source>Iterable$.iterableFactory()</source>
          <target state="translated">Iterable$.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="c131d6b3d012aa5652051f5ef868b289734042a2" translate="yes" xml:space="preserve">
          <source>Iterable$.iterate()</source>
          <target state="translated">Iterable$.iterate()</target>
        </trans-unit>
        <trans-unit id="82a3b4b8c4307b0d0af009c9be10a5ff4d57e9eb" translate="yes" xml:space="preserve">
          <source>Iterable$.newBuilder()</source>
          <target state="translated">Iterable$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="9cafe80c757b61470517b635cc7be75dc3db979f" translate="yes" xml:space="preserve">
          <source>Iterable$.range()</source>
          <target state="translated">Iterable$.range()</target>
        </trans-unit>
        <trans-unit id="7205acd16b53f1cd53f4afa8714acba89df1b986" translate="yes" xml:space="preserve">
          <source>Iterable$.single()</source>
          <target state="translated">Iterable$.single()</target>
        </trans-unit>
        <trans-unit id="e3646875ea8a28ef584e6f147b2a8bc810ea97a6" translate="yes" xml:space="preserve">
          <source>Iterable$.tabulate()</source>
          <target state="translated">Iterable$.tabulate()</target>
        </trans-unit>
        <trans-unit id="3ef232ef9c00b683d205827a0fe737ec2fda0961" translate="yes" xml:space="preserve">
          <source>Iterable$.unfold()</source>
          <target state="translated">Iterable$.unfold()</target>
        </trans-unit>
        <trans-unit id="351aaa1e26fa6995c0a0e1d1655fe2343e132c8a" translate="yes" xml:space="preserve">
          <source>Iterable.++()</source>
          <target state="translated">Iterable.++()</target>
        </trans-unit>
        <trans-unit id="a3d7ae80430b316c25a9917ce838a3405a7de55b" translate="yes" xml:space="preserve">
          <source>Iterable.@deprecated()</source>
          <target state="translated">Iterable.@deprecated()</target>
        </trans-unit>
        <trans-unit id="9bb7ba8fb1c29e3499c5cd3e0a24eced90ba10d7" translate="yes" xml:space="preserve">
          <source>Iterable.addString()</source>
          <target state="translated">Iterable.addString()</target>
        </trans-unit>
        <trans-unit id="f29d451a1435f7740899766f9516e5308dc5afd9" translate="yes" xml:space="preserve">
          <source>Iterable.className()</source>
          <target state="translated">Iterable.className()</target>
        </trans-unit>
        <trans-unit id="4b0d503ebb1ae8dd8c6bad65db9268098e853e7f" translate="yes" xml:space="preserve">
          <source>Iterable.coll()</source>
          <target state="translated">Iterable.coll()</target>
        </trans-unit>
        <trans-unit id="84b1b5527c18d9ce66d7a19d136e66f1aa341633" translate="yes" xml:space="preserve">
          <source>Iterable.collect()</source>
          <target state="translated">Iterable.collect()</target>
        </trans-unit>
        <trans-unit id="69b1db8697397fe20af01bff9e4d0d8c69707b69" translate="yes" xml:space="preserve">
          <source>Iterable.collectFirst()</source>
          <target state="translated">Iterable.collectFirst()</target>
        </trans-unit>
        <trans-unit id="2cf1996c980b10da0ff802531aee59692a2703a0" translate="yes" xml:space="preserve">
          <source>Iterable.concat()</source>
          <target state="translated">Iterable.concat()</target>
        </trans-unit>
        <trans-unit id="d7b1f8243c3480cf63dffb596758fc08746ff333" translate="yes" xml:space="preserve">
          <source>Iterable.copyToArray()</source>
          <target state="translated">Iterable.copyToArray()</target>
        </trans-unit>
        <trans-unit id="aaed0bedc90920569eb4a78623224b730289ed2b" translate="yes" xml:space="preserve">
          <source>Iterable.corresponds()</source>
          <target state="translated">Iterable.corresponds()</target>
        </trans-unit>
        <trans-unit id="e1db7914bd2293391dc6ffba0e9c876ce1d90f59" translate="yes" xml:space="preserve">
          <source>Iterable.count()</source>
          <target state="translated">Iterable.count()</target>
        </trans-unit>
        <trans-unit id="36d3c23a164e756b419a27eb870aa633e3002393" translate="yes" xml:space="preserve">
          <source>Iterable.drop()</source>
          <target state="translated">Iterable.drop()</target>
        </trans-unit>
        <trans-unit id="00ae6c26857444e39fb68fa2a45b7f7cd8d7785f" translate="yes" xml:space="preserve">
          <source>Iterable.dropRight()</source>
          <target state="translated">Iterable.dropRight()</target>
        </trans-unit>
        <trans-unit id="8112659ab3af98b1efcdf4cf0c842ec5498876c2" translate="yes" xml:space="preserve">
          <source>Iterable.dropWhile()</source>
          <target state="translated">Iterable.dropWhile()</target>
        </trans-unit>
        <trans-unit id="86f04fc0a43a4e6206f46e8b58f8162a25e61c10" translate="yes" xml:space="preserve">
          <source>Iterable.empty()</source>
          <target state="translated">Iterable.empty()</target>
        </trans-unit>
        <trans-unit id="733b97b5e2d36afe86e2a3f7edf6bdd8fc18c47a" translate="yes" xml:space="preserve">
          <source>Iterable.exists()</source>
          <target state="translated">Iterable.exists()</target>
        </trans-unit>
        <trans-unit id="ecc5947f585b99f6bf24cc7dfe46c040672e25d9" translate="yes" xml:space="preserve">
          <source>Iterable.filter()</source>
          <target state="translated">Iterable.filter()</target>
        </trans-unit>
        <trans-unit id="9acc186b9ba78c203c5a574fe0ea6aea4afd44cd" translate="yes" xml:space="preserve">
          <source>Iterable.filterNot()</source>
          <target state="translated">Iterable.filterNot()</target>
        </trans-unit>
        <trans-unit id="6a9321c50cd8be073b4bea42503fc6b17f5c548c" translate="yes" xml:space="preserve">
          <source>Iterable.find()</source>
          <target state="translated">Iterable.find()</target>
        </trans-unit>
        <trans-unit id="b94e04852d45509e6e1e643012c23b39d93615ce" translate="yes" xml:space="preserve">
          <source>Iterable.flatMap()</source>
          <target state="translated">Iterable.flatMap()</target>
        </trans-unit>
        <trans-unit id="bc9dc96565a0fc23fb4b83044e62c42ef60631b1" translate="yes" xml:space="preserve">
          <source>Iterable.flatten()</source>
          <target state="translated">Iterable.flatten()</target>
        </trans-unit>
        <trans-unit id="a19d136bd09c7b444574fd145f492deeb7070c07" translate="yes" xml:space="preserve">
          <source>Iterable.fold()</source>
          <target state="translated">Iterable.fold()</target>
        </trans-unit>
        <trans-unit id="8186da3af5de100471c4d48ab48867d22ee6e124" translate="yes" xml:space="preserve">
          <source>Iterable.foldLeft()</source>
          <target state="translated">Iterable.foldLeft()</target>
        </trans-unit>
        <trans-unit id="717a0dc774dcd12559c80f1cb2feb26fb75f586e" translate="yes" xml:space="preserve">
          <source>Iterable.foldRight()</source>
          <target state="translated">Iterable.foldRight()</target>
        </trans-unit>
        <trans-unit id="c578c084d6ce8e91b4cf68566b6fd5203570f746" translate="yes" xml:space="preserve">
          <source>Iterable.forall()</source>
          <target state="translated">Iterable.forall()</target>
        </trans-unit>
        <trans-unit id="721f2877bd82749249e97b32c10d94ae31815f6b" translate="yes" xml:space="preserve">
          <source>Iterable.foreach()</source>
          <target state="translated">Iterable.foreach()</target>
        </trans-unit>
        <trans-unit id="1765007aca8c870621a07f8b6c1dbe6b58faf6b2" translate="yes" xml:space="preserve">
          <source>Iterable.fromSpecific()</source>
          <target state="translated">Iterable.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="2c97f3be86dcc08df907108a1b21c100700cc6f9" translate="yes" xml:space="preserve">
          <source>Iterable.groupBy()</source>
          <target state="translated">Iterable.groupBy()</target>
        </trans-unit>
        <trans-unit id="e6ca11ef2487bb2f069e91dc78430653875694e1" translate="yes" xml:space="preserve">
          <source>Iterable.groupMap()</source>
          <target state="translated">Iterable.groupMap()</target>
        </trans-unit>
        <trans-unit id="1df3cfc30bb32bf5830f70f14c8c4d4d1fb28939" translate="yes" xml:space="preserve">
          <source>Iterable.groupMapReduce()</source>
          <target state="translated">Iterable.groupMapReduce()</target>
        </trans-unit>
        <trans-unit id="de471a2fc45db15ef45b103584f33058b4d614fa" translate="yes" xml:space="preserve">
          <source>Iterable.grouped()</source>
          <target state="translated">Iterable.grouped()</target>
        </trans-unit>
        <trans-unit id="e6efadd5270387d48d000c491670ec2c5c3ae346" translate="yes" xml:space="preserve">
          <source>Iterable.head()</source>
          <target state="translated">Iterable.head()</target>
        </trans-unit>
        <trans-unit id="9abe38c0fc7ef0daf2b8f5cefb4dfb343df84612" translate="yes" xml:space="preserve">
          <source>Iterable.headOption()</source>
          <target state="translated">Iterable.headOption()</target>
        </trans-unit>
        <trans-unit id="7e75acd74bdf5ee696d6728c707a439f44abe772" translate="yes" xml:space="preserve">
          <source>Iterable.init()</source>
          <target state="translated">Iterable.init()</target>
        </trans-unit>
        <trans-unit id="4da3d4a72841930e8516be26ece3733f7b2411e7" translate="yes" xml:space="preserve">
          <source>Iterable.inits()</source>
          <target state="translated">Iterable.inits()</target>
        </trans-unit>
        <trans-unit id="33fa0f4fe49b9658dc6f1295eb5c80798ad0e492" translate="yes" xml:space="preserve">
          <source>Iterable.isEmpty()</source>
          <target state="translated">Iterable.isEmpty()</target>
        </trans-unit>
        <trans-unit id="4f3e688c73075de3746619cf5e093aaa6139173e" translate="yes" xml:space="preserve">
          <source>Iterable.isTraversableAgain()</source>
          <target state="translated">Iterable.isTraversableAgain()</target>
        </trans-unit>
        <trans-unit id="b5b45a676a73e3b55817542d2fecc35cb44ca40a" translate="yes" xml:space="preserve">
          <source>Iterable.iterableFactory()</source>
          <target state="translated">Iterable.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="267f460cfa9d3bfe2791d937d97710dce1ede9b7" translate="yes" xml:space="preserve">
          <source>Iterable.iterator()</source>
          <target state="translated">Iterable.iterator()</target>
        </trans-unit>
        <trans-unit id="630d708908b406e9ca57cf99a6d265affbd55d83" translate="yes" xml:space="preserve">
          <source>Iterable.knownSize()</source>
          <target state="translated">Iterable.knownSize()</target>
        </trans-unit>
        <trans-unit id="fc04df7d27a9958f8aaccad1fb22becc70f5702b" translate="yes" xml:space="preserve">
          <source>Iterable.last()</source>
          <target state="translated">Iterable.last()</target>
        </trans-unit>
        <trans-unit id="634543c2df86b25ee496933b502da73a957ef7a3" translate="yes" xml:space="preserve">
          <source>Iterable.lastOption()</source>
          <target state="translated">Iterable.lastOption()</target>
        </trans-unit>
        <trans-unit id="61b7211ae98302780a916db84020d2b907b809ea" translate="yes" xml:space="preserve">
          <source>Iterable.lazyZip()</source>
          <target state="translated">Iterable.lazyZip()</target>
        </trans-unit>
        <trans-unit id="bab906cce1c114c6aad9e57ed0bddd780987c3f8" translate="yes" xml:space="preserve">
          <source>Iterable.map()</source>
          <target state="translated">Iterable.map()</target>
        </trans-unit>
        <trans-unit id="d019db3ec2f018213c0da3366d24a4f68d294672" translate="yes" xml:space="preserve">
          <source>Iterable.max()</source>
          <target state="translated">Iterable.max()</target>
        </trans-unit>
        <trans-unit id="efead411b55ad129278d1dcca82dcb701dfb2357" translate="yes" xml:space="preserve">
          <source>Iterable.maxBy()</source>
          <target state="translated">Iterable.maxBy()</target>
        </trans-unit>
        <trans-unit id="60a66f0d22c369fdd86ae608de62c9a09ba3b47b" translate="yes" xml:space="preserve">
          <source>Iterable.maxByOption()</source>
          <target state="translated">Iterable.maxByOption()</target>
        </trans-unit>
        <trans-unit id="d76135efdcee35fb13c0a04c9686b1cba3840051" translate="yes" xml:space="preserve">
          <source>Iterable.maxOption()</source>
          <target state="translated">Iterable.maxOption()</target>
        </trans-unit>
        <trans-unit id="cf54042ac1a9f79d2322f743a0d887913b9e73e1" translate="yes" xml:space="preserve">
          <source>Iterable.min()</source>
          <target state="translated">Iterable.min()</target>
        </trans-unit>
        <trans-unit id="bd09f583213d00f8fc20a2f2e8525f9c78c0b1a3" translate="yes" xml:space="preserve">
          <source>Iterable.minBy()</source>
          <target state="translated">Iterable.minBy()</target>
        </trans-unit>
        <trans-unit id="1ae997a6e95f42233c228885a80b25fbc9efd946" translate="yes" xml:space="preserve">
          <source>Iterable.minByOption()</source>
          <target state="translated">Iterable.minByOption()</target>
        </trans-unit>
        <trans-unit id="13a4c23930f742bd987321b67eb605af713a69a6" translate="yes" xml:space="preserve">
          <source>Iterable.minOption()</source>
          <target state="translated">Iterable.minOption()</target>
        </trans-unit>
        <trans-unit id="5c2ec063e04c4a43c52d613d51504c8e2b730c05" translate="yes" xml:space="preserve">
          <source>Iterable.mkString()</source>
          <target state="translated">Iterable.mkString()</target>
        </trans-unit>
        <trans-unit id="a7324971dc1e380f9f9724a60ffc67250afffc4b" translate="yes" xml:space="preserve">
          <source>Iterable.newSpecificBuilder()</source>
          <target state="translated">Iterable.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="498c653a825a200616b7e241dc8ebaa6a034af31" translate="yes" xml:space="preserve">
          <source>Iterable.nonEmpty()</source>
          <target state="translated">Iterable.nonEmpty()</target>
        </trans-unit>
        <trans-unit id="e33af9ba7f53689041f894d9fc0bb509abe19eb9" translate="yes" xml:space="preserve">
          <source>Iterable.partition()</source>
          <target state="translated">Iterable.partition()</target>
        </trans-unit>
        <trans-unit id="98235d06454d9fb423a551dee313d8228a9b81e3" translate="yes" xml:space="preserve">
          <source>Iterable.partitionMap()</source>
          <target state="translated">Iterable.partitionMap()</target>
        </trans-unit>
        <trans-unit id="1d99e6db946a6be94647af01162ed8d5819b8ba2" translate="yes" xml:space="preserve">
          <source>Iterable.product()</source>
          <target state="translated">Iterable.product()</target>
        </trans-unit>
        <trans-unit id="b660b56b30b5d96f12500b9d88874fb4349633dc" translate="yes" xml:space="preserve">
          <source>Iterable.reduce()</source>
          <target state="translated">Iterable.reduce()</target>
        </trans-unit>
        <trans-unit id="2fd00645dbdb16f80346050a68d7c9d4d15cd2cc" translate="yes" xml:space="preserve">
          <source>Iterable.reduceLeft()</source>
          <target state="translated">Iterable.reduceLeft()</target>
        </trans-unit>
        <trans-unit id="0dec4062410a071f1e17ecf04841393aa8878425" translate="yes" xml:space="preserve">
          <source>Iterable.reduceLeftOption()</source>
          <target state="translated">Iterable.reduceLeftOption()</target>
        </trans-unit>
        <trans-unit id="aaa86308e0a2ddb53a817099b934858c2f78ba18" translate="yes" xml:space="preserve">
          <source>Iterable.reduceOption()</source>
          <target state="translated">Iterable.reduceOption()</target>
        </trans-unit>
        <trans-unit id="08368a7818739779e4e85377eec38069f2481938" translate="yes" xml:space="preserve">
          <source>Iterable.reduceRight()</source>
          <target state="translated">Iterable.reduceRight()</target>
        </trans-unit>
        <trans-unit id="958c7ed9decc9eae6275c8748d8db543ae022a29" translate="yes" xml:space="preserve">
          <source>Iterable.reduceRightOption()</source>
          <target state="translated">Iterable.reduceRightOption()</target>
        </trans-unit>
        <trans-unit id="c055c4de534d7c03cbc832c5b7c5a472f0016d4e" translate="yes" xml:space="preserve">
          <source>Iterable.reversed()</source>
          <target state="translated">Iterable.reversed()</target>
        </trans-unit>
        <trans-unit id="2a37b335d592f617ab1ebeaf7f7639d9a1d011bf" translate="yes" xml:space="preserve">
          <source>Iterable.scala</source>
          <target state="translated">Iterable.scala</target>
        </trans-unit>
        <trans-unit id="63ac9e1397b100f50e08d44abc5d086d79144bcd" translate="yes" xml:space="preserve">
          <source>Iterable.scan()</source>
          <target state="translated">Iterable.scan()</target>
        </trans-unit>
        <trans-unit id="789e27c8c8e22ebee23d3a8e7150bb6862516bf0" translate="yes" xml:space="preserve">
          <source>Iterable.scanLeft()</source>
          <target state="translated">Iterable.scanLeft()</target>
        </trans-unit>
        <trans-unit id="85a9faa312f2a9d044577f26edc516029de17e27" translate="yes" xml:space="preserve">
          <source>Iterable.scanRight()</source>
          <target state="translated">Iterable.scanRight()</target>
        </trans-unit>
        <trans-unit id="0e39a7f462883c11a12c47d836765d43b5cadfcf" translate="yes" xml:space="preserve">
          <source>Iterable.size()</source>
          <target state="translated">Iterable.size()</target>
        </trans-unit>
        <trans-unit id="80fef60ed0fb6573548290e5aacb834bd71975ef" translate="yes" xml:space="preserve">
          <source>Iterable.sizeCompare()</source>
          <target state="translated">Iterable.sizeCompare()</target>
        </trans-unit>
        <trans-unit id="0da2a8cf77dd9557b7db741bf27dcbca84789a78" translate="yes" xml:space="preserve">
          <source>Iterable.sizeIs()</source>
          <target state="translated">Iterable.sizeIs()</target>
        </trans-unit>
        <trans-unit id="97f5476eda1ddb8a2c6134197d9aea8888b692dd" translate="yes" xml:space="preserve">
          <source>Iterable.slice()</source>
          <target state="translated">Iterable.slice()</target>
        </trans-unit>
        <trans-unit id="e7dec352fdb4eab456d8f806c655ed2c13bfbdeb" translate="yes" xml:space="preserve">
          <source>Iterable.sliding()</source>
          <target state="translated">Iterable.sliding()</target>
        </trans-unit>
        <trans-unit id="18c289eff6a30dc1f3ef4e44434cdfd391db984b" translate="yes" xml:space="preserve">
          <source>Iterable.span()</source>
          <target state="translated">Iterable.span()</target>
        </trans-unit>
        <trans-unit id="05024b06c04b66c120f8d8b3398c6e3c504f8eae" translate="yes" xml:space="preserve">
          <source>Iterable.splitAt()</source>
          <target state="translated">Iterable.splitAt()</target>
        </trans-unit>
        <trans-unit id="9be88dd6cf340e8070b48fe8a1e207a6e34cbc86" translate="yes" xml:space="preserve">
          <source>Iterable.stepper()</source>
          <target state="translated">Iterable.stepper()</target>
        </trans-unit>
        <trans-unit id="a93e9e16efd57f8475972631d321bfffbcfdb1ff" translate="yes" xml:space="preserve">
          <source>Iterable.stringPrefix()</source>
          <target state="translated">Iterable.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="2e2a55815260965415d1b6e82624e67d4026f219" translate="yes" xml:space="preserve">
          <source>Iterable.sum()</source>
          <target state="translated">Iterable.sum()</target>
        </trans-unit>
        <trans-unit id="ea86b46aaad411bec38e11ec4809d5a35af407f6" translate="yes" xml:space="preserve">
          <source>Iterable.tail()</source>
          <target state="translated">Iterable.tail()</target>
        </trans-unit>
        <trans-unit id="2468660b19d65dc59ab1c83a37664f539c4bbcbd" translate="yes" xml:space="preserve">
          <source>Iterable.tails()</source>
          <target state="translated">Iterable.tails()</target>
        </trans-unit>
        <trans-unit id="483acd59fb4753406e6f2713bd07942cda3b77e7" translate="yes" xml:space="preserve">
          <source>Iterable.take()</source>
          <target state="translated">Iterable.take()</target>
        </trans-unit>
        <trans-unit id="a25800c0d3241d0ba91084295c6aceca16ee0a95" translate="yes" xml:space="preserve">
          <source>Iterable.takeRight()</source>
          <target state="translated">Iterable.takeRight()</target>
        </trans-unit>
        <trans-unit id="881744c5946f11bb14379d58753511ded6afffe1" translate="yes" xml:space="preserve">
          <source>Iterable.takeWhile()</source>
          <target state="translated">Iterable.takeWhile()</target>
        </trans-unit>
        <trans-unit id="9b0b25d6a0d8bce9ee77bb65f3de968e7b79ee40" translate="yes" xml:space="preserve">
          <source>Iterable.tapEach()</source>
          <target state="translated">Iterable.tapEach()</target>
        </trans-unit>
        <trans-unit id="e7fa78a49dc5600ccba62e9dd9e591b4a7bec53a" translate="yes" xml:space="preserve">
          <source>Iterable.to()</source>
          <target state="translated">Iterable.to()</target>
        </trans-unit>
        <trans-unit id="fbcdcedac9e7d8e7f3360d044a4f5c397eeaacf3" translate="yes" xml:space="preserve">
          <source>Iterable.toArray()</source>
          <target state="translated">Iterable.toArray()</target>
        </trans-unit>
        <trans-unit id="91006a4dff551c3c852c912bc3c08257a8810ebc" translate="yes" xml:space="preserve">
          <source>Iterable.toBuffer()</source>
          <target state="translated">Iterable.toBuffer()</target>
        </trans-unit>
        <trans-unit id="fb2d1c0f4d36d55c2996c6ab50b0269d1f05bf96" translate="yes" xml:space="preserve">
          <source>Iterable.toIndexedSeq()</source>
          <target state="translated">Iterable.toIndexedSeq()</target>
        </trans-unit>
        <trans-unit id="83c8fef1c288ad8c8edee10a22a5cd9728187315" translate="yes" xml:space="preserve">
          <source>Iterable.toIterable()</source>
          <target state="translated">Iterable.toIterable()</target>
        </trans-unit>
        <trans-unit id="455ccd5d9ec86fa68cdc8a6cc360376b21c3f894" translate="yes" xml:space="preserve">
          <source>Iterable.toList()</source>
          <target state="translated">Iterable.toList()</target>
        </trans-unit>
        <trans-unit id="e1c4f042c22fca323dc4da25dc4fe17a33c0d2ca" translate="yes" xml:space="preserve">
          <source>Iterable.toMap()</source>
          <target state="translated">Iterable.toMap()</target>
        </trans-unit>
        <trans-unit id="eb69c16c0d71399b5fab4dc098dd48fb86ecd8aa" translate="yes" xml:space="preserve">
          <source>Iterable.toSeq()</source>
          <target state="translated">Iterable.toSeq()</target>
        </trans-unit>
        <trans-unit id="df02f59b69c2ab59d3f88457059a359d61e7575c" translate="yes" xml:space="preserve">
          <source>Iterable.toSet()</source>
          <target state="translated">Iterable.toSet()</target>
        </trans-unit>
        <trans-unit id="c8cc4e68d9b02320d397f9ac9a81d447a9ec59e4" translate="yes" xml:space="preserve">
          <source>Iterable.toString()</source>
          <target state="translated">Iterable.toString()</target>
        </trans-unit>
        <trans-unit id="57a92ebd9d392c3ceeb57cb778bd9d9558737bc9" translate="yes" xml:space="preserve">
          <source>Iterable.toVector()</source>
          <target state="translated">Iterable.toVector()</target>
        </trans-unit>
        <trans-unit id="9f9703ee848984005e80e2b7c0a4bc8b4ee965de" translate="yes" xml:space="preserve">
          <source>Iterable.transpose()</source>
          <target state="translated">Iterable.transpose()</target>
        </trans-unit>
        <trans-unit id="d189a1ae58fef6b7945afb04f95672beb41c7977" translate="yes" xml:space="preserve">
          <source>Iterable.unzip()</source>
          <target state="translated">Iterable.unzip()</target>
        </trans-unit>
        <trans-unit id="114a7114131ad7b6b0a861b712d2ec39a15805a2" translate="yes" xml:space="preserve">
          <source>Iterable.unzip3()</source>
          <target state="translated">Iterable.unzip3()</target>
        </trans-unit>
        <trans-unit id="49d01503395e3d364246f7512553183a070c4af1" translate="yes" xml:space="preserve">
          <source>Iterable.view()</source>
          <target state="translated">Iterable.view()</target>
        </trans-unit>
        <trans-unit id="367c76c0d4fac8fd4b3f154fd8c47d476eef415c" translate="yes" xml:space="preserve">
          <source>Iterable.withFilter()</source>
          <target state="translated">Iterable.withFilter()</target>
        </trans-unit>
        <trans-unit id="f0da0a4be7e72054ee49376dac36897399381e1b" translate="yes" xml:space="preserve">
          <source>Iterable.zip()</source>
          <target state="translated">Iterable.zip()</target>
        </trans-unit>
        <trans-unit id="b79bf108260a8480390d41a162fddd2e6faa5f2b" translate="yes" xml:space="preserve">
          <source>Iterable.zipAll()</source>
          <target state="translated">Iterable.zipAll()</target>
        </trans-unit>
        <trans-unit id="f6e209148ae7c6d2683a4095707364e9642cbde5" translate="yes" xml:space="preserve">
          <source>Iterable.zipWithIndex()</source>
          <target state="translated">Iterable.zipWithIndex()</target>
        </trans-unit>
        <trans-unit id="b6928e8aab3192139bc2af42b6c3cf304559321f" translate="yes" xml:space="preserve">
          <source>IterableFactory</source>
          <target state="translated">IterableFactory</target>
        </trans-unit>
        <trans-unit id="cdc6785989ad5df82c59a2b62e0dd54679f45a52" translate="yes" xml:space="preserve">
          <source>IterableFactory$</source>
          <target state="translated">IterableFactory$</target>
        </trans-unit>
        <trans-unit id="05618665a381ae84ed9fb148d34210511cdaf028" translate="yes" xml:space="preserve">
          <source>IterableFactory$.Delegate</source>
          <target state="translated">IterableFactory$.Delegate</target>
        </trans-unit>
        <trans-unit id="ad977c2dfa96b2f86485c6fde0357dee7c529308" translate="yes" xml:space="preserve">
          <source>IterableFactory$.Delegate()</source>
          <target state="translated">IterableFactory$.Delegate()</target>
        </trans-unit>
        <trans-unit id="241382a4879cd68f7a54b9decea06e65f1b7f588" translate="yes" xml:space="preserve">
          <source>IterableFactory$.Delegate.Delegate()</source>
          <target state="translated">IterableFactory$.Delegate.Delegate()</target>
        </trans-unit>
        <trans-unit id="6b15e69e1a7f88f222d30e50d9e67a3769e29222" translate="yes" xml:space="preserve">
          <source>IterableFactory$.Delegate.apply()</source>
          <target state="translated">IterableFactory$.Delegate.apply()</target>
        </trans-unit>
        <trans-unit id="394b0abf434cbb592f18213e3711d81ca999fd37" translate="yes" xml:space="preserve">
          <source>IterableFactory$.Delegate.empty()</source>
          <target state="translated">IterableFactory$.Delegate.empty()</target>
        </trans-unit>
        <trans-unit id="24c101cab8b09196ad200c4a68f7c72ea4ba6e44" translate="yes" xml:space="preserve">
          <source>IterableFactory$.Delegate.from()</source>
          <target state="translated">IterableFactory$.Delegate.from()</target>
        </trans-unit>
        <trans-unit id="f3e052b42f6cc38a92664b0ca07d8458a3325df5" translate="yes" xml:space="preserve">
          <source>IterableFactory$.Delegate.newBuilder()</source>
          <target state="translated">IterableFactory$.Delegate.newBuilder()</target>
        </trans-unit>
        <trans-unit id="6f55ca28b9830dca7e0147bcba6edc00375af060" translate="yes" xml:space="preserve">
          <source>IterableFactory$.toBuildFrom()</source>
          <target state="translated">IterableFactory$.toBuildFrom()</target>
        </trans-unit>
        <trans-unit id="b523c70b241fbb7d397d3f313167c51da82a4dcd" translate="yes" xml:space="preserve">
          <source>IterableFactory$.toFactory()</source>
          <target state="translated">IterableFactory$.toFactory()</target>
        </trans-unit>
        <trans-unit id="502c15d97acf55f48d0c24f9d48282324e23812e" translate="yes" xml:space="preserve">
          <source>IterableFactory.apply()</source>
          <target state="translated">IterableFactory.apply()</target>
        </trans-unit>
        <trans-unit id="f3482d6d518b9b0c3f5c0913d32e5f05a1c7ea16" translate="yes" xml:space="preserve">
          <source>IterableFactory.concat()</source>
          <target state="translated">IterableFactory.concat()</target>
        </trans-unit>
        <trans-unit id="735a05dde0d0df5e68d756134bde15a5cfd08f2d" translate="yes" xml:space="preserve">
          <source>IterableFactory.empty()</source>
          <target state="translated">IterableFactory.empty()</target>
        </trans-unit>
        <trans-unit id="f10226645dc1b5b87f55e35a203d4e3e6bffa4c4" translate="yes" xml:space="preserve">
          <source>IterableFactory.fill()</source>
          <target state="translated">IterableFactory.fill()</target>
        </trans-unit>
        <trans-unit id="e3abc12b13eb69d1df747cf8e9803169fe72b17e" translate="yes" xml:space="preserve">
          <source>IterableFactory.from()</source>
          <target state="translated">IterableFactory.from()</target>
        </trans-unit>
        <trans-unit id="eab6705f931187f01878b4a92612654047672efb" translate="yes" xml:space="preserve">
          <source>IterableFactory.iterableFactory()</source>
          <target state="translated">IterableFactory.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="51fedac39ab0d5f07204d2b239d749afedb664d8" translate="yes" xml:space="preserve">
          <source>IterableFactory.iterate()</source>
          <target state="translated">IterableFactory.iterate()</target>
        </trans-unit>
        <trans-unit id="09eb4f2ee37e362a13d1b9ca1f7e0fe3022b2b2d" translate="yes" xml:space="preserve">
          <source>IterableFactory.newBuilder()</source>
          <target state="translated">IterableFactory.newBuilder()</target>
        </trans-unit>
        <trans-unit id="2adae474b16801c8f3114d8d955648a189a783cd" translate="yes" xml:space="preserve">
          <source>IterableFactory.range()</source>
          <target state="translated">IterableFactory.range()</target>
        </trans-unit>
        <trans-unit id="25efeefb5a7e09f648a4d5b8e9202af390aaed4a" translate="yes" xml:space="preserve">
          <source>IterableFactory.tabulate()</source>
          <target state="translated">IterableFactory.tabulate()</target>
        </trans-unit>
        <trans-unit id="cde451960d90f5234c053538b80dafc8884fca1e" translate="yes" xml:space="preserve">
          <source>IterableFactory.unfold()</source>
          <target state="translated">IterableFactory.unfold()</target>
        </trans-unit>
        <trans-unit id="28eb1ff6e58c69f50f22081e87b7a0f4a4bc4c58" translate="yes" xml:space="preserve">
          <source>IterableFactoryDefaults</source>
          <target state="translated">IterableFactoryDefaults</target>
        </trans-unit>
        <trans-unit id="f02f86af8e45242b8122587e47dc39aa698058f2" translate="yes" xml:space="preserve">
          <source>IterableFactoryDefaults.empty()</source>
          <target state="translated">IterableFactoryDefaults.empty()</target>
        </trans-unit>
        <trans-unit id="9e45a65958373fef8169256f111e2d69311cfb6e" translate="yes" xml:space="preserve">
          <source>IterableFactoryDefaults.fromSpecific()</source>
          <target state="translated">IterableFactoryDefaults.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="295560c8065f5df6002016ce6cba7e77540c91df" translate="yes" xml:space="preserve">
          <source>IterableFactoryDefaults.newSpecificBuilder()</source>
          <target state="translated">IterableFactoryDefaults.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="ece564f7b541b7438f5a7f339fc950f77e0a8d92" translate="yes" xml:space="preserve">
          <source>IterableOnce</source>
          <target state="translated">IterableOnce</target>
        </trans-unit>
        <trans-unit id="03feef9d77ded4c208c9f7793ebc89b94c467862" translate="yes" xml:space="preserve">
          <source>IterableOnce$</source>
          <target state="translated">IterableOnce$</target>
        </trans-unit>
        <trans-unit id="aa8697badced1ebddf0b1276819becdb8fd718e7" translate="yes" xml:space="preserve">
          <source>IterableOnce$.iterableOnceExtensionMethods()</source>
          <target state="translated">IterableOnce$.iterableOnceExtensionMethods()</target>
        </trans-unit>
        <trans-unit id="5acc4a0b2f38a4d52ab50e815559a33a7eabf861" translate="yes" xml:space="preserve">
          <source>IterableOnce.@deprecated()</source>
          <target state="translated">IterableOnce.@deprecated()</target>
        </trans-unit>
        <trans-unit id="58312a695b51b9cb9a656e882b8c9b941dbaf674" translate="yes" xml:space="preserve">
          <source>IterableOnce.iterator()</source>
          <target state="translated">IterableOnce.iterator()</target>
        </trans-unit>
        <trans-unit id="505a2d2aa749dafe2afb79914dbb80c92d013cc9" translate="yes" xml:space="preserve">
          <source>IterableOnce.knownSize()</source>
          <target state="translated">IterableOnce.knownSize()</target>
        </trans-unit>
        <trans-unit id="c13b127c9e95b70dd5a0a94859ebc5b47f0323f3" translate="yes" xml:space="preserve">
          <source>IterableOnce.scala</source>
          <target state="translated">IterableOnce.scala</target>
        </trans-unit>
        <trans-unit id="df32f06e0f5ab587aced829aba93762ff30e4a14" translate="yes" xml:space="preserve">
          <source>IterableOnce.stepper()</source>
          <target state="translated">IterableOnce.stepper()</target>
        </trans-unit>
        <trans-unit id="8c5c82ab94e8e91dc063d4aca61df5afef0ac4a3" translate="yes" xml:space="preserve">
          <source>IterableOnceExtensionMethods</source>
          <target state="translated">IterableOnceExtensionMethods</target>
        </trans-unit>
        <trans-unit id="411035def6e10b019972bd58f83f6401a9c45f3a" translate="yes" xml:space="preserve">
          <source>IterableOnceExtensionMethods.IterableOnceExtensionMethods()</source>
          <target state="translated">IterableOnceExtensionMethods.IterableOnceExtensionMethods()</target>
        </trans-unit>
        <trans-unit id="ac479cb947d48b91c2052cfeef11711d19dc4343" translate="yes" xml:space="preserve">
          <source>IterableOnceOps</source>
          <target state="translated">IterableOnceOps</target>
        </trans-unit>
        <trans-unit id="a1c22878a9e5757c84ae79843fe83294c7a40743" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.addString()</source>
          <target state="translated">IterableOnceOps.addString()</target>
        </trans-unit>
        <trans-unit id="2444d4743fdf439c3de37a5398d234f46da5a332" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.collect()</source>
          <target state="translated">IterableOnceOps.collect()</target>
        </trans-unit>
        <trans-unit id="2816ee50bf8939cb487504049d7e686ef4dc0d32" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.collectFirst()</source>
          <target state="translated">IterableOnceOps.collectFirst()</target>
        </trans-unit>
        <trans-unit id="113d244f81ff954575c0ddc38bd2e13ef6234d10" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.copyToArray()</source>
          <target state="translated">IterableOnceOps.copyToArray()</target>
        </trans-unit>
        <trans-unit id="8c6f57baed925f8e67acc6600917f89365f6ac9a" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.corresponds()</source>
          <target state="translated">IterableOnceOps.corresponds()</target>
        </trans-unit>
        <trans-unit id="15fd63e38aff3e9dcc5b25232c35b0be79801227" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.count()</source>
          <target state="translated">IterableOnceOps.count()</target>
        </trans-unit>
        <trans-unit id="9db84390d2a6bbd66af66774304683ed64592c14" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.drop()</source>
          <target state="translated">IterableOnceOps.drop()</target>
        </trans-unit>
        <trans-unit id="5007f5ec9bd8d33118b3f2914b5c443d83a88139" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.dropWhile()</source>
          <target state="translated">IterableOnceOps.dropWhile()</target>
        </trans-unit>
        <trans-unit id="36433d43e6aed5385852940e164dbbe9e068101d" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.exists()</source>
          <target state="translated">IterableOnceOps.exists()</target>
        </trans-unit>
        <trans-unit id="3972e55b2419f5cc8a8e8f94336da05023e8fe71" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.filter()</source>
          <target state="translated">IterableOnceOps.filter()</target>
        </trans-unit>
        <trans-unit id="d71270803ed4d1a20103b8d4b5eb8a5b88d4c2aa" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.filterNot()</source>
          <target state="translated">IterableOnceOps.filterNot()</target>
        </trans-unit>
        <trans-unit id="23631aaed9c06ac683c50cf1f7b9e1df734fe56c" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.find()</source>
          <target state="translated">IterableOnceOps.find()</target>
        </trans-unit>
        <trans-unit id="544f506895f8de82cdca7e0310b174ba21917dde" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.flatMap()</source>
          <target state="translated">IterableOnceOps.flatMap()</target>
        </trans-unit>
        <trans-unit id="a35c549e8e7b60c2e934e766604b6b68178dfcaf" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.flatten()</source>
          <target state="translated">IterableOnceOps.flatten()</target>
        </trans-unit>
        <trans-unit id="51016425cf30fa50136debaa3ad2206be20cfbba" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.fold()</source>
          <target state="translated">IterableOnceOps.fold()</target>
        </trans-unit>
        <trans-unit id="ba77b14fd35c2b2faac276a2bc53bc990a821ccf" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.foldLeft()</source>
          <target state="translated">IterableOnceOps.foldLeft()</target>
        </trans-unit>
        <trans-unit id="ead18a37b8e60d6daa86a508e84ede25d6518e8e" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.foldRight()</source>
          <target state="translated">IterableOnceOps.foldRight()</target>
        </trans-unit>
        <trans-unit id="a7cc384ab230c8b6b4b51c7b6771935122cfa72d" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.forall()</source>
          <target state="translated">IterableOnceOps.forall()</target>
        </trans-unit>
        <trans-unit id="e60be9a2223bf7c0b9a95d33a8f2f539f7e6c635" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.foreach()</source>
          <target state="translated">IterableOnceOps.foreach()</target>
        </trans-unit>
        <trans-unit id="25dd63920d862d97a583e772f694b4d9b5c32536" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.isEmpty()</source>
          <target state="translated">IterableOnceOps.isEmpty()</target>
        </trans-unit>
        <trans-unit id="d49a5ccd597979c4967a0396ba854326a4b5db23" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.isTraversableAgain()</source>
          <target state="translated">IterableOnceOps.isTraversableAgain()</target>
        </trans-unit>
        <trans-unit id="b2ce12e74cb873c674962579f6943900b98a0092" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.map()</source>
          <target state="translated">IterableOnceOps.map()</target>
        </trans-unit>
        <trans-unit id="4aea67d616da4560646ab72ebbb7f27fc8407fc2" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.max()</source>
          <target state="translated">IterableOnceOps.max()</target>
        </trans-unit>
        <trans-unit id="6886d3e89b50cff144497efd7449d4cfa52f26b2" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.maxBy()</source>
          <target state="translated">IterableOnceOps.maxBy()</target>
        </trans-unit>
        <trans-unit id="a509be92850083247517d786e2b617b6b1c0a585" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.maxByOption()</source>
          <target state="translated">IterableOnceOps.maxByOption()</target>
        </trans-unit>
        <trans-unit id="4d1263bc7f8ab5a44edcfdf9fd1acec7e948e9b1" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.maxOption()</source>
          <target state="translated">IterableOnceOps.maxOption()</target>
        </trans-unit>
        <trans-unit id="23d41ef4ea08cf324ebb102018110691ef967d3a" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.min()</source>
          <target state="translated">IterableOnceOps.min()</target>
        </trans-unit>
        <trans-unit id="975ef736a0decb6a177e46f6ec96ebdbb46008ed" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.minBy()</source>
          <target state="translated">IterableOnceOps.minBy()</target>
        </trans-unit>
        <trans-unit id="92ff331fbb1e6257e8b02bef98c3d6955cb7e64d" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.minByOption()</source>
          <target state="translated">IterableOnceOps.minByOption()</target>
        </trans-unit>
        <trans-unit id="31252aa17e1f83ccb92e742ca36e8bc269bdc4f7" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.minOption()</source>
          <target state="translated">IterableOnceOps.minOption()</target>
        </trans-unit>
        <trans-unit id="55a1fbc0128ce65cbbacbd387330edd7d565ca57" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.mkString()</source>
          <target state="translated">IterableOnceOps.mkString()</target>
        </trans-unit>
        <trans-unit id="e59b6f7f6bb031374886e638563c26571ca83177" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.nonEmpty()</source>
          <target state="translated">IterableOnceOps.nonEmpty()</target>
        </trans-unit>
        <trans-unit id="ae5d8e1b4b910af3f39984cef77995cd475f632c" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.product()</source>
          <target state="translated">IterableOnceOps.product()</target>
        </trans-unit>
        <trans-unit id="ccf67b2079bd1096c94afdecd8659eea368d5a42" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.reduce()</source>
          <target state="translated">IterableOnceOps.reduce()</target>
        </trans-unit>
        <trans-unit id="f9f3c2ab0a1629a6ab79326209a2f22eb901b5cc" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.reduceLeft()</source>
          <target state="translated">IterableOnceOps.reduceLeft()</target>
        </trans-unit>
        <trans-unit id="9de647c02390720be9bd72662bc7b52c009fc2f6" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.reduceLeftOption()</source>
          <target state="translated">IterableOnceOps.reduceLeftOption()</target>
        </trans-unit>
        <trans-unit id="26d868af53bdf57f56a7bfa756619d5fea5a6f6e" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.reduceOption()</source>
          <target state="translated">IterableOnceOps.reduceOption()</target>
        </trans-unit>
        <trans-unit id="7ed52ccc6584be0eb957be563bcb6590b9c0f3b4" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.reduceRight()</source>
          <target state="translated">IterableOnceOps.reduceRight()</target>
        </trans-unit>
        <trans-unit id="c984f1ab783b64034040a678aa0bf182f4dfed41" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.reduceRightOption()</source>
          <target state="translated">IterableOnceOps.reduceRightOption()</target>
        </trans-unit>
        <trans-unit id="283dd926fe0ab818120b41148846ff0b8d89001e" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.reversed()</source>
          <target state="translated">IterableOnceOps.reversed()</target>
        </trans-unit>
        <trans-unit id="36328c05d4a9b898f76f9356e3ec25679d2a5e90" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.scanLeft()</source>
          <target state="translated">IterableOnceOps.scanLeft()</target>
        </trans-unit>
        <trans-unit id="70d4f4ab5af5f66d52f3c4b0ff9486670709e8a6" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.size()</source>
          <target state="translated">IterableOnceOps.size()</target>
        </trans-unit>
        <trans-unit id="4420e148fb0380698618d2d851fac61ebe29b39f" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.slice()</source>
          <target state="translated">IterableOnceOps.slice()</target>
        </trans-unit>
        <trans-unit id="d140681e50e343e4113c7280059c876910536e74" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.span()</source>
          <target state="translated">IterableOnceOps.span()</target>
        </trans-unit>
        <trans-unit id="8539da5520618a38c5bc3541cddb36b68a61ad3f" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.splitAt()</source>
          <target state="translated">IterableOnceOps.splitAt()</target>
        </trans-unit>
        <trans-unit id="cfb60ae1dd9e28634978166f6ea35d5354f1fd02" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.sum()</source>
          <target state="translated">IterableOnceOps.sum()</target>
        </trans-unit>
        <trans-unit id="63c7274b6ede8c7ac4adb60b22bda70bddfc5f92" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.take()</source>
          <target state="translated">IterableOnceOps.take()</target>
        </trans-unit>
        <trans-unit id="01fd910bd257de198fee38a50273627b38409270" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.takeWhile()</source>
          <target state="translated">IterableOnceOps.takeWhile()</target>
        </trans-unit>
        <trans-unit id="f731118f6de9bfc1e0a67945268f62f5dcdab8b2" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.tapEach()</source>
          <target state="translated">IterableOnceOps.tapEach()</target>
        </trans-unit>
        <trans-unit id="cde3c89e83682f92023f28d0eb69c4a5d3871556" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.to()</source>
          <target state="translated">IterableOnceOps.to()</target>
        </trans-unit>
        <trans-unit id="79876e5e3b631d352a6ce8fd915d2d2c86d7369f" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.toArray()</source>
          <target state="translated">IterableOnceOps.toArray()</target>
        </trans-unit>
        <trans-unit id="aa8b7f95401a97bb83a8f020d55ec62f61125342" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.toBuffer()</source>
          <target state="translated">IterableOnceOps.toBuffer()</target>
        </trans-unit>
        <trans-unit id="db569d7c57df2f59b61c4ca39b9998e8019f3524" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.toIndexedSeq()</source>
          <target state="translated">IterableOnceOps.toIndexedSeq()</target>
        </trans-unit>
        <trans-unit id="3d17a6c33fff4465705070e9324153b8095edd5f" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.toList()</source>
          <target state="translated">IterableOnceOps.toList()</target>
        </trans-unit>
        <trans-unit id="78c3c688c96c2a806d1b131b8b812dfd42e57e0e" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.toMap()</source>
          <target state="translated">IterableOnceOps.toMap()</target>
        </trans-unit>
        <trans-unit id="fceb5850651aa96c02ec0223c62b7ccc93d0b7dc" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.toSeq()</source>
          <target state="translated">IterableOnceOps.toSeq()</target>
        </trans-unit>
        <trans-unit id="94abd14403e627bde9fe963ef911a9e8ac112010" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.toSet()</source>
          <target state="translated">IterableOnceOps.toSet()</target>
        </trans-unit>
        <trans-unit id="916875a4ed3998103ceaea1220253e6a9c5b8bb4" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.toVector()</source>
          <target state="translated">IterableOnceOps.toVector()</target>
        </trans-unit>
        <trans-unit id="17c1d0d138887a829e86c7d039e44f3af07c7d21" translate="yes" xml:space="preserve">
          <source>IterableOnceOps.zipWithIndex()</source>
          <target state="translated">IterableOnceOps.zipWithIndex()</target>
        </trans-unit>
        <trans-unit id="7c25f5197a89a6fc49488cbf4fd9a6c4e92642de" translate="yes" xml:space="preserve">
          <source>IterableOps</source>
          <target state="translated">IterableOps</target>
        </trans-unit>
        <trans-unit id="9d259a7567481b2a8038d10057c8ffa7418b0368" translate="yes" xml:space="preserve">
          <source>IterableOps$</source>
          <target state="translated">IterableOps$</target>
        </trans-unit>
        <trans-unit id="59d27a5f3bdb8809c46f9f603adb8bd16b02ea97" translate="yes" xml:space="preserve">
          <source>IterableOps$.SizeCompareOps</source>
          <target state="translated">IterableOps$.SizeCompareOps</target>
        </trans-unit>
        <trans-unit id="a348b0dfa24f7e688f3ae4bca877331c810bc72c" translate="yes" xml:space="preserve">
          <source>IterableOps$.SizeCompareOps()</source>
          <target state="translated">IterableOps$.SizeCompareOps()</target>
        </trans-unit>
        <trans-unit id="9fb133906de5fa684f2eb5c975705df80f327b2d" translate="yes" xml:space="preserve">
          <source>IterableOps$.SizeCompareOps.!=()</source>
          <target state="translated">IterableOps$.SizeCompareOps.!=()</target>
        </trans-unit>
        <trans-unit id="7a82166626defc55feab5ead03cc466c546e3a82" translate="yes" xml:space="preserve">
          <source>IterableOps$.SizeCompareOps.&amp;gt;()</source>
          <target state="translated">IterableOps$.SizeCompareOps.&amp;gt;()</target>
        </trans-unit>
        <trans-unit id="94426d1c29146d96b9a1b8cc832ea04071fd8f28" translate="yes" xml:space="preserve">
          <source>IterableOps$.SizeCompareOps.&amp;gt;=()</source>
          <target state="translated">IterableOps$.SizeCompareOps.&amp;gt;=()</target>
        </trans-unit>
        <trans-unit id="d0f74ea0fa354f47bb93534320e9c76c0217eb78" translate="yes" xml:space="preserve">
          <source>IterableOps$.SizeCompareOps.&amp;lt;()</source>
          <target state="translated">IterableOps$.SizeCompareOps.&amp;lt;()</target>
        </trans-unit>
        <trans-unit id="e8e3c26d2f4bb34351dc47c91c21d38a482ea34f" translate="yes" xml:space="preserve">
          <source>IterableOps$.SizeCompareOps.&amp;lt;=()</source>
          <target state="translated">IterableOps$.SizeCompareOps.&amp;lt;=()</target>
        </trans-unit>
        <trans-unit id="a8092366aa61df2e9621a72bf3d828999c143a09" translate="yes" xml:space="preserve">
          <source>IterableOps$.SizeCompareOps.==()</source>
          <target state="translated">IterableOps$.SizeCompareOps.==()</target>
        </trans-unit>
        <trans-unit id="fc8e59cc42afe92f4449daaab4407d066d3adb72" translate="yes" xml:space="preserve">
          <source>IterableOps$.SizeCompareOps.it()</source>
          <target state="translated">IterableOps$.SizeCompareOps.it()</target>
        </trans-unit>
        <trans-unit id="b734f3c33938c421482a57ae2a3443a5065e3e6d" translate="yes" xml:space="preserve">
          <source>IterableOps$.WithFilter</source>
          <target state="translated">IterableOps$.WithFilter</target>
        </trans-unit>
        <trans-unit id="ec2a5c125cbc66f5ead40aec5438ee6070f6233b" translate="yes" xml:space="preserve">
          <source>IterableOps$.WithFilter()</source>
          <target state="translated">IterableOps$.WithFilter()</target>
        </trans-unit>
        <trans-unit id="de29268f3eff2c510bd2e1f739731cd3e8892e95" translate="yes" xml:space="preserve">
          <source>IterableOps$.WithFilter.WithFilter()</source>
          <target state="translated">IterableOps$.WithFilter.WithFilter()</target>
        </trans-unit>
        <trans-unit id="a790ec493df81f21bc7b04f96530367479205896" translate="yes" xml:space="preserve">
          <source>IterableOps$.WithFilter.filtered()</source>
          <target state="translated">IterableOps$.WithFilter.filtered()</target>
        </trans-unit>
        <trans-unit id="ad1d1fbf901231b063d20c31d5aff6a445513a1f" translate="yes" xml:space="preserve">
          <source>IterableOps$.WithFilter.flatMap()</source>
          <target state="translated">IterableOps$.WithFilter.flatMap()</target>
        </trans-unit>
        <trans-unit id="f1ed761299c594fd8ce9d4f1b8fb3f17e2e7490f" translate="yes" xml:space="preserve">
          <source>IterableOps$.WithFilter.foreach()</source>
          <target state="translated">IterableOps$.WithFilter.foreach()</target>
        </trans-unit>
        <trans-unit id="383ce64d78b07bce8cb00611f4704f4eedb2d185" translate="yes" xml:space="preserve">
          <source>IterableOps$.WithFilter.map()</source>
          <target state="translated">IterableOps$.WithFilter.map()</target>
        </trans-unit>
        <trans-unit id="bfc283c08dc82e951caa47276c5a0c40e831fa6e" translate="yes" xml:space="preserve">
          <source>IterableOps$.WithFilter.withFilter()</source>
          <target state="translated">IterableOps$.WithFilter.withFilter()</target>
        </trans-unit>
        <trans-unit id="1ea6db3867d8b3dc69ed50d8213b802698c358bb" translate="yes" xml:space="preserve">
          <source>IterableOps.++()</source>
          <target state="translated">IterableOps.++()</target>
        </trans-unit>
        <trans-unit id="ce203fa4843a7922098fe5ef488caee677770986" translate="yes" xml:space="preserve">
          <source>IterableOps.coll()</source>
          <target state="translated">IterableOps.coll()</target>
        </trans-unit>
        <trans-unit id="36b05ea047d044d855b4af1bb71dc6c9dba1f55e" translate="yes" xml:space="preserve">
          <source>IterableOps.collect()</source>
          <target state="translated">IterableOps.collect()</target>
        </trans-unit>
        <trans-unit id="e70b53e81093017266602d2c70085e3eb1734d76" translate="yes" xml:space="preserve">
          <source>IterableOps.concat()</source>
          <target state="translated">IterableOps.concat()</target>
        </trans-unit>
        <trans-unit id="6a0b4c0ec4ec695b4c21c43ab1fb418a2cc84011" translate="yes" xml:space="preserve">
          <source>IterableOps.drop()</source>
          <target state="translated">IterableOps.drop()</target>
        </trans-unit>
        <trans-unit id="cd77db52fe5d1c1f904527b32b54507671eead65" translate="yes" xml:space="preserve">
          <source>IterableOps.dropRight()</source>
          <target state="translated">IterableOps.dropRight()</target>
        </trans-unit>
        <trans-unit id="1a3258d1445a8505db749912e3370d61445b2650" translate="yes" xml:space="preserve">
          <source>IterableOps.dropWhile()</source>
          <target state="translated">IterableOps.dropWhile()</target>
        </trans-unit>
        <trans-unit id="572c8750bdb8c09c5fd8d1d7d2d18b41a9addf0a" translate="yes" xml:space="preserve">
          <source>IterableOps.empty()</source>
          <target state="translated">IterableOps.empty()</target>
        </trans-unit>
        <trans-unit id="2481d19531eb77fe5ad6132f8e53bb2de4fc5ae9" translate="yes" xml:space="preserve">
          <source>IterableOps.filter()</source>
          <target state="translated">IterableOps.filter()</target>
        </trans-unit>
        <trans-unit id="3f3a365d48e478e9a659140a8c1243012080149e" translate="yes" xml:space="preserve">
          <source>IterableOps.filterNot()</source>
          <target state="translated">IterableOps.filterNot()</target>
        </trans-unit>
        <trans-unit id="58dbf8812d76a50ffaea176133b9d0a22d6a5dc6" translate="yes" xml:space="preserve">
          <source>IterableOps.flatMap()</source>
          <target state="translated">IterableOps.flatMap()</target>
        </trans-unit>
        <trans-unit id="914dfa55ab3fbb50b3ea5c355707ca06aaad7216" translate="yes" xml:space="preserve">
          <source>IterableOps.flatten()</source>
          <target state="translated">IterableOps.flatten()</target>
        </trans-unit>
        <trans-unit id="60982bdaa1070e2068c054755661b0840f21c47c" translate="yes" xml:space="preserve">
          <source>IterableOps.fromSpecific()</source>
          <target state="translated">IterableOps.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="90e896898a81466e30eb4bbf437de957980c7321" translate="yes" xml:space="preserve">
          <source>IterableOps.groupBy()</source>
          <target state="translated">IterableOps.groupBy()</target>
        </trans-unit>
        <trans-unit id="b79df383781a1e821e6ea16155224807bd224c17" translate="yes" xml:space="preserve">
          <source>IterableOps.groupMap()</source>
          <target state="translated">IterableOps.groupMap()</target>
        </trans-unit>
        <trans-unit id="fd9abe2bc946f6b7dc48e272ebe5685979de66b1" translate="yes" xml:space="preserve">
          <source>IterableOps.groupMapReduce()</source>
          <target state="translated">IterableOps.groupMapReduce()</target>
        </trans-unit>
        <trans-unit id="120300cfc9789e2d9b0116fbdd781670f0093f66" translate="yes" xml:space="preserve">
          <source>IterableOps.grouped()</source>
          <target state="translated">IterableOps.grouped()</target>
        </trans-unit>
        <trans-unit id="d88a42357703e21ee9c2c4cd516c1501a21d7689" translate="yes" xml:space="preserve">
          <source>IterableOps.head()</source>
          <target state="translated">IterableOps.head()</target>
        </trans-unit>
        <trans-unit id="6194398a9d2a2bfc00847af3a8c75c7ed92aff07" translate="yes" xml:space="preserve">
          <source>IterableOps.headOption()</source>
          <target state="translated">IterableOps.headOption()</target>
        </trans-unit>
        <trans-unit id="aac756027e8b0567b3c5d390839f0dc93fa935b0" translate="yes" xml:space="preserve">
          <source>IterableOps.init()</source>
          <target state="translated">IterableOps.init()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
