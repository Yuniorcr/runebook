<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="f4b0d227cc3272798bd66278ce21eda5e3cb9c64" translate="yes" xml:space="preserve">
          <source>Adds a single element to this linked hash map.</source>
          <target state="translated">このリンクされたハッシュマップに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="e013073d8bbf896715e8df05b6a565f9a6471d6c" translate="yes" xml:space="preserve">
          <source>Adds a single element to this linked hash set.</source>
          <target state="translated">このリンクされたハッシュセットに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="b8c6cc7b0fe65ac291dbeae8e277d1d55ed19c99" translate="yes" xml:space="preserve">
          <source>Adds a single element to this list buffer.</source>
          <target state="translated">このリストバッファに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="e02bf9bc6c313bb445cb03181c5a45fa29845d50" translate="yes" xml:space="preserve">
          <source>Adds a single element to this mutable collision-proof hash map.</source>
          <target state="translated">この突然変異可能な衝突防止ハッシュマップに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="1507aa64c477ff22e68d9b2e6547b9256ded36da" translate="yes" xml:space="preserve">
          <source>Adds a single element to this mutable hash map.</source>
          <target state="translated">この変更可能なハッシュマップに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="18767694458f298528fac7d83d34f70e8bbde5e1" translate="yes" xml:space="preserve">
          <source>Adds a single element to this mutable hash set.</source>
          <target state="translated">この変異可能なハッシュセットに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="cf3782653ed3d3c77a1e141772a6347ad516fd25" translate="yes" xml:space="preserve">
          <source>Adds a single element to this mutable list map.</source>
          <target state="translated">このミュータブルリストマップに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="af066bbd2c3f7b2d3a4807dbae100645befe1d8e" translate="yes" xml:space="preserve">
          <source>Adds a single element to this mutable map .</source>
          <target state="translated">このミューターブルマップに1つの要素を追加します.</target>
        </trans-unit>
        <trans-unit id="605df2a8631184efe0e7dde936be67b56fd9b939" translate="yes" xml:space="preserve">
          <source>Adds a single element to this mutable map.</source>
          <target state="translated">このミュータブルマップに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="fd56465fd48ebb4c760bc34a5f87ef93bb732432" translate="yes" xml:space="preserve">
          <source>Adds a single element to this mutable tree map.</source>
          <target state="translated">この変更可能なツリーマップに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="1c3f07034143eef69e33f7259512bc6cd99b6134" translate="yes" xml:space="preserve">
          <source>Adds a single element to this mutable tree set.</source>
          <target state="translated">この変異可能なツリーセットに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="52ec79a3f6150a6f7730d70c67ee52ad8f68052e" translate="yes" xml:space="preserve">
          <source>Adds a single element to this open hash map.</source>
          <target state="translated">このオープンハッシュマップに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="a03c5af95ffd909fcbe4847891b2123be7aaadcb" translate="yes" xml:space="preserve">
          <source>Adds a single element to this string builder.</source>
          <target state="translated">この文字列ビルダに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="4cb4b6e8a5e5c3bde23c20a8f7cc2197b472a39f" translate="yes" xml:space="preserve">
          <source>Adds a single element to this unrolled buffer.</source>
          <target state="translated">このアンロールバッファに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="2fdc9560b3ad00b7d566f9f09fe2eefeefe7f0d5" translate="yes" xml:space="preserve">
          <source>Adds a single element to this weak hash map.</source>
          <target state="translated">この弱いハッシュマップに1つの要素を追加します。</target>
        </trans-unit>
        <trans-unit id="0e97b81de50fd318d647e0e918bb6db44da64053" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this array buffer.</source>
          <target state="translated">IterableOnce で生成されたすべての要素をこの配列バッファに追加します。</target>
        </trans-unit>
        <trans-unit id="bcb9377036258a728ce5e1850df7579358aaa020" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this array deque.</source>
          <target state="translated">IterableOnce で生成されたすべての要素をこの配列 deque に追加します。</target>
        </trans-unit>
        <trans-unit id="727ef81d42e8f5ff58f5018ed757f473f53fe7a8" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this bitset.</source>
          <target state="translated">IterableOnceによって生成されたすべての要素をこのビットセットに追加します。</target>
        </trans-unit>
        <trans-unit id="f13d1fb67263cce1bedc17ce1d22b4b5a3f7c95b" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this growable collection.</source>
          <target state="translated">IterableOnceで生成されたすべての要素を、この成長可能なコレクションに追加します。</target>
        </trans-unit>
        <trans-unit id="4f0dcf5401e4f13be2849869036489afd554ef13" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this growing builder.</source>
          <target state="translated">IterableOnceで生成されたすべての要素を、この成長中のビルダーに追加します。</target>
        </trans-unit>
        <trans-unit id="e63053b3facfa5eacda7f098bb8c55b53e17346b" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this list buffer.</source>
          <target state="translated">IterableOnceによって生成されたすべての要素をこのリストバッファに追加します。</target>
        </trans-unit>
        <trans-unit id="ea5ebe0705b5020c552169233ca05a9fd4b8fc13" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this mutable collision-proof hash map.</source>
          <target state="translated">IterableOnceによって生成されたすべての要素を、この変異可能な衝突防止ハッシュマップに追加します。</target>
        </trans-unit>
        <trans-unit id="ab28d8aeeeb58f9909beaca46275713098810547" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this mutable hash map.</source>
          <target state="translated">IterableOnceによって生成されたすべての要素をこのミュータブルハッシュマップに追加します。</target>
        </trans-unit>
        <trans-unit id="52033120d5087e25ad8089600f78d3a669ca842f" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this mutable hash set.</source>
          <target state="translated">IterableOnceによって生成されたすべての要素を、この変異可能なハッシュセットに追加します。</target>
        </trans-unit>
        <trans-unit id="49023e2edffd3102067a3e66275cd7b02cbdd0ad" translate="yes" xml:space="preserve">
          <source>Adds all elements produced by an IterableOnce to this priority queue.</source>
          <target state="translated">IterableOnceによって生成されたすべての要素をこの優先度キューに追加します。</target>
        </trans-unit>
        <trans-unit id="0a6f0ef0d38e26633de7c062e4147b12aa246be2" translate="yes" xml:space="preserve">
          <source>Adds all elements provided by a &lt;code&gt;IterableOnce&lt;/code&gt; object into the priority queue.</source>
          <target state="translated">&lt;code&gt;IterableOnce&lt;/code&gt; オブジェクトによって提供されるすべての要素を優先度キューに追加します。</target>
        </trans-unit>
        <trans-unit id="60d439bdc1e308b7e4e8e8526c57af1ad431def2" translate="yes" xml:space="preserve">
          <source>Adds all elements to the queue.</source>
          <target state="translated">すべての要素をキューに追加します。</target>
        </trans-unit>
        <trans-unit id="c7eb9fefabb1965a9ea57d9be96f061d57a68752" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala &lt;code&gt;Iterable&lt;/code&gt; to a Java &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Iterable&lt;/code&gt; をJava &lt;code&gt;Iterable&lt;/code&gt; に暗黙的に変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="9eb69be48f7bfc10ece302d48cd9f573222b2fdc" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala &lt;code&gt;Iterator&lt;/code&gt; to a Java &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Iterator&lt;/code&gt; をJava &lt;code&gt;Iterator&lt;/code&gt; に暗黙的に変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="5b421ea57aac20baa0b316de133e7674ee04069d" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala &lt;code&gt;Map&lt;/code&gt; to a Java &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Map&lt;/code&gt; をJava &lt;code&gt;Map&lt;/code&gt; 暗黙的に変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="585dc8c18052e7b95736da664e8377e62f3f7451" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala &lt;code&gt;Seq&lt;/code&gt; to a Java &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Seq&lt;/code&gt; を暗黙的にJava &lt;code&gt;List&lt;/code&gt; 変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="43e57010e775985f58c86772d5a22c15554ac5c1" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala &lt;code&gt;Set&lt;/code&gt; to a Java &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Set&lt;/code&gt; をJava &lt;code&gt;Set&lt;/code&gt; に暗黙的に変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="0cabc3976e0672db4269b82114c21c83378fd880" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala mutable &lt;code&gt;Buffer&lt;/code&gt; to a Java &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">Scala可変 &lt;code&gt;Buffer&lt;/code&gt; をJava &lt;code&gt;List&lt;/code&gt; 暗黙的に変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="b1d8cce22613a5e963eac9c2006f60b9c45b710f" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala mutable &lt;code&gt;Map&lt;/code&gt; to a Java &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">Scala可変 &lt;code&gt;Map&lt;/code&gt; をJava &lt;code&gt;Map&lt;/code&gt; 暗黙的に変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="3c2aca35072734044f5254fc5af31eeb9a30e507" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala mutable &lt;code&gt;Seq&lt;/code&gt; to a Java &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">Scala可変 &lt;code&gt;Seq&lt;/code&gt; を暗黙的にJava &lt;code&gt;List&lt;/code&gt; 変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="6a65fbe5beafa555f5c0f3bbec39e5e6a190bfb0" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala mutable &lt;code&gt;Set&lt;/code&gt; to a Java &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">Scala可変 &lt;code&gt;Set&lt;/code&gt; をJava &lt;code&gt;Set&lt;/code&gt; 暗黙的に変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="ae62f1d676c43fb8089fec2e0dbf005d591a9988" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJava&lt;/code&gt; method that implicitly converts a Scala mutable &lt;code&gt;concurrent.Map&lt;/code&gt; to a Java &lt;code&gt;ConcurrentMap&lt;/code&gt;.</source>
          <target state="translated">Scalaの可変の &lt;code&gt;concurrent.Map&lt;/code&gt; をJavaの &lt;code&gt;ConcurrentMap&lt;/code&gt; に暗黙的に変換する &lt;code&gt;asJava&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="d74e2348fc76081dc0753273ddae6a5ea3a9ec89" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJavaCollection&lt;/code&gt; method that implicitly converts a Scala &lt;code&gt;Iterable&lt;/code&gt; to an immutable Java &lt;code&gt;Collection&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Iterable&lt;/code&gt; を不変のJava &lt;code&gt;Collection&lt;/code&gt; 暗黙的に変換する &lt;code&gt;asJavaCollection&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="aa4f0342757806f8fa4c1001f32fbb2828881eb5" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJavaDictionary&lt;/code&gt; method that implicitly converts a Scala mutable &lt;code&gt;Map&lt;/code&gt; to a Java &lt;code&gt;Dictionary&lt;/code&gt;.</source>
          <target state="translated">Scala可変 &lt;code&gt;Map&lt;/code&gt; をJava &lt;code&gt;Dictionary&lt;/code&gt; 暗黙的に変換する &lt;code&gt;asJavaDictionary&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="ae19a6f2aa8e0ca5a6d8ca7c2bee4bade03efcca" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asJavaEnumeration&lt;/code&gt; method that implicitly converts a Scala &lt;code&gt;Iterator&lt;/code&gt; to a Java &lt;code&gt;Enumeration&lt;/code&gt;.</source>
          <target state="translated">Scala &lt;code&gt;Iterator&lt;/code&gt; をJava &lt;code&gt;Enumeration&lt;/code&gt; に暗黙的に変換する &lt;code&gt;asJavaEnumeration&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="aace2c1772be893f8e0a8f91859e40f23c2a2f79" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;Collection&lt;/code&gt; to an Scala &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Collection&lt;/code&gt; を暗黙的にScala &lt;code&gt;Iterable&lt;/code&gt; に変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="c1b53f942533938478f8d4f2228171c0d8832862" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;ConcurrentMap&lt;/code&gt; to a Scala mutable &lt;code&gt;concurrent.Map&lt;/code&gt;.</source>
          <target state="translated">Javaの &lt;code&gt;ConcurrentMap&lt;/code&gt; をScalaの可変の &lt;code&gt;concurrent.Map&lt;/code&gt; に暗黙的に変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="d2734c88d6c902f586c8d6db01dade7c5eec02f6" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;Dictionary&lt;/code&gt; to a Scala mutable &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Dictionary&lt;/code&gt; を暗黙的にScala可変 &lt;code&gt;Map&lt;/code&gt; 変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="a2c0d331f3860e4313146b3513dd88e14756e7d0" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;Enumeration&lt;/code&gt; to a Scala &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Enumeration&lt;/code&gt; を暗黙的にScala &lt;code&gt;Iterator&lt;/code&gt; に変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="2fd2f1e1f7c5eeb9b7b82bd5d07f3e24696f9e4d" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;Iterable&lt;/code&gt; to a Scala &lt;code&gt;Iterable&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Iterable&lt;/code&gt; をScala &lt;code&gt;Iterable&lt;/code&gt; に暗黙的に変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="70103527d830f2bc11410c0ec8faf5fd7d391bad" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;Iterator&lt;/code&gt; to a Scala &lt;code&gt;Iterator&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Iterator&lt;/code&gt; をScala &lt;code&gt;Iterator&lt;/code&gt; に暗黙的に変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="533f1be4202b62de108333bca8feadba028d95ae" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;List&lt;/code&gt; to a Scala mutable &lt;code&gt;Buffer&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;List&lt;/code&gt; を暗黙的にScala可変 &lt;code&gt;Buffer&lt;/code&gt; 変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="cb71f392400f809fa76caf4948309d9363104ae0" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;Map&lt;/code&gt; to a Scala mutable &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Map&lt;/code&gt; をScala可変 &lt;code&gt;Map&lt;/code&gt; に暗黙的に変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="5b1f490f522328edbe02a47f0d5b478d21bb1c95" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;Properties&lt;/code&gt; to a Scala mutable &lt;code&gt;Map[String, String]&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Properties&lt;/code&gt; を暗黙的にScala可変 &lt;code&gt;Map[String, String]&lt;/code&gt; 変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="7b0791740dd4f1352551b6ddfb4f0174caf5d36f" translate="yes" xml:space="preserve">
          <source>Adds an &lt;code&gt;asScala&lt;/code&gt; method that implicitly converts a Java &lt;code&gt;Set&lt;/code&gt; to a Scala mutable &lt;code&gt;Set&lt;/code&gt;.</source>
          <target state="translated">Java &lt;code&gt;Set&lt;/code&gt; をScala可変 &lt;code&gt;Set&lt;/code&gt; 暗黙的に変換する &lt;code&gt;asScala&lt;/code&gt; メソッドを追加します。</target>
        </trans-unit>
        <trans-unit id="4f5a8ef59509743c06f9d7ecfd148eda5c52f556" translate="yes" xml:space="preserve">
          <source>Adds an element at the beginning of this list.</source>
          <target state="translated">このリストの先頭に要素を追加します。</target>
        </trans-unit>
        <trans-unit id="2dcbe9273c7bd14d301537f49cf465daaf4290b4" translate="yes" xml:space="preserve">
          <source>Adds chaining methods &lt;code&gt;tap&lt;/code&gt; and &lt;code&gt;pipe&lt;/code&gt; to every type.</source>
          <target state="translated">チェーンメソッドの &lt;code&gt;tap&lt;/code&gt; と &lt;code&gt;pipe&lt;/code&gt; をすべてのタイプに追加します。</target>
        </trans-unit>
        <trans-unit id="8c6fdc5e74bce50a7711de5ae2b092b1782ecb50" translate="yes" xml:space="preserve">
          <source>Adds chaining methods &lt;code&gt;tap&lt;/code&gt; and &lt;code&gt;pipe&lt;/code&gt; to every type. See &lt;a href=&quot;chainingops&quot; id=&quot;scala.util.ChainingOps&quot; name=&quot;scala.util.ChainingOps&quot;&gt;ChainingOps&lt;/a&gt;.</source>
          <target state="translated">チェーンメソッドの &lt;code&gt;tap&lt;/code&gt; と &lt;code&gt;pipe&lt;/code&gt; をすべてのタイプに追加します。&lt;a href=&quot;chainingops&quot; id=&quot;scala.util.ChainingOps&quot; name=&quot;scala.util.ChainingOps&quot;&gt;ChainingOpsを&lt;/a&gt;参照してください。</target>
        </trans-unit>
        <trans-unit id="126389b506c9dbce74aab049665296df2ae69be9" translate="yes" xml:space="preserve">
          <source>Adds the elements of a given list in front of this list.</source>
          <target state="translated">与えられたリストの要素をこのリストの前に追加します。</target>
        </trans-unit>
        <trans-unit id="a07136f42b6c31e82e06e0035a308176f02c2ecd" translate="yes" xml:space="preserve">
          <source>Adds the elements of a given list in reverse order in front of this list. &lt;code&gt;xs reverse_::: ys&lt;/code&gt; is equivalent to &lt;code&gt;xs.reverse ::: ys&lt;/code&gt; but is more efficient.</source>
          <target state="translated">このリストの前に、指定されたリストの要素を逆順で追加します。 &lt;code&gt;xs reverse_::: ys&lt;/code&gt; は &lt;code&gt;xs.reverse ::: ys&lt;/code&gt; ::: ysと同等ですが、より効率的です。</target>
        </trans-unit>
        <trans-unit id="5209dc139a71844198e7d720cf6ea398253533de" translate="yes" xml:space="preserve">
          <source>After a call to &lt;code&gt;result&lt;/code&gt;, the behavior of all other methods is undefined save for &lt;code&gt;clear()&lt;/code&gt;. If &lt;code&gt;clear()&lt;/code&gt; is called, then the builder is reset and may be used to build another instance.</source>
          <target state="translated">&lt;code&gt;result&lt;/code&gt; の呼び出し後、他のすべてのメソッドの動作は、 &lt;code&gt;clear()&lt;/code&gt; の場合は未定義です。場合は &lt;code&gt;clear()&lt;/code&gt; 呼び出されると、その後、ビルダーはリセットされ、別のインスタンスを構築するために使用することができます。</target>
        </trans-unit>
        <trans-unit id="9ff6135e3ea47a695ffcf2fc5da875fbf15ae42b" translate="yes" xml:space="preserve">
          <source>After calling &lt;code&gt;result()&lt;/code&gt; the behavior of a Builder (which is not also a &lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;scala.collection.mutable.ReusableBuilder&lt;/a&gt;) is undefined. No further methods should be called. It is common for mutable collections to be their own non-reusable Builder, in which case &lt;code&gt;result()&lt;/code&gt; simply returns &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;result()&lt;/code&gt; を呼び出した後、ビルダー（&lt;a href=&quot;reusablebuilder&quot; id=&quot;scala.collection.mutable.ReusableBuilder&quot; name=&quot;scala.collection.mutable.ReusableBuilder&quot;&gt;scala.collection.mutable.ReusableBuilder&lt;/a&gt;でもない）の動作は未定義です。これ以上メソッドを呼び出す必要はありません。可変コレクションが独自の再利用できないビルダーであるのは一般的です。その場合、 &lt;code&gt;result()&lt;/code&gt; は単に &lt;code&gt;this&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e6e59908ab23320f11a1bc2bd87107152786cfbf" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;addAll&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;addAll&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="014b57e70e20f92c6ebb8b1c2715f5503c1367a1" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;addOne&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;addOne&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="b2230bb88d9e784d2647efc396f331130d13155b" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;appended&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;appended&lt;/code&gt; エイリアス</target>
        </trans-unit>
        <trans-unit id="c7d42d5cef1531c380533c411937e1a2cf333cdb" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;appendedAll&lt;/code&gt;</source>
          <target state="translated">エイリアス &lt;code&gt;appendedAll&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f6376beaa52d6406f9fce7a06c063734f510f3ad" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;concat&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;concat&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="7a493e170d3b52c56efaf02f6c5545fef68e65b2" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;diff&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;diff&lt;/code&gt; エイリアス</target>
        </trans-unit>
        <trans-unit id="ecf69d31e3a0ce16e4a07d468c31189fae63f65f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;excl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;excl&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="5a3f2bbbcc7da390ebf0cebeb2b622785419259e" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;incl&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;incl&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="eb939ac0745bfc110558e99b0dab91f38e23ea73" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;intersect&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;intersect&lt;/code&gt; エイリアス</target>
        </trans-unit>
        <trans-unit id="5acc92cc538fe97f19d67f1796f78c428cea6ba0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;prepend&lt;/code&gt;</source>
          <target state="translated">先頭に &lt;code&gt;prepend&lt;/code&gt; ためのエイリアス</target>
        </trans-unit>
        <trans-unit id="991ad3a370cb20716fad6cd869f7c0e187546be0" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;prependAll&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;prependAll&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="4cbbdce9287e8e540fcbaa51f7189351c1b583cb" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;prepended&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;prepended&lt;/code&gt; エイリアス</target>
        </trans-unit>
        <trans-unit id="247b440b5cedd58fdbb0e0252e37447e99dcabc5" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;prepended&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;prepended&lt;/code&gt; エイリアス。</target>
        </trans-unit>
        <trans-unit id="627b1bb5d781f9d11502dc9bf0179ecf5768dc5f" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;prependedAll&lt;/code&gt;</source>
          <target state="translated">エイリアス &lt;code&gt;prependedAll&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7bb3b89d401b1b573d45bd3521984ee27059d6ac" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;removed&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;removed&lt;/code&gt; エイリアス</target>
        </trans-unit>
        <trans-unit id="86def58f42bae0f6371dd3296a4a4475c8cae0be" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;removedAll&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;removedAll&lt;/code&gt; エイリアス</target>
        </trans-unit>
        <trans-unit id="316dbae1cd306db95f3145b20c928f57c37880d7" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;subtractAll&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;subtractAll&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="b4e39f183ef80ad36309595045b20cbb42417980" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;subtractOne&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;subtractOne&lt;/code&gt; のエイリアス</target>
        </trans-unit>
        <trans-unit id="b85668704f6f92ff137b1e680808296d4b064d6a" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;union&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;union&lt;/code&gt; エイリアス</target>
        </trans-unit>
        <trans-unit id="2036b557c55f891ca376935e27efb05d856904e9" translate="yes" xml:space="preserve">
          <source>Alias for &lt;code&gt;updated&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;updated&lt;/code&gt; エイリアス</target>
        </trans-unit>
        <trans-unit id="24fffb0e235df5d5e3965cef811417a8408f37eb" translate="yes" xml:space="preserve">
          <source>Alias for removedAll</source>
          <target state="translated">removeAll の別名</target>
        </trans-unit>
        <trans-unit id="3179ca15e35583ae7dc0504ea244cbb59b40a88a" translate="yes" xml:space="preserve">
          <source>All capturing groups, i.e., not including group(0).</source>
          <target state="translated">すべてのキャプチャグループ、すなわちグループ(0)を含まない。</target>
        </trans-unit>
        <trans-unit id="1be28cd98f10f7a38ad6e68700423e3aea685b04" translate="yes" xml:space="preserve">
          <source>All members of this object are deprecated.</source>
          <target state="translated">このオブジェクトのすべてのメンバは非推奨です。</target>
        </trans-unit>
        <trans-unit id="380feee1e69f65e71505e1f504f3ed0a4d57133d" translate="yes" xml:space="preserve">
          <source>All methods forward to &lt;span name=&quot;java.lang.Math&quot;&gt;java.lang.Math&lt;/span&gt; unless otherwise noted.</source>
          <target state="translated">特に断りのない限り、すべてのメソッドは&lt;span name=&quot;java.lang.Math&quot;&gt;java.lang.Mathに&lt;/span&gt;転送し&lt;span name=&quot;java.lang.Math&quot;&gt;ます&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="37f1c7c1c4e011d3ec430ed6c0995746a654521d" translate="yes" xml:space="preserve">
          <source>All regex metacharacters in the input match themselves literally in the output.</source>
          <target state="translated">入力に含まれるすべての正規表現のメタキャラクタは、出力では文字通りそれ自身にマッチします。</target>
        </trans-unit>
        <trans-unit id="0742c23f571d458d52e9181f0240ea0a8ac347f4" translate="yes" xml:space="preserve">
          <source>All values in an enumeration share a common, unique type defined as the &lt;code&gt;Value&lt;/code&gt; type member of the enumeration (&lt;code&gt;Value&lt;/code&gt; selected on the stable identifier path of the enumeration instance).</source>
          <target state="translated">列挙共有のすべての値共通として定義ユニークタイプ &lt;code&gt;Value&lt;/code&gt; 列挙の型部材（ &lt;code&gt;Value&lt;/code&gt; 、列挙インスタンスの安定した識別子経路上で選択しました）。</target>
        </trans-unit>
        <trans-unit id="173d15cb3c294568be2ac7bedfb33179a1643789" translate="yes" xml:space="preserve">
          <source>Allows destructuring tuples with the same syntax as constructing them.</source>
          <target state="translated">タプルを構築するのと同じ構文でタプルを破壊できるようにします。</target>
        </trans-unit>
        <trans-unit id="91d0a265d81ed1c09795425f639dcb91a12b5e3d" translate="yes" xml:space="preserve">
          <source>Allows for range queries to be performed on its keys, and implementations must guarantee that traversal happens in sorted order, according to the map's &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;scala.math.Ordering&lt;/a&gt;.</source>
          <target state="translated">キーに対して範囲クエリを実行できます。実装は、マップの&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;scala.math.Ordering&lt;/a&gt;に従って、ソートが行われた順序でトラバーサルが行われることを保証する必要があります。</target>
        </trans-unit>
        <trans-unit id="1515e9ab70226f1dee54c8455446d41dcab75d19" translate="yes" xml:space="preserve">
          <source>Allows use of a &lt;code&gt;merge&lt;/code&gt; method to extract values from Either instances regardless of whether they are Left or Right.</source>
          <target state="translated">&lt;code&gt;merge&lt;/code&gt; メソッドを使用して、LeftかRightかに関係なく、Eitherインスタンスから値を抽出できます。</target>
        </trans-unit>
        <trans-unit id="d7eba035c5c9057318a25b1eca6f9281e12a7dab" translate="yes" xml:space="preserve">
          <source>Also note that the static type determines which annotations are considered:</source>
          <target state="translated">また、静的型はどのアノテーションを考慮するかを決定することにも注意してください。</target>
        </trans-unit>
        <trans-unit id="9004b0df76d8e7d600899158435bb91ab3a7a2c4" translate="yes" xml:space="preserve">
          <source>Also, the original immutable array is not modified, so you will want to capture the result.</source>
          <target state="translated">また、元の不変配列は変更されないので、結果をキャプチャしたくなります。</target>
        </trans-unit>
        <trans-unit id="c4557c0f918b8c3f8729c770e128dbd678b438fa" translate="yes" xml:space="preserve">
          <source>Also, the original immutable queue is not modified, so you will want to capture the result.</source>
          <target state="translated">また、元の不変キューは変更されていないので、結果をキャプチャしたくなります。</target>
        </trans-unit>
        <trans-unit id="794dc27d85f57348a9afa576fc1f85c7f0e80690" translate="yes" xml:space="preserve">
          <source>Also, the original immutable sequence is not modified, so you will want to capture the result.</source>
          <target state="translated">また、元の不変シーケンスは変更されていないので、結果をキャプチャしたくなります。</target>
        </trans-unit>
        <trans-unit id="34724c09c07fe447d41e774237f9e6e7db5bce3c" translate="yes" xml:space="preserve">
          <source>Also, the original lazy list is not modified, so you will want to capture the result.</source>
          <target state="translated">また、元のレイジーリストは修正されていないので、結果をキャプチャしたくなります。</target>
        </trans-unit>
        <trans-unit id="37d4958464e7f4738bbe2e56316d75e01f42caa9" translate="yes" xml:space="preserve">
          <source>Also, the original list is not modified, so you will want to capture the result.</source>
          <target state="translated">また、元のリストは修正されていないので、結果をキャプチャしたくなります。</target>
        </trans-unit>
        <trans-unit id="23158abdb4be8214591cdbf95acbf9afa8fc608a" translate="yes" xml:space="preserve">
          <source>Also, the original sequence is not modified, so you will want to capture the result.</source>
          <target state="translated">また、元のシーケンスは変更されていないので、結果をキャプチャしたくなります。</target>
        </trans-unit>
        <trans-unit id="eecac4f39761d7b881206a2b6bd83962404f6bd2" translate="yes" xml:space="preserve">
          <source>Also, the original vector is not modified, so you will want to capture the result.</source>
          <target state="translated">また、元のベクトルが修正されていないので、結果をキャプチャしたくなります。</target>
        </trans-unit>
        <trans-unit id="6e4392b30a14e9ea3ee5a9c31a6920a822b61f8f" translate="yes" xml:space="preserve">
          <source>Also, the original view is not modified, so you will want to capture the result.</source>
          <target state="translated">また、元のビューは修正されていないので、結果をキャプチャしたくなります。</target>
        </trans-unit>
        <trans-unit id="2006de85d6333d44c40570eaec2e456d83074c81" translate="yes" xml:space="preserve">
          <source>Alternatively, the conversion methods have descriptive names and can be invoked explicitly.</source>
          <target state="translated">あるいは,変換メソッドは記述的な名前を持ち,明示的に呼び出すことができます。</target>
        </trans-unit>
        <trans-unit id="429daf8fa5b1e1e3c01cf953f8fbd62cfc914a5b" translate="yes" xml:space="preserve">
          <source>Although blocking is possible in order to await results (with a mandatory timeout duration):</source>
          <target state="translated">結果を待つためにブロックすることは可能ですが、(強制的なタイムアウト時間を伴う)</target>
        </trans-unit>
        <trans-unit id="99d4132a2b4975da4e805b7c56e9e974b3cebec8" translate="yes" xml:space="preserve">
          <source>Although the &lt;code&gt;MatchIterator&lt;/code&gt; returned by &lt;code&gt;findAllIn&lt;/code&gt; is used like any &lt;code&gt;Iterator&lt;/code&gt;, with alternating calls to &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;hasNext&lt;/code&gt; has the additional side effect of advancing the underlying matcher to the next unconsumed match. This effect is visible in the &lt;code&gt;MatchData&lt;/code&gt; representing the &quot;current match&quot;.</source>
          <target state="translated">が &lt;code&gt;MatchIterator&lt;/code&gt; は、によって返さ &lt;code&gt;findAllIn&lt;/code&gt; 任意ように使用される &lt;code&gt;Iterator&lt;/code&gt; の呼び出し交互に、 &lt;code&gt;hasNext&lt;/code&gt; および &lt;code&gt;next&lt;/code&gt; 、 &lt;code&gt;hasNext&lt;/code&gt; 次の未一致するように、基礎となる整合を進める追加の副作用を有します。この効果は、「現在の一致」を表す &lt;code&gt;MatchData&lt;/code&gt; に表示されます。</target>
        </trans-unit>
        <trans-unit id="e7fb501eec2ac95928fa694a73bac65dfc418043" translate="yes" xml:space="preserve">
          <source>Although the use of null is discouraged, code written to use &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; must often interface with code that expects and returns nulls.</source>
          <target state="translated">nullの使用は推奨されませんが、&lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;を使用するように記述されたコードは、null を予期して返すコードとインターフェイスする必要があることがよくあります。</target>
        </trans-unit>
        <trans-unit id="c629e60448be510751735b5d0cb79cf23a3ee6c5" translate="yes" xml:space="preserve">
          <source>Although this method is blocking, the internal use of blocking ensures that the underlying &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt; is given an opportunity to properly manage the blocking.</source>
          <target state="translated">このメソッドはブロッキングですが、ブロッキングを内部で使用することにより、基盤となる&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;にブロッキングを適切に管理する機会が与えられます。</target>
        </trans-unit>
        <trans-unit id="c48e07ed739b94707bb8a8d8972220b2388f14f5" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; of the first matching string in the text.</source>
          <target state="translated">テキスト内で最初に一致する文字列の&lt;a href=&quot;../../option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="e74128ab886407e24d5c752447b6bbb4f8f2eb0a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt; that is also a Java &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html&quot;&gt;Executor&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;また、Javaで&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/Executor.html&quot;&gt;執行&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="687fdc17e1790a75a9ae015012bf2d7be4870b8c" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt; that is also a Java &lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;ExecutorService&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;executioncontext&quot; id=&quot;scala.concurrent.ExecutionContext&quot; name=&quot;scala.concurrent.ExecutionContext&quot;&gt;ExecutionContext&lt;/a&gt;また、Javaである&lt;a href=&quot;http://docs.oracle.com/javase/8/docs/api/java/util/concurrent/ExecutorService.html&quot;&gt;ExecutorServiceの&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="bd53e5b68a94b31fda31cb5ea24cfee8676c6c12" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;http://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;equivalence relation&lt;/a&gt; is a binary relation on a type. This relation is exposed as the &lt;code&gt;equiv&lt;/code&gt; method of the &lt;code&gt;Equiv&lt;/code&gt; trait. The relation must be:</source>
          <target state="translated">&lt;a href=&quot;http://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;同値関係は、&lt;/a&gt;タイプの二項関係です。この関係は、 &lt;code&gt;Equiv&lt;/code&gt; トレイトの &lt;code&gt;equiv&lt;/code&gt; メソッドとして公開されています。関係は次のとおりでなければなりません：</target>
        </trans-unit>
        <trans-unit id="822bc17a82830f3be9d916bb3df0ac6adb683664" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AnyRefMap&lt;/code&gt; can typically contain half as many elements as its buffer size before it requires resizing.</source>
          <target state="translated">&lt;code&gt;AnyRefMap&lt;/code&gt; はそれがリサイズする必要が前に、典型的には、そのバッファサイズなど、多くの要素の半分を含めることができます。</target>
        </trans-unit>
        <trans-unit id="8aa68d54a8d404d88e21e7abd78d07f8271c42e0" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Appendable&lt;/code&gt; such as &lt;code&gt;StringBuilder&lt;/code&gt; or &lt;code&gt;StringBuffer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringBuilder&lt;/code&gt; や &lt;code&gt;StringBuffer&lt;/code&gt; などの &lt;code&gt;Appendable&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="6a94df08b6feffbc7811ef6f2610304239178ca1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Appendable&lt;/code&gt; which will receive the process normal output.</source>
          <target state="translated">アン &lt;code&gt;Appendable&lt;/code&gt; プロセスの通常の出力を受け取ることになります。</target>
        </trans-unit>
        <trans-unit id="367e441f778834053277d0da77a5280c9e1f8c70" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExecutionContext&lt;/code&gt; can execute program logic asynchronously, typically but not necessarily on a thread pool.</source>
          <target state="translated">アン &lt;code&gt;ExecutionContext&lt;/code&gt; スレッドプールに非同期で、通常は必ずしも必要ではないが、プログラムロジックを実行することができます。</target>
        </trans-unit>
        <trans-unit id="0fe4a6cea00b345dd5866ad62203c8b2e3ef1a9c" translate="yes" xml:space="preserve">
          <source>An Accumulator consisting of elements &lt;code&gt;f(0), ..., f(n -1)&lt;/code&gt;</source>
          <target state="translated">要素 &lt;code&gt;f(0), ..., f(n -1)&lt;/code&gt; 構成されるアキュムレータ</target>
        </trans-unit>
        <trans-unit id="f35dc6ab751b144dfbe68e2c009183fb0a07abdd" translate="yes" xml:space="preserve">
          <source>An Accumulator consisting of elements &lt;code&gt;f(i1, i2)&lt;/code&gt; for &lt;code&gt;0 &amp;lt;= i1 &amp;lt; n1&lt;/code&gt; and &lt;code&gt;0 &amp;lt;= i2 &amp;lt; n2&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;0 &amp;lt;= i1 &amp;lt; n1&lt;/code&gt; および &lt;code&gt;0 &amp;lt;= i2 &amp;lt; n2&lt;/code&gt; の要素 &lt;code&gt;f(i1, i2)&lt;/code&gt; で構成されるアキュムレータ。</target>
        </trans-unit>
        <trans-unit id="c08951f469f0aa0c4f8923aab3262605c6f79561" translate="yes" xml:space="preserve">
          <source>An Accumulator consisting of elements &lt;code&gt;f(i1, i2, i3)&lt;/code&gt; for &lt;code&gt;0 &amp;lt;= i1 &amp;lt; n1&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= i2 &amp;lt; n2&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= i3 &amp;lt; n3&lt;/code&gt;.</source>
          <target state="translated">元素からなるANアキュムレータ &lt;code&gt;f(i1, i2, i3)&lt;/code&gt; のために &lt;code&gt;0 &amp;lt;= i1 &amp;lt; n1&lt;/code&gt; 、 &lt;code&gt;0 &amp;lt;= i2 &amp;lt; n2&lt;/code&gt; 、及び &lt;code&gt;0 &amp;lt;= i3 &amp;lt; n3&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="7b0bbf76a4c7133b90ab21ae6b1cb74a977738bd" translate="yes" xml:space="preserve">
          <source>An Accumulator consisting of elements &lt;code&gt;f(i1, i2, i3, i4)&lt;/code&gt; for &lt;code&gt;0 &amp;lt;= i1 &amp;lt; n1&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= i2 &amp;lt; n2&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= i3 &amp;lt; n3&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= i4 &amp;lt; n4&lt;/code&gt;.</source>
          <target state="translated">元素からなるANアキュムレータ &lt;code&gt;f(i1, i2, i3, i4)&lt;/code&gt; のために &lt;code&gt;0 &amp;lt;= i1 &amp;lt; n1&lt;/code&gt; 、 &lt;code&gt;0 &amp;lt;= i2 &amp;lt; n2&lt;/code&gt; 、 &lt;code&gt;0 &amp;lt;= i3 &amp;lt; n3&lt;/code&gt; 、及び &lt;code&gt;0 &amp;lt;= i4 &amp;lt; n4&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57eef83a04c2ce467db54680c1cfda74a512e2ff" translate="yes" xml:space="preserve">
          <source>An Accumulator consisting of elements &lt;code&gt;f(i1, i2, i3, i4, i5)&lt;/code&gt; for &lt;code&gt;0 &amp;lt;= i1 &amp;lt; n1&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= i2 &amp;lt; n2&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= i3 &amp;lt; n3&lt;/code&gt;, &lt;code&gt;0 &amp;lt;= i4 &amp;lt; n4&lt;/code&gt;, and &lt;code&gt;0 &amp;lt;= i5 &amp;lt; n5&lt;/code&gt;.</source>
          <target state="translated">元素からなるANアキュムレータ &lt;code&gt;f(i1, i2, i3, i4, i5)&lt;/code&gt; のために &lt;code&gt;0 &amp;lt;= i1 &amp;lt; n1&lt;/code&gt; 、 &lt;code&gt;0 &amp;lt;= i2 &amp;lt; n2&lt;/code&gt; 、 &lt;code&gt;0 &amp;lt;= i3 &amp;lt; n3&lt;/code&gt; 、 &lt;code&gt;0 &amp;lt;= i4 &amp;lt; n4&lt;/code&gt; 、及び &lt;code&gt;0 &amp;lt;= i5 &amp;lt; n5&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="95b14c11759c700d570280b6bf4f5ac76f845555" translate="yes" xml:space="preserve">
          <source>An Accumulator for arbitrary element types, see &lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;Accumulator&lt;/a&gt;.</source>
          <target state="translated">任意の要素タイプの&lt;a href=&quot;accumulator&quot; id=&quot;scala.jdk.Accumulator&quot; name=&quot;scala.jdk.Accumulator&quot;&gt;アキュムレータ&lt;/a&gt;。アキュムレータを参照してください。</target>
        </trans-unit>
        <trans-unit id="fefbaf0a0fe14ff60f83cd31b4b7cfc5aba5bf9d" translate="yes" xml:space="preserve">
          <source>An Accumulator that contains the results of &lt;code&gt;n1 x n2 x n3 x n4 x n5&lt;/code&gt; evaluations of &lt;code&gt;elem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;elem&lt;/code&gt; の &lt;code&gt;n1 x n2 x n3 x n4 x n5&lt;/code&gt; 評価の結果を含むアキュムレータ。</target>
        </trans-unit>
        <trans-unit id="3e44f602ad08f90ee841df47ecba56db501aa7d4" translate="yes" xml:space="preserve">
          <source>An Accumulator that contains the results of &lt;code&gt;n1 x n2 x n3 x n4&lt;/code&gt; evaluations of &lt;code&gt;elem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;elem&lt;/code&gt; の &lt;code&gt;n1 x n2 x n3 x n4&lt;/code&gt; 評価の結果を含むアキュムレータ。</target>
        </trans-unit>
        <trans-unit id="6d0103392ae565bf92682d7bd22dd0d5d67dc4f4" translate="yes" xml:space="preserve">
          <source>An Accumulator that contains the results of &lt;code&gt;n1 x n2 x n3&lt;/code&gt; evaluations of &lt;code&gt;elem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;elem&lt;/code&gt; の &lt;code&gt;n1 x n2 x n3&lt;/code&gt; 評価の結果を含むアキュムレータ。</target>
        </trans-unit>
        <trans-unit id="a7943f7101147fb34e9c471e44c43d74fec6c346" translate="yes" xml:space="preserve">
          <source>An Accumulator that contains the results of &lt;code&gt;n1 x n2&lt;/code&gt; evaluations of &lt;code&gt;elem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;elem&lt;/code&gt; の &lt;code&gt;n1 x n2&lt;/code&gt; 評価の結果を含むアキュムレータ。</target>
        </trans-unit>
        <trans-unit id="87b014d20c9fbc7545a977d7927e48caa39fed0a" translate="yes" xml:space="preserve">
          <source>An Accumulator that contains the results of &lt;code&gt;n&lt;/code&gt; evaluations of &lt;code&gt;elem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;elem&lt;/code&gt; の &lt;code&gt;n&lt;/code&gt; 回の評価の結果を含むアキュムレータ。</target>
        </trans-unit>
        <trans-unit id="6bd50e42fe7c2430129825a69ff3adca7ff0e490" translate="yes" xml:space="preserve">
          <source>An IterableFactory that uses ClassTag.Any as the evidence for every element type. This may or may not be sound depending on the use of the &lt;code&gt;ClassTag&lt;/code&gt; by the collection implementation.</source>
          <target state="translated">すべての要素タイプの証拠としてClassTag.Anyを使用するIterableFactory。これは、コレクション実装による &lt;code&gt;ClassTag&lt;/code&gt; の使用に応じて、適切な場合とそうでない場合があります。</target>
        </trans-unit>
        <trans-unit id="cbaf603cbf32eed366827304c965b7ce04ed7c49" translate="yes" xml:space="preserve">
          <source>An Iterator which traverses the distinct permutations of this array.</source>
          <target state="translated">この配列の異なる順列を横断するイテレータ。</target>
        </trans-unit>
        <trans-unit id="34220ef1f1f7605fbc1c2877b324f9f1ebce1067" translate="yes" xml:space="preserve">
          <source>An Iterator which traverses the distinct permutations of this immutable sequence.</source>
          <target state="translated">この不変シーケンスの異なる順列を横断する Iterator.</target>
        </trans-unit>
        <trans-unit id="82f4758913c2a79a3443f45d21863774d6962b6f" translate="yes" xml:space="preserve">
          <source>An Iterator which traverses the distinct permutations of this sequence.</source>
          <target state="translated">このシーケンスの異なる順列を横断するイテレータ.</target>
        </trans-unit>
        <trans-unit id="ed79cc5b52b09d70cfc5d0c6cfa5abb7f5d87998" translate="yes" xml:space="preserve">
          <source>An Iterator which traverses the possible n-element combinations of this array.</source>
          <target state="translated">この配列のn個の要素の組み合わせの可能性を調べるイテレータ.</target>
        </trans-unit>
        <trans-unit id="1b4b87ea8cbba3c1136545ffd26fc75600ff5531" translate="yes" xml:space="preserve">
          <source>An Iterator which traverses the possible n-element combinations of this immutable sequence.</source>
          <target state="translated">この不変シーケンスのn個の要素の組み合わせを探索するイテレータ.</target>
        </trans-unit>
        <trans-unit id="9bf978e1a3da4e904fbdeb4e4bedb5529aff53eb" translate="yes" xml:space="preserve">
          <source>An Iterator which traverses the possible n-element combinations of this sequence.</source>
          <target state="translated">このシーケンスのn個の要素の組み合わせを探索するイテレータ.</target>
        </trans-unit>
        <trans-unit id="ab0e8e1c15fa017e492e026e8aa1baa39f30e9a0" translate="yes" xml:space="preserve">
          <source>An Option factory which creates Some(x) if the argument is not null, and None if it is null.</source>
          <target state="translated">引数がNULLでない場合はSome(x)を作成し、NULLの場合はNoneを作成するOptionファクトリー。</target>
        </trans-unit>
        <trans-unit id="1e25106779e715c9264ce16c000990e6fb3d7b2d" translate="yes" xml:space="preserve">
          <source>An Ordering[T] is implemented by specifying compare(a:T, b:T), which decides how to order two instances a and b. Instances of Ordering[T] can be used by things like scala.util.Sorting to sort collections like Array[T].</source>
          <target state="translated">Ordering[T]は compare(a:T,b:T)を指定することで実装されており、2つのインスタンス a と b の順序を決定します。</target>
        </trans-unit>
        <trans-unit id="6fd18588e88d80d9c646abe7b02b4ce091a8c433" translate="yes" xml:space="preserve">
          <source>An accumulator can be appended efficiently to another</source>
          <target state="translated">アキュムレータは、効率的に別のアキュムレータに追加することができます。</target>
        </trans-unit>
        <trans-unit id="98168bc08bab4447e67d4904f463cda5a8b5ba9a" translate="yes" xml:space="preserve">
          <source>An accumulator can be appended efficiently to anotherThere are manually specialized Accumulators for &lt;code&gt;Int&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt; and &lt;code&gt;Double&lt;/code&gt; that don't box the elements</source>
          <target state="translated">アキュムレータは別のアキュムレータに効率的に追加できます要素をボックス化しない &lt;code&gt;Int&lt;/code&gt; 、 &lt;code&gt;Long&lt;/code&gt; 、 &lt;code&gt;Double&lt;/code&gt; の手動で特化したアキュムレータがあります</target>
        </trans-unit>
        <trans-unit id="0f43f68b02b62479fbe7f0338ded133e67c1cc9b" translate="yes" xml:space="preserve">
          <source>An alternative way of building and matching Streams using Stream.cons(hd, tl).</source>
          <target state="translated">Stream.cons(hd,tl)を使ったストリームの構築とマッチングの代替方法。</target>
        </trans-unit>
        <trans-unit id="d31b99df7a6bfc4707cb187d78d96cff0a36c842" translate="yes" xml:space="preserve">
          <source>An alternative way of building and matching lazy lists using LazyList.cons(hd, tl).</source>
          <target state="translated">LazyList.cons(hd,tl)を使った遅延リストの構築とマッチングの代替方法。</target>
        </trans-unit>
        <trans-unit id="e06e44a750ce42bd15605c7381ccc768ca29abb6" translate="yes" xml:space="preserve">
          <source>An annotation for methods that the optimizer should inline.</source>
          <target state="translated">オプティマイザがインライン化すべきメソッドのアノテーション。</target>
        </trans-unit>
        <trans-unit id="90d9bf5e3fe44b73f917163daac561e8905f7b9b" translate="yes" xml:space="preserve">
          <source>An annotation for methods that the optimizer should not inline.</source>
          <target state="translated">オプティマイザがインライン化してはいけないメソッドのためのアノテーション。</target>
        </trans-unit>
        <trans-unit id="1d4ccb51d5301db5e49c229e44d7db66e645c90b" translate="yes" xml:space="preserve">
          <source>An annotation for methods whose bodies may be excluded from compiler-generated bytecode.</source>
          <target state="translated">コンパイラが生成したバイトコードからボディを除外することができるメソッドのアノテーション。</target>
        </trans-unit>
        <trans-unit id="bd017f7b99a693e74193c03c3ab5c8e8a1e265f4" translate="yes" xml:space="preserve">
          <source>An annotation for type arguments for which one wants to suppress variance checking.</source>
          <target state="translated">分散チェックを抑制したい型引数のアノテーション。</target>
        </trans-unit>
        <trans-unit id="b15df2ef8a2380b7f228737167f6a8867a9acbb5" translate="yes" xml:space="preserve">
          <source>An annotation for values that are assumed to be stable even though their types are volatile.</source>
          <target state="translated">型が揮発性であっても安定していると仮定される値のアノテーション。</target>
        </trans-unit>
        <trans-unit id="7ddf4c3e00f5c7cd90874f337963045a10b85455" translate="yes" xml:space="preserve">
          <source>An annotation giving particulars for a language feature in object &lt;code&gt;scala.language&lt;/code&gt;.</source>
          <target state="translated">オブジェクト &lt;code&gt;scala.language&lt;/code&gt; の言語機能の詳細を示す注釈。</target>
        </trans-unit>
        <trans-unit id="853a26873b491256819a16505d9b6795da484c6d" translate="yes" xml:space="preserve">
          <source>An annotation that designates that a definition is deprecated. A deprecation warning is issued upon usage of the annotated definition.</source>
          <target state="translated">ある定義が非推奨であることを示す注釈。アノテーションされた定義を使用すると、非推奨の警告が発せられます。</target>
        </trans-unit>
        <trans-unit id="09a702bcd35c6a31517be619977f2d183c3838b2" translate="yes" xml:space="preserve">
          <source>An annotation that designates that an annottee should not be referred to after type checking (which includes macro expansion).</source>
          <target state="translated">型検査後にアノテ ィ を参照すべきでないことを指定するアノテーション(マクロ展開を含む)。</target>
        </trans-unit>
        <trans-unit id="4a0f643cc2ebdafda7db8a111f1d31314dc2538e" translate="yes" xml:space="preserve">
          <source>An annotation that designates that inheriting from a class is deprecated.</source>
          <target state="translated">クラスからの継承が非推奨であることを示す注釈。</target>
        </trans-unit>
        <trans-unit id="86357a59458e7363b37c216835f514b94dcc7656" translate="yes" xml:space="preserve">
          <source>An annotation that designates that overriding a member is deprecated.</source>
          <target state="translated">メンバをオーバーライドすることが推奨されていないことを示す注釈。</target>
        </trans-unit>
        <trans-unit id="9f67d4c2e64a330746336ede1fb21ace2c9f29bc" translate="yes" xml:space="preserve">
          <source>An annotation that designates that the name of a parameter is deprecated.</source>
          <target state="translated">パラメータ名が非推奨であることを示す注釈。</target>
        </trans-unit>
        <trans-unit id="fd6a17be583b7c701ad7c3733c0d06ccb4d96bc5" translate="yes" xml:space="preserve">
          <source>An annotation to be applied to a match expression. If present, the compiler will verify that the match has been compiled to a &lt;a href=&quot;http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-3.html#jvms-3.10&quot;&gt;tableswitch or lookupswitch&lt;/a&gt; and issue an error if it instead compiles into a series of conditional expressions. Example usage:</source>
          <target state="translated">一致式に適用される注釈。存在する場合、コンパイラーは一致が&lt;a href=&quot;http://docs.oracle.com/javase/specs/jvms/se7/html/jvms-3.html#jvms-3.10&quot;&gt;tableswitchまたはlookupswitchに&lt;/a&gt;コンパイルされていることを確認し、代わりに一連の条件式にコンパイルするとエラーを発行します。使用例：</target>
        </trans-unit>
        <trans-unit id="27ed67d351bfe0fe0986a9a81340dbfff05e8e5e" translate="yes" xml:space="preserve">
          <source>An annotation to designate that the annotated entity should not be considered for additional compiler checks. Specific applications include annotating the subject of a match expression to suppress exhaustiveness warnings, and annotating a type argument in a match case to suppress unchecked warnings.</source>
          <target state="translated">アノテーションされたエンティティがコンパイラの追加チェックのために考慮されないことを指定するためのアノテーション。具体的なアプリケーションとしては、マッチ式のサブジェクトをアノテーションして網羅性の警告を抑制したり、マッチケースの型引数をアノテーションして未チェックの警告を抑制したりすることなどがあります。</target>
        </trans-unit>
        <trans-unit id="2f580e8bc947cf7c33df2807209e4607bba29443" translate="yes" xml:space="preserve">
          <source>An array containing the first &lt;code&gt;n&lt;/code&gt; elements of this array.</source>
          <target state="translated">この配列の最初の &lt;code&gt;n&lt;/code&gt; 個の要素を含む配列。</target>
        </trans-unit>
        <trans-unit id="fcfd096d2b0d658bfc1af3625300d97ce3250cda" translate="yes" xml:space="preserve">
          <source>An array containing the last &lt;code&gt;n&lt;/code&gt; elements of this array.</source>
          <target state="translated">この配列の最後の &lt;code&gt;n&lt;/code&gt; 個の要素を含む配列。</target>
        </trans-unit>
        <trans-unit id="fa9a94fc137f8aa36ff60f2d6d9f05dbdd1785ba" translate="yes" xml:space="preserve">
          <source>An array obtained by concatenating rows of this array.</source>
          <target state="translated">この配列の行を連結して得られる配列。</target>
        </trans-unit>
        <trans-unit id="39ae11fd3cc6a9189b395516c76506a3a2a7fdaa" translate="yes" xml:space="preserve">
          <source>An array obtained by replacing elements of this arrays with rows the represent.</source>
          <target state="translated">この配列の要素を表現する行に置き換えて得られる配列。</target>
        </trans-unit>
        <trans-unit id="d855b53a6c3cd5a4cb96580f64efae6c1b101762" translate="yes" xml:space="preserve">
          <source>An array with the characters from this builder.</source>
          <target state="translated">このビルダの文字を含む配列。</target>
        </trans-unit>
        <trans-unit id="2084f1253d0ef8e391243da42a0f1ef62f865ea8" translate="yes" xml:space="preserve">
          <source>An empty collection</source>
          <target state="translated">空のコレクション</target>
        </trans-unit>
        <trans-unit id="b9386b76c50df80cb4a78ec8949567bceaead510" translate="yes" xml:space="preserve">
          <source>An empty set of values of type &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;V&lt;/code&gt; の空の値のセット。</target>
        </trans-unit>
        <trans-unit id="2480d3c653614a486f12a6a4b8248c62895c819d" translate="yes" xml:space="preserve">
          <source>An equivalence for &lt;code&gt;Double&lt;/code&gt;s which is consistent with IEEE specifications.</source>
          <target state="translated">IEEE仕様と一致する &lt;code&gt;Double&lt;/code&gt; の同値。</target>
        </trans-unit>
        <trans-unit id="01b33e8211cd57ed0b6c13324e116565d5bc9aba" translate="yes" xml:space="preserve">
          <source>An equivalence for &lt;code&gt;Double&lt;/code&gt;s which is reflexive (treats all &lt;code&gt;NaN&lt;/code&gt;s as equivalent), and treats &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; as not equivalent; it behaves the same as &lt;span name=&quot;java.lang.Double.compare()&quot;&gt;java.lang.Double.compare()&lt;/span&gt;.</source>
          <target state="translated">用等価 &lt;code&gt;Double&lt;/code&gt; 反射的であるS（扱いすべて &lt;code&gt;NaN&lt;/code&gt; の等価物として）、及び扱い &lt;code&gt;-0.0&lt;/code&gt; や &lt;code&gt;0.0&lt;/code&gt; などのない同等物; これは、&lt;span name=&quot;java.lang.Double.compare()&quot;&gt;java.lang.Double.compare（）&lt;/span&gt;と同じように動作し&lt;span name=&quot;java.lang.Double.compare()&quot;&gt;ます&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="02254c945c44c5bdf219f43a8128a6b7a60ff9c8" translate="yes" xml:space="preserve">
          <source>An equivalence for &lt;code&gt;Float&lt;/code&gt;s which is consistent with IEEE specifications.</source>
          <target state="translated">IEEE仕様と一致する &lt;code&gt;Float&lt;/code&gt; の同値。</target>
        </trans-unit>
        <trans-unit id="e58fc38e9b1e190d34fc07f106ebdb6d908f112e" translate="yes" xml:space="preserve">
          <source>An equivalence for &lt;code&gt;Float&lt;/code&gt;s which is reflexive (treats all &lt;code&gt;NaN&lt;/code&gt;s as equivalent), and treats &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;0.0&lt;/code&gt; as not equivalent; it behaves the same as &lt;span name=&quot;java.lang.Float.compare()&quot;&gt;java.lang.Float.compare()&lt;/span&gt;.</source>
          <target state="translated">用等価 &lt;code&gt;Float&lt;/code&gt; 反射的であるS（扱いすべて &lt;code&gt;NaN&lt;/code&gt; の等価物として）、及び扱い &lt;code&gt;-0.0&lt;/code&gt; や &lt;code&gt;0.0&lt;/code&gt; などのない同等物; これは、&lt;span name=&quot;java.lang.Float.compare()&quot;&gt;java.lang.Float.compare（）&lt;/span&gt;と同じように動作し&lt;span name=&quot;java.lang.Float.compare()&quot;&gt;ます&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="fea6cfe73a2bc38b961410354fb06c639f86f703" translate="yes" xml:space="preserve">
          <source>An exception that indicates an error during Scala reflection</source>
          <target state="translated">Scala の反射中にエラーが発生したことを示す例外</target>
        </trans-unit>
        <trans-unit id="3ebf76a3c38bee6ad1ed276b42947161e008d78a" translate="yes" xml:space="preserve">
          <source>An exception that is thrown if a string contains a backslash (&lt;code&gt;\&lt;/code&gt;) character that does not start a valid escape sequence.</source>
          <target state="translated">有効なエスケープシーケンスを開始しないバックスラッシュ（ &lt;code&gt;\&lt;/code&gt; ）文字が文字列に含まれている場合にスローされる例外。</target>
        </trans-unit>
        <trans-unit id="532fede5c0409d4d9e35ede6a467ff64828a52f6" translate="yes" xml:space="preserve">
          <source>An extractor for weak reference values</source>
          <target state="translated">弱い参照値のための抽出器</target>
        </trans-unit>
        <trans-unit id="dbec50c624caa20482dda1d4af7f17b7b466ae37" translate="yes" xml:space="preserve">
          <source>An extractor object for Matches, yielding the matched string.</source>
          <target state="translated">Matches用の抽出オブジェクトで、マッチした文字列を生成します。</target>
        </trans-unit>
        <trans-unit id="1d17dd2b9b2dbeab0c171de1f35f98d48f5cf017" translate="yes" xml:space="preserve">
          <source>An extractor object that yields the groups in the match. Using this extractor rather than the original &lt;code&gt;Regex&lt;/code&gt; ensures that the match is not recomputed.</source>
          <target state="translated">一致するグループを生成する抽出オブジェクト。元の &lt;code&gt;Regex&lt;/code&gt; はなくこの抽出を使用すると、一致が再計算されなくなります。</target>
        </trans-unit>
        <trans-unit id="80310285020c4df9a16cccff73c93a4e72500f76" translate="yes" xml:space="preserve">
          <source>An extractor used to head/tail deconstruct sequences.</source>
          <target state="translated">シーケンスのヘッド/テールデコンストラクトに使用される抽出器。</target>
        </trans-unit>
        <trans-unit id="bc5d753f8e0ede148d22d426cff501672c61d9a8" translate="yes" xml:space="preserve">
          <source>An extractor used to init/last deconstruct sequences.</source>
          <target state="translated">シーケンスの初期化/最後のデコンストラクトに使用される抽出器。</target>
        </trans-unit>
        <trans-unit id="f1a7683f3f6fbd33a3bbef8d955b6dc036652391" translate="yes" xml:space="preserve">
          <source>An immutable Map representing the current system environment.</source>
          <target state="translated">現在のシステム環境を表す不変マップ。</target>
        </trans-unit>
        <trans-unit id="382cb880ad3405e7b3c432ce7e4a6571c37e90fe" translate="yes" xml:space="preserve">
          <source>An immutable SortedMap whose values are stored in a red-black tree.</source>
          <target state="translated">赤黒の木に値が格納されている不変のSortedMap。</target>
        </trans-unit>
        <trans-unit id="2cfc9fd4f08bba0aca4c00040f683f02c388227b" translate="yes" xml:space="preserve">
          <source>An immutable array.</source>
          <target state="translated">不変の配列。</target>
        </trans-unit>
        <trans-unit id="4b4a098e4068a5b790aaea99a2fd780287489cba" translate="yes" xml:space="preserve">
          <source>An immutable map whose key-value pairs are sorted according to an &lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;scala.math.Ordering&lt;/a&gt; on the keys.</source>
          <target state="translated">キーと値のペアがキーの&lt;a href=&quot;../../math/ordering&quot; id=&quot;scala.math.Ordering&quot; name=&quot;scala.math.Ordering&quot;&gt;scala.math.Ordering&lt;/a&gt;に従ってソートされる不変のマップ。</target>
        </trans-unit>
        <trans-unit id="b74a8405b5d0222e7ccbde49cc5b580364ed0e79" translate="yes" xml:space="preserve">
          <source>An implementation of Austin Appleby's MurmurHash 3 algorithm (MurmurHash3_x86_32). This object contains methods that hash values of various types as well as means to construct &lt;code&gt;Hashing&lt;/code&gt; objects.</source>
          <target state="translated">オースティンアップルビーのMurmurHash 3アルゴリズム（MurmurHash3_x86_32）の実装。この目的は、様々なタイプならびに手段のハッシュ値を構築することメソッドが含ま &lt;code&gt;Hashing&lt;/code&gt; オブジェクトを。</target>
        </trans-unit>
        <trans-unit id="2b5eea87718a08561dd2976fdb1364227ff6da42" translate="yes" xml:space="preserve">
          <source>An implementation of a double-ended queue that internally uses a resizable circular buffer Append, prepend, removeFirst, removeLast and random-access (indexed-lookup and indexed-replacement) take amortized constant time. In general, removals and insertions at i-th index are O(min(i, n-i)) and thus insertions and removals from end/beginning are fast.</source>
          <target state="translated">内部的にリサイズ可能な円形バッファを使用するダブルエンドキューの実装 Append,prepend,removeFirst,removeLast およびランダムアクセス(インデックス化されたルックアップとインデックス化された再置換)は、償却された一定の時間を取ります。一般的に、i 番目のインデックスでの削除と挿入は O(min(i,n-i))であり、そのため、終了/開始からの挿入と削除は高速です。</target>
        </trans-unit>
        <trans-unit id="ece50c90e16089cfb78665bd368249d4898de508" translate="yes" xml:space="preserve">
          <source>An implementation of the &lt;code&gt;Buffer&lt;/code&gt; class using an array to represent the assembled sequence internally. Append, update and random access take constant time (amortized time). Prepends and removes are linear in the buffer size.</source>
          <target state="translated">配列を使用して、アセンブルされたシーケンスを内部的に表す &lt;code&gt;Buffer&lt;/code&gt; クラスの実装。追加、更新、ランダムアクセスには一定の時間（償却時間）がかかります。プリペンドと削除は、バッファサイズに比例します。</target>
        </trans-unit>
        <trans-unit id="ba5fd1447924ba2a72d3488d174f70289e51cf2c" translate="yes" xml:space="preserve">
          <source>An implicit &lt;code&gt;AccumulatorFactoryInfo&lt;/code&gt; connects primitive element types to the corresponding specialized &lt;span name=&quot;Accumulator&quot;&gt;Accumulator&lt;/span&gt; factory. This is used in the &lt;code&gt;stream.toScala&lt;/code&gt; extension methods to ensure collecting a primitive stream into a primitive accumulator does not box.</source>
          <target state="translated">暗黙的な &lt;code&gt;AccumulatorFactoryInfo&lt;/code&gt; は、プリミティブエレメントタイプを対応する特殊な&lt;span name=&quot;Accumulator&quot;&gt;Accumulator&lt;/span&gt;ファクトリに接続します。これは &lt;code&gt;stream.toScala&lt;/code&gt; 拡張メソッドで使用され、プリミティブストリームをプリミティブアキュムレータに収集してもボックス化されないようにします。</target>
        </trans-unit>
        <trans-unit id="b90c03b225d9fda2014bffed9b6cbc0a3b656818" translate="yes" xml:space="preserve">
          <source>An implicit &lt;code&gt;AccumulatorFactoryShape&lt;/code&gt; is used in Accumulator factory method to return specialized variants according to the element type.</source>
          <target state="translated">暗黙的な &lt;code&gt;AccumulatorFactoryShape&lt;/code&gt; はAccumulatorファクトリメソッドで使用され、要素タイプに応じて特殊なバリアントを返します。</target>
        </trans-unit>
        <trans-unit id="c4195294da5a65cacbdbb19ea1c51d09d6073401" translate="yes" xml:space="preserve">
          <source>An implicit &lt;code&gt;Releasable&lt;/code&gt; for &lt;span name=&quot;java.lang.AutoCloseable&quot;&gt;&lt;code&gt;AutoCloseable&lt;/code&gt;s&lt;/span&gt;.</source>
          <target state="translated">暗黙の &lt;code&gt;Releasable&lt;/code&gt; ため&lt;span name=&quot;java.lang.AutoCloseable&quot;&gt; &lt;code&gt;AutoCloseable&lt;/code&gt; 秒&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="c347f86527f211affd30678d4182750fc300e1d0" translate="yes" xml:space="preserve">
          <source>An implicit StepperShape instance is used in the IterableOnce.stepper to return a possibly specialized Stepper &lt;code&gt;S&lt;/code&gt; according to the element type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">暗黙的なStepperShapeインスタンスがIterableOnce.stepperで使用され、エレメントタイプ &lt;code&gt;T&lt;/code&gt; に応じて特殊化されている可能性のあるStepper &lt;code&gt;S&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="e147cad9f56875ffe33482cb26437f130a05f4a7" translate="yes" xml:space="preserve">
          <source>An implicit StreamShape instance connects element types with the corresponding specialized Stream and Stepper types. This is used in &lt;code&gt;asJavaStream&lt;/code&gt; extension methods to create generic or primitive streams according to the element type.</source>
          <target state="translated">暗黙的なStreamShapeインスタンスは、要素タイプを対応する特殊なStreamおよびStepperタイプに接続します。これは &lt;code&gt;asJavaStream&lt;/code&gt; 拡張メソッドで使用され、要素タイプに応じてジェネリックストリームまたはプリミティブストリームを作成します。</target>
        </trans-unit>
        <trans-unit id="6b459d0f263c6dd0c57604866708fbaaffc900a1" translate="yes" xml:space="preserve">
          <source>An implicit conversion is an implicit value of unary function type &lt;code&gt;A =&amp;gt; B&lt;/code&gt;, or an implicit method that has in its first parameter section a single, non-implicit parameter. Examples:</source>
          <target state="translated">暗黙的な変換は、単項関数タイプ &lt;code&gt;A =&amp;gt; B&lt;/code&gt; 暗黙的な値、または最初のパラメーターセクションに単一の非暗黙的なパラメーターを持つ暗黙的なメソッドです。例：</target>
        </trans-unit>
        <trans-unit id="8d1958130466a5fa51c36710b124e01881f6da37" translate="yes" xml:space="preserve">
          <source>An implicit of type &lt;code&gt;A =&amp;gt; A&lt;/code&gt; is available for all &lt;code&gt;A&lt;/code&gt; because it can always be implemented using the identity function. This also means that an implicit of type &lt;code&gt;A =&amp;gt; B&lt;/code&gt; is always available when &lt;code&gt;A &amp;lt;: B&lt;/code&gt;, because &lt;code&gt;(A =&amp;gt; A) &amp;lt;: (A =&amp;gt; B)&lt;/code&gt;.</source>
          <target state="translated">タイプ &lt;code&gt;A =&amp;gt; A&lt;/code&gt; インプリシットは、恒等関数を使用して常に実装できるため、すべての &lt;code&gt;A&lt;/code&gt; で使用できます。これは、 &lt;code&gt;(A =&amp;gt; A) &amp;lt;: (A =&amp;gt; B)&lt;/code&gt; であるため、 &lt;code&gt;A &amp;lt;: B&lt;/code&gt; 場合は常にタイプ &lt;code&gt;A =&amp;gt; B&lt;/code&gt; 暗黙的変数が使用可能であることも意味します。</target>
        </trans-unit>
        <trans-unit id="7847bd7ede3b2d9c1dd30aab375ffe72c8b73f54" translate="yes" xml:space="preserve">
          <source>An important property of &lt;code&gt;Try&lt;/code&gt; shown in the above example is its ability to</source>
          <target state="translated">上記の例で示した &lt;code&gt;Try&lt;/code&gt; の重要な特性は、</target>
        </trans-unit>
        <trans-unit id="c3fe65116f0d9a91b5f1f8a52bf406db111b0135" translate="yes" xml:space="preserve">
          <source>An in-place variant of scala.collection.mutable.ArrayBuffer#transpose</source>
          <target state="translated">scala.collection.mutable.ArrayBuffer#transposeのインプレースバリアントです。</target>
        </trans-unit>
        <trans-unit id="6cd6ebe6c4dfc6edfb3a43a6aa216f04247adcb8" translate="yes" xml:space="preserve">
          <source>An infinite LazyList that repeatedly applies a given function to a start value.</source>
          <target state="translated">与えられた関数を開始値に繰り返し適用する無限のLazyList。</target>
        </trans-unit>
        <trans-unit id="109a764a3f214093b6b2fa3f1a0e4a323c7d8540" translate="yes" xml:space="preserve">
          <source>An infinite Stream that repeatedly applies a given function to a start value.</source>
          <target state="translated">開始値に所定の関数を繰り返し適用する無限ストリーム。</target>
        </trans-unit>
        <trans-unit id="ef3398a27e2d7141f08096db7b8591d19304eae9" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;A &amp;lt;:&amp;lt; B&lt;/code&gt; witnesses that &lt;code&gt;A&lt;/code&gt; is a subtype of &lt;code&gt;B&lt;/code&gt;. Requiring an implicit argument of the type &lt;code&gt;A &amp;lt;:&amp;lt; B&lt;/code&gt; encodes the generalized constraint &lt;code&gt;A &amp;lt;: B&lt;/code&gt;.</source>
          <target state="translated">インスタンス &lt;code&gt;A &amp;lt;:&amp;lt; B&lt;/code&gt; ことを証人 &lt;code&gt;A&lt;/code&gt; は、のサブタイプである &lt;code&gt;B&lt;/code&gt; 。タイプ &lt;code&gt;A &amp;lt;:&amp;lt; B&lt;/code&gt; 暗黙の引数が必要な場合、一般化制約 &lt;code&gt;A &amp;lt;: B&lt;/code&gt; エンコードされます。</target>
        </trans-unit>
        <trans-unit id="de56ac624d46c6cec4f467dbb5dcc74f6f7bf716" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;A =:= B&lt;/code&gt; witnesses that the types &lt;code&gt;A&lt;/code&gt; and &lt;code&gt;B&lt;/code&gt; are equal. It also acts as a &lt;code&gt;A &amp;lt;:&amp;lt; B&lt;/code&gt;, but not a &lt;code&gt;B &amp;lt;:&amp;lt; A&lt;/code&gt; (directly) due to restrictions on subclassing.</source>
          <target state="translated">&lt;code&gt;A =:= B&lt;/code&gt; のインスタンスは、タイプ &lt;code&gt;A&lt;/code&gt; と &lt;code&gt;B&lt;/code&gt; が等しいことを示しています。また、サブクラス化の制限により、 &lt;code&gt;A &amp;lt;:&amp;lt; B&lt;/code&gt; として機能しますが、 &lt;code&gt;B &amp;lt;:&amp;lt; A&lt;/code&gt; はありません（直接）。</target>
        </trans-unit>
        <trans-unit id="9c30f673b7dc026aa7290e15a6a252d2da8e6d45" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Regex&lt;/code&gt; represents a compiled regular expression pattern. Since compilation is expensive, frequently used &lt;code&gt;Regex&lt;/code&gt;es should be constructed once, outside of loops and perhaps in a companion object.</source>
          <target state="translated">&lt;code&gt;Regex&lt;/code&gt; のインスタンスは、コンパイルされた正規表現パターンを表します。コンパイルはコストがかかるため、頻繁に使用される &lt;code&gt;Regex&lt;/code&gt; は、ループの外側で、おそらくコンパニオンオブジェクト内で、一度構築する必要があります。</target>
        </trans-unit>
        <trans-unit id="d08675ffb5a3b1e4b3e0e3b36f473501999d5376" translate="yes" xml:space="preserve">
          <source>An instance of &lt;code&gt;Releasable&lt;/code&gt; is needed in order to automatically manage a resource with &lt;a href=&quot;using%24&quot; id=&quot;scala.util.Using&quot; name=&quot;scala.util.Using&quot;&gt;&lt;code&gt;Using&lt;/code&gt;&lt;/a&gt;. An implicit instance is provided for all types extending &lt;span name=&quot;java.lang.AutoCloseable&quot;&gt;java.lang.AutoCloseable&lt;/span&gt;.</source>
          <target state="translated">&lt;a href=&quot;using%24&quot; id=&quot;scala.util.Using&quot; name=&quot;scala.util.Using&quot;&gt; &lt;code&gt;Using&lt;/code&gt; で&lt;/a&gt;リソースを自動的に管理するには、 &lt;code&gt;Releasable&lt;/code&gt; のインスタンスが必要です。暗黙的なインスタンスは、&lt;span name=&quot;java.lang.AutoCloseable&quot;&gt;java.lang.AutoCloseableを&lt;/span&gt;拡張するすべてのタイプに提供され&lt;span name=&quot;java.lang.AutoCloseable&quot;&gt;ます&lt;/span&gt;。&lt;span name=&quot;java.lang.AutoCloseable&quot;&gt;&lt;/span&gt;</target>
        </trans-unit>
        <trans-unit id="0cc9e8d16b89c330bbe45be0d16234a1842c1460" translate="yes" xml:space="preserve">
          <source>An integer that identifies this value at run-time. It must be unique amongst all values of the enumeration.</source>
          <target state="translated">実行時にこの値を識別する整数。列挙されたすべての値の中で一意でなければなりません。</target>
        </trans-unit>
        <trans-unit id="cecc232c211bf13c951e38e6a805225bdf2a4c8a" translate="yes" xml:space="preserve">
          <source>An interface containing operations for equality. The only method not already present in class &lt;code&gt;AnyRef&lt;/code&gt; is &lt;code&gt;canEqual&lt;/code&gt;.</source>
          <target state="translated">等価操作を含むインターフェース。 &lt;code&gt;AnyRef&lt;/code&gt; クラスにまだ存在しない唯一のメソッドは &lt;code&gt;canEqual&lt;/code&gt; です。</target>
        </trans-unit>
        <trans-unit id="4adfecbd017d75cbb8c2d90871e1c7b46dbd264e" translate="yes" xml:space="preserve">
          <source>An iterable representation of source data. It may be reset with the optional &lt;a href=&quot;#reset():scala.io.Source&quot; id=&quot;scala.io.Source#reset&quot; name=&quot;scala.io.Source#reset&quot;&gt;reset&lt;/a&gt; method.</source>
          <target state="translated">ソースデータの反復可能な表現。オプションの&lt;a href=&quot;#reset():scala.io.Source&quot; id=&quot;scala.io.Source#reset&quot; name=&quot;scala.io.Source#reset&quot;&gt;リセット&lt;/a&gt;方法でリセットできます。</target>
        </trans-unit>
        <trans-unit id="985569cd02ba59c375c248830dcfd86dd9df4554" translate="yes" xml:space="preserve">
          <source>An iterable representation of source data. It may be reset with the optional &lt;a href=&quot;source#reset():scala.io.Source&quot; id=&quot;scala.io.Source#reset&quot; name=&quot;scala.io.Source#reset&quot;&gt;reset&lt;/a&gt; method.</source>
          <target state="translated">ソースデータの反復可能な表現。オプションの&lt;a href=&quot;source#reset():scala.io.Source&quot; id=&quot;scala.io.Source#reset&quot; name=&quot;scala.io.Source#reset&quot;&gt;リセット&lt;/a&gt;方法でリセットできます。</target>
        </trans-unit>
        <trans-unit id="561e7fb47782dd6967b74e330c389a079bf0efa8" translate="yes" xml:space="preserve">
          <source>An iterator is mutable: most operations on it change its state. While it is often used to iterate through the elements of a collection, it can also be used without being backed by any collection (see constructors on the companion object).</source>
          <target state="translated">イテレータは突然変異可能です。イテレータはコレクションの要素を反復処理するためによく使われますが、コレクションに依存せずに使用することもできます (コンパニオンオブジェクトのコンストラクタを参照してください)。</target>
        </trans-unit>
        <trans-unit id="b547ecbe43eb19c0ad325fde05e9b89643c88249" translate="yes" xml:space="preserve">
          <source>An iterator over all subsets of this set of the given size. If the requested size is impossible, an empty iterator is returned.</source>
          <target state="translated">与えられたサイズのこの集合のすべてのサブセットに対するイテレータ。要求されたサイズが不可能な場合は、空のイテレータが返されます。</target>
        </trans-unit>
        <trans-unit id="4e0fde8af8f0ac511d0cc715d59af935f465d964" translate="yes" xml:space="preserve">
          <source>An iterator over all subsets of this set.</source>
          <target state="translated">この集合のすべての部分集合に対するイテレータ。</target>
        </trans-unit>
        <trans-unit id="22f3e80512bd4a776f8b64d703d44490e378c877" translate="yes" xml:space="preserve">
          <source>An iterator over all the elements of this product.</source>
          <target state="translated">この製品のすべての要素に対するイテレータ。</target>
        </trans-unit>
        <trans-unit id="47f18c160f2f4dc5f0213687267a7de840d35e16" translate="yes" xml:space="preserve">
          <source>An iterator over the elements of this map. Use of this iterator follows the same contract for concurrent modification as the foreach method.</source>
          <target state="translated">このマップの要素に対するイテレータ。このイテレータの使用は、foreach メソッドと同じ同時修正の契約に従います。</target>
        </trans-unit>
        <trans-unit id="52e9cc5f4dfd0a10ea00a610912b7ea4cf1c521f" translate="yes" xml:space="preserve">
          <source>An iterator over the names of all the elements of this product.</source>
          <target state="translated">この製品のすべての要素の名前の上のイテレータ。</target>
        </trans-unit>
        <trans-unit id="2096b157d3a2f15c2a318726d531c86194f18878" translate="yes" xml:space="preserve">
          <source>An iterator producing &lt;code&gt;Seq[B]&lt;/code&gt;s of size &lt;code&gt;size&lt;/code&gt;, except the last element (which may be the only element) will be truncated if there are fewer than &lt;code&gt;size&lt;/code&gt; elements remaining to be grouped. This behavior can be configured.</source>
          <target state="translated">グループ化されていない &lt;code&gt;size&lt;/code&gt; 要素が残っている場合、最後の要素（唯一の要素である可能性がある）を除いて、サイズが &lt;code&gt;size&lt;/code&gt; の &lt;code&gt;Seq[B]&lt;/code&gt; 生成する反復子は切り捨てられます。この動作は設定できます。</target>
        </trans-unit>
        <trans-unit id="deb46a23a62e74e91552aac859c56d1a88f52b6b" translate="yes" xml:space="preserve">
          <source>An iterator producing arrays of size &lt;code&gt;size&lt;/code&gt;, except the last element (which may be the only element) will be truncated if there are fewer than &lt;code&gt;size&lt;/code&gt; elements remaining to be grouped.</source>
          <target state="translated">グループ化する要素の &lt;code&gt;size&lt;/code&gt; が残り少ない場合、最後の要素（唯一の要素である場合があります）を除いて、サイズが &lt;code&gt;size&lt;/code&gt; の配列を生成する反復子は切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="f9a2aace84551c45c792f49ee4c058849a9287b9" translate="yes" xml:space="preserve">
          <source>An iterator producing arrays of size &lt;code&gt;size&lt;/code&gt;, except the last will be less than size &lt;code&gt;size&lt;/code&gt; if the elements don't divide evenly.</source>
          <target state="translated">サイズが &lt;code&gt;size&lt;/code&gt; の配列を生成するイテレータ。ただし、要素が均等に分割されない場合、最後のサイズは &lt;code&gt;size&lt;/code&gt; よりも小さくなります。</target>
        </trans-unit>
        <trans-unit id="3a14cbf0851b87735f2986406d6bad60d6c22ba6" translate="yes" xml:space="preserve">
          <source>An iterator producing equally spaced values in some integer interval.</source>
          <target state="translated">ある整数区間で等間隔の値を生成するイテレータ.</target>
        </trans-unit>
        <trans-unit id="d9f5382ce7e7fe9c584d6d38acdb9c6775641642" translate="yes" xml:space="preserve">
          <source>An iterator producing immutable sequences of size &lt;code&gt;size&lt;/code&gt;, except the last element (which may be the only element) will be truncated if there are fewer than &lt;code&gt;size&lt;/code&gt; elements remaining to be grouped.</source>
          <target state="translated">グループ化する &lt;code&gt;size&lt;/code&gt; 要素が残っている場合、最後の要素（唯一の要素である可能性があります）を除いて、サイズ &lt;code&gt;size&lt;/code&gt; の不変シーケンスを生成する反復子は切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="f0d514bf5ae920179cb407f461d9aaa74f5afefa" translate="yes" xml:space="preserve">
          <source>An iterator producing immutable sequences of size &lt;code&gt;size&lt;/code&gt;, except the last will be less than size &lt;code&gt;size&lt;/code&gt; if the elements don't divide evenly.</source>
          <target state="translated">サイズが &lt;code&gt;size&lt;/code&gt; の不変のシーケンスを生成するイテレータ。ただし、要素が均等に分割されない場合、最後のサイズは &lt;code&gt;size&lt;/code&gt; よりも小さくなります。</target>
        </trans-unit>
        <trans-unit id="51b50799a92b1017ed72de071ddba10b38908c43" translate="yes" xml:space="preserve">
          <source>An iterator producing iterable collections of size &lt;code&gt;size&lt;/code&gt;, except the last element (which may be the only element) will be truncated if there are fewer than &lt;code&gt;size&lt;/code&gt; elements remaining to be grouped.</source>
          <target state="translated">サイズが &lt;code&gt;size&lt;/code&gt; 未満の要素がグループ化 &lt;code&gt;size&lt;/code&gt; れていない場合、最後の要素（唯一の要素である可能性があります）を除く、サイズがsizeの反復可能なコレクションを生成する反復子は切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="cf8be4bb3ac064c43a671f59ce32a9b532ba576b" translate="yes" xml:space="preserve">
          <source>An iterator producing iterable collections of size &lt;code&gt;size&lt;/code&gt;, except the last will be less than size &lt;code&gt;size&lt;/code&gt; if the elements don't divide evenly.</source>
          <target state="translated">サイズの反復可能なコレクションを生産するイテレータ &lt;code&gt;size&lt;/code&gt; 最後を除いては、あまりの大きさよりもなります &lt;code&gt;size&lt;/code&gt; の要素が均等に分割しない場合。</target>
        </trans-unit>
        <trans-unit id="92efd6ea40ef0837bb956228be0c9023bcb564d7" translate="yes" xml:space="preserve">
          <source>An iterator producing lazy lists of size &lt;code&gt;size&lt;/code&gt;, except the last element (which may be the only element) will be truncated if there are fewer than &lt;code&gt;size&lt;/code&gt; elements remaining to be grouped.</source>
          <target state="translated">サイズが &lt;code&gt;size&lt;/code&gt; 未満の要素がグループ化 &lt;code&gt;size&lt;/code&gt; れていない場合、最後の要素（唯一の要素である可能性があります）を除く、サイズがsizeの遅延リストを生成するイテレータは切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="a424ed6529476eeefb7cdf42fa30fed2e2436683" translate="yes" xml:space="preserve">
          <source>An iterator producing lazy lists of size &lt;code&gt;size&lt;/code&gt;, except the last will be less than size &lt;code&gt;size&lt;/code&gt; if the elements don't divide evenly.</source>
          <target state="translated">サイズが &lt;code&gt;size&lt;/code&gt; のレイジーリストを生成するイテレータ。ただし、要素が均等に分割されない場合、最後のサイズは &lt;code&gt;size&lt;/code&gt; よりも小さくなります。</target>
        </trans-unit>
        <trans-unit id="f34e88cb47a977cf1f401dc022916be31da232f0" translate="yes" xml:space="preserve">
          <source>An iterator producing ranges of size &lt;code&gt;size&lt;/code&gt;, except the last will be less than size &lt;code&gt;size&lt;/code&gt; if the elements don't divide evenly.</source>
          <target state="translated">サイズが &lt;code&gt;size&lt;/code&gt; の範囲を生成するイテレータ。ただし、要素が均等に分割されない場合、最後のサイズは &lt;code&gt;size&lt;/code&gt; よりも小さくなります。</target>
        </trans-unit>
        <trans-unit id="09eac12006ba60c2028413b2446d827d4c8f9a0c" translate="yes" xml:space="preserve">
          <source>An iterator producing sequences of size &lt;code&gt;size&lt;/code&gt;, except the last element (which may be the only element) will be truncated if there are fewer than &lt;code&gt;size&lt;/code&gt; elements remaining to be grouped.</source>
          <target state="translated">グループ化する &lt;code&gt;size&lt;/code&gt; 要素が残っている場合、最後の要素（唯一の要素である場合があります）を除いて、サイズ &lt;code&gt;size&lt;/code&gt; のシーケンスを生成する反復子は切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="9df15f90ef21f26a10eb99daddc04786ba5da046" translate="yes" xml:space="preserve">
          <source>An iterator producing sequences of size &lt;code&gt;size&lt;/code&gt;, except the last will be less than size &lt;code&gt;size&lt;/code&gt; if the elements don't divide evenly.</source>
          <target state="translated">サイズが &lt;code&gt;size&lt;/code&gt; のシーケンスを生成するイテレータ。ただし、要素が均等に分割されない場合、最後のサイズは &lt;code&gt;size&lt;/code&gt; よりも小さくなります。</target>
        </trans-unit>
        <trans-unit id="8314d7d49161b25207437d0d98d3be3c9ea3fb2b" translate="yes" xml:space="preserve">
          <source>An iterator producing strings of size &lt;code&gt;size&lt;/code&gt;, except the last will be less than size &lt;code&gt;size&lt;/code&gt; if the elements don't divide evenly.</source>
          <target state="translated">サイズが &lt;code&gt;size&lt;/code&gt; の文字列を生成するイテレータ。ただし、要素が均等に分割されない場合、最後のサイズは &lt;code&gt;size&lt;/code&gt; よりも小さくなります。</target>
        </trans-unit>
        <trans-unit id="c7969df4225512839cdc6a9eae8ae354352823bf" translate="yes" xml:space="preserve">
          <source>An iterator producing views of size &lt;code&gt;size&lt;/code&gt;, except the last element (which may be the only element) will be truncated if there are fewer than &lt;code&gt;size&lt;/code&gt; elements remaining to be grouped.</source>
          <target state="translated">グループ化されていない &lt;code&gt;size&lt;/code&gt; 要素が残っている場合、最後の要素（唯一の要素である場合があります）を除いて、サイズ &lt;code&gt;size&lt;/code&gt; のビューを生成するイテレータは切り捨てられます。</target>
        </trans-unit>
        <trans-unit id="e2617882e49b31611ffc072bdd341510c5fae96a" translate="yes" xml:space="preserve">
          <source>An iterator producing views of size &lt;code&gt;size&lt;/code&gt;, except the last will be less than size &lt;code&gt;size&lt;/code&gt; if the elements don't divide evenly.</source>
          <target state="translated">サイズの景色生産イテレータ &lt;code&gt;size&lt;/code&gt; 最後を除いては、あまりの大きさよりもなります &lt;code&gt;size&lt;/code&gt; の要素が均等に分割しない場合。</target>
        </trans-unit>
        <trans-unit id="1e96e78331cc69efd5e7c6e9c546b76f4690e36f" translate="yes" xml:space="preserve">
          <source>An iterator that produces the results of &lt;code&gt;n&lt;/code&gt; evaluations of &lt;code&gt;elem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;elem&lt;/code&gt; の &lt;code&gt;n&lt;/code&gt; 回の評価の結果を生成する反復子。</target>
        </trans-unit>
        <trans-unit id="9acf65a8f55e341d60e34c003a326ec9bed4b8a3" translate="yes" xml:space="preserve">
          <source>An iterator that produces the values &lt;code&gt;f(0), ..., f(n -1)&lt;/code&gt;.</source>
          <target state="translated">値 &lt;code&gt;f(0), ..., f(n -1)&lt;/code&gt; を生成するイテレータ。</target>
        </trans-unit>
        <trans-unit id="f1bf825a5687d8d6efe57768000ca82d5f066868" translate="yes" xml:space="preserve">
          <source>An iterator yielding chars in reversed order.</source>
          <target state="translated">逆順に文字を生成するイテレータ。</target>
        </trans-unit>
        <trans-unit id="9fc79e7f960e2ea960b8696031a185234474d1a8" translate="yes" xml:space="preserve">
          <source>An iterator yielding elements in reversed order.</source>
          <target state="translated">逆順に要素を生成するイテレータ。</target>
        </trans-unit>
        <trans-unit id="839413c10f9bf50dc00f17ee5fd58b334abd3020" translate="yes" xml:space="preserve">
          <source>An object containing implicits which are not in the default scope.</source>
          <target state="translated">デフォルトのスコープにないインプリシットを含むオブジェクト。</target>
        </trans-unit>
        <trans-unit id="eec07e00903d19c22c6f9978d66453d6aa2b4b94" translate="yes" xml:space="preserve">
          <source>An object that can be used for the break control abstraction. Example usage:</source>
          <target state="translated">ブレークコントロールの抽象化に使用できるオブジェクト。使用例。</target>
        </trans-unit>
        <trans-unit id="33f509f7083f6ff64c97efa2339941780b0de4fc" translate="yes" xml:space="preserve">
          <source>An object that may eventually be completed with a result value of type &lt;code&gt;T&lt;/code&gt; which may be awaited using blocking methods.</source>
          <target state="translated">ブロッキングメソッドを使用して待機できる &lt;code&gt;T&lt;/code&gt; 型の結果値で最終的に完了する可能性があるオブジェクト。</target>
        </trans-unit>
        <trans-unit id="3fd32e5b0c9648c0586d02065f516a84b43b9644" translate="yes" xml:space="preserve">
          <source>An optimized representation for immutable sets of size 1</source>
          <target state="translated">サイズ1の不変集合に対する最適化された表現</target>
        </trans-unit>
        <trans-unit id="aa930da8bccafd859ba35446d37ceeb91b6f6848" translate="yes" xml:space="preserve">
          <source>An optimized representation for immutable sets of size 2</source>
          <target state="translated">サイズ2の不変集合に対する最適化された表現</target>
        </trans-unit>
        <trans-unit id="40608880e4e54f6b5bca030d8a071db7a4fcd7b9" translate="yes" xml:space="preserve">
          <source>An optimized representation for immutable sets of size 3</source>
          <target state="translated">サイズ3の不変集合に対する最適化された表現</target>
        </trans-unit>
        <trans-unit id="0a3070cfa3b18cdbc341db64ed27de883c3ec5cb" translate="yes" xml:space="preserve">
          <source>An optimized representation for immutable sets of size 4</source>
          <target state="translated">サイズ4の不変集合に対する最適化された表現</target>
        </trans-unit>
        <trans-unit id="2836bdf1533b80dd7767f35b62a5e36fdc36500d" translate="yes" xml:space="preserve">
          <source>An option value containing result of applying reduce operator &lt;code&gt;op&lt;/code&gt; between all the elements if the collection is nonempty, and &lt;code&gt;None&lt;/code&gt; otherwise.</source>
          <target state="translated">コレクションが空でない場合は、すべての要素間にreduce演算子 &lt;code&gt;op&lt;/code&gt; を適用した結果を含むオプション値。それ以外の場合は &lt;code&gt;None&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="4443cc179672517177881b8195516722410ab760" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;ProcessLogger&lt;/code&gt; to which the contents of the &lt;code&gt;InputStream&lt;/code&gt; will be sent.</source>
          <target state="translated">&lt;code&gt;InputStream&lt;/code&gt; のコンテンツが送信されるオプションの &lt;code&gt;ProcessLogger&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="57a443521399ed2b9ae405914226c88938a6ee18" translate="yes" xml:space="preserve">
          <source>An optional &lt;code&gt;ProcessLogger&lt;/code&gt; to which the output should be sent. If &lt;code&gt;None&lt;/code&gt;, output will be sent to stderr.</source>
          <target state="translated">出力の送信先となるオプションの &lt;code&gt;ProcessLogger&lt;/code&gt; 。 &lt;code&gt;None&lt;/code&gt; の場合、出力はstderrに送信されます。</target>
        </trans-unit>
        <trans-unit id="73c41a8a7d3827fe25885809e01cfe76b749a106" translate="yes" xml:space="preserve">
          <source>An ordering by id for values of this set</source>
          <target state="translated">このセットの値のidによる順序付け</target>
        </trans-unit>
        <trans-unit id="06e3c8269c1285be715a378ddafc9dc4f712f644" translate="yes" xml:space="preserve">
          <source>An ordering for &lt;code&gt;Double&lt;/code&gt;s which is a fully consistent total ordering, and treats &lt;code&gt;NaN&lt;/code&gt; as larger than all other &lt;code&gt;Double&lt;/code&gt; values; it behaves the same as &lt;span name=&quot;java.lang.Double.compare()&quot;&gt;java.lang.Double.compare()&lt;/span&gt;.</source>
          <target state="translated">&lt;code&gt;Double&lt;/code&gt; の順序付け。これは完全に一貫した順序であり、 &lt;code&gt;NaN&lt;/code&gt; を他のすべての &lt;code&gt;Double&lt;/code&gt; 値よりも大きいものとして扱います。これは、&lt;span name=&quot;java.lang.Double.compare()&quot;&gt;java.lang.Double.compare（）&lt;/span&gt;と同じように動作し&lt;span name=&quot;java.lang.Double.compare()&quot;&gt;ます&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="e11e3e65350b65c5dffc0d68dfe74b92e8c4cac8" translate="yes" xml:space="preserve">
          <source>An ordering for &lt;code&gt;Double&lt;/code&gt;s which is consistent with IEEE specifications whenever possible.</source>
          <target state="translated">可能な限りIEEE仕様と一致する &lt;code&gt;Double&lt;/code&gt; の順序。</target>
        </trans-unit>
        <trans-unit id="abcb359a4789ca44c32fa509bb29a17fc1b96787" translate="yes" xml:space="preserve">
          <source>An ordering for &lt;code&gt;Float&lt;/code&gt;s which is a fully consistent total ordering, and treats &lt;code&gt;NaN&lt;/code&gt; as larger than all other &lt;code&gt;Float&lt;/code&gt; values; it behaves the same as &lt;span name=&quot;java.lang.Float.compare()&quot;&gt;java.lang.Float.compare()&lt;/span&gt;.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; の順序付け。これは完全に一貫した順序付けであり、 &lt;code&gt;NaN&lt;/code&gt; を他のすべての &lt;code&gt;Float&lt;/code&gt; 値よりも大きいものとして扱います。これは、&lt;span name=&quot;java.lang.Float.compare()&quot;&gt;java.lang.Float.compare（）&lt;/span&gt;と同じように動作し&lt;span name=&quot;java.lang.Float.compare()&quot;&gt;ます&lt;/span&gt;。</target>
        </trans-unit>
        <trans-unit id="3bbfbce083b8c96e33b803185a4490e31431fd7e" translate="yes" xml:space="preserve">
          <source>An ordering for &lt;code&gt;Float&lt;/code&gt;s which is consistent with IEEE specifications whenever possible.</source>
          <target state="translated">&lt;code&gt;Float&lt;/code&gt; の順序は、可能な場合はいつでもIEEE仕様と一致しています。</target>
        </trans-unit>
        <trans-unit id="8f487665781f1728e697b5568d8c59681e196534" translate="yes" xml:space="preserve">
          <source>An ordering to be used for comparing elements.</source>
          <target state="translated">要素を比較する際に使用する順序。</target>
        </trans-unit>
        <trans-unit id="0738bc9821baeba7e24e823025a84c3168c8df47" translate="yes" xml:space="preserve">
          <source>An ordering which caches the value of its reverse.</source>
          <target state="translated">その逆の値をキャッシュする順序。</target>
        </trans-unit>
        <trans-unit id="96ba6d8931f5d10b823895dc736db686d67fab29" translate="yes" xml:space="preserve">
          <source>An undefined state is represented with &lt;code&gt;&quot;&amp;lt;not computed&amp;gt;&quot;&lt;/code&gt; and cycles are represented with &lt;code&gt;&quot;&amp;lt;cycle&amp;gt;&quot;&lt;/code&gt;.</source>
          <target state="translated">未定義の状態は &lt;code&gt;&quot;&amp;lt;not computed&amp;gt;&quot;&lt;/code&gt; で表され、サイクルは &lt;code&gt;&quot;&amp;lt;cycle&amp;gt;&quot;&lt;/code&gt; 表されます。</target>
        </trans-unit>
        <trans-unit id="67e49659d3bfad7cd6c499f8c62b1bdb99460764" translate="yes" xml:space="preserve">
          <source>An unenforceable, advisory only place to do some synchronization when mutating system properties.</source>
          <target state="translated">システムのプロパティを変異させる際に同期を行うための、強制力のない勧告的な場所です。</target>
        </trans-unit>
        <trans-unit id="68f29fec30bc07a07adbbd95673c596796bebbb4" translate="yes" xml:space="preserve">
          <source>Analogous to &lt;code&gt;zip&lt;/code&gt; except that the elements in each collection are not consumed until a strict operation is invoked on the returned &lt;code&gt;LazyZip2&lt;/code&gt; decorator.</source>
          <target state="translated">返された &lt;code&gt;LazyZip2&lt;/code&gt; デコレータで厳密な操作が呼び出されるまで各コレクションの要素が消費されないことを除いて、 &lt;code&gt;zip&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="19b8b30a3eff2e712230a760080c2cc25836e4f6" translate="yes" xml:space="preserve">
          <source>And the &lt;code&gt;s&lt;/code&gt; matcher can match an arbitrary pattern within the &lt;code&gt;${}&lt;/code&gt; block, for example:</source>
          <target state="translated">また、 &lt;code&gt;s&lt;/code&gt; マッチャーは &lt;code&gt;${}&lt;/code&gt; ブロック内の任意のパターンに一致できます。次に例を示します。</target>
        </trans-unit>
        <trans-unit id="0987857ad8081fdb3cd858ce07270cde79bcd339" translate="yes" xml:space="preserve">
          <source>Annotate type parameters on which code should be automatically specialized. For example:</source>
          <target state="translated">コードが自動的に特化されるべき型パラメータをアノテーションします。例えば</target>
        </trans-unit>
        <trans-unit id="faa2f1b395466011d3596431d87ba9f16f3e5346" translate="yes" xml:space="preserve">
          <source>Annotating the annotation class</source>
          <target state="translated">アノテーションクラスのアノテーション</target>
        </trans-unit>
        <trans-unit id="0685d5bedec9ec8b55303f77033700faccfa0417" translate="yes" xml:space="preserve">
          <source>Annotating the annotation type</source>
          <target state="translated">アノテーションタイプのアノテーション</target>
        </trans-unit>
        <trans-unit id="de3b78b64190965365f72568ffbe049d4ba32c22" translate="yes" xml:space="preserve">
          <source>Annotation</source>
          <target state="translated">Annotation</target>
        </trans-unit>
        <trans-unit id="0210eb1a3b41c3ab83f49c96b7cf8be63154891c" translate="yes" xml:space="preserve">
          <source>Annotation classes defined in Scala are not stored in classfiles in a Java-compatible manner and therefore not visible in Java reflection. In order to achieve this, the annotation has to be written in Java.</source>
          <target state="translated">Scalaで定義されているアノテーションクラスは、Javaと互換性のある方法でクラスファイルに保存されていないため、Javaのリフレクションでは見えません。これを実現するためには、アノテーションをJavaで記述する必要があります。</target>
        </trans-unit>
        <trans-unit id="0b52c61d117a980e9bd29b6173baa6ff8c3596a7" translate="yes" xml:space="preserve">
          <source>Annotation classes extending this trait only accept constant values as arguments.</source>
          <target state="translated">この特性を拡張した注釈クラスは、引数として定数値のみを受け入れます。</target>
        </trans-unit>
        <trans-unit id="1d605c94f6c38b6122f8a01995645f8245f21ba5" translate="yes" xml:space="preserve">
          <source>Annotation classes need to be written in Java in order to be stored in classfiles in a Java-compatible manner</source>
          <target state="translated">アノテーションクラスをJava互換の方法でクラスファイルに保存するためには、Javaで記述する必要があります。</target>
        </trans-unit>
        <trans-unit id="bd223d01f9c3cd25bc5a075dbf6fc52355a10277" translate="yes" xml:space="preserve">
          <source>Annotation for specifying the &lt;code&gt;serialVersionUID&lt;/code&gt; field of a (serializable) class.</source>
          <target state="translated">（シリアライズ可能）クラスの &lt;code&gt;serialVersionUID&lt;/code&gt; フィールドを指定するための注釈。</target>
        </trans-unit>
        <trans-unit id="3cc1e474abf2607b812b0f1aec0757e626d7141e" translate="yes" xml:space="preserve">
          <source>Annotation for specifying the exceptions thrown by a method. For example:</source>
          <target state="translated">メソッドがスローする例外を指定するためのアノテーション。例えば</target>
        </trans-unit>
        <trans-unit id="065678b1a64baae9f8e92e4964cd59626cbce0b5" translate="yes" xml:space="preserve">
          <source>Annotation scala.SerialVersionUID</source>
          <target state="translated">アノテーション scala.SerialVersionUID</target>
        </trans-unit>
        <trans-unit id="1fb1b99f35b63e74b3055e7bd28b8dd51281c98e" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.Annotation</source>
          <target state="translated">アノテーション scala.annotation.Annotation</target>
        </trans-unit>
        <trans-unit id="ee14e6731818013b033472a0f65a81de18fcd12c" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.compileTimeOnly</source>
          <target state="translated">アノテーション scala.annotation.compileTimeOnly</target>
        </trans-unit>
        <trans-unit id="a3d56b7f3121429350ac91b8e11045f5ed0fc5e0" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.elidable</source>
          <target state="translated">アノテーション scala.annotation.elidable</target>
        </trans-unit>
        <trans-unit id="7b9a086471fb056ccad72d3154f6e8640c9ec867" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.implicitAmbiguous</source>
          <target state="translated">アノテーション scala.annotation.implicitAmbiguous</target>
        </trans-unit>
        <trans-unit id="03353d7e505f87136ac2a8e803ac14c4f0a9907f" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.implicitNotFound</source>
          <target state="translated">アノテーション scala.annotation.implicitNotFound</target>
        </trans-unit>
        <trans-unit id="d48a69dd3d50d6a42ba25df5382b91a15a7a3b52" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.beanGetter</source>
          <target state="translated">アノテーション scala.annotation.meta.beanGetter</target>
        </trans-unit>
        <trans-unit id="20e8849363b7d043a3f5417111714e11ae25e3a4" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.beanSetter</source>
          <target state="translated">アノテーション scala.annotation.meta.beanSetter</target>
        </trans-unit>
        <trans-unit id="ac6dee9289dade0188932804890b9c401168cc52" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.companionClass</source>
          <target state="translated">アノテーション scala.annotation.meta.companionClass</target>
        </trans-unit>
        <trans-unit id="b6740701c022959192327fc5b5a5a5cc8bb70c7f" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.companionMethod</source>
          <target state="translated">アノテーション scala.annotation.meta.companionMethod</target>
        </trans-unit>
        <trans-unit id="22f6da3d31902fcef76e722fe013549c43a8fcc8" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.companionObject</source>
          <target state="translated">アノテーション scala.annotation.meta.companionObject</target>
        </trans-unit>
        <trans-unit id="1ad57bc38d2e24e7df1103a6f04138056bd4c481" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.field</source>
          <target state="translated">アノテーション scala.annotation.meta.field</target>
        </trans-unit>
        <trans-unit id="800ae4a0297cfb77ba0cab822eda8b661409e8a0" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.getter</source>
          <target state="translated">アノテーション scala.annotation.meta.getter</target>
        </trans-unit>
        <trans-unit id="909304685948c44aa911fcfaa471ab17015865f5" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.languageFeature</source>
          <target state="translated">アノテーション scala.annotation.meta.languageFeature</target>
        </trans-unit>
        <trans-unit id="760f8b50c8c55afb237e59e2a96b7c23358f3797" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.param</source>
          <target state="translated">アノテーション scala.annotation.meta.param</target>
        </trans-unit>
        <trans-unit id="fddbeb46f313f6bfb4c6640c1fe3e27d28be3e27" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.meta.setter</source>
          <target state="translated">アノテーション scala.annotation.meta.setter</target>
        </trans-unit>
        <trans-unit id="793b55fd397b028455ce570515253a0e48d4e480" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.showAsInfix</source>
          <target state="translated">アノテーション scala.annotation.showAsInfix</target>
        </trans-unit>
        <trans-unit id="db02699265697159036870d7a14454aa72734523" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.strictfp</source>
          <target state="translated">アノテーション scala.annotation.strictfp</target>
        </trans-unit>
        <trans-unit id="d2d589c376737f2bd68dd736d2fe90693941b075" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.switch</source>
          <target state="translated">アノテーション scala.annotation.switch</target>
        </trans-unit>
        <trans-unit id="52efbf1e7dc9dcd8f476afdb097d3f5b2e9d2143" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.tailrec</source>
          <target state="translated">アノテーション scala.annotation.tailrec</target>
        </trans-unit>
        <trans-unit id="23613309094105dd86d2a3e1f215a6a2d2c92468" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.unchecked.uncheckedStable</source>
          <target state="translated">アノテーション scala.annotation.unchecked.uncheckedStable</target>
        </trans-unit>
        <trans-unit id="a21ab8c0948effb2ef4bc877a757f14ddddb6262" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.unchecked.uncheckedVariance</source>
          <target state="translated">アノテーション scala.annotation.unchecked.uncheckedVariance</target>
        </trans-unit>
        <trans-unit id="21850e22db6c886da6e3ffd35684e7878899c8a9" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.unspecialized</source>
          <target state="translated">アノテーション scala.annotation.unspecialized</target>
        </trans-unit>
        <trans-unit id="87dba7465bf5ddde2cf51000812e39c9b88c0c8c" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.unused</source>
          <target state="translated">アノテーション scala.annotation.unused</target>
        </trans-unit>
        <trans-unit id="cdabfb0cc43f292d4b6eaccfb66281457348f314" translate="yes" xml:space="preserve">
          <source>Annotation scala.annotation.varargs</source>
          <target state="translated">アノテーション scala.annotation.varargs</target>
        </trans-unit>
        <trans-unit id="5103cb9bfbcc05cc022b5e954edbc80dc96cc90f" translate="yes" xml:space="preserve">
          <source>Annotation scala.beans.BeanProperty</source>
          <target state="translated">アノテーション scala.bean.BeanProperty</target>
        </trans-unit>
        <trans-unit id="d8adaa3af35540b378bd44d6dfd1cd798daa182c" translate="yes" xml:space="preserve">
          <source>Annotation scala.beans.BooleanBeanProperty</source>
          <target state="translated">アノテーション scala.bean.BooleanBeanProperty</target>
        </trans-unit>
        <trans-unit id="07f4ee96f0f226b2e4dfb21223fea320679f3bbf" translate="yes" xml:space="preserve">
          <source>Annotation scala.deprecated</source>
          <target state="translated">アノテーション scala.deprecated</target>
        </trans-unit>
        <trans-unit id="f2c934c24aa81ed755271d3ce94fc110c7e0b373" translate="yes" xml:space="preserve">
          <source>Annotation scala.deprecatedInheritance</source>
          <target state="translated">アノテーション scala.deprecatedInheritance</target>
        </trans-unit>
        <trans-unit id="66bf0e242772bec2caf9f1c252dcb18ab931f8f7" translate="yes" xml:space="preserve">
          <source>Annotation scala.deprecatedName</source>
          <target state="translated">アノテーション scala.deprecatedName</target>
        </trans-unit>
        <trans-unit id="677915385b6b0169513253a97e1dce9738ae0566" translate="yes" xml:space="preserve">
          <source>Annotation scala.deprecatedOverriding</source>
          <target state="translated">アノテーション scala.deprecatedOverriding</target>
        </trans-unit>
        <trans-unit id="2cfa9531627e93b3f70726f27fd182121b360d38" translate="yes" xml:space="preserve">
          <source>Annotation scala.inline</source>
          <target state="translated">アノテーション scala.inline</target>
        </trans-unit>
        <trans-unit id="8a654dbd97a710a1bc7dca68ba3a2eeaf86f2da4" translate="yes" xml:space="preserve">
          <source>Annotation scala.native</source>
          <target state="translated">アノテーション scala.native</target>
        </trans-unit>
        <trans-unit id="4955019910c81f1f2f78be529c2dbe84bd974db1" translate="yes" xml:space="preserve">
          <source>Annotation scala.noinline</source>
          <target state="translated">アノテーション scala.noinline</target>
        </trans-unit>
        <trans-unit id="67243f7bfd6bf9dfc11d0ddd869a48e44ff74b0a" translate="yes" xml:space="preserve">
          <source>Annotation scala.specialized</source>
          <target state="translated">アノテーション scala.specialized</target>
        </trans-unit>
        <trans-unit id="7607a949304dc84eb0df3f1f4422ed6ec3e9e769" translate="yes" xml:space="preserve">
          <source>Annotation scala.throws</source>
          <target state="translated">アノテーション scala.throws</target>
        </trans-unit>
        <trans-unit id="728cdf31f5892ce5883495a2bd6c6ccd7b33fe4a" translate="yes" xml:space="preserve">
          <source>Annotation scala.transient</source>
          <target state="translated">アノテーション scala.transient</target>
        </trans-unit>
        <trans-unit id="74877bc74c959936ffead803c10f4977b1d524be" translate="yes" xml:space="preserve">
          <source>Annotation scala.unchecked</source>
          <target state="translated">アノテーション scala.unchecked</target>
        </trans-unit>
        <trans-unit id="5935f50f775ae2f38fffa0045d93d510d8201581" translate="yes" xml:space="preserve">
          <source>Annotation scala.volatile</source>
          <target state="translated">アノテーション scala.volatile</target>
        </trans-unit>
        <trans-unit id="fa434de45a8db3eb8f7141123139302bd80e11f9" translate="yes" xml:space="preserve">
          <source>Annotation.scala</source>
          <target state="translated">Annotation.scala</target>
        </trans-unit>
        <trans-unit id="74dc68d72e7c6f05cb32f3c5f38a50a1624e1e2a" translate="yes" xml:space="preserve">
          <source>Annotations</source>
          <target state="translated">Annotations</target>
        </trans-unit>
        <trans-unit id="44a6197a4b92fbf05cf53d59e585c94870197b13" translate="yes" xml:space="preserve">
          <source>Annotations extending this class directly are not preserved in the classfile. To enable storing annotations in the classfile's Scala signature and make it available to Scala reflection and other tools, the annotation needs to inherit from &lt;a href=&quot;staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;scala.annotation.StaticAnnotation&lt;/a&gt;.</source>
          <target state="translated">このクラスを直接拡張する注釈は、クラスファイルに保存されません。クラスファイルのScalaシグネチャへの注釈の保存を有効にし、Scalaリフレクションおよびその他のツールで使用できるようにするには、注釈が&lt;a href=&quot;staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;scala.annotation.StaticAnnotation&lt;/a&gt;から継承される必要があります。</target>
        </trans-unit>
        <trans-unit id="c83b1f9f81cd5d68279d72adfeff07209174fcf9" translate="yes" xml:space="preserve">
          <source>Another usage for Nothing is the return type for methods which never return normally. One example is method error in &lt;a href=&quot;sys/index&quot; id=&quot;scala.sys&quot; name=&quot;scala.sys&quot;&gt;scala.sys&lt;/a&gt;, which always throws an exception.</source>
          <target state="translated">Nothingのもう1つの使用法は、通常は戻らないメソッドの戻りタイプです。1つの例は、常に例外をスローする&lt;a href=&quot;sys/index&quot; id=&quot;scala.sys&quot; name=&quot;scala.sys&quot;&gt;scala.sysの&lt;/a&gt;メソッドエラーです。</target>
        </trans-unit>
        <trans-unit id="3d86e5b5c6cb6f043ce63be3f9549dcc8e0976df" translate="yes" xml:space="preserve">
          <source>AnsiColor</source>
          <target state="translated">AnsiColor</target>
        </trans-unit>
        <trans-unit id="15a38ccaeb44840975181f1536b7257ee81eb005" translate="yes" xml:space="preserve">
          <source>AnsiColor$</source>
          <target state="translated">AnsiColor$</target>
        </trans-unit>
        <trans-unit id="ee523151eccfb30afdbfb5eaea320bdef81ee439" translate="yes" xml:space="preserve">
          <source>AnsiColor$.BLACK()</source>
          <target state="translated">AnsiColor$.BLACK()</target>
        </trans-unit>
        <trans-unit id="862f60611521684aeb2c592909cfd762e802e9cd" translate="yes" xml:space="preserve">
          <source>AnsiColor$.BLACK_B()</source>
          <target state="translated">AnsiColor$.BLACK_B()</target>
        </trans-unit>
        <trans-unit id="1fa33aa971429be9b509440982e3290084aaa8d4" translate="yes" xml:space="preserve">
          <source>AnsiColor$.BLINK()</source>
          <target state="translated">AnsiColor$.BLINK()</target>
        </trans-unit>
        <trans-unit id="247b99bfcc73034c671ee9f716dd210d16c234ed" translate="yes" xml:space="preserve">
          <source>AnsiColor$.BLUE()</source>
          <target state="translated">AnsiColor$.BLUE()</target>
        </trans-unit>
        <trans-unit id="6130145c78489738b4bfe440eafad6ada766cf18" translate="yes" xml:space="preserve">
          <source>AnsiColor$.BLUE_B()</source>
          <target state="translated">AnsiColor$.BLUE_B()</target>
        </trans-unit>
        <trans-unit id="f17319fe151ffdce49ed490b03f0b2853cb5d186" translate="yes" xml:space="preserve">
          <source>AnsiColor$.BOLD()</source>
          <target state="translated">AnsiColor$.BOLD()</target>
        </trans-unit>
        <trans-unit id="4b2158cfa8ab1410bbfbf6d9887dc6f24a791e51" translate="yes" xml:space="preserve">
          <source>AnsiColor$.CYAN()</source>
          <target state="translated">AnsiColor$.CYAN()</target>
        </trans-unit>
        <trans-unit id="5882b23dc406e4a6172bba2a5734510def2de4a5" translate="yes" xml:space="preserve">
          <source>AnsiColor$.CYAN_B()</source>
          <target state="translated">AnsiColor$.CYAN_B()</target>
        </trans-unit>
        <trans-unit id="0e584112416f27dba09f08850680a9936df6f4cf" translate="yes" xml:space="preserve">
          <source>AnsiColor$.GREEN()</source>
          <target state="translated">AnsiColor$.GREEN()</target>
        </trans-unit>
        <trans-unit id="36a67cd3c3ac0f510a2b3ec8b3a987aad28eab99" translate="yes" xml:space="preserve">
          <source>AnsiColor$.GREEN_B()</source>
          <target state="translated">AnsiColor$.GREEN_B()</target>
        </trans-unit>
        <trans-unit id="fcb1ce2ad2904ca69c3bbdc17396d05b061facf9" translate="yes" xml:space="preserve">
          <source>AnsiColor$.INVISIBLE()</source>
          <target state="translated">AnsiColor$.INVISIBLE()</target>
        </trans-unit>
        <trans-unit id="7b972ec634f7361ce33a4df23f83a9f9b1b8e4cb" translate="yes" xml:space="preserve">
          <source>AnsiColor$.MAGENTA()</source>
          <target state="translated">AnsiColor$.MAGENTA()</target>
        </trans-unit>
        <trans-unit id="e92646cfd99109e7bf7e675155c91b5e97003584" translate="yes" xml:space="preserve">
          <source>AnsiColor$.MAGENTA_B()</source>
          <target state="translated">AnsiColor$.MAGENTA_B()</target>
        </trans-unit>
        <trans-unit id="04422f4508a5c24556c96d6f963092c572b9d9d5" translate="yes" xml:space="preserve">
          <source>AnsiColor$.RED()</source>
          <target state="translated">AnsiColor$.RED()</target>
        </trans-unit>
        <trans-unit id="1dae3008a34f488cc23fa56f5f4f653f71319074" translate="yes" xml:space="preserve">
          <source>AnsiColor$.RED_B()</source>
          <target state="translated">AnsiColor$.RED_B()</target>
        </trans-unit>
        <trans-unit id="62e2b87e2892142282945b044f968495c8ad8b53" translate="yes" xml:space="preserve">
          <source>AnsiColor$.RESET()</source>
          <target state="translated">AnsiColor$.RESET()</target>
        </trans-unit>
        <trans-unit id="7847f75013b80885f289ff0beca093b0c83d8782" translate="yes" xml:space="preserve">
          <source>AnsiColor$.REVERSED()</source>
          <target state="translated">AnsiColor$.REVERSED()</target>
        </trans-unit>
        <trans-unit id="e71cf88c595ad7f6bb7ac728487e846415dfeb4d" translate="yes" xml:space="preserve">
          <source>AnsiColor$.UNDERLINED()</source>
          <target state="translated">AnsiColor$.UNDERLINED()</target>
        </trans-unit>
        <trans-unit id="e444aeefac26b6e62c6ad64334d3d25b32f08128" translate="yes" xml:space="preserve">
          <source>AnsiColor$.WHITE()</source>
          <target state="translated">AnsiColor$.WHITE()</target>
        </trans-unit>
        <trans-unit id="d5a7b0a5bc0bbf6e739b58ccf306036d88f4139b" translate="yes" xml:space="preserve">
          <source>AnsiColor$.WHITE_B()</source>
          <target state="translated">AnsiColor$.WHITE_B()</target>
        </trans-unit>
        <trans-unit id="68e6cb7d77c81797395b180a18948c39e73a4a29" translate="yes" xml:space="preserve">
          <source>AnsiColor$.YELLOW()</source>
          <target state="translated">AnsiColor$.YELLOW()</target>
        </trans-unit>
        <trans-unit id="1f0c0107fbc7e6eb130cca0e6b99840b55eb6fd3" translate="yes" xml:space="preserve">
          <source>AnsiColor$.YELLOW_B()</source>
          <target state="translated">AnsiColor$.YELLOW_B()</target>
        </trans-unit>
        <trans-unit id="e6b20bfc19311a95a28172cdc360eb2bdf50a0be" translate="yes" xml:space="preserve">
          <source>AnsiColor.BLACK()</source>
          <target state="translated">AnsiColor.BLACK()</target>
        </trans-unit>
        <trans-unit id="b2bc9649bdde9362f2ad8a0978685bdcefc47e81" translate="yes" xml:space="preserve">
          <source>AnsiColor.BLACK_B()</source>
          <target state="translated">AnsiColor.BLACK_B()</target>
        </trans-unit>
        <trans-unit id="1ca4d61d54219395ac49d566ea9d577d498bbeb3" translate="yes" xml:space="preserve">
          <source>AnsiColor.BLINK()</source>
          <target state="translated">AnsiColor.BLINK()</target>
        </trans-unit>
        <trans-unit id="1646c10dcc1e50a5b2677e30540b96808b44425d" translate="yes" xml:space="preserve">
          <source>AnsiColor.BLUE()</source>
          <target state="translated">AnsiColor.BLUE()</target>
        </trans-unit>
        <trans-unit id="aed953593beb2c6bd375b86e0c8c26ee33e768a0" translate="yes" xml:space="preserve">
          <source>AnsiColor.BLUE_B()</source>
          <target state="translated">AnsiColor.BLUE_B()</target>
        </trans-unit>
        <trans-unit id="f6ecc0c4ac913309dab4b62080a363cf1e6a2ad3" translate="yes" xml:space="preserve">
          <source>AnsiColor.BOLD()</source>
          <target state="translated">AnsiColor.BOLD()</target>
        </trans-unit>
        <trans-unit id="05b0c139c843434abd03018de48462c36d229c81" translate="yes" xml:space="preserve">
          <source>AnsiColor.CYAN()</source>
          <target state="translated">AnsiColor.CYAN()</target>
        </trans-unit>
        <trans-unit id="349349faa6a292aab3502cf4ca2f918103394085" translate="yes" xml:space="preserve">
          <source>AnsiColor.CYAN_B()</source>
          <target state="translated">AnsiColor.CYAN_B()</target>
        </trans-unit>
        <trans-unit id="82fe66177636c8f4eca2e692986839bd12cb2ada" translate="yes" xml:space="preserve">
          <source>AnsiColor.GREEN()</source>
          <target state="translated">AnsiColor.GREEN()</target>
        </trans-unit>
        <trans-unit id="7f979535ca49e90f65bdd727c2425c71adb372d6" translate="yes" xml:space="preserve">
          <source>AnsiColor.GREEN_B()</source>
          <target state="translated">AnsiColor.GREEN_B()</target>
        </trans-unit>
        <trans-unit id="77e31479d250ea6537abd9686630fbd264812863" translate="yes" xml:space="preserve">
          <source>AnsiColor.INVISIBLE()</source>
          <target state="translated">AnsiColor.INVISIBLE()</target>
        </trans-unit>
        <trans-unit id="19faba47252b5c3fad29e5aab1ab4080aeed6a22" translate="yes" xml:space="preserve">
          <source>AnsiColor.MAGENTA()</source>
          <target state="translated">AnsiColor.MAGENTA()</target>
        </trans-unit>
        <trans-unit id="ee469b1e54456232f2549520851a84e8e1066eb7" translate="yes" xml:space="preserve">
          <source>AnsiColor.MAGENTA_B()</source>
          <target state="translated">AnsiColor.MAGENTA_B()</target>
        </trans-unit>
        <trans-unit id="a3e2b801156078d0e2b3649ccb41ff151f04a11b" translate="yes" xml:space="preserve">
          <source>AnsiColor.RED()</source>
          <target state="translated">AnsiColor.RED()</target>
        </trans-unit>
        <trans-unit id="1f87a4d494681b3104ab5b80386e653ad5d66442" translate="yes" xml:space="preserve">
          <source>AnsiColor.RED_B()</source>
          <target state="translated">AnsiColor.RED_B()</target>
        </trans-unit>
        <trans-unit id="510d9e3e7e1476e1ea41d82f87b1422196360369" translate="yes" xml:space="preserve">
          <source>AnsiColor.RESET()</source>
          <target state="translated">AnsiColor.RESET()</target>
        </trans-unit>
        <trans-unit id="775f7d0897e7bff6c1e30a99f4279255efc86b01" translate="yes" xml:space="preserve">
          <source>AnsiColor.REVERSED()</source>
          <target state="translated">AnsiColor.REVERSED()</target>
        </trans-unit>
        <trans-unit id="87707a677d717cd597b51a5980a7ee188f5182e5" translate="yes" xml:space="preserve">
          <source>AnsiColor.UNDERLINED()</source>
          <target state="translated">AnsiColor.UNDERLINED()</target>
        </trans-unit>
        <trans-unit id="0562a09957f7e77fe6628bd53b5a3d9c7ece57d3" translate="yes" xml:space="preserve">
          <source>AnsiColor.WHITE()</source>
          <target state="translated">AnsiColor.WHITE()</target>
        </trans-unit>
        <trans-unit id="68350abbe808e4335a65f8f39dac90650ea315b7" translate="yes" xml:space="preserve">
          <source>AnsiColor.WHITE_B()</source>
          <target state="translated">AnsiColor.WHITE_B()</target>
        </trans-unit>
        <trans-unit id="439b09bebf1ddc3c4337b5910affa8494418ac01" translate="yes" xml:space="preserve">
          <source>AnsiColor.YELLOW()</source>
          <target state="translated">AnsiColor.YELLOW()</target>
        </trans-unit>
        <trans-unit id="bdb6420a64e7d9708a1edce8601bfd112e454fa6" translate="yes" xml:space="preserve">
          <source>AnsiColor.YELLOW_B()</source>
          <target state="translated">AnsiColor.YELLOW_B()</target>
        </trans-unit>
        <trans-unit id="5cd6d7e5ad1298999eaadabfc4f4c79609980a7b" translate="yes" xml:space="preserve">
          <source>AnsiColor.scala</source>
          <target state="translated">AnsiColor.scala</target>
        </trans-unit>
        <trans-unit id="322444d3bb52c341f429ca0454f292dc242f315b" translate="yes" xml:space="preserve">
          <source>Any</source>
          <target state="translated">Any</target>
        </trans-unit>
        <trans-unit id="c4447c53d0f64d4aa56b7b29f38d28c28e64446d" translate="yes" xml:space="preserve">
          <source>Any &lt;code&gt;NonFatal&lt;/code&gt; or &lt;code&gt;InterruptedException&lt;/code&gt;s will be reported to the &lt;code&gt;defaultReporter&lt;/code&gt;.</source>
          <target state="translated">どれでも &lt;code&gt;NonFatal&lt;/code&gt; か &lt;code&gt;InterruptedException&lt;/code&gt; ある sがに報告されます &lt;code&gt;defaultReporter&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="b2abd9daf52a0ada9d9c5b6677eee88ce010c1d7" translate="yes" xml:space="preserve">
          <source>Any implementation of this method should be an &lt;a href=&quot;http://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;equivalence relation&lt;/a&gt;:</source>
          <target state="translated">このメソッドの実装は&lt;a href=&quot;http://en.wikipedia.org/wiki/Equivalence_relation&quot;&gt;等価関係である&lt;/a&gt;必要があります。</target>
        </trans-unit>
        <trans-unit id="34e0c6b147f6cb463c1e49fdec336aafedffe75e" translate="yes" xml:space="preserve">
          <source>Any processed string literal is rewritten as an instantiation and method call against this class. For example:</source>
          <target state="translated">処理された文字列リテラルは、このクラスに対するインスタンス化とメソッド呼び出しとして書き換えられます。例えば、以下のようになります。</target>
        </trans-unit>
        <trans-unit id="aaee4fde649197f803b2ab421ba18ed42f123cdd" translate="yes" xml:space="preserve">
          <source>Any.!=()</source>
          <target state="translated">Any.!=()</target>
        </trans-unit>
        <trans-unit id="d369253a1d999dcb92b410ecb1dfe637e2ab7923" translate="yes" xml:space="preserve">
          <source>Any.==()</source>
          <target state="translated">Any.==()</target>
        </trans-unit>
        <trans-unit id="c9e255208d970e7da7b8edc11a475769b7616b40" translate="yes" xml:space="preserve">
          <source>Any.asInstanceOf()</source>
          <target state="translated">Any.asInstanceOf()</target>
        </trans-unit>
        <trans-unit id="838acfbfb10700feb1f0f19f1da005466b11208f" translate="yes" xml:space="preserve">
          <source>Any.equals()</source>
          <target state="translated">Any.equals()</target>
        </trans-unit>
        <trans-unit id="50c240976182094fb979a660f9bf3ef6cc14448c" translate="yes" xml:space="preserve">
          <source>Any.getClass()</source>
          <target state="translated">Any.getClass()</target>
        </trans-unit>
        <trans-unit id="8c28b383a78687027aab210d5790197c20e62094" translate="yes" xml:space="preserve">
          <source>Any.hashCode()</source>
          <target state="translated">Any.hashCode()</target>
        </trans-unit>
        <trans-unit id="f7d5b789b1297950ead88326c2dbb2f30ce4e46b" translate="yes" xml:space="preserve">
          <source>Any.isInstanceOf()</source>
          <target state="translated">Any.isInstanceOf()</target>
        </trans-unit>
        <trans-unit id="3b7e8e0bf5414fae47b62de1acd39c18706418c0" translate="yes" xml:space="preserve">
          <source>Any.toString()</source>
          <target state="translated">Any.toString()</target>
        </trans-unit>
        <trans-unit id="3d0e422898cf22fc7cdb67883a4ea8d92e84828f" translate="yes" xml:space="preserve">
          <source>AnyAccumulator</source>
          <target state="translated">AnyAccumulator</target>
        </trans-unit>
        <trans-unit id="b32f24500a9cafc591adaf596256e22fc1281058" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$</source>
          <target state="translated">AnyAccumulator$</target>
        </trans-unit>
        <trans-unit id="e01716c0175619885e4b2c4a33ccceb95a41aaef" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.SerializationProxy</source>
          <target state="translated">AnyAccumulator$.SerializationProxy</target>
        </trans-unit>
        <trans-unit id="c2923bd07ebf5cb8bd75bd4d0641420f1d08c86c" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.SerializationProxy()</source>
          <target state="translated">AnyAccumulator$.SerializationProxy()</target>
        </trans-unit>
        <trans-unit id="22c06b8af0034b3edb1f23e832cb114c8f36b33f" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.SerializationProxy.SerializationProxy()</source>
          <target state="translated">AnyAccumulator$.SerializationProxy.SerializationProxy()</target>
        </trans-unit>
        <trans-unit id="257faef10f45b9233d69101527fbbc91a8f6f564" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.adder()</source>
          <target state="translated">AnyAccumulator$.adder()</target>
        </trans-unit>
        <trans-unit id="d7deee95ec97dd0887e28fbac34efc917a1a56c7" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.empty()</source>
          <target state="translated">AnyAccumulator$.empty()</target>
        </trans-unit>
        <trans-unit id="a3df7cacc9ea674bc8bd5e4edc7f43a99f0ef57d" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.from()</source>
          <target state="translated">AnyAccumulator$.from()</target>
        </trans-unit>
        <trans-unit id="f7a59ee44341f40b12e59b38a757c908ffcb1209" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.merger()</source>
          <target state="translated">AnyAccumulator$.merger()</target>
        </trans-unit>
        <trans-unit id="12483c48b6c3c63763bcef4ad04945b165b1a644" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.newBuilder()</source>
          <target state="translated">AnyAccumulator$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="21f245a5e70d95ac7c60686d5a6ed4f1669864ad" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.supplier()</source>
          <target state="translated">AnyAccumulator$.supplier()</target>
        </trans-unit>
        <trans-unit id="530489e9ed8ffd197ad3b739e686e19c477c24ad" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.unboxedDoubleAdder()</source>
          <target state="translated">AnyAccumulator$.unboxedDoubleAdder()</target>
        </trans-unit>
        <trans-unit id="9910fbb52817ef64489a75f302efdd9fcd27bccc" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.unboxedIntAdder()</source>
          <target state="translated">AnyAccumulator$.unboxedIntAdder()</target>
        </trans-unit>
        <trans-unit id="3ab1d740b25b9c501295fb0197337ae4a3c1cae1" translate="yes" xml:space="preserve">
          <source>AnyAccumulator$.unboxedLongAdder()</source>
          <target state="translated">AnyAccumulator$.unboxedLongAdder()</target>
        </trans-unit>
        <trans-unit id="bb7c30228b0e60dd9c6fa4f1ea13dfee0c22c6af" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.AnyAccumulator()</source>
          <target state="translated">AnyAccumulator.AnyAccumulator()</target>
        </trans-unit>
        <trans-unit id="e7ae011482d450752f07f1873870e274443abb50" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.addOne()</source>
          <target state="translated">AnyAccumulator.addOne()</target>
        </trans-unit>
        <trans-unit id="512d8d27551f3b434596e128e10686a9b9e0f739" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.apply()</source>
          <target state="translated">AnyAccumulator.apply()</target>
        </trans-unit>
        <trans-unit id="f1d7ffe1d2681c3f521971214cb4417f16d74746" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.className()</source>
          <target state="translated">AnyAccumulator.className()</target>
        </trans-unit>
        <trans-unit id="e08b3dcf5a03368dbbe593814e62f3a5407795c9" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.clear()</source>
          <target state="translated">AnyAccumulator.clear()</target>
        </trans-unit>
        <trans-unit id="18931b813ecd539d990c7d93903e7cabe0e02fab" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.countLong()</source>
          <target state="translated">AnyAccumulator.countLong()</target>
        </trans-unit>
        <trans-unit id="f9fddc55a506c456496df5ca5e8ca02d600b055a" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.drain()</source>
          <target state="translated">AnyAccumulator.drain()</target>
        </trans-unit>
        <trans-unit id="88afab62239495889d6f8decdb30567a3cfc2a52" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.efficientStepper()</source>
          <target state="translated">AnyAccumulator.efficientStepper()</target>
        </trans-unit>
        <trans-unit id="2931e5f3c8185cdce9dc4e4a6357c39fa374a9c3" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.iterableFactory()</source>
          <target state="translated">AnyAccumulator.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="ee2f9f06ed6c8e53bfe75db35a87cf76ad9d9bb8" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.iterator()</source>
          <target state="translated">AnyAccumulator.iterator()</target>
        </trans-unit>
        <trans-unit id="ddf7cfcad08fddd80e234247f2264a875fec5f0b" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.result()</source>
          <target state="translated">AnyAccumulator.result()</target>
        </trans-unit>
        <trans-unit id="b8fd32b3988507f0d85f878854034619ff966394" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.scala</source>
          <target state="translated">AnyAccumulator.scala</target>
        </trans-unit>
        <trans-unit id="21b67c2a0ffa43ce2a037d0e502db213ecb28a7d" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.to()</source>
          <target state="translated">AnyAccumulator.to()</target>
        </trans-unit>
        <trans-unit id="ebb22589e77f8672c9103cc520725f9bfa97b513" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.toArray()</source>
          <target state="translated">AnyAccumulator.toArray()</target>
        </trans-unit>
        <trans-unit id="977138b6035656a50515a43d9ef5b724f75c26ac" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.toList()</source>
          <target state="translated">AnyAccumulator.toList()</target>
        </trans-unit>
        <trans-unit id="4fec073e22647faf5383f7a286600c139699ebb1" translate="yes" xml:space="preserve">
          <source>AnyAccumulator.update()</source>
          <target state="translated">AnyAccumulator.update()</target>
        </trans-unit>
        <trans-unit id="a54d92cf503d5b47fc1348583bc573819634f8e9" translate="yes" xml:space="preserve">
          <source>AnyRef</source>
          <target state="translated">AnyRef</target>
        </trans-unit>
        <trans-unit id="4406e37398189e5c5500abb63ce5b1f0cebb19ae" translate="yes" xml:space="preserve">
          <source>AnyRef &amp;rarr; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="translated">AnyRef&amp;rarr; &lt;a href=&quot;../../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="81f236f025e85dc619e712ba3614b26249dcc63e" translate="yes" xml:space="preserve">
          <source>AnyRef &amp;rarr; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="translated">AnyRef&amp;rarr; &lt;a href=&quot;../any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f2ef0421769964fb38b0843d6eecd963a57bae72" translate="yes" xml:space="preserve">
          <source>AnyRef &amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</source>
          <target state="translated">AnyRef&amp;rarr; &lt;a href=&quot;any&quot; id=&quot;scala.Any&quot; name=&quot;scala.Any&quot;&gt;Any&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b67c019aae444b718d93a853e8b84b2065a6d7c" translate="yes" xml:space="preserve">
          <source>AnyRef.!=()</source>
          <target state="translated">AnyRef.!=()</target>
        </trans-unit>
        <trans-unit id="3a5dc7424bfb8ce4369b675fc06e5598d6dc3d03" translate="yes" xml:space="preserve">
          <source>AnyRef.==()</source>
          <target state="translated">AnyRef.==()</target>
        </trans-unit>
        <trans-unit id="617235ad486a11431ddd86639a7a1f5af28c5dfc" translate="yes" xml:space="preserve">
          <source>AnyRef.clone()</source>
          <target state="translated">AnyRef.clone()</target>
        </trans-unit>
        <trans-unit id="3768ad54e750f11903e514e07cdf9c8f9ec72cdd" translate="yes" xml:space="preserve">
          <source>AnyRef.eq()</source>
          <target state="translated">AnyRef.eq()</target>
        </trans-unit>
        <trans-unit id="ef5b3020fd4373825cb7366a696c845e89589bed" translate="yes" xml:space="preserve">
          <source>AnyRef.equals()</source>
          <target state="translated">AnyRef.equals()</target>
        </trans-unit>
        <trans-unit id="7527eb0de422b6571ba9b3e534f56a8efe1615e6" translate="yes" xml:space="preserve">
          <source>AnyRef.finalize()</source>
          <target state="translated">AnyRef.finalize()</target>
        </trans-unit>
        <trans-unit id="99b9c1b14cce0e6fc64920fbd736c36ce35a243b" translate="yes" xml:space="preserve">
          <source>AnyRef.getClass()</source>
          <target state="translated">AnyRef.getClass()</target>
        </trans-unit>
        <trans-unit id="4b941503234b7eb6ab174d0bf398f36676b599c7" translate="yes" xml:space="preserve">
          <source>AnyRef.hashCode()</source>
          <target state="translated">AnyRef.hashCode()</target>
        </trans-unit>
        <trans-unit id="98635f1bd5e02724342cd97a000bddd8aa774d15" translate="yes" xml:space="preserve">
          <source>AnyRef.ne()</source>
          <target state="translated">AnyRef.ne()</target>
        </trans-unit>
        <trans-unit id="e715fcb312046f5e615cd2691ececb445f2dea6e" translate="yes" xml:space="preserve">
          <source>AnyRef.notify()</source>
          <target state="translated">AnyRef.notify()</target>
        </trans-unit>
        <trans-unit id="455b5db5708864a7b429c4f88c3b45336327fffd" translate="yes" xml:space="preserve">
          <source>AnyRef.notifyAll()</source>
          <target state="translated">AnyRef.notifyAll()</target>
        </trans-unit>
        <trans-unit id="4c9d611f46e1acba3436b34671ca3c08dd319232" translate="yes" xml:space="preserve">
          <source>AnyRef.synchronized()</source>
          <target state="translated">AnyRef.synchronized()</target>
        </trans-unit>
        <trans-unit id="5c38e8562843f5435bdbf8db80bac62bb399e4ef" translate="yes" xml:space="preserve">
          <source>AnyRef.toString()</source>
          <target state="translated">AnyRef.toString()</target>
        </trans-unit>
        <trans-unit id="82b6e54220c1830f6283599f1c0c17d4c453392d" translate="yes" xml:space="preserve">
          <source>AnyRef.wait()</source>
          <target state="translated">AnyRef.wait()</target>
        </trans-unit>
        <trans-unit id="bcccdc8d1f5271a5bd2d063f947dd4f0359c4713" translate="yes" xml:space="preserve">
          <source>AnyRefMap</source>
          <target state="translated">AnyRefMap</target>
        </trans-unit>
        <trans-unit id="5d08bafb8615502d597b229a81633e0655460e2e" translate="yes" xml:space="preserve">
          <source>AnyRefMap$</source>
          <target state="translated">AnyRefMap$</target>
        </trans-unit>
        <trans-unit id="7fbab6a82917f59c8ec2a25a2a27ffb3ee966858" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.AnyRefMapBuilder</source>
          <target state="translated">AnyRefMap$.AnyRefMapBuilder</target>
        </trans-unit>
        <trans-unit id="a2e24cc21bad4801196c7c3124b264258516d6be" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.AnyRefMapBuilder()</source>
          <target state="translated">AnyRefMap$.AnyRefMapBuilder()</target>
        </trans-unit>
        <trans-unit id="36001a2a345373360d93448073deafa0744144c4" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.AnyRefMapBuilder.AnyRefMapBuilder()</source>
          <target state="translated">AnyRefMap$.AnyRefMapBuilder.AnyRefMapBuilder()</target>
        </trans-unit>
        <trans-unit id="f032673d865203ea297a67c421f04adcc3434947" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.AnyRefMapBuilder.addOne()</source>
          <target state="translated">AnyRefMap$.AnyRefMapBuilder.addOne()</target>
        </trans-unit>
        <trans-unit id="3a5e2574c563de31b7cb9983cc7cc5ebaa92e944" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.AnyRefMapBuilder.clear()</source>
          <target state="translated">AnyRefMap$.AnyRefMapBuilder.clear()</target>
        </trans-unit>
        <trans-unit id="2a7ef588b62786067fd7a86feb1e0f3eb583e67f" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.AnyRefMapBuilder.knownSize()</source>
          <target state="translated">AnyRefMap$.AnyRefMapBuilder.knownSize()</target>
        </trans-unit>
        <trans-unit id="9449af402ac49b262517603be5062b4118e6dda9" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.AnyRefMapBuilder.result()</source>
          <target state="translated">AnyRefMap$.AnyRefMapBuilder.result()</target>
        </trans-unit>
        <trans-unit id="8042b5988275c3dec7e1496bbcc6330d940a7614" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.apply()</source>
          <target state="translated">AnyRefMap$.apply()</target>
        </trans-unit>
        <trans-unit id="8bc0d60b8d379a4176fea98d20247efdcae088b7" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.buildFromAnyRefMap()</source>
          <target state="translated">AnyRefMap$.buildFromAnyRefMap()</target>
        </trans-unit>
        <trans-unit id="54039776ded4bfc06bba26fc7c646807d5b0fb17" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.empty()</source>
          <target state="translated">AnyRefMap$.empty()</target>
        </trans-unit>
        <trans-unit id="bc420db8017849c633be90f491e9c51943d90452" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.from()</source>
          <target state="translated">AnyRefMap$.from()</target>
        </trans-unit>
        <trans-unit id="eb6a1bb3b2f460023010317318e75af64a5cc345" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.fromZip()</source>
          <target state="translated">AnyRefMap$.fromZip()</target>
        </trans-unit>
        <trans-unit id="94e99158393506a6c909d2413474cc565e0a7077" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.iterableFactory()</source>
          <target state="translated">AnyRefMap$.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="d303683bdf22c855768f74b3592aa9be6e09d8ff" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.newBuilder()</source>
          <target state="translated">AnyRefMap$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="15a5a65e35163028883b29d6f33564805e0597b7" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.toBuildFrom()</source>
          <target state="translated">AnyRefMap$.toBuildFrom()</target>
        </trans-unit>
        <trans-unit id="f13bdb4853791d57988c4cf12f4503fdba372677" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.toFactory()</source>
          <target state="translated">AnyRefMap$.toFactory()</target>
        </trans-unit>
        <trans-unit id="fef0c4b25f41bb4a8eb386ddb8271fca6162f3a0" translate="yes" xml:space="preserve">
          <source>AnyRefMap$.withDefault()</source>
          <target state="translated">AnyRefMap$.withDefault()</target>
        </trans-unit>
        <trans-unit id="33a3158dbf62bbef18b363dedb78d12d5070ee28" translate="yes" xml:space="preserve">
          <source>AnyRefMap.++()</source>
          <target state="translated">AnyRefMap.++()</target>
        </trans-unit>
        <trans-unit id="2934e04152ef5edc2297c955035e1df2bad75704" translate="yes" xml:space="preserve">
          <source>AnyRefMap.+=()</source>
          <target state="translated">AnyRefMap.+=()</target>
        </trans-unit>
        <trans-unit id="7bc168197a65020d2feaf8810127fc595d150d3d" translate="yes" xml:space="preserve">
          <source>AnyRefMap.AnyRefMap()</source>
          <target state="translated">AnyRefMap.AnyRefMap()</target>
        </trans-unit>
        <trans-unit id="ad4f20d7d69e654378722d4a182f77424352ec40" translate="yes" xml:space="preserve">
          <source>AnyRefMap.addOne()</source>
          <target state="translated">AnyRefMap.addOne()</target>
        </trans-unit>
        <trans-unit id="e23015549ee0f4c78a6a9e9d477d278aabd370a3" translate="yes" xml:space="preserve">
          <source>AnyRefMap.apply()</source>
          <target state="translated">AnyRefMap.apply()</target>
        </trans-unit>
        <trans-unit id="c5235fd4ca0f281de23e535e66888bca8be1f04c" translate="yes" xml:space="preserve">
          <source>AnyRefMap.clone()</source>
          <target state="translated">AnyRefMap.clone()</target>
        </trans-unit>
        <trans-unit id="9f1e278152245700ebc06a6b1191f79b5bfe1139" translate="yes" xml:space="preserve">
          <source>AnyRefMap.collect()</source>
          <target state="translated">AnyRefMap.collect()</target>
        </trans-unit>
        <trans-unit id="10b4f618522dd8c21872ced6fec9a59e33e9a893" translate="yes" xml:space="preserve">
          <source>AnyRefMap.concat()</source>
          <target state="translated">AnyRefMap.concat()</target>
        </trans-unit>
        <trans-unit id="fc6aed744a5a66e3bb1960553b01413ed78bfc4d" translate="yes" xml:space="preserve">
          <source>AnyRefMap.contains()</source>
          <target state="translated">AnyRefMap.contains()</target>
        </trans-unit>
        <trans-unit id="41fa59b7311c186f44f4f9a0068a0cd3b6bb2140" translate="yes" xml:space="preserve">
          <source>AnyRefMap.default()</source>
          <target state="translated">AnyRefMap.default()</target>
        </trans-unit>
        <trans-unit id="ccecfff8c96e967737b93881b72de74c2d1e0bfd" translate="yes" xml:space="preserve">
          <source>AnyRefMap.empty()</source>
          <target state="translated">AnyRefMap.empty()</target>
        </trans-unit>
        <trans-unit id="445f83d2b3dfadbdd1aa97c95a28544acbf8f78a" translate="yes" xml:space="preserve">
          <source>AnyRefMap.flatMap()</source>
          <target state="translated">AnyRefMap.flatMap()</target>
        </trans-unit>
        <trans-unit id="a3f61022051a4eb959629cc55b8ec8b543c2795c" translate="yes" xml:space="preserve">
          <source>AnyRefMap.foreach()</source>
          <target state="translated">AnyRefMap.foreach()</target>
        </trans-unit>
        <trans-unit id="884007c8dc67ebe06708dcbe23193cb20fa95d2f" translate="yes" xml:space="preserve">
          <source>AnyRefMap.foreachEntry()</source>
          <target state="translated">AnyRefMap.foreachEntry()</target>
        </trans-unit>
        <trans-unit id="2d97b493b33a347ab14f04d35c1d72eaea2d36bd" translate="yes" xml:space="preserve">
          <source>AnyRefMap.foreachKey()</source>
          <target state="translated">AnyRefMap.foreachKey()</target>
        </trans-unit>
        <trans-unit id="5e8bb824987300788aa370eea49ff191a53b0d04" translate="yes" xml:space="preserve">
          <source>AnyRefMap.foreachValue()</source>
          <target state="translated">AnyRefMap.foreachValue()</target>
        </trans-unit>
        <trans-unit id="187fe654c895a1e5b65218120646186b2e73c655" translate="yes" xml:space="preserve">
          <source>AnyRefMap.fromSpecific()</source>
          <target state="translated">AnyRefMap.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="714195981863adc1ee57c31b818ed1caa89e44e0" translate="yes" xml:space="preserve">
          <source>AnyRefMap.get()</source>
          <target state="translated">AnyRefMap.get()</target>
        </trans-unit>
        <trans-unit id="15fe0fc427d772d2c38a6b78535ba5d04b366696" translate="yes" xml:space="preserve">
          <source>AnyRefMap.getOrElse()</source>
          <target state="translated">AnyRefMap.getOrElse()</target>
        </trans-unit>
        <trans-unit id="c2fa0a2b43bd5925d44aebd3b56e45b33c125ec9" translate="yes" xml:space="preserve">
          <source>AnyRefMap.getOrElseUpdate()</source>
          <target state="translated">AnyRefMap.getOrElseUpdate()</target>
        </trans-unit>
        <trans-unit id="8c8a4d6a3302232d56a4f91e089ccc59e2b778ea" translate="yes" xml:space="preserve">
          <source>AnyRefMap.getOrNull()</source>
          <target state="translated">AnyRefMap.getOrNull()</target>
        </trans-unit>
        <trans-unit id="1740ccc4c598ee7613d2ec88518ae3446adf7183" translate="yes" xml:space="preserve">
          <source>AnyRefMap.isEmpty()</source>
          <target state="translated">AnyRefMap.isEmpty()</target>
        </trans-unit>
        <trans-unit id="dc30fe0b93b098322b1160169ce32d586e4326b1" translate="yes" xml:space="preserve">
          <source>AnyRefMap.iterator()</source>
          <target state="translated">AnyRefMap.iterator()</target>
        </trans-unit>
        <trans-unit id="04090b5cd87f6f10c73443e6173ce91d638c0154" translate="yes" xml:space="preserve">
          <source>AnyRefMap.keysIterator()</source>
          <target state="translated">AnyRefMap.keysIterator()</target>
        </trans-unit>
        <trans-unit id="0d03dcd165220e6a5c009778d40bed68ff08aafa" translate="yes" xml:space="preserve">
          <source>AnyRefMap.knownSize()</source>
          <target state="translated">AnyRefMap.knownSize()</target>
        </trans-unit>
        <trans-unit id="2521a29c774f5d3070abea461dea6119ceca24d5" translate="yes" xml:space="preserve">
          <source>AnyRefMap.map()</source>
          <target state="translated">AnyRefMap.map()</target>
        </trans-unit>
        <trans-unit id="32d1885bb7da438953db959404e9cdf7e3f364a8" translate="yes" xml:space="preserve">
          <source>AnyRefMap.mapValuesNow()</source>
          <target state="translated">AnyRefMap.mapValuesNow()</target>
        </trans-unit>
        <trans-unit id="20c128c46085ea2cf181a08fdaf25048c8962233" translate="yes" xml:space="preserve">
          <source>AnyRefMap.newSpecificBuilder()</source>
          <target state="translated">AnyRefMap.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="8a755120a9713214cff0a33460ddfa155363914e" translate="yes" xml:space="preserve">
          <source>AnyRefMap.put()</source>
          <target state="translated">AnyRefMap.put()</target>
        </trans-unit>
        <trans-unit id="4059a65844aa07cb93da8b38ded68feee41c0425" translate="yes" xml:space="preserve">
          <source>AnyRefMap.repack()</source>
          <target state="translated">AnyRefMap.repack()</target>
        </trans-unit>
        <trans-unit id="630890374ceef386de2ea41a904a35eef11b65f4" translate="yes" xml:space="preserve">
          <source>AnyRefMap.scala</source>
          <target state="translated">AnyRefMap.scala</target>
        </trans-unit>
        <trans-unit id="38d2f86f1cc9398aeec8ece63c93955d6495aa80" translate="yes" xml:space="preserve">
          <source>AnyRefMap.size()</source>
          <target state="translated">AnyRefMap.size()</target>
        </trans-unit>
        <trans-unit id="2e04be19f400899fe7d9f62c61915e5888c89d3f" translate="yes" xml:space="preserve">
          <source>AnyRefMap.stringPrefix()</source>
          <target state="translated">AnyRefMap.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="18f51b7e2dee4a85f5d598fc43ea33b0fced8159" translate="yes" xml:space="preserve">
          <source>AnyRefMap.subtractOne()</source>
          <target state="translated">AnyRefMap.subtractOne()</target>
        </trans-unit>
        <trans-unit id="b2a54d5080cb1bd8c0c5e8dcb42bdcec97e5bf03" translate="yes" xml:space="preserve">
          <source>AnyRefMap.transformValuesInPlace()</source>
          <target state="translated">AnyRefMap.transformValuesInPlace()</target>
        </trans-unit>
        <trans-unit id="cc15988081b6c6eeefa7f2134c767c48ac2adb5c" translate="yes" xml:space="preserve">
          <source>AnyRefMap.update()</source>
          <target state="translated">AnyRefMap.update()</target>
        </trans-unit>
        <trans-unit id="7782aaa0c81931c0a21fe88a6c310746b30fc972" translate="yes" xml:space="preserve">
          <source>AnyRefMap.valuesIterator()</source>
          <target state="translated">AnyRefMap.valuesIterator()</target>
        </trans-unit>
        <trans-unit id="af4c2d474221499136aa60791d3b9dcf681c9e78" translate="yes" xml:space="preserve">
          <source>AnyRefMap.writeReplace()</source>
          <target state="translated">AnyRefMap.writeReplace()</target>
        </trans-unit>
        <trans-unit id="bb02ea9ad82b5a370d63693293b75c5e3978f960" translate="yes" xml:space="preserve">
          <source>AnySeqDelegate</source>
          <target state="translated">AnySeqDelegate</target>
        </trans-unit>
        <trans-unit id="8ce5da641c1dac570b11423a57487ffff4eaf836" translate="yes" xml:space="preserve">
          <source>AnyStepper</source>
          <target state="translated">AnyStepper</target>
        </trans-unit>
        <trans-unit id="84a1d2b8a097e77e04410837d72f2f948dbc1e54" translate="yes" xml:space="preserve">
          <source>AnyStepper$</source>
          <target state="translated">AnyStepper$</target>
        </trans-unit>
        <trans-unit id="d1c0c172d55d308dea40f17ac82fe57eb8052946" translate="yes" xml:space="preserve">
          <source>AnyStepper$.AnyStepperSpliterator</source>
          <target state="translated">AnyStepper$.AnyStepperSpliterator</target>
        </trans-unit>
        <trans-unit id="b918bf6fcc2b0c7e03d5cf70495b4a03808291db" translate="yes" xml:space="preserve">
          <source>AnyStepper$.AnyStepperSpliterator()</source>
          <target state="translated">AnyStepper$.AnyStepperSpliterator()</target>
        </trans-unit>
        <trans-unit id="69d2647c1b97c8475adf6347c5f0d9d4f936ea80" translate="yes" xml:space="preserve">
          <source>AnyStepper$.AnyStepperSpliterator.AnyStepperSpliterator()</source>
          <target state="translated">AnyStepper$.AnyStepperSpliterator.AnyStepperSpliterator()</target>
        </trans-unit>
        <trans-unit id="dad522038bd13d3e0b59243fd4cb3f284f270e71" translate="yes" xml:space="preserve">
          <source>AnyStepper$.AnyStepperSpliterator.characteristics()</source>
          <target state="translated">AnyStepper$.AnyStepperSpliterator.characteristics()</target>
        </trans-unit>
        <trans-unit id="56c91dc11e476b12f105db996703518095071f2a" translate="yes" xml:space="preserve">
          <source>AnyStepper$.AnyStepperSpliterator.estimateSize()</source>
          <target state="translated">AnyStepper$.AnyStepperSpliterator.estimateSize()</target>
        </trans-unit>
        <trans-unit id="3305abdbee397876ca7c9903581f3ec5aec2f140" translate="yes" xml:space="preserve">
          <source>AnyStepper$.AnyStepperSpliterator.forEachRemaining()</source>
          <target state="translated">AnyStepper$.AnyStepperSpliterator.forEachRemaining()</target>
        </trans-unit>
        <trans-unit id="de8d818be9868494de5a71b8d138bdcf7824b4dd" translate="yes" xml:space="preserve">
          <source>AnyStepper$.AnyStepperSpliterator.tryAdvance()</source>
          <target state="translated">AnyStepper$.AnyStepperSpliterator.tryAdvance()</target>
        </trans-unit>
        <trans-unit id="6e511f7d099fcf7a39005d6fccdc94d828768910" translate="yes" xml:space="preserve">
          <source>AnyStepper$.AnyStepperSpliterator.trySplit()</source>
          <target state="translated">AnyStepper$.AnyStepperSpliterator.trySplit()</target>
        </trans-unit>
        <trans-unit id="33d0a346a72764adb149acb7f070e0c39413f5d7" translate="yes" xml:space="preserve">
          <source>AnyStepper$.ofParDoubleStepper()</source>
          <target state="translated">AnyStepper$.ofParDoubleStepper()</target>
        </trans-unit>
        <trans-unit id="c41fb2cad48a5b8000c07ab6db7bc537fe89a608" translate="yes" xml:space="preserve">
          <source>AnyStepper$.ofParIntStepper()</source>
          <target state="translated">AnyStepper$.ofParIntStepper()</target>
        </trans-unit>
        <trans-unit id="bd88444f3e4b46577b87af44a74f06c2eb5772ae" translate="yes" xml:space="preserve">
          <source>AnyStepper$.ofParLongStepper()</source>
          <target state="translated">AnyStepper$.ofParLongStepper()</target>
        </trans-unit>
        <trans-unit id="fbfe47e3d5d73731b974eb8d96e0f7b599007ce2" translate="yes" xml:space="preserve">
          <source>AnyStepper$.ofSeqDoubleStepper()</source>
          <target state="translated">AnyStepper$.ofSeqDoubleStepper()</target>
        </trans-unit>
        <trans-unit id="67aca9a69066c2078b0fe54a7c112c20db7271cd" translate="yes" xml:space="preserve">
          <source>AnyStepper$.ofSeqIntStepper()</source>
          <target state="translated">AnyStepper$.ofSeqIntStepper()</target>
        </trans-unit>
        <trans-unit id="b39fe7bb7eed03a89868bf7c0ca53b29431e280b" translate="yes" xml:space="preserve">
          <source>AnyStepper$.ofSeqLongStepper()</source>
          <target state="translated">AnyStepper$.ofSeqLongStepper()</target>
        </trans-unit>
        <trans-unit id="0801ba7af8b98dc5a34ea4d497e24aee2edc7a33" translate="yes" xml:space="preserve">
          <source>AnyStepper.javaIterator()</source>
          <target state="translated">AnyStepper.javaIterator()</target>
        </trans-unit>
        <trans-unit id="4c1bd04432d80061eec6279d6619d762e2e95501" translate="yes" xml:space="preserve">
          <source>AnyStepper.spliterator()</source>
          <target state="translated">AnyStepper.spliterator()</target>
        </trans-unit>
        <trans-unit id="1df3b1d5e98af21ba609a04f23cbed29fbf25fe9" translate="yes" xml:space="preserve">
          <source>AnyStepper.trySplit()</source>
          <target state="translated">AnyStepper.trySplit()</target>
        </trans-unit>
        <trans-unit id="f9e3572b1eb84b6b73a65a52974ae6f66d95fe9b" translate="yes" xml:space="preserve">
          <source>AnyVal</source>
          <target state="translated">AnyVal</target>
        </trans-unit>
        <trans-unit id="9b3b872c44c4af4eae70c038b64ef705cd2c9859" translate="yes" xml:space="preserve">
          <source>AnyVal.AnyVal()</source>
          <target state="translated">AnyVal.AnyVal()</target>
        </trans-unit>
        <trans-unit id="32465f600535498d898b0c7e867c78c5eff0ca17" translate="yes" xml:space="preserve">
          <source>AnyVal.getClass()</source>
          <target state="translated">AnyVal.getClass()</target>
        </trans-unit>
        <trans-unit id="e7966df884e0cdb81c1be462577c8207a953a9d5" translate="yes" xml:space="preserve">
          <source>AnyVal.scala</source>
          <target state="translated">AnyVal.scala</target>
        </trans-unit>
        <trans-unit id="38f9149ed9e79b5576a95b7dc3d451b4e4495415" translate="yes" xml:space="preserve">
          <source>AnyValManifest</source>
          <target state="translated">AnyValManifest</target>
        </trans-unit>
        <trans-unit id="33d5adf755e04e5bdadd4a80201f7e4ba678be30" translate="yes" xml:space="preserve">
          <source>AnyValManifest.&amp;lt;:&amp;lt;()</source>
          <target state="translated">AnyValManifest.&amp;lt;:&amp;lt;()</target>
        </trans-unit>
        <trans-unit id="756b9697272a750205b79bb1f16240c917dcd5be" translate="yes" xml:space="preserve">
          <source>AnyValManifest.AnyValManifest()</source>
          <target state="translated">AnyValManifest.AnyValManifest()</target>
        </trans-unit>
        <trans-unit id="2e05fe62d9086b36c1967f9c743fb45a495d5732" translate="yes" xml:space="preserve">
          <source>AnyValManifest.canEqual()</source>
          <target state="translated">AnyValManifest.canEqual()</target>
        </trans-unit>
        <trans-unit id="993ed972994c3b138e52fac1f5fa795a13889ac1" translate="yes" xml:space="preserve">
          <source>AnyValManifest.equals()</source>
          <target state="translated">AnyValManifest.equals()</target>
        </trans-unit>
        <trans-unit id="023ba48e954dcbc42d189f69f3ed8eb984da1f8e" translate="yes" xml:space="preserve">
          <source>AnyValManifest.hashCode()</source>
          <target state="translated">AnyValManifest.hashCode()</target>
        </trans-unit>
        <trans-unit id="abf0dd90bc667984db8ae1f9444c24c6efb9a647" translate="yes" xml:space="preserve">
          <source>AnyValManifest.toString()</source>
          <target state="translated">AnyValManifest.toString()</target>
        </trans-unit>
        <trans-unit id="fc4a695f02a8a53a129dcb9ace91e91ee1e7feb9" translate="yes" xml:space="preserve">
          <source>App</source>
          <target state="translated">App</target>
        </trans-unit>
        <trans-unit id="12ad6c0bc5d0c9d40d5922953c5de44c3776a47b" translate="yes" xml:space="preserve">
          <source>App.args()</source>
          <target state="translated">App.args()</target>
        </trans-unit>
        <trans-unit id="2e7a72560c5bd140b534802a4ae4e40844585df2" translate="yes" xml:space="preserve">
          <source>App.executionStart()</source>
          <target state="translated">App.executionStart()</target>
        </trans-unit>
        <trans-unit id="b0a393fb1742b846605111cad02174eea7c56287" translate="yes" xml:space="preserve">
          <source>App.main()</source>
          <target state="translated">App.main()</target>
        </trans-unit>
        <trans-unit id="27d4c63ec60aad6461c5c58397fd04b1b6caf02c" translate="yes" xml:space="preserve">
          <source>App.scala</source>
          <target state="translated">App.scala</target>
        </trans-unit>
        <trans-unit id="674d0687046ae54eb6ecbccd77546e93a51aa588" translate="yes" xml:space="preserve">
          <source>Append a value to the FIFO queue to be read by &lt;code&gt;read&lt;/code&gt;. This operation is nonblocking and can be executed by any thread.</source>
          <target state="translated">読み取られるFIFOキューに値を追加し &lt;code&gt;read&lt;/code&gt; 。この操作は非ブロッキングであり、どのスレッドでも実行できます。</target>
        </trans-unit>
        <trans-unit id="310f09ffa3ffec2b016455e69b6c3da3e1899c97" translate="yes" xml:space="preserve">
          <source>Append the String representation of the given primitive type to this sequence. The argument is converted to a String with String.valueOf.</source>
          <target state="translated">与えられたプリミティブ型の String 表現をこのシーケンスに追加します。引数は String.valueOf で String に変換されます。</target>
        </trans-unit>
        <trans-unit id="979f5a82397c63ab2def1e72d1a27cffc856d1f0" translate="yes" xml:space="preserve">
          <source>Appended</source>
          <target state="translated">Appended</target>
        </trans-unit>
        <trans-unit id="9564b2e7cdb14bd5eb40ee21c4d73ea63de3b7ee" translate="yes" xml:space="preserve">
          <source>Appends a portion of the given Array[Char] to this sequence.</source>
          <target state="translated">Array[Char]の一部を追加します。</target>
        </trans-unit>
        <trans-unit id="3a02063b48a18dd02bbe0d2f4a0e8b711b8f0438" translate="yes" xml:space="preserve">
          <source>Appends all elements of this collection to a string builder using a separator string. The written text consists of the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this collection, separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">セパレーター文字列を使用して、このコレクションのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、このコレクションのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）で構成され、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られます。</target>
        </trans-unit>
        <trans-unit id="1b6c247b4b88c3ae64345439470b40dc90cb55ce" translate="yes" xml:space="preserve">
          <source>Appends all elements of this collection to a string builder using start, end, and separator strings. The written text begins with the string &lt;code&gt;start&lt;/code&gt; and ends with the string &lt;code&gt;end&lt;/code&gt;. Inside, the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this collection are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">開始、終了、および区切り文字列を使用して、このコレクションのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、文字列 &lt;code&gt;start&lt;/code&gt; で始まり、文字列 &lt;code&gt;end&lt;/code&gt; で終わります。内部では、このコレクションのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）は、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="0dd15e30f8cb03686743f3eb578504a1487ca496" translate="yes" xml:space="preserve">
          <source>Appends all elements of this collection to a string builder. The written text consists of the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this collection without any separator string.</source>
          <target state="translated">このコレクションのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、セパレーター文字列なしでこのコレクションのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）で構成されます。</target>
        </trans-unit>
        <trans-unit id="5e4ca0cd6d46ca9c20c78db0fdc67666aa5b2dbd" translate="yes" xml:space="preserve">
          <source>Appends all elements of this immutable array to a string builder using start, end, and separator strings. The written text begins with the string &lt;code&gt;start&lt;/code&gt; and ends with the string &lt;code&gt;end&lt;/code&gt;. Inside, the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this immutable array are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">開始、終了、および区切り文字列を使用して、この不変配列のすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、文字列 &lt;code&gt;start&lt;/code&gt; で始まり、文字列 &lt;code&gt;end&lt;/code&gt; で終わります。内部では、この不変配列のすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）は、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="68dcd4864da237695d106b4fcc8d69888493e1d0" translate="yes" xml:space="preserve">
          <source>Appends all elements of this immutable sequence to a string builder using a separator string. The written text consists of the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this immutable sequence, separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">セパレーター文字列を使用して、この不変シーケンスのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、この不変シーケンスのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）で構成され、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られます。</target>
        </trans-unit>
        <trans-unit id="8c49f526cd3c7147dbc9670809f3ac86fcac6083" translate="yes" xml:space="preserve">
          <source>Appends all elements of this immutable sequence to a string builder using start, end, and separator strings. The written text begins with the string &lt;code&gt;start&lt;/code&gt; and ends with the string &lt;code&gt;end&lt;/code&gt;. Inside, the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this immutable sequence are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">開始、終了、および区切り文字列を使用して、この不変シーケンスのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、文字列 &lt;code&gt;start&lt;/code&gt; で始まり、文字列 &lt;code&gt;end&lt;/code&gt; で終わります。内部では、この不変シーケンスのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）は、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="50dc63de6205e82f0176da411c22bbb4e400029c" translate="yes" xml:space="preserve">
          <source>Appends all elements of this immutable sequence to a string builder. The written text consists of the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this immutable sequence without any separator string.</source>
          <target state="translated">この不変シーケンスのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、セパレータ文字列なしのこの不変シーケンスのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）で構成されます。</target>
        </trans-unit>
        <trans-unit id="7cdabe3580aeaa93f7d59409f969e7c1bd9fca48" translate="yes" xml:space="preserve">
          <source>Appends all elements of this iterable collection to a string builder using a separator string. The written text consists of the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this iterable collection, separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">セパレーター文字列を使用して、この反復可能なコレクションのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、この反復可能なコレクションのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）で構成され、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られます。</target>
        </trans-unit>
        <trans-unit id="7ca738dd483442fecd594debcb50ab1f20620897" translate="yes" xml:space="preserve">
          <source>Appends all elements of this iterable collection to a string builder using start, end, and separator strings. The written text begins with the string &lt;code&gt;start&lt;/code&gt; and ends with the string &lt;code&gt;end&lt;/code&gt;. Inside, the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this iterable collection are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">開始、終了、および区切り文字列を使用して、この反復可能なコレクションのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、文字列 &lt;code&gt;start&lt;/code&gt; で始まり、文字列 &lt;code&gt;end&lt;/code&gt; で終わります。内部では、この反復可能なコレクションのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）は、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="5659c8ba54ab60e7ea407d698ba96b6928a6f442" translate="yes" xml:space="preserve">
          <source>Appends all elements of this iterable collection to a string builder. The written text consists of the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this iterable collection without any separator string.</source>
          <target state="translated">この反復可能なコレクションのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、セパレーター文字列なしの、この反復可能なコレクションのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; で作成）で構成されます。</target>
        </trans-unit>
        <trans-unit id="01622ee048fb61fe46f433832925e8af451d33e5" translate="yes" xml:space="preserve">
          <source>Appends all elements of this lazy list to a string builder using start, end, and separator strings. The written text begins with the string &lt;code&gt;start&lt;/code&gt; and ends with the string &lt;code&gt;end&lt;/code&gt;. Inside, the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this lazy list are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">開始、終了、および区切り文字列を使用して、この遅延リストのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、文字列 &lt;code&gt;start&lt;/code&gt; で始まり、文字列 &lt;code&gt;end&lt;/code&gt; で終わります。内部では、この遅延リストのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）は、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="d7ce787dc91df2e333a2bf466ee518ef38a5d915" translate="yes" xml:space="preserve">
          <source>Appends all elements of this map to a string builder using start, end, and separator strings. The written text begins with the string &lt;code&gt;start&lt;/code&gt; and ends with the string &lt;code&gt;end&lt;/code&gt;. Inside, the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this map are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">開始、終了、および区切り文字列を使用して、このマップのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、文字列 &lt;code&gt;start&lt;/code&gt; で始まり、文字列 &lt;code&gt;end&lt;/code&gt; で終わります。内部では、このマップのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）は、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="a39a435a1242177ebabb4397560efc7acfeb8469" translate="yes" xml:space="preserve">
          <source>Appends all elements of this view to a string builder using a separator string. The written text consists of the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this view, separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">セパレーター文字列を使用して、このビューのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、このビューのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）で構成され、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られます。</target>
        </trans-unit>
        <trans-unit id="c05778b7c56ddca0cfae9ff2c2b183d1ce5aa5d6" translate="yes" xml:space="preserve">
          <source>Appends all elements of this view to a string builder using start, end, and separator strings. The written text begins with the string &lt;code&gt;start&lt;/code&gt; and ends with the string &lt;code&gt;end&lt;/code&gt;. Inside, the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this view are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">開始、終了、および区切り文字列を使用して、このビューのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、文字列 &lt;code&gt;start&lt;/code&gt; で始まり、文字列 &lt;code&gt;end&lt;/code&gt; で終わります。内部では、このビューのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）は、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="f01e77c9034c1ffdbd9f265b2c514c8c6ab602b0" translate="yes" xml:space="preserve">
          <source>Appends all elements of this view to a string builder. The written text consists of the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this view without any separator string.</source>
          <target state="translated">このビューのすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、セパレーター文字列なしでこのビューのすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を作成）で構成されます。</target>
        </trans-unit>
        <trans-unit id="9c0a4be616e1733795a139f526683bef9730fdbf" translate="yes" xml:space="preserve">
          <source>Appends all elements of this wrapped array to a string builder using start, end, and separator strings. The written text begins with the string &lt;code&gt;start&lt;/code&gt; and ends with the string &lt;code&gt;end&lt;/code&gt;. Inside, the string representations (w.r.t. the method &lt;code&gt;toString&lt;/code&gt;) of all elements of this wrapped array are separated by the string &lt;code&gt;sep&lt;/code&gt;.</source>
          <target state="translated">開始、終了、および区切り文字列を使用して、このラップされた配列のすべての要素を文字列ビルダーに追加します。書き込まれたテキストは、文字列 &lt;code&gt;start&lt;/code&gt; で始まり、文字列 &lt;code&gt;end&lt;/code&gt; で終わります。内部では、このラップされた配列のすべての要素の文字列表現（メソッド &lt;code&gt;toString&lt;/code&gt; を記述）は、文字列 &lt;code&gt;sep&lt;/code&gt; で区切られています。</target>
        </trans-unit>
        <trans-unit id="4e8cb711caa16133504d907e1c06c72b37ba716b" translate="yes" xml:space="preserve">
          <source>Appends all the Chars in the given Array[Char] to this sequence.</source>
          <target state="translated">Array[Char]に含まれる全ての文字をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="9fcd31870ac5435ced91f279c8b331a826ee362c" translate="yes" xml:space="preserve">
          <source>Appends all the Chars in the given IterableOnce[Char] to this sequence.</source>
          <target state="translated">与えられた IterableOnce[Char]内のすべての文字をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="fbd332cad4f59ae0e264ea6142906630ac1e204c" translate="yes" xml:space="preserve">
          <source>Appends an element to this &lt;code&gt;AnyAccumulator&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;AnyAccumulator&lt;/code&gt; に要素を追加します。</target>
        </trans-unit>
        <trans-unit id="0575c737c8e22bc0849f403fd2b9c377150526b5" translate="yes" xml:space="preserve">
          <source>Appends an element to this &lt;code&gt;DoubleAccumulator&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;DoubleAccumulator&lt;/code&gt; に要素を追加します。</target>
        </trans-unit>
        <trans-unit id="e865fec629e5c37e39de05edac9c4fdf4ee6043e" translate="yes" xml:space="preserve">
          <source>Appends an element to this &lt;code&gt;IntAccumulator&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;IntAccumulator&lt;/code&gt; に要素を追加します。</target>
        </trans-unit>
        <trans-unit id="ee8b12f6297a311bc71d0a7743b516d1c07f48a6" translate="yes" xml:space="preserve">
          <source>Appends an element to this &lt;code&gt;LongAccumulator&lt;/code&gt;.</source>
          <target state="translated">この &lt;code&gt;LongAccumulator&lt;/code&gt; に要素を追加します。</target>
        </trans-unit>
        <trans-unit id="20e8ddbc6257cc20f3c26581b2dba0b2908645ac" translate="yes" xml:space="preserve">
          <source>Appends the elements contained in a iterable object to this buffer.</source>
          <target state="translated">イテレート可能なオブジェクトに含まれる要素をこのバッファに追加します。</target>
        </trans-unit>
        <trans-unit id="7cc4662a9b67630930344557dd738a425ff75caf" translate="yes" xml:space="preserve">
          <source>Appends the given CharSequence to this sequence.</source>
          <target state="translated">与えられた CharSequence をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="650c410b440f5aed9f5dc1830e5192bf7bd10543" translate="yes" xml:space="preserve">
          <source>Appends the given String to this sequence.</source>
          <target state="translated">与えられた文字列をこのシーケンスに追加します。</target>
        </trans-unit>
        <trans-unit id="7bb4a7893694d8065aa669a42f8087d9e07a13d3" translate="yes" xml:space="preserve">
          <source>Appends the given elements to this buffer.</source>
          <target state="translated">与えられた要素をこのバッファに追加します。</target>
        </trans-unit>
        <trans-unit id="57d577420c7660bc63e700ce6048bd29b6fcf45d" translate="yes" xml:space="preserve">
          <source>Appends the output stream of this process to the given file.</source>
          <target state="translated">このプロセスの出力ストリームを指定されたファイルに追加します。</target>
        </trans-unit>
        <trans-unit id="7e940442cb524b1a824939ccb56da6aa620b2b41" translate="yes" xml:space="preserve">
          <source>Appends the string representation of the given argument, which is converted to a String with &lt;code&gt;String.valueOf&lt;/code&gt;.</source>
          <target state="translated">指定された引数の文字列表現を追加します。これは、 &lt;code&gt;String.valueOf&lt;/code&gt; で文字列に変換されます。</target>
        </trans-unit>
        <trans-unit id="5fd2d43a9eb26f88d3c06a70ec93c83d4e7e4c9d" translate="yes" xml:space="preserve">
          <source>Appends this string to a string builder using a separator string.</source>
          <target state="translated">この文字列を、セパレータ文字列を使用して文字列ビルダに追加します。</target>
        </trans-unit>
        <trans-unit id="3a27563a7724f5e50a8b7b7a5b9874cc5c7ae32d" translate="yes" xml:space="preserve">
          <source>Appends this string to a string builder.</source>
          <target state="translated">この文字列を文字列ビルダに追加します。</target>
        </trans-unit>
        <trans-unit id="521723d9f19dfdbb5c1fa79c600eec748a57afec" translate="yes" xml:space="preserve">
          <source>Applies &lt;code&gt;f&lt;/code&gt; to the value for its side effects, and returns the original value.</source>
          <target state="translated">副作用の値に &lt;code&gt;f&lt;/code&gt; を適用し、元の値を返します。</target>
        </trans-unit>
        <trans-unit id="f58d61f5a4ef54a5e36ce4d323d2ab5221fb791d" translate="yes" xml:space="preserve">
          <source>Applies &lt;code&gt;fa&lt;/code&gt; if this is a &lt;code&gt;Failure&lt;/code&gt; or &lt;code&gt;fb&lt;/code&gt; if this is a &lt;code&gt;Success&lt;/code&gt;. If &lt;code&gt;fb&lt;/code&gt; is initially applied and throws an exception, then &lt;code&gt;fa&lt;/code&gt; is applied with this exception.</source>
          <target state="translated">適用 &lt;code&gt;fa&lt;/code&gt; が、これがあれば &lt;code&gt;Failure&lt;/code&gt; や &lt;code&gt;fb&lt;/code&gt; 、これがあれば &lt;code&gt;Success&lt;/code&gt; 。 &lt;code&gt;fb&lt;/code&gt; が最初に適用されて例外がスローされる場合、 &lt;code&gt;fa&lt;/code&gt; はこの例外とともに適用されます。</target>
        </trans-unit>
        <trans-unit id="ff893b082d76bbea506eb8e8efbdc0318b1b095c" translate="yes" xml:space="preserve">
          <source>Applies &lt;code&gt;fa&lt;/code&gt; if this is a &lt;code&gt;Left&lt;/code&gt; or &lt;code&gt;fb&lt;/code&gt; if this is a &lt;code&gt;Right&lt;/code&gt;.</source>
          <target state="translated">適用 &lt;code&gt;fa&lt;/code&gt; が、これがある場合は &lt;code&gt;Left&lt;/code&gt; または &lt;code&gt;fb&lt;/code&gt; これがある場合は &lt;code&gt;Right&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit id="252aae8a78ad84b8c768bdb476bdec0aa1958743" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to a start value and all chars of this string, going left to right.</source>
          <target state="translated">バイナリ演算子を開始値とこの文字列のすべての文字に適用します。</target>
        </trans-unit>
        <trans-unit id="ae7f0fc70cd41dc4202319ee15ebe318dd647229" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to a start value and all elements of this array, going left to right.</source>
          <target state="translated">開始値とこの配列のすべての要素にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="3592063754e7f0e2a9e910db37e8c76b51d29e00" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to a start value and all elements of this collection, going left to right.</source>
          <target state="translated">開始値とこのコレクションのすべての要素にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="4e2307d9e1c2f250a69ba516f9d79b414eb0b7bb" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to a start value and all elements of this immutable sequence, going left to right.</source>
          <target state="translated">開始値とこの不変シーケンスのすべての要素にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="168ddb1f4c59729c4710f3a3126ed1439014f2cd" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to a start value and all elements of this iterable collection, going left to right.</source>
          <target state="translated">バイナリ演算子を開始値とこの反復可能なコレクションのすべての要素に適用します。</target>
        </trans-unit>
        <trans-unit id="bcc4fd427005ff19ac8a5f8c6553274eec12cd6c" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to a start value and all elements of this sequence, going left to right.</source>
          <target state="translated">開始値とこのシーケンスのすべての要素にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="aa0ce61638d110c72cf3833694e603e28a47508e" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to a start value and all elements of this view, going left to right.</source>
          <target state="translated">バイナリ演算子を開始値とこのビューのすべての要素に適用します。</target>
        </trans-unit>
        <trans-unit id="e347aa5854beda8e81407b92013383fa1a355e15" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all chars of this string and a start value, going right to left.</source>
          <target state="translated">この文字列のすべての文字と開始値にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="61aff16574ddb0525c610bbd7184faddf5707947" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this array and a start value, going right to left.</source>
          <target state="translated">この配列のすべての要素と開始値にバイナリ演算子を適用します.</target>
        </trans-unit>
        <trans-unit id="7b620381be9c68c46e2e18f4e41ff161cd17794f" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this collection and a start value, going right to left.</source>
          <target state="translated">このコレクションのすべての要素と開始値にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="d622b0eabc32a51e851bdc49de58c2c49767fd7f" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this collection, going left to right.</source>
          <target state="translated">このコレクションのすべての要素に、左から右に向かってバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="43fb91b4cbe01930824b8d6f60ce7902df550ec7" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this collection, going right to left.</source>
          <target state="translated">このコレクションのすべての要素にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="c6056445be748a0488ff98d186d74570cc95e11e" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this immutable sequence and a start value, going right to left.</source>
          <target state="translated">この不変シーケンスのすべての要素と開始値にバイナリ演算子を適用します.</target>
        </trans-unit>
        <trans-unit id="e3b063e5cae0a6a2757c866a01e3b6b60dff294f" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this immutable sequence, going left to right.</source>
          <target state="translated">この不変シーケンスのすべての要素に対して,左から右に向かってバイナリ演算子を適用します.</target>
        </trans-unit>
        <trans-unit id="b917c55f3571c078251829ba7f692d7f7941b97f" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this immutable sequence, going right to left.</source>
          <target state="translated">この不変シーケンスのすべての要素に,右から左へのバイナリ演算子を適用します.</target>
        </trans-unit>
        <trans-unit id="d9eed6fcd687924cbe9a6bf2574c168600978547" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this iterable collection and a start value, going right to left.</source>
          <target state="translated">この反復可能なコレクションのすべての要素と開始値にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="32e8e39cd2168d18afb842e1d93176d5de9c1a88" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this iterable collection, going left to right.</source>
          <target state="translated">この反復可能なコレクションのすべての要素にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="6ef714bea354298450e2c756e256e7d3a0c50a6e" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this iterable collection, going right to left.</source>
          <target state="translated">この反復可能なコレクションのすべての要素にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="db9f0b1fa217cc905a79c579f91f8222c10fe685" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this list and a start value, going right to left.</source>
          <target state="translated">このリストのすべての要素と開始値にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="649e03e60704abce95baa33c91deaf946ad0bf0c" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this view and a start value, going right to left.</source>
          <target state="translated">このビューのすべての要素と開始値にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="95a0da405866a0f190faeb34a1a61e33c30a8059" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this view, going left to right.</source>
          <target state="translated">このビューのすべての要素にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="b491c3abfc30316249130f06c085c3ab0d426d45" translate="yes" xml:space="preserve">
          <source>Applies a binary operator to all elements of this view, going right to left.</source>
          <target state="translated">このビューのすべての要素にバイナリ演算子を適用します。</target>
        </trans-unit>
        <trans-unit id="a378fbf34d6c57d72e9562c1424ed1421b0549bd" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to all elements of the &lt;code&gt;filtered&lt;/code&gt; outer collection.</source>
          <target state="translated">&lt;code&gt;filtered&lt;/code&gt; 外部コレクションのすべての要素に関数 &lt;code&gt;f&lt;/code&gt; を適用します。</target>
        </trans-unit>
        <trans-unit id="2029043d23bbeae41f2e963778106b3c64e4d16f" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to each character of the string and returns a pair of strings: the first one made of those characters returned by &lt;code&gt;f&lt;/code&gt; that were wrapped in &lt;a href=&quot;../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;, and the second one made of those wrapped in &lt;a href=&quot;../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt;.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; を文字列の各文字に適用し、文字列のペアを返します。最初の文字列は &lt;code&gt;f&lt;/code&gt; によって返された文字で構成され、&lt;a href=&quot;../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;でラップされ、2番目の文字列はscala.utilでラップされた文字列で構成され&lt;a href=&quot;../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;ます。そうですね&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="15f8d047e85ee4992369006aab6abdd64879e0c4" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to each element of the array and returns a pair of arrays: the first one made of those values returned by &lt;code&gt;f&lt;/code&gt; that were wrapped in &lt;a href=&quot;../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;, and the second one made of those wrapped in &lt;a href=&quot;../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt;.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; を配列の各要素に適用し、配列のペアを返します。最初の配列は &lt;code&gt;f&lt;/code&gt; によって返された値で構成され、&lt;a href=&quot;../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;でラップされ、2番目の配列はscala.utilでラップされたもので構成され&lt;a href=&quot;../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;ます。そうですね&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="dc56d364cb0e7e3e2178cbde89bf0bff41754bd0" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to each element of the array and returns a pair of arrays: the first one made of those values returned by &lt;code&gt;f&lt;/code&gt; that were wrapped in &lt;a href=&quot;util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;, and the second one made of those wrapped in &lt;a href=&quot;util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt;.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; を配列の各要素に適用し、配列のペアを返します。最初の配列は &lt;code&gt;f&lt;/code&gt; によって返された値で構成され、&lt;a href=&quot;util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;でラップされ、2番目の配列はscala.utilでラップされたもので構成され&lt;a href=&quot;util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;ます。そうですね&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="cb64e654584a43bc7c97d364590af004ec325f5d" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to each element of the immutable sequence and returns a pair of immutable sequences: the first one made of those values returned by &lt;code&gt;f&lt;/code&gt; that were wrapped in &lt;a href=&quot;util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;, and the second one made of those wrapped in &lt;a href=&quot;util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt;.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; を不変シーケンスの各要素に適用し、不変シーケンスのペアを返します。最初のシーケンスは、 &lt;code&gt;f&lt;/code&gt; によって返された値で構成され、&lt;a href=&quot;util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;でラップされ、2番目のシーケンスはscalaでラップされたシーケンスで構成され&lt;a href=&quot;util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;ます。 util.Right&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="982f19473381d978ba3ecca1c989089c1203ce86" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to each element of the iterable collection and returns a pair of iterable collections: the first one made of those values returned by &lt;code&gt;f&lt;/code&gt; that were wrapped in &lt;a href=&quot;../../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;, and the second one made of those wrapped in &lt;a href=&quot;../../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt;.</source>
          <target state="translated">反復可能なコレクションの各要素に関数 &lt;code&gt;f&lt;/code&gt; を適用し、反復可能なコレクションのペアを返します。最初のコレクションは&lt;a href=&quot;../../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;でラップされた &lt;code&gt;f&lt;/code&gt; によって返された値で構成され、2番目のコレクションは&lt;a href=&quot;../../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scalaで&lt;/a&gt;ラップされたそれらで構成されます。 util.Right。</target>
        </trans-unit>
        <trans-unit id="1685df688e36e0665351b6fc0d3cb9068ef42a5f" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to each element of the iterable collection and returns a pair of iterable collections: the first one made of those values returned by &lt;code&gt;f&lt;/code&gt; that were wrapped in &lt;a href=&quot;../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;, and the second one made of those wrapped in &lt;a href=&quot;../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt;.</source>
          <target state="translated">反復可能なコレクションの各要素に関数 &lt;code&gt;f&lt;/code&gt; を適用し、反復可能なコレクションのペアを返します。最初のコレクションは&lt;a href=&quot;../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;でラップされた &lt;code&gt;f&lt;/code&gt; によって返された値で構成され、2番目のコレクションは&lt;a href=&quot;../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scalaで&lt;/a&gt;ラップされたそれらで構成されます。 util.Right。</target>
        </trans-unit>
        <trans-unit id="d5018a240fe57976567859217a5855ec8a7dbf1f" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to each element of the iterable collection and returns a pair of iterable collections: the first one made of those values returned by &lt;code&gt;f&lt;/code&gt; that were wrapped in &lt;a href=&quot;util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;, and the second one made of those wrapped in &lt;a href=&quot;util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt;.</source>
          <target state="translated">反復可能なコレクションの各要素に関数 &lt;code&gt;f&lt;/code&gt; を適用し、反復可能なコレクションのペアを返します。最初のコレクションは&lt;a href=&quot;util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;でラップされた &lt;code&gt;f&lt;/code&gt; によって返された値で構成され、2番目のコレクションは&lt;a href=&quot;util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scalaで&lt;/a&gt;ラップされたそれらで構成されます。 util.Right。</target>
        </trans-unit>
        <trans-unit id="971093519e72d62be2b10a6f524c21b1fad2ac42" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to each element of the lazy list and returns a pair of lazy lists: the first one made of those values returned by &lt;code&gt;f&lt;/code&gt; that were wrapped in &lt;a href=&quot;../../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;, and the second one made of those wrapped in &lt;a href=&quot;../../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt;.</source>
          <target state="translated">レイジーリストの各要素に関数 &lt;code&gt;f&lt;/code&gt; を適用し、レイジーリストのペアを返します。最初のリストは &lt;code&gt;f&lt;/code&gt; によって返された値で構成され、&lt;a href=&quot;../../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;でラップされ、2番目のリストはscalaでラップされたリストで構成され&lt;a href=&quot;../../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;ます。 util.Right&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="33503f85fd4505b865eb9ecb45f6e5d2a6b75c00" translate="yes" xml:space="preserve">
          <source>Applies a function &lt;code&gt;f&lt;/code&gt; to each element of the view and returns a pair of views: the first one made of those values returned by &lt;code&gt;f&lt;/code&gt; that were wrapped in &lt;a href=&quot;../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;, and the second one made of those wrapped in &lt;a href=&quot;../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;scala.util.Right&lt;/a&gt;.</source>
          <target state="translated">関数 &lt;code&gt;f&lt;/code&gt; をビューの各要素に適用し、ビューのペアを返します。最初のビューは、 &lt;code&gt;f&lt;/code&gt; によって返された&lt;a href=&quot;../util/left&quot; id=&quot;scala.util.Left&quot; name=&quot;scala.util.Left&quot;&gt;scala.util.Left&lt;/a&gt;でラップされた値で構成され、2番目のビューはscala.utilでラップされたビューで構成され&lt;a href=&quot;../util/right&quot; id=&quot;scala.util.Right&quot; name=&quot;scala.util.Right&quot;&gt;ます。そうですね&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit id="118468753d88a93e314e2c827d7c3e023c8ef33b" translate="yes" xml:space="preserve">
          <source>Applies a side-effecting function to each element in this collection. Strict collections will apply &lt;code&gt;f&lt;/code&gt; to their elements immediately, while lazy collections like Views and LazyLists will only apply &lt;code&gt;f&lt;/code&gt; on each element if and when that element is evaluated, and each time that element is evaluated.</source>
          <target state="translated">このコレクションの各要素に副作用関数を適用します。厳密なコレクションは &lt;code&gt;f&lt;/code&gt; をその要素にすぐに適用しますが、ViewsやLazyListsなどの遅延コレクションは、その要素が評価される場合、およびその要素が評価されるたびに、各要素にのみ &lt;code&gt;f&lt;/code&gt; を適用します。</target>
        </trans-unit>
        <trans-unit id="e35b001ec22d5a6060cc9c240669fdc7d340e226" translate="yes" xml:space="preserve">
          <source>Applies a transformation function to all values contained in this map. The transformation function produces new values from existing keys associated values.</source>
          <target state="translated">このマップに含まれるすべての値に変換関数を適用します。変換関数は、既存のキーに関連付けられた値から新しい値を生成します。</target>
        </trans-unit>
        <trans-unit id="bc40fc4c8b900a181511c4690494499b5d166839" translate="yes" xml:space="preserve">
          <source>Applies a transformation function to all values stored in this map. Note: the default, if any, is not transformed.</source>
          <target state="translated">このマップに格納されているすべての値に変換関数を適用します。注意:既定値がある場合は、変換されません。</target>
        </trans-unit>
        <trans-unit id="7722da3622ebedb2d5b83961f83f328116159f66" translate="yes" xml:space="preserve">
          <source>Applies the given function &lt;code&gt;f&lt;/code&gt; if this is a &lt;code&gt;Failure&lt;/code&gt;, otherwise returns this if this is a &lt;code&gt;Success&lt;/code&gt;. This is like &lt;code&gt;flatMap&lt;/code&gt; for the exception.</source>
          <target state="translated">これが &lt;code&gt;Failure&lt;/code&gt; 場合、指定された関数 &lt;code&gt;f&lt;/code&gt; を適用します。それ以外の場合、これが &lt;code&gt;Success&lt;/code&gt; 場合、これを返します。例外は、これは &lt;code&gt;flatMap&lt;/code&gt; に似ています。</target>
        </trans-unit>
        <trans-unit id="fac02be4bfd9f1d4f568f16e48050cc990093a86" translate="yes" xml:space="preserve">
          <source>Applies the given function &lt;code&gt;f&lt;/code&gt; if this is a &lt;code&gt;Failure&lt;/code&gt;, otherwise returns this if this is a &lt;code&gt;Success&lt;/code&gt;. This is like map for the exception.</source>
          <target state="translated">これが &lt;code&gt;Failure&lt;/code&gt; 場合、指定された関数 &lt;code&gt;f&lt;/code&gt; を適用します。それ以外の場合、これが &lt;code&gt;Success&lt;/code&gt; 場合、これを返します。これは例外のマップのようなものです。</target>
        </trans-unit>
        <trans-unit id="288b4c413bd596cec98cb5fa827160c21599498d" translate="yes" xml:space="preserve">
          <source>Applies the given function &lt;code&gt;f&lt;/code&gt; if this is a &lt;code&gt;Success&lt;/code&gt;, otherwise returns &lt;code&gt;Unit&lt;/code&gt; if this is a &lt;code&gt;Failure&lt;/code&gt;.</source>
          <target state="translated">これが &lt;code&gt;Success&lt;/code&gt; 場合、指定された関数 &lt;code&gt;f&lt;/code&gt; を適用します。それ以外の場合、これが &lt;code&gt;Failure&lt;/code&gt; 場合、 &lt;code&gt;Unit&lt;/code&gt; を返します。</target>
        </trans-unit>
        <trans-unit id="842c9602ac49105f8e852edca897bd423468241b" translate="yes" xml:space="preserve">
          <source>Applies the given partial function to the value from this &lt;code&gt;Success&lt;/code&gt; or returns this if this is a &lt;code&gt;Failure&lt;/code&gt;.</source>
          <target state="translated">指定された部分関数をこの &lt;code&gt;Success&lt;/code&gt; の値に適用するか、これが &lt;code&gt;Failure&lt;/code&gt; の場合はこれを返します。</target>
        </trans-unit>
        <trans-unit id="25fa34e68d1acba70e10d156e2395171d4c77a3d" translate="yes" xml:space="preserve">
          <source>Applies the side-effecting function to the result of this future, and returns a new future with the result of this future.</source>
          <target state="translated">この未来の結果に副作用関数を適用し、この未来の結果で新しい未来を返します。</target>
        </trans-unit>
        <trans-unit id="a8e95dae06a16ab05d7b788c1b5ec830d694ea38" translate="yes" xml:space="preserve">
          <source>Applies this partial function to the given argument when it is contained in the function domain. Applies fallback function where this partial function is not defined.</source>
          <target state="translated">この部分関数が関数ドメインに含まれている場合に、与えられた引数に適用します。この部分関数が定義されていない場合、フォールバック関数を適用します。</target>
        </trans-unit>
        <trans-unit id="69130d3794c2846e8139676b7bf8177712dfe879" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;f&lt;/code&gt; to each element for its side effects Note: [U] parameter needed to help scalac's type inference.</source>
          <target state="translated">副作用のために各要素に &lt;code&gt;f&lt;/code&gt; を適用します注：[U]パラメータはscalacの型推論に役立ちます。</target>
        </trans-unit>
        <trans-unit id="217614bc7c67833a55094c416fad4c9828c99d33" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;f&lt;/code&gt; to each element for its side effects. Note: [U] parameter needed to help scalac's type inference.</source>
          <target state="translated">副作用のために各要素に &lt;code&gt;f&lt;/code&gt; を適用します。注：scalacの型推論を支援するために必要な[U]パラメータ。</target>
        </trans-unit>
        <trans-unit id="1fe329e7c7214ed5c13489206c8d58ce4595a1ec" translate="yes" xml:space="preserve">
          <source>Apply &lt;code&gt;f&lt;/code&gt; to each key/value pair for its side effects Note: [U] parameter needed to help scalac's type inference.</source>
          <target state="translated">副作用のために各キー/値のペアに &lt;code&gt;f&lt;/code&gt; を適用します。注：scalacの型推論に役立つ[U]パラメータが必要です。</target>
        </trans-unit>
        <trans-unit id="8327d4c6bb097ec334b4b158442311706bce55e5" translate="yes" xml:space="preserve">
          <source>Apply the body of this function to the argument.</source>
          <target state="translated">この関数の本体を引数に適用します。</target>
        </trans-unit>
        <trans-unit id="d50e6b7c76599799ecfa5fbc35cc495b378cbd3d" translate="yes" xml:space="preserve">
          <source>Apply the body of this function to the arguments.</source>
          <target state="translated">この関数のボディを引数に適用します。</target>
        </trans-unit>
        <trans-unit id="3ef933d580711ad660b347cb257bd36b157f0a69" translate="yes" xml:space="preserve">
          <source>Apply the given function &lt;code&gt;f&lt;/code&gt; to each element of this linear sequence (while respecting the order of the elements).</source>
          <target state="translated">与えられた関数 &lt;code&gt;f&lt;/code&gt; を（要素の順序を尊重しながら）この線形シーケンスの各要素に適用します。</target>
        </trans-unit>
        <trans-unit id="8b76a81e0dbdfe7cbf30341948f0d5caa2fc9a32" translate="yes" xml:space="preserve">
          <source>Apply the given procedure &lt;code&gt;f&lt;/code&gt; to the option's value, if it is nonempty. Otherwise, do nothing.</source>
          <target state="translated">オプションの値が空でない場合は、指定された手順 &lt;code&gt;f&lt;/code&gt; をオプションの値に適用します。それ以外の場合は、何もしません。</target>
        </trans-unit>
        <trans-unit id="b09f9d22b23ee3286544fea32caa4f49d484b66b" translate="yes" xml:space="preserve">
          <source>Are the elements of this collection the same (and in the same order) as those of &lt;code&gt;that&lt;/code&gt;?</source>
          <target state="translated">このコレクションの要素は、のと同じ（と同じ順序で）している &lt;code&gt;that&lt;/code&gt; ？</target>
        </trans-unit>
        <trans-unit id="107004472b7ba4e5e31f3082ee1fb5a1239eec61" translate="yes" xml:space="preserve">
          <source>Array</source>
          <target state="translated">Array</target>
        </trans-unit>
        <trans-unit id="5002c38d4a72cae2327f68cd4fa448ebad581d84" translate="yes" xml:space="preserve">
          <source>Array$</source>
          <target state="translated">Array$</target>
        </trans-unit>
        <trans-unit id="0b67270f383276b2981ab3496f2c3fd39dbc3ad1" translate="yes" xml:space="preserve">
          <source>Array$.UnapplySeqWrapper</source>
          <target state="translated">Array$.UnapplySeqWrapper</target>
        </trans-unit>
        <trans-unit id="c8ed27156aa10171f5ce00874b2931c3764d4409" translate="yes" xml:space="preserve">
          <source>Array$.UnapplySeqWrapper()</source>
          <target state="translated">Array$.UnapplySeqWrapper()</target>
        </trans-unit>
        <trans-unit id="61246d18d6b742db60c31f860a12b6701e0bb904" translate="yes" xml:space="preserve">
          <source>Array$.UnapplySeqWrapper.UnapplySeqWrapper()</source>
          <target state="translated">Array$.UnapplySeqWrapper.UnapplySeqWrapper()</target>
        </trans-unit>
        <trans-unit id="aeb2468aa28c7e7808413b94f5458535ef0323ea" translate="yes" xml:space="preserve">
          <source>Array$.UnapplySeqWrapper.apply()</source>
          <target state="translated">Array$.UnapplySeqWrapper.apply()</target>
        </trans-unit>
        <trans-unit id="f10e6dcf8fe81d411f93127dd253c28ad08289a3" translate="yes" xml:space="preserve">
          <source>Array$.UnapplySeqWrapper.drop()</source>
          <target state="translated">Array$.UnapplySeqWrapper.drop()</target>
        </trans-unit>
        <trans-unit id="ecc179a370498f761e8b240bb96338fbd6562f6a" translate="yes" xml:space="preserve">
          <source>Array$.UnapplySeqWrapper.get()</source>
          <target state="translated">Array$.UnapplySeqWrapper.get()</target>
        </trans-unit>
        <trans-unit id="0bf54562e92966f7e0717797cbfea7afa5c883a6" translate="yes" xml:space="preserve">
          <source>Array$.UnapplySeqWrapper.isEmpty()</source>
          <target state="translated">Array$.UnapplySeqWrapper.isEmpty()</target>
        </trans-unit>
        <trans-unit id="e5237dc5757c246df5755936774c0ed387cfc30b" translate="yes" xml:space="preserve">
          <source>Array$.UnapplySeqWrapper.lengthCompare()</source>
          <target state="translated">Array$.UnapplySeqWrapper.lengthCompare()</target>
        </trans-unit>
        <trans-unit id="1f7eff938b90cae4242ffbf38f17340519ebd463" translate="yes" xml:space="preserve">
          <source>Array$.UnapplySeqWrapper.toSeq()</source>
          <target state="translated">Array$.UnapplySeqWrapper.toSeq()</target>
        </trans-unit>
        <trans-unit id="bcbe219d783a08fb7a84eccfbf8b50dfde697277" translate="yes" xml:space="preserve">
          <source>Array$.apply()</source>
          <target state="translated">Array$.apply()</target>
        </trans-unit>
        <trans-unit id="9bc3635f0cc4bcd82fa1f90baf2dbb18b684b554" translate="yes" xml:space="preserve">
          <source>Array$.concat()</source>
          <target state="translated">Array$.concat()</target>
        </trans-unit>
        <trans-unit id="95ade0ca223557165131792dca4aade1568163ed" translate="yes" xml:space="preserve">
          <source>Array$.copy()</source>
          <target state="translated">Array$.copy()</target>
        </trans-unit>
        <trans-unit id="9071ea38061a3b61342ff3171db6b6d1ce534774" translate="yes" xml:space="preserve">
          <source>Array$.copyAs()</source>
          <target state="translated">Array$.copyAs()</target>
        </trans-unit>
        <trans-unit id="8f6b53325edf693cd8da8cb7c1babbc8c22ad89f" translate="yes" xml:space="preserve">
          <source>Array$.copyOf()</source>
          <target state="translated">Array$.copyOf()</target>
        </trans-unit>
        <trans-unit id="c84d3f45dc3dcfa97ae82fce667a00783c2b159b" translate="yes" xml:space="preserve">
          <source>Array$.empty()</source>
          <target state="translated">Array$.empty()</target>
        </trans-unit>
        <trans-unit id="11c5a534d198d889c65dcdd7f7a8d4de3e6c180f" translate="yes" xml:space="preserve">
          <source>Array$.emptyBooleanArray()</source>
          <target state="translated">Array$.emptyBooleanArray()</target>
        </trans-unit>
        <trans-unit id="2cd486b5140d9f101bb3c403afa7776a3affe824" translate="yes" xml:space="preserve">
          <source>Array$.emptyByteArray()</source>
          <target state="translated">Array$.emptyByteArray()</target>
        </trans-unit>
        <trans-unit id="0261e18a3554535ad208c0a874ca2d7ea7c9e75d" translate="yes" xml:space="preserve">
          <source>Array$.emptyCharArray()</source>
          <target state="translated">Array$.emptyCharArray()</target>
        </trans-unit>
        <trans-unit id="af71f5f35c5848d7654007ec2d5a8daafecf7c85" translate="yes" xml:space="preserve">
          <source>Array$.emptyDoubleArray()</source>
          <target state="translated">Array$.emptyDoubleArray()</target>
        </trans-unit>
        <trans-unit id="6f3c62d8278d1b9b0020f35e34694a58ccc384f2" translate="yes" xml:space="preserve">
          <source>Array$.emptyFloatArray()</source>
          <target state="translated">Array$.emptyFloatArray()</target>
        </trans-unit>
        <trans-unit id="fdd67b785d50429bdcef24455708013af60a1c21" translate="yes" xml:space="preserve">
          <source>Array$.emptyIntArray()</source>
          <target state="translated">Array$.emptyIntArray()</target>
        </trans-unit>
        <trans-unit id="b1b391e3002672e835dfe1f41648cd2bb3dab9fa" translate="yes" xml:space="preserve">
          <source>Array$.emptyLongArray()</source>
          <target state="translated">Array$.emptyLongArray()</target>
        </trans-unit>
        <trans-unit id="d612768f835bc423c1e95a2858da0e80de1e975a" translate="yes" xml:space="preserve">
          <source>Array$.emptyObjectArray()</source>
          <target state="translated">Array$.emptyObjectArray()</target>
        </trans-unit>
        <trans-unit id="2b84180816fb0f62ea6da0eca69d7cfd1712d341" translate="yes" xml:space="preserve">
          <source>Array$.emptyShortArray()</source>
          <target state="translated">Array$.emptyShortArray()</target>
        </trans-unit>
        <trans-unit id="922c589468c1348019fe1fd18530d86947b97c05" translate="yes" xml:space="preserve">
          <source>Array$.equals()</source>
          <target state="translated">Array$.equals()</target>
        </trans-unit>
        <trans-unit id="8db44be1fb28663eda6d873058285f9a41f4829f" translate="yes" xml:space="preserve">
          <source>Array$.fill()</source>
          <target state="translated">Array$.fill()</target>
        </trans-unit>
        <trans-unit id="57810227084123b7f6a3139f66084f648e584274" translate="yes" xml:space="preserve">
          <source>Array$.from()</source>
          <target state="translated">Array$.from()</target>
        </trans-unit>
        <trans-unit id="dc2b0fbf10b63e47a42fb75c6e274e657d0274bb" translate="yes" xml:space="preserve">
          <source>Array$.iterate()</source>
          <target state="translated">Array$.iterate()</target>
        </trans-unit>
        <trans-unit id="64eaac072bc429045cc87618f4623fb04daa4b05" translate="yes" xml:space="preserve">
          <source>Array$.newBuilder()</source>
          <target state="translated">Array$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="29e199d52f4fb829444e85be2005eec21991d46b" translate="yes" xml:space="preserve">
          <source>Array$.ofDim()</source>
          <target state="translated">Array$.ofDim()</target>
        </trans-unit>
        <trans-unit id="b34132669822d1b0bebc99815ba68d793be5b5ac" translate="yes" xml:space="preserve">
          <source>Array$.range()</source>
          <target state="translated">Array$.range()</target>
        </trans-unit>
        <trans-unit id="0ae50483b9c0b2d4b0146146c560607db3aa4340" translate="yes" xml:space="preserve">
          <source>Array$.tabulate()</source>
          <target state="translated">Array$.tabulate()</target>
        </trans-unit>
        <trans-unit id="f6a5d4c2f1491d17f61aad30a2f0db46d994693d" translate="yes" xml:space="preserve">
          <source>Array$.toFactory()</source>
          <target state="translated">Array$.toFactory()</target>
        </trans-unit>
        <trans-unit id="aeab8487a3725c84e9d56084955b350aeba3d1a0" translate="yes" xml:space="preserve">
          <source>Array$.unapplySeq()</source>
          <target state="translated">Array$.unapplySeq()</target>
        </trans-unit>
        <trans-unit id="9c04f7280bee59874ab38303ffa7e4018d4dfddd" translate="yes" xml:space="preserve">
          <source>Array.Array()</source>
          <target state="translated">Array.Array()</target>
        </trans-unit>
        <trans-unit id="4635f333d737fdd52bb7ca2f91ea1b98db383fb4" translate="yes" xml:space="preserve">
          <source>Array.apply()</source>
          <target state="translated">Array.apply()</target>
        </trans-unit>
        <trans-unit id="6c504e48951547f0d21aa34b7d6f62c059939ca4" translate="yes" xml:space="preserve">
          <source>Array.clone()</source>
          <target state="translated">Array.clone()</target>
        </trans-unit>
        <trans-unit id="6173ad9d504929ee884f6377c595ad6f78566037" translate="yes" xml:space="preserve">
          <source>Array.length()</source>
          <target state="translated">Array.length()</target>
        </trans-unit>
        <trans-unit id="1ccabc74e1bf104b5618d646b0ddd70b1f3a8418" translate="yes" xml:space="preserve">
          <source>Array.scala</source>
          <target state="translated">Array.scala</target>
        </trans-unit>
        <trans-unit id="0a83acedc5f79c27dcf1380ba16975dda793f81a" translate="yes" xml:space="preserve">
          <source>Array.update()</source>
          <target state="translated">Array.update()</target>
        </trans-unit>
        <trans-unit id="95971ea269213b08d09c9553e6421bde178a5ca7" translate="yes" xml:space="preserve">
          <source>ArrayBuffer</source>
          <target state="translated">ArrayBuffer</target>
        </trans-unit>
        <trans-unit id="33ece93f11cdbfaa1c7f2e8221f7e3bc944e3561" translate="yes" xml:space="preserve">
          <source>ArrayBuffer$</source>
          <target state="translated">ArrayBuffer$</target>
        </trans-unit>
        <trans-unit id="4208572370e00570caa0ff31d545d36ed14128ff" translate="yes" xml:space="preserve">
          <source>ArrayBuffer$.DefaultInitialSize()</source>
          <target state="translated">ArrayBuffer$.DefaultInitialSize()</target>
        </trans-unit>
        <trans-unit id="c583a1d29fc78222dab9514763df3c70ccf6ae9c" translate="yes" xml:space="preserve">
          <source>ArrayBuffer$.empty()</source>
          <target state="translated">ArrayBuffer$.empty()</target>
        </trans-unit>
        <trans-unit id="b340a81119a1eceb51da6e1e2a79e8be191c9364" translate="yes" xml:space="preserve">
          <source>ArrayBuffer$.from()</source>
          <target state="translated">ArrayBuffer$.from()</target>
        </trans-unit>
        <trans-unit id="fe200647e06f5b1c7079c789ca4ea1a587d76ab3" translate="yes" xml:space="preserve">
          <source>ArrayBuffer$.newBuilder()</source>
          <target state="translated">ArrayBuffer$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="1cf3281b4d61bc9c802367c1c39ce09f2f5f37a7" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.ArrayBuffer()</source>
          <target state="translated">ArrayBuffer.ArrayBuffer()</target>
        </trans-unit>
        <trans-unit id="56d3aa082d586f4fd25a27d2c3dddde2ec56db6d" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.addAll()</source>
          <target state="translated">ArrayBuffer.addAll()</target>
        </trans-unit>
        <trans-unit id="97d97ccb767208d525974ffbc7df7037cef5053f" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.addOne()</source>
          <target state="translated">ArrayBuffer.addOne()</target>
        </trans-unit>
        <trans-unit id="b2b9c8cdb571e695c34e37fabcbc95397beb60be" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.apply()</source>
          <target state="translated">ArrayBuffer.apply()</target>
        </trans-unit>
        <trans-unit id="bb00672ea837b8fe634899af1356700eabd5fce1" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.array()</source>
          <target state="translated">ArrayBuffer.array()</target>
        </trans-unit>
        <trans-unit id="c31503c1f0a8f9bdfef482a6f2b4adcb6a864f8a" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.clear()</source>
          <target state="translated">ArrayBuffer.clear()</target>
        </trans-unit>
        <trans-unit id="071dc588bcc3fc54cadc4ba1874de2efeac440fe" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.clearAndShrink()</source>
          <target state="translated">ArrayBuffer.clearAndShrink()</target>
        </trans-unit>
        <trans-unit id="2444a0a06b883a36c1a48f1f07f615decb871f60" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.copyToArray()</source>
          <target state="translated">ArrayBuffer.copyToArray()</target>
        </trans-unit>
        <trans-unit id="724e98714814431565e62b5d32295699ccb5bf0e" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.ensureSize()</source>
          <target state="translated">ArrayBuffer.ensureSize()</target>
        </trans-unit>
        <trans-unit id="3ec25686816bff199a9a551cd10d8961af9bb309" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.insert()</source>
          <target state="translated">ArrayBuffer.insert()</target>
        </trans-unit>
        <trans-unit id="0b66eb9286bf15c89720a2a8db89954020724aeb" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.insertAll()</source>
          <target state="translated">ArrayBuffer.insertAll()</target>
        </trans-unit>
        <trans-unit id="017392afd434f4c3a6910667f144916cea26e98f" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.iterableFactory()</source>
          <target state="translated">ArrayBuffer.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="3ad7cb3722f51afca970b3727868afa59e47487a" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.knownSize()</source>
          <target state="translated">ArrayBuffer.knownSize()</target>
        </trans-unit>
        <trans-unit id="adc892f0221c9016fe43a8104be485d8f143a2db" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.length()</source>
          <target state="translated">ArrayBuffer.length()</target>
        </trans-unit>
        <trans-unit id="df266aa33f32f7b541674df0b456d7b1b4a11a30" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.prepend()</source>
          <target state="translated">ArrayBuffer.prepend()</target>
        </trans-unit>
        <trans-unit id="7a3ce34ae4b7aa55a7f3411761e9f48b37df208d" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.remove()</source>
          <target state="translated">ArrayBuffer.remove()</target>
        </trans-unit>
        <trans-unit id="12fdee0b2cb08a965eca2d71c660d9a3b853dc60" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.scala</source>
          <target state="translated">ArrayBuffer.scala</target>
        </trans-unit>
        <trans-unit id="ce90041dcc7ea52de744611af134e119d0004a96" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.size0()</source>
          <target state="translated">ArrayBuffer.size0()</target>
        </trans-unit>
        <trans-unit id="818f108e8509abd31136859e0e8a06fc4e18c186" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.sizeHint()</source>
          <target state="translated">ArrayBuffer.sizeHint()</target>
        </trans-unit>
        <trans-unit id="fb150b4fb38e491694131cd00bfe8592e5fe1c2d" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.sortInPlace()</source>
          <target state="translated">ArrayBuffer.sortInPlace()</target>
        </trans-unit>
        <trans-unit id="a21ee5d0058dfd2c8c3d131a342c8a4bc223dd7f" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.stepper()</source>
          <target state="translated">ArrayBuffer.stepper()</target>
        </trans-unit>
        <trans-unit id="553584bed01833176b25229e90177b44b8f4f03d" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.stringPrefix()</source>
          <target state="translated">ArrayBuffer.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="d44978a67814a16e4471096861a15e93dd7c107d" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.trimToSize()</source>
          <target state="translated">ArrayBuffer.trimToSize()</target>
        </trans-unit>
        <trans-unit id="b7421eecbb9a795226868c0354b52c5c0b8de094" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.update()</source>
          <target state="translated">ArrayBuffer.update()</target>
        </trans-unit>
        <trans-unit id="d9b21a7174d9f12fba3bb5d4a979cb442eff5ea2" translate="yes" xml:space="preserve">
          <source>ArrayBuffer.view()</source>
          <target state="translated">ArrayBuffer.view()</target>
        </trans-unit>
        <trans-unit id="344ca1bae01f225dce43a257eecb7eef13159726" translate="yes" xml:space="preserve">
          <source>ArrayBufferView</source>
          <target state="translated">ArrayBufferView</target>
        </trans-unit>
        <trans-unit id="c0ce0a27ba98307ddc9cc2d60c2544c3dc10c34b" translate="yes" xml:space="preserve">
          <source>ArrayBufferView.ArrayBufferView()</source>
          <target state="translated">ArrayBufferView.ArrayBufferView()</target>
        </trans-unit>
        <trans-unit id="5bec6d182809738ee456710318c394f38faae9dc" translate="yes" xml:space="preserve">
          <source>ArrayBufferView.apply()</source>
          <target state="translated">ArrayBufferView.apply()</target>
        </trans-unit>
        <trans-unit id="658c408abebb65b941bff049daa4259e7594654f" translate="yes" xml:space="preserve">
          <source>ArrayBufferView.array()</source>
          <target state="translated">ArrayBufferView.array()</target>
        </trans-unit>
        <trans-unit id="5e101b9bc65bbae05a797063cba066a04cb615f5" translate="yes" xml:space="preserve">
          <source>ArrayBufferView.className()</source>
          <target state="translated">ArrayBufferView.className()</target>
        </trans-unit>
        <trans-unit id="4d44c687f19ffa47adad1456c55a2386126c76fa" translate="yes" xml:space="preserve">
          <source>ArrayBufferView.length()</source>
          <target state="translated">ArrayBufferView.length()</target>
        </trans-unit>
        <trans-unit id="0ca7addbfeecd56d18506600010ff318c8114146" translate="yes" xml:space="preserve">
          <source>ArrayBuilder</source>
          <target state="translated">ArrayBuilder</target>
        </trans-unit>
        <trans-unit id="6964e89521da5240598fb1815cc3ca4716b69b8d" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$</source>
          <target state="translated">ArrayBuilder$</target>
        </trans-unit>
        <trans-unit id="a3135acb7aa631ddb749c09bc4b208f5b788dc55" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.make()</source>
          <target state="translated">ArrayBuilder$.make()</target>
        </trans-unit>
        <trans-unit id="337edad83dfe7e23f94d947c82ca51458bc820c3" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofBoolean</source>
          <target state="translated">ArrayBuilder$.ofBoolean</target>
        </trans-unit>
        <trans-unit id="c29df7d58c95d7c4afc3334043b7c6cdd38ada63" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofBoolean()</source>
          <target state="translated">ArrayBuilder$.ofBoolean()</target>
        </trans-unit>
        <trans-unit id="476801e4ee880c989152fc62d74e5fa4336396c1" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofBoolean.addOne()</source>
          <target state="translated">ArrayBuilder$.ofBoolean.addOne()</target>
        </trans-unit>
        <trans-unit id="2bf101f8fc301d52a7a2be6cc2889c6d493701c1" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofBoolean.elems()</source>
          <target state="translated">ArrayBuilder$.ofBoolean.elems()</target>
        </trans-unit>
        <trans-unit id="883b8243d98e91aa2da757982f2c0be2547ef29b" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofBoolean.equals()</source>
          <target state="translated">ArrayBuilder$.ofBoolean.equals()</target>
        </trans-unit>
        <trans-unit id="fc927e13c165c66c8a47ad0e3618e0a75c34d75a" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofBoolean.ofBoolean()</source>
          <target state="translated">ArrayBuilder$.ofBoolean.ofBoolean()</target>
        </trans-unit>
        <trans-unit id="8b8dddd8a856f53a75f0f073bb6ffa8048403f73" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofBoolean.resize()</source>
          <target state="translated">ArrayBuilder$.ofBoolean.resize()</target>
        </trans-unit>
        <trans-unit id="e0e9593f4b0ad2a23a1e2654481914c748cda761" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofBoolean.result()</source>
          <target state="translated">ArrayBuilder$.ofBoolean.result()</target>
        </trans-unit>
        <trans-unit id="3e058b76b4593bb89f21055a59173932b8500735" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofBoolean.toString()</source>
          <target state="translated">ArrayBuilder$.ofBoolean.toString()</target>
        </trans-unit>
        <trans-unit id="0c14aeb4ebbe33c9b10cf8a4e1fc79f549e26929" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofByte</source>
          <target state="translated">ArrayBuilder$.ofByte</target>
        </trans-unit>
        <trans-unit id="83f0f1865a11b1c6ea44b75ed95359fb2d53e578" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofByte()</source>
          <target state="translated">ArrayBuilder$.ofByte()</target>
        </trans-unit>
        <trans-unit id="46aa5589e0b2a595a0312298c28b27312f914485" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofByte.addOne()</source>
          <target state="translated">ArrayBuilder$.ofByte.addOne()</target>
        </trans-unit>
        <trans-unit id="1a77a6b624de04020db1738345fa13ed8ac01879" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofByte.elems()</source>
          <target state="translated">ArrayBuilder$.ofByte.elems()</target>
        </trans-unit>
        <trans-unit id="99145e02c09561030823c6b80f737d56a03859a1" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofByte.equals()</source>
          <target state="translated">ArrayBuilder$.ofByte.equals()</target>
        </trans-unit>
        <trans-unit id="4beacca1959d78c0e18e8e1cdacdcf7d9d9169a1" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofByte.ofByte()</source>
          <target state="translated">ArrayBuilder$.ofByte.ofByte()</target>
        </trans-unit>
        <trans-unit id="c1f88b18cd0e0aa8a176ff70b774eee6faea6a72" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofByte.resize()</source>
          <target state="translated">ArrayBuilder$.ofByte.resize()</target>
        </trans-unit>
        <trans-unit id="5ee6beb8ad19dbd9f9a3580016fc55b28a1ae05c" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofByte.result()</source>
          <target state="translated">ArrayBuilder$.ofByte.result()</target>
        </trans-unit>
        <trans-unit id="c74dcecc34bc124e982d5469c635295d53b8b834" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofByte.toString()</source>
          <target state="translated">ArrayBuilder$.ofByte.toString()</target>
        </trans-unit>
        <trans-unit id="ce8a9b21d7830070fab990a50f0f4d06e0e16d34" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofChar</source>
          <target state="translated">ArrayBuilder$.ofChar</target>
        </trans-unit>
        <trans-unit id="94ccc778d41ef5bd339bd5537de74ecc3923bfb0" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofChar()</source>
          <target state="translated">ArrayBuilder$.ofChar()</target>
        </trans-unit>
        <trans-unit id="cc11e4a8719408b6f6a65b3ca78a853c59b20480" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofChar.addOne()</source>
          <target state="translated">ArrayBuilder$.ofChar.addOne()</target>
        </trans-unit>
        <trans-unit id="14826e3825e856b11aa1312bfb16f4343d00a597" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofChar.elems()</source>
          <target state="translated">ArrayBuilder$.ofChar.elems()</target>
        </trans-unit>
        <trans-unit id="b7104e25a7a3fc61c4ad1936bdbe3f179705d2b7" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofChar.equals()</source>
          <target state="translated">ArrayBuilder$.ofChar.equals()</target>
        </trans-unit>
        <trans-unit id="83a73425ff7df05995e2bdcc9fdf1397d7e56936" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofChar.ofChar()</source>
          <target state="translated">ArrayBuilder$.ofChar.ofChar()</target>
        </trans-unit>
        <trans-unit id="b6e55ace7f18a3af0fdf935d82b39c9479d718fe" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofChar.resize()</source>
          <target state="translated">ArrayBuilder$.ofChar.resize()</target>
        </trans-unit>
        <trans-unit id="a792973ca695980d7b2262e3f79a5626e42eb6cb" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofChar.result()</source>
          <target state="translated">ArrayBuilder$.ofChar.result()</target>
        </trans-unit>
        <trans-unit id="9a127e26c2d630771cb8a14c498ee82a89528dc5" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofChar.toString()</source>
          <target state="translated">ArrayBuilder$.ofChar.toString()</target>
        </trans-unit>
        <trans-unit id="55a77322501323ee94dab64ab40566ad0da63bfd" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofDouble</source>
          <target state="translated">ArrayBuilder$.ofDouble</target>
        </trans-unit>
        <trans-unit id="f965d7854cb9f19034a8bedd560794ae4e255241" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofDouble()</source>
          <target state="translated">ArrayBuilder$.ofDouble()</target>
        </trans-unit>
        <trans-unit id="3c3dc8014ee957fe8f555a8629529a3dafb1d2bb" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofDouble.addOne()</source>
          <target state="translated">ArrayBuilder$.ofDouble.addOne()</target>
        </trans-unit>
        <trans-unit id="e52139f2a82428753bb6b49016bf9423f7f4489d" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofDouble.elems()</source>
          <target state="translated">ArrayBuilder$.ofDouble.elems()</target>
        </trans-unit>
        <trans-unit id="d0538ea0e72bfd25d8f0d67fa0bef8a23bc7717a" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofDouble.equals()</source>
          <target state="translated">ArrayBuilder$.ofDouble.equals()</target>
        </trans-unit>
        <trans-unit id="30955699173333b73336cf3e91688adab900a413" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofDouble.ofDouble()</source>
          <target state="translated">ArrayBuilder$.ofDouble.ofDouble()</target>
        </trans-unit>
        <trans-unit id="3ea8976b14da5d7b71752c070010eea2a962eff5" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofDouble.resize()</source>
          <target state="translated">ArrayBuilder$.ofDouble.resize()</target>
        </trans-unit>
        <trans-unit id="cf0a477567c58f298d31c173313a7b77b260f52a" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofDouble.result()</source>
          <target state="translated">ArrayBuilder$.ofDouble.result()</target>
        </trans-unit>
        <trans-unit id="84cd3659090a72f6657fd377c65c1f453ef8b05a" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofDouble.toString()</source>
          <target state="translated">ArrayBuilder$.ofDouble.toString()</target>
        </trans-unit>
        <trans-unit id="64d9ecde20ef6d864ef23b99c341a9c4d87f9126" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofFloat</source>
          <target state="translated">ArrayBuilder$.ofFloat</target>
        </trans-unit>
        <trans-unit id="24e9caea470db53fed7dcc7dd074ba4061c599aa" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofFloat()</source>
          <target state="translated">ArrayBuilder$.ofFloat()</target>
        </trans-unit>
        <trans-unit id="845f969040351b0cc09d94b78766dbc223e6158b" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofFloat.addOne()</source>
          <target state="translated">ArrayBuilder$.ofFloat.addOne()</target>
        </trans-unit>
        <trans-unit id="924c53e262a6226f44d01154a067582dca70ae11" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofFloat.elems()</source>
          <target state="translated">ArrayBuilder$.ofFloat.elems()</target>
        </trans-unit>
        <trans-unit id="1f249b6abf9a43c5b8f5f6caa82ceb39401fec40" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofFloat.equals()</source>
          <target state="translated">ArrayBuilder$.ofFloat.equals()</target>
        </trans-unit>
        <trans-unit id="f328eb41d72a33a8835dc25f0485d11a6accba7c" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofFloat.ofFloat()</source>
          <target state="translated">ArrayBuilder$.ofFloat.ofFloat()</target>
        </trans-unit>
        <trans-unit id="496c74521618cac52c0388c027e4690c4ccf70be" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofFloat.resize()</source>
          <target state="translated">ArrayBuilder$.ofFloat.resize()</target>
        </trans-unit>
        <trans-unit id="7ac9fc4c8b9a21024237547c557c5c39a521ff6f" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofFloat.result()</source>
          <target state="translated">ArrayBuilder$.ofFloat.result()</target>
        </trans-unit>
        <trans-unit id="a3503e8d6d1c52e40eec281236bbdafa51243ef9" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofFloat.toString()</source>
          <target state="translated">ArrayBuilder$.ofFloat.toString()</target>
        </trans-unit>
        <trans-unit id="b9531042a70d4f25898f5f4b494f7d153ee131d7" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofInt</source>
          <target state="translated">ArrayBuilder$.ofInt</target>
        </trans-unit>
        <trans-unit id="62811c7bfd7a968767c6d48c87986ed2ed42c20d" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofInt()</source>
          <target state="translated">ArrayBuilder$.ofInt()</target>
        </trans-unit>
        <trans-unit id="37bb0e91a1e2e7d753ff40eb6c9119536a1b6fe2" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofInt.addOne()</source>
          <target state="translated">ArrayBuilder$.ofInt.addOne()</target>
        </trans-unit>
        <trans-unit id="45455f2733300570a7bf96c11c04e3d0258e5b1b" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofInt.elems()</source>
          <target state="translated">ArrayBuilder$.ofInt.elems()</target>
        </trans-unit>
        <trans-unit id="74b6ac87894277a5c194144ddda25d9c3400a5cd" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofInt.equals()</source>
          <target state="translated">ArrayBuilder$.ofInt.equals()</target>
        </trans-unit>
        <trans-unit id="06b2f77b26f761c879e6b46f7c3044405806f994" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofInt.ofInt()</source>
          <target state="translated">ArrayBuilder$.ofInt.ofInt()</target>
        </trans-unit>
        <trans-unit id="2d5d4448868780c86ccd1f7daff32234a5d76ae8" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofInt.resize()</source>
          <target state="translated">ArrayBuilder$.ofInt.resize()</target>
        </trans-unit>
        <trans-unit id="5f7f63331399bc8bb29a0fdc93d9a3a31cea780e" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofInt.result()</source>
          <target state="translated">ArrayBuilder$.ofInt.result()</target>
        </trans-unit>
        <trans-unit id="ba86e5243a08cd590dc10e8dd90a7b19313106c2" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofInt.toString()</source>
          <target state="translated">ArrayBuilder$.ofInt.toString()</target>
        </trans-unit>
        <trans-unit id="199a64e0e51259d1dd6efdc6f3a9ebc59a5fb0c2" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofLong</source>
          <target state="translated">ArrayBuilder$.ofLong</target>
        </trans-unit>
        <trans-unit id="b4312b17154e2f6c837bcae0fcfb316d528dd678" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofLong()</source>
          <target state="translated">ArrayBuilder$.ofLong()</target>
        </trans-unit>
        <trans-unit id="40da2d9fd41faaa7ed73f7a33589f3daee92d4ea" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofLong.addOne()</source>
          <target state="translated">ArrayBuilder$.ofLong.addOne()</target>
        </trans-unit>
        <trans-unit id="6f14b0d39dae299ff7e2846d6395cc13bcbaf76b" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofLong.elems()</source>
          <target state="translated">ArrayBuilder$.ofLong.elems()</target>
        </trans-unit>
        <trans-unit id="b9daa6ad49b6245b76a2d1dee2aeb96e76a6a778" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofLong.equals()</source>
          <target state="translated">ArrayBuilder$.ofLong.equals()</target>
        </trans-unit>
        <trans-unit id="524a013fdbcec4c459de0c89dc7389689e84b3f0" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofLong.ofLong()</source>
          <target state="translated">ArrayBuilder$.ofLong.ofLong()</target>
        </trans-unit>
        <trans-unit id="266df4729fbe5636bb2eabd9747de84e2306fed6" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofLong.resize()</source>
          <target state="translated">ArrayBuilder$.ofLong.resize()</target>
        </trans-unit>
        <trans-unit id="6b72ddc2f4e086d70eac3172033edd91e7e561b7" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofLong.result()</source>
          <target state="translated">ArrayBuilder$.ofLong.result()</target>
        </trans-unit>
        <trans-unit id="4217290df61847b24c885a91f27f2f59c9012c43" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofLong.toString()</source>
          <target state="translated">ArrayBuilder$.ofLong.toString()</target>
        </trans-unit>
        <trans-unit id="7aa116f91400d284e7219d64686d8d50f63d4177" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef</source>
          <target state="translated">ArrayBuilder$.ofRef</target>
        </trans-unit>
        <trans-unit id="68e8a31d38403ed3c2a0222714716934f0588c5e" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef()</source>
          <target state="translated">ArrayBuilder$.ofRef()</target>
        </trans-unit>
        <trans-unit id="1f3a13978d89f6e88c5a121bcb140177d9013810" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef.addOne()</source>
          <target state="translated">ArrayBuilder$.ofRef.addOne()</target>
        </trans-unit>
        <trans-unit id="6101c4487b553c10dac2d70bcf98358bec46ce66" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef.clear()</source>
          <target state="translated">ArrayBuilder$.ofRef.clear()</target>
        </trans-unit>
        <trans-unit id="73f3779f482b12fcd53d6aa6ab09d7f76b187539" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef.elems()</source>
          <target state="translated">ArrayBuilder$.ofRef.elems()</target>
        </trans-unit>
        <trans-unit id="2fbbeef331b89a7908698a1485798f4745bb5321" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef.equals()</source>
          <target state="translated">ArrayBuilder$.ofRef.equals()</target>
        </trans-unit>
        <trans-unit id="eadfabb7625b6541efe0613ae3db21ec4fed7fe9" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef.ofRef()</source>
          <target state="translated">ArrayBuilder$.ofRef.ofRef()</target>
        </trans-unit>
        <trans-unit id="ecddc90da8a6ce66bab689cd62a2a2abcbce461c" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef.resize()</source>
          <target state="translated">ArrayBuilder$.ofRef.resize()</target>
        </trans-unit>
        <trans-unit id="6e2e6227d9af860effe1327f0e2478f583bcd8b5" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef.result()</source>
          <target state="translated">ArrayBuilder$.ofRef.result()</target>
        </trans-unit>
        <trans-unit id="b8fed9023e926a3816495a95a8f1429784479582" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofRef.toString()</source>
          <target state="translated">ArrayBuilder$.ofRef.toString()</target>
        </trans-unit>
        <trans-unit id="81a94d68f826b47e568aa91c3598bbd5ac5cd51f" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofShort</source>
          <target state="translated">ArrayBuilder$.ofShort</target>
        </trans-unit>
        <trans-unit id="945a1181494fef83ba86139e392b1b6c90881d4b" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofShort()</source>
          <target state="translated">ArrayBuilder$.ofShort()</target>
        </trans-unit>
        <trans-unit id="0a301b3bd1f9d4acbc9381c824ae858ee9cc0669" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofShort.addOne()</source>
          <target state="translated">ArrayBuilder$.ofShort.addOne()</target>
        </trans-unit>
        <trans-unit id="f49cb93d177458f5e572c2d2f0a6701970d3f5cd" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofShort.elems()</source>
          <target state="translated">ArrayBuilder$.ofShort.elems()</target>
        </trans-unit>
        <trans-unit id="bfc58139ae61c873eb07c96e7ca853cb147aafd2" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofShort.equals()</source>
          <target state="translated">ArrayBuilder$.ofShort.equals()</target>
        </trans-unit>
        <trans-unit id="dc3a8767890f1c06d6dbe2692c6ea6493e964167" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofShort.ofShort()</source>
          <target state="translated">ArrayBuilder$.ofShort.ofShort()</target>
        </trans-unit>
        <trans-unit id="4f52c0fcbc40498e7d9084454cecf5b88538a536" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofShort.resize()</source>
          <target state="translated">ArrayBuilder$.ofShort.resize()</target>
        </trans-unit>
        <trans-unit id="d29fc28572d382e2e4972ce7f47ea71a9ab9d88c" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofShort.result()</source>
          <target state="translated">ArrayBuilder$.ofShort.result()</target>
        </trans-unit>
        <trans-unit id="aff2d9a67439d2d29396e9c13c75ca6c74df5525" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofShort.toString()</source>
          <target state="translated">ArrayBuilder$.ofShort.toString()</target>
        </trans-unit>
        <trans-unit id="7b9442de35e5b54b7e58ce8169fb773830b025ee" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit</source>
          <target state="translated">ArrayBuilder$.ofUnit</target>
        </trans-unit>
        <trans-unit id="18d8b89641cd77e531a917612adf302bda600cc2" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit()</source>
          <target state="translated">ArrayBuilder$.ofUnit()</target>
        </trans-unit>
        <trans-unit id="400f8afc128b23bda2acc3edfcb8c0687b7f853f" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit.addAll()</source>
          <target state="translated">ArrayBuilder$.ofUnit.addAll()</target>
        </trans-unit>
        <trans-unit id="7c9a3096b083faec8677e3fcb7d5e3d8353c486a" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit.addOne()</source>
          <target state="translated">ArrayBuilder$.ofUnit.addOne()</target>
        </trans-unit>
        <trans-unit id="a7615793b3a20d001eca703fad5540aaa178e0a3" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit.elems()</source>
          <target state="translated">ArrayBuilder$.ofUnit.elems()</target>
        </trans-unit>
        <trans-unit id="fdc6d49ada050535ad30cab4e865e4feb357151e" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit.equals()</source>
          <target state="translated">ArrayBuilder$.ofUnit.equals()</target>
        </trans-unit>
        <trans-unit id="9fb3c8c73b19a1f8a8979397f2f76e6ea4f74f54" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit.ofUnit()</source>
          <target state="translated">ArrayBuilder$.ofUnit.ofUnit()</target>
        </trans-unit>
        <trans-unit id="ed75a529c6437f6b6e062f0546ee638338deb832" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit.resize()</source>
          <target state="translated">ArrayBuilder$.ofUnit.resize()</target>
        </trans-unit>
        <trans-unit id="81bd37e81ed5c6aa25ef52e4762c6a23723dfa54" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit.result()</source>
          <target state="translated">ArrayBuilder$.ofUnit.result()</target>
        </trans-unit>
        <trans-unit id="aa6c8edb12020bfeeeb702f81adc0c9b59267f19" translate="yes" xml:space="preserve">
          <source>ArrayBuilder$.ofUnit.toString()</source>
          <target state="translated">ArrayBuilder$.ofUnit.toString()</target>
        </trans-unit>
        <trans-unit id="fcd776b803d6b236336f1f81f7e78f3cb6b24e83" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.addAll()</source>
          <target state="translated">ArrayBuilder.addAll()</target>
        </trans-unit>
        <trans-unit id="27bb605fdb8ec1c64e43f46204cda88eb5610dbe" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.capacity()</source>
          <target state="translated">ArrayBuilder.capacity()</target>
        </trans-unit>
        <trans-unit id="5ab97e4388dfd627015b9f0fb6c4b6a02bcbf219" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.clear()</source>
          <target state="translated">ArrayBuilder.clear()</target>
        </trans-unit>
        <trans-unit id="5e51c8b40e116184c6726127a5b3566e6fafff83" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.elems()</source>
          <target state="translated">ArrayBuilder.elems()</target>
        </trans-unit>
        <trans-unit id="7a44ac8a403245eaf10d5a2d16fc1d553af37708" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.ensureSize()</source>
          <target state="translated">ArrayBuilder.ensureSize()</target>
        </trans-unit>
        <trans-unit id="9e204d74c441ace93aa773a9da405a177d2f8160" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.knownSize()</source>
          <target state="translated">ArrayBuilder.knownSize()</target>
        </trans-unit>
        <trans-unit id="21bd2cc149faaf877f41eb543a0f6a4fcffca1e8" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.length()</source>
          <target state="translated">ArrayBuilder.length()</target>
        </trans-unit>
        <trans-unit id="c4209b1d290c78eef4dda2a9d9ae9ba88efcf472" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.resize()</source>
          <target state="translated">ArrayBuilder.resize()</target>
        </trans-unit>
        <trans-unit id="984bffcb8a6c74e1b7a931416fe5da73308af92f" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.scala</source>
          <target state="translated">ArrayBuilder.scala</target>
        </trans-unit>
        <trans-unit id="dadcc5343638800f6bb5791edee3041319893eb7" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.size()</source>
          <target state="translated">ArrayBuilder.size()</target>
        </trans-unit>
        <trans-unit id="9c9091ededc19fc5d0ee186a85f030bd5632d188" translate="yes" xml:space="preserve">
          <source>ArrayBuilder.sizeHint()</source>
          <target state="translated">ArrayBuilder.sizeHint()</target>
        </trans-unit>
        <trans-unit id="a1d9626b2a8faf29b6417286fb8a6b3e1f9be338" translate="yes" xml:space="preserve">
          <source>ArrayDeque</source>
          <target state="translated">ArrayDeque</target>
        </trans-unit>
        <trans-unit id="de18d0121e9d93541913b92538cee9e963fe9ac9" translate="yes" xml:space="preserve">
          <source>ArrayDeque$</source>
          <target state="translated">ArrayDeque$</target>
        </trans-unit>
        <trans-unit id="3b2f08876ef1811adaf2b6bc3a3a2b0675ffbf9f" translate="yes" xml:space="preserve">
          <source>ArrayDeque$.DefaultInitialSize()</source>
          <target state="translated">ArrayDeque$.DefaultInitialSize()</target>
        </trans-unit>
        <trans-unit id="9947049cd0673f7342ab4a0ceaa79bef67f0a5a1" translate="yes" xml:space="preserve">
          <source>ArrayDeque$.empty()</source>
          <target state="translated">ArrayDeque$.empty()</target>
        </trans-unit>
        <trans-unit id="92567145d3f1a381b207335913766a8d74ee4ce6" translate="yes" xml:space="preserve">
          <source>ArrayDeque$.from()</source>
          <target state="translated">ArrayDeque$.from()</target>
        </trans-unit>
        <trans-unit id="794922bf567c0911e4866ccee1b8248b0ec2988a" translate="yes" xml:space="preserve">
          <source>ArrayDeque$.newBuilder()</source>
          <target state="translated">ArrayDeque$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="ed925ce3d214eff3c7f7cf62fb93fff03449c080" translate="yes" xml:space="preserve">
          <source>ArrayDeque.ArrayDeque()</source>
          <target state="translated">ArrayDeque.ArrayDeque()</target>
        </trans-unit>
        <trans-unit id="4317bfa89fdd1a97f270e760002f12412318421b" translate="yes" xml:space="preserve">
          <source>ArrayDeque.addAll()</source>
          <target state="translated">ArrayDeque.addAll()</target>
        </trans-unit>
        <trans-unit id="512ee8b8acf268c914281db461c4a3b749d810d2" translate="yes" xml:space="preserve">
          <source>ArrayDeque.addOne()</source>
          <target state="translated">ArrayDeque.addOne()</target>
        </trans-unit>
        <trans-unit id="002f21e5569acd05870a04280c14f4ab639f291d" translate="yes" xml:space="preserve">
          <source>ArrayDeque.apply()</source>
          <target state="translated">ArrayDeque.apply()</target>
        </trans-unit>
        <trans-unit id="ae69143ada50c14a56c9df975fc56d7033340c05" translate="yes" xml:space="preserve">
          <source>ArrayDeque.array()</source>
          <target state="translated">ArrayDeque.array()</target>
        </trans-unit>
        <trans-unit id="a352cf50a3d9d333f0cb4a879b607e249c258494" translate="yes" xml:space="preserve">
          <source>ArrayDeque.clear()</source>
          <target state="translated">ArrayDeque.clear()</target>
        </trans-unit>
        <trans-unit id="b4de4b341111f7223cbe747f6efaa3103dd2bd3d" translate="yes" xml:space="preserve">
          <source>ArrayDeque.clearAndShrink()</source>
          <target state="translated">ArrayDeque.clearAndShrink()</target>
        </trans-unit>
        <trans-unit id="9e84be1b39b7efeaa4ccb90aca05601634b0ddd9" translate="yes" xml:space="preserve">
          <source>ArrayDeque.clone()</source>
          <target state="translated">ArrayDeque.clone()</target>
        </trans-unit>
        <trans-unit id="021edfcf744d3ba81db24e2dd3cb0690ff045025" translate="yes" xml:space="preserve">
          <source>ArrayDeque.copySliceToArray()</source>
          <target state="translated">ArrayDeque.copySliceToArray()</target>
        </trans-unit>
        <trans-unit id="bc315e61ae35605c90d37c39f2705f2ffa153434" translate="yes" xml:space="preserve">
          <source>ArrayDeque.copyToArray()</source>
          <target state="translated">ArrayDeque.copyToArray()</target>
        </trans-unit>
        <trans-unit id="cc228a323b2745d0309c97312970aa12fd7d2303" translate="yes" xml:space="preserve">
          <source>ArrayDeque.ensureSize()</source>
          <target state="translated">ArrayDeque.ensureSize()</target>
        </trans-unit>
        <trans-unit id="5fe205aac6c6a91bb8e060ea55f825e709f57134" translate="yes" xml:space="preserve">
          <source>ArrayDeque.grouped()</source>
          <target state="translated">ArrayDeque.grouped()</target>
        </trans-unit>
        <trans-unit id="39191cbe2df5312e38284e737f17a7a846373bac" translate="yes" xml:space="preserve">
          <source>ArrayDeque.insert()</source>
          <target state="translated">ArrayDeque.insert()</target>
        </trans-unit>
        <trans-unit id="621233d905eb95e1618200641f0c43b036052fec" translate="yes" xml:space="preserve">
          <source>ArrayDeque.insertAll()</source>
          <target state="translated">ArrayDeque.insertAll()</target>
        </trans-unit>
        <trans-unit id="ea86c6721057aa21b774837669c804b2ae5ff14b" translate="yes" xml:space="preserve">
          <source>ArrayDeque.isEmpty()</source>
          <target state="translated">ArrayDeque.isEmpty()</target>
        </trans-unit>
        <trans-unit id="dbe4580130bb8800e4e1b1ec4a7be6c7d3d36c9c" translate="yes" xml:space="preserve">
          <source>ArrayDeque.iterableFactory()</source>
          <target state="translated">ArrayDeque.iterableFactory()</target>
        </trans-unit>
        <trans-unit id="751243ac13181a9903be64acc194c27a819023a2" translate="yes" xml:space="preserve">
          <source>ArrayDeque.klone()</source>
          <target state="translated">ArrayDeque.klone()</target>
        </trans-unit>
        <trans-unit id="66f2fbba60f7e3fb157cf0cb555afe8bcf85bef8" translate="yes" xml:space="preserve">
          <source>ArrayDeque.knownSize()</source>
          <target state="translated">ArrayDeque.knownSize()</target>
        </trans-unit>
        <trans-unit id="09bc7cdf8fbbe7484741fae9dd1ab5d2a39e3903" translate="yes" xml:space="preserve">
          <source>ArrayDeque.length()</source>
          <target state="translated">ArrayDeque.length()</target>
        </trans-unit>
        <trans-unit id="072107a4a9e6f07b91893ffa35a471da6b094af5" translate="yes" xml:space="preserve">
          <source>ArrayDeque.ofArray()</source>
          <target state="translated">ArrayDeque.ofArray()</target>
        </trans-unit>
        <trans-unit id="6bed57154ea878fc250937e9a4c2e25e0ca3dc4f" translate="yes" xml:space="preserve">
          <source>ArrayDeque.prepend()</source>
          <target state="translated">ArrayDeque.prepend()</target>
        </trans-unit>
        <trans-unit id="02b2942508a7c291b6f6999c687e88688fd4d126" translate="yes" xml:space="preserve">
          <source>ArrayDeque.prependAll()</source>
          <target state="translated">ArrayDeque.prependAll()</target>
        </trans-unit>
        <trans-unit id="ca1078f7c4af77c9358b816a58b5ae37310f9fd6" translate="yes" xml:space="preserve">
          <source>ArrayDeque.remove()</source>
          <target state="translated">ArrayDeque.remove()</target>
        </trans-unit>
        <trans-unit id="bdc6e0e2329daad02538a6ac2fb91350bb87d33f" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeAll()</source>
          <target state="translated">ArrayDeque.removeAll()</target>
        </trans-unit>
        <trans-unit id="68b98b813e7f9f68d216c2e5c0c3e0ab3334ef9c" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeAllReverse()</source>
          <target state="translated">ArrayDeque.removeAllReverse()</target>
        </trans-unit>
        <trans-unit id="16a4d68564ea8bca4be4f1174ceca9d5f7110b20" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeFirst()</source>
          <target state="translated">ArrayDeque.removeFirst()</target>
        </trans-unit>
        <trans-unit id="f26262fef500323b1ceab7fea0cdc7b37021167b" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeHead()</source>
          <target state="translated">ArrayDeque.removeHead()</target>
        </trans-unit>
        <trans-unit id="974fe9084ec62c93e47f6fb64c9d88d97f57dcbc" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeHeadOption()</source>
          <target state="translated">ArrayDeque.removeHeadOption()</target>
        </trans-unit>
        <trans-unit id="eba4efacfafd5140fa818bbde50add377b17949a" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeHeadWhile()</source>
          <target state="translated">ArrayDeque.removeHeadWhile()</target>
        </trans-unit>
        <trans-unit id="2ef2e331f8c0a6398215f9094fcd408191cde0d2" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeLast()</source>
          <target state="translated">ArrayDeque.removeLast()</target>
        </trans-unit>
        <trans-unit id="d66689471242c6b86a56ba14cf7a1c0212cab9d2" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeLastOption()</source>
          <target state="translated">ArrayDeque.removeLastOption()</target>
        </trans-unit>
        <trans-unit id="809ddcf6bbe8b1f18d3f389cd4626d027466bbb4" translate="yes" xml:space="preserve">
          <source>ArrayDeque.removeLastWhile()</source>
          <target state="translated">ArrayDeque.removeLastWhile()</target>
        </trans-unit>
        <trans-unit id="d3d76994ac1b2372134e0942c8b86f03f166f6da" translate="yes" xml:space="preserve">
          <source>ArrayDeque.requireBounds()</source>
          <target state="translated">ArrayDeque.requireBounds()</target>
        </trans-unit>
        <trans-unit id="7b5f5746d84f7c476038eb77e4d8ff816790f6e9" translate="yes" xml:space="preserve">
          <source>ArrayDeque.reverse()</source>
          <target state="translated">ArrayDeque.reverse()</target>
        </trans-unit>
        <trans-unit id="9fc8f3075632f9b1f1c7f977fc8f78a3aaf32bbf" translate="yes" xml:space="preserve">
          <source>ArrayDeque.scala</source>
          <target state="translated">ArrayDeque.scala</target>
        </trans-unit>
        <trans-unit id="83eda6cedee0630d5a9f12102d15e8b038570f4c" translate="yes" xml:space="preserve">
          <source>ArrayDeque.slice()</source>
          <target state="translated">ArrayDeque.slice()</target>
        </trans-unit>
        <trans-unit id="b3815a3ae580a96dc52811c67078107226fd06b4" translate="yes" xml:space="preserve">
          <source>ArrayDeque.sliding()</source>
          <target state="translated">ArrayDeque.sliding()</target>
        </trans-unit>
        <trans-unit id="4b38eba09c21010e08713a21019247d282269b41" translate="yes" xml:space="preserve">
          <source>ArrayDeque.start_+()</source>
          <target state="translated">ArrayDeque.start_+()</target>
        </trans-unit>
        <trans-unit id="e3205b2c41d264948ed4015502783344e8b40945" translate="yes" xml:space="preserve">
          <source>ArrayDeque.stepper()</source>
          <target state="translated">ArrayDeque.stepper()</target>
        </trans-unit>
        <trans-unit id="9234ba4b1f4247039fb352bc1868a191e1a42ee7" translate="yes" xml:space="preserve">
          <source>ArrayDeque.stringPrefix()</source>
          <target state="translated">ArrayDeque.stringPrefix()</target>
        </trans-unit>
        <trans-unit id="58e41fe1529de95becf3498ab795f4d708dfc906" translate="yes" xml:space="preserve">
          <source>ArrayDeque.subtractOne()</source>
          <target state="translated">ArrayDeque.subtractOne()</target>
        </trans-unit>
        <trans-unit id="4983ebbc8740047ee462627b80722151818752f9" translate="yes" xml:space="preserve">
          <source>ArrayDeque.toArray()</source>
          <target state="translated">ArrayDeque.toArray()</target>
        </trans-unit>
        <trans-unit id="cde3c01b0a7b64ae1e9b10aa06d8a3245ebf94ec" translate="yes" xml:space="preserve">
          <source>ArrayDeque.trimToSize()</source>
          <target state="translated">ArrayDeque.trimToSize()</target>
        </trans-unit>
        <trans-unit id="d2a6ac916170f7bfb2990a714ddfcedb815bf9da" translate="yes" xml:space="preserve">
          <source>ArrayDeque.update()</source>
          <target state="translated">ArrayDeque.update()</target>
        </trans-unit>
        <trans-unit id="ddef1c178c172c0ee5cf7d7538441512b16153ab" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps</source>
          <target state="translated">ArrayDequeOps</target>
        </trans-unit>
        <trans-unit id="bfd3c095c5d8cf3e13059b6f7a69db306534d09e" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.array()</source>
          <target state="translated">ArrayDequeOps.array()</target>
        </trans-unit>
        <trans-unit id="05f89f0a2705a2b7dbd0cf520f6997fc01e8d509" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.clone()</source>
          <target state="translated">ArrayDequeOps.clone()</target>
        </trans-unit>
        <trans-unit id="49a4c664ba80d75530ebc5f387c385e50bb3e1df" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.copySliceToArray()</source>
          <target state="translated">ArrayDequeOps.copySliceToArray()</target>
        </trans-unit>
        <trans-unit id="741c069b6438da26a74d1919012904d81ec26c79" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.grouped()</source>
          <target state="translated">ArrayDequeOps.grouped()</target>
        </trans-unit>
        <trans-unit id="34b547776576e7fb032acadc9d6030b087675081" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.klone()</source>
          <target state="translated">ArrayDequeOps.klone()</target>
        </trans-unit>
        <trans-unit id="9168779f279ccf1dd70fae5f9235f0d4ea0642ea" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.ofArray()</source>
          <target state="translated">ArrayDequeOps.ofArray()</target>
        </trans-unit>
        <trans-unit id="6b7d83fd3ddff10eb3cec26150bf979ace223fa1" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.requireBounds()</source>
          <target state="translated">ArrayDequeOps.requireBounds()</target>
        </trans-unit>
        <trans-unit id="27170e209275c434ee944714e016703cdc5cf381" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.reverse()</source>
          <target state="translated">ArrayDequeOps.reverse()</target>
        </trans-unit>
        <trans-unit id="5f7329d7cc635a174da24e521f29e09b9be11503" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.slice()</source>
          <target state="translated">ArrayDequeOps.slice()</target>
        </trans-unit>
        <trans-unit id="fb9d194507576fd8cae324ab78827ec063c06519" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.sliding()</source>
          <target state="translated">ArrayDequeOps.sliding()</target>
        </trans-unit>
        <trans-unit id="a81105ed94cec402503d20262ec2048e039ea102" translate="yes" xml:space="preserve">
          <source>ArrayDequeOps.start_+()</source>
          <target state="translated">ArrayDequeOps.start_+()</target>
        </trans-unit>
        <trans-unit id="053393be6001aa7c76301dff93b871430a75e095" translate="yes" xml:space="preserve">
          <source>ArrayOps</source>
          <target state="translated">ArrayOps</target>
        </trans-unit>
        <trans-unit id="fd87ae43d84f041078cc56764f5b5d7da672ea34" translate="yes" xml:space="preserve">
          <source>ArrayOps$</source>
          <target state="translated">ArrayOps$</target>
        </trans-unit>
        <trans-unit id="2681197df61d905ef3caa589b5f52be607114c94" translate="yes" xml:space="preserve">
          <source>ArrayOps$.WithFilter</source>
          <target state="translated">ArrayOps$.WithFilter</target>
        </trans-unit>
        <trans-unit id="346ba8d606debb67559a6dad3cb3aaf3c5d4a869" translate="yes" xml:space="preserve">
          <source>ArrayOps$.WithFilter()</source>
          <target state="translated">ArrayOps$.WithFilter()</target>
        </trans-unit>
        <trans-unit id="40db03382a60976f5f374631b2dcf535a73a7893" translate="yes" xml:space="preserve">
          <source>ArrayOps$.WithFilter.WithFilter()</source>
          <target state="translated">ArrayOps$.WithFilter.WithFilter()</target>
        </trans-unit>
        <trans-unit id="057d122124b026eb43ec96c0e2ed4ee635061b8c" translate="yes" xml:space="preserve">
          <source>ArrayOps$.WithFilter.flatMap()</source>
          <target state="translated">ArrayOps$.WithFilter.flatMap()</target>
        </trans-unit>
        <trans-unit id="810dc28c4aabc46e09eed44f54b365a64d41dae7" translate="yes" xml:space="preserve">
          <source>ArrayOps$.WithFilter.foreach()</source>
          <target state="translated">ArrayOps$.WithFilter.foreach()</target>
        </trans-unit>
        <trans-unit id="23027554889952749a001765d3673efab62bb7b6" translate="yes" xml:space="preserve">
          <source>ArrayOps$.WithFilter.map()</source>
          <target state="translated">ArrayOps$.WithFilter.map()</target>
        </trans-unit>
        <trans-unit id="457b53eafb0264d1868cdc94e9c0a04af48bbfc7" translate="yes" xml:space="preserve">
          <source>ArrayOps$.WithFilter.withFilter()</source>
          <target state="translated">ArrayOps$.WithFilter.withFilter()</target>
        </trans-unit>
        <trans-unit id="71c3ada36146c53df77228e585a6d9841a73b109" translate="yes" xml:space="preserve">
          <source>ArrayOps.++()</source>
          <target state="translated">ArrayOps.++()</target>
        </trans-unit>
        <trans-unit id="d18b046ce5c52d41677cd31abb63b4929407301d" translate="yes" xml:space="preserve">
          <source>ArrayOps.++:()</source>
          <target state="translated">ArrayOps.++:()</target>
        </trans-unit>
        <trans-unit id="3549cea558ce6500eee4e1b90aa00a49414b90c9" translate="yes" xml:space="preserve">
          <source>ArrayOps.+:()</source>
          <target state="translated">ArrayOps.+:()</target>
        </trans-unit>
        <trans-unit id="8e5da7c7d218e00588e6c35f76a9a88eed64a745" translate="yes" xml:space="preserve">
          <source>ArrayOps.:+()</source>
          <target state="translated">ArrayOps.:+()</target>
        </trans-unit>
        <trans-unit id="baac1836fe720717c51310d586d85854c39bf766" translate="yes" xml:space="preserve">
          <source>ArrayOps.:++()</source>
          <target state="translated">ArrayOps.:++()</target>
        </trans-unit>
        <trans-unit id="abebf606eb14cba1430b3b5fddfb42877c07ce07" translate="yes" xml:space="preserve">
          <source>ArrayOps.ArrayOps()</source>
          <target state="translated">ArrayOps.ArrayOps()</target>
        </trans-unit>
        <trans-unit id="bbbe88b372e7011aa5085496cc23a2a746647869" translate="yes" xml:space="preserve">
          <source>ArrayOps.appended()</source>
          <target state="translated">ArrayOps.appended()</target>
        </trans-unit>
        <trans-unit id="8f5a0cf76b0d515ad65949a5c5364596f9877e64" translate="yes" xml:space="preserve">
          <source>ArrayOps.appendedAll()</source>
          <target state="translated">ArrayOps.appendedAll()</target>
        </trans-unit>
        <trans-unit id="6b7a8ce60c53eed5845439910e3e4955c4d5e3aa" translate="yes" xml:space="preserve">
          <source>ArrayOps.collect()</source>
          <target state="translated">ArrayOps.collect()</target>
        </trans-unit>
        <trans-unit id="4b0c0d17e4c824f0775663cacc7734bdfbf4f087" translate="yes" xml:space="preserve">
          <source>ArrayOps.collectFirst()</source>
          <target state="translated">ArrayOps.collectFirst()</target>
        </trans-unit>
        <trans-unit id="cdaa2d1f4bf38747312230ff19e30fb0d799d05d" translate="yes" xml:space="preserve">
          <source>ArrayOps.combinations()</source>
          <target state="translated">ArrayOps.combinations()</target>
        </trans-unit>
        <trans-unit id="725a033f903cca99f30c14363025dc3a9e7c43ad" translate="yes" xml:space="preserve">
          <source>ArrayOps.concat()</source>
          <target state="translated">ArrayOps.concat()</target>
        </trans-unit>
        <trans-unit id="9feaafb1c72d8cbe830b71cb2a9047fff39fa780" translate="yes" xml:space="preserve">
          <source>ArrayOps.contains()</source>
          <target state="translated">ArrayOps.contains()</target>
        </trans-unit>
        <trans-unit id="7cf7a43b7487e206ffcc2b044e3e8e8946c27e26" translate="yes" xml:space="preserve">
          <source>ArrayOps.copyToArray()</source>
          <target state="translated">ArrayOps.copyToArray()</target>
        </trans-unit>
        <trans-unit id="986266155dd63771f6fa013712ebb87b9166080e" translate="yes" xml:space="preserve">
          <source>ArrayOps.count()</source>
          <target state="translated">ArrayOps.count()</target>
        </trans-unit>
        <trans-unit id="63aeb97396abc2c7d49062b111fdfd2d602206e9" translate="yes" xml:space="preserve">
          <source>ArrayOps.diff()</source>
          <target state="translated">ArrayOps.diff()</target>
        </trans-unit>
        <trans-unit id="c0f073e1f86a4c4c969ba7ffe6d3bfd62191bb33" translate="yes" xml:space="preserve">
          <source>ArrayOps.distinct()</source>
          <target state="translated">ArrayOps.distinct()</target>
        </trans-unit>
        <trans-unit id="7ed0f0f2c9911eb1f18f2fcb93b5a212cbff6f53" translate="yes" xml:space="preserve">
          <source>ArrayOps.distinctBy()</source>
          <target state="translated">ArrayOps.distinctBy()</target>
        </trans-unit>
        <trans-unit id="ad093939e4c5e005f00bd46e99573f21b6097938" translate="yes" xml:space="preserve">
          <source>ArrayOps.drop()</source>
          <target state="translated">ArrayOps.drop()</target>
        </trans-unit>
        <trans-unit id="6e9c3843bda77c7e94165a1ca2e10a318a35aa15" translate="yes" xml:space="preserve">
          <source>ArrayOps.dropRight()</source>
          <target state="translated">ArrayOps.dropRight()</target>
        </trans-unit>
        <trans-unit id="6e49659c5dc6930e2fa5d2deed58c0d62d7436fb" translate="yes" xml:space="preserve">
          <source>ArrayOps.dropWhile()</source>
          <target state="translated">ArrayOps.dropWhile()</target>
        </trans-unit>
        <trans-unit id="f8da10d68467c5a57b414217ea224d25f066d273" translate="yes" xml:space="preserve">
          <source>ArrayOps.endsWith()</source>
          <target state="translated">ArrayOps.endsWith()</target>
        </trans-unit>
        <trans-unit id="53ffa0eee9a7f42f6400680ad14ead52fe7b7bb2" translate="yes" xml:space="preserve">
          <source>ArrayOps.exists()</source>
          <target state="translated">ArrayOps.exists()</target>
        </trans-unit>
        <trans-unit id="bae99ebe0772575e5db544fce8562d5e80fba5c3" translate="yes" xml:space="preserve">
          <source>ArrayOps.filter()</source>
          <target state="translated">ArrayOps.filter()</target>
        </trans-unit>
        <trans-unit id="991557414c506b761e3257fa4e329c5c3ad19542" translate="yes" xml:space="preserve">
          <source>ArrayOps.filterNot()</source>
          <target state="translated">ArrayOps.filterNot()</target>
        </trans-unit>
        <trans-unit id="38265afb78ae0b84510f055678e6510c657fd455" translate="yes" xml:space="preserve">
          <source>ArrayOps.find()</source>
          <target state="translated">ArrayOps.find()</target>
        </trans-unit>
        <trans-unit id="060b4e6ef600f49d8ab712e244752172b9453cd7" translate="yes" xml:space="preserve">
          <source>ArrayOps.flatMap()</source>
          <target state="translated">ArrayOps.flatMap()</target>
        </trans-unit>
        <trans-unit id="a7afa8212498865e2fb87e3ff6ed32060316d387" translate="yes" xml:space="preserve">
          <source>ArrayOps.flatten()</source>
          <target state="translated">ArrayOps.flatten()</target>
        </trans-unit>
        <trans-unit id="59d084b5b532a6d81629283f7b58a4996dc9c8ef" translate="yes" xml:space="preserve">
          <source>ArrayOps.fold()</source>
          <target state="translated">ArrayOps.fold()</target>
        </trans-unit>
        <trans-unit id="15afd24b195436a6ccd8ebdc290c702d87b1fa9c" translate="yes" xml:space="preserve">
          <source>ArrayOps.foldLeft()</source>
          <target state="translated">ArrayOps.foldLeft()</target>
        </trans-unit>
        <trans-unit id="ec9a67052ab500029f64f2705258d07571424b04" translate="yes" xml:space="preserve">
          <source>ArrayOps.foldRight()</source>
          <target state="translated">ArrayOps.foldRight()</target>
        </trans-unit>
        <trans-unit id="8a30a06822376a5024addce42cfdb7fe2fe0286a" translate="yes" xml:space="preserve">
          <source>ArrayOps.forall()</source>
          <target state="translated">ArrayOps.forall()</target>
        </trans-unit>
        <trans-unit id="d1f2e5ea16140936ef5cfbcb5985cf76aba20436" translate="yes" xml:space="preserve">
          <source>ArrayOps.foreach()</source>
          <target state="translated">ArrayOps.foreach()</target>
        </trans-unit>
        <trans-unit id="8393950880a843c12b09d87a6c3a7ed8aac02679" translate="yes" xml:space="preserve">
          <source>ArrayOps.groupBy()</source>
          <target state="translated">ArrayOps.groupBy()</target>
        </trans-unit>
        <trans-unit id="506ccf25b79e41346aa561dd7c82dfb2e867a86b" translate="yes" xml:space="preserve">
          <source>ArrayOps.groupMap()</source>
          <target state="translated">ArrayOps.groupMap()</target>
        </trans-unit>
        <trans-unit id="bbb9518ce28da9c83c352ec46f4d5ff1cacbabdb" translate="yes" xml:space="preserve">
          <source>ArrayOps.grouped()</source>
          <target state="translated">ArrayOps.grouped()</target>
        </trans-unit>
        <trans-unit id="1824d6990b4f91755e3f14a8cc55d8235d44a5b4" translate="yes" xml:space="preserve">
          <source>ArrayOps.head()</source>
          <target state="translated">ArrayOps.head()</target>
        </trans-unit>
        <trans-unit id="c63e238f9178f23c613a7ae0ded4e87e7fe581b5" translate="yes" xml:space="preserve">
          <source>ArrayOps.headOption()</source>
          <target state="translated">ArrayOps.headOption()</target>
        </trans-unit>
        <trans-unit id="cb14c28fe430de49ac3f94263147d1a11bf54fca" translate="yes" xml:space="preserve">
          <source>ArrayOps.indexOf()</source>
          <target state="translated">ArrayOps.indexOf()</target>
        </trans-unit>
        <trans-unit id="132602aac103ebe0fc1a92add8246279d520d7dd" translate="yes" xml:space="preserve">
          <source>ArrayOps.indexWhere()</source>
          <target state="translated">ArrayOps.indexWhere()</target>
        </trans-unit>
        <trans-unit id="6465f62c35610c38a21f42f1ae15f56cc22fd4ca" translate="yes" xml:space="preserve">
          <source>ArrayOps.indices()</source>
          <target state="translated">ArrayOps.indices()</target>
        </trans-unit>
        <trans-unit id="447083772f8b89a127cff301f0971e5ffb5586ad" translate="yes" xml:space="preserve">
          <source>ArrayOps.init()</source>
          <target state="translated">ArrayOps.init()</target>
        </trans-unit>
        <trans-unit id="367e769682b131e42c3cb070d4a131d63b16fef1" translate="yes" xml:space="preserve">
          <source>ArrayOps.inits()</source>
          <target state="translated">ArrayOps.inits()</target>
        </trans-unit>
        <trans-unit id="ed775b17c6b4fa9a5aaa804ef56b21f8a9d0630f" translate="yes" xml:space="preserve">
          <source>ArrayOps.intersect()</source>
          <target state="translated">ArrayOps.intersect()</target>
        </trans-unit>
        <trans-unit id="bad61f81f2ce9560475aa145ea1ccbd6bb4d0d38" translate="yes" xml:space="preserve">
          <source>ArrayOps.isEmpty()</source>
          <target state="translated">ArrayOps.isEmpty()</target>
        </trans-unit>
        <trans-unit id="507c6fc7b6895d8cc22f26a301fec4806f47f063" translate="yes" xml:space="preserve">
          <source>ArrayOps.iterator()</source>
          <target state="translated">ArrayOps.iterator()</target>
        </trans-unit>
        <trans-unit id="db08f63d5606eea0ba26472148f56dbab3fe2eb3" translate="yes" xml:space="preserve">
          <source>ArrayOps.knownSize()</source>
          <target state="translated">ArrayOps.knownSize()</target>
        </trans-unit>
        <trans-unit id="d757b3fe8984dd27d2efce7bdcad1f7c9722fe1e" translate="yes" xml:space="preserve">
          <source>ArrayOps.last()</source>
          <target state="translated">ArrayOps.last()</target>
        </trans-unit>
        <trans-unit id="7257d62be02843c4181a9b1bdda39a0541d942fe" translate="yes" xml:space="preserve">
          <source>ArrayOps.lastIndexOf()</source>
          <target state="translated">ArrayOps.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="7fa952fe4e26e71fd9f2e70dcfa4d98cbc326556" translate="yes" xml:space="preserve">
          <source>ArrayOps.lastIndexWhere()</source>
          <target state="translated">ArrayOps.lastIndexWhere()</target>
        </trans-unit>
        <trans-unit id="a056ac9f8792cabbe77147f9246626fed7c17e68" translate="yes" xml:space="preserve">
          <source>ArrayOps.lastOption()</source>
          <target state="translated">ArrayOps.lastOption()</target>
        </trans-unit>
        <trans-unit id="ad3d3f0678b6db80386e1e1ed4ab8772c913f25a" translate="yes" xml:space="preserve">
          <source>ArrayOps.lazyZip()</source>
          <target state="translated">ArrayOps.lazyZip()</target>
        </trans-unit>
        <trans-unit id="c9b6b50d219e8c247fca3bbf3ca51588ed701049" translate="yes" xml:space="preserve">
          <source>ArrayOps.lengthCompare()</source>
          <target state="translated">ArrayOps.lengthCompare()</target>
        </trans-unit>
        <trans-unit id="44a0eb90e89a80ace0a05525143dc0038950be1b" translate="yes" xml:space="preserve">
          <source>ArrayOps.lengthIs()</source>
          <target state="translated">ArrayOps.lengthIs()</target>
        </trans-unit>
        <trans-unit id="e3091bdeeea63dd5704678b2d01b96f95f610177" translate="yes" xml:space="preserve">
          <source>ArrayOps.map()</source>
          <target state="translated">ArrayOps.map()</target>
        </trans-unit>
        <trans-unit id="13abc4933ba17591fa61cd788cbb0a50fe395bcf" translate="yes" xml:space="preserve">
          <source>ArrayOps.mapInPlace()</source>
          <target state="translated">ArrayOps.mapInPlace()</target>
        </trans-unit>
        <trans-unit id="031d5d2551f40d52566e296bdd92324f8bd72ac8" translate="yes" xml:space="preserve">
          <source>ArrayOps.nonEmpty()</source>
          <target state="translated">ArrayOps.nonEmpty()</target>
        </trans-unit>
        <trans-unit id="e91b24582423608f7645ba3fb68d22fe209cae2e" translate="yes" xml:space="preserve">
          <source>ArrayOps.padTo()</source>
          <target state="translated">ArrayOps.padTo()</target>
        </trans-unit>
        <trans-unit id="69698b136567fe983aebb6afa18f52197ae21cea" translate="yes" xml:space="preserve">
          <source>ArrayOps.partition()</source>
          <target state="translated">ArrayOps.partition()</target>
        </trans-unit>
        <trans-unit id="cf87828979a618e82a45bc02a83b6dfc6c182d06" translate="yes" xml:space="preserve">
          <source>ArrayOps.partitionMap()</source>
          <target state="translated">ArrayOps.partitionMap()</target>
        </trans-unit>
        <trans-unit id="48fab7003d3977d324209a8b3d58ccb0f89eaed0" translate="yes" xml:space="preserve">
          <source>ArrayOps.patch()</source>
          <target state="translated">ArrayOps.patch()</target>
        </trans-unit>
        <trans-unit id="be853115b6231cbdc5da08b2b7c9cb62b736b345" translate="yes" xml:space="preserve">
          <source>ArrayOps.permutations()</source>
          <target state="translated">ArrayOps.permutations()</target>
        </trans-unit>
        <trans-unit id="c7d61ce5fac1c9761406d0df5a37186f5efca25f" translate="yes" xml:space="preserve">
          <source>ArrayOps.prepended()</source>
          <target state="translated">ArrayOps.prepended()</target>
        </trans-unit>
        <trans-unit id="ca97c3fde2b52481a0accd9f94a8866977c8f9fb" translate="yes" xml:space="preserve">
          <source>ArrayOps.prependedAll()</source>
          <target state="translated">ArrayOps.prependedAll()</target>
        </trans-unit>
        <trans-unit id="75c6fad1258b91783972f615983f318f517436e7" translate="yes" xml:space="preserve">
          <source>ArrayOps.reverse()</source>
          <target state="translated">ArrayOps.reverse()</target>
        </trans-unit>
        <trans-unit id="eb4a532c4f22889636768898c3414092122fa082" translate="yes" xml:space="preserve">
          <source>ArrayOps.reverseIterator()</source>
          <target state="translated">ArrayOps.reverseIterator()</target>
        </trans-unit>
        <trans-unit id="491f9d26e2d39e7aee0a95654eae5b6cc3ce846a" translate="yes" xml:space="preserve">
          <source>ArrayOps.scala</source>
          <target state="translated">ArrayOps.scala</target>
        </trans-unit>
        <trans-unit id="3efc1060182b1c49d0a6c423eed79ee89cd893f7" translate="yes" xml:space="preserve">
          <source>ArrayOps.scan()</source>
          <target state="translated">ArrayOps.scan()</target>
        </trans-unit>
        <trans-unit id="e789c8e5ea72812fa3f578a739354961741d4aea" translate="yes" xml:space="preserve">
          <source>ArrayOps.scanLeft()</source>
          <target state="translated">ArrayOps.scanLeft()</target>
        </trans-unit>
        <trans-unit id="49fb38074e6ef43b2779751997533cfe86b07811" translate="yes" xml:space="preserve">
          <source>ArrayOps.scanRight()</source>
          <target state="translated">ArrayOps.scanRight()</target>
        </trans-unit>
        <trans-unit id="e79bde698cfceea081e74fe74eb2372e02c4b499" translate="yes" xml:space="preserve">
          <source>ArrayOps.size()</source>
          <target state="translated">ArrayOps.size()</target>
        </trans-unit>
        <trans-unit id="b1f5daf60c4ae03271e77bfd2f501c5016efe79a" translate="yes" xml:space="preserve">
          <source>ArrayOps.sizeCompare()</source>
          <target state="translated">ArrayOps.sizeCompare()</target>
        </trans-unit>
        <trans-unit id="4baa97184b11236e596c47d16e26061d8eb433bb" translate="yes" xml:space="preserve">
          <source>ArrayOps.sizeIs()</source>
          <target state="translated">ArrayOps.sizeIs()</target>
        </trans-unit>
        <trans-unit id="53be816486d8118d35f9c08fb9a5d8cb1959928f" translate="yes" xml:space="preserve">
          <source>ArrayOps.slice()</source>
          <target state="translated">ArrayOps.slice()</target>
        </trans-unit>
        <trans-unit id="3b92c4921e5743c94f11aec14cf8a0f70c2e163c" translate="yes" xml:space="preserve">
          <source>ArrayOps.sliding()</source>
          <target state="translated">ArrayOps.sliding()</target>
        </trans-unit>
        <trans-unit id="fd7946305a168a8fd5332f15dab77248704d9ac3" translate="yes" xml:space="preserve">
          <source>ArrayOps.sortBy()</source>
          <target state="translated">ArrayOps.sortBy()</target>
        </trans-unit>
        <trans-unit id="c3e4f82baa347884e009a83a25ee1b392971ac75" translate="yes" xml:space="preserve">
          <source>ArrayOps.sortWith()</source>
          <target state="translated">ArrayOps.sortWith()</target>
        </trans-unit>
        <trans-unit id="a1460116c890a219d8ce38e3aaa58bea526f02af" translate="yes" xml:space="preserve">
          <source>ArrayOps.sorted()</source>
          <target state="translated">ArrayOps.sorted()</target>
        </trans-unit>
        <trans-unit id="4f8772839967cc4a3920842722f24406f91ca3cc" translate="yes" xml:space="preserve">
          <source>ArrayOps.span()</source>
          <target state="translated">ArrayOps.span()</target>
        </trans-unit>
        <trans-unit id="c6f0aa5080df6deefbd5b9b4b61034f5c922d780" translate="yes" xml:space="preserve">
          <source>ArrayOps.splitAt()</source>
          <target state="translated">ArrayOps.splitAt()</target>
        </trans-unit>
        <trans-unit id="dd54ecbf80eaa1e3ca68ce3aa184a8460c231218" translate="yes" xml:space="preserve">
          <source>ArrayOps.startsWith()</source>
          <target state="translated">ArrayOps.startsWith()</target>
        </trans-unit>
        <trans-unit id="f9ce01952f407278e91b094fd8ab49af4889f2b7" translate="yes" xml:space="preserve">
          <source>ArrayOps.stepper()</source>
          <target state="translated">ArrayOps.stepper()</target>
        </trans-unit>
        <trans-unit id="1b7597befc368fa0f587fe9ddbdc0094b87014fe" translate="yes" xml:space="preserve">
          <source>ArrayOps.tail()</source>
          <target state="translated">ArrayOps.tail()</target>
        </trans-unit>
        <trans-unit id="32b1bec4412bbe47820b168140d04a7de652d220" translate="yes" xml:space="preserve">
          <source>ArrayOps.tails()</source>
          <target state="translated">ArrayOps.tails()</target>
        </trans-unit>
        <trans-unit id="e63e25b8c9022d1b27976958f3fc30b2727ec5e6" translate="yes" xml:space="preserve">
          <source>ArrayOps.take()</source>
          <target state="translated">ArrayOps.take()</target>
        </trans-unit>
        <trans-unit id="91ea25c4666fd6a86ee9946fdfa51db3db75327d" translate="yes" xml:space="preserve">
          <source>ArrayOps.takeRight()</source>
          <target state="translated">ArrayOps.takeRight()</target>
        </trans-unit>
        <trans-unit id="8b7fb0309ed0b729cdd571541c1c9f4afb16a750" translate="yes" xml:space="preserve">
          <source>ArrayOps.takeWhile()</source>
          <target state="translated">ArrayOps.takeWhile()</target>
        </trans-unit>
        <trans-unit id="f78f437ba225d4bc3d2b4aef8033dba4f34a7200" translate="yes" xml:space="preserve">
          <source>ArrayOps.toArray()</source>
          <target state="translated">ArrayOps.toArray()</target>
        </trans-unit>
        <trans-unit id="5da0f743902977193a020fb7d240c63fc50631d6" translate="yes" xml:space="preserve">
          <source>ArrayOps.toIndexedSeq()</source>
          <target state="translated">ArrayOps.toIndexedSeq()</target>
        </trans-unit>
        <trans-unit id="485fc7647d0e909618304f358850ed3e389f2718" translate="yes" xml:space="preserve">
          <source>ArrayOps.toSeq()</source>
          <target state="translated">ArrayOps.toSeq()</target>
        </trans-unit>
        <trans-unit id="9e27062ea0a5b3a3e47d846230bb9803e0f2fe1b" translate="yes" xml:space="preserve">
          <source>ArrayOps.transpose()</source>
          <target state="translated">ArrayOps.transpose()</target>
        </trans-unit>
        <trans-unit id="1ae171395adba40ab226aaa98835009e219328de" translate="yes" xml:space="preserve">
          <source>ArrayOps.unzip()</source>
          <target state="translated">ArrayOps.unzip()</target>
        </trans-unit>
        <trans-unit id="be3c5f313cbf8c84e52f4b35e8c1366e01d6d160" translate="yes" xml:space="preserve">
          <source>ArrayOps.unzip3()</source>
          <target state="translated">ArrayOps.unzip3()</target>
        </trans-unit>
        <trans-unit id="1e3230b6210e6292a94b62f1de244bde38b1a708" translate="yes" xml:space="preserve">
          <source>ArrayOps.updated()</source>
          <target state="translated">ArrayOps.updated()</target>
        </trans-unit>
        <trans-unit id="76b34cfca341d6ed17a9e471a2adac340280304e" translate="yes" xml:space="preserve">
          <source>ArrayOps.view()</source>
          <target state="translated">ArrayOps.view()</target>
        </trans-unit>
        <trans-unit id="1b90ab638e8024dc91696ce53c5f731d969e1a2b" translate="yes" xml:space="preserve">
          <source>ArrayOps.withFilter()</source>
          <target state="translated">ArrayOps.withFilter()</target>
        </trans-unit>
        <trans-unit id="befed72024bd2c88d9bc2aaa0d46bce5d461bbb7" translate="yes" xml:space="preserve">
          <source>ArrayOps.zip()</source>
          <target state="translated">ArrayOps.zip()</target>
        </trans-unit>
        <trans-unit id="978afd173fd474cd354df1c5beda28aee6a839c8" translate="yes" xml:space="preserve">
          <source>ArrayOps.zipAll()</source>
          <target state="translated">ArrayOps.zipAll()</target>
        </trans-unit>
        <trans-unit id="62663da294744fbb7cbedef5399165e4ce152ee7" translate="yes" xml:space="preserve">
          <source>ArrayOps.zipWithIndex()</source>
          <target state="translated">ArrayOps.zipWithIndex()</target>
        </trans-unit>
        <trans-unit id="dabb7665330db0073778041e2897f1812cf35e86" translate="yes" xml:space="preserve">
          <source>ArraySeq</source>
          <target state="translated">ArraySeq</target>
        </trans-unit>
        <trans-unit id="f698260ab2bcf08be877d02333bb021db81d4515" translate="yes" xml:space="preserve">
          <source>ArraySeq$</source>
          <target state="translated">ArraySeq$</target>
        </trans-unit>
        <trans-unit id="0d765ca66745d658db84873f352c7999dc2d2336" translate="yes" xml:space="preserve">
          <source>ArraySeq$.empty()</source>
          <target state="translated">ArraySeq$.empty()</target>
        </trans-unit>
        <trans-unit id="f681ff7dab0dbe217be78008373e7f35eea14d16" translate="yes" xml:space="preserve">
          <source>ArraySeq$.fill()</source>
          <target state="translated">ArraySeq$.fill()</target>
        </trans-unit>
        <trans-unit id="66f984174680a168d8bdd627b5b30cc4ad24aa49" translate="yes" xml:space="preserve">
          <source>ArraySeq$.from()</source>
          <target state="translated">ArraySeq$.from()</target>
        </trans-unit>
        <trans-unit id="c82a0c06d8e1a7fb27a1feb34cbc680ff8746cfd" translate="yes" xml:space="preserve">
          <source>ArraySeq$.make()</source>
          <target state="translated">ArraySeq$.make()</target>
        </trans-unit>
        <trans-unit id="872d727edda7706a896024f922d699f38515d377" translate="yes" xml:space="preserve">
          <source>ArraySeq$.newBuilder()</source>
          <target state="translated">ArraySeq$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="829a4cdbc33c65ffe17d37964123f294ead26560" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean</source>
          <target state="translated">ArraySeq$.ofBoolean</target>
        </trans-unit>
        <trans-unit id="30d288ac4ab5283ee5b3121b61f31e73ea6d7072" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean()</source>
          <target state="translated">ArraySeq$.ofBoolean()</target>
        </trans-unit>
        <trans-unit id="b42a97977fd28568590d3daeca6b61c244aa756c" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.apply()</source>
          <target state="translated">ArraySeq$.ofBoolean.apply()</target>
        </trans-unit>
        <trans-unit id="4ec299012e7b4afc2e595fc0cf999ff5ecf03fe5" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.array()</source>
          <target state="translated">ArraySeq$.ofBoolean.array()</target>
        </trans-unit>
        <trans-unit id="c039529574714ac94bef94d1acfd9b7415b6b0d9" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.elemTag()</source>
          <target state="translated">ArraySeq$.ofBoolean.elemTag()</target>
        </trans-unit>
        <trans-unit id="0acf35863b6f5a3021e30a3ccaf71a1798764503" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.equals()</source>
          <target state="translated">ArraySeq$.ofBoolean.equals()</target>
        </trans-unit>
        <trans-unit id="7a9a43f97843ea31bbd08faccc232a81474b80c0" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.hashCode()</source>
          <target state="translated">ArraySeq$.ofBoolean.hashCode()</target>
        </trans-unit>
        <trans-unit id="dda1893e237b71dffd7cb66748e68b260239eb21" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.length()</source>
          <target state="translated">ArraySeq$.ofBoolean.length()</target>
        </trans-unit>
        <trans-unit id="adf6ee6acb28505183b7e0bfeea350bd0c56ae96" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.ofBoolean()</source>
          <target state="translated">ArraySeq$.ofBoolean.ofBoolean()</target>
        </trans-unit>
        <trans-unit id="1fb05a9a4afed0160d551d2a2708b95de276dc95" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.sorted()</source>
          <target state="translated">ArraySeq$.ofBoolean.sorted()</target>
        </trans-unit>
        <trans-unit id="06ff410c305c7d12b72f9be48ba548d82cc835bf" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofBoolean.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="91b7336cc2fb301186067ba6e7fcc4c24a5dfcd3" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofBoolean.update()</source>
          <target state="translated">ArraySeq$.ofBoolean.update()</target>
        </trans-unit>
        <trans-unit id="1c5d58da6ba10ef3d194cdd97a33618b0e7ee481" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte</source>
          <target state="translated">ArraySeq$.ofByte</target>
        </trans-unit>
        <trans-unit id="d1ae775469c115d5c99fe1fe099d7045635c427e" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte()</source>
          <target state="translated">ArraySeq$.ofByte()</target>
        </trans-unit>
        <trans-unit id="9293b1d7b863bc732db52d3c6f51e766e4bb5987" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.apply()</source>
          <target state="translated">ArraySeq$.ofByte.apply()</target>
        </trans-unit>
        <trans-unit id="457bb816e2e6cebd2149d479ec5d8bf68b14597d" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.array()</source>
          <target state="translated">ArraySeq$.ofByte.array()</target>
        </trans-unit>
        <trans-unit id="2848b7cf15a7f6cdad1a09dfdebfe6b2bfc2ea27" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.elemTag()</source>
          <target state="translated">ArraySeq$.ofByte.elemTag()</target>
        </trans-unit>
        <trans-unit id="6bac0d192c6ad3b27f3e022f13329cffaa53b4f9" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.equals()</source>
          <target state="translated">ArraySeq$.ofByte.equals()</target>
        </trans-unit>
        <trans-unit id="cb1ed362433a1614de7874661af01fc5e47d40e3" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.hashCode()</source>
          <target state="translated">ArraySeq$.ofByte.hashCode()</target>
        </trans-unit>
        <trans-unit id="53b2891bce28cacff2be2311959dec1152989962" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.length()</source>
          <target state="translated">ArraySeq$.ofByte.length()</target>
        </trans-unit>
        <trans-unit id="412f2be1cf7b1dc3471cb616983133303d3b0812" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.ofByte()</source>
          <target state="translated">ArraySeq$.ofByte.ofByte()</target>
        </trans-unit>
        <trans-unit id="b9603f092df40716d40912172a050025506efe26" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.sorted()</source>
          <target state="translated">ArraySeq$.ofByte.sorted()</target>
        </trans-unit>
        <trans-unit id="11433ef21eb2946249b46040b859416cb49894ff" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofByte.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="2cc1ac7eaab29c911f900dbbab3e974a190cbea8" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofByte.update()</source>
          <target state="translated">ArraySeq$.ofByte.update()</target>
        </trans-unit>
        <trans-unit id="f7a42dfd985efbda5d707e616328366ae40d4de7" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar</source>
          <target state="translated">ArraySeq$.ofChar</target>
        </trans-unit>
        <trans-unit id="e8113db72e7f92ed79f9f030cb5dadb967edcfcf" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar()</source>
          <target state="translated">ArraySeq$.ofChar()</target>
        </trans-unit>
        <trans-unit id="007cc52acba34533def190e50ce536babca27ec3" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.addString()</source>
          <target state="translated">ArraySeq$.ofChar.addString()</target>
        </trans-unit>
        <trans-unit id="ffda191c25904afa6c503bcdbd82cea090300e20" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.apply()</source>
          <target state="translated">ArraySeq$.ofChar.apply()</target>
        </trans-unit>
        <trans-unit id="efc9541571b0b91d51a9d65ca81e0f2b4dd72f06" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.array()</source>
          <target state="translated">ArraySeq$.ofChar.array()</target>
        </trans-unit>
        <trans-unit id="bc6d316e7e19dfbd50838003ae0fa379bcfc3e6a" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.elemTag()</source>
          <target state="translated">ArraySeq$.ofChar.elemTag()</target>
        </trans-unit>
        <trans-unit id="8eb6347750f7d9c22bb8e207604c1e0a86676f31" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.equals()</source>
          <target state="translated">ArraySeq$.ofChar.equals()</target>
        </trans-unit>
        <trans-unit id="ac04bf1bd33dd8b5f285709cde7df0a2bba70224" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.hashCode()</source>
          <target state="translated">ArraySeq$.ofChar.hashCode()</target>
        </trans-unit>
        <trans-unit id="4fb49e188276c1cd3990adaf7ef057714032e245" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.length()</source>
          <target state="translated">ArraySeq$.ofChar.length()</target>
        </trans-unit>
        <trans-unit id="813822b70334c999415c204e4a155550cdb46ccf" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.ofChar()</source>
          <target state="translated">ArraySeq$.ofChar.ofChar()</target>
        </trans-unit>
        <trans-unit id="a3d435931b41a8c3062e1be77b295fd1767b727a" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.sorted()</source>
          <target state="translated">ArraySeq$.ofChar.sorted()</target>
        </trans-unit>
        <trans-unit id="b08d1a8016cc01edde4d0118f86ef99fa2f0e21d" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofChar.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="2a8a5a589d16364b7f98f916b3e79f5c00531e10" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofChar.update()</source>
          <target state="translated">ArraySeq$.ofChar.update()</target>
        </trans-unit>
        <trans-unit id="497c8b201a2965572b5682596e18ee8035026236" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble</source>
          <target state="translated">ArraySeq$.ofDouble</target>
        </trans-unit>
        <trans-unit id="78de7ee2d26adce1dd764d5a3b3704b36fa9769d" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble()</source>
          <target state="translated">ArraySeq$.ofDouble()</target>
        </trans-unit>
        <trans-unit id="22bcfd69f8dfdded93b7423038147df094e6233c" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble.apply()</source>
          <target state="translated">ArraySeq$.ofDouble.apply()</target>
        </trans-unit>
        <trans-unit id="e931eee529d64a9d5d4235bb15253572dfc621b1" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble.array()</source>
          <target state="translated">ArraySeq$.ofDouble.array()</target>
        </trans-unit>
        <trans-unit id="a07c24044cd27439c1a09a0861fc5aea995dbd65" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble.elemTag()</source>
          <target state="translated">ArraySeq$.ofDouble.elemTag()</target>
        </trans-unit>
        <trans-unit id="f249e2931b4f5ec813ca79a5164c676b1dba3089" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble.equals()</source>
          <target state="translated">ArraySeq$.ofDouble.equals()</target>
        </trans-unit>
        <trans-unit id="20f369d434c4b0922dff78d258ce39cd54fa14e1" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble.hashCode()</source>
          <target state="translated">ArraySeq$.ofDouble.hashCode()</target>
        </trans-unit>
        <trans-unit id="5773d290ae59037284c4c11b28d305334808f31f" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble.length()</source>
          <target state="translated">ArraySeq$.ofDouble.length()</target>
        </trans-unit>
        <trans-unit id="de1f5ad1d64af80a67fe0ee09a35ad30cb564e08" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble.ofDouble()</source>
          <target state="translated">ArraySeq$.ofDouble.ofDouble()</target>
        </trans-unit>
        <trans-unit id="d887441764ec111a0911b10f289ef9ee1ffe7655" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofDouble.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="5f614410001e08eea44cf46bdad354437494a48e" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofDouble.update()</source>
          <target state="translated">ArraySeq$.ofDouble.update()</target>
        </trans-unit>
        <trans-unit id="df4608df22b45cd9f1f38cb545c8622b47bdbc39" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat</source>
          <target state="translated">ArraySeq$.ofFloat</target>
        </trans-unit>
        <trans-unit id="61a991decdfc4680c2f3638ade126bd83b261c4a" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat()</source>
          <target state="translated">ArraySeq$.ofFloat()</target>
        </trans-unit>
        <trans-unit id="baf4a897695f8e48924acf13f2a1af4a0e2d5844" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat.apply()</source>
          <target state="translated">ArraySeq$.ofFloat.apply()</target>
        </trans-unit>
        <trans-unit id="699c6870f2f60559e12ab87e09540084a787776a" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat.array()</source>
          <target state="translated">ArraySeq$.ofFloat.array()</target>
        </trans-unit>
        <trans-unit id="24efbf97dd6c4617ee96504c8a56b3a6f8f74610" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat.elemTag()</source>
          <target state="translated">ArraySeq$.ofFloat.elemTag()</target>
        </trans-unit>
        <trans-unit id="2578ef30618ddc09eba633842db3e3ac95a37c2c" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat.equals()</source>
          <target state="translated">ArraySeq$.ofFloat.equals()</target>
        </trans-unit>
        <trans-unit id="a8c2baa6662f0762d456547746ccad5274e1d3fd" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat.hashCode()</source>
          <target state="translated">ArraySeq$.ofFloat.hashCode()</target>
        </trans-unit>
        <trans-unit id="51d62df980bcfa0da279ebcbf127d8d126baf573" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat.length()</source>
          <target state="translated">ArraySeq$.ofFloat.length()</target>
        </trans-unit>
        <trans-unit id="94e5996afe6b57bce06337e47e293ea001a39dee" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat.ofFloat()</source>
          <target state="translated">ArraySeq$.ofFloat.ofFloat()</target>
        </trans-unit>
        <trans-unit id="1cb98b03eacfbc2855ff05da932afa74d39f7396" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat.unsafeArray()</source>
          <target state="translated">ArraySeq$.ofFloat.unsafeArray()</target>
        </trans-unit>
        <trans-unit id="e0c6b68190ed7fa0f8d3609f8336566dfaa6b180" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofFloat.update()</source>
          <target state="translated">ArraySeq$.ofFloat.update()</target>
        </trans-unit>
        <trans-unit id="67d99adb65c953c8120504fd8c78eb9e5d40ba70" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt</source>
          <target state="translated">ArraySeq$.ofInt</target>
        </trans-unit>
        <trans-unit id="e4eb92a0c39d298d6f857f9255596fd687cb6c58" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt()</source>
          <target state="translated">ArraySeq$.ofInt()</target>
        </trans-unit>
        <trans-unit id="bfce54168c721d07147c8d9fb7cc8416d33e9ef5" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.apply()</source>
          <target state="translated">ArraySeq$.ofInt.apply()</target>
        </trans-unit>
        <trans-unit id="4d2e9b1ebdf9c3754a7ad7dd0ccb6541c96173bb" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.array()</source>
          <target state="translated">ArraySeq$.ofInt.array()</target>
        </trans-unit>
        <trans-unit id="c3dcdcd28220c782a31057669c8692f9041db7ea" translate="yes" xml:space="preserve">
          <source>ArraySeq$.ofInt.elemTag()</source>
          <target state="translated">ArraySeq$.ofInt.elemTag()</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
