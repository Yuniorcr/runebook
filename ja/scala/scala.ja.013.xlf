<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ja" datatype="htmlbody" original="scala">
    <body>
      <group id="scala">
        <trans-unit id="bc99d8c877398015d27adc03a84b38d6aebbd5a6" translate="yes" xml:space="preserve">
          <source>MapFactory$.Delegate.from()</source>
          <target state="translated">MapFactory$.Delegate.from()</target>
        </trans-unit>
        <trans-unit id="f74b6d10b350e8613e2c4b72395fd887541df71c" translate="yes" xml:space="preserve">
          <source>MapFactory$.Delegate.newBuilder()</source>
          <target state="translated">MapFactory$.Delegate.newBuilder()</target>
        </trans-unit>
        <trans-unit id="a268da1aada67956b70f6d0b81e5a1f5b9b69081" translate="yes" xml:space="preserve">
          <source>MapFactory$.toBuildFrom()</source>
          <target state="translated">MapFactory$.toBuildFrom()</target>
        </trans-unit>
        <trans-unit id="7a90ea58c9a9eeec21fba3c0de2b229a44ded70b" translate="yes" xml:space="preserve">
          <source>MapFactory$.toFactory()</source>
          <target state="translated">MapFactory$.toFactory()</target>
        </trans-unit>
        <trans-unit id="3660b0037310fa51cc30aaf26b639b5268e9d6b7" translate="yes" xml:space="preserve">
          <source>MapFactory.apply()</source>
          <target state="translated">MapFactory.apply()</target>
        </trans-unit>
        <trans-unit id="08729d3350689eeb6a0e3aa575f982f4fca6a77d" translate="yes" xml:space="preserve">
          <source>MapFactory.empty()</source>
          <target state="translated">MapFactory.empty()</target>
        </trans-unit>
        <trans-unit id="39cb30e7624e0a2627834454e8970029b9a3c84a" translate="yes" xml:space="preserve">
          <source>MapFactory.from()</source>
          <target state="translated">MapFactory.from()</target>
        </trans-unit>
        <trans-unit id="96ef13a5acf116eba425fe8402c12e679aeaca9a" translate="yes" xml:space="preserve">
          <source>MapFactory.mapFactory()</source>
          <target state="translated">MapFactory.mapFactory()</target>
        </trans-unit>
        <trans-unit id="6244f22481c5c8d4b4cb8604c81101ce8b525002" translate="yes" xml:space="preserve">
          <source>MapFactory.newBuilder()</source>
          <target state="translated">MapFactory.newBuilder()</target>
        </trans-unit>
        <trans-unit id="cfb787c9a15ea2b6127a48d5481f2883935bfd89" translate="yes" xml:space="preserve">
          <source>MapFactoryDefaults</source>
          <target state="translated">MapFactoryDefaults</target>
        </trans-unit>
        <trans-unit id="6dbd09f20e0dc5ff5f9434f58750e49f8a8553b4" translate="yes" xml:space="preserve">
          <source>MapFactoryDefaults.empty()</source>
          <target state="translated">MapFactoryDefaults.empty()</target>
        </trans-unit>
        <trans-unit id="f096b2b126ebb2051247516ece7c7e2beab4fec1" translate="yes" xml:space="preserve">
          <source>MapFactoryDefaults.fromSpecific()</source>
          <target state="translated">MapFactoryDefaults.fromSpecific()</target>
        </trans-unit>
        <trans-unit id="d537a389d941362e19507c095e7e02cb9f48466a" translate="yes" xml:space="preserve">
          <source>MapFactoryDefaults.newSpecificBuilder()</source>
          <target state="translated">MapFactoryDefaults.newSpecificBuilder()</target>
        </trans-unit>
        <trans-unit id="8d25f01e3afdcb9351aaed3305a08a9d6c309993" translate="yes" xml:space="preserve">
          <source>MapFactoryDefaults.withFilter()</source>
          <target state="translated">MapFactoryDefaults.withFilter()</target>
        </trans-unit>
        <trans-unit id="9e1935f04483ffa071032ceaa26c3dffe74dd9e1" translate="yes" xml:space="preserve">
          <source>MapOps</source>
          <target state="translated">MapOps</target>
        </trans-unit>
        <trans-unit id="c622a14115f5519ae847d8042531b486451646bd" translate="yes" xml:space="preserve">
          <source>MapOps$</source>
          <target state="translated">MapOps$</target>
        </trans-unit>
        <trans-unit id="b296765fff265b4fa25330b6740983cc16d45ba4" translate="yes" xml:space="preserve">
          <source>MapOps$.WithFilter</source>
          <target state="translated">MapOps$.WithFilter</target>
        </trans-unit>
        <trans-unit id="484e9f5f99e77e8b736e00fb25c054c2e55e4e56" translate="yes" xml:space="preserve">
          <source>MapOps$.WithFilter()</source>
          <target state="translated">MapOps$.WithFilter()</target>
        </trans-unit>
        <trans-unit id="1b83558851297562615f3d6e1b61ac94f65d33f6" translate="yes" xml:space="preserve">
          <source>MapOps$.WithFilter.WithFilter()</source>
          <target state="translated">MapOps$.WithFilter.WithFilter()</target>
        </trans-unit>
        <trans-unit id="22b86cb759bcf499a8d35e761e24a17ae2d13082" translate="yes" xml:space="preserve">
          <source>MapOps$.WithFilter.flatMap()</source>
          <target state="translated">MapOps$.WithFilter.flatMap()</target>
        </trans-unit>
        <trans-unit id="b68eed1033c8f0b903a8dc488f31f888e2becc32" translate="yes" xml:space="preserve">
          <source>MapOps$.WithFilter.map()</source>
          <target state="translated">MapOps$.WithFilter.map()</target>
        </trans-unit>
        <trans-unit id="14bb37d3886e6531d36aced1cab0ceaeade5ccdf" translate="yes" xml:space="preserve">
          <source>MapOps$.WithFilter.withFilter()</source>
          <target state="translated">MapOps$.WithFilter.withFilter()</target>
        </trans-unit>
        <trans-unit id="897b0a215236581db1196cdd045f2cba102c9fa0" translate="yes" xml:space="preserve">
          <source>MapOps.+()</source>
          <target state="translated">MapOps.+()</target>
        </trans-unit>
        <trans-unit id="abb2e3304d48b22818794f5d3401cb2b4b2accd9" translate="yes" xml:space="preserve">
          <source>MapOps.++()</source>
          <target state="translated">MapOps.++()</target>
        </trans-unit>
        <trans-unit id="756228a5c22c1bc1230584560cf02cab95539c5d" translate="yes" xml:space="preserve">
          <source>MapOps.-()</source>
          <target state="translated">MapOps.-()</target>
        </trans-unit>
        <trans-unit id="9313f61587eab15f4245b855edccdf785a72baf1" translate="yes" xml:space="preserve">
          <source>MapOps.--()</source>
          <target state="translated">MapOps.--()</target>
        </trans-unit>
        <trans-unit id="18dea519d154876f72db50ea7ce2950359c53ea0" translate="yes" xml:space="preserve">
          <source>MapOps.GenKeySet</source>
          <target state="translated">MapOps.GenKeySet</target>
        </trans-unit>
        <trans-unit id="7e86df36efc3e3aacb435ce041ae44c515dbb579" translate="yes" xml:space="preserve">
          <source>MapOps.GenKeySet()</source>
          <target state="translated">MapOps.GenKeySet()</target>
        </trans-unit>
        <trans-unit id="7a82b5be1fad84b2c7339687b60dbc5d0c51ccae" translate="yes" xml:space="preserve">
          <source>MapOps.GenKeySet.contains()</source>
          <target state="translated">MapOps.GenKeySet.contains()</target>
        </trans-unit>
        <trans-unit id="7ecfc068a9a6235b109923480d7c4bdd362df14e" translate="yes" xml:space="preserve">
          <source>MapOps.GenKeySet.isEmpty()</source>
          <target state="translated">MapOps.GenKeySet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="2ee8c4a783b84f4addaffd8859429dd012366f4f" translate="yes" xml:space="preserve">
          <source>MapOps.GenKeySet.iterator()</source>
          <target state="translated">MapOps.GenKeySet.iterator()</target>
        </trans-unit>
        <trans-unit id="b64c57806cdf999d0fda58314141319cdf010b59" translate="yes" xml:space="preserve">
          <source>MapOps.GenKeySet.knownSize()</source>
          <target state="translated">MapOps.GenKeySet.knownSize()</target>
        </trans-unit>
        <trans-unit id="b2815d8af696c8319d71fc94aa7239251b3229dd" translate="yes" xml:space="preserve">
          <source>MapOps.GenKeySet.size()</source>
          <target state="translated">MapOps.GenKeySet.size()</target>
        </trans-unit>
        <trans-unit id="d4af5861990aa2ef4de583ad37a35b4f12b3db28" translate="yes" xml:space="preserve">
          <source>MapOps.ImmutableKeySet</source>
          <target state="translated">MapOps.ImmutableKeySet</target>
        </trans-unit>
        <trans-unit id="4e8208565df37179bd4ba230fe31c205fe5d28ef" translate="yes" xml:space="preserve">
          <source>MapOps.ImmutableKeySet()</source>
          <target state="translated">MapOps.ImmutableKeySet()</target>
        </trans-unit>
        <trans-unit id="cf188e94d050d8226b897dbf85d63a43078a97eb" translate="yes" xml:space="preserve">
          <source>MapOps.ImmutableKeySet.ImmutableKeySet()</source>
          <target state="translated">MapOps.ImmutableKeySet.ImmutableKeySet()</target>
        </trans-unit>
        <trans-unit id="88eefc3c6b981b170571cae56ad18097d8c3efdd" translate="yes" xml:space="preserve">
          <source>MapOps.ImmutableKeySet.excl()</source>
          <target state="translated">MapOps.ImmutableKeySet.excl()</target>
        </trans-unit>
        <trans-unit id="ba971d96541d40eb2b3e6281897f0ee3be98c7ec" translate="yes" xml:space="preserve">
          <source>MapOps.ImmutableKeySet.incl()</source>
          <target state="translated">MapOps.ImmutableKeySet.incl()</target>
        </trans-unit>
        <trans-unit id="44a09fd2cbcbb13ab9f5eee533e8993472acc5a3" translate="yes" xml:space="preserve">
          <source>MapOps.KeySet</source>
          <target state="translated">MapOps.KeySet</target>
        </trans-unit>
        <trans-unit id="02600b3516aa5337093ddc9eede0cb464a55e8e1" translate="yes" xml:space="preserve">
          <source>MapOps.KeySet()</source>
          <target state="translated">MapOps.KeySet()</target>
        </trans-unit>
        <trans-unit id="1f3d0874fd4c09aa412450eb2688dc55862d98ac" translate="yes" xml:space="preserve">
          <source>MapOps.KeySet.KeySet()</source>
          <target state="translated">MapOps.KeySet.KeySet()</target>
        </trans-unit>
        <trans-unit id="3822fd01916d9afbd2be9c02eeb58ccae3766817" translate="yes" xml:space="preserve">
          <source>MapOps.KeySet.diff()</source>
          <target state="translated">MapOps.KeySet.diff()</target>
        </trans-unit>
        <trans-unit id="5e480caf40a8b38234624ab262b746d36fead5fd" translate="yes" xml:space="preserve">
          <source>MapOps.addString()</source>
          <target state="translated">MapOps.addString()</target>
        </trans-unit>
        <trans-unit id="d90f0f7526032a629f0cc98ee4e895a61f2150fa" translate="yes" xml:space="preserve">
          <source>MapOps.apply()</source>
          <target state="translated">MapOps.apply()</target>
        </trans-unit>
        <trans-unit id="2f59ad4c8c6dbc22300fff1acc5fd0853a2bdfe9" translate="yes" xml:space="preserve">
          <source>MapOps.applyOrElse()</source>
          <target state="translated">MapOps.applyOrElse()</target>
        </trans-unit>
        <trans-unit id="46f28048f18e73da084c9a9ee0a64d1a102ea255" translate="yes" xml:space="preserve">
          <source>MapOps.clear()</source>
          <target state="translated">MapOps.clear()</target>
        </trans-unit>
        <trans-unit id="20a8d6fae87fe9fd248334fd7599bcba0dff7a74" translate="yes" xml:space="preserve">
          <source>MapOps.clone()</source>
          <target state="translated">MapOps.clone()</target>
        </trans-unit>
        <trans-unit id="74387ee15c5389bb23d23734577f481b3fe3a291" translate="yes" xml:space="preserve">
          <source>MapOps.coll()</source>
          <target state="translated">MapOps.coll()</target>
        </trans-unit>
        <trans-unit id="6e81f2064863cd9ffbea5f5c76ec64a2f227d504" translate="yes" xml:space="preserve">
          <source>MapOps.collect()</source>
          <target state="translated">MapOps.collect()</target>
        </trans-unit>
        <trans-unit id="6ea68280db6fed13af6a20bedeff5efc0179712f" translate="yes" xml:space="preserve">
          <source>MapOps.concat()</source>
          <target state="translated">MapOps.concat()</target>
        </trans-unit>
        <trans-unit id="ba630e37c3a4d1a8cf8707a924cfb99909836224" translate="yes" xml:space="preserve">
          <source>MapOps.contains()</source>
          <target state="translated">MapOps.contains()</target>
        </trans-unit>
        <trans-unit id="4f81da6fa1daa0575c3673255580c8a4fbcd7a90" translate="yes" xml:space="preserve">
          <source>MapOps.default()</source>
          <target state="translated">MapOps.default()</target>
        </trans-unit>
        <trans-unit id="5c00ad6a5a2ac557b6f32f48ba38cab1f982ff76" translate="yes" xml:space="preserve">
          <source>MapOps.filterInPlace()</source>
          <target state="translated">MapOps.filterInPlace()</target>
        </trans-unit>
        <trans-unit id="5f3547fe8e2c64e6f454cff6ac8739ae8b8926ce" translate="yes" xml:space="preserve">
          <source>MapOps.flatMap()</source>
          <target state="translated">MapOps.flatMap()</target>
        </trans-unit>
        <trans-unit id="7004a6213dfdd237b8385191a5254eafd0f33393" translate="yes" xml:space="preserve">
          <source>MapOps.foreachEntry()</source>
          <target state="translated">MapOps.foreachEntry()</target>
        </trans-unit>
        <trans-unit id="d49dfaa1058922a0c1fba57b25c975415d335ca1" translate="yes" xml:space="preserve">
          <source>MapOps.get()</source>
          <target state="translated">MapOps.get()</target>
        </trans-unit>
        <trans-unit id="c46482f9bf43c07b0534be8b7704d189a58b92c1" translate="yes" xml:space="preserve">
          <source>MapOps.getOrElse()</source>
          <target state="translated">MapOps.getOrElse()</target>
        </trans-unit>
        <trans-unit id="7fcd1bc7b510c2159202867c476605045c8193db" translate="yes" xml:space="preserve">
          <source>MapOps.getOrElseUpdate()</source>
          <target state="translated">MapOps.getOrElseUpdate()</target>
        </trans-unit>
        <trans-unit id="0aaaaaf43a9f93935028bb9bcbc22a3f404cf81d" translate="yes" xml:space="preserve">
          <source>MapOps.isDefinedAt()</source>
          <target state="translated">MapOps.isDefinedAt()</target>
        </trans-unit>
        <trans-unit id="cdb6c102a7454c954e7c963eb77fc331f5f7a37d" translate="yes" xml:space="preserve">
          <source>MapOps.keySet()</source>
          <target state="translated">MapOps.keySet()</target>
        </trans-unit>
        <trans-unit id="e63576b0bd98968f05de7f445c6583ec92e8fcb3" translate="yes" xml:space="preserve">
          <source>MapOps.keyStepper()</source>
          <target state="translated">MapOps.keyStepper()</target>
        </trans-unit>
        <trans-unit id="3d8a05e239714f67cc46348259a7720f71ceb1dc" translate="yes" xml:space="preserve">
          <source>MapOps.keys()</source>
          <target state="translated">MapOps.keys()</target>
        </trans-unit>
        <trans-unit id="0e1979d0693a362a2789ad6fdee7ba2a4ef79f56" translate="yes" xml:space="preserve">
          <source>MapOps.keysIterator()</source>
          <target state="translated">MapOps.keysIterator()</target>
        </trans-unit>
        <trans-unit id="783b53bd50ad54ecb1dbd88a5559ad1f5aa50dd6" translate="yes" xml:space="preserve">
          <source>MapOps.knownSize()</source>
          <target state="translated">MapOps.knownSize()</target>
        </trans-unit>
        <trans-unit id="f5f6d2c2e6cd1776c6ebbdb8d032e9b1af7b0e36" translate="yes" xml:space="preserve">
          <source>MapOps.map()</source>
          <target state="translated">MapOps.map()</target>
        </trans-unit>
        <trans-unit id="1b67f18976ed4117b707829648aa250eed1517c8" translate="yes" xml:space="preserve">
          <source>MapOps.mapFactory()</source>
          <target state="translated">MapOps.mapFactory()</target>
        </trans-unit>
        <trans-unit id="e62b1bf7951aa47ddd2c778e1cd0bcb25aa4e2ab" translate="yes" xml:space="preserve">
          <source>MapOps.mapFromIterable()</source>
          <target state="translated">MapOps.mapFromIterable()</target>
        </trans-unit>
        <trans-unit id="3b69047c5fa94cf362a28932844ed8329b4ab203" translate="yes" xml:space="preserve">
          <source>MapOps.mapValuesInPlace()</source>
          <target state="translated">MapOps.mapValuesInPlace()</target>
        </trans-unit>
        <trans-unit id="65fc9cc2b777b8604624dd0f2564bf530e192c26" translate="yes" xml:space="preserve">
          <source>MapOps.put()</source>
          <target state="translated">MapOps.put()</target>
        </trans-unit>
        <trans-unit id="478e11bbe9f94aee45279a69bb972e9d21b12e06" translate="yes" xml:space="preserve">
          <source>MapOps.remove()</source>
          <target state="translated">MapOps.remove()</target>
        </trans-unit>
        <trans-unit id="7f5d8069e217b119fea797c5ddf72576198d02f8" translate="yes" xml:space="preserve">
          <source>MapOps.removed()</source>
          <target state="translated">MapOps.removed()</target>
        </trans-unit>
        <trans-unit id="94296764cb5b4dd15c1bac2d73fd211f10dc340c" translate="yes" xml:space="preserve">
          <source>MapOps.removedAll()</source>
          <target state="translated">MapOps.removedAll()</target>
        </trans-unit>
        <trans-unit id="ce4e75254221ab854f52d88dd91109102f43c96c" translate="yes" xml:space="preserve">
          <source>MapOps.result()</source>
          <target state="translated">MapOps.result()</target>
        </trans-unit>
        <trans-unit id="a624b61b3d0d1166e54eee6058ffa1200d26e592" translate="yes" xml:space="preserve">
          <source>MapOps.transform()</source>
          <target state="translated">MapOps.transform()</target>
        </trans-unit>
        <trans-unit id="589c98bc2e8323a3f2f7fa6b02856df7cb950a23" translate="yes" xml:space="preserve">
          <source>MapOps.update()</source>
          <target state="translated">MapOps.update()</target>
        </trans-unit>
        <trans-unit id="5312af9fb113614a93db3e4bb699cfa0366153ce" translate="yes" xml:space="preserve">
          <source>MapOps.updateWith()</source>
          <target state="translated">MapOps.updateWith()</target>
        </trans-unit>
        <trans-unit id="e23e56c50fac27e125e681fc362636ff49bc670a" translate="yes" xml:space="preserve">
          <source>MapOps.updated()</source>
          <target state="translated">MapOps.updated()</target>
        </trans-unit>
        <trans-unit id="8efc6bdda64203a44740e1545d7978b7edd11b02" translate="yes" xml:space="preserve">
          <source>MapOps.updatedWith()</source>
          <target state="translated">MapOps.updatedWith()</target>
        </trans-unit>
        <trans-unit id="bdf0320fd6fff0417b2a4cc53ef59d39f35e1da7" translate="yes" xml:space="preserve">
          <source>MapOps.valueStepper()</source>
          <target state="translated">MapOps.valueStepper()</target>
        </trans-unit>
        <trans-unit id="ac7b9d25468ff594d0aa9a64dd7c8f31e145eb4a" translate="yes" xml:space="preserve">
          <source>MapOps.values()</source>
          <target state="translated">MapOps.values()</target>
        </trans-unit>
        <trans-unit id="c83a9fe3a2a836e1a5da175b34b325a071157829" translate="yes" xml:space="preserve">
          <source>MapOps.valuesIterator()</source>
          <target state="translated">MapOps.valuesIterator()</target>
        </trans-unit>
        <trans-unit id="2a3557752d40ea5c3e4fabde3528e0f1823804f8" translate="yes" xml:space="preserve">
          <source>MapOps.view()</source>
          <target state="translated">MapOps.view()</target>
        </trans-unit>
        <trans-unit id="c02dd7ddb4c74492aba35f09b0f5854dc91f3e75" translate="yes" xml:space="preserve">
          <source>MapView</source>
          <target state="translated">MapView</target>
        </trans-unit>
        <trans-unit id="98552ac08f7a7c38d503aa1360e7690b1c3ffcaa" translate="yes" xml:space="preserve">
          <source>MapView$</source>
          <target state="translated">MapView$</target>
        </trans-unit>
        <trans-unit id="1e94a020c8a48517a924a12270d973696602651d" translate="yes" xml:space="preserve">
          <source>MapView$.Filter</source>
          <target state="translated">MapView$.Filter</target>
        </trans-unit>
        <trans-unit id="5237a634b1e0a262cb356ea9a6be4bc9aae79ced" translate="yes" xml:space="preserve">
          <source>MapView$.Filter()</source>
          <target state="translated">MapView$.Filter()</target>
        </trans-unit>
        <trans-unit id="9106b464d782429382314c5e8622955f14c2226c" translate="yes" xml:space="preserve">
          <source>MapView$.Filter.Filter()</source>
          <target state="translated">MapView$.Filter.Filter()</target>
        </trans-unit>
        <trans-unit id="ee0a1e30781d40982b35b11ad6a43a91fa62b182" translate="yes" xml:space="preserve">
          <source>MapView$.Filter.get()</source>
          <target state="translated">MapView$.Filter.get()</target>
        </trans-unit>
        <trans-unit id="873fd9b2640c3306bb63007366c2e1075c38423d" translate="yes" xml:space="preserve">
          <source>MapView$.Filter.isEmpty()</source>
          <target state="translated">MapView$.Filter.isEmpty()</target>
        </trans-unit>
        <trans-unit id="c90801e815169f7e7c17d56187825929e5707d3b" translate="yes" xml:space="preserve">
          <source>MapView$.Filter.iterator()</source>
          <target state="translated">MapView$.Filter.iterator()</target>
        </trans-unit>
        <trans-unit id="1d65555574f07ca34edd04775bc08b5c60471b73" translate="yes" xml:space="preserve">
          <source>MapView$.Filter.knownSize()</source>
          <target state="translated">MapView$.Filter.knownSize()</target>
        </trans-unit>
        <trans-unit id="6b8013cde28e40ab87f7cd55acd9dd6066b50989" translate="yes" xml:space="preserve">
          <source>MapView$.FilterKeys</source>
          <target state="translated">MapView$.FilterKeys</target>
        </trans-unit>
        <trans-unit id="22a1b3f7af56391b8c0e3d55de2e1539f27904b8" translate="yes" xml:space="preserve">
          <source>MapView$.FilterKeys()</source>
          <target state="translated">MapView$.FilterKeys()</target>
        </trans-unit>
        <trans-unit id="e52122ddf13f4aa2206d2ca2a8a4be00a84e829e" translate="yes" xml:space="preserve">
          <source>MapView$.FilterKeys.FilterKeys()</source>
          <target state="translated">MapView$.FilterKeys.FilterKeys()</target>
        </trans-unit>
        <trans-unit id="842f758287b2dc35154251a3ff11d7675d0e3a36" translate="yes" xml:space="preserve">
          <source>MapView$.FilterKeys.get()</source>
          <target state="translated">MapView$.FilterKeys.get()</target>
        </trans-unit>
        <trans-unit id="989e332209b22850a65a55279f0142cfba6e7827" translate="yes" xml:space="preserve">
          <source>MapView$.FilterKeys.isEmpty()</source>
          <target state="translated">MapView$.FilterKeys.isEmpty()</target>
        </trans-unit>
        <trans-unit id="cd35686fa5e6c91153eb418a9b52749f73a77720" translate="yes" xml:space="preserve">
          <source>MapView$.FilterKeys.iterator()</source>
          <target state="translated">MapView$.FilterKeys.iterator()</target>
        </trans-unit>
        <trans-unit id="90fc498835b20b17306f68ef3db3ef67932e3590" translate="yes" xml:space="preserve">
          <source>MapView$.FilterKeys.knownSize()</source>
          <target state="translated">MapView$.FilterKeys.knownSize()</target>
        </trans-unit>
        <trans-unit id="8641872ed7ec3e14f1e72afd997d2b0c51977232" translate="yes" xml:space="preserve">
          <source>MapView$.Id</source>
          <target state="translated">MapView$.Id</target>
        </trans-unit>
        <trans-unit id="cce5d622c96d6cc32fb865be63b3293569949ac1" translate="yes" xml:space="preserve">
          <source>MapView$.Id()</source>
          <target state="translated">MapView$.Id()</target>
        </trans-unit>
        <trans-unit id="906f02a0a5607fe24705f2c66d42876d2dfda333" translate="yes" xml:space="preserve">
          <source>MapView$.Id.Id()</source>
          <target state="translated">MapView$.Id.Id()</target>
        </trans-unit>
        <trans-unit id="ac337dcedbc9df8c5d7dc3adb2ad120a5bcab113" translate="yes" xml:space="preserve">
          <source>MapView$.Id.get()</source>
          <target state="translated">MapView$.Id.get()</target>
        </trans-unit>
        <trans-unit id="f0d86c5d70fabe2c55fa425c3f5935ad9020eca7" translate="yes" xml:space="preserve">
          <source>MapView$.Id.isEmpty()</source>
          <target state="translated">MapView$.Id.isEmpty()</target>
        </trans-unit>
        <trans-unit id="221c816208670abbe467d717f6e139e6c4a7e68e" translate="yes" xml:space="preserve">
          <source>MapView$.Id.iterator()</source>
          <target state="translated">MapView$.Id.iterator()</target>
        </trans-unit>
        <trans-unit id="cb4bf702b712fe585855382a9802a69af25007c0" translate="yes" xml:space="preserve">
          <source>MapView$.Id.knownSize()</source>
          <target state="translated">MapView$.Id.knownSize()</target>
        </trans-unit>
        <trans-unit id="604d1a2a13c8b62ed5565634ccc531004c0412b0" translate="yes" xml:space="preserve">
          <source>MapView$.MapValues</source>
          <target state="translated">MapView$.MapValues</target>
        </trans-unit>
        <trans-unit id="bc4320c991037cbb02fb2645e2ff754a72a8bde3" translate="yes" xml:space="preserve">
          <source>MapView$.MapValues()</source>
          <target state="translated">MapView$.MapValues()</target>
        </trans-unit>
        <trans-unit id="91f27d1f9ce4ccd399cdd798b86b99c73098145f" translate="yes" xml:space="preserve">
          <source>MapView$.MapValues.MapValues()</source>
          <target state="translated">MapView$.MapValues.MapValues()</target>
        </trans-unit>
        <trans-unit id="4a68aec470b5fd57f1b49342f56ff674ed1dfcfd" translate="yes" xml:space="preserve">
          <source>MapView$.MapValues.get()</source>
          <target state="translated">MapView$.MapValues.get()</target>
        </trans-unit>
        <trans-unit id="d89331be2cfe1deae2002fada250d34200850d6a" translate="yes" xml:space="preserve">
          <source>MapView$.MapValues.isEmpty()</source>
          <target state="translated">MapView$.MapValues.isEmpty()</target>
        </trans-unit>
        <trans-unit id="8641620cc911f22212b7bbe94608d765a56b8b20" translate="yes" xml:space="preserve">
          <source>MapView$.MapValues.iterator()</source>
          <target state="translated">MapView$.MapValues.iterator()</target>
        </trans-unit>
        <trans-unit id="d51f5708c6f9d0b948615f2260ab0130ae964e70" translate="yes" xml:space="preserve">
          <source>MapView$.MapValues.knownSize()</source>
          <target state="translated">MapView$.MapValues.knownSize()</target>
        </trans-unit>
        <trans-unit id="867521612c4ee6f11aa894ba1704c08b9944676e" translate="yes" xml:space="preserve">
          <source>MapView$.SomeIterableConstr()</source>
          <target state="translated">MapView$.SomeIterableConstr()</target>
        </trans-unit>
        <trans-unit id="bd1b1281a4da654ab4539a2d256de2cec4f06bd8" translate="yes" xml:space="preserve">
          <source>MapView$.SomeMapOps()</source>
          <target state="translated">MapView$.SomeMapOps()</target>
        </trans-unit>
        <trans-unit id="6673c321f92afd032792b4fe5e576d82511914a0" translate="yes" xml:space="preserve">
          <source>MapView$.TapEach</source>
          <target state="translated">MapView$.TapEach</target>
        </trans-unit>
        <trans-unit id="f7d30be1f48065481487f0fa18a981fc53801a70" translate="yes" xml:space="preserve">
          <source>MapView$.TapEach()</source>
          <target state="translated">MapView$.TapEach()</target>
        </trans-unit>
        <trans-unit id="8a15ffec17366b60bed0271122bde9a95f50e5ba" translate="yes" xml:space="preserve">
          <source>MapView$.TapEach.TapEach()</source>
          <target state="translated">MapView$.TapEach.TapEach()</target>
        </trans-unit>
        <trans-unit id="8c54364ddee5b12520d76fbfca368214c70be6c2" translate="yes" xml:space="preserve">
          <source>MapView$.TapEach.get()</source>
          <target state="translated">MapView$.TapEach.get()</target>
        </trans-unit>
        <trans-unit id="9c20b98cf00fb4783568a0795c14422a81f4a2bb" translate="yes" xml:space="preserve">
          <source>MapView$.TapEach.isEmpty()</source>
          <target state="translated">MapView$.TapEach.isEmpty()</target>
        </trans-unit>
        <trans-unit id="c996ede2b7fae935adda01ec272ae448046cc84f" translate="yes" xml:space="preserve">
          <source>MapView$.TapEach.iterator()</source>
          <target state="translated">MapView$.TapEach.iterator()</target>
        </trans-unit>
        <trans-unit id="7cb094238c28d3799e7c59f91cd7efe5c7bbe952" translate="yes" xml:space="preserve">
          <source>MapView$.TapEach.knownSize()</source>
          <target state="translated">MapView$.TapEach.knownSize()</target>
        </trans-unit>
        <trans-unit id="90473de4a35f1b273d22a07f96757a3587b086ea" translate="yes" xml:space="preserve">
          <source>MapView$.apply()</source>
          <target state="translated">MapView$.apply()</target>
        </trans-unit>
        <trans-unit id="e8d86eff9f3382863e4acaf57817269d45a5090f" translate="yes" xml:space="preserve">
          <source>MapView$.empty()</source>
          <target state="translated">MapView$.empty()</target>
        </trans-unit>
        <trans-unit id="f9baa4bcf6aeb07a6a3b1d97e4a676d510d68807" translate="yes" xml:space="preserve">
          <source>MapView$.from()</source>
          <target state="translated">MapView$.from()</target>
        </trans-unit>
        <trans-unit id="0733444a24dd6fd0ec16455136915a557af86657" translate="yes" xml:space="preserve">
          <source>MapView$.newBuilder()</source>
          <target state="translated">MapView$.newBuilder()</target>
        </trans-unit>
        <trans-unit id="2b56124d100d3f3f51addcbef4caf9524b1f4347" translate="yes" xml:space="preserve">
          <source>MapView.className()</source>
          <target state="translated">MapView.className()</target>
        </trans-unit>
        <trans-unit id="e88edeac8658f55d6b94d1294ea010eea7485d11" translate="yes" xml:space="preserve">
          <source>MapView.empty()</source>
          <target state="translated">MapView.empty()</target>
        </trans-unit>
        <trans-unit id="044ed2de3ae6e9e2460f8811e44412f163aa2135" translate="yes" xml:space="preserve">
          <source>MapView.filter()</source>
          <target state="translated">MapView.filter()</target>
        </trans-unit>
        <trans-unit id="527f9f4c36316a9fa8b97393f123254b7a061273" translate="yes" xml:space="preserve">
          <source>MapView.filterKeys()</source>
          <target state="translated">MapView.filterKeys()</target>
        </trans-unit>
        <trans-unit id="d1f07f94b20223ab237bdb530c97497552f57d99" translate="yes" xml:space="preserve">
          <source>MapView.filterNot()</source>
          <target state="translated">MapView.filterNot()</target>
        </trans-unit>
        <trans-unit id="351d96e587c0e7447924e1e0cb581ba25c388442" translate="yes" xml:space="preserve">
          <source>MapView.mapFactory()</source>
          <target state="translated">MapView.mapFactory()</target>
        </trans-unit>
        <trans-unit id="fe2ddbcae5aad655ae2c8743978f93d76d13c585" translate="yes" xml:space="preserve">
          <source>MapView.mapValues()</source>
          <target state="translated">MapView.mapValues()</target>
        </trans-unit>
        <trans-unit id="392963e21562d0f707a8bb6db298c1fe02c7155f" translate="yes" xml:space="preserve">
          <source>MapView.partition()</source>
          <target state="translated">MapView.partition()</target>
        </trans-unit>
        <trans-unit id="1e1d258dc1fd7e68cc98e4a8710f1f8f90e8880c" translate="yes" xml:space="preserve">
          <source>MapView.scala</source>
          <target state="translated">MapView.scala</target>
        </trans-unit>
        <trans-unit id="034af38ec1d326f61ff3500e70de38787841c84f" translate="yes" xml:space="preserve">
          <source>MapView.tapEach()</source>
          <target state="translated">MapView.tapEach()</target>
        </trans-unit>
        <trans-unit id="a78078e2e26d9273fac4b1ef8453aeed1d1c476b" translate="yes" xml:space="preserve">
          <source>MapView.toString()</source>
          <target state="translated">MapView.toString()</target>
        </trans-unit>
        <trans-unit id="55468972dc1bd3ce07f44685bcfd6379a81fa21c" translate="yes" xml:space="preserve">
          <source>MapView.view()</source>
          <target state="translated">MapView.view()</target>
        </trans-unit>
        <trans-unit id="b4184b01a94dd82f1fd43267bdb9f7dae9e76796" translate="yes" xml:space="preserve">
          <source>MapView.withFilter()</source>
          <target state="translated">MapView.withFilter()</target>
        </trans-unit>
        <trans-unit id="44b2d25d22e28b9da29df76ac85b5450af58e755" translate="yes" xml:space="preserve">
          <source>MapViewFactory</source>
          <target state="translated">MapViewFactory</target>
        </trans-unit>
        <trans-unit id="5762b349122a8f2c270e88081f22efc05244b6ed" translate="yes" xml:space="preserve">
          <source>MapViewFactory.apply()</source>
          <target state="translated">MapViewFactory.apply()</target>
        </trans-unit>
        <trans-unit id="c12e8164c31119580517f4a7c9f5bffb349d1841" translate="yes" xml:space="preserve">
          <source>MapViewFactory.empty()</source>
          <target state="translated">MapViewFactory.empty()</target>
        </trans-unit>
        <trans-unit id="5b0fc5b1a9a88de8d2eb73d59a76effd8f5767be" translate="yes" xml:space="preserve">
          <source>MapViewFactory.from()</source>
          <target state="translated">MapViewFactory.from()</target>
        </trans-unit>
        <trans-unit id="dc92600e92e3917e9dca49fbd11bf1991d45cf5f" translate="yes" xml:space="preserve">
          <source>MapViewFactory.newBuilder()</source>
          <target state="translated">MapViewFactory.newBuilder()</target>
        </trans-unit>
        <trans-unit id="ffc69a323e1fea12350e6e1a6abae69470b975bb" translate="yes" xml:space="preserve">
          <source>Maps the function argument through &lt;code&gt;Left&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50afa2ed3adcbcabce30189cdf2e3f978ae6381c" translate="yes" xml:space="preserve">
          <source>Maps the given function to the value from this &lt;code&gt;Success&lt;/code&gt; or returns this if this is a &lt;code&gt;Failure&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07f5722087701aceb3308b0100bef92a7e196878" translate="yes" xml:space="preserve">
          <source>Maps with open addressing may become less efficient at lookup after repeated addition/removal of elements. Although &lt;code&gt;AnyRefMap&lt;/code&gt; makes a decent attempt to remain efficient regardless, calling &lt;code&gt;repack&lt;/code&gt; on a map that will no longer have elements removed but will be used heavily may save both time and storage space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b3a677d6c4efefca1cb300e7a350cbbb0c587d23" translate="yes" xml:space="preserve">
          <source>Maps with open addressing may become less efficient at lookup after repeated addition/removal of elements. Although &lt;code&gt;LongMap&lt;/code&gt; makes a decent attempt to remain efficient regardless, calling &lt;code&gt;repack&lt;/code&gt; on a map that will no longer have elements removed but will be used heavily may save both time and storage space.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="948aa95f35b2e60564c404bad18b6ad9d58ef9f5" translate="yes" xml:space="preserve">
          <source>Mark an element unused for a given context.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="da3692697028ecd8ef3167fdcd59fd0badcd6187" translate="yes" xml:space="preserve">
          <source>Marker for native methods.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="52b2d5e67df9558a711fb07aca0acdd6ed6b0309" translate="yes" xml:space="preserve">
          <source>Marker trait to indicate that a Runnable is Batchable by BatchingExecutors</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fc56ec7ef4d3a535e32d9068a5ba07709b0baea8" translate="yes" xml:space="preserve">
          <source>Mask to decode the column number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="74e30f718443c2260571d942aaadcde7c6656bc6" translate="yes" xml:space="preserve">
          <source>Mask to decode the line number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e7ccd0c0ef2021d2a47478c0524c36aeff2c825a" translate="yes" xml:space="preserve">
          <source>MatchData</source>
          <target state="translated">MatchData</target>
        </trans-unit>
        <trans-unit id="158acb8638a5ae524e2b6bf247590e2b87f6ec4d" translate="yes" xml:space="preserve">
          <source>MatchError</source>
          <target state="translated">MatchError</target>
        </trans-unit>
        <trans-unit id="a89cc5935695fd64ef823cb28278b09042655d66" translate="yes" xml:space="preserve">
          <source>MatchError.MatchError()</source>
          <target state="translated">MatchError.MatchError()</target>
        </trans-unit>
        <trans-unit id="bc2a8d95f955efef18bc6a102d68f2ae88991d2e" translate="yes" xml:space="preserve">
          <source>MatchError.getMessage()</source>
          <target state="translated">MatchError.getMessage()</target>
        </trans-unit>
        <trans-unit id="a82997234b510b83a2ce2660722d029597203755" translate="yes" xml:space="preserve">
          <source>MatchError.scala</source>
          <target state="translated">MatchError.scala</target>
        </trans-unit>
        <trans-unit id="d40be1d8c8fa03377765f236708148d23f04c253" translate="yes" xml:space="preserve">
          <source>MatchIterator</source>
          <target state="translated">MatchIterator</target>
        </trans-unit>
        <trans-unit id="d3f1c7af9289fa18157ea196628fe9f909bcb6e2" translate="yes" xml:space="preserve">
          <source>May optionally be used as the last mixing step. Is a little bit faster than mix, as it does no further mixing of the resulting hash. For the last element this is not necessary as the hash is thoroughly mixed during finalization anyway.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1992f8d250a41e449fb9198b024767dd9fbb642" translate="yes" xml:space="preserve">
          <source>May return &lt;code&gt;null&lt;/code&gt;, in which case the current Stepper yields the same elements as before.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="245b46c7042e7ac6620d9d731d18dcd1bee2b31f" translate="yes" xml:space="preserve">
          <source>MergeableEither</source>
          <target state="translated">MergeableEither</target>
        </trans-unit>
        <trans-unit id="31a4661b375809dc9e53a23a4e886fb468bc5b7d" translate="yes" xml:space="preserve">
          <source>Method called from equality methods, so that user-defined subclasses can refuse to be equal to other collections of the same kind.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b35872f1b939933d7c4e1ea33c3e022f777c7431" translate="yes" xml:space="preserve">
          <source>Method mirroring &lt;a href=&quot;collection/seqops#lengthIs:scala.collection.IterableOps.SizeCompareOps&quot; id=&quot;scala.collection.SeqOps#lengthIs&quot; name=&quot;scala.collection.SeqOps#lengthIs&quot;&gt;SeqOps.lengthIs&lt;/a&gt; for consistency, except it returns an &lt;code&gt;Int&lt;/code&gt; because &lt;code&gt;length&lt;/code&gt; is known and comparison is constant-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be8a2276d7fafa69515fb4546beececd11fe2233" translate="yes" xml:space="preserve">
          <source>Method mirroring &lt;a href=&quot;collection/seqops#sizeIs:scala.collection.IterableOps.SizeCompareOps&quot; id=&quot;scala.collection.SeqOps#sizeIs&quot; name=&quot;scala.collection.SeqOps#sizeIs&quot;&gt;SeqOps.sizeIs&lt;/a&gt; for consistency, except it returns an &lt;code&gt;Int&lt;/code&gt; because &lt;code&gt;size&lt;/code&gt; is known and comparison is constant-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fbc9d1aa3100edf5a5b19d1de4a7fa44b2b1cc00" translate="yes" xml:space="preserve">
          <source>Method mirroring &lt;a href=&quot;seqops#lengthIs:scala.collection.IterableOps.SizeCompareOps&quot; id=&quot;scala.collection.SeqOps#lengthIs&quot; name=&quot;scala.collection.SeqOps#lengthIs&quot;&gt;SeqOps.lengthIs&lt;/a&gt; for consistency, except it returns an &lt;code&gt;Int&lt;/code&gt; because &lt;code&gt;length&lt;/code&gt; is known and comparison is constant-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d412df6279ea551d7fbcc69cb21e7403aed7c88d" translate="yes" xml:space="preserve">
          <source>Method mirroring &lt;a href=&quot;seqops#sizeIs:scala.collection.IterableOps.SizeCompareOps&quot; id=&quot;scala.collection.SeqOps#sizeIs&quot; name=&quot;scala.collection.SeqOps#sizeIs&quot;&gt;SeqOps.sizeIs&lt;/a&gt; for consistency, except it returns an &lt;code&gt;Int&lt;/code&gt; because &lt;code&gt;size&lt;/code&gt; is known and comparison is constant-time.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7fb0562aa0e9d9b3ba4b260d51c6924e1552602e" translate="yes" xml:space="preserve">
          <source>Methods exported by this object implement tail calls via trampolining. Tail calling methods have to return their result using &lt;code&gt;done&lt;/code&gt; or call the next method using &lt;code&gt;tailcall&lt;/code&gt;. Both return a &lt;code&gt;TailRec&lt;/code&gt; object. The result of evaluating a tailcalling function can be retrieved from a &lt;code&gt;Tailrec&lt;/code&gt; value using method &lt;code&gt;result&lt;/code&gt;. Implemented as described in &quot;Stackless Scala with Free Monads&quot; &lt;a href=&quot;http://blog.higher-order.com/assets/trampolines.pdf&quot;&gt;http://blog.higher-order.com/assets/trampolines.pdf&lt;/a&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5459449d549466c915166598cf3b72d36e37b79f" translate="yes" xml:space="preserve">
          <source>Methods for constructing simple commands that can then be combined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="043b3d9b32db920dbd5200a1cce3a690a314b448" translate="yes" xml:space="preserve">
          <source>Methods that traverse or regenerate the map, including &lt;code&gt;foreach&lt;/code&gt; and &lt;code&gt;map&lt;/code&gt;, are not in general faster than with &lt;code&gt;HashMap&lt;/code&gt;. The methods &lt;code&gt;foreachKey&lt;/code&gt;, &lt;code&gt;foreachValue&lt;/code&gt;, &lt;code&gt;mapValuesNow&lt;/code&gt;, and &lt;code&gt;transformValues&lt;/code&gt; are, however, faster than alternative ways to achieve the same functionality.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e458173eef4a800366eeb68965cf8f147c4756b" translate="yes" xml:space="preserve">
          <source>Migration</source>
          <target state="translated">Migration</target>
        </trans-unit>
        <trans-unit id="44fba6c09fd261a58ae95dea6c5f2768ff8b61c4" translate="yes" xml:space="preserve">
          <source>Mix in a block of data into an intermediate hash value.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="66a37a5b3746486aad2f697c0ede5431f02fe09c" translate="yes" xml:space="preserve">
          <source>Mix-in trait to enable DefaultSerializationProxy for the standard collection types. Depending on the type it is mixed into, it will dynamically choose &lt;code&gt;iterableFactory&lt;/code&gt;, &lt;code&gt;mapFactory&lt;/code&gt;, &lt;code&gt;sortedIterableFactory&lt;/code&gt; or &lt;code&gt;sortedMapFactory&lt;/code&gt; for deserialization into the respective &lt;code&gt;CC&lt;/code&gt; type. Override &lt;code&gt;writeReplace&lt;/code&gt; or implement it directly without using this trait if you need a non-standard factory or if you want to use a different serialization scheme.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf7efc8eb44427e56b50e16b257e266013f204fc" translate="yes" xml:space="preserve">
          <source>Modifies this mutable sequence by applying a function to all elements of this mutable sequence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0b993a81da07d723c813a75bb44c555ee1c7c65c" translate="yes" xml:space="preserve">
          <source>More generic Java function types can be created using the corresponding &lt;code&gt;asJavaXYZ&lt;/code&gt; extension method:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="025bacbcff2b20f6ee28e4d0416bb976fb698b00" translate="yes" xml:space="preserve">
          <source>More information about the other ways of controlling I/O can be found in the Scaladoc for the associated objects, traits and classes.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7830ab2ff7803cc7f4908d36099afa4735bea76" translate="yes" xml:space="preserve">
          <source>MultiMap</source>
          <target state="translated">MultiMap</target>
        </trans-unit>
        <trans-unit id="00f0e306516da74477a5106971b4d4c31fae442a" translate="yes" xml:space="preserve">
          <source>MultiMap.addBinding()</source>
          <target state="translated">MultiMap.addBinding()</target>
        </trans-unit>
        <trans-unit id="b65d8d0ed562dd707b31a3fb497cd7a9e21778b1" translate="yes" xml:space="preserve">
          <source>MultiMap.entryExists()</source>
          <target state="translated">MultiMap.entryExists()</target>
        </trans-unit>
        <trans-unit id="0f1e486528a50e728a69fac2cbf1042f725a53d5" translate="yes" xml:space="preserve">
          <source>MultiMap.makeSet()</source>
          <target state="translated">MultiMap.makeSet()</target>
        </trans-unit>
        <trans-unit id="ccd816588a43cd337a53829a42e6b2657ba4c2d9" translate="yes" xml:space="preserve">
          <source>MultiMap.removeBinding()</source>
          <target state="translated">MultiMap.removeBinding()</target>
        </trans-unit>
        <trans-unit id="04f992edd70bca1d71fc620359142ba39af93f12" translate="yes" xml:space="preserve">
          <source>MultiMap.scala</source>
          <target state="translated">MultiMap.scala</target>
        </trans-unit>
        <trans-unit id="87259e19f34937d35fc0785d53f535de60178e11" translate="yes" xml:space="preserve">
          <source>Multiple callbacks may be registered; there is no guarantee that they will be executed in a particular order.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38b03ed4972b6a27495a1bfa267241ff542a6da2" translate="yes" xml:space="preserve">
          <source>Multiple matches are supported:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d481518872abc4851b4188c16c1b09c2c255441" translate="yes" xml:space="preserve">
          <source>Multiplies up the elements of this collection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="55ab01ec5b414f8fd99a58ab551c74b245cf9c7c" translate="yes" xml:space="preserve">
          <source>MurmurHash3</source>
          <target state="translated">MurmurHash3</target>
        </trans-unit>
        <trans-unit id="df08416be488f898eb5fe7e84fc5b24a9b062c7b" translate="yes" xml:space="preserve">
          <source>MurmurHash3$</source>
          <target state="translated">MurmurHash3$</target>
        </trans-unit>
        <trans-unit id="c956ca810cbd89ec09c6d8163d2753cf47a67626" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.ArrayHashing</source>
          <target state="translated">MurmurHash3$.ArrayHashing</target>
        </trans-unit>
        <trans-unit id="514e7b2c3b6ef3d56f27bc6f7888525c4ac41689" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.ArrayHashing()</source>
          <target state="translated">MurmurHash3$.ArrayHashing()</target>
        </trans-unit>
        <trans-unit id="8e21a2aea60ce76cfd963b2c8b9f76e35e9d1596" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.ArrayHashing.ArrayHashing()</source>
          <target state="translated">MurmurHash3$.ArrayHashing.ArrayHashing()</target>
        </trans-unit>
        <trans-unit id="33e663aaca3b73e5ee115d93daea9dca57c63288" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.ArrayHashing.hash()</source>
          <target state="translated">MurmurHash3$.ArrayHashing.hash()</target>
        </trans-unit>
        <trans-unit id="f973d18211069feca0211142ca0cfe981ec4c73f" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.arrayHash()</source>
          <target state="translated">MurmurHash3$.arrayHash()</target>
        </trans-unit>
        <trans-unit id="0c147a4e4f78a9747e40dd4e5876dfc10a104f64" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.arrayHashing()</source>
          <target state="translated">MurmurHash3$.arrayHashing()</target>
        </trans-unit>
        <trans-unit id="4ca9eb3247382b7f4226bb5b02457bd07b605239" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.arraySeed()</source>
          <target state="translated">MurmurHash3$.arraySeed()</target>
        </trans-unit>
        <trans-unit id="9ae9d9c0a5c198c514fdb57758ba449ddaa3a7dd" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.bytesHash()</source>
          <target state="translated">MurmurHash3$.bytesHash()</target>
        </trans-unit>
        <trans-unit id="9d16eb9333202ff0d64f3af8bd2c83250534466e" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.bytesHashing()</source>
          <target state="translated">MurmurHash3$.bytesHashing()</target>
        </trans-unit>
        <trans-unit id="7dd2b80fb17568ca103034643f76201e61251810" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.finalizeHash()</source>
          <target state="translated">MurmurHash3$.finalizeHash()</target>
        </trans-unit>
        <trans-unit id="98d231e9f3fa2dd04705e76b5cad99445bc3dbd8" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.indexedSeqHash()</source>
          <target state="translated">MurmurHash3$.indexedSeqHash()</target>
        </trans-unit>
        <trans-unit id="9d6bd88b043efa355facb7697c158b1d8bb352a0" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.listHash()</source>
          <target state="translated">MurmurHash3$.listHash()</target>
        </trans-unit>
        <trans-unit id="16d3f6e533523505343792b71d1eb07b4e77f10f" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.mapHash()</source>
          <target state="translated">MurmurHash3$.mapHash()</target>
        </trans-unit>
        <trans-unit id="15da3108bb68c51eda8e8b59d513d9806a2312d6" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.mapSeed()</source>
          <target state="translated">MurmurHash3$.mapSeed()</target>
        </trans-unit>
        <trans-unit id="b6727da8a12405bc07e1db8d9dc3e562bc05b8c8" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.mix()</source>
          <target state="translated">MurmurHash3$.mix()</target>
        </trans-unit>
        <trans-unit id="f4e67b0785d4dff6ccea320ce14eddb695785711" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.mixLast()</source>
          <target state="translated">MurmurHash3$.mixLast()</target>
        </trans-unit>
        <trans-unit id="a86c7e0e26a494c8495e4d939ddc340c077c76fc" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.orderedHash()</source>
          <target state="translated">MurmurHash3$.orderedHash()</target>
        </trans-unit>
        <trans-unit id="0d23fe9246234c5dd989ead47d8111670201c5a1" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.orderedHashing()</source>
          <target state="translated">MurmurHash3$.orderedHashing()</target>
        </trans-unit>
        <trans-unit id="f1665db28d51b7843f312246209add0a63b1f031" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.productHash()</source>
          <target state="translated">MurmurHash3$.productHash()</target>
        </trans-unit>
        <trans-unit id="c0e2f2cb9f70bc0600bbde4125334bb15ac6529a" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.productHashing()</source>
          <target state="translated">MurmurHash3$.productHashing()</target>
        </trans-unit>
        <trans-unit id="29c533d0298540632e5f0e0429d68a8b0b1164bf" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.productSeed()</source>
          <target state="translated">MurmurHash3$.productSeed()</target>
        </trans-unit>
        <trans-unit id="7d70b092d3adc0a9b7443d7f920249c4bff78236" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.rangeHash()</source>
          <target state="translated">MurmurHash3$.rangeHash()</target>
        </trans-unit>
        <trans-unit id="cb9eb3d1bb5fa68fece770b61348901adbd90e7c" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.seqHash()</source>
          <target state="translated">MurmurHash3$.seqHash()</target>
        </trans-unit>
        <trans-unit id="6114e85d6bbe6e791249e764b7e2ddd55bdfd0c9" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.seqSeed()</source>
          <target state="translated">MurmurHash3$.seqSeed()</target>
        </trans-unit>
        <trans-unit id="b812a7bcaa0681585c0428b950ed882d3f77e5dd" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.setHash()</source>
          <target state="translated">MurmurHash3$.setHash()</target>
        </trans-unit>
        <trans-unit id="b20652a225ba2eb772f7c683a1f299b3af257505" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.setSeed()</source>
          <target state="translated">MurmurHash3$.setSeed()</target>
        </trans-unit>
        <trans-unit id="59e0d9060eee6b88d97229912b5bb32d435d7273" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.stringHash()</source>
          <target state="translated">MurmurHash3$.stringHash()</target>
        </trans-unit>
        <trans-unit id="d50148f11f6c2fcbebfface890769eb0c93310ff" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.stringHashing()</source>
          <target state="translated">MurmurHash3$.stringHashing()</target>
        </trans-unit>
        <trans-unit id="ea32c41636973c485f0cc06a279392ef21e31827" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.stringSeed()</source>
          <target state="translated">MurmurHash3$.stringSeed()</target>
        </trans-unit>
        <trans-unit id="2144ec6bb9cc1d50e515a6faef680c1d5a218419" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.symmetricSeed()</source>
          <target state="translated">MurmurHash3$.symmetricSeed()</target>
        </trans-unit>
        <trans-unit id="5817ebd20fad935b6aba28f615793962594b1e1a" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.traversableSeed()</source>
          <target state="translated">MurmurHash3$.traversableSeed()</target>
        </trans-unit>
        <trans-unit id="114470af24752d0d26d880363c9a944439586b39" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.unorderedHash()</source>
          <target state="translated">MurmurHash3$.unorderedHash()</target>
        </trans-unit>
        <trans-unit id="66444b4eca99187cef9bae7d84e2e5f06bca5654" translate="yes" xml:space="preserve">
          <source>MurmurHash3$.unorderedHashing()</source>
          <target state="translated">MurmurHash3$.unorderedHashing()</target>
        </trans-unit>
        <trans-unit id="a406a69875a7a8422065dd7384678dbb3846b218" translate="yes" xml:space="preserve">
          <source>MurmurHash3.scala</source>
          <target state="translated">MurmurHash3.scala</target>
        </trans-unit>
        <trans-unit id="87c2d56fa80e474c376404131dbe4bac62338571" translate="yes" xml:space="preserve">
          <source>NO!</source>
          <target state="translated">NO!</target>
        </trans-unit>
        <trans-unit id="4d206e37875e40bb3d943322278af391b22da6cf" translate="yes" xml:space="preserve">
          <source>NameTransformer$</source>
          <target state="translated">NameTransformer$</target>
        </trans-unit>
        <trans-unit id="09823139452b9c6cf1dabe3345194033d602e5b0" translate="yes" xml:space="preserve">
          <source>NameTransformer$.LAZY_LOCAL_SUFFIX_STRING()</source>
          <target state="translated">NameTransformer$.LAZY_LOCAL_SUFFIX_STRING()</target>
        </trans-unit>
        <trans-unit id="f09c6d1def63a8bf75246dae783916f1dc00059e" translate="yes" xml:space="preserve">
          <source>NameTransformer$.LOCAL_SUFFIX_STRING()</source>
          <target state="translated">NameTransformer$.LOCAL_SUFFIX_STRING()</target>
        </trans-unit>
        <trans-unit id="7f4e3d4a1c70bfd2ee4a160f1e5c62d53e9b0a9e" translate="yes" xml:space="preserve">
          <source>NameTransformer$.MODULE_INSTANCE_NAME()</source>
          <target state="translated">NameTransformer$.MODULE_INSTANCE_NAME()</target>
        </trans-unit>
        <trans-unit id="7d6864e819e62150d6d80df7a3c40744041ecea7" translate="yes" xml:space="preserve">
          <source>NameTransformer$.MODULE_SUFFIX_STRING()</source>
          <target state="translated">NameTransformer$.MODULE_SUFFIX_STRING()</target>
        </trans-unit>
        <trans-unit id="db72bd04e584a36bf4f76160080a0676004f207d" translate="yes" xml:space="preserve">
          <source>NameTransformer$.MODULE_VAR_SUFFIX_STRING()</source>
          <target state="translated">NameTransformer$.MODULE_VAR_SUFFIX_STRING()</target>
        </trans-unit>
        <trans-unit id="13c3fd84c8f9c74c96151876089df12f126ca645" translate="yes" xml:space="preserve">
          <source>NameTransformer$.NAME_JOIN_STRING()</source>
          <target state="translated">NameTransformer$.NAME_JOIN_STRING()</target>
        </trans-unit>
        <trans-unit id="ac9de6b4079929184b3e2284969e2e7ad99b9547" translate="yes" xml:space="preserve">
          <source>NameTransformer$.SETTER_SUFFIX_STRING()</source>
          <target state="translated">NameTransformer$.SETTER_SUFFIX_STRING()</target>
        </trans-unit>
        <trans-unit id="280b6b1fff2ab67b10ab0c2711f92554cf68c170" translate="yes" xml:space="preserve">
          <source>NameTransformer$.TRAIT_SETTER_SEPARATOR_STRING()</source>
          <target state="translated">NameTransformer$.TRAIT_SETTER_SEPARATOR_STRING()</target>
        </trans-unit>
        <trans-unit id="82781e5f91a4333d590979bfddfcc26a5f5c75a5" translate="yes" xml:space="preserve">
          <source>NameTransformer$.decode()</source>
          <target state="translated">NameTransformer$.decode()</target>
        </trans-unit>
        <trans-unit id="41bddf11f12b609649b5c47b9907400043162ddd" translate="yes" xml:space="preserve">
          <source>NameTransformer$.encode()</source>
          <target state="translated">NameTransformer$.encode()</target>
        </trans-unit>
        <trans-unit id="0b0e40c0ce4e1316a9e39e7b00d91d856e933977" translate="yes" xml:space="preserve">
          <source>NameTransformer.scala</source>
          <target state="translated">NameTransformer.scala</target>
        </trans-unit>
        <trans-unit id="ef2d72750a41655724201f22d5db1b13aceaa651" translate="yes" xml:space="preserve">
          <source>Names of capturing groups.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ea38d43569088b961e7bd00ca7ab5448d908f27" translate="yes" xml:space="preserve">
          <source>Necessary to keep &lt;a href=&quot;option&quot; id=&quot;scala.Option&quot; name=&quot;scala.Option&quot;&gt;scala.Option&lt;/a&gt; from being implicitly converted to &lt;a href=&quot;collection/iterable&quot; id=&quot;scala.collection.Iterable&quot; name=&quot;scala.collection.Iterable&quot;&gt;scala.collection.Iterable&lt;/a&gt; in &lt;code&gt;for&lt;/code&gt; comprehensions.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="242e62e1df4dcc9c4d507579538690eae723b7e8" translate="yes" xml:space="preserve">
          <source>Negate this duration. The only two values which are mapped to themselves are &lt;a href=&quot;duration%24#Zero:scala.concurrent.duration.FiniteDuration&quot; id=&quot;scala.concurrent.duration.Duration#Zero&quot; name=&quot;scala.concurrent.duration.Duration#Zero&quot;&gt;Duration.Zero&lt;/a&gt; and &lt;a href=&quot;duration%24#Undefined:scala.concurrent.duration.Duration.Infinite&quot; id=&quot;scala.concurrent.duration.Duration#Undefined&quot; name=&quot;scala.concurrent.duration.Duration#Undefined&quot;&gt;Duration.Undefined&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a7eb346b1192b64c0c02fb7a16444ada7b982d0" translate="yes" xml:space="preserve">
          <source>Negates a Boolean expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="576d2988492f62e132faabc9e7f3bf7f42b5f375" translate="yes" xml:space="preserve">
          <source>Neither &lt;code&gt;Array&lt;/code&gt; nor &lt;code&gt;ArrayOps&lt;/code&gt; are proper collection types (i.e. they do not extend &lt;code&gt;Iterable&lt;/code&gt; or even &lt;code&gt;IterableOnce&lt;/code&gt;). &lt;code&gt;mutable.ArraySeq&lt;/code&gt; and &lt;code&gt;immutable.ArraySeq&lt;/code&gt; serve this purpose.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c434b4dcb846e5c52e3321ce40dcd418d6b9484e" translate="yes" xml:space="preserve">
          <source>Nice errors can direct users to fix imports or even tell them why code intentionally doesn't compile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c916da70cd4a32512ca71d70e5cc765d00357df4" translate="yes" xml:space="preserve">
          <source>Nil</source>
          <target state="translated">Nil</target>
        </trans-unit>
        <trans-unit id="48b3f216bd1a015deb7e546106b7c5e8ffc124c3" translate="yes" xml:space="preserve">
          <source>Nil$</source>
          <target state="translated">Nil$</target>
        </trans-unit>
        <trans-unit id="8bfab068608d52f0ad0eb518b0d9bf0febbf03d9" translate="yes" xml:space="preserve">
          <source>Nil$.head()</source>
          <target state="translated">Nil$.head()</target>
        </trans-unit>
        <trans-unit id="e658f3e6a892caa1ce7c29ce100d652570430eac" translate="yes" xml:space="preserve">
          <source>Nil$.headOption()</source>
          <target state="translated">Nil$.headOption()</target>
        </trans-unit>
        <trans-unit id="6ee785c504f718e581cf8e4b09cf9bf77c7fa47e" translate="yes" xml:space="preserve">
          <source>Nil$.init()</source>
          <target state="translated">Nil$.init()</target>
        </trans-unit>
        <trans-unit id="087a785831d4d04944575cd03d56a63d9b4b7387" translate="yes" xml:space="preserve">
          <source>Nil$.iterator()</source>
          <target state="translated">Nil$.iterator()</target>
        </trans-unit>
        <trans-unit id="772d31b930e0c063d928c99827067f40a6063ba5" translate="yes" xml:space="preserve">
          <source>Nil$.knownSize()</source>
          <target state="translated">Nil$.knownSize()</target>
        </trans-unit>
        <trans-unit id="4f8e66d9c8cf93152c48ff78006206457ff6e491" translate="yes" xml:space="preserve">
          <source>Nil$.last()</source>
          <target state="translated">Nil$.last()</target>
        </trans-unit>
        <trans-unit id="864d59496ecf771dc678a84ada796b24dab4ca1c" translate="yes" xml:space="preserve">
          <source>Nil$.tail()</source>
          <target state="translated">Nil$.tail()</target>
        </trans-unit>
        <trans-unit id="171765706e7723cde48a660a3d15d06929de8a58" translate="yes" xml:space="preserve">
          <source>Nil$.unzip()</source>
          <target state="translated">Nil$.unzip()</target>
        </trans-unit>
        <trans-unit id="e82f06bd23c11771d8e6cd0687489c5492110352" translate="yes" xml:space="preserve">
          <source>No explicit &lt;code&gt;main&lt;/code&gt; method is needed. Instead, the whole class body becomes the &amp;ldquo;main method&amp;rdquo;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01b24962579a4b0f84c792dca5f2fa74de14f67e" translate="yes" xml:space="preserve">
          <source>No warnings are generated if the subclass is in the same compilation unit.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e1f71ad5a3dab89b072b174d26bab4072771bf4" translate="yes" xml:space="preserve">
          <source>NoManifest$</source>
          <target state="translated">NoManifest$</target>
        </trans-unit>
        <trans-unit id="6fe6d996e70262d05bebdb2c3eddf68d95cc870e" translate="yes" xml:space="preserve">
          <source>NoManifest$.toString()</source>
          <target state="translated">NoManifest$.toString()</target>
        </trans-unit>
        <trans-unit id="dc192f774f850ae68fdf45d581cf7238cf9395a6" translate="yes" xml:space="preserve">
          <source>NoManifest.scala</source>
          <target state="translated">NoManifest.scala</target>
        </trans-unit>
        <trans-unit id="6c9153b18b65a86d2f90d12f44efd7d56f8ae4fa" translate="yes" xml:space="preserve">
          <source>NoStackTrace</source>
          <target state="translated">NoStackTrace</target>
        </trans-unit>
        <trans-unit id="b1ea44a2df7bef8ec962b7a93853de36ec0a6ec2" translate="yes" xml:space="preserve">
          <source>NoStackTrace$</source>
          <target state="translated">NoStackTrace$</target>
        </trans-unit>
        <trans-unit id="c57aa573b9241f25aa6326b4d9449d6b55273bc4" translate="yes" xml:space="preserve">
          <source>NoStackTrace$.noSuppression()</source>
          <target state="translated">NoStackTrace$.noSuppression()</target>
        </trans-unit>
        <trans-unit id="a6148dd35220662411a8130807d9759f5b0db4d8" translate="yes" xml:space="preserve">
          <source>NoStackTrace.fillInStackTrace()</source>
          <target state="translated">NoStackTrace.fillInStackTrace()</target>
        </trans-unit>
        <trans-unit id="35a71a5c9b74c28a2717fdc327a89415e07f0225" translate="yes" xml:space="preserve">
          <source>NoStackTrace.scala</source>
          <target state="translated">NoStackTrace.scala</target>
        </trans-unit>
        <trans-unit id="260f7a8cd4f6938b3cc185a619847cb83d670219" translate="yes" xml:space="preserve">
          <source>Node</source>
          <target state="translated">Node</target>
        </trans-unit>
        <trans-unit id="1aa958c409eac9375a23dd7a31bdcd2a4ec4bfb7" translate="yes" xml:space="preserve">
          <source>NonFatal$</source>
          <target state="translated">NonFatal$</target>
        </trans-unit>
        <trans-unit id="11af228ae3bc68956110b2d9c2249ccb18af5e23" translate="yes" xml:space="preserve">
          <source>NonFatal$.apply()</source>
          <target state="translated">NonFatal$.apply()</target>
        </trans-unit>
        <trans-unit id="bb81568786270021510e71a65648bf686e0465c0" translate="yes" xml:space="preserve">
          <source>NonFatal$.unapply()</source>
          <target state="translated">NonFatal$.unapply()</target>
        </trans-unit>
        <trans-unit id="56b5a83c87d0de6541191f2a0c80618ffd6b14d7" translate="yes" xml:space="preserve">
          <source>NonFatal.scala</source>
          <target state="translated">NonFatal.scala</target>
        </trans-unit>
        <trans-unit id="2c5016f351e560ff62f4e457084525e51a759de1" translate="yes" xml:space="preserve">
          <source>None if there is no match, Some containing the sequence of matched wildcard strings if there is a match</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e980d81336b7bd062d5be6246e62e7146843b8f6" translate="yes" xml:space="preserve">
          <source>None$</source>
          <target state="translated">None$</target>
        </trans-unit>
        <trans-unit id="0e66a0ae903bfc3d09f41e5cf0ec49b552342e44" translate="yes" xml:space="preserve">
          <source>None$.get()</source>
          <target state="translated">None$.get()</target>
        </trans-unit>
        <trans-unit id="c2c63bfd0791d7f4fa5138c7f5a45de353d78ca5" translate="yes" xml:space="preserve">
          <source>Normally, matching on &lt;code&gt;date&lt;/code&gt; behaves as though the pattern were enclosed in anchors, &lt;code&gt;&quot;^pattern$&quot;&lt;code&gt;.&lt;/code&gt;&lt;/code&gt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8068e91fe35658bcc06467fec199b965a76d4c33" translate="yes" xml:space="preserve">
          <source>Not in the standard scope due to the potential for divergence: For instance &lt;code&gt;implicitly[Equiv[Any]]&lt;/code&gt; diverges in its presence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d503ac837dac7ed082630ca3e5ca11c68d33ed06" translate="yes" xml:space="preserve">
          <source>Not in the standard scope due to the potential for divergence: For instance &lt;code&gt;implicitly[Ordering[Any]]&lt;/code&gt; diverges in its presence.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8850b3bd61499741c05bd500ea7929ed489941ca" translate="yes" xml:space="preserve">
          <source>NotImplementedError</source>
          <target state="translated">NotImplementedError</target>
        </trans-unit>
        <trans-unit id="9f0cafbe3473d2cb10bb64f54cb2bb3cba9f61f2" translate="yes" xml:space="preserve">
          <source>NotImplementedError.NotImplementedError()</source>
          <target state="translated">NotImplementedError.NotImplementedError()</target>
        </trans-unit>
        <trans-unit id="8a7016752b9d396d56aeb2b7991e0eca4151f1c7" translate="yes" xml:space="preserve">
          <source>NotImplementedError.scala</source>
          <target state="translated">NotImplementedError.scala</target>
        </trans-unit>
        <trans-unit id="d84936a1035cc2050627687bda5bc68a13ca765b" translate="yes" xml:space="preserve">
          <source>Notable packages include:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2c924e3088204ee77ba681f72be3444357932fca" translate="yes" xml:space="preserve">
          <source>Note</source>
          <target state="translated">Note</target>
        </trans-unit>
        <trans-unit id="d00949d1b7f8ef59d50cb28b82a7b080447462c0" translate="yes" xml:space="preserve">
          <source>Note - these are inlined because they are value classes, but the call to xxxWrapper is not eliminated even though it does nothing. Even inlined, every call site does a no-op retrieval of Predef's MODULE$ because maybe loading Predef has side effects!</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="be7290b126d7fa26591b211073343f8cbc5e664b" translate="yes" xml:space="preserve">
          <source>Note also that high-performance non-default sorts for numeric types are not provided. If this is required, it is advisable to investigate other libraries that cover this use case.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dcac52f0e71d2f65ccd6da63e726109893d0b463" translate="yes" xml:space="preserve">
          <source>Note that :-ending operators are right associative (see example). A mnemonic for &lt;code&gt;+:&lt;/code&gt; vs. &lt;code&gt;:+&lt;/code&gt; is: the COLon goes on the COLlection side.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1af5a727a4a878cd995d307fdce6effa9a37b432" translate="yes" xml:space="preserve">
          <source>Note that &lt;a href=&quot;controlthrowable&quot; id=&quot;scala.util.control.ControlThrowable&quot; name=&quot;scala.util.control.ControlThrowable&quot;&gt;scala.util.control.ControlThrowable&lt;/a&gt;, an internal Throwable, is not matched by &lt;code&gt;NonFatal&lt;/code&gt; (and would therefore be thrown).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1292fdae7ba6be4d57be27ba91f8916ccf9c45d8" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;Catch&lt;/code&gt; objects automatically rethrow &lt;code&gt;ControlExceptions&lt;/code&gt; and others which should only be caught in exceptional circumstances. If you really want to catch exactly what you specify, use &lt;code&gt;catchingPromiscuously&lt;/code&gt; instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c4f4ce2d949571ad6315cec9a3a077ba8f72aaf2" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;ExtensionMethods&lt;/code&gt; takes a constructor argument &lt;code&gt;coll&lt;/code&gt; of type &lt;code&gt;Repr&lt;/code&gt;, where &lt;code&gt;Repr&lt;/code&gt; represents (typically) the collection type, and an argument &lt;code&gt;it&lt;/code&gt; of a subtype of &lt;code&gt;IsIterable[Repr]&lt;/code&gt;. The body of the method starts by converting the &lt;code&gt;coll&lt;/code&gt; argument to an &lt;code&gt;IterableOps&lt;/code&gt; in order to call the &lt;code&gt;iterator&lt;/code&gt; method on it. The remaining of the implementation is straightforward.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8ee2b3a3777dd78a7f4488c8a2c3acfbe42f432" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;findAllIn&lt;/code&gt; finds matches that don't overlap. (See &lt;a href=&quot;#findAllIn(source:CharSequence):scala.util.matching.Regex.MatchIterator&quot; id=&quot;scala.util.matching.Regex#findAllIn&quot; name=&quot;scala.util.matching.Regex#findAllIn&quot;&gt;findAllIn&lt;/a&gt; for more examples.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a69df93c9ea92f4dcbee1e52b5995f88002159cf" translate="yes" xml:space="preserve">
          <source>Note that &lt;code&gt;findAllIn&lt;/code&gt; finds matches that don't overlap. (See &lt;a href=&quot;regex#findAllIn(source:CharSequence):scala.util.matching.Regex.MatchIterator&quot; id=&quot;scala.util.matching.Regex#findAllIn&quot; name=&quot;scala.util.matching.Regex#findAllIn&quot;&gt;findAllIn&lt;/a&gt; for more examples.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4da01e7db196819f32939ceeeed8d4d2a2086724" translate="yes" xml:space="preserve">
          <source>Note that a for comprehension involving a &lt;code&gt;Future&lt;/code&gt; may expand to include a call to &lt;code&gt;map&lt;/code&gt; and or &lt;code&gt;flatMap&lt;/code&gt; and &lt;code&gt;withFilter&lt;/code&gt;. See &lt;a href=&quot;#flatMap%5BS%5D(f:T=&amp;gt;scala.concurrent.Future%5BS%5D)(implicitexecutor:scala.concurrent.ExecutionContext):scala.concurrent.Future%5BS%5D&quot; id=&quot;scala.concurrent.Future#flatMap&quot; name=&quot;scala.concurrent.Future#flatMap&quot;&gt;scala.concurrent.Future#flatMap&lt;/a&gt; for an example of such a comprehension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3629ecbaae460f4de34a3236fcf278c3b4f1fc9" translate="yes" xml:space="preserve">
          <source>Note that a for comprehension involving a &lt;code&gt;Future&lt;/code&gt; may expand to include a call to &lt;code&gt;map&lt;/code&gt; and or &lt;code&gt;flatMap&lt;/code&gt; and &lt;code&gt;withFilter&lt;/code&gt;. See scala.concurrent.Future#flatMap for an example of such a comprehension.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22c1184c6bc9ce69dc92b2b36e168c8ec40395e" translate="yes" xml:space="preserve">
          <source>Note that an array containing boxed primitives can be converted to a &lt;code&gt;ArraySeq&lt;/code&gt; without copying. For example, &lt;code&gt;val a: Array[Any] = Array(1)&lt;/code&gt; is an array of &lt;code&gt;Object&lt;/code&gt; at runtime, containing &lt;code&gt;Integer&lt;/code&gt;s. An &lt;code&gt;ArraySeq[Int]&lt;/code&gt; can be obtained with a cast: &lt;code&gt;ArraySeq.make(a).asInstanceOf[ArraySeq[Int]]&lt;/code&gt;. The values are still boxed, the resulting instance is an &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.mutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.mutable.ArraySeq.ofRef&quot;&gt;ArraySeq.ofRef&lt;/a&gt;. Writing &lt;code&gt;ArraySeq.make(a.asInstanceOf[Array[Int]])&lt;/code&gt; does not work, it throws a &lt;code&gt;ClassCastException&lt;/code&gt; at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2b7e89b831fbdcb4757d5627f8231b989fcba778" translate="yes" xml:space="preserve">
          <source>Note that an array containing boxed primitives can be wrapped in an &lt;code&gt;ArraySeq&lt;/code&gt; without copying. For example, &lt;code&gt;val a: Array[Any] = Array(1)&lt;/code&gt; is an array of &lt;code&gt;Object&lt;/code&gt; at runtime, containing &lt;code&gt;Integer&lt;/code&gt;s. An &lt;code&gt;ArraySeq[Int]&lt;/code&gt; can be obtained with a cast: &lt;code&gt;ArraySeq.unsafeWrapArray(a).asInstanceOf[ArraySeq[Int]]&lt;/code&gt;. The values are still boxed, the resulting instance is an &lt;a href=&quot;arrayseq%24%24ofref&quot; id=&quot;scala.collection.immutable.ArraySeq.ofRef&quot; name=&quot;scala.collection.immutable.ArraySeq.ofRef&quot;&gt;ArraySeq.ofRef&lt;/a&gt;. Writing &lt;code&gt;ArraySeq.unsafeWrapArray(a.asInstanceOf[Array[Int]])&lt;/code&gt; does not work, it throws a &lt;code&gt;ClassCastException&lt;/code&gt; at runtime.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c791d467164e055936c1b56188e147fd07ee8fa" translate="yes" xml:space="preserve">
          <source>Note that by default, the Scala optimizer is disabled and no callsites are inlined. See &lt;code&gt;-opt:help&lt;/code&gt; for information how to enable the optimizer and inliner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66e4f3aa45f2a5085331daba351d032d2f39bdd" translate="yes" xml:space="preserve">
          <source>Note that by default, the Scala optimizer is disabled and no callsites are inlined. See &lt;code&gt;-opt:help&lt;/code&gt; for information on how to enable the optimizer and inliner.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb9a5c8477f9a75ea856dde30469496bf5e4356d" translate="yes" xml:space="preserve">
          <source>Note that calling &lt;a href=&quot;#isDefinedAt(x:A):Boolean&quot; id=&quot;scala.PartialFunction#isDefinedAt&quot; name=&quot;scala.PartialFunction#isDefinedAt&quot;&gt;isDefinedAt&lt;/a&gt; on the resulting partial function may apply the first partial function and execute its side effect. It is highly recommended to call &lt;a href=&quot;#applyOrElse%5BA1&amp;lt;:A,B1&amp;gt;:B%5D(x:A1,default:A1=&amp;gt;B1):B1&quot; id=&quot;scala.PartialFunction#applyOrElse&quot; name=&quot;scala.PartialFunction#applyOrElse&quot;&gt;applyOrElse&lt;/a&gt; instead of &lt;a href=&quot;#isDefinedAt(x:A):Boolean&quot; id=&quot;scala.PartialFunction#isDefinedAt&quot; name=&quot;scala.PartialFunction#isDefinedAt&quot;&gt;isDefinedAt&lt;/a&gt; / &lt;a href=&quot;#apply(v1:T1):R&quot; id=&quot;scala.PartialFunction#apply&quot; name=&quot;scala.PartialFunction#apply&quot;&gt;apply&lt;/a&gt; for efficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30560d3b300802214ea6849785dba81ac3dcbcca" translate="yes" xml:space="preserve">
          <source>Note that calling &lt;a href=&quot;../../partialfunction#isDefinedAt(x:A):Boolean&quot; id=&quot;scala.PartialFunction#isDefinedAt&quot; name=&quot;scala.PartialFunction#isDefinedAt&quot;&gt;isDefinedAt&lt;/a&gt; on the resulting partial function may apply the first partial function and execute its side effect. It is highly recommended to call applyOrElse instead of &lt;a href=&quot;../../partialfunction#isDefinedAt(x:A):Boolean&quot; id=&quot;scala.PartialFunction#isDefinedAt&quot; name=&quot;scala.PartialFunction#isDefinedAt&quot;&gt;isDefinedAt&lt;/a&gt; / &lt;a href=&quot;../../partialfunction#apply(v1:T1):R&quot; id=&quot;scala.PartialFunction#apply&quot; name=&quot;scala.PartialFunction#apply&quot;&gt;apply&lt;/a&gt; for efficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d66de24de29c03fb32a4e3c77666821b8c14640d" translate="yes" xml:space="preserve">
          <source>Note that calling &lt;a href=&quot;../partialfunction#isDefinedAt(x:A):Boolean&quot; id=&quot;scala.PartialFunction#isDefinedAt&quot; name=&quot;scala.PartialFunction#isDefinedAt&quot;&gt;isDefinedAt&lt;/a&gt; on the resulting partial function may apply the first partial function and execute its side effect. It is highly recommended to call applyOrElse instead of &lt;a href=&quot;../partialfunction#isDefinedAt(x:A):Boolean&quot; id=&quot;scala.PartialFunction#isDefinedAt&quot; name=&quot;scala.PartialFunction#isDefinedAt&quot;&gt;isDefinedAt&lt;/a&gt; / &lt;a href=&quot;../partialfunction#apply(v1:T1):R&quot; id=&quot;scala.PartialFunction#apply&quot; name=&quot;scala.PartialFunction#apply&quot;&gt;apply&lt;/a&gt; for efficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="93fdc2a8b43e87d3cae44c47ca6554ed82776df0" translate="yes" xml:space="preserve">
          <source>Note that calling &lt;a href=&quot;collection/immutable/indexedseq#isDefinedAt(idx:Int):Boolean&quot; id=&quot;scala.collection.immutable.IndexedSeq#isDefinedAt&quot; name=&quot;scala.collection.immutable.IndexedSeq#isDefinedAt&quot;&gt;isDefinedAt&lt;/a&gt; on the resulting partial function may apply the first partial function and execute its side effect. It is highly recommended to call applyOrElse instead of &lt;a href=&quot;collection/immutable/indexedseq#isDefinedAt(idx:Int):Boolean&quot; id=&quot;scala.collection.immutable.IndexedSeq#isDefinedAt&quot; name=&quot;scala.collection.immutable.IndexedSeq#isDefinedAt&quot;&gt;isDefinedAt&lt;/a&gt; / &lt;a href=&quot;collection/immutable/indexedseq#apply(i:Int):A&quot; id=&quot;scala.collection.immutable.IndexedSeq#apply&quot; name=&quot;scala.collection.immutable.IndexedSeq#apply&quot;&gt;apply&lt;/a&gt; for efficiency.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6462369a0beb4e1e6b0caf023bc90cf84102f802" translate="yes" xml:space="preserve">
          <source>Note that each element insertion takes O(n) time, which means that creating a list map with n elements will take O(n&lt;sup&gt;2&lt;/sup&gt;) time. This makes the builder suitable only for a small number of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e8e38d5420724528301ad253a32bb6845092ea9" translate="yes" xml:space="preserve">
          <source>Note that each element insertion takes O(n) time, which means that creating a list set with n elements will take O(n&lt;sup&gt;2&lt;/sup&gt;) time. This makes the builder suitable only for a small number of elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6579614a50207675ff766ec01b97ea3e8482bce" translate="yes" xml:space="preserve">
          <source>Note that every &lt;code&gt;String&lt;/code&gt; is implicitly converted into a &lt;code&gt;ProcessBuilder&lt;/code&gt; through the implicits imported from &lt;a href=&quot;index&quot; id=&quot;scala.sys.process&quot; name=&quot;scala.sys.process&quot;&gt;scala.sys.process&lt;/a&gt;. These &lt;code&gt;ProcessBuilder&lt;/code&gt; are then combined in three different ways.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35dba2e6dcc9af88e32ed6afa2d199e9d6e07315" translate="yes" xml:space="preserve">
          <source>Note that expression &lt;code&gt;pf.applyOrElse(x, default)&lt;/code&gt; is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cc793cc2014c961867e7b85406455a39f282e736" translate="yes" xml:space="preserve">
          <source>Note that expression &lt;code&gt;pf.runWith(action)(x)&lt;/code&gt; is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d8f3f6e963fd160e3d0155bbc08bbe264d3ac2e2" translate="yes" xml:space="preserve">
          <source>Note that if one of the chained &lt;code&gt;andThen&lt;/code&gt; callbacks throws an exception, that exception is not propagated to the subsequent &lt;code&gt;andThen&lt;/code&gt; callbacks. Instead, the subsequent &lt;code&gt;andThen&lt;/code&gt; callbacks are given the original value of this future.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82fc24692b13339c11f6d6a3bd0b2d8d93b7a4d2" translate="yes" xml:space="preserve">
          <source>Note that in maps, the &lt;code&gt;CC&lt;/code&gt; type of the map is not the same as the &lt;code&gt;CC&lt;/code&gt; type for the underlying iterable (which is fixed to &lt;code&gt;Map&lt;/code&gt; in &lt;a href=&quot;mapops&quot; id=&quot;scala.collection.MapOps&quot; name=&quot;scala.collection.MapOps&quot;&gt;MapOps&lt;/a&gt;). This trait has therefore two type parameters &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;WithFilterCC&lt;/code&gt;. The &lt;code&gt;withFilter&lt;/code&gt; method inherited from &lt;code&gt;IterableOps&lt;/code&gt; is overridden with a compatible default implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7aba98ee5963dcd05196516f6f2625191a5ccbb" translate="yes" xml:space="preserve">
          <source>Note that in sorted maps, the &lt;code&gt;CC&lt;/code&gt; type of the map is not the same as the &lt;code&gt;CC&lt;/code&gt; type for the underlying map (which is fixed to &lt;code&gt;Map&lt;/code&gt; in &lt;a href=&quot;sortedmapops&quot; id=&quot;scala.collection.SortedMapOps&quot; name=&quot;scala.collection.SortedMapOps&quot;&gt;SortedMapOps&lt;/a&gt;). This trait has therefore three type parameters &lt;code&gt;CC&lt;/code&gt;, &lt;code&gt;WithFilterCC&lt;/code&gt; and &lt;code&gt;UnsortedCC&lt;/code&gt;. The &lt;code&gt;withFilter&lt;/code&gt; method inherited from &lt;code&gt;IterableOps&lt;/code&gt; is overridden with a compatible default implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="995067a80a3c274b51a1b61d250c6a63220aebaa" translate="yes" xml:space="preserve">
          <source>Note that in sorted sets, the &lt;code&gt;CC&lt;/code&gt; type of the set is not the same as the &lt;code&gt;CC&lt;/code&gt; type for the underlying iterable (which is fixed to &lt;code&gt;Set&lt;/code&gt; in &lt;a href=&quot;sortedsetops&quot; id=&quot;scala.collection.SortedSetOps&quot; name=&quot;scala.collection.SortedSetOps&quot;&gt;SortedSetOps&lt;/a&gt;). This trait has therefore two type parameters &lt;code&gt;CC&lt;/code&gt; and &lt;code&gt;WithFilterCC&lt;/code&gt;. The &lt;code&gt;withFilter&lt;/code&gt; method inherited from &lt;code&gt;IterableOps&lt;/code&gt; is overridden with a compatible default implementation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7cd0080ed311859211b3281272d5ce397be9842" translate="yes" xml:space="preserve">
          <source>Note that it is allowed for two objects to have identical hash codes (&lt;code&gt;o1.hashCode.equals(o2.hashCode)&lt;/code&gt;) yet not be equal (&lt;code&gt;o1.equals(o2)&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;). A degenerate implementation could always return &lt;code&gt;0&lt;/code&gt;. However, it is required that if two objects are equal (&lt;code&gt;o1.equals(o2)&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt;) that they have identical hash codes (&lt;code&gt;o1.hashCode.equals(o2.hashCode)&lt;/code&gt;). Therefore, when overriding this method, be sure to verify that the behavior is consistent with the &lt;code&gt;equals&lt;/code&gt; method.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7942e4ba8903d2904f5950913792572859eee9f5" translate="yes" xml:space="preserve">
          <source>Note that only concrete methods can be marked &lt;code&gt;@elidable&lt;/code&gt;. A non-annotated method is not elided, even if it overrides / implements a method that has the annotation.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e4646234fc63279101b847ffa57a7b68a2b884f" translate="yes" xml:space="preserve">
          <source>Note that shutdown hooks are NOT guaranteed to be run.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33b13c9f8525863fc11e11f16c71dac30f46aa75" translate="yes" xml:space="preserve">
          <source>Note that some operations, including &lt;a href=&quot;#drop(n:Int):scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.collection.immutable.LazyList#drop&quot; name=&quot;scala.collection.immutable.LazyList#drop&quot;&gt;drop&lt;/a&gt;, &lt;a href=&quot;#dropWhile(p:A=&amp;gt;Boolean):scala.collection.immutable.LazyList%5BA%5D&quot; id=&quot;scala.collection.immutable.LazyList#dropWhile&quot; name=&quot;scala.collection.immutable.LazyList#dropWhile&quot;&gt;dropWhile&lt;/a&gt;, &lt;a href=&quot;#flatMap%5BB%5D(f:A=&amp;gt;scala.collection.IterableOnce%5BB%5D):scala.collection.immutable.LazyList%5BB%5D&quot; id=&quot;scala.collection.immutable.LazyList#flatMap&quot; name=&quot;scala.collection.immutable.LazyList#flatMap&quot;&gt;flatMap&lt;/a&gt; or &lt;a href=&quot;#collect%5BB%5D(pf:PartialFunction%5BA,B%5D):scala.collection.immutable.LazyList%5BB%5D&quot; id=&quot;scala.collection.immutable.LazyList#collect&quot; name=&quot;scala.collection.immutable.LazyList#collect&quot;&gt;collect&lt;/a&gt; may process a large number of intermediate elements before returning. These necessarily hold onto the head, since they are methods on &lt;code&gt;LazyList&lt;/code&gt;, and a lazy list holds its own head. For computations of this sort where memoization is not desired, use &lt;code&gt;Iterator&lt;/code&gt; when possible.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="70245287d70bec6224d24b919275465847bb1ca6" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Accumulator&lt;/code&gt; object itself is not a factory, but it is implicitly convert to a factory according to the element type, see &lt;a href=&quot;#toFactory%5BA,C%5D(sa:scala.jdk.Accumulator.type)(implicitcanAccumulate:scala.jdk.Accumulator.AccumulatorFactoryShape%5BA,C%5D):scala.collection.Factory%5BA,C%5D&quot; id=&quot;scala.jdk.Accumulator#toFactory&quot; name=&quot;scala.jdk.Accumulator#toFactory&quot;&gt;Accumulator.toFactory&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5570a78bf596456061f6e36cd093e82a6f23243a" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;Accumulator&lt;/code&gt; object itself is not a factory, but it is implicitly convert to a factory according to the element type, see &lt;a href=&quot;accumulator%24#toFactory%5BA,C%5D(sa:scala.jdk.Accumulator.type)(implicitcanAccumulate:scala.jdk.Accumulator.AccumulatorFactoryShape%5BA,C%5D):scala.collection.Factory%5BA,C%5D&quot; id=&quot;scala.jdk.Accumulator#toFactory&quot; name=&quot;scala.jdk.Accumulator#toFactory&quot;&gt;Accumulator.toFactory&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81214837b7a3cc0702866e5b224c347c5430dabc" translate="yes" xml:space="preserve">
          <source>Note that the bridge is implemented at the read-only side of asynchronous handles, namely &lt;span name=&quot;Future&quot;&gt;Future&lt;/span&gt; (instead of &lt;a href=&quot;../../concurrent/promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;scala.concurrent.Promise&lt;/a&gt;) and &lt;span name=&quot;CompletionStage&quot;&gt;CompletionStage&lt;/span&gt; (instead of &lt;span name=&quot;java.util.concurrent.CompletableFuture&quot;&gt;java.util.concurrent.CompletableFuture&lt;/span&gt;). This is intentional, as the semantics of bridging the write-handles would be prone to race conditions; if both ends (&lt;code&gt;CompletableFuture&lt;/code&gt; and &lt;code&gt;Promise&lt;/code&gt;) are completed independently at the same time, they may contain different values afterwards. For this reason, &lt;code&gt;toCompletableFuture&lt;/code&gt; is not supported on the created &lt;code&gt;CompletionStage&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d4f7d9280d09ac036208e7abbe9fb557ba8b379" translate="yes" xml:space="preserve">
          <source>Note that the bridge is implemented at the read-only side of asynchronous handles, namely &lt;span name=&quot;Future&quot;&gt;Future&lt;/span&gt; (instead of &lt;a href=&quot;../concurrent/promise&quot; id=&quot;scala.concurrent.Promise&quot; name=&quot;scala.concurrent.Promise&quot;&gt;scala.concurrent.Promise&lt;/a&gt;) and &lt;span name=&quot;CompletionStage&quot;&gt;CompletionStage&lt;/span&gt; (instead of &lt;span name=&quot;java.util.concurrent.CompletableFuture&quot;&gt;java.util.concurrent.CompletableFuture&lt;/span&gt;). This is intentional, as the semantics of bridging the write-handles would be prone to race conditions; if both ends (&lt;code&gt;CompletableFuture&lt;/code&gt; and &lt;code&gt;Promise&lt;/code&gt;) are completed independently at the same time, they may contain different values afterwards. For this reason, &lt;code&gt;toCompletableFuture&lt;/code&gt; is not supported on the created &lt;code&gt;CompletionStage&lt;/code&gt;s.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="717ac661ff743feda7b22cda9c18afdefda32392" translate="yes" xml:space="preserve">
          <source>Note that the difference between &lt;code&gt;Function1&lt;/code&gt; and &lt;a href=&quot;partialfunction&quot; id=&quot;scala.PartialFunction&quot; name=&quot;scala.PartialFunction&quot;&gt;scala.PartialFunction&lt;/a&gt; is that the latter can specify inputs which it will not handle.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="226b345d7288ce2539e1c44ec933be87d79dd53a" translate="yes" xml:space="preserve">
          <source>Note that the passed-in &lt;code&gt;dest&lt;/code&gt; array will be modified by this call.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a08e7a87de6375eaefd46a908937a7ef6ed271e" translate="yes" xml:space="preserve">
          <source>Note that the result of the test is modulo Scala's erasure semantics. Therefore the expression &lt;code&gt;1.isInstanceOf[String]&lt;/code&gt; will return &lt;code&gt;false&lt;/code&gt;, while the expression &lt;code&gt;List(1).isInstanceOf[List[String]]&lt;/code&gt; will return &lt;code&gt;true&lt;/code&gt;. In the latter example, because the type argument is erased as part of compilation it is not possible to check whether the contents of the list are of the specified type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16a3df9ae6c6159d561d210bfd5e318ca586fdbd" translate="yes" xml:space="preserve">
          <source>Note that the return type is &lt;code&gt;Iterator[_]&lt;/code&gt; instead of &lt;code&gt;Iterator[A]&lt;/code&gt; to allow returning a &lt;span name=&quot;java.util.PrimitiveIterator.OfInt&quot;&gt;java.util.PrimitiveIterator.OfInt&lt;/span&gt; (which is a &lt;code&gt;Iterator[Integer]&lt;/code&gt;) in the subclass &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt; (which is a &lt;code&gt;Stepper[Int]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27c24ae7ff635a5c040efe7bc48925789cce6fce" translate="yes" xml:space="preserve">
          <source>Note that the return type is &lt;code&gt;Spliterator[_]&lt;/code&gt; instead of &lt;code&gt;Spliterator[A]&lt;/code&gt; to allow returning a &lt;span name=&quot;Spliterator.OfInt&quot;&gt;Spliterator.OfInt&lt;/span&gt; (which is a &lt;code&gt;Spliterator[Integer]&lt;/code&gt;) in the subclass &lt;a href=&quot;intstepper&quot; id=&quot;scala.collection.IntStepper&quot; name=&quot;scala.collection.IntStepper&quot;&gt;IntStepper&lt;/a&gt; (which is a &lt;code&gt;Stepper[Int]&lt;/code&gt;).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62c2c81648f965d78fca639afe7f0484446c4ab5" translate="yes" xml:space="preserve">
          <source>Note that the returned value of &lt;code&gt;f&lt;/code&gt; will be discarded.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2338442dcdf6b0f4d1b791e95cf2d8c4d16a3891" translate="yes" xml:space="preserve">
          <source>Note that the success of a cast at runtime is modulo Scala's erasure semantics. Therefore the expression &lt;code&gt;1.asInstanceOf[String]&lt;/code&gt; will throw a &lt;code&gt;ClassCastException&lt;/code&gt; at runtime, while the expression &lt;code&gt;List(1).asInstanceOf[List[String]]&lt;/code&gt; will not. In the latter example, because the type argument is erased as part of compilation it is not possible to check whether the contents of the list are of the requested type.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fe068d03d79648087f0e901f7903dc301cb5511f" translate="yes" xml:space="preserve">
          <source>Note that this is equivalent to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="37eedc67ad0dd952c2bbc30f9e1fad872b67be10" translate="yes" xml:space="preserve">
          <source>Note that this means that &lt;code&gt;elem&lt;/code&gt; is computed a total of n times:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="29403e6db69a0546898216cee50a2a5f0663b7f3" translate="yes" xml:space="preserve">
          <source>Note that this method does not actually strip any matchers from the pattern.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6fc25eb15efb498d022e140ab3ba3349b7d12b" translate="yes" xml:space="preserve">
          <source>Note that this method is overridden in subclasses and the return type is refined to &lt;code&gt;S with EfficientSplit&lt;/code&gt;, for example &lt;a href=&quot;#stepper%5BS&amp;lt;:scala.collection.Stepper%5B_%5D%5D(implicitshape:scala.collection.StepperShape%5BA,S%5D):Swithcollection.Stepper.EfficientSplit&quot; id=&quot;scala.collection.IndexedSeqOps#stepper&quot; name=&quot;scala.collection.IndexedSeqOps#stepper&quot;&gt;IndexedSeqOps.stepper&lt;/a&gt;. For Steppers marked with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;scala.collection.Stepper.EfficientSplit&lt;/a&gt;, the converters in &lt;a href=&quot;../jdk/streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt; allow creating parallel streams, whereas bare Steppers can be converted only to sequential streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="38f4f628a1f4f8e0ae7031df6498c04df6b83e0f" translate="yes" xml:space="preserve">
          <source>Note that this method is overridden in subclasses and the return type is refined to &lt;code&gt;S with EfficientSplit&lt;/code&gt;, for example &lt;span name=&quot;IndexedSeqOps.stepper&quot;&gt;IndexedSeqOps.stepper&lt;/span&gt;. For Steppers marked with &lt;a href=&quot;../collection/stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;scala.collection.Stepper.EfficientSplit&lt;/a&gt;, the converters in &lt;a href=&quot;streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt; allow creating parallel streams, whereas bare Steppers can be converted only to sequential streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51b1970baddc28b310ad847e92231593fd1b57b9" translate="yes" xml:space="preserve">
          <source>Note that this method is overridden in subclasses and the return type is refined to &lt;code&gt;S with EfficientSplit&lt;/code&gt;, for example IndexedSeqOps.stepper. For Steppers marked with &lt;a href=&quot;../../collection/stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;scala.collection.Stepper.EfficientSplit&lt;/a&gt;, the converters in &lt;a href=&quot;../../jdk/streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt; allow creating parallel streams, whereas bare Steppers can be converted only to sequential streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="72f63f872472e43bd260ea3acfd6bd9f0e0c6534" translate="yes" xml:space="preserve">
          <source>Note that this method is overridden in subclasses and the return type is refined to &lt;code&gt;S with EfficientSplit&lt;/code&gt;, for example IndexedSeqOps.stepper. For Steppers marked with &lt;a href=&quot;../collection/stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;scala.collection.Stepper.EfficientSplit&lt;/a&gt;, the converters in &lt;a href=&quot;../jdk/streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt; allow creating parallel streams, whereas bare Steppers can be converted only to sequential streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c39c5ca121198925a85d8f106f0568d7c4bd4605" translate="yes" xml:space="preserve">
          <source>Note that this method is overridden in subclasses and the return type is refined to &lt;code&gt;S with EfficientSplit&lt;/code&gt;, for example IndexedSeqOps.stepper. For Steppers marked with &lt;a href=&quot;../stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;scala.collection.Stepper.EfficientSplit&lt;/a&gt;, the converters in &lt;a href=&quot;../../jdk/streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt; allow creating parallel streams, whereas bare Steppers can be converted only to sequential streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e3a017cbe515dc5a10c756dd3c32ebcb280e43ed" translate="yes" xml:space="preserve">
          <source>Note that this method is overridden in subclasses and the return type is refined to &lt;code&gt;S with EfficientSplit&lt;/code&gt;, for example IndexedSeqOps.stepper. For Steppers marked with &lt;a href=&quot;collection/stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;scala.collection.Stepper.EfficientSplit&lt;/a&gt;, the converters in &lt;a href=&quot;jdk/streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt; allow creating parallel streams, whereas bare Steppers can be converted only to sequential streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9e8498b8725258213a4960c7eff6bd75fb96d28" translate="yes" xml:space="preserve">
          <source>Note that this method is overridden in subclasses and the return type is refined to &lt;code&gt;S with EfficientSplit&lt;/code&gt;, for example IndexedSeqOps.stepper. For Steppers marked with &lt;a href=&quot;stepper%24%24efficientsplit&quot; id=&quot;scala.collection.Stepper.EfficientSplit&quot; name=&quot;scala.collection.Stepper.EfficientSplit&quot;&gt;scala.collection.Stepper.EfficientSplit&lt;/a&gt;, the converters in &lt;a href=&quot;../jdk/streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;scala.jdk.StreamConverters&lt;/a&gt; allow creating parallel streams, whereas bare Steppers can be converted only to sequential streams.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6126f4411020e42fbc440adb371ff352eec973f5" translate="yes" xml:space="preserve">
          <source>Note that this trait extends &lt;a href=&quot;staticannotation&quot; id=&quot;scala.annotation.StaticAnnotation&quot; name=&quot;scala.annotation.StaticAnnotation&quot;&gt;StaticAnnotation&lt;/a&gt;, so constant annotations are persisted in the classfile.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c781470a893117168ae9883a7be817ec07c88fb9" translate="yes" xml:space="preserve">
          <source>Note that when checking for equality &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.SeqMap&quot; name=&quot;scala.collection.SeqMap&quot;&gt;SeqMap&lt;/a&gt; does not take into account ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed18415d6cacb2fac3fa5c94c07882f0c1f44861" translate="yes" xml:space="preserve">
          <source>Note that when checking for equality &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.immutable.SeqMap&quot; name=&quot;scala.collection.immutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; does not take into account ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="374ceac12f39bf6f55ebb4b6649acac7234f3714" translate="yes" xml:space="preserve">
          <source>Note that when checking for equality &lt;a href=&quot;seqmap&quot; id=&quot;scala.collection.mutable.SeqMap&quot; name=&quot;scala.collection.mutable.SeqMap&quot;&gt;SeqMap&lt;/a&gt; does not take into account ordering.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="83423c198b6099edba08f185f940042d5dba3b79" translate="yes" xml:space="preserve">
          <source>Note:</source>
          <target state="translated">Note:</target>
        </trans-unit>
        <trans-unit id="2756b126e9641b7fedd0facd258c55632d82df1c" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;(1 - 2 - 3).pipe(times6)&lt;/code&gt; may have a small amount of overhead at runtime compared to the equivalent &lt;code&gt;{ val temp = 1 - 2 - 3; times6(temp) }&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="573221d3dab76ee088a2f2e11cad3b6ba8a87a64" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;IterableOnce&lt;/code&gt; does not extend &lt;a href=&quot;iterableonceops&quot; id=&quot;scala.collection.IterableOnceOps&quot; name=&quot;scala.collection.IterableOnceOps&quot;&gt;IterableOnceOps&lt;/a&gt;. This is different than the general design of the collections library, which uses the following pattern:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f0f58854d3922a79ae54bfe80d59cf7c934e738" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;c span p&lt;/code&gt; is equivalent to (but more efficient than) &lt;code&gt;(c takeWhile p, c dropWhile p)&lt;/code&gt;, provided the evaluation of the predicate &lt;code&gt;p&lt;/code&gt; does not cause any side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="50f1b1ebe17a6b8c3420a76ab2be9f3b00c2328f" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;c span p&lt;/code&gt; is equivalent to (but possibly more efficient than) &lt;code&gt;(c takeWhile p, c dropWhile p)&lt;/code&gt;, provided the evaluation of the predicate &lt;code&gt;p&lt;/code&gt; does not cause any side-effects.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d4ee05b6dc58d006cdc6b34532bb63c7dee6ab69" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;c splitAt n&lt;/code&gt; is equivalent to (but possibly more efficient than) &lt;code&gt;(c take n, c drop n)&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d16a27b402ecb7aa247afc06dfd79d5d0f937f5" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;xs.reverseIterator&lt;/code&gt; is the same as &lt;code&gt;xs.reverse.iterator&lt;/code&gt; but implemented more efficiently.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8c542e49ffcb9cba47eb7373a30baeb4fa910a3" translate="yes" xml:space="preserve">
          <source>Note: &lt;code&gt;xs.reverseIterator&lt;/code&gt; is the same as &lt;code&gt;xs.reverse.iterator&lt;/code&gt; but might be more efficient.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7eeb0ee9672e77d1df191f3a34a6afddd8a2f1e5" translate="yes" xml:space="preserve">
          <source>Note: Even when applied to a view or a lazy collection it will always force the elements.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ea96e8104282c771a3cd07605b5750c1333b4bf2" translate="yes" xml:space="preserve">
          <source>Note: Implementations in subclasses that are not repeatedly traversable must take care not to consume any elements when &lt;code&gt;isEmpty&lt;/code&gt; is called.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6331a29b4ad2ad19c3bfee4440e57019d6e89be1" translate="yes" xml:space="preserve">
          <source>Note: Repeated chaining of calls to append methods (&lt;code&gt;appended&lt;/code&gt;, &lt;code&gt;appendedAll&lt;/code&gt;, &lt;code&gt;lazyAppendedAll&lt;/code&gt;) without forcing any of the intermediate resulting lazy lists may overflow the stack when the final result is forced.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="334274ab172552aee8df5fc36da41aae425fb26e" translate="yes" xml:space="preserve">
          <source>Note: The neutral element &lt;code&gt;z&lt;/code&gt; may be applied more than once.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e850b6bb4b6a15dc88b12a32791b2d20ba558e63" translate="yes" xml:space="preserve">
          <source>Note: The order of elements returned is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e1618de5fda6a084006029f68ddf15f4439784e8" translate="yes" xml:space="preserve">
          <source>Note: The order of elements returned is undefined. If you want to traverse the elements in priority queue order, use &lt;code&gt;clone().dequeueAll.iterator&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1c694f69558fb0bc607df72f85cbebd40f23dd88" translate="yes" xml:space="preserve">
          <source>Note: This class is as of 2.8 largely superseded by HashMap.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8800f96fb0ac8a34cdaf8b6e06142ff76d08744a" translate="yes" xml:space="preserve">
          <source>Note: This does not actually resize the internal representation. See clearAndShrink if you want to also resize internally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="913614e0f851a2be56eeff3298d3a296328070f8" translate="yes" xml:space="preserve">
          <source>Note: This does not actually resize the internal representation. See trimToSize if you want to also resize internally</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7422ac98dd6fdb74f4b44e21207526e9366668b8" translate="yes" xml:space="preserve">
          <source>Note: This function may temporarily load the entire buffer into memory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2701087ab43cf8a0b7cada59043718d86bd8c9fa" translate="yes" xml:space="preserve">
          <source>Note: This method will invoke op at most once. However, &lt;code&gt;op&lt;/code&gt; may be invoked without the result being added to the map if a concurrent process is also trying to add a value corresponding to the same key &lt;code&gt;k&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="687d6cbf40a57817e6276ba73ac06fdf47bd4b60" translate="yes" xml:space="preserve">
          <source>Note: Using this method may result in non-deterministic concurrent programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6af7815d477beb3254739a20cb770272e3b9311" translate="yes" xml:space="preserve">
          <source>Note: for pattern matches with one or two cases, the compiler generates jump instructions. Annotating such a match with &lt;code&gt;@switch&lt;/code&gt; does not issue any warning.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e9bf4ae8e82eda822a5bee8eb2b2bc55626dda60" translate="yes" xml:space="preserve">
          <source>Note: keys are not guaranteed to be consistent between this collection and the projection. This is the case for buffers where indexing is relative to the projection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d7ef9f46ab5ca222ec2671955b0741270f5b57f0" translate="yes" xml:space="preserve">
          <source>Note: may not terminate for infinite iterators.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23bda8521b12b3628c2c316f4e3a7ef59bdce6b8" translate="yes" xml:space="preserve">
          <source>Note: may not terminate for infinite-sized collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d057bb1e24f48c1a0850029b9df73146d68a7cb0" translate="yes" xml:space="preserve">
          <source>Note: might return different results for different runs, unless the underlying collection type is ordered or the operator is associative and commutative.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="474dc626da46bbc11ded98e6371a8136d67419aa" translate="yes" xml:space="preserve">
          <source>Note: might return different results for different runs, unless the underlying collection type is ordered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41c6d7a1ef3c5af7ea4e5404289bfdde754a55c9" translate="yes" xml:space="preserve">
          <source>Note: parallel processing is only efficient for collections that have a &lt;span name=&quot;Stepper&quot;&gt;Stepper&lt;/span&gt; implementation which supports efficient splitting. For collections where this is the case, the &lt;code&gt;stepper&lt;/code&gt; method has a return type marked &lt;code&gt;with EfficientSplit&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c8afdc4481445261897218508aa0c272b2bd10c9" translate="yes" xml:space="preserve">
          <source>Note: parentheses are required when annotating a callsite within a larger expression.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="483599e8cbda1f5605f0e313d946227df630b3ce" translate="yes" xml:space="preserve">
          <source>Note: testing for erasure here is important, as it is many times faster than &amp;lt;:&amp;lt; and rules out most comparisons.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cfa6cae0149f48c646dddec232157992dbafd52d" translate="yes" xml:space="preserve">
          <source>Note: the difference between &lt;code&gt;c filter p&lt;/code&gt; and &lt;code&gt;c withFilter p&lt;/code&gt; is that the former creates a new array, whereas the latter only restricts the domain of subsequent &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c1ed1fd50294b794db95e5ce537842e8125a9e4d" translate="yes" xml:space="preserve">
          <source>Note: the difference between &lt;code&gt;c filter p&lt;/code&gt; and &lt;code&gt;c withFilter p&lt;/code&gt; is that the former creates a new collection, whereas the latter only restricts the domain of subsequent &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0306eb16428ccd3ab192f592182a68ed2c7d3c18" translate="yes" xml:space="preserve">
          <source>Note: the difference between &lt;code&gt;c filter p&lt;/code&gt; and &lt;code&gt;c withFilter p&lt;/code&gt; is that the former creates a new string, whereas the latter only restricts the domain of subsequent &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a8f3e3a0fc20e2a5facafc04405e8a13f6420ad6" translate="yes" xml:space="preserve">
          <source>Note: the order of elements is undefined.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d734f7ad4c3ed23b33bdce31db435fbdcfc08c59" translate="yes" xml:space="preserve">
          <source>Note: this is the fastest way to retrieve a value that may or may not exist, if the default null/zero is acceptable. For key/value pairs that do exist, &lt;code&gt;apply&lt;/code&gt; (i.e. &lt;code&gt;map(key)&lt;/code&gt;) is equally fast.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a6e1abac53fa390d653a62144d1203b3bcd465bf" translate="yes" xml:space="preserve">
          <source>Note: this method uses the boxed type &lt;code&gt;java.lang.X&lt;/code&gt; (or &lt;code&gt;BoxedUnit&lt;/code&gt;) instead of the primitive type &lt;code&gt;scala.X&lt;/code&gt; to improve compatibility when using it in Java code (the Scala compiler emits &lt;code&gt;C[Int]&lt;/code&gt; as &lt;code&gt;C[Object]&lt;/code&gt; in bytecode due to &lt;a href=&quot;https://github.com/scala/bug/issues/4214&quot;&gt;scala/bug#4214&lt;/a&gt;). In Scala code, add &lt;code&gt;import scala.jdk.FunctionConverters._&lt;/code&gt; and use the extension methods instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1ee342e5128718323cc723d2bb665355742b8d0" translate="yes" xml:space="preserve">
          <source>Note: this method uses the boxed type &lt;code&gt;java.lang.X&lt;/code&gt; instead of the primitive type &lt;code&gt;scala.X&lt;/code&gt; to improve compatibility when using it in Java code (the Scala compiler emits &lt;code&gt;C[Int]&lt;/code&gt; as &lt;code&gt;C[Object]&lt;/code&gt; in bytecode due to &lt;a href=&quot;https://github.com/scala/bug/issues/4214&quot;&gt;scala/bug#4214&lt;/a&gt;). In Scala code, add &lt;code&gt;import scala.jdk.OptionConverters._&lt;/code&gt; and use the extension methods instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ea3a0fc3125c73cfa26d9d7df5684e6f1c50d92" translate="yes" xml:space="preserve">
          <source>Note: this method uses the boxed type &lt;code&gt;java.lang.X&lt;/code&gt; instead of the primitive type &lt;code&gt;scala.X&lt;/code&gt; to improve compatibility when using it in Java code (the Scala compiler emits &lt;code&gt;C[Int]&lt;/code&gt; as &lt;code&gt;C[Object]&lt;/code&gt; in bytecode due to &lt;a href=&quot;https://github.com/scala/bug/issues/4214&quot;&gt;scala/bug#4214&lt;/a&gt;). In Scala code, add &lt;code&gt;import scala.jdk.StreamConverters._&lt;/code&gt; and use the extension methods instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="344517017dde6f70dc85f793fc2d393e86622bbb" translate="yes" xml:space="preserve">
          <source>Note: though it is not shown above, the equivalent of a shell's &lt;code&gt;;&lt;/code&gt; would be &lt;code&gt;###&lt;/code&gt;. The reason for this name is that &lt;code&gt;;&lt;/code&gt; is a reserved token in Scala.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60111b84aba4dd6c8c8d8a72fbfbac406bc9f0a" translate="yes" xml:space="preserve">
          <source>Note: to convert between Scala collections and classic Java collections, use &lt;a href=&quot;collectionconverters%24&quot; id=&quot;scala.jdk.javaapi.CollectionConverters&quot; name=&quot;scala.jdk.javaapi.CollectionConverters&quot;&gt;CollectionConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2921c958a44a4788300a0234335e7ae0475cdace" translate="yes" xml:space="preserve">
          <source>Note: to create &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Streams&lt;/span&gt; that operate on Scala collections (sequentially or in parallel), use &lt;a href=&quot;streamconverters%24&quot; id=&quot;scala.jdk.StreamConverters&quot; name=&quot;scala.jdk.StreamConverters&quot;&gt;StreamConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3c742553b38acca1944c80fe042426a449c4c23" translate="yes" xml:space="preserve">
          <source>Note: to create &lt;span name=&quot;java.util.stream.Stream&quot;&gt;Java Streams&lt;/span&gt; that operate on Scala collections (sequentially or in parallel), use &lt;a href=&quot;streamconverters%24&quot; id=&quot;scala.jdk.javaapi.StreamConverters&quot; name=&quot;scala.jdk.javaapi.StreamConverters&quot;&gt;StreamConverters&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf197f039e10cafac58ff74ccfb38c21d398b250" translate="yes" xml:space="preserve">
          <source>Note: to run the example, start the Scala REPL with &lt;code&gt;scala -Yrepl-class-based&lt;/code&gt; to avoid deadlocks, see &lt;a href=&quot;https://github.com/scala/bug/issues/9076&quot;&gt;https://github.com/scala/bug/issues/9076&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5130abdccbac10a32a9b831e8340909841278341" translate="yes" xml:space="preserve">
          <source>Note: unlike filter, withFilter does not create a new Try. Instead, it restricts the domain of subsequent &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;flatMap&lt;/code&gt;, &lt;code&gt;foreach&lt;/code&gt;, and &lt;code&gt;withFilter&lt;/code&gt; operations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34b9f0838fff2f33b877639504e686188c3da3c6" translate="yes" xml:space="preserve">
          <source>Note: using parallel streams in the Scala REPL causes deadlocks, see &lt;a href=&quot;https://github.com/scala/bug/issues/9076&quot;&gt;https://github.com/scala/bug/issues/9076&lt;/a&gt;. As a workaround, use &lt;code&gt;scala -Yrepl-class-based&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4a29301a839b6a2e23971ee9f9a578224a916e35" translate="yes" xml:space="preserve">
          <source>Note: using this method yields nondeterministic dataflow programs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2573d2add5d47cc24f698a4c64b849e4e625336" translate="yes" xml:space="preserve">
          <source>Note: when using a custom &lt;code&gt;Hashing&lt;/code&gt;, make sure to use it with the &lt;code&gt;Equiv&lt;/code&gt; such that if any two objects are equal, then their hash codes must be equal.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6e8f24f1e1c52581127df5fa27703d588828a61" translate="yes" xml:space="preserve">
          <source>Note: will not terminate for infinite-sized collections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4481948392a8846400c954e77f58d76cdaa73963" translate="yes" xml:space="preserve">
          <source>Nothing</source>
          <target state="translated">Nothing</target>
        </trans-unit>
        <trans-unit id="1b3f141ab87179d0755abc1d4da67f0c04e3ab7c" translate="yes" xml:space="preserve">
          <source>Nothing.</source>
          <target state="translated">Nothing.</target>
        </trans-unit>
        <trans-unit id="94b42388e88d010b8bb047ed41046a55c80dba3a" translate="yes" xml:space="preserve">
          <source>Notice that here the modulus is encoded in the type of the values and so does not incur any additional per-value storage cost. When a runtime value of the modulus is required in the implementation of &lt;code&gt;+&lt;/code&gt; it is provided at the call site via the implicit argument &lt;code&gt;m&lt;/code&gt; of type &lt;code&gt;ValueOf[M]&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="109085beaaa80ac89858b283a64f7c75d7e5bb12" translate="yes" xml:space="preserve">
          <source>Null</source>
          <target state="translated">Null</target>
        </trans-unit>
        <trans-unit id="b7baa1d40c4ea29afc9098732bffee2a861a6c44" translate="yes" xml:space="preserve">
          <source>Number</source>
          <target state="translated">Number</target>
        </trans-unit>
        <trans-unit id="b7e24cabf6cd1f87bb8310a7fdffa6131e89f66a" translate="yes" xml:space="preserve">
          <source>Number of bits used to encode the column number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ca601f23cfcb7ca0c114591fbb3b1ccdc039d2f" translate="yes" xml:space="preserve">
          <source>Number of bits used to encode the line number</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a62380404b3b267a5c4e21b5e111455d09031e" translate="yes" xml:space="preserve">
          <source>Numeric</source>
          <target state="translated">Numeric</target>
        </trans-unit>
        <trans-unit id="6dfe5bd8df662abfd33235a932f9d5f348cd6aa0" translate="yes" xml:space="preserve">
          <source>Numeric$</source>
          <target state="translated">Numeric$</target>
        </trans-unit>
        <trans-unit id="74ab9fc1e70436f30dd4934c81bb137b326cd88f" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalAsIfIntegral</source>
          <target state="translated">Numeric$.BigDecimalAsIfIntegral</target>
        </trans-unit>
        <trans-unit id="2bec68ce0a8b22b10febb21b8f2d5c17fff5c0aa" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalAsIfIntegral$</source>
          <target state="translated">Numeric$.BigDecimalAsIfIntegral$</target>
        </trans-unit>
        <trans-unit id="41169b51e523b82e739673e9c50c6a8416589388" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalAsIfIntegral$.quot()</source>
          <target state="translated">Numeric$.BigDecimalAsIfIntegral$.quot()</target>
        </trans-unit>
        <trans-unit id="1532299f2a56f67d2c6a50c0fa574775fa6e98db" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalAsIfIntegral$.rem()</source>
          <target state="translated">Numeric$.BigDecimalAsIfIntegral$.rem()</target>
        </trans-unit>
        <trans-unit id="4899c590a97fec7121956b563fd766ec4897d3a1" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalAsIfIntegral()</source>
          <target state="translated">Numeric$.BigDecimalAsIfIntegral()</target>
        </trans-unit>
        <trans-unit id="cbf6c8ce823dca9b03c9f6c0eb5090ed36d2ba63" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalAsIfIntegral.quot()</source>
          <target state="translated">Numeric$.BigDecimalAsIfIntegral.quot()</target>
        </trans-unit>
        <trans-unit id="ec6fb740f9a52fb562c9f6f29011cc92c685ab2b" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalAsIfIntegral.rem()</source>
          <target state="translated">Numeric$.BigDecimalAsIfIntegral.rem()</target>
        </trans-unit>
        <trans-unit id="58b95d9551f311c89d00c45effc396d3889f6814" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted</target>
        </trans-unit>
        <trans-unit id="724ca03f7787b2472aba496fcd58a7f1cc1f9485" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted()</target>
        </trans-unit>
        <trans-unit id="4ea1a491d9cf00f292fc7d630ad82eab31357682" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.fromInt()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.fromInt()</target>
        </trans-unit>
        <trans-unit id="9606ca142d2425233e5e6d7d3ff52fe2c35683f3" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.minus()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.minus()</target>
        </trans-unit>
        <trans-unit id="f639318891a49b37f6d82dd3bdbaddb5be81872f" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.negate()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.negate()</target>
        </trans-unit>
        <trans-unit id="b6d367c94d8c7394f0cd96ac8198d832f4138fb4" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.parseString()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.parseString()</target>
        </trans-unit>
        <trans-unit id="6a3ca1e818ab28b31d9a0248ffef963a9ab893bb" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.plus()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.plus()</target>
        </trans-unit>
        <trans-unit id="910016f212510e705143b35f9490edaf98ae7f52" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.times()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.times()</target>
        </trans-unit>
        <trans-unit id="7796cb63ba0e79f4738e5ac111ce21ffb153aee3" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.toDouble()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.toDouble()</target>
        </trans-unit>
        <trans-unit id="2e0903b5774a1037665644c2dabfd0d28ba7b6d4" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.toFloat()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.toFloat()</target>
        </trans-unit>
        <trans-unit id="51a595a9e0c3fc339d44ce4c6f16a6827b2a0834" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.toInt()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.toInt()</target>
        </trans-unit>
        <trans-unit id="1adf64b8011455c135c7131d11085182839ef578" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsConflicted.toLong()</source>
          <target state="translated">Numeric$.BigDecimalIsConflicted.toLong()</target>
        </trans-unit>
        <trans-unit id="986fefab0d20b23794535d3992f3d105d438f686" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsFractional</source>
          <target state="translated">Numeric$.BigDecimalIsFractional</target>
        </trans-unit>
        <trans-unit id="081ff583bc532dd99f9a03acffe6a4479f4b4832" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsFractional$</source>
          <target state="translated">Numeric$.BigDecimalIsFractional$</target>
        </trans-unit>
        <trans-unit id="db13c3b6293e45218437c9c8f7f9c3d9fa88cdee" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsFractional$.div()</source>
          <target state="translated">Numeric$.BigDecimalIsFractional$.div()</target>
        </trans-unit>
        <trans-unit id="b008d613659a67483d3c11bf1c85b61548bcf1fd" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsFractional()</source>
          <target state="translated">Numeric$.BigDecimalIsFractional()</target>
        </trans-unit>
        <trans-unit id="6eb1e41c92a2eb4b91f935419434271218fe7b22" translate="yes" xml:space="preserve">
          <source>Numeric$.BigDecimalIsFractional.div()</source>
          <target state="translated">Numeric$.BigDecimalIsFractional.div()</target>
        </trans-unit>
        <trans-unit id="56e0339781449430dac2ecbfb89d4b33b69e2e67" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral</source>
          <target state="translated">Numeric$.BigIntIsIntegral</target>
        </trans-unit>
        <trans-unit id="7eb7a3bfe880c45bdbda2c9d9829bae62fea5a69" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$</source>
          <target state="translated">Numeric$.BigIntIsIntegral$</target>
        </trans-unit>
        <trans-unit id="5db8bcbed3c70d6978e9800234d2cbc33584d473" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.fromInt()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.fromInt()</target>
        </trans-unit>
        <trans-unit id="41160c9683ae4a39fd49d19e07d7e80a5e3d03e2" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.minus()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.minus()</target>
        </trans-unit>
        <trans-unit id="6622cb58291f1f1c55446db7b243e80cbb809d35" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.negate()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.negate()</target>
        </trans-unit>
        <trans-unit id="f79a5c92d8528c76c3e2e289ecc522c7f9f1a1d4" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.parseString()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.parseString()</target>
        </trans-unit>
        <trans-unit id="c6ca3d29d5e27bc50b5115d389ff5fd7aceac850" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.plus()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.plus()</target>
        </trans-unit>
        <trans-unit id="2f0b1c492274c36b7fc10b3dff408b40b97885e6" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.quot()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.quot()</target>
        </trans-unit>
        <trans-unit id="3046923474382eb40206ebc594c7a495cd9b96cc" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.rem()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.rem()</target>
        </trans-unit>
        <trans-unit id="daf7a995b01ad2545c545e543deecde9485d69f1" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.times()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.times()</target>
        </trans-unit>
        <trans-unit id="1e4ad21ecf0eb4bd3f874d44631e8525b7833ca1" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.toDouble()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.toDouble()</target>
        </trans-unit>
        <trans-unit id="4d6203245d96a0c4d481514fd7b0235dcdfde151" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.toFloat()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.toFloat()</target>
        </trans-unit>
        <trans-unit id="3fcd619477bb53aa69b1b933bb656649f5642718" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.toInt()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.toInt()</target>
        </trans-unit>
        <trans-unit id="a1b4b6b1a6921a3c5ce7b271a6a267e3b4b465e6" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral$.toLong()</source>
          <target state="translated">Numeric$.BigIntIsIntegral$.toLong()</target>
        </trans-unit>
        <trans-unit id="7a2da6591cb9d577be014fb77ee06578156a3a6d" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral()</source>
          <target state="translated">Numeric$.BigIntIsIntegral()</target>
        </trans-unit>
        <trans-unit id="beaf35831ded8a3e0f222ea8bbf9c0220a098d78" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.fromInt()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.fromInt()</target>
        </trans-unit>
        <trans-unit id="2303f3966ceec887b09dc6a558db1e2d608efc07" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.minus()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.minus()</target>
        </trans-unit>
        <trans-unit id="a05dc74ed1cc7fcc5306533366b1ecdcd877b663" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.negate()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.negate()</target>
        </trans-unit>
        <trans-unit id="e510126e95ed75190f932c18c1fd2f7b4ba3d6f3" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.parseString()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.parseString()</target>
        </trans-unit>
        <trans-unit id="21ed2ec2267f818b20e4438f4c304d73b1dae31e" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.plus()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.plus()</target>
        </trans-unit>
        <trans-unit id="5d0ec3481e9b19b3b3bef221a8e14400f13ca9a2" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.quot()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.quot()</target>
        </trans-unit>
        <trans-unit id="73b7acddfdc16f9a8334f0e8c76becd32233768d" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.rem()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.rem()</target>
        </trans-unit>
        <trans-unit id="b81e833a03f0234c4dd408f0412883547fc83da3" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.times()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.times()</target>
        </trans-unit>
        <trans-unit id="74820dc86f3f252349b069c4eb7bddb67551f725" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.toDouble()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.toDouble()</target>
        </trans-unit>
        <trans-unit id="440d3ae6d77e351695646fd31e7633ff8e30fa59" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.toFloat()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.toFloat()</target>
        </trans-unit>
        <trans-unit id="c3ede609813c53644a6688a8601dbf6f88154036" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.toInt()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.toInt()</target>
        </trans-unit>
        <trans-unit id="74837da053d6ea70156dc24a4ac08f55096fbe71" translate="yes" xml:space="preserve">
          <source>Numeric$.BigIntIsIntegral.toLong()</source>
          <target state="translated">Numeric$.BigIntIsIntegral.toLong()</target>
        </trans-unit>
        <trans-unit id="a57cc140ebaa0389fa4a3abda7df3ca67ead91d8" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral</source>
          <target state="translated">Numeric$.ByteIsIntegral</target>
        </trans-unit>
        <trans-unit id="499a8eeb1659f29546cddcfa865908104b804ca6" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$</source>
          <target state="translated">Numeric$.ByteIsIntegral$</target>
        </trans-unit>
        <trans-unit id="d22964bbf85d02564b34406d483cec6caa35026c" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.fromInt()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.fromInt()</target>
        </trans-unit>
        <trans-unit id="e3f039e829aa273e71f95b22e1f67da2b744cb21" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.minus()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.minus()</target>
        </trans-unit>
        <trans-unit id="77d3112432fb6e8d4037b6ad817130fbc5812e56" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.negate()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.negate()</target>
        </trans-unit>
        <trans-unit id="88324c220cf1a0dcf3cf18ab259460f6a4359b56" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.parseString()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.parseString()</target>
        </trans-unit>
        <trans-unit id="d6dd446391ae703544b3cf39a081aac34b62436a" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.plus()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.plus()</target>
        </trans-unit>
        <trans-unit id="b8ff55526726efea69e451d86b557625035116d3" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.quot()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.quot()</target>
        </trans-unit>
        <trans-unit id="4a5aa202e3c1696bb8469cac38de6d73206a8b81" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.rem()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.rem()</target>
        </trans-unit>
        <trans-unit id="e3d880d3153f685649a7c8bf6c60c6050b37f1db" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.sign()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.sign()</target>
        </trans-unit>
        <trans-unit id="0ae770b6406c77a467c60049dd102c8676170266" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.signum()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.signum()</target>
        </trans-unit>
        <trans-unit id="71379deeee9c7fbb95f67320462be54c0e96dd64" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.times()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.times()</target>
        </trans-unit>
        <trans-unit id="ab697188d36d99970d8968397ad3cac5131d3773" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.toDouble()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.toDouble()</target>
        </trans-unit>
        <trans-unit id="9a6fac4eee4ca13fe8321013e95aeeaed2e89cab" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.toFloat()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.toFloat()</target>
        </trans-unit>
        <trans-unit id="0d28504460f55bcd2e0fd45fe83ee6081dc77518" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.toInt()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.toInt()</target>
        </trans-unit>
        <trans-unit id="8d73da8149cfe4c50355b7c3f37400c43373cbae" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral$.toLong()</source>
          <target state="translated">Numeric$.ByteIsIntegral$.toLong()</target>
        </trans-unit>
        <trans-unit id="47759f58cdd2f2a1fbdaecad95759e711a31ee81" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral()</source>
          <target state="translated">Numeric$.ByteIsIntegral()</target>
        </trans-unit>
        <trans-unit id="4801339957eb96e9e7505e85516339825249b69a" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.fromInt()</source>
          <target state="translated">Numeric$.ByteIsIntegral.fromInt()</target>
        </trans-unit>
        <trans-unit id="118aa27584375fd6324081af9d52780958e532a9" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.minus()</source>
          <target state="translated">Numeric$.ByteIsIntegral.minus()</target>
        </trans-unit>
        <trans-unit id="dd589e53dff9e1b0913fdd9cf048fc1b4a7f059c" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.negate()</source>
          <target state="translated">Numeric$.ByteIsIntegral.negate()</target>
        </trans-unit>
        <trans-unit id="c598d3456044ae9a92bc0c731119233889be61b0" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.parseString()</source>
          <target state="translated">Numeric$.ByteIsIntegral.parseString()</target>
        </trans-unit>
        <trans-unit id="544a08d5b37782459a5333d0aa3b6c4747c240f1" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.plus()</source>
          <target state="translated">Numeric$.ByteIsIntegral.plus()</target>
        </trans-unit>
        <trans-unit id="b8ce37bf1b975e4a1314b813e77e57ad68568090" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.quot()</source>
          <target state="translated">Numeric$.ByteIsIntegral.quot()</target>
        </trans-unit>
        <trans-unit id="03da43320498590f009fadfc0b183cf49dfe9d69" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.rem()</source>
          <target state="translated">Numeric$.ByteIsIntegral.rem()</target>
        </trans-unit>
        <trans-unit id="3080fdebc1d62a99d06c72a6ae7be08b90047ba2" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.sign()</source>
          <target state="translated">Numeric$.ByteIsIntegral.sign()</target>
        </trans-unit>
        <trans-unit id="3ff1966a0a24ab5f8a18e50113cb0fe9018e3e5d" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.signum()</source>
          <target state="translated">Numeric$.ByteIsIntegral.signum()</target>
        </trans-unit>
        <trans-unit id="6d50c62760f8759fdd24ff5197fc24251860eb60" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.times()</source>
          <target state="translated">Numeric$.ByteIsIntegral.times()</target>
        </trans-unit>
        <trans-unit id="89cedb0b1c150dac3404f99b6fe3ae4e68f13f0f" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.toDouble()</source>
          <target state="translated">Numeric$.ByteIsIntegral.toDouble()</target>
        </trans-unit>
        <trans-unit id="b907a3c276c14c64c77fddeda7842bb0b81c67da" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.toFloat()</source>
          <target state="translated">Numeric$.ByteIsIntegral.toFloat()</target>
        </trans-unit>
        <trans-unit id="fcc9ffa2cb6608dbc6168f74708744e52436bf31" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.toInt()</source>
          <target state="translated">Numeric$.ByteIsIntegral.toInt()</target>
        </trans-unit>
        <trans-unit id="63d20625e4a9972695c9f4a3a469e6d019a9b7e1" translate="yes" xml:space="preserve">
          <source>Numeric$.ByteIsIntegral.toLong()</source>
          <target state="translated">Numeric$.ByteIsIntegral.toLong()</target>
        </trans-unit>
        <trans-unit id="e6103a3a0bd5ce5a577d551a1634ef055ce5ba61" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral</source>
          <target state="translated">Numeric$.CharIsIntegral</target>
        </trans-unit>
        <trans-unit id="ac4e97114e8a5d729323cc6f9d0484e8db623ee5" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$</source>
          <target state="translated">Numeric$.CharIsIntegral$</target>
        </trans-unit>
        <trans-unit id="0d839afbfa8173cd0d795002b28d357609955d12" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.fromInt()</source>
          <target state="translated">Numeric$.CharIsIntegral$.fromInt()</target>
        </trans-unit>
        <trans-unit id="8ac2d234e6a5d4a7aba903a8fec35e4e72dd5415" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.minus()</source>
          <target state="translated">Numeric$.CharIsIntegral$.minus()</target>
        </trans-unit>
        <trans-unit id="a6edf6b3fe5848628caf59087bb652f31d45b372" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.negate()</source>
          <target state="translated">Numeric$.CharIsIntegral$.negate()</target>
        </trans-unit>
        <trans-unit id="a92ed5a142907578323e9b0e0a155ba066665a2f" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.parseString()</source>
          <target state="translated">Numeric$.CharIsIntegral$.parseString()</target>
        </trans-unit>
        <trans-unit id="d12cc00ced6c36920826f9df8b6280c8add0c53e" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.plus()</source>
          <target state="translated">Numeric$.CharIsIntegral$.plus()</target>
        </trans-unit>
        <trans-unit id="4ac0dc3fed65334f451a49f4e3b709e78e413506" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.quot()</source>
          <target state="translated">Numeric$.CharIsIntegral$.quot()</target>
        </trans-unit>
        <trans-unit id="a6826a142df5dec2efc08c4162f1941c82afaa0c" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.rem()</source>
          <target state="translated">Numeric$.CharIsIntegral$.rem()</target>
        </trans-unit>
        <trans-unit id="59279c8f0c0e21ac1d21e34db9adfe1630dca644" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.sign()</source>
          <target state="translated">Numeric$.CharIsIntegral$.sign()</target>
        </trans-unit>
        <trans-unit id="2f343bdc4281be0a74b7488af338418912ad4cd4" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.signum()</source>
          <target state="translated">Numeric$.CharIsIntegral$.signum()</target>
        </trans-unit>
        <trans-unit id="34dbbe969f88abc0de127a4f3311ab2193f6688b" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.times()</source>
          <target state="translated">Numeric$.CharIsIntegral$.times()</target>
        </trans-unit>
        <trans-unit id="fe7ee37342e5af01d0667c9da73df507b62b74d9" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.toDouble()</source>
          <target state="translated">Numeric$.CharIsIntegral$.toDouble()</target>
        </trans-unit>
        <trans-unit id="c8468e7c21acecdf58075c4bf9d42dfb6335ce6b" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.toFloat()</source>
          <target state="translated">Numeric$.CharIsIntegral$.toFloat()</target>
        </trans-unit>
        <trans-unit id="139c40a535cbfcca356ec972aba4e5c81444afbc" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.toInt()</source>
          <target state="translated">Numeric$.CharIsIntegral$.toInt()</target>
        </trans-unit>
        <trans-unit id="fed52035edf5509ed4d1878011c4e53ec39e1314" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral$.toLong()</source>
          <target state="translated">Numeric$.CharIsIntegral$.toLong()</target>
        </trans-unit>
        <trans-unit id="e38eaa172f82c8595cc1eef9f4899a069e8faaed" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral()</source>
          <target state="translated">Numeric$.CharIsIntegral()</target>
        </trans-unit>
        <trans-unit id="7214c7c2f4ee8f1d13095f93ad2e2763bb3c4f0a" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.fromInt()</source>
          <target state="translated">Numeric$.CharIsIntegral.fromInt()</target>
        </trans-unit>
        <trans-unit id="ce7333511f8198a4d4b450c097cb2e09c91267e0" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.minus()</source>
          <target state="translated">Numeric$.CharIsIntegral.minus()</target>
        </trans-unit>
        <trans-unit id="ff4e5f6f2a8085224bd6d8a15833f45f8bd6e2d9" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.negate()</source>
          <target state="translated">Numeric$.CharIsIntegral.negate()</target>
        </trans-unit>
        <trans-unit id="3a6b283a6c73ef55c720d54e934894d657110d8c" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.parseString()</source>
          <target state="translated">Numeric$.CharIsIntegral.parseString()</target>
        </trans-unit>
        <trans-unit id="edfc2af3893f93af1e56c1e525c22a0c28902ace" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.plus()</source>
          <target state="translated">Numeric$.CharIsIntegral.plus()</target>
        </trans-unit>
        <trans-unit id="4e0ee62c03b45e53788e2525408f27572136e589" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.quot()</source>
          <target state="translated">Numeric$.CharIsIntegral.quot()</target>
        </trans-unit>
        <trans-unit id="1f436c1578c5a6e0df3e81a208373804f2a107b9" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.rem()</source>
          <target state="translated">Numeric$.CharIsIntegral.rem()</target>
        </trans-unit>
        <trans-unit id="53826046f816ebb4923ced64656e92db034e92db" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.sign()</source>
          <target state="translated">Numeric$.CharIsIntegral.sign()</target>
        </trans-unit>
        <trans-unit id="a18833a9423b2674de65fe0377d38546392439eb" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.signum()</source>
          <target state="translated">Numeric$.CharIsIntegral.signum()</target>
        </trans-unit>
        <trans-unit id="89c3d8d2c1e61a3e562aadde9673eaf5fc895785" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.times()</source>
          <target state="translated">Numeric$.CharIsIntegral.times()</target>
        </trans-unit>
        <trans-unit id="5d454e97d035aa3c0fb2f436824f38ba49bb8aee" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.toDouble()</source>
          <target state="translated">Numeric$.CharIsIntegral.toDouble()</target>
        </trans-unit>
        <trans-unit id="c8ce078c966475ec28832a3c4152e2401069ad3e" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.toFloat()</source>
          <target state="translated">Numeric$.CharIsIntegral.toFloat()</target>
        </trans-unit>
        <trans-unit id="27054786109b523db5f2b670db58775558485f2d" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.toInt()</source>
          <target state="translated">Numeric$.CharIsIntegral.toInt()</target>
        </trans-unit>
        <trans-unit id="20ffc3cd055d740092ce22fddae2210d6c254ebf" translate="yes" xml:space="preserve">
          <source>Numeric$.CharIsIntegral.toLong()</source>
          <target state="translated">Numeric$.CharIsIntegral.toLong()</target>
        </trans-unit>
        <trans-unit id="92401e397cb3ec022a8c23b81bf3427097a1a33f" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional</source>
          <target state="translated">Numeric$.DoubleIsFractional</target>
        </trans-unit>
        <trans-unit id="eb0bcfce4786c98ca7a90af6cc3d3a3a7e6a7b23" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$</source>
          <target state="translated">Numeric$.DoubleIsFractional$</target>
        </trans-unit>
        <trans-unit id="262380685494b7c628862ce8e0070359d948cc78" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.abs()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.abs()</target>
        </trans-unit>
        <trans-unit id="735218456da1f705e02adbc2072bb02cfb1d8c79" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.div()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.div()</target>
        </trans-unit>
        <trans-unit id="83fa89f59fb8f6ac0d5fc14d11b128f5c05bb2cd" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.fromInt()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.fromInt()</target>
        </trans-unit>
        <trans-unit id="dc13f12c10e1bf811f51928a79ff948203e9a4ad" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.minus()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.minus()</target>
        </trans-unit>
        <trans-unit id="3284f2041e85404a4573dbf67ea9c66f495619cd" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.negate()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.negate()</target>
        </trans-unit>
        <trans-unit id="7fe275eb7a67374957c5334cdcde11c251a20efd" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.parseString()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.parseString()</target>
        </trans-unit>
        <trans-unit id="89b0224162b9183204a2678bf0cd9260c3213584" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.plus()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.plus()</target>
        </trans-unit>
        <trans-unit id="6800a4260a1a8b65d504b277d2c4fba12e5c4567" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.sign()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.sign()</target>
        </trans-unit>
        <trans-unit id="8e0ee14aa96fd74a0bfd8fd7a03b9c2dec6017cb" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.times()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.times()</target>
        </trans-unit>
        <trans-unit id="d12c28d7dc8d9dc4713ca46be7ea2f1cc3d0cf1b" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.toDouble()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.toDouble()</target>
        </trans-unit>
        <trans-unit id="5d9468189b25e216292919a38a6c9c8f0683ba37" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.toFloat()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.toFloat()</target>
        </trans-unit>
        <trans-unit id="142aa93c75f7f2c1cf87f52c230f5633814f6c5c" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.toInt()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.toInt()</target>
        </trans-unit>
        <trans-unit id="36a2f52d6fa4b4e832f9a1475f539f3971ab68bd" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional$.toLong()</source>
          <target state="translated">Numeric$.DoubleIsFractional$.toLong()</target>
        </trans-unit>
        <trans-unit id="a0ffa043419eea4e40119fee948add0448cb01c2" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional()</source>
          <target state="translated">Numeric$.DoubleIsFractional()</target>
        </trans-unit>
        <trans-unit id="c81d9218af2036ea8fdd506ae16a8d649f038778" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.abs()</source>
          <target state="translated">Numeric$.DoubleIsFractional.abs()</target>
        </trans-unit>
        <trans-unit id="ec23900b1f992ef54cb0db0fdda3b7f6740cbf81" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.div()</source>
          <target state="translated">Numeric$.DoubleIsFractional.div()</target>
        </trans-unit>
        <trans-unit id="92b14b7cb9b63ec8dce93dcbe5ee442c9b369e06" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.fromInt()</source>
          <target state="translated">Numeric$.DoubleIsFractional.fromInt()</target>
        </trans-unit>
        <trans-unit id="916697b1733c48b0288fc3a000976f226ffecafd" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.minus()</source>
          <target state="translated">Numeric$.DoubleIsFractional.minus()</target>
        </trans-unit>
        <trans-unit id="6c043b2467f3f48b0cf79b3f31eb65a25cf7ce6b" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.negate()</source>
          <target state="translated">Numeric$.DoubleIsFractional.negate()</target>
        </trans-unit>
        <trans-unit id="865123910bab8bcdce3d7fc7182bee553f5c8e4f" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.parseString()</source>
          <target state="translated">Numeric$.DoubleIsFractional.parseString()</target>
        </trans-unit>
        <trans-unit id="9f0aa9c6fe57b99c968ba646aa70e7a26b8b5f4c" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.plus()</source>
          <target state="translated">Numeric$.DoubleIsFractional.plus()</target>
        </trans-unit>
        <trans-unit id="fff17d65dcae590f25d21322f016ac383128b0e0" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.sign()</source>
          <target state="translated">Numeric$.DoubleIsFractional.sign()</target>
        </trans-unit>
        <trans-unit id="0c43ea1768d8df66cad5cf85af7664997795454d" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.times()</source>
          <target state="translated">Numeric$.DoubleIsFractional.times()</target>
        </trans-unit>
        <trans-unit id="4693f5a05fb1f7d51993bdff2e4d0656dae22980" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.toDouble()</source>
          <target state="translated">Numeric$.DoubleIsFractional.toDouble()</target>
        </trans-unit>
        <trans-unit id="9971d0622b23fb45b87b0c2087499cb819da839d" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.toFloat()</source>
          <target state="translated">Numeric$.DoubleIsFractional.toFloat()</target>
        </trans-unit>
        <trans-unit id="0c627a3949173703d0ec8170a58b71e7f99b79f8" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.toInt()</source>
          <target state="translated">Numeric$.DoubleIsFractional.toInt()</target>
        </trans-unit>
        <trans-unit id="33ddbc00cc0f28c4cde355f85a56227d92d98c69" translate="yes" xml:space="preserve">
          <source>Numeric$.DoubleIsFractional.toLong()</source>
          <target state="translated">Numeric$.DoubleIsFractional.toLong()</target>
        </trans-unit>
        <trans-unit id="e9233dff29f5d9e5313efa6c8ef568934583c0db" translate="yes" xml:space="preserve">
          <source>Numeric$.ExtraImplicits</source>
          <target state="translated">Numeric$.ExtraImplicits</target>
        </trans-unit>
        <trans-unit id="89ab947c8a7a4d2f683288095eabc4f1ac26cf08" translate="yes" xml:space="preserve">
          <source>Numeric$.ExtraImplicits()</source>
          <target state="translated">Numeric$.ExtraImplicits()</target>
        </trans-unit>
        <trans-unit id="9349fced88e45097cf3d104cd56a88d3cf15a5a1" translate="yes" xml:space="preserve">
          <source>Numeric$.ExtraImplicits.infixNumericOps()</source>
          <target state="translated">Numeric$.ExtraImplicits.infixNumericOps()</target>
        </trans-unit>
        <trans-unit id="da8dcd9279e627d48f9a2eb649b6406fb236dde1" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional</source>
          <target state="translated">Numeric$.FloatIsFractional</target>
        </trans-unit>
        <trans-unit id="c5fcf1292d520deb7038dd24d42e906d41f66f8d" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$</source>
          <target state="translated">Numeric$.FloatIsFractional$</target>
        </trans-unit>
        <trans-unit id="e6710eb2600678f68044d75e332454b62b7e16b0" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.abs()</source>
          <target state="translated">Numeric$.FloatIsFractional$.abs()</target>
        </trans-unit>
        <trans-unit id="92ea72669bf47a2382b303162388aa1df1285c17" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.div()</source>
          <target state="translated">Numeric$.FloatIsFractional$.div()</target>
        </trans-unit>
        <trans-unit id="4dd444350b7b84cb0b675e3a836dbe193abd3c1c" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.fromInt()</source>
          <target state="translated">Numeric$.FloatIsFractional$.fromInt()</target>
        </trans-unit>
        <trans-unit id="949d721a6b001d7516862043f3f655ae5469ec4d" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.minus()</source>
          <target state="translated">Numeric$.FloatIsFractional$.minus()</target>
        </trans-unit>
        <trans-unit id="d95c8ab34e3a9efaceecf154dfe25df32ec2da4c" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.negate()</source>
          <target state="translated">Numeric$.FloatIsFractional$.negate()</target>
        </trans-unit>
        <trans-unit id="005d715dcb4d700aa7c6565dbcb4f7ae1a784d5b" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.parseString()</source>
          <target state="translated">Numeric$.FloatIsFractional$.parseString()</target>
        </trans-unit>
        <trans-unit id="b0539cdbf9ba8ae38b8697314277fbf93664918e" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.plus()</source>
          <target state="translated">Numeric$.FloatIsFractional$.plus()</target>
        </trans-unit>
        <trans-unit id="afc49488231240c51ec503b9fcb73c2b747ff252" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.sign()</source>
          <target state="translated">Numeric$.FloatIsFractional$.sign()</target>
        </trans-unit>
        <trans-unit id="0d0aef355725ec40994d37953dd1daebd4a8339c" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.times()</source>
          <target state="translated">Numeric$.FloatIsFractional$.times()</target>
        </trans-unit>
        <trans-unit id="5ab53477c8c0e43715bfbe5440a8698045f093d6" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.toDouble()</source>
          <target state="translated">Numeric$.FloatIsFractional$.toDouble()</target>
        </trans-unit>
        <trans-unit id="837dbb58d74b0fcfbae9951f476cfa4005696c68" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.toFloat()</source>
          <target state="translated">Numeric$.FloatIsFractional$.toFloat()</target>
        </trans-unit>
        <trans-unit id="8cc4152aceaeef21d8af6f7354e16403882b83da" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.toInt()</source>
          <target state="translated">Numeric$.FloatIsFractional$.toInt()</target>
        </trans-unit>
        <trans-unit id="0263cad137aa2ccf36c38381a7aa01aa430513d2" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional$.toLong()</source>
          <target state="translated">Numeric$.FloatIsFractional$.toLong()</target>
        </trans-unit>
        <trans-unit id="7d36ff21dd9658e6bcf142324fd80f55d0163926" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional()</source>
          <target state="translated">Numeric$.FloatIsFractional()</target>
        </trans-unit>
        <trans-unit id="6967c311716d8e7b11aa9d1ec547fd01ceb99fdf" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.abs()</source>
          <target state="translated">Numeric$.FloatIsFractional.abs()</target>
        </trans-unit>
        <trans-unit id="4abf9db4fa7ac96dc0de614d15e59fe2251d006c" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.div()</source>
          <target state="translated">Numeric$.FloatIsFractional.div()</target>
        </trans-unit>
        <trans-unit id="ec0fb911531ff8ab5224713877e96f68628743cb" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.fromInt()</source>
          <target state="translated">Numeric$.FloatIsFractional.fromInt()</target>
        </trans-unit>
        <trans-unit id="59a86571e8b91beec20ce5b954e9946b5fa203f5" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.minus()</source>
          <target state="translated">Numeric$.FloatIsFractional.minus()</target>
        </trans-unit>
        <trans-unit id="f7cdf1ffa90efe164ed0e7975da1da14df553095" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.negate()</source>
          <target state="translated">Numeric$.FloatIsFractional.negate()</target>
        </trans-unit>
        <trans-unit id="599fd4cd755f30d66135713cd6acb6e7c81489f4" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.parseString()</source>
          <target state="translated">Numeric$.FloatIsFractional.parseString()</target>
        </trans-unit>
        <trans-unit id="de091d9730360258695d479331951458f2b5d561" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.plus()</source>
          <target state="translated">Numeric$.FloatIsFractional.plus()</target>
        </trans-unit>
        <trans-unit id="afa4ab0562631cddd73f74875747e45ab7c00543" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.sign()</source>
          <target state="translated">Numeric$.FloatIsFractional.sign()</target>
        </trans-unit>
        <trans-unit id="24eacf55dd42766191caf41b762ecf167033de30" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.times()</source>
          <target state="translated">Numeric$.FloatIsFractional.times()</target>
        </trans-unit>
        <trans-unit id="14d6d44dc615438c4871646fddbbfc58fdf8b853" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.toDouble()</source>
          <target state="translated">Numeric$.FloatIsFractional.toDouble()</target>
        </trans-unit>
        <trans-unit id="730846609cc96a4df6d69790261a7f9165631516" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.toFloat()</source>
          <target state="translated">Numeric$.FloatIsFractional.toFloat()</target>
        </trans-unit>
        <trans-unit id="d23ca5c54341edffbed15c0bffd243f2dc7dff3a" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.toInt()</source>
          <target state="translated">Numeric$.FloatIsFractional.toInt()</target>
        </trans-unit>
        <trans-unit id="2ddb8308186ef1fe1e77b61b83b0e4e44f90ee05" translate="yes" xml:space="preserve">
          <source>Numeric$.FloatIsFractional.toLong()</source>
          <target state="translated">Numeric$.FloatIsFractional.toLong()</target>
        </trans-unit>
        <trans-unit id="f6c994b3ae2dea7bb1de88c1d680e3e43704804c" translate="yes" xml:space="preserve">
          <source>Numeric$.Implicits$</source>
          <target state="translated">Numeric$.Implicits$</target>
        </trans-unit>
        <trans-unit id="ccc864730b6ff707e24a38864c40cbfedceb9697" translate="yes" xml:space="preserve">
          <source>Numeric$.Implicits()</source>
          <target state="translated">Numeric$.Implicits()</target>
        </trans-unit>
        <trans-unit id="b787269a6eaef4396bb8533d3ab123ae2b8e7e41" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral</source>
          <target state="translated">Numeric$.IntIsIntegral</target>
        </trans-unit>
        <trans-unit id="28b13ad7655a680b6430fd661c31b96e8019e587" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$</source>
          <target state="translated">Numeric$.IntIsIntegral$</target>
        </trans-unit>
        <trans-unit id="63aaf13c0884296853adc811eda6125c62d09bed" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.fromInt()</source>
          <target state="translated">Numeric$.IntIsIntegral$.fromInt()</target>
        </trans-unit>
        <trans-unit id="0123d0b1d6691d4ff5de35030a734ac698dce5fb" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.minus()</source>
          <target state="translated">Numeric$.IntIsIntegral$.minus()</target>
        </trans-unit>
        <trans-unit id="59ad009f3777b3d924d691964031394b7b101983" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.negate()</source>
          <target state="translated">Numeric$.IntIsIntegral$.negate()</target>
        </trans-unit>
        <trans-unit id="a511644f575a734580d1e71aaa79a3ad3c76158f" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.parseString()</source>
          <target state="translated">Numeric$.IntIsIntegral$.parseString()</target>
        </trans-unit>
        <trans-unit id="a63c2074ce340623e333f5c671658eeebbdb596b" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.plus()</source>
          <target state="translated">Numeric$.IntIsIntegral$.plus()</target>
        </trans-unit>
        <trans-unit id="4f0f382e475e6b5ef162d54d803e7fdba5474515" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.quot()</source>
          <target state="translated">Numeric$.IntIsIntegral$.quot()</target>
        </trans-unit>
        <trans-unit id="92770c7130e40a7755ea4da20c7b46543131ce42" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.rem()</source>
          <target state="translated">Numeric$.IntIsIntegral$.rem()</target>
        </trans-unit>
        <trans-unit id="77c4bdfbb1895ed1794fc3ba52bc08780b34ff3d" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.sign()</source>
          <target state="translated">Numeric$.IntIsIntegral$.sign()</target>
        </trans-unit>
        <trans-unit id="9f3453e0ef050a18d9210d1e8dbd1895cf2736a3" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.signum()</source>
          <target state="translated">Numeric$.IntIsIntegral$.signum()</target>
        </trans-unit>
        <trans-unit id="5bfe231da74cb379f4c82135cff5ef6ba0c0729e" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.times()</source>
          <target state="translated">Numeric$.IntIsIntegral$.times()</target>
        </trans-unit>
        <trans-unit id="6ba3143634785a88ed56c4241cf38f2cae60b97f" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.toDouble()</source>
          <target state="translated">Numeric$.IntIsIntegral$.toDouble()</target>
        </trans-unit>
        <trans-unit id="121748a605ec621487c0558b7c2c70de13ca8298" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.toFloat()</source>
          <target state="translated">Numeric$.IntIsIntegral$.toFloat()</target>
        </trans-unit>
        <trans-unit id="a32481202d8a53da3429044cc0a4b435f2fab478" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.toInt()</source>
          <target state="translated">Numeric$.IntIsIntegral$.toInt()</target>
        </trans-unit>
        <trans-unit id="93aaf38c3abd3a910b3bc2d080154f613e289ab9" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral$.toLong()</source>
          <target state="translated">Numeric$.IntIsIntegral$.toLong()</target>
        </trans-unit>
        <trans-unit id="0f19838f95c9017d54298338823dffdf64469d83" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral()</source>
          <target state="translated">Numeric$.IntIsIntegral()</target>
        </trans-unit>
        <trans-unit id="e7c886deee9b5aefc686a560a9e4fcc819e552f1" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.fromInt()</source>
          <target state="translated">Numeric$.IntIsIntegral.fromInt()</target>
        </trans-unit>
        <trans-unit id="e76d65b3c30280aa449fabeb5c0a024c5cb5003a" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.minus()</source>
          <target state="translated">Numeric$.IntIsIntegral.minus()</target>
        </trans-unit>
        <trans-unit id="361ab948b2b70ec5acc2541fadc5dfea143e02da" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.negate()</source>
          <target state="translated">Numeric$.IntIsIntegral.negate()</target>
        </trans-unit>
        <trans-unit id="108be2279d9024e0a51afdff2ed5d5b1e7eb1552" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.parseString()</source>
          <target state="translated">Numeric$.IntIsIntegral.parseString()</target>
        </trans-unit>
        <trans-unit id="bb70deb864e489998db1084431a572183856e06c" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.plus()</source>
          <target state="translated">Numeric$.IntIsIntegral.plus()</target>
        </trans-unit>
        <trans-unit id="e96fed1d166df3d49d3e62a6ced3aeb8df89d6ab" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.quot()</source>
          <target state="translated">Numeric$.IntIsIntegral.quot()</target>
        </trans-unit>
        <trans-unit id="e4d5f5ef2201cea17ea2d4d845afbccf98567870" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.rem()</source>
          <target state="translated">Numeric$.IntIsIntegral.rem()</target>
        </trans-unit>
        <trans-unit id="fc1783aa5f5fde8b9140a138a425388beba57d22" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.sign()</source>
          <target state="translated">Numeric$.IntIsIntegral.sign()</target>
        </trans-unit>
        <trans-unit id="1c1973ce3f415822c6be4cb36f9e21b527fe397c" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.signum()</source>
          <target state="translated">Numeric$.IntIsIntegral.signum()</target>
        </trans-unit>
        <trans-unit id="98863fd70ddd3bda11cf6d49fb2679b2f7842c50" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.times()</source>
          <target state="translated">Numeric$.IntIsIntegral.times()</target>
        </trans-unit>
        <trans-unit id="2eeb7b220b5dbdd7d2e111b244e6d8363241505e" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.toDouble()</source>
          <target state="translated">Numeric$.IntIsIntegral.toDouble()</target>
        </trans-unit>
        <trans-unit id="3f919463492fdfc7e53a02c4e894cc2da4264659" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.toFloat()</source>
          <target state="translated">Numeric$.IntIsIntegral.toFloat()</target>
        </trans-unit>
        <trans-unit id="0212ceaebca0c708339545669db0f16fd9eff68f" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.toInt()</source>
          <target state="translated">Numeric$.IntIsIntegral.toInt()</target>
        </trans-unit>
        <trans-unit id="aca56f6a4a1e342f445abf0681ef0f1b845b7fd7" translate="yes" xml:space="preserve">
          <source>Numeric$.IntIsIntegral.toLong()</source>
          <target state="translated">Numeric$.IntIsIntegral.toLong()</target>
        </trans-unit>
        <trans-unit id="162c78b85804c8fa736427c98d55a243733f9b93" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral</source>
          <target state="translated">Numeric$.LongIsIntegral</target>
        </trans-unit>
        <trans-unit id="5387b0732a664cd283a212d28373d4127c8c8c9d" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$</source>
          <target state="translated">Numeric$.LongIsIntegral$</target>
        </trans-unit>
        <trans-unit id="7ded23174beaba765c9feff68a2e2c5da8ff5594" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.fromInt()</source>
          <target state="translated">Numeric$.LongIsIntegral$.fromInt()</target>
        </trans-unit>
        <trans-unit id="0c4c94653cfa034aec311112657ac29c14c4a0ce" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.minus()</source>
          <target state="translated">Numeric$.LongIsIntegral$.minus()</target>
        </trans-unit>
        <trans-unit id="2157434d7467de1d26c8765596bbcc85f0f7b156" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.negate()</source>
          <target state="translated">Numeric$.LongIsIntegral$.negate()</target>
        </trans-unit>
        <trans-unit id="f75a22e8d06686edbd86f23bcbb9e1984685f61d" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.parseString()</source>
          <target state="translated">Numeric$.LongIsIntegral$.parseString()</target>
        </trans-unit>
        <trans-unit id="d4feeac6345cd44af17ef40742426b6c4a9d61fc" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.plus()</source>
          <target state="translated">Numeric$.LongIsIntegral$.plus()</target>
        </trans-unit>
        <trans-unit id="2c74afa9f3d6753a581fd7aa5fb2188a8e0529da" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.quot()</source>
          <target state="translated">Numeric$.LongIsIntegral$.quot()</target>
        </trans-unit>
        <trans-unit id="e331a5514732f2b6368c496b375a0db40259cb0c" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.rem()</source>
          <target state="translated">Numeric$.LongIsIntegral$.rem()</target>
        </trans-unit>
        <trans-unit id="039757e238d147219581585342bde5159568d9f9" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.sign()</source>
          <target state="translated">Numeric$.LongIsIntegral$.sign()</target>
        </trans-unit>
        <trans-unit id="ef7eb130638b33347b1198acfe45afe48993883a" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.signum()</source>
          <target state="translated">Numeric$.LongIsIntegral$.signum()</target>
        </trans-unit>
        <trans-unit id="fc232389ec7923faa8365a51b6c6cb2b698827cb" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.times()</source>
          <target state="translated">Numeric$.LongIsIntegral$.times()</target>
        </trans-unit>
        <trans-unit id="1c6acbe81bcb0806eabfebd0bc17ab6e56a7d504" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.toDouble()</source>
          <target state="translated">Numeric$.LongIsIntegral$.toDouble()</target>
        </trans-unit>
        <trans-unit id="5972675c88e9008964d07deb21063def3210cdd4" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.toFloat()</source>
          <target state="translated">Numeric$.LongIsIntegral$.toFloat()</target>
        </trans-unit>
        <trans-unit id="f2ca8fbc1417ee534f5eac7a6657107c67e25334" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.toInt()</source>
          <target state="translated">Numeric$.LongIsIntegral$.toInt()</target>
        </trans-unit>
        <trans-unit id="7c3a8d911c7cd7091371d0a3f42cdb0ae5421761" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral$.toLong()</source>
          <target state="translated">Numeric$.LongIsIntegral$.toLong()</target>
        </trans-unit>
        <trans-unit id="b33b59ec4fabbd4967c5982757aa2c18df885f80" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral()</source>
          <target state="translated">Numeric$.LongIsIntegral()</target>
        </trans-unit>
        <trans-unit id="b9d61bb60d9276eba210ab0fc60b1cc8df7ec3f6" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.fromInt()</source>
          <target state="translated">Numeric$.LongIsIntegral.fromInt()</target>
        </trans-unit>
        <trans-unit id="dadb75af466c3dfd313fd22a005633d15a9968e3" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.minus()</source>
          <target state="translated">Numeric$.LongIsIntegral.minus()</target>
        </trans-unit>
        <trans-unit id="80dca0951293af06c0ad007088a8bab104725e42" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.negate()</source>
          <target state="translated">Numeric$.LongIsIntegral.negate()</target>
        </trans-unit>
        <trans-unit id="c9b524b15c89f0dbbe920ffd59e6719b05ca9d0b" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.parseString()</source>
          <target state="translated">Numeric$.LongIsIntegral.parseString()</target>
        </trans-unit>
        <trans-unit id="abb7d3a5ac2d748b5b3f5d55e08f3e1310bd8f6d" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.plus()</source>
          <target state="translated">Numeric$.LongIsIntegral.plus()</target>
        </trans-unit>
        <trans-unit id="d17833152e97710ea48ee3c59960beb6fb5e5481" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.quot()</source>
          <target state="translated">Numeric$.LongIsIntegral.quot()</target>
        </trans-unit>
        <trans-unit id="2459e19c3abbf21ba9b6e0ee40e3a533cb8a9913" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.rem()</source>
          <target state="translated">Numeric$.LongIsIntegral.rem()</target>
        </trans-unit>
        <trans-unit id="07bd44a8af9e8191214a4967d80ef6bd983c2b6c" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.sign()</source>
          <target state="translated">Numeric$.LongIsIntegral.sign()</target>
        </trans-unit>
        <trans-unit id="75f326c8b0be2e3e5d7d0a045e0e38ceab8cba6d" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.signum()</source>
          <target state="translated">Numeric$.LongIsIntegral.signum()</target>
        </trans-unit>
        <trans-unit id="4d2c7157508338eb1d94abb34f5fff2553baaa1d" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.times()</source>
          <target state="translated">Numeric$.LongIsIntegral.times()</target>
        </trans-unit>
        <trans-unit id="0b45dacd44522b839ca3168bf4864b2795a654a6" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.toDouble()</source>
          <target state="translated">Numeric$.LongIsIntegral.toDouble()</target>
        </trans-unit>
        <trans-unit id="4a33a93180ee0b45fd0656fc3a0660cd3b8add7f" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.toFloat()</source>
          <target state="translated">Numeric$.LongIsIntegral.toFloat()</target>
        </trans-unit>
        <trans-unit id="727f2b98b2c41be18f1294dfd3dcb7d81b9e77a4" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.toInt()</source>
          <target state="translated">Numeric$.LongIsIntegral.toInt()</target>
        </trans-unit>
        <trans-unit id="95acea20f824619f4df0cf572b56055e287af3bf" translate="yes" xml:space="preserve">
          <source>Numeric$.LongIsIntegral.toLong()</source>
          <target state="translated">Numeric$.LongIsIntegral.toLong()</target>
        </trans-unit>
        <trans-unit id="1f4f438528be5566d15dec8f7bee0da68b5eb027" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral</source>
          <target state="translated">Numeric$.ShortIsIntegral</target>
        </trans-unit>
        <trans-unit id="eeaa0899bf7f939e573556836b82a1f7ce91ff7a" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$</source>
          <target state="translated">Numeric$.ShortIsIntegral$</target>
        </trans-unit>
        <trans-unit id="62463cda33262471be7290efb6e7b7506871f782" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.fromInt()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.fromInt()</target>
        </trans-unit>
        <trans-unit id="66e4121da6e69b7b4d0b4cd6dc5bd649b785bc35" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.minus()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.minus()</target>
        </trans-unit>
        <trans-unit id="83cef2fb710be3ff05eff45fe94203ce7d64781b" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.negate()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.negate()</target>
        </trans-unit>
        <trans-unit id="71f3470973b2d81b0601dccb89be7ec9caa2939f" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.parseString()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.parseString()</target>
        </trans-unit>
        <trans-unit id="5fbee24ff791a9fa1028003c9a848ecfd6844290" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.plus()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.plus()</target>
        </trans-unit>
        <trans-unit id="13cfc4d695fc02f2460912d04ce6c31456566227" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.quot()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.quot()</target>
        </trans-unit>
        <trans-unit id="780a79ef67ab662dfce0325766df1bd0f4ef8c37" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.rem()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.rem()</target>
        </trans-unit>
        <trans-unit id="774fd7ddd42ec95a255ea7152d89831f1c51547d" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.sign()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.sign()</target>
        </trans-unit>
        <trans-unit id="528497899818a79d76605f1221928f0a52f361e8" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.signum()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.signum()</target>
        </trans-unit>
        <trans-unit id="f80903ae0f8cb1bfc2e4ebb55f06b79ae935dc0e" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.times()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.times()</target>
        </trans-unit>
        <trans-unit id="16543ecfb48f7056cc4b9271c8dcb6bdf0587dd3" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.toDouble()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.toDouble()</target>
        </trans-unit>
        <trans-unit id="b2e8e3fc356c87af935d887d20002ee533396920" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.toFloat()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.toFloat()</target>
        </trans-unit>
        <trans-unit id="830654ae26cc0877140370734d89171f1e9a1996" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.toInt()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.toInt()</target>
        </trans-unit>
        <trans-unit id="63318c43b9e5bab83b9b43b095d5085c357da9b4" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral$.toLong()</source>
          <target state="translated">Numeric$.ShortIsIntegral$.toLong()</target>
        </trans-unit>
        <trans-unit id="01d2a30d0f7595329314b4127ca4359cd8c69bc3" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral()</source>
          <target state="translated">Numeric$.ShortIsIntegral()</target>
        </trans-unit>
        <trans-unit id="a3ac448e9345a43c852686250bd78ebefe462f5d" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.fromInt()</source>
          <target state="translated">Numeric$.ShortIsIntegral.fromInt()</target>
        </trans-unit>
        <trans-unit id="258829968868739b82df379addb85b71b8801943" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.minus()</source>
          <target state="translated">Numeric$.ShortIsIntegral.minus()</target>
        </trans-unit>
        <trans-unit id="0367e433273a585e14b5918bb73e078babf3031f" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.negate()</source>
          <target state="translated">Numeric$.ShortIsIntegral.negate()</target>
        </trans-unit>
        <trans-unit id="479e87f2c8bcdc66c67f3049de165bbdf5acd7c5" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.parseString()</source>
          <target state="translated">Numeric$.ShortIsIntegral.parseString()</target>
        </trans-unit>
        <trans-unit id="787646e8d5e5eda351eba7b26f06541efb6bd466" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.plus()</source>
          <target state="translated">Numeric$.ShortIsIntegral.plus()</target>
        </trans-unit>
        <trans-unit id="699d018bf8cb2f0f1081b185f0a084d9f0b74b41" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.quot()</source>
          <target state="translated">Numeric$.ShortIsIntegral.quot()</target>
        </trans-unit>
        <trans-unit id="7530e2bbb3ca70eec40bcc25ee201d35acdff5a0" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.rem()</source>
          <target state="translated">Numeric$.ShortIsIntegral.rem()</target>
        </trans-unit>
        <trans-unit id="9f46fde1ab84a4c18f88d842eb92e61608ca3882" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.sign()</source>
          <target state="translated">Numeric$.ShortIsIntegral.sign()</target>
        </trans-unit>
        <trans-unit id="0e8311702b24db9ff3cc9675f4c77722dbdd2057" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.signum()</source>
          <target state="translated">Numeric$.ShortIsIntegral.signum()</target>
        </trans-unit>
        <trans-unit id="557aefe1804f5f60fadf38064f3adb29c12b7ac0" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.times()</source>
          <target state="translated">Numeric$.ShortIsIntegral.times()</target>
        </trans-unit>
        <trans-unit id="a101874fa3812d29dfbc8f50176949143672ccc4" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.toDouble()</source>
          <target state="translated">Numeric$.ShortIsIntegral.toDouble()</target>
        </trans-unit>
        <trans-unit id="f434097c8451237d2e6de8714ff8a649ec4e7fb5" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.toFloat()</source>
          <target state="translated">Numeric$.ShortIsIntegral.toFloat()</target>
        </trans-unit>
        <trans-unit id="80e615cab36e98cdc54399d2c6968bec13209b3d" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.toInt()</source>
          <target state="translated">Numeric$.ShortIsIntegral.toInt()</target>
        </trans-unit>
        <trans-unit id="6b257a8e72a40c4d37fb8dc7be198fb97607e4ef" translate="yes" xml:space="preserve">
          <source>Numeric$.ShortIsIntegral.toLong()</source>
          <target state="translated">Numeric$.ShortIsIntegral.toLong()</target>
        </trans-unit>
        <trans-unit id="17a31591540e77be0eeb5503741f6df19130048a" translate="yes" xml:space="preserve">
          <source>Numeric$.apply()</source>
          <target state="translated">Numeric$.apply()</target>
        </trans-unit>
        <trans-unit id="4bf3e4ac870d3aa43ed6a56fb7ba577c6c05d24d" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps</source>
          <target state="translated">Numeric.NumericOps</target>
        </trans-unit>
        <trans-unit id="945438dd924a3a4aa19f66d4652e09d92026fe93" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps()</source>
          <target state="translated">Numeric.NumericOps()</target>
        </trans-unit>
        <trans-unit id="0c28ef38c881844966bbdfbd04336ccfdc128922" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.*()</source>
          <target state="translated">Numeric.NumericOps.*()</target>
        </trans-unit>
        <trans-unit id="d1fc31b9d37c9dc4b2db1156936437633f303f4c" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.+()</source>
          <target state="translated">Numeric.NumericOps.+()</target>
        </trans-unit>
        <trans-unit id="34a765e9a817c38e4f8e406dd6ff2cce321c6cf4" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.-()</source>
          <target state="translated">Numeric.NumericOps.-()</target>
        </trans-unit>
        <trans-unit id="649006b3975a217936f9fab52570f2bc2e04bf99" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.NumericOps()</source>
          <target state="translated">Numeric.NumericOps.NumericOps()</target>
        </trans-unit>
        <trans-unit id="bbbda70d55528ff00aaa86ffed7ae0ffcd288372" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.abs()</source>
          <target state="translated">Numeric.NumericOps.abs()</target>
        </trans-unit>
        <trans-unit id="44f368d78bf0cc8eb5e362729bd2592790df951d" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.sign()</source>
          <target state="translated">Numeric.NumericOps.sign()</target>
        </trans-unit>
        <trans-unit id="dc081c4b54774059cd378b657d02944d066ff76c" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.toDouble()</source>
          <target state="translated">Numeric.NumericOps.toDouble()</target>
        </trans-unit>
        <trans-unit id="dfeda44a7cadacf3557fae2d78252ccc6576e148" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.toFloat()</source>
          <target state="translated">Numeric.NumericOps.toFloat()</target>
        </trans-unit>
        <trans-unit id="00a9e418f8bd1bb90a1f6fe4b247cab319805411" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.toInt()</source>
          <target state="translated">Numeric.NumericOps.toInt()</target>
        </trans-unit>
        <trans-unit id="1072bee0ce36ca45e11485f223f8c792a45e3675" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.toLong()</source>
          <target state="translated">Numeric.NumericOps.toLong()</target>
        </trans-unit>
        <trans-unit id="52ed08af4a0e24fba5ac59bafac66c233847820a" translate="yes" xml:space="preserve">
          <source>Numeric.NumericOps.unary_-()</source>
          <target state="translated">Numeric.NumericOps.unary_-()</target>
        </trans-unit>
        <trans-unit id="d05b751fd8e9fea66fc581eeb8bfe19c89e61ecd" translate="yes" xml:space="preserve">
          <source>Numeric.abs()</source>
          <target state="translated">Numeric.abs()</target>
        </trans-unit>
        <trans-unit id="231163d577d9963ff59e1c712fa64d15761d4d74" translate="yes" xml:space="preserve">
          <source>Numeric.fromInt()</source>
          <target state="translated">Numeric.fromInt()</target>
        </trans-unit>
        <trans-unit id="d3fe829e4e6861a49e69ae9962c2072ae1611520" translate="yes" xml:space="preserve">
          <source>Numeric.minus()</source>
          <target state="translated">Numeric.minus()</target>
        </trans-unit>
        <trans-unit id="d5e47e84711db9ef4cea9a0efa064b3ab10feddd" translate="yes" xml:space="preserve">
          <source>Numeric.mkNumericOps()</source>
          <target state="translated">Numeric.mkNumericOps()</target>
        </trans-unit>
        <trans-unit id="7276cf59abc1a0bb6ec6b75d5444b1764afcb14f" translate="yes" xml:space="preserve">
          <source>Numeric.negate()</source>
          <target state="translated">Numeric.negate()</target>
        </trans-unit>
        <trans-unit id="3540434a984da7f0e4d08a8e6642ced572409368" translate="yes" xml:space="preserve">
          <source>Numeric.one()</source>
          <target state="translated">Numeric.one()</target>
        </trans-unit>
        <trans-unit id="c296f8c1c9fa9f342d4decd43d2434cb0e722d86" translate="yes" xml:space="preserve">
          <source>Numeric.parseString()</source>
          <target state="translated">Numeric.parseString()</target>
        </trans-unit>
        <trans-unit id="7d28dac9ddcafaa7c813228b264c9847c20afb42" translate="yes" xml:space="preserve">
          <source>Numeric.plus()</source>
          <target state="translated">Numeric.plus()</target>
        </trans-unit>
        <trans-unit id="d754943442722c4fd71ba8b82e8bc2a59a29dc65" translate="yes" xml:space="preserve">
          <source>Numeric.scala</source>
          <target state="translated">Numeric.scala</target>
        </trans-unit>
        <trans-unit id="2e082052c0d55232a0cbb6e5d389c23f1fa29ade" translate="yes" xml:space="preserve">
          <source>Numeric.sign()</source>
          <target state="translated">Numeric.sign()</target>
        </trans-unit>
        <trans-unit id="2092fc968bc119a64cacbc43cfa93664be72537d" translate="yes" xml:space="preserve">
          <source>Numeric.times()</source>
          <target state="translated">Numeric.times()</target>
        </trans-unit>
        <trans-unit id="f313402414f32126ef0300756de58754fcf1b056" translate="yes" xml:space="preserve">
          <source>Numeric.toDouble()</source>
          <target state="translated">Numeric.toDouble()</target>
        </trans-unit>
        <trans-unit id="a4a9ae716e5c4696457abe1adf7425524175f615" translate="yes" xml:space="preserve">
          <source>Numeric.toFloat()</source>
          <target state="translated">Numeric.toFloat()</target>
        </trans-unit>
        <trans-unit id="f796750f7827114428c2b24d0bc870782f85b6bc" translate="yes" xml:space="preserve">
          <source>Numeric.toInt()</source>
          <target state="translated">Numeric.toInt()</target>
        </trans-unit>
        <trans-unit id="07a0f4c1f90f7117cbad9c9b71335b298573f25b" translate="yes" xml:space="preserve">
          <source>Numeric.toLong()</source>
          <target state="translated">Numeric.toLong()</target>
        </trans-unit>
        <trans-unit id="3754d3ca2e52c48827c58d1fac43fb894a00b5eb" translate="yes" xml:space="preserve">
          <source>Numeric.zero()</source>
          <target state="translated">Numeric.zero()</target>
        </trans-unit>
        <trans-unit id="95395a33fcdd62fd5a655b5516b7caa4be974696" translate="yes" xml:space="preserve">
          <source>NumericOps</source>
          <target state="translated">NumericOps</target>
        </trans-unit>
        <trans-unit id="7c434b4715e411ec6b1f8a7801d719ba58d4dd09" translate="yes" xml:space="preserve">
          <source>NumericRange</source>
          <target state="translated">NumericRange</target>
        </trans-unit>
        <trans-unit id="9b3c0ccd53d4c7daaaae70452a880d40a316c94d" translate="yes" xml:space="preserve">
          <source>NumericRange$</source>
          <target state="translated">NumericRange$</target>
        </trans-unit>
        <trans-unit id="0e790c75fafe2e0c3bf51e5de45cdb35534c36ac" translate="yes" xml:space="preserve">
          <source>NumericRange$.Exclusive</source>
          <target state="translated">NumericRange$.Exclusive</target>
        </trans-unit>
        <trans-unit id="a79325d5d87bd416a9df417e63d7e4b6bba40cb5" translate="yes" xml:space="preserve">
          <source>NumericRange$.Exclusive()</source>
          <target state="translated">NumericRange$.Exclusive()</target>
        </trans-unit>
        <trans-unit id="77b65d40c391f2cf276c368d18955153cd6f9808" translate="yes" xml:space="preserve">
          <source>NumericRange$.Exclusive.Exclusive()</source>
          <target state="translated">NumericRange$.Exclusive.Exclusive()</target>
        </trans-unit>
        <trans-unit id="db08e21088e198fd0b0f57cd6c84ee59c39569a4" translate="yes" xml:space="preserve">
          <source>NumericRange$.Exclusive.copy()</source>
          <target state="translated">NumericRange$.Exclusive.copy()</target>
        </trans-unit>
        <trans-unit id="81263c267adfedb7ab70a3327dc1564e7dfbf2f3" translate="yes" xml:space="preserve">
          <source>NumericRange$.Exclusive.inclusive()</source>
          <target state="translated">NumericRange$.Exclusive.inclusive()</target>
        </trans-unit>
        <trans-unit id="3cb2ecab4a08f8173bd35d84fca29bfbeb340372" translate="yes" xml:space="preserve">
          <source>NumericRange$.Inclusive</source>
          <target state="translated">NumericRange$.Inclusive</target>
        </trans-unit>
        <trans-unit id="be4264a8d39e5f6ebd2074d9046ac4a3c16d5941" translate="yes" xml:space="preserve">
          <source>NumericRange$.Inclusive()</source>
          <target state="translated">NumericRange$.Inclusive()</target>
        </trans-unit>
        <trans-unit id="5192f56fdef8d2f369718cb1222f5be11d1c9e62" translate="yes" xml:space="preserve">
          <source>NumericRange$.Inclusive.Inclusive()</source>
          <target state="translated">NumericRange$.Inclusive.Inclusive()</target>
        </trans-unit>
        <trans-unit id="0fc314d6e77c7adcde6b0211e509ba26344de60d" translate="yes" xml:space="preserve">
          <source>NumericRange$.Inclusive.copy()</source>
          <target state="translated">NumericRange$.Inclusive.copy()</target>
        </trans-unit>
        <trans-unit id="59ada4c0e669bc357a7a58feb4fdc6be33e07ed6" translate="yes" xml:space="preserve">
          <source>NumericRange$.Inclusive.exclusive()</source>
          <target state="translated">NumericRange$.Inclusive.exclusive()</target>
        </trans-unit>
        <trans-unit id="12739139cf9d26af5a8f44b8b6eea17c7865e53c" translate="yes" xml:space="preserve">
          <source>NumericRange$.apply()</source>
          <target state="translated">NumericRange$.apply()</target>
        </trans-unit>
        <trans-unit id="426c637c8c41142b987da6c1a73f5ef55660db68" translate="yes" xml:space="preserve">
          <source>NumericRange$.count()</source>
          <target state="translated">NumericRange$.count()</target>
        </trans-unit>
        <trans-unit id="59452e8b2862a89a5cf65712012c59a411960efe" translate="yes" xml:space="preserve">
          <source>NumericRange$.inclusive()</source>
          <target state="translated">NumericRange$.inclusive()</target>
        </trans-unit>
        <trans-unit id="1d9321df746e459331f3d7f07f9e2564bd447532" translate="yes" xml:space="preserve">
          <source>NumericRange.NumericRange()</source>
          <target state="translated">NumericRange.NumericRange()</target>
        </trans-unit>
        <trans-unit id="578fdd522c0acea882221ff8ce1297c272ac3f5c" translate="yes" xml:space="preserve">
          <source>NumericRange.apply()</source>
          <target state="translated">NumericRange.apply()</target>
        </trans-unit>
        <trans-unit id="1fb4a379d3acbef3c388acaf5cc92353b5f8c000" translate="yes" xml:space="preserve">
          <source>NumericRange.applyPreferredMaxLength()</source>
          <target state="translated">NumericRange.applyPreferredMaxLength()</target>
        </trans-unit>
        <trans-unit id="4b58aaae17801828d7fd09bc6e3a812ba14ebe4a" translate="yes" xml:space="preserve">
          <source>NumericRange.by()</source>
          <target state="translated">NumericRange.by()</target>
        </trans-unit>
        <trans-unit id="b7847e85b8ad6a51a48ed1e584f6703550fdf1d5" translate="yes" xml:space="preserve">
          <source>NumericRange.className()</source>
          <target state="translated">NumericRange.className()</target>
        </trans-unit>
        <trans-unit id="a8712bb7eb00a43e6736edace4cbe69dbe7352b8" translate="yes" xml:space="preserve">
          <source>NumericRange.contains()</source>
          <target state="translated">NumericRange.contains()</target>
        </trans-unit>
        <trans-unit id="bf82acbb728539286373afa91251996ad93f5b83" translate="yes" xml:space="preserve">
          <source>NumericRange.containsTyped()</source>
          <target state="translated">NumericRange.containsTyped()</target>
        </trans-unit>
        <trans-unit id="9ec75175a99847d39e1187710b18394562516242" translate="yes" xml:space="preserve">
          <source>NumericRange.copy()</source>
          <target state="translated">NumericRange.copy()</target>
        </trans-unit>
        <trans-unit id="6a2ca80406880bb2b2d078864e44e8ffc7bff70f" translate="yes" xml:space="preserve">
          <source>NumericRange.drop()</source>
          <target state="translated">NumericRange.drop()</target>
        </trans-unit>
        <trans-unit id="eec4f844417c94562ac9ce2bc45370480ec41472" translate="yes" xml:space="preserve">
          <source>NumericRange.end()</source>
          <target state="translated">NumericRange.end()</target>
        </trans-unit>
        <trans-unit id="abe14a7058017b0a9e52994fe92e958e6046a2c9" translate="yes" xml:space="preserve">
          <source>NumericRange.equals()</source>
          <target state="translated">NumericRange.equals()</target>
        </trans-unit>
        <trans-unit id="7e50da224a67eb0225f32016d7a4ae5dcfbfb888" translate="yes" xml:space="preserve">
          <source>NumericRange.foreach()</source>
          <target state="translated">NumericRange.foreach()</target>
        </trans-unit>
        <trans-unit id="90acfdf987c7d5cb41cc54a9a6302dd23499e220" translate="yes" xml:space="preserve">
          <source>NumericRange.hashCode()</source>
          <target state="translated">NumericRange.hashCode()</target>
        </trans-unit>
        <trans-unit id="e581d47edf1b69a35db8777ca43a81026205d184" translate="yes" xml:space="preserve">
          <source>NumericRange.head()</source>
          <target state="translated">NumericRange.head()</target>
        </trans-unit>
        <trans-unit id="f9169c0af96c71c589a2be680b7243a66defa873" translate="yes" xml:space="preserve">
          <source>NumericRange.init()</source>
          <target state="translated">NumericRange.init()</target>
        </trans-unit>
        <trans-unit id="54662dd2dd8ba52de277ebd61889680cd966dece" translate="yes" xml:space="preserve">
          <source>NumericRange.isEmpty()</source>
          <target state="translated">NumericRange.isEmpty()</target>
        </trans-unit>
        <trans-unit id="6eaef983d931af3c00f55b497d94f4c2414d8ebc" translate="yes" xml:space="preserve">
          <source>NumericRange.isInclusive()</source>
          <target state="translated">NumericRange.isInclusive()</target>
        </trans-unit>
        <trans-unit id="dd2b78e205fdbba8d709bc323ac5eab1d40a5c17" translate="yes" xml:space="preserve">
          <source>NumericRange.iterator()</source>
          <target state="translated">NumericRange.iterator()</target>
        </trans-unit>
        <trans-unit id="a37308e81006ccca2a879d3dc0c25fedcdcdd4bd" translate="yes" xml:space="preserve">
          <source>NumericRange.last()</source>
          <target state="translated">NumericRange.last()</target>
        </trans-unit>
        <trans-unit id="bf8a2b3f0a2f3167e1d8c9e0f8643880d96f6004" translate="yes" xml:space="preserve">
          <source>NumericRange.length()</source>
          <target state="translated">NumericRange.length()</target>
        </trans-unit>
        <trans-unit id="7ff970b1d220b39cda5b71191dcb9b21e3476d2c" translate="yes" xml:space="preserve">
          <source>NumericRange.max()</source>
          <target state="translated">NumericRange.max()</target>
        </trans-unit>
        <trans-unit id="865d1a5a44481a78be3d96cf312bbe9c7e3c7f21" translate="yes" xml:space="preserve">
          <source>NumericRange.min()</source>
          <target state="translated">NumericRange.min()</target>
        </trans-unit>
        <trans-unit id="280d8d64a9cc4f24ae8606d44975b7ee94384448" translate="yes" xml:space="preserve">
          <source>NumericRange.reverse()</source>
          <target state="translated">NumericRange.reverse()</target>
        </trans-unit>
        <trans-unit id="470a72df9194066d0042366eac9ec2b3471a5e0c" translate="yes" xml:space="preserve">
          <source>NumericRange.scala</source>
          <target state="translated">NumericRange.scala</target>
        </trans-unit>
        <trans-unit id="fb8c1c330de7450441de7272f347dbafc3419d8f" translate="yes" xml:space="preserve">
          <source>NumericRange.splitAt()</source>
          <target state="translated">NumericRange.splitAt()</target>
        </trans-unit>
        <trans-unit id="6450d0eb27c32396ebe0cd983f03b8a0a2f6ae39" translate="yes" xml:space="preserve">
          <source>NumericRange.start()</source>
          <target state="translated">NumericRange.start()</target>
        </trans-unit>
        <trans-unit id="0eb10a56a016625da039aa2d36c1c1f9119b480f" translate="yes" xml:space="preserve">
          <source>NumericRange.step()</source>
          <target state="translated">NumericRange.step()</target>
        </trans-unit>
        <trans-unit id="468e63b223fb7b69226c12b950733acc5ab5e305" translate="yes" xml:space="preserve">
          <source>NumericRange.stepper()</source>
          <target state="translated">NumericRange.stepper()</target>
        </trans-unit>
        <trans-unit id="36a0376dcf9960cb53332e370148efb0790c59f3" translate="yes" xml:space="preserve">
          <source>NumericRange.sum()</source>
          <target state="translated">NumericRange.sum()</target>
        </trans-unit>
        <trans-unit id="f0892091b04874ca7e2e213bcc5f2791b8f3e1df" translate="yes" xml:space="preserve">
          <source>NumericRange.tail()</source>
          <target state="translated">NumericRange.tail()</target>
        </trans-unit>
        <trans-unit id="88f6336b9dcc25007e08897fa107aadc5b80c100" translate="yes" xml:space="preserve">
          <source>NumericRange.take()</source>
          <target state="translated">NumericRange.take()</target>
        </trans-unit>
        <trans-unit id="dd6615c4eeee48493ddd61a0609e344ba760a01f" translate="yes" xml:space="preserve">
          <source>NumericRange.toString()</source>
          <target state="translated">NumericRange.toString()</target>
        </trans-unit>
        <trans-unit id="08a914cde05039694ef0194d9ee79ff9a79dde33" translate="yes" xml:space="preserve">
          <source>O</source>
          <target state="translated">O</target>
        </trans-unit>
        <trans-unit id="166fc30800d7435baf2034f7cb268177077343f0" translate="yes" xml:space="preserve">
          <source>Object scala.#::</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1210c15b6c5652283b8a9c2c21a9c0f1833d766c" translate="yes" xml:space="preserve">
          <source>Object scala.&amp;lt;:&amp;lt;</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="759d90312d29c5e4f8093497acb259e575f0c12f" translate="yes" xml:space="preserve">
          <source>Object scala.Array</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62f228c5b996ee161a36570a7909f150fe607140" translate="yes" xml:space="preserve">
          <source>Object scala.Boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="caa2ea69ff1ec575a770c131004e12b508bf7071" translate="yes" xml:space="preserve">
          <source>Object scala.Byte</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3ff9e7159cb50420a65fc241965fe3bd72793275" translate="yes" xml:space="preserve">
          <source>Object scala.Char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd50d5d2b379c7537f8d4f1328b602eb53af0187" translate="yes" xml:space="preserve">
          <source>Object scala.Console</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d27a3762b892b26ffd63780ad6c979761b8baa" translate="yes" xml:space="preserve">
          <source>Object scala.Double</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5f90d60be675723530674882092d2e7aa07e4f1c" translate="yes" xml:space="preserve">
          <source>Object scala.DummyImplicit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ca73046cdfdb2b2ff4db1cd2613f2fcfe2cbb2ec" translate="yes" xml:space="preserve">
          <source>Object scala.Enumeration.ValueOrdering</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1ac1556268a9ec32469c0aabf8ba5cdb4da4f2c9" translate="yes" xml:space="preserve">
          <source>Object scala.Enumeration.ValueSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9006af608b84a43c4831ccf151ef8af851996f34" translate="yes" xml:space="preserve">
          <source>Object scala.Float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13d11619e5453459841977ed360f8e5a95b64ff1" translate="yes" xml:space="preserve">
          <source>Object scala.Function</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a30b2aa06d2d8b2f2defb3e4a02a0fcd9f67074c" translate="yes" xml:space="preserve">
          <source>Object scala.Function1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="01aef156338aa5b1682bd667962451d7c6491b9e" translate="yes" xml:space="preserve">
          <source>Object scala.Int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfd7b3fd0e863db9a30ee4ce428b8bf1643ec2d9" translate="yes" xml:space="preserve">
          <source>Object scala.Long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4dc33e0b868c5ce47fbe85fe4d2f023ab3dfa9b6" translate="yes" xml:space="preserve">
          <source>Object scala.None</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9e985dbc5fe31f0cb8f82c9aa18bc83b1e6c85c4" translate="yes" xml:space="preserve">
          <source>Object scala.Option</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bfe6a97ce24c9913aa6a06b6856b6504ed78a05f" translate="yes" xml:space="preserve">
          <source>Object scala.PartialFunction</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="23ca2e29028758252a0b8cc7c843d3242b2979d6" translate="yes" xml:space="preserve">
          <source>Object scala.Predef</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c0b7d5b5260ccbf6a6bc0f4af7f749b2d97831d" translate="yes" xml:space="preserve">
          <source>Object scala.Product1</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d31300e680752a65fa3e997ca07fea0ef3e913c" translate="yes" xml:space="preserve">
          <source>Object scala.Product10</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="749168c2c896a93395873bcbee15dc86a9642a1b" translate="yes" xml:space="preserve">
          <source>Object scala.Product11</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7b7e7bf11bd89b3bd4680a93e1a9da6a27fcd223" translate="yes" xml:space="preserve">
          <source>Object scala.Product12</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53a94af6594fe6f04e9f4d5d6d38da3176f13b2a" translate="yes" xml:space="preserve">
          <source>Object scala.Product13</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26b499121aeda81cd85c6364cfb6bd89dc1e8d02" translate="yes" xml:space="preserve">
          <source>Object scala.Product14</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9f737d05a042c47bee9b4dd035938e8298fa3b8" translate="yes" xml:space="preserve">
          <source>Object scala.Product15</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="295f34a919962389cc886345eda01e870e76e645" translate="yes" xml:space="preserve">
          <source>Object scala.Product16</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a863503d2bb1051556742efcde33c004b7f054e" translate="yes" xml:space="preserve">
          <source>Object scala.Product17</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d3fd02631460a03cfc5298cd2e6c75b2826975e" translate="yes" xml:space="preserve">
          <source>Object scala.Product18</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8813e5f16f0ab5a64e9f5314f991bfb47ae7394f" translate="yes" xml:space="preserve">
          <source>Object scala.Product19</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f443ec88c75439d67217f67a4839af404c11b5d1" translate="yes" xml:space="preserve">
          <source>Object scala.Product2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1d9020a28a2780321e9c98641021eef8c1c304c4" translate="yes" xml:space="preserve">
          <source>Object scala.Product20</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ecf3c7c79ca38a56a19b2932a4a36a5ca4d19cc9" translate="yes" xml:space="preserve">
          <source>Object scala.Product21</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="842862f40dbb5577abf6717c9ed5e5208d0a1701" translate="yes" xml:space="preserve">
          <source>Object scala.Product22</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4382209e87655671c0f9ab8f5180a5658e8e8fa" translate="yes" xml:space="preserve">
          <source>Object scala.Product3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33daff9fd6f79685e5e7c5a6e02eb4e3bcc3cecc" translate="yes" xml:space="preserve">
          <source>Object scala.Product4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="031c6358f2a46d72a81c480247034a99d0f3ad77" translate="yes" xml:space="preserve">
          <source>Object scala.Product5</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79708dc5509f8e97b60f1290c3a16bb5353458ce" translate="yes" xml:space="preserve">
          <source>Object scala.Product6</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6cde166f6b8a30dd4ea34d8b7eaeb96bd1bb3ba5" translate="yes" xml:space="preserve">
          <source>Object scala.Product7</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="056f291be8249241eb6e6257b86390337de5cf5c" translate="yes" xml:space="preserve">
          <source>Object scala.Product8</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ece4154f203c6bd82927fc530c7128aa5d446cae" translate="yes" xml:space="preserve">
          <source>Object scala.Product9</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="214806688cbe277c578ff14088502bd4cbbb347e" translate="yes" xml:space="preserve">
          <source>Object scala.Proxy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba991e1c93e5a418ebce8eb13e2191ca3d4d8c25" translate="yes" xml:space="preserve">
          <source>Object scala.Short</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2badbbbe287d27069245e358c3e70f8551cf9db0" translate="yes" xml:space="preserve">
          <source>Object scala.Specializable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="042ca9902e82b518c85e026f09286b54cc8ca493" translate="yes" xml:space="preserve">
          <source>Object scala.StringContext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a3c4990bd342a9e9a38394bc80d654a5888bed94" translate="yes" xml:space="preserve">
          <source>Object scala.StringContext.s</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="074acc31c5d6134a60ec797dff0e30abd18fb346" translate="yes" xml:space="preserve">
          <source>Object scala.Symbol</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ac1fe1332275f610393290f69aa324f3fc65be60" translate="yes" xml:space="preserve">
          <source>Object scala.Unit</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60ad7eb16225822588dd757183f348314d199b20" translate="yes" xml:space="preserve">
          <source>Object scala.annotation.elidable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3408ef1486b5ef1f2f24aac0ea493f8202ea340b" translate="yes" xml:space="preserve">
          <source>Object scala.collection.+:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8c0311aa1f7d9fd62c28671ab4af02729b45f90a" translate="yes" xml:space="preserve">
          <source>Object scala.collection.:+</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5947a8875f866334f8a79de6f369edad3c52e3ba" translate="yes" xml:space="preserve">
          <source>Object scala.collection.AnyStepper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69a26b7b570e58c8ee9d950e0761632cb5989e8f" translate="yes" xml:space="preserve">
          <source>Object scala.collection.ArrayOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fa2458d472723959cb72e36f8849650004a7f06c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.BitSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0dd6fbc6a8bf9cfab0db9af1fb186c3ca73ff9fe" translate="yes" xml:space="preserve">
          <source>Object scala.collection.BitSetOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d88dc3a4f4824e047aac7c4b05c79a03f6ac19c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.BuildFrom</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2889b1bcb6eba63e00d4eee9678cc14a4969db3" translate="yes" xml:space="preserve">
          <source>Object scala.collection.ClassTagIterableFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b685ec0e01e06b3941bf0c7527f2aeaf5f5eff14" translate="yes" xml:space="preserve">
          <source>Object scala.collection.ClassTagSeqFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ee1ee2f7877455bc2b98fe8397eedf4beef98db3" translate="yes" xml:space="preserve">
          <source>Object scala.collection.DoubleStepper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="644e3ea56b942aa2ab103f8aac9b05c14a01d579" translate="yes" xml:space="preserve">
          <source>Object scala.collection.EvidenceIterableFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ab99364e4e8cb253c9075debe5ea6cce7e00c8b" translate="yes" xml:space="preserve">
          <source>Object scala.collection.Factory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d658db9a9f938fc94f2a615659464b2e2fccbe45" translate="yes" xml:space="preserve">
          <source>Object scala.collection.Hashing</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3eabd351c432172afb99280693a5f5b5fa49f00c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.IndexedSeq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="292a72dcfb1af9dabb07f1d08d3bb4d84afa3bf8" translate="yes" xml:space="preserve">
          <source>Object scala.collection.IndexedSeqView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8d6236cf174405b4eb98aca1b9824a44d02e945f" translate="yes" xml:space="preserve">
          <source>Object scala.collection.IntStepper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5e088495de49512a7fdd43049f6efb19d8b79c73" translate="yes" xml:space="preserve">
          <source>Object scala.collection.Iterable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d74b17249b54f9d07d9dc4e557fffca3ea7aca1" translate="yes" xml:space="preserve">
          <source>Object scala.collection.IterableFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6e4786c51c02d3a31e2fe16c8ea1d3997a14cc90" translate="yes" xml:space="preserve">
          <source>Object scala.collection.IterableOnce</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="69bd3190917be151cd6fa83be22f2c57956bf5b9" translate="yes" xml:space="preserve">
          <source>Object scala.collection.IterableOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1fc4c9c5173da4c1151303faad16fbb6bc89a7eb" translate="yes" xml:space="preserve">
          <source>Object scala.collection.Iterator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f4617defde05ad35a74de7be4a177b68c09061d" translate="yes" xml:space="preserve">
          <source>Object scala.collection.JavaConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="602309b32f757d4b6cae51eb87cb99527a32b85c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.LazyZip2</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60fff3f9a634b383f835b5dcc2100fe573159986" translate="yes" xml:space="preserve">
          <source>Object scala.collection.LazyZip3</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8cf10376cc61d9a2c21c7972972540d9f70ca4fc" translate="yes" xml:space="preserve">
          <source>Object scala.collection.LazyZip4</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1e101901d878808aac2a0c1d27f15b3c4c19a8be" translate="yes" xml:space="preserve">
          <source>Object scala.collection.LinearSeq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4abcb72a870217c3afac86ec8494e7dc9ce13c4" translate="yes" xml:space="preserve">
          <source>Object scala.collection.LongStepper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ed3a11b84bd9eac4fb346f867f0a62b38c656f63" translate="yes" xml:space="preserve">
          <source>Object scala.collection.Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3614df55480035261650c1f223ea067655c8784d" translate="yes" xml:space="preserve">
          <source>Object scala.collection.MapFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8769393ca82bcacfa309070555e7a198da1303c8" translate="yes" xml:space="preserve">
          <source>Object scala.collection.MapOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff4eda6de4c024bbeb549f48e5aeba13d9575d78" translate="yes" xml:space="preserve">
          <source>Object scala.collection.MapView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="254475c3855e373bcbeef619a222453350879888" translate="yes" xml:space="preserve">
          <source>Object scala.collection.Searching</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd9d1529c2147b85ef7dc65a433e9f61f98881a9" translate="yes" xml:space="preserve">
          <source>Object scala.collection.Seq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4439725c6aa3610703979b52ba010ff5a12ca497" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SeqFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2ca434b243047d4fef76d90ff6bcab05ca9c52fc" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SeqMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9b419617bdf204245fc72bc194b4d1823057ce85" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SeqOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="284f6925113b7fb3e1860a866e4ea5e148d42ad6" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SeqView</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="86d9ebdf245242fa741d4d6dfa4a6b5cb38e5a72" translate="yes" xml:space="preserve">
          <source>Object scala.collection.Set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="62d856291f2c6a6a47a47da94d5877abd2abc0c1" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SortedIterableFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="145f5a28a5ced33e4a499dbf3eaa2964e9468b48" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SortedMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="401820efa383edea016136cac5adaea42b860c86" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SortedMapFactory</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6674a860198ef870cdafb9cf0d0261fb7de2fb12" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SortedMapOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="df0ff96bcd13ed2ac464e05594740cc062c8d9e7" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SortedSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e9f54f328e10e794b160d7713786db29ca7281c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.SortedSetOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e8e8cf5220266b1d976a5b5189b2022a130ea8ee" translate="yes" xml:space="preserve">
          <source>Object scala.collection.Stepper</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48e8c17638d36f9033cd21bc4c21c3f74fbba63c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.StepperShape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="479362af705a7fb12ac5b34e41f0194aa21186d1" translate="yes" xml:space="preserve">
          <source>Object scala.collection.StringOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="616f59e04d4442c062ef49822a0b9e490640411b" translate="yes" xml:space="preserve">
          <source>Object scala.collection.View</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d3a2c66a508de5e67d8df8fff1596a98f91c93d8" translate="yes" xml:space="preserve">
          <source>Object scala.collection.View.Empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="423c117234a947f5d4d691269ea0a972f6b81c81" translate="yes" xml:space="preserve">
          <source>Object scala.collection.View.Filter</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b33f76db0dc687209fdf22718d8ecc490752a274" translate="yes" xml:space="preserve">
          <source>Object scala.collection.concurrent.TrieMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4ad9528c19c8556986fa5614f74d7d265d8288b1" translate="yes" xml:space="preserve">
          <source>Object scala.collection.convert.ImplicitConversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="824fd1e424fdfeff28fd610656f5217a0d800951" translate="yes" xml:space="preserve">
          <source>Object scala.collection.convert.ImplicitConversionsToJava</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4bbee4d3ba00012da0956c50f036df9d23eca188" translate="yes" xml:space="preserve">
          <source>Object scala.collection.convert.ImplicitConversionsToScala</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4e617da669dc41a0b42b4fd69721610f84e96c24" translate="yes" xml:space="preserve">
          <source>Object scala.collection.convert.StreamExtensions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e25864ea1e9267e2a22dcb8ec85e76c1aed06dec" translate="yes" xml:space="preserve">
          <source>Object scala.collection.convert.StreamExtensions.AccumulatorFactoryInfo</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91b488d8329e15f3ab171c438eed4718a9a5077a" translate="yes" xml:space="preserve">
          <source>Object scala.collection.convert.StreamExtensions.StreamShape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7824472fac6b815be96bbffe6ca15ce4aed28e8a" translate="yes" xml:space="preserve">
          <source>Object scala.collection.convert.StreamExtensions.StreamUnboxer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="47c21d300389815568f91eb4f0c38227cb30485a" translate="yes" xml:space="preserve">
          <source>Object scala.collection.generic.IsIterable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="589d902d5062260dde1991b86ddfea239883e984" translate="yes" xml:space="preserve">
          <source>Object scala.collection.generic.IsIterableOnce</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="413ef3f9e580b02710e799c7a260e41cc78efa6e" translate="yes" xml:space="preserve">
          <source>Object scala.collection.generic.IsMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e8fb00cd62496c3cd19fc0336b291a19d1053b8" translate="yes" xml:space="preserve">
          <source>Object scala.collection.generic.IsSeq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a4563def25c80b686297b077a55e4f365064c72" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.ArraySeq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bd750593086e1ef0b1a4c433886beb3cf4672950" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.BitSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4160da2f8152617f5916335626910a33028dd085" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.HashMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="67dfc4c39360db925744090e8cab5a9576cd2a71" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.HashSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2be488431d6071190bdcfb708ffbae75382cb347" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.IndexedSeq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="06ae5daf564550b81962d2ef0f110ac8a5f58bff" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.IndexedSeqDefaults</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5da52a985234f1dfb3d963b1f808f1981c6925a3" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.IntMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b29a2387d1fe1af4a016f45857bc173c3e0596e9" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Iterable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6a4ec33756ebf4e577b1feeebc9bc6866da6b5a3" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.LazyList</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c25ff8f6e36c3d1b74718fe89612ad99e1c5b76f" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.LazyList.#::</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309352af284a3e9c5985a2045d30e2f3287e7ca9" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.LazyList.cons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2e3865ef266beb9be2133f221db3bf363aff322" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.LinearSeq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d36620dd7d5999331cc378938fa586adda85ce41" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.List</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0f31303b2e010c3b02d77792ec3dcee0d838882b" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.ListMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b41ff969c248d97b7c60a28f7600c74043e5be51" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.ListSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="13ff652ec20575bc73a95009acd799aad02adf37" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.LongMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="711006dca0441a58063346bd5918c28c047ccaad" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="676c80cbf7921edef6554688295a44e22956660f" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Nil</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59c9a73e0353e65be12bb559813f9f00a6405ca7" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.NumericRange</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="243359f779de20df8580dbbf84ec7758c94c4228" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="630665360ba5fa51f2379c2b68eb04bc90c853f6" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Range</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="532db733cfe294eb185300ed45b9a0db6183262c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Range.BigDecimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bcfe870f38fa7a84453c17336c1d373488a5718" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Range.BigInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63352abd5215ab54192de84cf7ed0801d545b4e6" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Range.Int</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e47020c72a92f0f40babdb0dad24bbc2f2ee442c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Range.Long</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2727c94f594b8c4bfb86ac4c1ca0699d2bfdf6f3" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Seq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a7e1c2e87ce3dfacb38b2ee196c5d34890808e8a" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.SeqMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9201be5db7f225f400ef2e7f0742b0ddfb5f276a" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8243699537f1e720a4909b38e41df5ee1c46b48a" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.SortedMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="657151805f49bb3288502b850a712347628a1830" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.SortedSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6473df4fbcf8f2d3304781982f6652ef9f7d955c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Stream</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e6d21f5f5736183c0f3ce3752d5a962749cffbc6" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Stream.#::</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6772b5c8cdd3e94e556b27927d9dbf3658b230ec" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Stream.Empty</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f3231fd913bbcc62c9214ab597e1d7f269aa77fe" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Stream.cons</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2748ad77810b89b171808f5d4281f99513eaf29" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.TreeMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0e6e42061fd0f53c1b31b482bdbe3697990fb097" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.TreeSeqMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0cb7e67ef9bf62e5090a3879096dd3a8e1babee8" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.TreeSeqMap.OrderBy</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="33150f2d2d425ada2a9f6a538e7308245e8d52ee" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.TreeSeqMap.OrderBy.Insertion</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5858d381a03db7ba895fce3f66e2281687c41ecf" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.TreeSeqMap.OrderBy.Modification</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="246a79a9afcca22cb02706b35d5d21727a51991e" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.TreeSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c3fd7e89bbe9ef4bda35ee9d0f5924123253ddf4" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.Vector</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="967dc80a9f2550402797ad095279dc174688f1c2" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.VectorMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9f6141070cd5909afe4eb4e3998a6f0528527827" translate="yes" xml:space="preserve">
          <source>Object scala.collection.immutable.WrappedString</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="050a1d2141746bff81b8fff7d6fa2138130495ae" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.AnyRefMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6ce87d514bc47639e49190ac19d3149a3337ba89" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.ArrayBuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="309700c14c3e2f0c8f3359f58089ab0aede1e10d" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.ArrayBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="59ac215b266bd7f483a096dcdf5e182dd7ccd2bc" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.ArrayDeque</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26272b809ebd157f66dd8e81c34018eb6039766c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.ArraySeq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="979be3d8d42fe82894466b180e97f2c5a5dc7704" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.BitSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d60d835e16515c001ec13309641d71616ec1f7ca" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.Buffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05209b41cbd25b2844c910e5a702871b4e577dd5" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.CollisionProofHashMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5fd1266120e52c96ef11dcbbd4321e263541aa23" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.Growable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b8162d45a93e45fd7af7f007cf50ce002f00c664" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.HashMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="97412cc5ac60d4b3e6402cbfe5ce48a6e2347c7f" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.HashSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="319560d4c278534b8bd5006bba8031b4b92da355" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.IndexedBuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1687689748d7d10536201ac91272a87ea15ab628" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.IndexedSeq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0d6fa3d0fa286d8abe22387f233c51e7d5bb9363" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.Iterable</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3982c0f75bb4c8826649ffa722c5828a0586caf5" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.LinkedHashMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c29746c5a9d957a51966d54422f03a2dc119c2b1" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.LinkedHashSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="873ed8370683382152359d29cfdd6e291f5553c6" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.ListBuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9b7d49fbb03e7e77ed642b8c1bd36c20e15782b" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.ListMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f06accd627769fcd15e010104f2ebaa6e5f8427d" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.LongMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="909d3e8385fba21906618276f7c4c0b8fdfadc26" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.Map</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6044f46b828ce3f1429063b3bead01859d0b01a7" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.OpenHashMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d383ec87143107f9f6f7e3cdad1cf7cbac06bcc4" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.PriorityQueue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bec344373bc8f4d61a38d5a742ea0ac2c2b209e3" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.Queue</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3935e85887048e0faaab5340f8c14df7807c6386" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.Seq</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8af954e7d7560be470a5791f9ee415572fe9285" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.SeqMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22b832f061fc2992e70d643f1ae26a6a595a314c" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.Set</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dc0a6c9aad2f70ee5e0e9bfa95a705105e4403c2" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.SortedMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2d415962cc0c30561f33b3a33169c586fe8a3c6d" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.SortedSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b69a6381ba2f91b1d6f00edf1e45a2cf25458244" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.Stack</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4193ad93bc230eed931a53012148d0c9ba116612" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.StringBuilder</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="15f9d9b935bad78cffac54eebfc66e1e6f51468f" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.TreeMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26469095466035fa9df441e868533a982d3cf5cf" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.TreeSet</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b493b1afac2f8ec80e1b463723856d07a77676cb" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.UnrolledBuffer</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcb40bd364ee0a25f501b3f8bc88db337dec3b72" translate="yes" xml:space="preserve">
          <source>Object scala.collection.mutable.WeakHashMap</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="48edeff44c46c0a476d585783e633b783e9fd085" translate="yes" xml:space="preserve">
          <source>Object scala.compat.Platform</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e91495fe68c123a909bda0d519bcd2751d294eb" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.Await</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c7763e6808986abbe4bea974d99ca4cbb81e5909" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.BlockContext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c4709abb5684351851d2440522fce5059ad84fb" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.ExecutionContext</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0038814e9167383779262ff89224c3c75a481d54" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.ExecutionContext.Implicits</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f179355ae43d6632cc0bedb60152496c4753501e" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.ExecutionContext.parasitic</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22bebd269be32464c1edbdab7723128f32b60c59" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.Future</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aef497712b2984a0425efceeb01f8c92ed27c54e" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.Future.never</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="60d273fc82deabadd7908550c12c8fb2ab1a5656" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.JavaConversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0d13ea99eb881b3930e10cdf7326c15c47f35c1" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.Promise</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f77d588a67fdd259e09122ac18854ac756557ca" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.Deadline</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="934172fa4b24189ecc590430ee1f3c3e3196aa40" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.Deadline.DeadlineIsOrdered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="341faf580235d00b893bc2fbc0a6d26257b2368a" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.Duration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b72ea10808efd048fe3e324f93419ddba6c6d4dd" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.Duration.DurationIsOrdered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f22d05b69ff344cac3b5590b57687df82027ac1c" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.DurationConversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="864b361fd845e02af3df8777d0f8ffb696f5d55a" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.DurationConversions.fromNowConvert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0b98864f36c851e43cf5663ed6198f3c13d47c" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.DurationConversions.spanConvert</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f60d148eeb9b2166a8c47953fef41a20c397d90" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.FiniteDuration</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f5d7648bd7dc036c82459733a861fd7c68299f52" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.FiniteDuration.FiniteDurationIsOrdered</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5caa443a58b7b027bb21fd4767991d568cfb9b02" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.fromNow</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3896def9e6c749f5591e2986ccc70f685a508a38" translate="yes" xml:space="preserve">
          <source>Object scala.concurrent.duration.span</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2942db1876504e195fbe81b1cbbddc8a5b15957b" translate="yes" xml:space="preserve">
          <source>Object scala.io.AnsiColor</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ab1850998e98ecddf91e9926c21f0464a8f7b36b" translate="yes" xml:space="preserve">
          <source>Object scala.io.Codec</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5625f1bb4b2c4598a3aece1f52e0e27d8600cb39" translate="yes" xml:space="preserve">
          <source>Object scala.io.Source</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6eadf3ffb816939381eafcf2b005ecfef823b341" translate="yes" xml:space="preserve">
          <source>Object scala.io.Source.NoPositioner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f2aca343c186ad81db897fe44a2d16f351cd40e2" translate="yes" xml:space="preserve">
          <source>Object scala.io.Source.RelaxedPosition</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="839f2a561410d3af9f79be76c811e19600a19e1e" translate="yes" xml:space="preserve">
          <source>Object scala.io.Source.RelaxedPositioner</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f7f515aae7323f1b2c92cee3b9c29fa0dce6c02" translate="yes" xml:space="preserve">
          <source>Object scala.io.StdIn</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9e1bc46221e5dde568b3f51a743387e37094c1d" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.Accumulator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="53cbea3adb571ec4653e73157eda7e22f4666b9b" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.Accumulator.AccumulatorFactoryShape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9fa927644293ce7220907df3a9467634852f966" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.AnyAccumulator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="43e3550d17fcb3f2dea5d895dcff66894ddab6db" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.CollectionConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c22b75d4b8803a10f383292a5ecb262f3a4d5a0d" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.DoubleAccumulator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b1a636d80e5e8f77a0410f78981c57c6dd8f276c" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.DurationConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb134cb1767b3dcace84b973b376c2efa5fd2843" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.FunctionConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7d06acaa156749eca2faa970a5eb9f0f3c00393d" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.FunctionWrappers</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="27a64bb12071954e93e2f0f10661f777941879df" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.FutureConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="56a15dc3e61823cc177a107cb653a65eea4c7883" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.IntAccumulator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c713cfa41ee4c1139637b1523fb3997b248cbf41" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.LongAccumulator</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="560e96d712dceeb2186c61bc8eb4742225f32163" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.OptionConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="edc506809865e4d4b6dbe6c82942d1b1bffc6b38" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.OptionShape</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="34df8f983f12b6b1f995b1dcd4d089838b62eef7" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.StreamConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e5070466de6f3f6333f7176982688d3943b7e5e" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.javaapi.CollectionConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ff129bf76fd14c68030502d7eea5384743f8380" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.javaapi.DurationConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="41210f93ff4aef12da74af5ccdfa8a920be93966" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.javaapi.FunctionConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de64578d27ccb4ae4790b1feea31df048874340a" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.javaapi.FutureConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d03e2051ac22216a8a7fe587a4def041df242ca8" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.javaapi.OptionConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="49caae912080eb430f391622d2f20bcadf743f96" translate="yes" xml:space="preserve">
          <source>Object scala.jdk.javaapi.StreamConverters</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="de55a792b8ea2f8471c0b462c1ad50551f156c70" translate="yes" xml:space="preserve">
          <source>Object scala.language</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="98c0f74efd6a4de4dc5e24ad64f1fd94d910470c" translate="yes" xml:space="preserve">
          <source>Object scala.language.experimental</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a29f56402f83b31921dfbfe25dd7adc23ed26baf" translate="yes" xml:space="preserve">
          <source>Object scala.languageFeature</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="584f8ccea9c3deb122c2ea0c420317ada8c971af" translate="yes" xml:space="preserve">
          <source>Object scala.languageFeature.dynamics</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ba8c369d59ca6387b8002aceccdeb2de2989a656" translate="yes" xml:space="preserve">
          <source>Object scala.languageFeature.existentials</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="048328705986a6a032d517d1908ea7743e8dd68b" translate="yes" xml:space="preserve">
          <source>Object scala.languageFeature.experimental</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8ca5c84148c7d2447ee0c6ccfd89e9cace0855a7" translate="yes" xml:space="preserve">
          <source>Object scala.languageFeature.experimental.macros</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6f6762532fd2b7f86b5a568b97e6f802fa3d0fe7" translate="yes" xml:space="preserve">
          <source>Object scala.languageFeature.higherKinds</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7bdedfe49382b4d142afd84a8cb1eb13b1487d9f" translate="yes" xml:space="preserve">
          <source>Object scala.languageFeature.implicitConversions</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="36150591bda0aaa636b8b7d62c73e8848a4ed7cd" translate="yes" xml:space="preserve">
          <source>Object scala.languageFeature.postfixOps</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eae2efeff4946a33bfdeff4b085db4ad1aeba106" translate="yes" xml:space="preserve">
          <source>Object scala.languageFeature.reflectiveCalls</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6b5fa59f836a86b616a5af33dc944dae899fbe0e" translate="yes" xml:space="preserve">
          <source>Object scala.math.BigDecimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bb61f4a4f41ad3d59b67c27b61ccc33adb47541e" translate="yes" xml:space="preserve">
          <source>Object scala.math.BigDecimal.RoundingMode</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="07c18c7020b0745bb1999fcc31929099bff09392" translate="yes" xml:space="preserve">
          <source>Object scala.math.BigInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="807b4539f5b756a37e126ad4d7817e5ff1139151" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a70191004d6a2c64ea96bc92f6c13bf9f128e960" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.BigDecimal</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="00895754cad629c68530cbc9c2cdba5e3a17acd9" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.BigInt</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5ef16115a577fb4704db3cbbb838774eaed84a69" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Boolean</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3009549c2abc2d44c532ac2db7098370ab85a93b" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Byte</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="75401f9397c3a312585eab2a617f4b1d28dea1ab" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Char</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="91337f7dccc854b594fdaa7f7902e864088bab7e" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.DeprecatedDoubleEquiv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a751b2ff950eebebe272275b1bf9dfa7fc608e23" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.DeprecatedFloatEquiv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7f8788ca1088accad2e4103a5bf2d384a6c4af77" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Double</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2222f1e66b5d1bd0e4a2b34950b7aedf4e3c2426" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Double.IeeeEquiv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d4c0d44cf49559d7f041927e131ea28dbee586c" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Double.StrictEquiv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b4fc1fe8072dc275baed1e72188ad9b215c0405f" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Float</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6862744054d625bdea4a459b43df5fa37e4cb8b2" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Float.IeeeEquiv</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="04efb15ede6313a6003bdf4b820330a8a68508d2" translate="yes" xml:space="preserve">
          <source>Object scala.math.Equiv.Float.StrictEquiv</source>
          <target state="new"/>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
